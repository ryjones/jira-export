Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Relates),Inward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Business Value),Custom field (Commit Levels),Custom field (Current Status),Custom field (Design),Custom field (Design Status),Custom field (Documentation Impact),Custom field (Documentation Status),Custom field (Epic Color),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (Executed),Custom field (Found in Commit),Custom field (Function Test Status),Custom field (Must Fix),Custom field (Original story points),Custom field (Parent Link),Custom field (Rank),Custom field (Release Note),Custom field (Release Note Required),Custom field (Root Cause Analysis),Custom field (SDK Impact),Custom field (Sample/Tutorial),Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Custom field (Steps to Reproduce),Custom field (Story Points),Custom field (System Test Impact),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Team),Custom field (Test Plan),Custom field (Test Result),Custom field (Test Result Details),Custom field (Test Type),Custom field (Triaged),Custom field (Usage),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Workaround),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitCommitsReferenced),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Deterministic/offline deployment for Node.js smart contracts,FABCN-1,33946,,Documentation,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,mbwhite,mbwhite,20/Sep/18 9:48 PM,18/Nov/20 7:48 PM,28/Oct/23 2:28 AM,,,1,cc-triaged,,,,,,"AIM:

To have a Chaincode Container for Node.js chaincode that has production useability characteristics

 

OBJECTIVES:
 * To not require internet access to instantiate, npm install is considered non-deterministic for production use.
 * Should an .npmrc file be required, then this should not form part of the chaincode signature - such that different companies may be permitted their own npm proxy servers.
 * Chaincode should be able to be written without having to reference the shim code/library

 

MORE INFORMATION:

https://jira.hyperledger.org/browse/FAB-11555

 ",,heatherp,mbwhite,nasht00,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-16,,,,,,,,,,,,,,,,,,,,,,,,,,,https://docs.google.com/document/d/1s0A8gXcc3lBownfHB_hKLjW9qgFKdtHrn0lhfyCPGmc/edit?usp=sharing,Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i01zy",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,mbwhite,nasht00,silliman,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Oct/19 12:16 AM;heatherp;Needs documentation;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Programming model - fabric-chaincode-node release chores (v2.0),FABCN-2,38271,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,07/Mar/19 8:17 PM,08/Jun/21 9:07 PM,28/Oct/23 2:28 AM,27/Nov/19 7:37 PM,,0,,,,,,,"Updates, changes, and fixes that are 'chores'

Items needed to maintain the infrastructure and quality of the code.

Items do not affect the function, rather our ability to delivery quality function",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Programming model - fabric-chaincode-node release chores (v2.0),,No,,Unset,No,,,"1|i00ezr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Programming model - Inversion of control for Node.js smart contracts,FABCN-3,34623,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,awjh-ibm,sstone1,sstone1,12/Oct/18 7:50 PM,20/Jan/20 6:49 PM,28/Oct/23 2:28 AM,20/Jan/20 6:49 PM,,0,cc-triaged,,,,,,"Today, the Node.js chaincode requires a user to explicitly reference the shim (via a dependency on the fabric-shim npm package), and also explicitly start the shim via the npm start script in their package.json.

This has several problems:
- The user sees that Node.js smart contracts takes a long time to deploy, because it must download and install the fabric-shim module, which is a large package due to the inclusion of gRPC.
- The user is in control of the version of the shim that is used, and has to update their code (package.json) before redeploying in order to pick up fixes to the shim. 

Using the new programming model being delivered under FAB-11246, the smart contract developer only needs to reference a version of the smart contract API (via the fabric-contract-api npm package), and write their smart contract to the interfaces defined in that API.

Smart contract developers now have no need to reference the shim directly, and nor should they - the shim is ""internals"" for communicating between the peer and the chaincode process. The smart contract API is what they care about.

This epic is aiming to change the way Node.js smart contracts are deployed, by inverting control so that the shim loads the smart contract, rather than the smart contracts loading the shim.",,awjh-ibm,denyeart,latitiah,mbwhite,silliman,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-70,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzutj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,Still Needed,Unset,,Unset,,(Please add usage information),awjh-ibm,denyeart,latitiah,mbwhite,silliman,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Oct/18 10:15 PM;latitiah;This epic still needs a test plan summary associated with it. Here is a quick guide for what the summary should contain. Thanks!
{code}
Functional Tests:
 - FAB-XXX1: Make sure config is accepted and turns on feature (Integration) - PersonA
 - FAB-XXX2: What happens when config is set wrong (unit) - PersonA
 - FAB-XXX3: When FeatureX is turned on in both ComponentA and ComponentB (End-to-end) - PersonB
 - FAB-XXX4: When FeatureX is turned on in ComponentA and not ComponentB (End-to-end) - PersonA

System Tests:
 - FAB-XXX5: How is performace impacted when sending 5 packets per second for 3 hours? - PersonC
   * Be sure to set the following config values on ComponentA as such:
     - FEATUREX=true
     - FEATURE_PATH=/some/path/for/my/feature
   * Be sure to send the messages using the foo SDK
 - FAB-XXX6: Is the feature and component stable when executing 10 packets per second for 1 week? - PersonC
   * Be sure to set the following config values on ComponentA as such:
     - FEATUREX=true
     - FEATURE_PATH=/some/path/for/my/feature
{code};;;","19/Nov/18 3:03 PM;denyeart;[~sstone1] Is this planned for v1.4?;;;","28/Nov/18 10:09 PM;mbwhite;[~awjh-ibm] is currently working this; though understand that there is some work under way by [~mastersingh24] that overlaps with this?  I can't find the Jira for that other work.;;;","29/Nov/18 12:21 AM;awjh-ibm;Current Status:
 * *fabric-baseimage* (ready to CR once fabric-chaincode-node updated, relies on release as uses npm pack on shim):
 ** Dockerfile defined
 ** Shell script added to setup node environment
 ** Setup.sh modified to remove node from baseimage
 ** Makefile updated to include nodeenv
 * *fabric-chaincode-node* (writing tests to cover few changes made and then will be in CR by tomorrow):
 ** Updated contract to include function for checking if instance of contract since instance of no longer works
 ** Updated start script to run file to determine startup for contract and included import of fabric-contract-api in package.json
 ** Added startup.sh to determine whether contract is in new format and can be started using fabric-contract-api or to call npm start on the contract
 ** Updated chaincodefromcontract to use new method of determining if instance of
 * *fabric* (ready to CR once fabric-chaincode-node and fabric-baseimage updated):
 ** Updated platform.go to put chaincode in new location for node to avoid merging with fabric-shim code in docker image
 ** Updated simpleconfig/core.yaml to use fabric-basenode in node chaincode;;;","30/Nov/18 7:41 AM;denyeart;[~sstone1] [~awjh-ibm] [~mastersingh24] The cross repo changes always take longer than expected to settle out and test. Given we have a release candidate in a week and are now entering stabilization period, it seems the Inversion of Control epic and nodeenv image updates will have to be deferred to the next release.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Performance and Monitoring Enhancement suggestions,FABCN-4,38273,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,,mbwhite,mbwhite,07/Mar/19 8:25 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,15/Oct/19 11:49 PM,,0,,,,,,,Capturing enhancements for  performance and monitoring capabilities,,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00f07:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Collective Improvement for contract programming model after Community Feedback,FABCN-5,38268,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,07/Mar/19 7:52 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,17/Oct/19 9:57 PM,,0,cc-triaged,,,,,,"Collective EPIC to link community raised issues for feeding back into the 

programming model ",,heatherp,mbwhite,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00ez3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,mbwhite,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Oct/19 8:00 PM;heatherp;Initially this was created for issue tracking but that system hasn't been maintained, so I'm going to tag each of the remaining ones open with a ""feature"" label and then remove them from this epic and close it;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node 10 & Currency Updates,FABCN-6,35748,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,mbwhite,mbwhite,mbwhite,30/Nov/18 7:29 PM,27/Jan/20 7:47 PM,28/Oct/23 2:28 AM,16/Oct/19 12:11 AM,,1,,,,,,,"Updates to maintain the currency of the node chaincode with the node.js ecosystem
 * Node 10 support
 * Remove the dependency on the x509 library - updates to that not forthcoming

 more to be added as them come up",,ayang99,denyeart,heatherp,mbwhite,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-206,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i0011b:","The dockerbase image has been updated to move to the latest LTS release of Node - this is Node 10. Therefore chaincode for node.js will use Node 10 by default. 

Chaincode shims MUST be at the fabric-shim at 1.4.1 at minimum.


",Yes,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ayang99,denyeart,heatherp,mbwhite,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/19 10:05 PM;mbwhite;Raised CI issue - https://jira.hyperledger.org/browse/FABCI-266

 

x509 library has been forked and a working with node 10 version published. ;;;","23/Jan/19 8:37 PM;mbwhite;Current status is the x509 library has been updated to a forked version that compile with Node 10.

Version 2.0 can drop Node 10 support,  and for v1.4.1, the SDK can certainly be used with Node 10.

 

Chaincode in v1.4.x with node 10, however, will require changes to the base Docker image to add in Node 10 (in addition to Node 8)

Updates to the platform creation go code in the peer to permit checks to see what the engine setting in package.json is and adjust the node version.

*Such a change appears too complex for a x.x.1 release... therefore* *unless strong reasons why not, or if there's an easier approach. Propose that for v1.4.1 Node 10 is closed.*

 

/cc [~simonstone1] for comment;;;","25/Jan/19 10:09 PM;sstone1;[~mbwhite] I guess I don't understand why we would have Node.js 8 and Node.js 10 in the base Docker image - why not just replace 8 with 10? Is there something that's been removed in Node.js 10 that is likely to break a lot of chaincode developers when they instantiate/upgrade chaincode? They won't get automatically moved to Node.js 10 just by upgrading to Fabric 1.4.1. Have we tried the upgrade with various existing chaincode samples?

Node.js 8 goes end of service (currently in maintenance mode) at the end of this year on December 31st, and Fabric 1.4 is LTS until January 10th 2019. Anyone looking to set up a new Node.js environment will automatically be sent to the Node.js 10 downloads, so forcing them to set up Node.js 8 for local development is a bit of a pain. Can Node.js 10 be used to run the shim outside of Docker - have we enabled that now? 

My vote would be that we bite the bullet now for Fabric 1.4.1, and hope that the impact on existing Fabric 1.4.0 users is small. Unless you know of something in particular, the release notes for Node.js 10 don't suggest that they've removed anything major, so I'd expect the set of affected users to be pretty small, if not zero.

However since Fabric 2.0 is coming in a few months, and this change is definitely going into Fabric 2.0 - I'm not going to grumble too much if someone else says no.

[~mastersingh24] [~denyeart] on that note - any comments?;;;","21/Feb/19 2:31 AM;mbwhite;I've pushed this update for the chaincode.

https://gerrit.hyperledger.org/r/#/c/29420/;;;","07/Mar/19 7:54 PM;mbwhite;Currently waiting for the above in CR review;;;","11/Mar/19 9:05 PM;denyeart;[~mbwhite] I've tagged as Release Note Required.  Could you add some comments in the Release Notes field (click Edit and you'll see it). Specifically we need to understand for v1.4.1 are Node.js 8 and 10 both supported, or if people must go to Node.js 10 (that is, update to the upcoming fabric-baseimage images). And can they have a combination of old chaincodes running on Node.js 8 and new chaincodes running on Node.js 10?;;;","12/Mar/19 1:38 AM;mbwhite;Fabric update is

 [https://gerrit.hyperledger.org/r/30000]  FAB-130751.4 branch Fabric CR to support new base image 

[https://gerrit.hyperledger.org/r/30034]  FAB-13075  Master branch Fabric CR update to new baseimage

Baseimage is 

[https://gerrit.hyperledger.org/r/#/c/29420/] 

 fyi [~mastersingh24] [~denyeart] 

 

 ;;;","20/Mar/19 9:52 PM;denyeart;Based on discussion of a Node 10 issue on s390x, defer from v2.0 for now.;;;","26/Apr/19 6:28 AM;ayang99;Sorry - trying to understand actual current status of this issue: Is Node 10 support in chaincode deferred _*until*_ Fabric v2.0? ;;;","30/Aug/19 10:01 PM;heatherp;To close this out: we need to check for npm security notices (if any) in fabric-chaincode-node;;;","16/Oct/19 12:10 AM;heatherp;which is covered in FAB-13051, so closing this one;;;",,,,,,,,,,,,,,,,,,
Programming Model - Contract and Transaction Metadata,FABCN-7,33945,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,mbwhite,mbwhite,20/Sep/18 9:46 PM,03/Dec/19 3:06 AM,28/Oct/23 2:28 AM,07/Dec/18 12:36 AM,,0,,,,,,,"AIM:

To have metadata associated with the transaction functions.

OBJECTIVES:
 * Metadata should support the creation of correctly typed REST APis
 * To permit more accurate type checking if required
 * Permit tooling support to have a better view of the contracts

*This epic is to define the specification of the metadata, sub-stories of this should provide the implementation of this in the relevant SDKs, and provide the implementation details of how the Contract specify this. (different languages have different mechanisms for this)* 

 

The GoogleDoc linked above has detailed design and sets this in context 

 ",,isaacwch,mbwhite,SjirNijssen,toddinpal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Oct/18 11:00 PM;mbwhite;contract-jsonschema.json;https://jira.hyperledger.org/secure/attachment/16162/contract-jsonschema.json",,,,,,,,,,,,Done,https://docs.google.com/document/d/13VyA2WiRA-nUhgxo0g84b78RO7lgIL_Hits685gDenE/edit?usp=sharing,Unset,Unset,Unset,,,Programming Model - Contract and Transaction Metadata,,No,,Unset,No,,,"1|hzzrqf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),isaacwch,mbwhite,SjirNijssen,toddinpal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Oct/18 11:46 PM;mbwhite;Have updated the document;
 * minor changes to the wording of the some of the properties
 * Added 'style' property to parameters etc so that it is possible to have a binary format defined for serialization
 * Added top level info structure

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric support for javascript chaincode,FABCN-8,14893,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,jimthematrix,Honglei,Honglei,18/Feb/17 12:22 AM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,20/Oct/17 2:11 AM,,6,Release-planning-1.1,sdk,,,,,"Add support to allow chaincode to be written in javascript, specifically in the node.js execution environment. 
- A chaincode written in javascript is able to use the standard shim interface https://github.com/hyperledger/fabric/blob/release/core/chaincode/shim/interfaces.go, implemented in JS
- follows the same lifecycle as golang and java: install -> instantiate -> upgrade
- utilizes the ""chaincode platform"" framework based on docker, so that a javascript chaincode image is built by the peer based on a base image and dockerfile commands specific to the js chaincode execution environment
- chaincodes written in javascript is able to use the standard require() to make use of npm modules
- an optional package.json can accompany the chaincode to specify name, version, and most importantly external dependencies
- during install, the chaincode's external dependencies can either be specified by the package.json, for which they will be installed when the chaincode docker image is being built by the peer, or they can be included in the chaincode package as part of the ChaincodeDeploymentSpec inside a ""node_modules"" folder. having this flexibility provides the balance b/w deterministic installs and light-weight code packages, and enables the developer to determine the optimal approach

The implementation of this new capability will be split b/w two repositories:
- fabric: enhancement to core/chaincode/chaincode_support.go to direct requests targeting the node.js chaincode to new platform handler, to be implemented in core/chaincode/platforms/node package
- fabric-chaincode-node: will originally contain the shim implementation in node.js",,ChristopherFerris,dselman,greg.haskins,Honglei,lmars,mastersingh24,mne,neodlt,odowdaibm,qiang0723,rmohta,sandp125,wutongtree,yacovm,,,0,0,0,0%,2044800,0,2044800,,FAB-5424,FAB-6437,FAB-6753,,,,,,,,,FAB-6532,,,,,,,,,,"21/Feb/17 7:31 AM;greg.haskins;fab-2331.png;https://jira.hyperledger.org/secure/attachment/10523/fab-2331.png","20/Feb/17 7:54 PM;Honglei;js_examplecc.js;https://jira.hyperledger.org/secure/attachment/10520/js_examplecc.js","19/Jul/17 12:26 PM;Honglei;jscc.diff;https://jira.hyperledger.org/secure/attachment/11702/jscc.diff",,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzxlcn:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,dselman,greg.haskins,Honglei,lmars,mastersingh24,mne,neodlt,odowdaibm,qiang0723,rmohta,sandp125,wutongtree,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Feb/17 8:23 PM;yacovm;#  Does the Vm object created by Otto have access to the local file system?
# I think this needs to be carefully evaluated from the security and life-cycle perspective. Can you please post a public accessible repository where you have been doing this development? some documentation to help to understand the operation flow?;;;","20/Feb/17 10:13 PM;greg.haskins;I have no problem with a javascript type for chaincode, but I think the prospect of trying to run user-submitted code coresident in the peer is likely a non-starter.  The reason we have syscc is to support a different type of use case and its not for user submitted execution.  Refactor this logic to run inside Docker and I will be more supportive.;;;","21/Feb/17 12:36 AM;Honglei;[~yacovm] answer the questions: 
1. VM object has no access to local file system, because there'll no builtin support on local file system access.
2. OK.  I'll push to github.  update to this later.

[~ghaskins]
Currently, we took the inproc way.  Any special reason for running in docker?
Because the js-chaincode is just some text, otto can load/parse/execute/unload them when necessary.;;;","21/Feb/17 2:54 AM;mastersingh24;given this is not for a native nodejs / javascript chaincode, please take a look at this project:   https://github.com/fabric-composer/fabric-composer

it already uses Otto, has a DSL for defining models and allows you to write functions in Javascript.  It has already been proposed as a Hyperledger project as well.  It currently works with v0.6 but the team is working to port it to 1.0.  I am sure they would WELCOME any help;;;","21/Feb/17 4:01 AM;dselman;Yes, Fabric Composer (http://fabric-composer.org) uses Otto to execute JS transaction processing functions on a standard HL v0.6. We are currently in the process of porting to HL v1 and would like to (also?) support native Node.js chaincode containers in the future.

I'd encourage you to experiment with Fabric Composer, it is already quite full featured:
- Model the business network using a DSL
- Submit transactions
- Execute JS functions on Fabric
- Expose business network via REST
- Generation of Angular and Node.js skeleton apps
- ...

The best place to start is the Quick Start:
https://fabric-composer.github.io/start/quickstart.html

We have also implemented a HL Fabric simulator that runs in the brower, or as a node.js process for rapid development and testing.;;;","21/Feb/17 7:42 AM;greg.haskins; @Cong:  Yes, one of the primary reasons is for isolation for untrusted code.  If you refer to the diagram I attached, you are proposing (IIUC) ""Option 1"", which is harder to secure than what I am proposing (""Option 3"").  I understand that the JS has to go through a translation, but this doesn't mean exploits in the interpreter or DSL will never occur.  Running the interpreter coresident with the peer means that any exploits that may exist will effectively execute with the same privilege as the peer and have access to additional resources.   As an example: the peer has access to all of the ledger, the consensus layer,  and elevated privileges with dockerd, none of which are extended to normal chaincode. This access is naturally restricted by additional layers with option 3 regardless of the integrity of the chaincode execution layer.

!fab-2331.png|thumbnail! ;;;","21/Feb/17 9:26 AM;Honglei;[~mastersingh24] [~dselman]
Yes.  I just knew fabric composer a few day ago, it's really one great tool.
We've started trying to use it, but it seems have big dependency on some specific nodejs version?
Still not figure out which version of node can work with it.  But we will continue investigating on it.

Fabric composer uses js to implement chaincode logic, and run it in go-otto-docker.  So from our perspective, it's still one golang-chaincode.;;;","21/Feb/17 9:39 AM;Honglei;[~ghaskins]
I agree that interpreter/DSL could also be exploited.  
As we known, deployment request is constructed by SDK client, if endorser failed to detect this, all peers on chain will deploy it, and it will be big problem.  We'd like to know how to handle this.;;;","21/Feb/17 6:53 PM;mne;From a security perspective I do like the idea of having Javascript chaincode. A Javascript runtime environment can be locked down very well. Browsers have a very similar problem that HL has with chaincode: they need to execute untrusted code. The security that we get with modern day browsers show that such code can be contained effectively. In particular, I/O and other OS services are abstracted and can be granted in a very selective manner.

Thus, it makes sense to have a close look at how browsers do things, for instance, in Google Chrome all untrusted Javascript runs in a separate process, making use of OS-level isolation. So your option 1 is significantly less secure, as [~greg.haskins] already pointed out compromising the execution environment would be equal to compromise of the whole peer. On the other hand, I think process-level isolation (as with browsers) is sufficient in this case - what would be the benefit of using containers?;;;","21/Feb/17 10:52 PM;greg.haskins;[~mne] I think that ultimately, either option 2 or 3 could be made to work with the proper application of isolation techniques such as a targetted AppArmor profile.  I think the main thing to consider is that Docker, especially how it is used in Fabric, really is just an extension of the process model with some default security isolation applied via cgroups and a convenient command+control infrastructure.  IOW, it has a) no extra overhead over fork/exec'ing a process, b) has a bunch of things already locked down (e.g. certain system calls and filesystem visibility), c) an abstracted common command+control interface that works the same regardless of where the peer executes (linux/osx/windows), etc.;;;","23/Feb/17 12:58 AM;mne;[~ghaskins] agreed, Docker is already well integrated into the fabric, offers a homogeneous way to deploy chaincode and cgroups.
Still, considering only the Javascript case, I think in the long run it might be worth considering an approach solely based on processes, where the control over the chaincode execution environment shifts from the deployer to the fabric, with the deployer just providing the JS source rather than the whole container image. Chaincode execution processes could be directly cloned from a Zygote (like on Android) and run as an unprivileged, restricted user, potentially with an additional AppArmor profile as you suggested.;;;","23/Feb/17 7:55 AM;greg.haskins;[~mne] Note that we are already in the state that chaincode deployments are purely source (see FAB-678).  So fwiw, I fully envision a JS type chaincode that would only deploy .js files (probably within a .tgz) rather than a container image.;;;","23/Feb/17 9:04 AM;dselman;We (Fabric Composer team) would like to support a Node.js chaincode container once we have finished porting Fabric Composer to HL v1. We would be very interested to collaborate with others on this project. Our aim is to deploy a Node.js process inside a Docker container, which exposes the gRPC endpoints required to be a good citizen in the Fabric.;;;","23/Feb/17 9:44 AM;Honglei;[~mne] [~ghaskins]
Thanks for all valuable comments.  Yes, making the source code from SDK client analysable, and one restrict execution environment is what we need.

[~dselman]
Looking forward to that project.  We've started working on fabric composer.
btw, will you try to disable the 'eval' function in javascript?  I'm not sure if this can be done easily in node, as node is much more complicated that otto :);;;","23/Feb/17 9:48 AM;greg.haskins;[~dselman] This would be relatively easy, I think.  Would be happy to walk through a skeleton platform driver for nodejs when the time comes.;;;","18/Jul/17 9:43 PM;jimthematrix;[~Honglei] [~greg.haskins] I think it's time we revisit this topic. I also like the approach to build on top of the underlying docker-based isolation mechanism so that future improvements, like adding AppArmor profile, can be done once (in fabric-ccenv) and be automatically picked up by all chaincode execution environments. It's also important that it results in a consistent operational management model, so that DevOps teams only need to worry about one way to manage runtime resources regardless of what chaincode languages are used.

Of the 3 options that Greg listed above, #1 is obviously out of the question due to the lack of isolation. #2 could be accomplished with either Otto, which incurs a pretty significant performance cost as the Composer team have seen, or a separate node.js engine running the chaincode natively, which would provide the separation (separate proc) but would ""pollute"" the fabric-peer image and in my opinion more difficult to reason about (why shouldn't java be done this way?).

This area has been of interest to me and the node.js SDK team has some bandwidth right now. I'd like to start working on this. Would like to first make sure we all agree on the approach. Looks like [~greg.haskins] and I are both advocating for #3. [~mne] it looks like you are advocating for #2. [~Honglei] can you let us know your thoughts on this? we should collaborate and work toward a common solution. Regardless of where we land, at the minimum the work you guys have done implementing the node.js based shim should be re-usable.;;;","19/Jul/17 12:35 AM;jimthematrix;Changed to ""Highest"" priority due to this blocking the Composer team's v1 release (they do not want to put out the release with the current approach based on Golang chaincode support with Otto due to observed performance characteristics). [~sstone1] [~dselman] please chime in if I represented this wrong.;;;","19/Jul/17 6:36 AM;dselman;Note that Composer no longer uses Otto (due to performance/memory issues) and uses Go bindings for Duktape instead.

Apart from the support, maintenance (reduce code complexity) and performance improvements of native Node.js execution users are also very interested in having the ability to easily consume JS modules from npm, using the standard 'require' mechanism.

My naive understanding is that if the Node.js process fulfils the gRPC contract to communicate with the other HLF nodes, then native Node.js execution should be possible.

The deployment model is not clear to me however, in particular the lifecycle for code changes (npm update etc) and how that impacts chain code containers. ;;;","19/Jul/17 9:31 AM;Honglei;[~jimthematrix] I agree with solution #3.  About the native Node.js, I'm not sure if different versions of Node.js could be an issue.  About the 'require' in Node.js, chaincode composer should take responsibility for all code in chaincode, I'm not sure if it is useful.

btw, I assigned the JIRA to Jim Zhang, because my previous solution is based on #1(and paused for a long time, still based on pre-alpha-1 version.);;;","19/Jul/17 11:52 AM;jimthematrix;[~Honglei] thanks for the feedback, glad to know we are converging on the proposed solution, I see from previous comments that you have started implementing the shim as part of your work, can you share that with us?;;;","19/Jul/17 12:27 PM;Honglei;uploaded as jscc.diff.  wish it helps :);;;","19/Jul/17 12:35 PM;jimthematrix;thanks!;;;","19/Jul/17 5:18 PM;mne;[~jimthematrix] given how V1 CC deployment and packaging works, option #3 absolutely makes sense. My suggestion of #2 was based on how V0.6 was working and how browsers have successfully solved the problem of running untrusted Javascript.

[~dselman] lifecycle management is indeed an issue. In my opinion, updating node modules must be part of an explicit CC ""upgrade"" (after an instantiate), since it potentially changes the behavior of the CC.;;;","02/Aug/17 12:57 AM;ChristopherFerris;This has the requisite 5 maintainers approving... ;;;","03/Aug/17 1:34 AM;odowdaibm;I hope this is the right place for this comment.

 

I would like to improve the general usability of chaincode/Smart contracts in JavaScript as part of this feature.  Adding JavaScript support for SC/CC should be about providing something that's natural for JS programmers, rather than a simple port of the golang interfaces.

 

A simple and necessary example, are the golang imports in Go chaincode, which refer to files deep inside the source code, which really isn't ideal.

 
{color:#569cd6}import{color}{color:#d4d4d4} ({color}
{color:#d4d4d4}    {color}{color:#ce9178}""bytes""{color}
{color:#d4d4d4}    {color}{color:#ce9178}""encoding/json""{color}
{color:#d4d4d4}    {color}{color:#ce9178}""fmt""{color}
{color:#d4d4d4}    {color}{color:#ce9178}""strconv""{color}

{color:#d4d4d4}    {color}{color:#ce9178}""github.com/hyperledger/fabric/core/chaincode/shim""{color}
{color:#d4d4d4}    sc {color}{color:#ce9178}""github.com/hyperledger/fabric/protos/peer""{color}
{color:#d4d4d4}){color}
 

Likewise, the method definitions could be quite a lot more natural for JavaScript programmers.

 

Finally, I realize we might not want to pass more structure for the data passed between the SDK and Chaincode over the low level interface, but would we entertain some kind of higher level serialization?  Again, to make it more natural for JavaScript programmers who want to pass JSON objects between their JS SDK program and JS CC/SC.

 

Thanks, Anthony.

 ;;;","08/Aug/17 1:48 AM;jimthematrix;[~odowdaibm] totally agree on the design to provide intuitive interfaces to native javascript developers. Can you take a look at the sample chaincode test file here https://github.com/hyperledger/fabric-chaincode-node/blob/master/test/test.js and see if that's going in the right direction in your mind?

Agree that encoding and decoding of passing the arguments should be JSON based (instead of byte arrays). will add this to FAB-5371;;;","08/Aug/17 1:58 AM;greg.haskins;[~jimthematrix] [~odowdaibm] Highly encourage you to consider doing this serialization work as an extension of chaintool (http://fabric-chaintool.readthedocs.io/en/latest/).  I designed the grammar ([http://fabric-chaintool.readthedocs.io/en/latest/interface/)] to be language agnostic based on google protocol buffers and I can say from experience that the support for protobufs on node/javascript is excellent.  It is just as easy to use protobufs/chaintool-cci in a javascript program as json, and you would gain a bunch of things in the process.  I would be more than happy to work with the node-shim team on integrating this.  If you would like a demo of chaintool as it applies to the golang variant, would be more than happy to set this up.;;;","09/Aug/17 2:07 AM;odowdaibm;Yes Jim, This is definitely along the right lines. 

 

Personally, I find the word ""shim"" a little hard to understand, and wonder whether we could use a simpler term**?  I know *var shim* is arbitrary, but I don't know why we don't call it something like *API,* so *require('fabric-api')* and *return api.success();* I just think these would be easier to understand.**

 

**Also the word shim technically refers to joining 2 things that were not meant to be joined together - putting a new API over an old API for example , and most definitely that's not the case here.

 

Other than that, this is definitely in the right direction.  Thank you!;;;","09/Aug/17 2:20 AM;odowdaibm;Hi Greg - thanks for this.  I've had a quick read of the fabric-chaintool docs and I see where you're coming from.

 

The snippet I focused on was this:

 
{quote}{{var args = new app.PaymentParams(\{'partySrc':'A', 'partyDst':'B','amount':100}); }}

{{var request = \{ chaincodeType: 'car', fcn: 'org.hyperledger.chaincode.example02/fcn/1', args: [args.toBuffer()] };}}
{quote}
 

which I think was close to what I was imagining, but it would be nice to see params even more naturally in the request, and without the toBuffer() method on them.  What would you think of that?

 

Finally, I've been trying (clearly not hard enough!) to convince folks of the merits of naming conventions, so I'd also like to see whether we might be able to formalize this naming scheme (DNS) as part of this feature? As stated, that sounds too much for this feature, but I wonder whether we might have some kind of assist for that in this feature.  For example, we might have a slightly different for of the start() method, which took a name, and helper functions to generate names? 

 

Thanks for consideration, Anthony.;;;"
"As a developer using dev mode, the feedback for errors is poor",FABCN-9,35086,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,SamRasha,mbwhite,mbwhite,05/Nov/18 8:22 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,07/Mar/19 8:29 PM,,0,,,,,,,"When using the new programming model, some of the errors that come back are unclear. 

This story is work through deliberately making errors and improve both error messages and logging. 

 

 ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzxen:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/19 12:39 AM;mbwhite;[~SamRasha] - worth focussing back on this one please.;;;","07/Mar/19 8:29 PM;mbwhite;no longer needed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-chaincode-node beta.2,FABCN-10,35699,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,29/Nov/18 7:59 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,05/Dec/18 10:24 PM,,0,,,,,,,Releasing a beta.2 tagged set of images. ,,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i000pr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric chaincode node should expose the stub and iterator classes so that mocks cen be autogenerated,FABCN-11,27901,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,davidkel,davidkel,davidkel,22/Feb/18 12:18 AM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,22/Feb/18 6:42 AM,,0,,,,,,,"At the moment if developers want to unit test their node chaincode then they end up having to create their own mocks of the stub and iterator classes. 
We should expose the stub and iterator implementations when the fabric-shim is required so that developers can use capabilities such as sinon to generate mock instances of the stub and iterator classes.",,davidkel,jmason900,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzyyd3:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,davidkel,jmason900,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode calling chaincode,FABCN-12,29877,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,Pratika,Pratika,02/May/18 5:53 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,06/Sep/18 9:23 PM,,0,Chaincode,node-SDK,,,,,"I am trying to invoke a chaincode inside other chaincode.
The response is always an empty string.

Following the code snippet from my nodejs chaincode.
Trying to call invoke of chaincode1 from chaincode2.
 
Chaincode 1

async invoke(stub, args, thisClass) {
        if (args.length != 1)
        {
        throw new Error("" Incorrect number of arguments. Expecting name of the Id to query "");
        }
        let hospitalId = args[0];
        let allResult = [];
        let count = await stub.getState(hospitalId+""T"");
        let count1 = parseInt(count.toString())+1;
        return Buffer.from(JSON.stringify(count1));
    }

 Chaincode 2

 async  toChaincodeArgs(str) {
   var buf = new ArrayBuffer(str.length*2); 
   var bufView = new Uint16Array(buf);
  for (var i=0, strLen=str.length; i<strLen; i++) {
    bufView[i] = str.charCodeAt(i);
  }
  return buf;
}

async countTransplant(stub, args, thisClass) {   
let chaincodeName = args[0] 
            let channel = args[1]
            let method = thisClass['toChaincodeArgs'];
            let queryArgs = await method(f,""2-H1"");
            let response = stub.invokeChaincode(chaincodeName, queryArgs, channel)
            return Buffer.from(JSON.stringify(response));
}

Commands used for query and Invoke:

peer chaincode instantiate -o orderer.example.com:7050 -C whochannel -n whocc79 -l node -v 1.0 -c '{""Args"":[""init"",""count"",""0""]}' -P ""OR ('whoMSP.peer')""

peer chaincode query -C whochannel -v 2.0  -n whocc79  -c '{""Args"":[""countTransplant"",""indiacc16"",""channelwhoindia""]}'

 Output:
Query Result: {}",Fabric v 1.1.1/Alpha  ,davidkel,elli-androulaki,jyellick,Pratika,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8634,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzz8g7:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,davidkel,elli-androulaki,jyellick,Pratika,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/May/18 10:41 PM;zhaochy;I already created a ticket for this:
https://jira.hyperledger.org/browse/FAB-8634;;;","05/May/18 1:51 AM;jyellick;[~Pratika] can you confirm that this is a duplciate of FAB-8634 as indicated by [~zhaochy]?;;;","08/May/18 7:05 PM;Pratika;It is same as your issue Zhao Chaoyi . Actually I am able to invoke using Go chaincode but but not with Node chaincode.;;;","23/Jul/18 11:21 PM;davidkel;If you can do it in go, then you should be able to do it in node. The integration tests for the node chaincode test this scenario
{code:java}
async test7(stub, args) {
let results = await stub.invokeChaincode('mycc2', ['getKey', 'whoami']);
results.payload.toString('utf8').should.equal('mycc2');
}
{code}
The full file can be found here
https://github.com/hyperledger/fabric-chaincode-node/blob/master/test/integration/test.js;;;","27/Jul/18 3:04 PM;elli-androulaki;Hi, is this fixed already? Also, should this be classified as ""bug""?;;;","27/Jul/18 3:06 PM;elli-androulaki;I am removing fabric-crypto from relevant components, as I think it only relates to fabric-peer.;;;","27/Jul/18 9:38 PM;davidkel;[~elli-androulaki] I don't believe there is anything to fix as the issue appears to be chaincode calling chaincode which calls chaincode. This is not the situation in your case but looks like an error in your code. You need to `await` on the invokeChaincode call as it will return a promise. ;;;","06/Sep/18 9:23 PM;davidkel;I don't believe there is an issue here and no further response from reporter;;;",,,,,,,,,,,,,,,,,,,,,
Consider adding metrics to fabric-chaincode-node,FABCN-13,35701,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,davidkel,davidkel,29/Nov/18 8:41 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,03/Nov/19 8:00 AM,,0,cc-triaged,,,,,,"Performance of chaincode is an important topic and it would be useful to know information such as time spent by the shim/contract api performing certain tasks such as
1. time between message being queued and transmitted
2. time taken to be notified of a response to that message
(The above list is just an example and there should be other metrics included)",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i000q7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add ExecuteAssert to Node.js chaincode shim,FABCN-14,32467,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,sheehan,sheehan,01/Aug/18 6:57 AM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,27/Feb/19 4:37 AM,,0,,,,,,,The Node.js chaincode shim needs to provide a function similar to the ExecuteAssert function that is available in the Go chaincode shim. See FAB-11417,,SamRasha,sheehan,,,,,,,,,,,,,,,,,,,,,,,FAB-11417,,,,,,,,,FAB-11417,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzl4n:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),SamRasha,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jan/19 7:59 PM;SamRasha;Go implementation never went in, so no context as for what to do. No point of being assigned and in my to do list;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Determine need to upgrade to latest version of node available prior to any release vehicle,FABCN-15,22853,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,rameshthoomu,davidkel,davidkel,26/Oct/17 8:50 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,13/Jan/18 2:59 PM,,0,chaincode,node,Release-planning-1.1,,,,"Whenever a release is planned, it should be decided whether an upgrade to the node.js runtime for node chaincode containers should be performed.
For example the current release planned for the 1.1 preview is Node 8.4 but Node 8.9.1 is available (Which has now gone LTS) and could be a better more secure implementation. For example Composer have found better backward compatibility wrt to using it within our development environment.",,davidkel,denyeart,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzyl5j:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,davidkel,denyeart,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/17 2:24 AM;davidkel;Could this be included also in the Alpha 1.1 release due in december please.;;;","02/Dec/17 5:02 AM;denyeart;[~ChristopherFerris] Can you add this to the release process tasks, so that we get reminded prior to Alpha and all future releases.
[~mastersingh24] [~rameshthoomu][~harrisob@us.ibm.com] [~jimthematrix] FYI.;;;","04/Jan/18 11:17 AM;rameshthoomu;I think this can be fixed updating node js version in fabric-baseimage. Will submit patch to update this change in baseimage.;;;","11/Jan/18 6:20 AM;Clayton Sims;Ramesh - you mentioned CR was submitted,  can you post CR number here;;;","11/Jan/18 6:21 AM;Clayton Sims;found it [https://gerrit.hyperledger.org/r/#/c/16715/]

 ;;;","13/Jan/18 12:39 PM;rameshthoomu;[~mastersingh24] we have to create a release tag in fabric-baseimage to release v0.4.3 with nodejs version 8.9.1;;;","13/Jan/18 2:59 PM;Clayton Sims;cr merged marking done.;;;","13/Jan/18 7:35 PM;davidkel;[~rameshthoomu] [~Clayton Sims]
(Editting original post as I have seen that 8.9.1 was chosen)
I think there needs to be a regular update of the version of node in the container to ensure that the builds get to run against newer versions of node to evaluate against these builds. On Composer our builds are always run against the latest level of node LTS available.
Now that this Jira has been marked as done, what's going to drive ensuring the node system is kept upto date or is it always going to have to require someone to raise a jira at an appropriate time ? This jira originally was a request to define a process to ensure keeping node.js current.;;;","13/Jan/18 8:38 PM;denyeart;[~ChristopherFerris] has the pen on the release cutting process for Fabric.  Chris, could you ensure this is added to the list?   Do we think this can be automated or needs to be done manually each release?

 ;;;","18/Feb/18 11:04 PM;denyeart;[~davidkel] [~rameshthoomu] [~ChristopherFerris] I've added a section for baseimage in the release process doc [https://docs.google.com/document/d/12IpQnREUoJEUj2pF2z-0Up55geItFd94fcsbAkPacTg/edit#|https://docs.google.com/document/d/12IpQnREUoJEUj2pF2z-0Up55geItFd94fcsbAkPacTg/edit] and added a step to ensure dependencies such as node, kafka, zookeeper, couchdb are at the latest/desired versions.;;;",,,,,,,,,,,,,,,,,,,
Need a way to support node chaincode instantiation without internet access,FABCN-16,29076,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,daijianw,daijianw,02/Apr/18 5:53 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,16/Oct/19 12:19 AM,,1,,,,,,,"Run first-network example in an environment without internet access, ""./byfn.sh -m up -l node"", it failed during chaincode instantiation. The peer log shows the following error:

_2018-04-02 06:44:52.784 UTC [chaincode] Launch -> ERRO 5f7 launchAndWaitForRegister failed: Failed to generate platform-specific docker build: Error returned from build: 1 ""npm ERR! code ENOTFOUND
npm ERR! errno ENOTFOUND
npm ERR! network request to https://registry.npmjs.org/fabric-shim failed, reason: getaddrinfo ENOTFOUND registry.npmjs.org registry.npmjs.org:443
npm ERR! network This is a problem related to network connectivity.
npm ERR! network In most cases you are behind a proxy or have bad network settings.
npm ERR! network 
npm ERR! network If you are behind a proxy, please make sure that the
npm ERR! network 'proxy' config is set properly.  See: 'npm help config'

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-04-02T06_44_52_247Z-debug.log
""
error starting container_

The problem was caused by failure to install npm package fabric-shim. This works OK in environment with internet access. I think we need provide a way to build node chaincode container in deployment environment without internet access. For example, we may require the chaincode deveoper/deployer provides offline node_modules directory, so that we can leverage it during docker build of chaincode container.  ",,aspring,daijianw,davidkel,davidkhala,denyeart,grice_32,harrisob@us.ibm.com,heatherp,Jimmycheungtest,joaquimpedrooliveira,pmcosta1,Rajatsharma,silliman,zhaochy,,,,,,,,,,,,,,,,FABCN-1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzz487:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,aspring,daijianw,davidkel,davidkhala,denyeart,grice_32,harrisob@us.ibm.com,heatherp,Jimmycheungtest,joaquimpedrooliveira,pmcosta1,Rajatsharma,silliman,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Apr/18 10:23 AM;zhaochy;From the error message, it seems your ""npm install"" failed by ssh failed.

you may add a "".npmrc"" to your node chaincode folder to improve the performance of ""npm install""
for instance, in China, you may use the TaoBao registry https://registry.npm.taobao.org/
and set ""grpc_node_binary_host_mirror"" to use pre-build grpc binary
;;;","04/Apr/18 12:01 PM;daijianw;[~zhaochy]  The problem is, in current design, node chaincode instantiation(or say,  chaincode image build) need internet access to install npm dependency online.   But in deployment environment without internet access, this definitely will fail.  ;;;","04/Apr/18 12:38 PM;zhaochy;you can download the dependency npm packages and update the package.json, change the dependency package version to ""file: <your download path>"";;;","04/Apr/18 2:56 PM;daijianw;[~zhaochy] I admit your suggest way is a possible way to work around the problem. But there is some difficulty in real case. Take chaincode_example02 for example, it has 206 npm dependency packges in the node_modules directory, if we follow the way you suggest, then we have to check/modify the 206 package.json in each npm package. If the chaincode is more complex and has more dependency packages, that modification work would be not so easy.  Possibly in GenerateDockerBuild method of platform.go, instead of directly run ""npm install --production"",  changing it to only run npm install if it doesn't detect the existence of node_modules directory.  Some consideration or test may be taken about the performance of compressing/decompressing so many files from node_modules during chaincode install  and docker build.   Thanks.;;;","04/Apr/18 3:15 PM;zhaochy;[~harrisob@us.ibm.com] [~jimthematrix@gmail.com] what's your opinion?;;;","04/Apr/18 11:08 PM;harrisob@us.ibm.com;I also think that there should be a method to deploy chaincode without an internet connection available. I would assume that the install package will have to have all dependencies and then a flag on the instantiate to not run the `npm install`. [~zhaochy] would you be able to work on this ?;;;","20/Apr/18 12:54 PM;zhaochy;[~harrisob@us.ibm.com] [~daijianw] I did some experiment on this task, here's my conclusion.
# Change ""npm install --production"" to ""npm install"" does not solve this problem, npm will look for cache from ""~/.npm"" instead of ""node_modules"", so existing packages from node_modules are still ignored by ""npm install"", and during chaincode instantiate, there is no cache there, thus the internet is a must for ""npm install"".
# yarn is another widely used node package management tool, yarn has offline mode which meet our requirements, besides, ""yarn"" has better performance for package install. So we may change ""npm"" to ""yarn"" to solve this problem.
# Another way to solve the task is we add a flag (skip-install, boolean) for chaincode instantiate. Change the corresponding protos, scc, platform and so on. This makes many changes at the Fabric side.

[~daijianw][~harrisob@us.ibm.com] What's your opinion?;;;","24/Apr/18 10:18 AM;daijianw;[~zhaochy] changing ""npm install --production"" to ""npm install"" will not work as the parameter ""--production"" means not installing devDependencies. 
 When you mention another way to solve the problem by adding a flag for chaincode instantiation, to be more accurate, do you mean adding a flag for chaincode container build? As adding a flag for chaincode instantiation is not enough, chaincode container build will happen for chaincode invoke & query also. 

In addition, if using yarn, we still need keep the capability of online install and offline install during chaincode container build. Does yarn need specify ""yarn install -offline""  to install offline? Or ""yarm install"" is ok to install offline ? 

In a word, if yarn is more convenient and with better performance for package install, I'm fine. We may still need a flag to specify offline mode or online mode, as that may let the chaincode deployer aware of the corresponding responsibility and requirement for different modes.

Thanks. 

;;;","23/Jul/18 11:14 PM;davidkel;I have successfully packaged up a pre npm installed chaincode and installed that package onto a peer (needed to hack the node-sdk to remove it's specific checking for the node_modules directory), and this does improve the performance of npm install. But there is 1 big gotcha and that is native modules. It is unwise to package native modules in this way and these will still have to be installed via NPM install. Potentially we could put grpc and x509 into a base image for which the chaincode build env can make use of, but you still need to ensure that no native modules are packaged and somehow the chaincode build env will have to know that all the modules can be satisfied by what has been packaged plus the extra modules provided in a base image and not call npm install. 
Therefore with the current way in which fabric drives chaincode building the only possibility is for the deployer to carefully package in the appropriate node_modules directory minus any native modules in order to reduce the time building the container image but cannot get around having to contact some sort of npm registry to complete the install. One option that is considered is to host your own NPM registry internally so that you do not need to connect outside of your intranet.;;;","18/Aug/18 10:33 AM;zhaochy;[~denyeart] just discussed this with [~harrisob@us.ibm.com] and [~andrew-coleman]. We planed to add a new option 'skipBuild' at chaincode instantiate time. And some changes on LSCC required so that we can use different command at the cc image build time.

 For node cc, if 'skipBuild'=true, node sdk will package the 'node_modules' along with the chaincode. At peer side, the 'npm install' will be skipped at instantiate time.

This might work for golang chaincode and java cc also. Client side have all dependencies packaged (or already build the chaincode to an executable binary, e.g. golang cc), and peer side won't require extra resources at chaincode instantiate time.

;;;","18/Aug/18 12:03 PM;denyeart;[~zhaochy] Please coordinate with [~jyellick] and get his opinion, as he is leading changes to lifecycle recently.;;;","18/Aug/18 8:14 PM;davidkel;I don't think this should be done in the 1.3 timeframe, but some pre-req within the chaincode lifecycle could be put in in preparation (ie expanding the capability of npm install stage), the big problem with this approach is going to be native modules and grpc (as it downloads prebuilt binaries). So for example if you are on a Mac all the native modules and grpc won't work, or if you used a different version of node to that in the fabric. For native modules we could consider a node-gyp rebuild approach. For grpc we need to wait for `inversion of control` planned for the chaincode shims where we provide a dedicated node chaincode image which can include grpc.

Also we need to resolve the issue of npm install where different peers in a network require a different .npmrc file but this file should not form part of the chaincode package that is fingerprinted;;;","07/Sep/18 5:24 AM;davidkel;see FAB-11555 regarding new node chaincode image which would facilitate this. But in addition there needs to be work to decide how to also allow the transfer of node modules as part of the node-sdk and other packaging tools to address how to complete the picture;;;","21/Oct/18 8:32 AM;aspring;[~zhaochy]
[~daijianw]
[~denyeart]
[~jyellick] 
[~andrew-coleman]

[~harrisob@us.ibm.com]

I'm experiencing the exact problem but with a slightly different context.

Case 1

Run against the ""balance-transfer"" rest api server, caller ""testAPIs.sh"" script.   Outcome: fine,  time ~3 minutes.  It always works regardless of offline or online.

Case 2  ( at the night of October 18, 2018 )

Run against the ""balance-transfer"" rest api server, caller is  a similar script to ""testAPIs.sh"" but for ""fabcar"" (including two invokes and two queries).   Outcome: everything ran fine,  time ~3 minutes   ( sorry, I don't recall if it was offline or online but most likely offline for I'd like to test something new offline)

Case 3  ( in the afternoon of October 19, 2018 and subsequently )

Run against the ""balance-transfer"" rest api server, caller is  a similar script to ""testAPIs.sh"" but for ""fabcar"" (including two invokes and two queries).   Outcome: failed with error msg described above,  time ~8 minutes while offline,  ~10 minutes while online

fyi, the OS is a Ubunto 18.04 vm, and the other Fabric sample apps still run fine.

Is there a way to fix it?  Even a short term solution?

Thanks.

 

 ;;;","25/Jan/19 11:24 PM;silliman;Per David Kelsey's suggestion, I am adding here a comment I made in RocketChat on the #fabric-sdk-node in case it may be useful.  It describes a workaround I came up with on the s390x architecture to eliminate node-gyp wanting to go to nodejs.org on the Internet:

{color:#444444}The problem is that packages like x509 (and grpc and pkcs11, at least for s390x architecture) require native binaries to be compiled by node-gyp and this process seems to want to go to {color}[nodejs.org|http://nodejs.org/]{color:#444444} to check for something, I never nailed down exactly what it was going there for, but I found a workaround by:{color}

{color:#444444}1) downloading the Node.js installation tarball and extracting it to a directory{color}
 {color:#444444}2) copying that directory into a custom build of the ccenv image{color}
 {color:#444444}3) setting the node_config_envdir environment variable within the ccenv image to point to this directory{color}
 {color:#444444}4) setting the CORE_CHAINCODE_BUILDER environment variable for the peer to custom ccenv image created in step 2{color}

{color:#444444}This is a sample Dockerfile that I used for step 2:{color}

 

FROM hyperledger/fabric-ccenv:s390x-{color:#008080}1.1{color}.{color:#008080}1{color}

{{COPY {color:#333333}node{color}{color:#990000}-v8{color}.{color:#008080}9.4{color}-linux-s390x /tmp/{color:#333333}node{color}{color:#990000}-v8{color}.{color:#008080}9.4{color}-linux-s390x}}

ENV npm_config_nodedir /tmp/{color:#333333}node{color}{color:#990000}-v8{color}.{color:#008080}9.4{color}-linux-s390x

 

{color:#444444}There may be more elegant solutions but this worked for me.{color};;;","24/Jul/19 12:54 PM;Jimmycheungtest;hello 
 I have the same problem can you help me？;;;","24/Jul/19 12:57 PM;Jimmycheungtest;I don not where is the CORE_CHAINCODE_BUILDER;;;","16/Oct/19 12:19 AM;heatherp;This is duplicated by FAB-12072, which needs documentation;;;",,,,,,,,,,,
Add ClientIdentity support to node.js chaincode,FABCN-17,23902,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,10/Nov/17 6:52 AM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,14/Nov/17 12:20 PM,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzymwf:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Nov/17 12:20 PM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/15401/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Permit developer to extra metadata from contract,FABCN-18,35515,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,SamRasha,mbwhite,mbwhite,21/Nov/18 10:24 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,21/Jan/19 7:56 PM,,0,,,,,,,"When a Contract(s) are deployed in a chaincode container, the metadata can be extracted from the src by introspection. This can be retrieved by issuing a transaction.

The metadata can be supplemented by giving the metadata in the form of a file. 

To make it easier to write this file, it would be helpful to have a command to export the metadata, without starting the chaincode. 

The command `fabric-chaincode-node` with argument `start` starts the chaincode today. 

This story is to add
 * command metadata that can be used to create this metadata
 * `fabric-chaincode-node metadata` should take arguments for creating metadata from the contract
 * With options to send it to a file or if not set to stdout

Tasks:

Create a new yargs command module, and set the options for ```–generate``` and ```–file <filename>```

Invoke the meta data generation, as per the code today, but not start the chaincode (do not read from any file in this case).

 ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzzr3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a developer of smart contracts, I can use @Object and @Property annotations",FABCN-19,35307,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,mbwhite,mbwhite,13/Nov/18 6:44 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,20/Nov/18 1:40 AM,,0,,,,,,,"@Object and @Property annotations per the prototype to help defined the datatypes

that are part of the metadata

These should follow the OpenAPI approach and appear in the components part of the schema definition. 

 

Google Docs for reference - 'Implemention of Contract and Metadata' [https://docs.google.com/document/d/1LJRmGE35oZ6z0-n-kPy8JEmOshhtWjiVxBMETvO3S4s/edit?usp=sharing]

 

Meta data google doc specification https://docs.google.com/document/d/13VyA2WiRA-nUhgxo0g84b78RO7lgIL_Hits685gDenE/edit",,awjh-ibm,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzyl3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Nov/18 6:56 PM;awjh-ibm;Parent -> FAB-12609;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make generated metadata match the schema file,FABCN-20,35393,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,16/Nov/18 1:33 AM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,20/Nov/18 1:54 AM,,0,,,,,,,"Ensure that data generated for contracts, including data from annotations, matches the schema in fabric-contract-api/schema.

 

Adding integration tests to check that a typescript version matches the schema and update existing integration test to check against schema.",,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzz1j:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a chaincode developer, I want clear samples of contract classes with transaction methods",FABCN-21,32623,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,andrew-coleman,andrew-coleman,07/Aug/18 5:49 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,12/Sep/19 10:38 PM,,0,,,,,,,Commercial paper sample,,andrew-coleman,denyeart,heatherp,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzlun:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,denyeart,heatherp,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Aug/18 5:23 PM;mbwhite;As part of https://jira.hyperledger.org/browse/FAB-11723, an initial sample is going into the Fabric Samples repo. ;;;","10/Sep/18 6:14 PM;mbwhite;Samples have been introduced as part of the docs work, and also the JSDoc has some example code. 

 

More extensive samples will need to be done as part of future releases. ;;;","23/Jan/19 1:23 PM;denyeart;[~mbwhite] Can this be marked done based on the commercial paper doc in v1.4? Or do you expect more content in v2.0?;;;","12/Sep/19 10:38 PM;heatherp;Based off what was added by Anthony last year in the related jira, this can be closed off;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Provide a real-world example (fabric-shim-crypto) TS Decorator,FABCN-22,43441,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,awattez,awattez,24/Nov/19 11:33 PM,13/Jan/20 11:14 PM,28/Oct/23 2:28 AM,13/Jan/20 11:14 PM,,0,chaincode,crypto,external,shim,,,"Hi everyone,

is it possible to provide `encc_example` in typescript decorator version ?

[https://github.com/hyperledger/fabric/tree/release-1.4/examples/chaincode/go/enccc_example]

 

I try this with `fabric-shim-crypto` version:`1.4.2`

 

{{@Transaction()}}

{{public async encryptField(ctx:Context, textId:string, text:string):Promise<void>{}}

{{  const crypto=newShimCrypto(ctx.stub);}}

{{  await  ctx.stub.putState(textId, crypto.encrypt(text));}}

{{  crypto.decrypt((await ctx.stub.getState(textId)));}}

{{}}}

 

 I encountered a problem at decrypt level:

{{[ERROR] Endorsement failed with: transaction returned with failure: Error: error:0606506D:digital envelope routines:EVP_DecryptFinal_ex:wrong final block length}}

 

Can you attach this story to a correc Epik Link please ?

Regards, 

 ",,awattez,heatherp,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9310,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0158j:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awattez,heatherp,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Nov/19 8:17 PM;jtonline;Looks like this might be related to FAB-9310 - I'll investigate;;;","13/Jan/20 11:14 PM;heatherp;Hey [~awattez] I think this issue would be covered by the completion of FAB-9310, so duplicating. Please let us know if you disagree;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Node.js chaincode shim for private data APIs,FABCN-23,29931,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,zhaochy,denyeart,denyeart,04/May/18 2:56 AM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,18/May/18 2:30 PM,,0,,,,,,,"Node.js chaincode shim for private data APIs, to match the APIs that are available in go chaincode.",,denyeart,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5080,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzwtpz:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,denyeart,zhaochy,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/May/18 5:39 PM;zhaochy;master: https://gerrit.hyperledger.org/r/21885;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a (node js) chaincode client, I would like to page through chaincode query results",FABCN-24,33318,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,zhaochy,denyeart,denyeart,29/Aug/18 9:25 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,17/Sep/18 8:57 PM,,0,,,,,,,"Acceptance:
Chaincode client can pass pagesize and bookmark parameters to range, composite key, and rich query shim APIs in order to drive pagination.",,denyeart,mbwhite,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11792,FAB-11731,FABCN-122,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzoq7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),denyeart,mbwhite,zhaochy,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Aug/18 9:28 PM;denyeart;[~zhaochy] After the go chaincode APIs are complete, would you be able to work on the node js chaincode APIs?;;;","29/Aug/18 9:44 PM;zhaochy;sure;;;","31/Aug/18 10:03 PM;denyeart;[~zhaochy] I believe the go chaincode paging support is far enough along that you can begin porting to node js chaincode.  See the go chaincode CR stack here: https://gerrit.hyperledger.org/r/#/c/25203/;;;","31/Aug/18 10:14 PM;zhaochy;thanks. will start working on this next week.;;;","09/Sep/18 7:01 AM;denyeart;[~zhaochy] How is it going?  We merged the go chaincode APIs.  If we want the corresponding node.js chaincode APIs to get into v1.3.0, it would have to be in the next couple days.;;;","09/Sep/18 8:49 PM;zhaochy;almost done, working on tests now. will submit a CR today;;;","10/Sep/18 12:57 AM;zhaochy;https://gerrit.hyperledger.org/r/26183;;;",,,,,,,,,,,,,,,,,,,,,,
Port 'GetPrivateDataHash' to node.js shim API,FABCN-25,38606,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,jtonline,mbwhite,mbwhite,20/Mar/19 11:14 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,02/Apr/19 9:48 PM,,0,,,,,,,"Master-v2.0.0 port

This is the golang shim commit:

[https://github.com/hyperledger/fabric/commit/2cf49eb91d7f17dc657367bf15f46b26fd036b64]

Matching Jira 

https://jira.hyperledger.org/browse/FAB-13527

 ",,Jakeeyturner,jtonline,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-46,,,,,,FAB-13527,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00gxb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Jakeeyturner,jtonline,mbwhite,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Mar/19 11:15 PM;mbwhite;[~jtonline]  this was spotted by [~Jakeeyturner] (and required for his current usecase) - can you look at porting this please to the master node.js branch please.

 ;;;","20/Mar/19 11:30 PM;Jakeeyturner;This API is needed in my use case to verify that the inputs of a transaction when hashed are equal to the hash of the value from a specified key and private data collection (which the transaction invoker is unauthorised to view).;;;","27/Mar/19 8:21 PM;jtonline;Doesn't look like this thing links to CRs automatically... https://gerrit.hyperledger.org/r/#/c/30403/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Permit sending in empty arguments for contract based instantiation,FABCN-26,34477,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,SamRasha,mbwhite,mbwhite,08/Oct/18 9:30 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,18/Oct/18 12:27 AM,,0,,,,,,,"Current on a peer chaincode instantiate, the arguments must be specified and be valid;

A blank set of arguments should be permitted. ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzu1b:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add some kind of ignore file option for nodejs chaincode,FABCN-27,30131,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,Sneljo,Sneljo,11/May/18 4:33 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,20/Jul/18 11:05 PM,,0,chaincode,,,,,,When using babel or typescript for building your chaincode. You generate a lot of unneeded files which slow down the install process. It would be need if we had a file which does something like .gitignore.,,davidkel,Sneljo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzz9qv:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,davidkel,Sneljo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/May/18 7:29 AM;davidkel;How are you packaging your chaincode ? the fabric-sdk-node packager honours the contents of the .npmignore file to only package necessary files for example.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve the NodeJS chaincode container to use a lighter-weight image,FABCN-28,20359,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,mastersingh24,mastersingh24,23/Aug/17 9:40 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,04/Sep/18 5:21 PM,,0,,,,,,,"For golang chaincode support two container images are involved:
- *fabric-ccenv* performs the docker build that does go build and produces the chaincode executable
- the resulting executable from above is put into *fabric-baseos* and produces the chaincode docker image

For node.js chaincode support, we re-use the docker build step by performing the ""npm install"" in fabric-ccenv, to produce the ""chaincode executable"" which is the folder containing ""chaincode.js, package.json and node_modules"".

Then for the base of the runtime docker image, we need the equivalent of the fabric-baseos. It should essentially be fabric-baseos + node 8.4 (or later)

For justifications on using node 8, and other discussions, see FAB-5823

Currently the runtime image is built from fabric-baseimage, which has the pre-reqs, but has a lot of extraneous content we don't need",,davidkel,denyeart,mastersingh24,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-324,FABCN-70,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzydz3:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,davidkel,denyeart,mastersingh24,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Aug/17 9:42 PM;mastersingh24;Should decide if we are going to build this on top of fabric-baseos or whether we use one of the standard NodeJS library containers.   I suppose to support Z and Power platforms, we should just use baseos.

I also tend to think that the Dockerfile for this should be part of the fabric-chaincode-node repository as well;;;","13/Oct/17 12:36 AM;denyeart;Discussed with Jim, we think 1.1 could be delivered without this subtask completed, but better to complete it.;;;","21/Aug/18 6:00 PM;davidkel;[~mastersingh24] assume this is now a duplicate of FAB-11555 ?;;;","04/Sep/18 5:21 PM;davidkel;Closing as a duplicate of FAB-11555;;;",,,,,,,,,,,,,,,,,,,,,,,,,
As a developer of JavaScript/plain TypeScript smart contract I should have basic metadata,FABCN-29,34821,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,mbwhite,mbwhite,22/Oct/18 10:46 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,13/Nov/18 12:19 AM,,0,,,,,,,"Based on the information available within a pure Javascript Smart Contract, fill out the metadata structure as established as much as possible. 

This will be limited to names of functions, and contract names; but will represent the basic-fallback data. That should be handled gracefully. 

 

If developer has written in Typescript; but without using any annotations, just types, the basic information that is now available should be filled in.",,mbwhite,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzvz3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,SjirNijssen,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric-chaincode-node build configuration for CI pipelines,FABCN-30,35118,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Nov/18 3:20 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,30/Nov/18 1:44 PM,,0,build-system,,,,,,"The release branches of fabric-chaincode-node has to pull the images (thirdparty and fabric images) from dockerhub.

Update the build configuraiton in package.json to do this.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzxlb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/18 5:30 AM;rameshthoomu;[https://gerrit.hyperledger.org/r/#/q/status:open+project:fabric-chaincode-node+topic:FAB-12735]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve performance of node chaincode fv tests,FABCN-31,42705,,Test Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,jtonline,jtonline,10/Oct/19 7:08 PM,18/Nov/20 6:39 PM,28/Oct/23 2:28 AM,18/Nov/20 6:39 PM,,0,cc-triaged,,,,,,"There are currently multiple separate chaincodes required for testing which are all started individually causing long delays and timeouts during chaincode node fv testing.

These are currently {{fabric-chaincode-node/test/chaincodes}}... invoked from the {{test/fv/*.js}}... each file in the {{fv}}directory is a separate test invoked via {{mocha *.js}}.  as part of the {{@beforeAll}} it installs the required contract

Combining them all into a single chaincode should help",,calanais,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-310,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,,,No,,Unset,No,,,"1|i011xf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),calanais,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Nov/19 8:06 PM;jtonline;Pausing this for now but note that a single chaincode may not be possible due to cross chaincode tests;;;","18/Nov/20 6:39 PM;calanais;ok [~jtonline]?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Add fabric-shim typings,FABCN-32,28214,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,Sneljo,Sneljo,Sneljo,05/Mar/18 8:36 PM,01/Dec/19 6:13 AM,28/Oct/23 2:28 AM,21/Aug/18 6:03 PM,,0,chaincode,,,,,,,,davidkel,Sneljo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzy94f:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,davidkel,Sneljo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Aug/18 5:58 PM;davidkel;typings for the fabric-shim have now been added

 ;;;","21/Aug/18 6:01 PM;Sneljo;Awesome!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
The default contract should be settable by the developer,FABCN-33,36218,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,18/Dec/18 1:05 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Jan/19 8:07 PM,,0,,,,,,,The default contract in a chaincode can have its functions called without having the contract name passed. Currently the first contract recieved when generting chaincode from contracts is the default. It should be possible for this to be set using an annotation.,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i003hb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Async iterator support for Node.js chaincode stub APIs,FABCN-34,39601,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,davidkel,sstone1,sstone1,03/May/19 11:11 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,27/Jul/19 10:03 PM,,0,,,,,,,"The following Node.js chaincode stub APIs return iterator objects:

* getHistoryForKey
* getPrivateDataByPartialCompositeKey
* getPrivateDataByRange
* getPrivateDataQueryResult
* getQueryResult
* getQueryResultWithPagination
* getStateByPartialCompositeKey
* getStateByPartialCompositeKeyWithPagination
* getStateByRange
* getStateByRangeWithPagination

These are quite complex to use, as the iterators are asynchronous, and the code seems overly complex for what the user is trying to accomplish:

https://github.com/hyperledger/fabric-samples/blob/release-1.4/chaincode/fabcar/typescript/src/fabcar.ts#L107

Fabric v2.0 has updated to Node.js v10 which includes support for ""for await of"", allowing users to write simple code that iterates over an asynchronous iterator.

A bit of prototyping shows that it is possible to extend our existing code to support the new AsyncIterable interface, whilst maintaining compatibility with existing smart contract code (I think this would be ideal):

{code:javascript}
    getQueryResult(query) { // can't be async as we need to edit the returned promise
        // Access public data by setting the collection to empty string
        const collection = '';
		const promise = this.handler.handleGetQueryResult(collection, query, null, this.channel_id, this.txId).then((result) => result.iterator);
		promise[Symbol.asyncIterator] = () => { // this is the magic bit
			let iterator;
			return {
				next: async () => {
					if (!iterator) {
						iterator = await promise;
					}
					return iterator.next();
				}
			};
		};
        return promise;
    }
{code}

This change results in much simpler user contract code:

{code:javascript}
    async forAwaitOfQuery(ctx, query) {
        const result = [];
        for await (const {key, value} of ctx.stub.getQueryResult(query)) {
            result.push(value.toString('utf8'));
        }
        return JSON.stringify(result);
    }
{code}

One thing to note is that the Iterable and AsyncIterable contracts state that the iterators next() function should not return a value and done = true - from what I've seen, the done flag is checked first, iteration stops, and the value is ignored. ",,davidkel,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-287,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00miv:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,sstone1,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/May/19 5:53 PM;davidkel;An example of a replacement for getAllResults looks like this. not it doesn't care about the difference in what is returned by the various iterator methods (as some return an iterator while others return an object with an iterator property)

{code:java}
async function getAllResults(promiseOfIterator, getKeys) {
    const allResults = [];
    for await (const res of promiseOfIterator) {
        const theVal = (getKeys) ? res.key : res.value.toString('utf8');
        allResults.push(theVal);
    }

    // need to close the iterator, but the returned value could either
    // be an iterator or the an object with an iterator property so need
    // to handle both scenarios.
    const res = await promiseOfIterator;
    let iterator = res.iterator ? res.iterator : res;
    await iterator.close();
    return allResults;
}
{code}
Note how to be able to call close

I have considered whether we should update the iterator support to perform automatic close when done is received. However we would still need to document that an explicit close MUST be performed if you don't iterate to the last element. So it may be safer to leave as is and make it mandatory in all scenarios. Worth a discussion on this.

The other thing that needs to be possible is how to get to the metadata which will be returned by methods such as the ones that use pagination. So an example of code that may call getAllResults above looks like this

{code:java}
const promiseOfIterator = stub.getQueryResultWithPagination(JSON.stringify(query), 2);
const results = await getAllResults(promiseOfIterator);
const metadata = (await promiseOfIterator).metadata;
{code}

As part of this we should include a new tutorial on how to use iterators and include old style as well as new as the old style will continue to work as before.;;;","09/May/19 6:41 PM;sstone1;[~davidkel] on the explicit close stuff - I'd prefer to avoid that at all costs ;-)

We might be able to avoid that by implementing a `return` method on our AsyncIterator implementation:
https://github.com/Microsoft/TypeScript/blob/master/lib/lib.esnext.asynciterable.d.ts#L34

From a couple of blogs, it sounds like the `return` method gets called if iteration ends early, so sounds like a good place to insert the close code. Not sure what `throw` does, but I can hazard a guess! ;;;","13/May/19 5:44 PM;davidkel;https://gerrit.hyperledger.org/r/#/c/31339/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a user of the meta-data, I need to have a JSON schema definition of valid data",FABCN-35,34824,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,23/Oct/18 12:39 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,16/Nov/18 12:58 AM,,0,,,,,,,"We need to define the JSON schema for the valid meta data;  this has been added to the story defining the meta data.

Will use this issue to add it to the build, and to validate it is a valid JSONSchema and copy it to the correct location. ",,mbwhite,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzvzr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,SjirNijssen,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Nov/18 11:02 PM;mbwhite;[https://gerrit.hyperledger.org/r/27521]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode-node: more accurate checking for private data API,FABCN-36,32436,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,davidkhala,davidkhala,davidkhala,31/Jul/18 7:51 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,11/Aug/18 9:59 AM,,0,fabric-chaincode-node,,,,,,"I have tried wrongly input boolean as parameter for

{color:#ffc66d}putPrivateData{color}

And the system reply me error like

```

{""message"":""Illegal buffer"",""stack"":""TypeError: Illegal buffer\n at Function.module.exports.ByteBuffer.wrap (/usr/local/src/common/node_modules/bytebuffer/dist/bytebuffer-node.js:346:19)\n at Element.ProtoBuf.Reflect.ElementPrototype.verifyValue (/usr/local/src/common/node_modules/protobufjs/dist/protobuf.js:1886:39)\n at Field.ProtoBuf.Reflect.FieldPrototype.verifyValue (/usr/local/src/common/node_modules/protobufjs/dist/protobuf.js:3499:33)\n at Message.setter (/usr/local/src/common/node_modules/protobufjs/dist/protobuf.js:2582:77)\n at ChaincodeSupportClient.handlePutState (/usr/local/src/common/node_modules/fabric-shim/lib/handler.js:380:11)\n at ChaincodeStub.putPrivateData (/usr/local/src/common/node_modules/fabric-shim/lib/stub.js:668:23)\n at Chaincode.invoke (/usr/local/src/chaincode.js:25:14)\n at <anonymous>\n at process._tickCallback (internal/process/next_tick.js:188:7)""}
```

I think checking the typeof Param, prompting more obvious error is better for developers.",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzkyf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jul/18 7:55 PM;davidkhala;https://gerrit.hyperledger.org/r/#/c/24981/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As both a chaincode dev, and contributor need solid test suite",FABCN-37,34733,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,14gracel,mbwhite,mbwhite,17/Oct/18 6:07 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,28/Nov/18 10:57 PM,,0,,,,,,,Overreach EPIC for improvement in testing of the node chaincode. ,,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzvgv:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove the dependency on X509 in fabric-shim,FABCN-38,29414,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,davidkel,davidkel,16/Apr/18 6:44 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,09/Oct/19 9:46 PM,,0,,,,,,,"X509 is a native module so has to be compiled which extends the time taken for a chaincode container image to be built. fabric-shim also includes `jsrsasign` which does a lot of the same function as x509 so one would hope that it should be possible to replace most if not all the required x509 functionality with the native js jsrsasign.

There is one benefit side effect however to including x509 which is that it tests whether native modules compile on the chaincode container without problem (for example of the base image didn't have or changed the version of python for example). So with the removal of x509, e2e tests should be put in place to test the inclusion of a native module",,davidkel,silliman,sstone1,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzz607:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,davidkel,silliman,sstone1,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jul/18 11:17 PM;davidkel;Unfortunately the x509 parsed certificate format is explicitly exposed in the chaincode API and as such means that changing for format is a breaking api change. Also if a different version of x509 decided to change the format then it would be a breaking api change outside of our control. There is a pure javascript library for X509 parsing at [https://fidm.github.io/x509/] which we might want to consider switching to in the future.;;;","03/Sep/18 12:12 PM;zhaochy;As far as I can see, very few developers use the x509 interface from fabric-shim. Agreed to change the x509 package to jsrsasign.
[~harrisob@us.ibm.com] What's your opinion?;;;","19/Sep/18 6:13 PM;davidkel;We will keep x509 but as part of FAB-11555 we can have a compiled version already present in the node chaincode build image;;;","12/Oct/18 6:51 PM;sstone1;We need to consider how we can get rid of the dependency on x509; it doesn't build on Windows without the user installing a specific level of OpenSSL to a specific directory, which makes it difficult for smart contract developers using Windows to run in development mode. ;;;","12/Oct/18 7:11 PM;davidkel;[~sstone1] It's already been looked at for removing and to try to keep the api the same. Unfortunately this would be a large amount of effort and code. For HLF 2.0 we can easily remove it, but to remove it now would be a breaking API change. I'm not sure how Zhao was able to quantify the use of this particular interface so unsure of it's use. There is an alternative pure JS library we could use. JSRSASIGN was found to have an issue regarding certificate extensions and you couldn't extract them. An issue was raised with JSRSASIGN but the response wasn't too helpful. [~awjh-ibm] would know more as he did the investigation.;;;",,,,,,,,,,,,,,,,,,,,,,,,
NodeCC - add maintainer,FABCN-39,27672,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,14/Feb/18 1:12 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,08/Mar/18 5:43 AM,,0,chaincode,,,,,,Add Chaoyi Zhao as Node chaincode maintainer,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzyxav:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a developer I'd like all environment variables to be specified as params,FABCN-40,34232,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,mbwhite,mbwhite,01/Oct/18 9:26 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,15/Oct/18 11:58 PM,,0,,,,,,,"* When running the shim in development mode; the --peer.address can be specified.
 * But CORE_CHAINCODE_NAME has to be an environment varaibles

This need story is to scan and make sure that the environment variables can be set on the command line.

Plus help and version options as per standard CLIs. ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzta7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When invoked chaincode throws an error, the error is lost",FABCN-41,26608,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,,daanporon,daanporon,05/Jan/18 9:55 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,14/Feb/18 1:53 AM,,0,chaincode,invoke,nodejs-chaincode,,,,"We are using the node.js chaincode, so i'm not sure if the same issue exists within Go chaincode.

When we invoke chaincode from another chaincode and the invoked chaincode returns an error. The error will get lost somewhere. We cannot catch this error. The error also doesn't propagate to the client ... while the client should know what error was thrown?",,daanporon,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzysg7:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,daanporon,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Feb/18 1:55 AM;harrisob@us.ibm.com;fixed with [https://gerrit.hyperledger.org/r/#/c/17837/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add State/Statelist APIs to Fabric Contract APIs,FABCN-42,40234,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,mahoney1,mahoney1,31/May/19 6:17 PM,18/Nov/20 6:13 PM,28/Oct/23 2:28 AM,18/Nov/20 6:13 PM,,1,cc-triaged,,,,,,"From RocketChat #fabric-chaincode-dev channel:

""In the fabric-samples/commercial-paper, the smart contract uses the classes “State” and “Statelist” to handle put/get states - they also build composite keys, serialize/deserialize state, and call the Chaincode Shim. These classes seem useful for many use cases because developers can focus on the business logic. I found some projects using the same classes in Github.


Is there any plan to add these classes as a common library to fabric-contract-api?",,mahoney1,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-358,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-358,,,No,,Unset,No,,,"1|hzzl4e:yr",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mahoney1,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jan/20 6:26 PM;mbwhite;The requirement here will be resolved by the implementation of the Ledger API. 

Please do comment on the RFC

 [https://github.com/hyperledger/fabric-rfcs/pull/16];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add encryption library to node.js chaincode,FABCN-43,23901,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,10/Nov/17 6:51 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,22/Nov/17 3:21 AM,,0,,,,,,,"Goal is to enable encryption, decryption, signing and signature verification in chain code with simple code snippets like the following:

{code}
// tests the encryption of state values
async test11(stub, args) {
  // construct the encrypter, the stub is required to contain a transient map
  // with a key ""encrypt-key"", which will be used to encrypt the values
  let encrypter = new ChaincodeCrypto(stub);
  // 2nd arg has the new value to encrypt
  let ciphertext = encrypter.encrypt(Buffer.from(args[1]));
  await stub.putState(args[0], ciphertext); // 1st arg has the key
}

// tests the descryption of state values
async test12(stub, args) {
  // construct the decrypter, the stub is required to contain a transient map
  // with a key ""encrypt-key"", which will be used to decrypt the values
  let decrypter = new ChaincodeCrypto(stub);
  let ciphertext = await stub.getState(args[0]);
  let value = decrypter.decrypt(ciphertext);
}

// test the signing of state values
async test13(stub, args) {
  // construct the signer, the stub is required to contain a transient map
  // with a key ""sign-key"", which will be used to sign the values
  let signer = new ChaincodeCrypto(stub);
  let signature = signer.sign(Buffer.from(args[1]));
  let state = {
    signature: signature,
    value: args[1]
  };

  await stub.putState(args[0], Buffer.from(JSON.stringify(state)));
}

// test signature verifying
async test14(stub, args) {
  // construct the signer, the stub is required to contain a transient map
  // with a key ""sign-key"", which will be used to verify the signature with
  // the value
  let verifier = new ChaincodeCrypto(stub);
  let stateRaw = await stub.getState(args[0]);
  let json = JSON.parse(stateRaw.toString());
  // signature is originally a buffer
  let sig = Buffer.from(json.signature);
  let result = verifier.verify(sig, json.value);
}
{code}
",,huikang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzymw7:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,huikang,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Sep/18 12:15 AM;huikang;Hi, Jim ([~jimthematrix]), I am interested in this story and wondering if the story could be extended this to include pedersen commitment [1] as an encryption option. Thanks.

[1] https://en.wikipedia.org/wiki/Commitment_scheme;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Updates to TypeScript annotations,FABCN-44,38269,,Story,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,mbwhite,mbwhite,07/Mar/19 8:04 PM,18/Nov/20 7:52 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,community-help-wanted,feature,,,,,,lesleyannj,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00ezb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/20 7:50 PM;lesleyannj;Closing all sub tasks (1-4) as no current work taking place.  Please reopen if considered valid when work is started.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a typescript developer I can add a description to my params,FABCN-45,37102,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,24/Jan/19 6:33 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,25/Jan/19 7:25 PM,,0,,,,,,,,,awjh-ibm,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i008q7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jan/19 7:25 PM;mbwhite;[https://gerrit.hyperledger.org/r/#/c/28940/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backport 'GetPrivateDataHash' node.js shim API to 1.4.2,FABCN-46,41008,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,jtonline,jtonline,jtonline,11/Jul/19 10:01 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,16/Jul/19 12:33 AM,,0,,,,,,,"Master-v2.0.0 port

This is the golang shim commit:

[https://github.com/hyperledger/fabric/commit/2cf49eb91d7f17dc657367bf15f46b26fd036b64]

Matching Jira 

https://jira.hyperledger.org/browse/FAB-13527

 ",,Jakeeyturner,jtonline,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,FABCJ-39,FABCN-25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00tqs:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Jakeeyturner,jtonline,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/19 11:09 PM;jtonline;[https://github.com/jt-nti/fabric-chaincode-node/tree/15928-add-getprivatedatahash1.4]

...although, what if a 1.4.2 shim tries to use this with a pre 1.4.2 fabric without get private data hash support?;;;","15/Jul/19 9:46 PM;jtonline;[https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/32325];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"Publish ""nodeenv"" image to dockerhub",FABCN-47,39103,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Apr/19 12:14 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,12/Apr/19 12:30 AM,,0,,,,,,,"Publish ""nodeenv"" image to hyperledger dockerhub and create multiarch script to publish multiarch images.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00jsn:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a consumer of fabric-protos, I expect JavaScript language bindings to be available as an npm module",FABCN-48,41972,,Story,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,jtonline,jtonline,22/Aug/19 10:16 PM,18/Nov/20 7:55 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,community-help-wanted,,,,,"When protobuf definitions are updated in {{fabric-protos}}, an automated build process should be triggered to compile the protos to JavaScript and publish the generated artifacts as an npm module. The {{fabric-protos}} repository will not contain the generated language bindings.

It should not be possible to merge a CR to the {{fabric-protos}} repository if compilation of the protos to JavaScript fails.",,jtonline,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCJ-53,,,,,FAB-17812,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00xy3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Node.js chaincode to protobufjs 6,FABCN-49,42163,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,sstone1,sstone1,sstone1,02/Sep/19 9:15 PM,22/Apr/20 7:01 PM,28/Oct/23 2:28 AM,26/Sep/19 6:04 PM,,0,,,,,,,"This story will update the Node.js chaincode to protobufjs 6, which requires a significant rewrite of the code to cope with encoding/decoding differences between 5 and 6.",,heatherp,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1544,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00z5v:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,sstone1,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Mar/20 8:21 PM;heatherp;Work done under FAB-16496 and these commits:
[https://github.com/hyperledger/fabric-chaincode-node/commit/94ab998ad955691fcdc2ed4ff506c009f3748c45]
[https://github.com/hyperledger/fabric-chaincode-node/commit/f499e22717dea5fd7a303b4e6654f7d92ce7cb94]
https://github.com/hyperledger/fabric-chaincode-node/commit/2c39852cef0e907a0957c45aabf397e04f8383e0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Use best practice npm techniques (including audit, package-lock, and shrinkwrap)",FABCN-50,35705,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,heatherp,sstone1,sstone1,29/Nov/18 10:05 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,12/Nov/19 9:17 PM,,0,cc-triaged,,,,,,"This is for the fabric-shim, fabric-contract-api, and fabric-shim-crypto packages.

- The build should fail if `npm audit` finds any vulnerabilities

- We should check in the package-lock.json file as per the official guidance from npm:

https://docs.npmjs.com/files/package-locks#using-locked-packages
> It is highly recommended you commit the generated package lock to source control: this will allow anyone else on your team, your deployments, your CI/continuous integration, and anyone else who runs npm install in your package source to get the exact same dependency tree that you were developing on. Additionally, the diffs from these changes are human-readable and will inform you of any changes npm has made to your node_modules, so you can notice if any transitive dependencies were updated, hoisted, etc.

This will stop us being taken out by breaking downstream package changes such as the recent changes to the sinon module.

- We should run `npm shrinkwrap` before publishing the code.",,heatherp,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i000r3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,sstone1,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Nov/19 1:39 AM;heatherp;Master:

Matthew's PR for enabling npm audit: [https://github.com/hyperledger/fabric-chaincode-node/pull/20] & I'm happy that rush handles shrinkwrapping

1.4:
 In progress PR for enabling npm audit and shrinkwrapping: [https://github.com/hyperledger/fabric-chaincode-node/pull/23/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Permit @info annotation,FABCN-51,35852,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,04/Dec/18 6:41 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,05/Dec/18 10:23 PM,,0,,,,,,,Permit an @info annotation to support adding specific information to a contract instance. ,,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i001mn:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a chaincode developer, I want Typescript definitions of the API to enable content assist in code editors",FABCN-52,32624,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,andrew-coleman,andrew-coleman,07/Aug/18 5:49 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,07/Sep/18 7:52 PM,,0,,,,,,,Create typescript definitions of Contract/Stub classes,,andrew-coleman,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzluv:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,davidkel,mbwhite,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Aug/18 7:46 PM;mbwhite;https://gerrit.hyperledger.org/r/25945;;;","07/Sep/18 7:52 PM;davidkel;Completion of this task was done under FAB-11495;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Replace Log4Js with a less bloated logger implementation,FABCN-53,29346,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,zhaochy,davidkel,davidkel,12/Apr/18 9:41 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,20/Apr/18 12:31 PM,,0,,,,,,,"The fabric-shim logs to console. That is pretty much all it does. To do this requires 207 npm packages to be pulled in via log4js most of which will never be used eg `redis`.

Composer has received lots of reports of request timeouts due to the time it takes to build the chaincode container taking longer than the default 5 minutes.

replacing log4js would certainly improve this time on slow network connections as well as address the following warnings

{code:java}
npm WARN deprecated nodemailer@2.7.2: All versions below 4.0.1 of Nodemailer are deprecated. See https://nodemailer.com/status/
npm WARN deprecated node-uuid@1.4.8: Use uuid module instead
{code}

",,davidkel,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzz5nj:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,davidkel,zhaochy,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Apr/18 11:33 AM;zhaochy;[~harrisob@us.ibm.com] log4js@2.5.3 have 196 dependencies and a total size of 4.2Mb, while winston@2.4.1 have 6 dependencies and a total size of 167.6kb. Let's change log4js to winston to make a better performance for chaincode instantiate;;;","13/Apr/18 12:27 PM;zhaochy;https://gerrit.hyperledger.org/r/20523;;;","15/Apr/18 10:27 PM;davidkel;[~zhaochy] Thanks for fixing this. Is this planned to be ported to the 1.1 release stream ?;;;","16/Apr/18 10:51 AM;zhaochy;for release 1.1 https://gerrit.hyperledger.org/r/#/c/20603/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
node fabric shim needs to enable keepalive from client side,FABCN-54,34040,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,davidkel,davidkel,davidkel,25/Sep/18 1:19 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,09/Oct/18 10:57 PM,,0,,,,,,,the grpc dependency of the node fabric-shim doesn't perform keepalive as expected by default. While idle it will only send 2 pings at most then stop. This change is to ensure continous keepalive from chaincode to peer at a frequency of 1 every 60 seconds while idle. ,,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzs9z:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Sep/18 10:09 PM;Clayton Sims;I see you opened and assigned to yourself.   Can i assume you will be submitting fix

 

 ;;;","27/Sep/18 10:17 PM;davidkel;CR for 1.1:
https://gerrit.hyperledger.org/r/#/c/26529/;;;","28/Sep/18 8:12 PM;davidkel;CR for 1.2
https://gerrit.hyperledger.org/r/#/c/26660/

CR for 1.3
https://gerrit.hyperledger.org/r/#/c/26654/

CR for Master
https://gerrit.hyperledger.org/r/#/c/26655/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a chaincode developer, I want to implement the business logic of my contract's transactions with minimal fabric boilerplate",FABCN-55,32622,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,andrew-coleman,andrew-coleman,07/Aug/18 5:48 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,07/Sep/18 7:38 PM,,0,,,,,,,"* Implement Contract class and stub API delegation framework
 * Implement contract lifecycle handler (shim start mechanism)
 * Unit and Integration tests
 * Documentation",,andrew-coleman,awjh-ibm,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-296,FABCN-192,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzluf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,awjh-ibm,mbwhite,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Aug/18 4:50 PM;mbwhite;Gerrit change : https://gerrit.hyperledger.org/r/#/c/25865/;;;","29/Aug/18 11:48 PM;awjh-ibm;Gerrit change for Go: https://gerrit.hyperledger.org/r/#/c/25801/;;;","07/Sep/18 6:03 PM;mbwhite;Latest and greatest -->  https://gerrit.hyperledger.org/r/26098;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a (node) chaincode client, I want chaincode APIs for managing key-level endorsement policies",FABCN-56,29930,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,zhaochy,mne,denyeart,04/May/18 2:49 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,30/Oct/18 10:54 AM,,0,,,,,,,"Chaincode handler implementation of the chaincode shim interface for key-level metadata, for *Node.js chaincode*.",,ChristopherFerris,denyeart,mbwhite,mne,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,FAB-9784,FABCN-106,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,No,Unset,,,Unknown,,,,Unset,,,,"1|hzz8o7:",,,,Unset,Unset,,,,,,,,,,,,,,,,No,,,,,,,,,,,ChristopherFerris,denyeart,mbwhite,mne,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/May/18 2:52 AM;denyeart;I add this task to cover Node.js chaincode. Potentially [~harrisob@us.ibm.com] or [~zhaochy] could help once the go chaincode impl is done.;;;","12/Jun/18 6:04 AM;ChristopherFerris;What is the status of this task?;;;","12/Jun/18 10:53 AM;zhaochy;[~ChristopherFerris] As [~denyeart] said, I will start working on this task once the go chaincode impl is done.;;;","17/Oct/18 6:04 PM;mbwhite;Hi [~zhaochy] is this item complete?;;;","19/Oct/18 11:48 AM;zhaochy;not yet. still working on, I will finish this task next week;;;",,,,,,,,,,,,,,,,,,,,,,,,
Add TypeScript declarations for Node.js chaincode,FABCN-57,31369,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,SamRasha,sstone1,sstone1,26/Jun/18 6:08 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,20/Aug/18 10:27 PM,,0,,,,,,,"The {{fabric-sdk-node}} module has TypeScript declarations that make it easy for TypeScript developers to build applications using the Fabric SDK - it provides code completion and validation. This information can also be used by certain editors, such as Visual Studio Code, to provide code completion for JavaScript developers as well.

The {{fabric-chaincode-node}} module does not have TypeScript declarations, which means that whilst TypeScript developers can still write JavaScript chaincode, they cannot benefit from code completion and validation.

We should add a TypeScript declaration file to this module that defines all of the classes and functions exported by the module, to aid TypeScript developers.

I had a first stab at this - here's the steps:

The following line needs to be added into {{package.json}} to register the ""typings"" file:

{code}""typings"": ""index.d.ts""{code}

A file named {{index.d.ts}} needs to be created with the TypeScript declarations, here's what I had so far:

{code}/// <reference types=""node"" />

export interface ChaincodeInterface {
    Init(stub: Stub): Promise<any>;
    Invoke(stub: Stub): Promise<any>;
}

declare class FunctionAndParameters {
    fcn: string
    params: string[]
}

export class Stub {
    getArgs(): string[];
    getStringArgs(): string[];
    getFunctionAndParameters(): FunctionAndParameters;
}

export class Shim {
    static start(chaincode: ChaincodeInterface): any;
    static success(payload?: Buffer): any;
    static error(msg?: Buffer): any;
}{code}

There's a lot of classes and functions missing from this file, so plenty to do yet ;-)

This file also only works with these changes:
https://jira.hyperledger.org/browse/FAB-10863
https://gerrit.hyperledger.org/r/#/c/23639/",,davidkel,Sneljo,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzzg7r:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,davidkel,Sneljo,sstone1,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Jul/18 9:28 PM;Sneljo;Got this, [https://github.com/wearetheledger/fabric-shim-types] [https://gerrit.hyperledger.org/r/#/c/18725/]. I'll see if I can write some tests for it.;;;","03/Jul/18 8:33 PM;Sneljo;I tried adding tests, but couldn't get the integration tests to work. I've tested and used the shim types myself in https://github.com/wearetheledger/fabric-node-chaincode-utils and the types do work. I also typed the shim crypto package. https://github.com/wearetheledger/fabric-shim-crypto-types;;;","20/Aug/18 10:27 PM;davidkel;https://gerrit.hyperledger.org/r/#/c/25681/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade Node.js chaincode to Node.js v12,FABCN-58,42196,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,sstone1,sstone1,sstone1,05/Sep/19 6:47 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,26/Sep/19 6:04 PM,,0,,,,,,,"Node.js v12 will go LTS in October 2019, and will be LTS until April 2021. Since Fabric v2.0 is due to go out sometime in 4Q, it seems sensible to upgrade to Node.js v12 now, rather than attempt to do this in a Fabric v2.x release later on.

There are various new features Fabric contributors and smart contract developers alike will be able to exploit:
* Async stack traces
* Public and private class fields
* Worker threads",,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00zc3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sstone1,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Txns should be tagged as submitTx by default if annotiations not used,FABCN-59,36775,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,,awjh-ibm,awjh-ibm,15/Jan/19 7:22 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,07/Feb/19 7:20 PM,,0,,,,,,,When annotations are not used transactions are not given a tag meaning they look like evaluateTransactions from transaction annotations with false passed. This means a user of the metadata cannot trust it as whether or not to submit or evaluate the transaction.,,awjh-ibm,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i006tr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jan/19 6:25 PM;mbwhite;If an annotation is used, the default is submit; so when we can't use an annotation - it would be sense to follow so make the default true. ;;;","17/Jan/19 6:26 PM;mbwhite;[~awjh-ibm] want to take a run at this?  Might be worth 1.4.1 and 2.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
As a tyepscript developer I can declare Map types,FABCN-60,37784,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,19/Feb/19 6:47 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Feb/19 6:48 PM,,0,,,,,,,"Annotations used to describe return, properties and params should support the handling of Maps for metadata purposes as they do Arrays",,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00cd3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add ExecuteOperation to Node.js chaincode shim,FABCN-61,32466,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,sheehan,sheehan,01/Aug/18 6:55 AM,18/Nov/20 6:15 PM,28/Oct/23 2:28 AM,18/Nov/20 6:15 PM,,0,cc-triaged,external,,,,,The Node.js chaincode shim needs to provide a function similar to the ExecuteOperation function that is available in the Go chaincode shim. See FAB-11416,,calanais,SamRasha,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,FAB-11416,,,,,,,,,FAB-11416,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-10711,,,No,,Unset,No,,,"1|hzzl4f:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),calanais,SamRasha,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jan/19 7:58 PM;SamRasha;Go implementation never went in, so no context as for what to do. No point of being assigned and in my to do list;;;","18/Nov/20 6:15 PM;calanais;Withdrawing as the support for go never was implemented. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Export Shim class from Node.js chaincode module as per Stub,FABCN-62,31367,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Done,sstone1,sstone1,sstone1,26/Jun/18 5:34 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,04/Sep/18 5:25 PM,,0,,,,,,,"The module exports from fabric-shim for Node.js chaincode are a bit weird:

{code}module.exports = Shim;
module.exports.ClientIdentity = ClientIdentity;
module.exports.Stub = Stub;
module.exports.Iterators = require('./iterators');{code}

Because we have classes being exported from a top level class, it makes it difficult to write a TypeScript declaration file for this module.

The ideal TypeScript (IMO) import for this module would be:

{code}import { Shim, Stub, ClientIdentity } from 'fabric-shim';{code}

You could alternatively do it today by using a ""shim"" prefix for everything:

{code}import * as shim from 'fabric-shim';{code}

But that is a bit ugly as you have to do shim.ChaincodeInterface, shim.Stub, etc.

By duplicating the Shim export as follows, you can get to the ideal TypeScript import style:

{code}module.exports = Shim;
module.exports.Shim = Shim;
module.exports.ClientIdentity = ClientIdentity;
module.exports.Stub = Stub;
module.exports.Iterators = require('./iterators');{code}
",,davidkel,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzzg7b:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,davidkel,sstone1,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Sep/18 5:25 PM;davidkel;https://gerrit.hyperledger.org/r/#/c/23639/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node Chaincode images build take too much time and resources,FABCN-63,30761,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,sunhwei,sunhwei,31/May/18 12:07 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,07/Mar/19 8:34 PM,,0,chaincode,quality,,,,,"Node chaincode docker image build take too much time and resource , compared wit hGO chaincode build process,  the build time may be 10 times as Go's.  It often lead to chaincode instantiate timeout.     The current node chaincode image build on fabric-baseimage, its size about 1.5GB , but the Go chaincode images build based on fabric-baseos ,its size is about 150MB, it causes the new CC images build take too much time. ",,davidkel,denyeart,mbwhite,sunhwei,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzzddz:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,davidkel,denyeart,mbwhite,sunhwei,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jul/18 11:26 PM;davidkel;Part of the reason why node.js chaincode container images take so long to create is that they perform a npm install. However usng fabric-baseimage as the runtime image for a node chaincode container isn't a good choice and there is this JIRA to cover it

https://jira.hyperledger.org/browse/FAB-5886;;;","06/Sep/18 9:26 PM;davidkel;FAB-11555 will look at being able to improve the issue around chaincode images taking too long to build;;;","23/Jan/19 10:31 AM;denyeart;[~davidkel] [~mastersingh24] Now that FAB-11555 is merged for v2.0, what else is needed here?;;;","07/Mar/19 8:33 PM;mbwhite;That work has happened; things do appear to better qualitatively.

Any further changes will be dependant on updates to the deployment of chaincode in general.;;;","07/Mar/19 8:34 PM;mbwhite;Work completed;;;",,,,,,,,,,,,,,,,,,,,,,,,
Implement MockStub for node chaincode,FABCN-64,26500,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Won't Do,arner,arner,arner,05/Jan/18 3:57 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,06/Sep/18 9:22 PM,,1,nodejs-chaincode,stub,,,,,"Proposal is to create a JavaScript version of MockStub (same structure as the Golang implementation[1]) and add it to the fabric-shim npm package. This allows the chaincode developer to use mocha or similar testing frameworks to unit test chaincode.

To be implemented as part of this story:
{quote}getArgs

getCreator

getStringArgs

getFunctionAndParameters

getTxID

getTransient

getState

putState

deleteState

setEvent
{quote}
 

Implemented as helper functions:
{quote}mockInvoke

mockInit

mockTransactionStart

mockTransactionEnd
{quote}
 

Not implemented for now:
{quote}getStateByPartialCompositeKey

getStateByRange

getQueryResult

getHistoryForKey

invokeChaincode
{quote}
 

[1] [https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/mockstub.go]",,arner,davidkel,ibmamnt,,,,,,,,,,,,,,86400,57600,,0%,86400,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,,,Unset,,,,"1|hzysdr:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,arner,davidkel,ibmamnt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Sep/18 9:22 PM;davidkel;Sorry, still think the best approach is to use a mocking library such as sinon. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a JS/plain TypeScript developer I would like to supply more information for metadata,FABCN-65,34822,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,SamRasha,mbwhite,mbwhite,22/Oct/18 10:52 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,14/Nov/18 11:09 PM,,0,,,,,,,"Only so much metadata can be inferred from the code; As a developer I should be able to provide a sidecar file that can be filled out with additional information. (Plain typescript means a typescript developer that hasn't used any annotations or though the files are .ts and compiled, they are in effect Javascript)

For a first implementation, at runtime this information should be *the* version that overrides anything determined by the code.

More sophisticated checking is outside the scope of this story, should the contract go through, say the vsCode package or other validation then the code should be validated against the supplied metadata - errors flagged as appropriate. 

 

*Location*: CouchDB Indexes are within the META-INF directory - so this should be stored in a similar location. 

*Format*: The format of this metadata file should match the established Schema.

*Implementation*:  Internal representation of the schema can be different - should that be more efficient.

*Notes on testing:*

Valid invalid formats, check different SDKs to ensure that the file is packaged by all of them

Data is returned correctly and not modified

This is a read on start; so the major performance issue would be any runtime checking of the internal data structures. 

 ",,awjh-ibm,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzvzb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a Typescript Developer I can use additional annotation features,FABCN-66,34890,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,mbwhite,mbwhite,26/Oct/18 1:01 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,05/Dec/18 10:30 PM,,0,,,,,,,"These can therefore be used to produce some of this meta-data..

 

This should include integration tests

 

The implementation design is here. 

[https://docs.google.com/document/d/1LJRmGE35oZ6z0-n-kPy8JEmOshhtWjiVxBMETvO3S4s/edit?usp=sharing]

 

 

 ",,awjh-ibm,mbwhite,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzwbr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,mbwhite,SjirNijssen,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Nov/18 2:07 AM;awjh-ibm;Transaction annotations in CR -> https://gerrit.hyperledger.org/r/#/c/27397/;;;","13/Nov/18 6:55 PM;awjh-ibm;Jira to track object and properties FAB-12837;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Separate Node.js shim API from shim implementation,FABCN-67,42210,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,sstone1,sstone1,sstone1,06/Sep/19 9:58 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,16/Oct/19 12:53 AM,,0,cc-triaged,,,,,,"The Node.js shim (fabric-shim) includes a bunch of interface definitions for the stub that the contract API (fabric-contract-api) depend upon. This is not ideal, as it means that anyone trying to use just the contract API ends up pulling in the shim and all of its native dependencies.

The new programming model was designed such that a contract can be written using just the API, and the shim can be provided at runtime. This will also enable that scenario.",,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00zeb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sstone1,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Oct/19 12:53 AM;sstone1;https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33393;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a user I would like to specify in the metadata optional parameters,FABCN-68,39318,,Story,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,awjh-ibm,awjh-ibm,15/Apr/19 10:23 PM,18/Nov/20 6:15 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,community-help-wanted,feature,,,,"Currently there is no way to specify whether parameters are required or not. The metadata could add required: (boolean) to the parameter definition for those that are/aren't.

Currently parameters are gathered by annotation which could be extended to have a required field which default is true.",,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00l1j:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide declarative participant access control for chaincode ,FABCN-69,37987,,Story,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,DennisM330,DennisM330,27/Feb/19 12:23 AM,18/Nov/20 6:16 PM,28/Oct/23 2:28 AM,,,2,cc-triaged,community-help-wanted,external,feature,,,"As a chaincode deployer, I would like the ability to provide declarative access control on transactions within the chaincode based on a participant's role in the blockchain network so that I have separation of roles with respect to security and do not require the Smart Contract developer to embed code into the Smart Contract to specify access control.",,DennisM330,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00dev:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),DennisM330,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create explicit base container for Node chaincode,FABCN-70,32762,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,mastersingh24,mastersingh24,mastersingh24,11/Aug/18 9:10 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Dec/18 11:38 PM,,1,,,,,,,"The current base image for Node chaincode is fabric-baseimage.  This is unnecessary and massively increased the size on Node chaincode containers.

A minimal base image should be used",,avokadokurdu,davidkel,grice_32,mastersingh24,MichaelWang,silliman,,,,,,,,,,,,,,,,,,,,,,,,FABCN-28,,,,,,FABCN-3,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzmgf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),avokadokurdu,davidkel,grice_32,mastersingh24,MichaelWang,silliman,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Sep/18 5:19 PM;davidkel;Some thoughts on what we might want to achieve for this
 # Remove the dependency of core fabric invoking npm install --production inside the builder container. It should invoke some sort of generic command (as defined by the container) and that generic command will handle the requirements to build a chaincode container image. For example it can decide whether to run npm install or not and can also handle taking a .npmrc file stored outside of the chaincode package as this file is organisation dependent.
 # The image can be preloaded with npm modules as to support inversion of control and reduce the npm install download time as well as avoid common native modules such as grpc/x509 issues.

This could assist with resolving FAB-9530, FAB-9287. FAB-5886 is a duplicate and will be closed.

Tagging other interested parties
[~simonstone1]
[~andrew-coleman]
[~zhaochy]
[~harrisob@us.ibm.com]

For further discussion;;;","05/Sep/18 7:35 PM;davidkel;As a further thought, the building of these images should be maintained and published under the fabric-chaincode-node component and as such become owned and subject to control by the maintainers of this component.;;;","23/Sep/18 7:12 PM;davidkel;As a further requirement, node chaincode containers need to have a deployment way of determining the grpc options to use when communicating with a peer. This isn't something that should have to be specified by the chaincode package themselves. It is a system setup requirement not the responsibility of chaincode to determine.;;;","02/Oct/18 5:52 PM;davidkel;Another thing we should investigate that may be of use is to reduce the dependency tree fabric-shim, cid and contract-api has on external npm modules. The less we have the better for reducing the risk a vunerabilities that may be disclosed for versions of npm modules used.;;;","25/Nov/18 10:56 PM;mastersingh24;https://gerrit.hyperledger.org/r/27718;;;","30/Nov/18 7:46 AM;mastersingh24;moving to 2.0;;;",,,,,,,,,,,,,,,,,,,,,,,
Logging missing useful information,FABCN-71,39316,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,awjh-ibm,awjh-ibm,15/Apr/19 10:15 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,15/Apr/19 10:44 PM,,0,,,,,,,Logging is missing key information which is not printed out to the console. Logs for @Object and @Property I have noticed are affected but others may or may not have the same issue,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00l13:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JavaScript Contract - add in number of arguments,FABCN-72,39785,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jtonline,mbwhite,mbwhite,13/May/19 6:55 PM,23/Jan/20 6:50 PM,28/Oct/23 2:28 AM,16/May/19 11:55 PM,,0,,,,,,,"For JavaScript contracts, the metadata is automatically generated. As such only the transaction function names appear. 

JavaScript should give access to the number of parameters a function has. 

Use this to generate a set of arbitrarily named arguments...

 

eg. 

foo(arg0, arg1, arg2)",,jtonline,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00nkv:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,mbwhite,,,,,,,,,,,,,,release-1.4,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/May/19 11:55 PM;jtonline;[https://gerrit.hyperledger.org/r/#/c/31380/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Publish hyperledger/fabric-nodeenv stable image to nexus from master branch,FABCN-73,36382,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,23/Dec/18 10:53 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,22/Jan/19 11:43 PM,,0,,,,,,,"After this change [https://gerrit.hyperledger.org/r/#/c/27718/] is merged into the repository, the byfn node chaincode tests are expecting hyperledger/fabric-nodeenv image. Publish this image with amd64-latest and s390x-latest images to nexus3 repository from chaincode-node master branch.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-350,FABCN-87,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i004cn:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Jan/19 12:53 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/28683/;;;","22/Jan/19 11:43 PM;rameshthoomu;Patch has been merged in fabric-chaincode-node repository. Now on, fabric-chaincode-node successful merge job publishes nodeenv image to nexus3 with tag <$ARCH-latest>.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Gulp tasks appearing as <anonymous> in stack trace ,FABCN-74,36605,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Lowest,Invalid,,SamRasha,SamRasha,09/Jan/19 11:34 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,15/Oct/19 11:51 PM,,0,,,,,,,"This occurred with the new Gulp 4.0 version update, and solution is below.

https://codeburst.io/switching-to-gulp-4-0-271ae63530c0
Update gulp tasks to follow newly implemented gulp task definition method

Examples shown above, more tutorials available. Currently with the new update of Gulp 4.0, the old method of defining gulp tasks e.g  gulp.task('test', gulp.series('pretest', () => {}) causes stack traces to be titled <anonymous> rather than <test>. There are some easier done solutions to this, such as taking the function out of gulp.task(), setting values for its displayName, and simply doing gulp.task(functionName). However, this makes the file less coherent. Through exporting as the tutorial at the top shows, it follows the new guidelines for setting gulp.tasks, and simplifies code. 

Boilerplate code example here which is linked in the tutorial: https://github.com/jh3y/gulp-boilerplate",,heatherp,mbwhite,SamRasha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i005nz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,mbwhite,SamRasha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/19 8:15 PM;mbwhite;Let's put as a background tasks if time permits..;;;","15/Oct/19 11:51 PM;heatherp;Now invalid due to RUSH updates;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Typescript chaincode @Returns() decorator takes a string denoting the type rather than the type itself,FABCN-75,36071,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Lowest,Won't Do,,14gracel,14gracel,12/Dec/18 1:00 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,06/Feb/19 9:06 PM,,0,,,,,,,"{code:java}
@Object()
class Car {
}

@Returns('Car')
static async getCar(ctx) {}{code}
Should become 
{code:java}
@Object() 
class Car { 
}
 
@Returns(Car) // Class definition rather than a string
static async getCar(ctx) {}{code}
Since the class definition is available, so feels more natural to a TS/JS developer",,14gracel,awjh-ibm,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i002mn:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),14gracel,awjh-ibm,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/19 12:14 AM;awjh-ibm;The current solution for allowing users to specify their array type relies on this being a string. If typescript is updated to provide array types in the metadata we will come back and changed this. For now it is best left as a string;;;","25/Jan/19 12:38 AM;mbwhite;[~awjh-ibm] is this not resolved in the master branch now?;;;","25/Jan/19 1:36 AM;awjh-ibm;No, this will not be resolved as we need it in string format. If they pass in the type and it is an array we will be back to knowing just that it is an array and not the type of the items. This can only be resolved when typescript lets us reflect the item types of arrays.;;;","06/Feb/19 9:06 PM;mbwhite;Limitation of the current platform; therefore will close; we need to remain with the current approach until such a time as Typescript has greater introspection support.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Update to use RUSH monorepo support,FABCN-76,42396,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,18/Sep/19 11:52 PM,17/Jun/20 5:50 PM,28/Oct/23 2:28 AM,15/Oct/19 11:14 PM,,0,,,,,,,"Update to use RUSH mono repo support;

Managing multiple npm modules within a single repo is difficult; prior to other updates for github migration some refactoring of builds is a good idea. ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1579,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i010c3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Sep/19 11:53 PM;mbwhite;https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33532 [FAB-16635] Refactor to RUSH

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare for Chaincode Node 1.4,FABCN-77,35045,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,01/Nov/18 11:33 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,07/Nov/18 1:48 AM,,0,,,,,,,"Make the follow file changes
{quote}CHANGELOG.md - add entries using the command  `/scripts/changelog..sh 55f8ccc 1.4.0-beta`
 fabric-shim/package.json  - update the *version* : 1.4.0-beta, *tag : beta*
 fabric-shim-crypto/package.json- update the *version* : 1.4.0-beta, *tag : beta*
 fabric-contract-api/package.json- update the *version* : 1.4.0-beta, *tag : beta*
 package.json - - update the *version* : 1.4.0-beta

test/scenario/package.json - change all 1.3.0 to 1.4.0-beta
 release_notes/v1.4.0-beta.txt - create (copied from 1.3.0.txt) and add notes for 1.4.0-beta
{quote}
Once the above changes are merged

from the root of fabric-chaincode-node project directory

 
{code:java}
git checkout master
git pull
git tag -a v1.4.0-beta `git log -n 1 --pretty=oneline | head -c7` -F release_notes/v1.4.0-beta.txt
git push origin v1.4.0-beta HEAD:refs/heads/master{code}
 ",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzx73:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Nov/18 2:16 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/27312/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode node documentation is published from master,FABCN-78,33451,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,davidkel,davidkel,04/Sep/18 5:33 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,06/Sep/18 9:28 PM,,0,,,,,,,http://fabric-shim.github.io documentation is taken directly from master. This means you cannot get the docs for a previous version and also the docs will include inreleased capability. A minimal solution should be to publish from the latest release branch which when cut would only mean it showing new stuff for a little while that wasn't available in an official release. It should also ensure it displays version information so people can understand the level of code this documentation refers to,,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-280,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzpav:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handle Enum in chaincode metadata,FABCN-79,39329,,Story,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,awjh-ibm,awjh-ibm,16/Apr/19 12:31 AM,18/Nov/20 7:55 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,community-help-wanted,,,,,Enums are currently shown as just number in the metadata. It would be nice to show users what the enums represent and what they can set.,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00l3r:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Publish_API_Docs.sh script in chaincode-node,FABCN-80,36373,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,vijaypunugubati,vijaypunugubati,vijaypunugubati,22/Dec/18 2:11 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,22/Dec/18 2:37 AM,,0,,,,,,,Update Publish_API_Docs.sh script in chaincode-node,,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i004av:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Dec/18 7:53 AM;vijaypunugubati;Please check this patch for the above change https://gerrit.hyperledger.org/r/#/c/28351/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-chaincode-node  release v1.1.1,FABCN-81,29967,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,05/May/18 4:16 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,23/May/18 4:56 AM,,0,,,,,,,"Create CHANGELOG.md

./scripts/changelog.sh v1.1.0 v1.1.1

create release_notes/v1.1.1.txt

update package.json files with the release identifier

/package.json 

""version"": ""1.1.0"",  -> ""version"": ""1.1.1"",

/src/package.json

    ""version"": ""1.1.0"",  -> ""version"": ""1.1.1"",

./src/fabric-shim-crypto/package.json

    ""version"": ""1.1.0"",  -> ""version"": ""1.1.1"",",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzz8v3:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/18 4:56 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/21445/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Pipeline script to fetch the BaseVersion from release-1.4 branch,FABCN-82,36069,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,rameshthoomu,rameshthoomu,rameshthoomu,12/Dec/18 12:30 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,19/Jan/19 3:36 AM,,0,,,,,,,Update Pipeline script to fetch the BaseVersion from release-1.4 branch,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i002m7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jan/19 3:36 AM;rameshthoomu;No need to fetch the baseversion in release branches, as we pull the images using testFabricVersion in package.json file. Closing this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update CI script to remove script to install nvm,FABCN-83,37016,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,,rameshthoomu,rameshthoomu,22/Jan/19 1:49 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,24/Apr/19 11:20 PM,,0,,,,,,,Update CI script to remove script to install nvm. Nvm is already installed in s390x build environment. This is not required to install for every build.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1110,,,,,,,FABN-1110,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i0087j:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Apr/19 11:20 PM;rameshthoomu;The change was submitted in CI scripts. Closing this now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Get rid of ability to use contract specs from the package.json,FABCN-84,35512,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,SamRasha,SamRasha,SamRasha,21/Nov/18 8:55 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Nov/18 10:22 PM,,0,,,,,,,,,SamRasha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzzqn:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),SamRasha,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backport FAB-14246 to release-1.4,FABCN-85,37861,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,21/Feb/19 6:49 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,01/Mar/19 1:04 AM,,0,,,,,,,Backport the ability to parse maps when generating schemas using tags into 1.4,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00cs7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NodeShim - grpc level set,FABCN-86,29965,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,05/May/18 1:55 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,23/May/18 4:57 AM,,0,,,,,,,"set the grpc level to be what has been tested 1.10.1

 ",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-129,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzz8un:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/May/18 4:40 AM;harrisob@us.ibm.com;master - [https://gerrit.hyperledger.org/r/#/c/21433/]

v1.1     - https://gerrit.hyperledger.org/r/#/c/21435/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update pipeline scripts in fabric-chaincode-node project,FABCN-87,35848,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,rameshthoomu,rameshthoomu,rameshthoomu,04/Dec/18 2:29 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,20/Jan/19 1:31 AM,,0,,,,,,,Update pipeline script to fetch the correct patchset.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1048,,,,,FABCN-73,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i001lr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Dec/18 3:13 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/27901/;;;","15/Jan/19 1:55 AM;rameshthoomu;[https://gerrit.hyperledger.org/r/#/c/28683/]

https://gerrit.hyperledger.org/r/#/c/28685/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"Node 10 is now LTS, investigate and decide on appropriate Node version for Chaincode in 2.0",FABCN-88,34993,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,davidkel,davidkel,31/Oct/18 8:29 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,26/Apr/19 8:19 PM,,1,,,,,,,,,davidkel,davidkhala,mastersingh24,mbwhite,MichaelWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1031,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzwvb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,davidkhala,mastersingh24,mbwhite,MichaelWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Nov/18 12:45 AM;mbwhite;The x509 library that is being used needs to have a fix applied.

[https://github.com/Southern/node-x509/pull/71]

 ;;;","23/Nov/18 1:29 PM;davidkhala;Well, I also feel uncomfortable that it looks Southern/node-x509 implicitly depends on node-gyp. It is always a source of build problem for machine with Python3 installed.
It could be better if we can have a pure JS alternative one. encharm/x509.js might be one of them but it lacks of maintain;;;","23/Nov/18 6:09 PM;mbwhite;Agreed; we have been able to change the x509 previously but there is a serviceability issue. 

Quote from the dev who looked at it: (which implies it's a 2.0 issue)

>> One of the functions (can’t remember which) returns the cert in the format that module generates, other modules were different formats so changing it out would be a breaking change (also others missed certain fields it returned but had others it missed);;;","07/Dec/18 7:16 PM;mbwhite;Undoubtedly we will need to move this away from the x509 parsing to a different solution. ;;;","10/Mar/19 8:42 PM;mastersingh24;We need to move to Node 10 ...;;;","11/Mar/19 7:28 PM;mbwhite;[~mastersingh24]https://gerrit.hyperledger.org/r/#/c/29420/ we're waiting on that CR for review;;;","12/Mar/19 1:55 AM;mbwhite;Fabric update is

 [https://gerrit.hyperledger.org/r/30000]  FAB-13075 Fabric CR to support new base image 

Baseimage is 

[https://gerrit.hyperledger.org/r/#/c/29420/] ;;;",,,,,,,,,,,,,,,,,,,,,,
Update Pipeline script with credentials ,FABCN-89,35346,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,15/Nov/18 1:03 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,28/Nov/18 3:00 AM,,0,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzytb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Nov/18 1:14 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/27550/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a typescript developer I can use date as a type,FABCN-90,39090,,Story,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,awjh-ibm,awjh-ibm,05/Apr/19 5:34 PM,21/Dec/21 11:30 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,community-help-wanted,,,,,"Currently if I specify Date as a type the generation of metadata fails as it tries to reference a component called Date (like other components referenced by the user), instead the api should handle this natively.",,awjh-ibm,saharat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00jq7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,saharat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/21 11:28 PM;saharat;Hello. So how do you solve this problem? Did you use TimeStamp of 'fabric-shim-api' instead?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
It should be possible to increase the memory used by node in a node CC,FABCN-91,34992,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Invalid,,davidkel,davidkel,31/Oct/18 4:29 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,09/Oct/19 9:44 PM,,1,,,,,,,As chaincode containers are stateless but handle multiple concurrent requests from multiple channels there is the possibility that a lot of data will be concurrently loaded into the node.js process of the chaincode container. The node.js container could exceed the default memory limit of node (which is about 1.7Gb). It should be possible to specify node options which among other things allows the ability to define the memory configuration of the node.js process running in the chaincode container,,davidkel,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzwv3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance putState/getState support Json Obj,FABCN-92,40458,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,SamYuan1990,SamYuan1990,07/Jun/19 12:18 PM,18/Nov/20 6:20 PM,28/Oct/23 2:28 AM,18/Nov/20 6:20 PM,,0,cc-triaged,external,,,,,"Assuming chaincode interact with json obj.

So far, chaincode developer have to convert json obj to string via JSON.stringify before invoke putState, to store it in ledger db.
Meanwhile have to invoke JSON.parse after getState to recover json obj back from string.

Ref:
https://github.com/hyperledger/fabric-samples/blob/master/chaincode/marbles02/node/marbles_chaincode.js#L130

https://github.com/hyperledger/fabric-samples/blob/master/chaincode/marbles02/node/marbles_chaincode.js#L107",,mbwhite,SamYuan1990,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-358,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-358,,,No,,Unset,No,,,"1|hzzl4e:yy",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,SamYuan1990,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jan/20 6:25 PM;mbwhite;The requirement here will be resolved by the implementation of the Ledger API. 

Please do comment on the RFC

 [https://github.com/hyperledger/fabric-rfcs/pull/16];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adding to FV-Tests,FABCN-93,39031,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,SamRasha,SamRasha,03/Apr/19 10:32 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,03/Oct/19 10:45 PM,,0,,,,,,,Adding tests for statebased endorsement and some version changes to the basic-network in chaincode-node,,heatherp,SamRasha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-308,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00jdb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,SamRasha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Sep/19 10:38 PM;heatherp;The related CR was abandoned: [https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/30684]
So I'm updating the status of this one;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-chaincode-node release process automation,FABCN-94,41258,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,17/Jul/19 10:37 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,13/Sep/19 10:58 PM,,0,,,,,,,"Set of scripts to help the release process for fabric-chaincode-node projects

 
 
{code:java}
# > Work from the latest release-1.4 branch 
# > Write a new release notes file along the lines of the the existing files 
# > Run the script 
# 
# ./scripts/release.sh 
# 
# This will change the version to the correct release version and set the tag to mark the package 
# as npm publishable by the merge builds 
# > Submit this to gerrit with this push command 
# 
# git push origin HEAD:refs/fogit r/release-1.4 
# 
# > When the build has complete, git pull to update your branch 
# > To tag in gerrit run 
# 
# ./scripts/gittag.sh 
# 
# > To update the version to a new snapshot leve run the 
# 
# NEW_SUFFIX=snapshot ./scripts/release.sh 
# 
# > Push these changes as per normal{code}
 
 ",,denyeart,heatherp,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00u8c:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,heatherp,mbwhite,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jul/19 10:38 PM;mbwhite;https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/32372 [FAB-15990] release scripts;;;","29/Aug/19 3:16 AM;denyeart;Merged in release-1.4.
Is a cherry pick to master required?;;;","12/Sep/19 11:38 PM;heatherp;cherry pick is here: https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/%2B/33491;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update CI script to remove release-1.4 branch condition,FABCN-95,36724,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,,rameshthoomu,rameshthoomu,14/Jan/19 12:54 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,24/Apr/19 11:19 PM,,0,,,,,,,,,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i006jz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jan/19 12:58 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/28685/;;;","17/Jan/19 6:39 PM;mbwhite;[~rameshthoomu] - is this resolved now or is it related to the error you mentioned on chat?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Update the tag and version for npm modules to publish in chaincode node,FABCN-96,37082,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,vijaypunugubati,vijaypunugubati,24/Jan/19 2:26 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,30/Aug/19 1:29 AM,,0,quality,,,,,,"In the following branches release-1.3, 1.2 & 1.1 the tag and version for the npm modules should be updated, current json file shows, tag pointing to latest and the version without snapshot leads build fail to publish modules.",,mbwhite,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i008lr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jan/19 2:59 AM;rameshthoomu;As a best practice, we have to merge the prepare for the next release CR after release CR is merged. All merge jobs of fabric-sdk-node and fabric-chaincode-node builds will fail as npm won't update the same module version again and again.  [~harrisob@us.ibm.com] [~mbwhite];;;","24/Jan/19 11:48 PM;mbwhite;[~vijaypunugubati]  for the avoidance of doubt..

For release-1.4 branches.. would this would be correct package.json at this point in time??

{{""version"": ""1.4.1-snapshot"",}}
 {{""tag"": ""unstable-1.4"",}};;;","29/Jan/19 11:31 PM;vijaypunugubati;[~mbwhite] Yes it is if we see the npm registry for release-1.4 we can see current tag as ""unstable-1.4"" and the corresponding version will be ""1.4.1-snapshot.5"". Merge job will fail in release-1.3, 1.2 & 1.1 as the tag and version are not update.

[https://www.npmjs.com/package/fabric-shim]

 ;;;","29/Jan/19 11:34 PM;vijaypunugubati;*Summary:* Merge job ** fail to publish the npm modules.**

*Intermittent:* *N*

*Branch: release-1.2***

*Platform:* ** *x86_64*

*Error Snippet:*
{code:java}
/00:10:20.469 -----------> Publish npm modules from amd64
00:10:20.732  Publishing fabric-shim 
00:10:20.732  ======> CURRENT_TAG: latest-1.2 
00:10:20.732  ======> Current RELEASE_VERSION: 1.2.4 
00:10:20.732  ======> RELEASE_VERSION: 1.2.4 
00:10:20.732 
00:10:20.732  ======> CURRENT_TAG: latest-1.2 
00:10:22.134 npm ERR! publish Failed PUT 403
00:10:22.135 npm ERR! code E403
00:10:22.135 npm ERR! You cannot publish over the previously published versions: 1.2.4. : fabric-shim
00:10:22.135 / code placeholder
{code}
*Build Logs:* 

https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-merge-x86_64/93/console;;;","31/Jan/19 12:48 AM;mbwhite;https://gerrit.hyperledger.org/r/29036 [FAB-13849] Release1.1 npm correction

https://gerrit.hyperledger.org/r/29035 [FAB-13849] Release1.2 npm correction

https://gerrit.hyperledger.org/r/29037 [FAB-13849] Release1.3 npm correction

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,
Reformatting e2e-gulp tasks for Chaincode-node,FABCN-97,36794,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,SamRasha,SamRasha,SamRasha,16/Jan/19 12:43 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,17/Jan/19 12:11 AM,,0,,,,,,,Reformatted the gulp test-e2e tasks to make it slightly more coherent,,SamRasha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i006y7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),SamRasha,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup the unused artifacts (mychannel.block and crypto in /tmp/fabric-shim) after the chaincode-node e2e test,FABCN-98,27782,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,harrisob@us.ibm.com,rameshthoomu,rameshthoomu,16/Feb/18 3:12 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,01/Mar/18 7:43 AM,,0,fabric-chaincode-node,,,,,,"*Jenkins* user is unable to delete the *mychannel.block and crypto* directory as the *root* user is setting up on these files/directory.
*00:11:42.004* rm: cannot remove '/tmp/fabric-shim/chaincode/hyperledger/fabric/peer/mychannel.block': Permission denied*00:11:42.005* rm: cannot remove '/tmp/fabric-shim/chaincode/hyperledger/fabric/peer/crypto': Permission denied
gulp task in fabric-chaincode-node should delete these files after execute the e2e tests.",,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzyxqv:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Mar/18 5:09 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/18551/;;;","01/Mar/18 7:44 AM;harrisob@us.ibm.com;Ramesh added code to the build to handle. Unable able to do this from the gulp test as it is running as the wrong user;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric image tag in jenkinsfiles,FABCN-99,37114,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,rameshthoomu,rameshthoomu,25/Jan/19 1:10 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,27/Apr/19 4:41 AM,,0,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i008sv:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Apr/19 4:41 AM;rameshthoomu;This might have fixed already.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integration tests fail to notice that the chaincode is not running in dev mode,FABCN-100,34750,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,17/Oct/18 11:08 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,25/Oct/18 12:51 AM,,0,,,,,,,"The integration tests start up the chaincode for use in dev mode but the peer does not use this and instead creates a docker image during the dev mode tests. The tests should therefore properly use dev mode for install, instantiate and invoke.",,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzvk7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Instantiating node chaincode is using ccenv docker image not the nodeenv image.,FABCN-101,38442,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mastersingh24,rameshthoomu,rameshthoomu,14/Mar/19 5:42 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,15/Mar/19 1:49 AM,,0,,,,,,,"instantiating node chaincode is using ccenv image not the nodeenv image.

echo y | ./byfn.sh -m up -l node -t 60

observed below log: Is this correct behaviour? if yes, why are we not using nodeenv image just like javaenv image (it's using javaenv docker image)
{code:java}
Rameshs-MacBook-Pro:fabric thoomu@us.ibm.com$ docker ps -a
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
0edc5f99a876 hyperledger/fabric-ccenv:2.0.0 ""/bin/sh -c 'cp -R /…"" Less than a second ago Created fervent_greider{code}",,rameshthoomu,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00fzb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,sstone1,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Mar/19 5:58 PM;sstone1;https://gerrit.hyperledger.org/r/#/c/30084/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Node Chaincode 1.4.4,FABCN-102,43289,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jtonline,mbwhite,mbwhite,12/Nov/19 6:47 PM,05/Dec/19 8:58 PM,28/Oct/23 2:28 AM,05/Dec/19 8:58 PM,,0,cc-triaged,,,,,,"Release Node Chaincode 1.4.4.

 

 ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i014gz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Nov/19 7:30 PM;mbwhite;[https://github.com/hyperledger/fabric-chaincode-node/pull/24];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric chaincode node should have its own fabric setup for testing,FABCN-103,38081,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,28/Feb/19 7:07 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,14/Mar/19 12:23 AM,,0,,,,,,,Currently fabric-chaincode-node relies on the basic network from fabric-samples for its testing. It should instead have its own network specified.,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00dx3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expose ability to get metadata via JS rather than CLI,FABCN-104,37684,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,awjh-ibm,awjh-ibm,14/Feb/19 11:13 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,16/Oct/19 12:09 AM,,0,,,,,,,"It should be possible to get the metadata of a non-running contract without having to go through the CLI command. This should be thought through for consistent implementation across all chaincodes. This would allow the SDK's to provide a util function for getting the metadata of non running contracts.

Use case for this:
A tooling solution can provide suggestions for functions to call on instantiate",,awjh-ibm,Jakeeyturner,jmason900,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00bu7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,Jakeeyturner,jmason900,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/19 2:32 AM;jmason900;Generators will also need this metadata input as well;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move @Param annotation to be on the parameter not the function,FABCN-105,39320,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,awjh-ibm,awjh-ibm,15/Apr/19 10:32 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,15/Apr/19 10:34 PM,,0,,,,,,,Currently the param annotation exists above the function meaning that the parameter name is passed as a string to the annotation. Instead this should sit on the parameter to avoid this and avoid confusion with the property annotation which takes a name for renaming.,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00l1r:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for Keylevel Endorsement policies to Node Chaincode,FABCN-106,33613,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,davidkel,davidkel,10/Sep/18 7:56 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,19/Sep/18 6:12 PM,,0,,,,,,,"I've just spotted a change in the code where the Go Shim was updated but no equivalent for the node.js chaincode.
It was defined here FAB-11738
Assuming this is not going out as an experimental feature then this issue is to track the requirements for node.js chaincode to support the same capabilities as the Go Shim.",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-56,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzq3z:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update schema returns to just be a return type,FABCN-107,37495,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,08/Feb/19 12:23 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,11/Feb/19 6:26 PM,,0,,,,,,,Code can only return success or error. If it is an error a string is return whereas success can be formatted in many ways thus only one return type is needed to be declared,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00awf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduce CLI arg to point shim to module,FABCN-108,34605,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,12/Oct/18 12:23 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,17/Oct/18 6:02 PM,,0,,,,,,,Introduce a CLI argument to take in the path to the module. This will allow the shim command to be run as a global command line tool.,,awjh-ibm,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzuqv:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Oct/18 5:02 PM;mbwhite;https://gerrit.hyperledger.org/r/#/c/27000/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable node.js chaincode to be able to support logging,FABCN-109,38213,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jtonline,mbwhite,mbwhite,05/Mar/19 11:14 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,17/May/19 12:04 AM,,0,,,,,,,"* Add in to the context, two simple APIs to enable setting the level of all the loggers, and to enable getting a logger that the chaincode itself can use

This permits functions to be writtren that be called that can alter the logging level in chaincode.

Also rather than doing console.info/log  contract code can write

 

ctx.logging.getLogger().info('... I'm info')  

ctx.logging.getLogger().debug('... I'm info')  ",,jtonline,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00enj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,mbwhite,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Mar/19 11:19 PM;mbwhite;[https://gerrit.hyperledger.org/r/#/c/29828/]

 ;;;","01/Apr/19 6:52 PM;jtonline;Needs porting to 2.0;;;","02/Apr/19 12:53 AM;jtonline;[https://gerrit.hyperledger.org/r/#/c/30596/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update repository value in package.json,FABCN-110,23904,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,10/Nov/17 7:15 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,14/Nov/17 12:21 PM,,0,,,,,,,right now it has the wrong value,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzymwv:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Nov/17 12:21 PM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/15365/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance on invokeChainCode,FABCN-111,40457,,Story,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,SamYuan1990,SamYuan1990,07/Jun/19 12:12 PM,18/Nov/20 6:21 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,community-help-wanted,external,,,,"Hi Guys,

I want to have an enhance on invoke chain code.
Ref to https://fabric-shim.github.io/release-1.3/fabric-shim.ChaincodeStub.html
Invoke chain code returns a Promise for a Response object returned by the called chaincode
which means I have to handle the promise by myself.
ex:
{code:java}
        let data = await ctx.stub.invokeChaincode('cc',['method','args'], ctx.stub.getChannelID());
        return JSON.parse(data.payload.toString('utf8'));
{code}

I hope an enhancement as
https://fabric-sdk-node.github.io/release-1.4/module-fabric-network.Contract.html
Returns:
Payload response from the transaction function.
Type
Buffer

So that, coding chain code as:
{code:java}
        let data = await ctx.stub.invokeChaincode('cc',['method','args'], ctx.stub.getChannelID());
        return JSON.parse(data);
{code}

Benefits:
Same behavior for invoke chain code from client by submitTransaction() and invokeChaincode from other chaincode when response is 200.
",,SamYuan1990,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00qtg:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),SamYuan1990,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not publish the Transaction Functions node.js module,FABCN-112,33787,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,mbwhite,mbwhite,mbwhite,14/Sep/18 11:23 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,17/Sep/18 9:32 PM,,0,,,,,,," 

""Fabric maintainers have made a decision to not deliver in official releases APIs that are likely to change. These APIs are likely to change after receiving community feedback. Therefore they are more fit for a beta than an official release."" Dave Enyeart


https://chat.hyperledger.org/channel/fabric-scrum?msg=mvoZQbLgndteNwFgR",,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzqyn:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Sep/18 11:29 PM;mbwhite;https://gerrit.hyperledger.org/r/26311;;;","17/Sep/18 9:32 PM;mbwhite;Believed that this is duplicated by fabci-92;;;","19/Sep/18 6:07 PM;davidkel;Also this has been covered by other Jiras.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update CORE_LOGGING_LEVEL to FABRIC_LOGGING_SPEC,FABCN-113,36225,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,18/Dec/18 4:07 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,19/Dec/18 2:57 AM,,0,,,,,,,Update CORE_LOGGING_LEVEL to FABRIC_LOGGING_SPEC,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i003iv:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Dec/18 4:18 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/28224/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dependabot Correction,FABCN-114,43346,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,15/Nov/19 6:19 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,28/Nov/19 12:56 AM,,0,cc-triaged,,,,,,"Rush is used to manage the master branch, therefore updates to dependencies need to have the matching shrinkwrap file. 

 

Rush deliberately fails, if what it is asked to install doesn't match the shrinkwrap.",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i014rf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Nov/19 6:22 PM;mbwhite;[https://github.com/hyperledger/fabric-chaincode-node/pull/33];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add README to published npm package,FABCN-115,23887,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,10/Nov/17 1:14 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,10/Nov/17 7:14 AM,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzymuf:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move fabric-chaincode-node to azure pipelines/github,FABCN-116,42516,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,heatherp,heatherp,27/Sep/19 6:14 PM,07/Dec/19 1:51 AM,28/Oct/23 2:28 AM,05/Dec/19 8:52 PM,,0,cc-triaged,,,,,,"* Migrate from jenkins to azure pipelines for CI
 * Move to Github pull requests for code changes
 * Ensure this move is circulated with maintainers where relevant
 * Move both release-1.4 and master
 * Update any contributing guidelines to explain how to contribute using these tools",,heatherp,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCJ-6,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i010yb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Sep/19 9:10 PM;mbwhite; First stage:  create the pipeline.xml and get the basic verify style build working.

[https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33791]

This should give us sufficient to be able to move over to github ;;;","04/Oct/19 9:23 PM;mbwhite;And for Java (1.4 and master)

[https://gerrit.hyperledger.org/r/c/fabric-chaincode-java/+/33868] 

[https://gerrit.hyperledger.org/r/c/fabric-chaincode-java/+/33869]

 

 ;;;","22/Oct/19 11:30 PM;heatherp;Left to do:
 * we need to check docs for references to Jenkins and mention contributing via pull requests
 * remove jenkins config files -including scripts dir?
 * change our ""check build status"" badges in .md files to be links to azure;;;","25/Oct/19 7:37 PM;mbwhite;FYI [https://github.com/nodejs/build/issues/1993] is having a knock-on effect that Azure pipelines can struggle to get the Node.js tasks working. 

This is pushing in updates

-to make the log files easier to locate
-make the FV tests pass by ensuring that the master docker images have been pulled
-make Azure be able to find junit based xml format test outputjob

[https://github.com/hyperledger/fabric-chaincode-node/pull/13]

-;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Update Node.js chaincode to Node.js v12.13.0,FABCN-117,42939,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,sstone1,sstone1,sstone1,22/Oct/19 8:43 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,22/Oct/19 11:36 PM,,0,,,,,,,"https://nodejs.org/en/blog/release/v12.13.0/

The LTS is here!",,silliman,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-118,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i012pn:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),silliman,sstone1,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Node.js chaincode to Node.js v12.12.0,FABCN-118,42762,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,sstone1,sstone1,sstone1,16/Oct/19 12:24 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,17/Oct/19 7:29 PM,,0,,,,,,,https://nodejs.org/en/blog/release/v12.12.0/,,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-117,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i0127n:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sstone1,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Oct/19 12:26 AM;sstone1;https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33977;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
node chaincode typescript definitions should have protobuf types automatically generated,FABCN-119,33043,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,davidkel,davidkel,20/Aug/18 11:05 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,09/Oct/19 9:45 PM,,0,,,,,,,"Currently the typescript definitions are handcrafted which includes the definitions from the fabric protobuf declarations.

This generation of these entries should be automated such that they can pick up any changes to the relevant protobufs (or maybe at least fail the build if they differ, as I don't know how we could automate updating the repo with a new set of typedefs if the protos change).

Couple of thoughts then
 # fail the build of the entries do not match
 # gulp protos will provide manual automation to create update the typedefs but will require manual CR creation. 

 ",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzndj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric-chaincode-node package to follow stricter eslint rules.,FABCN-120,34673,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Done,SamRasha,SamRasha,SamRasha,15/Oct/18 6:12 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,22/Oct/18 6:44 PM,,0,,,,,,,Update eslint with stricter rules and adapt fabric chaincode-node to cohere to this.,,SamRasha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzv3r:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),SamRasha,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use repo copy of the JSDoc Template,FABCN-121,34315,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,mbwhite,mbwhite,mbwhite,03/Oct/18 9:56 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,11/Oct/18 8:14 PM,,0,,,,,,,"Using the JSDoc template that is within a dependency of a dependency creates issues if there needs to be modifications.

At present, with multiple versions within the same repo - we need cross version navigation. 

Moving the template allows for better styling control to be consistent across all fabric docs.

Together with adding custom navigation.",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzztmf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Oct/18 8:14 PM;mbwhite;Following discussions with [~davidkel], it was felt this added to much code that would need ongoing support.  

An alternative solution will be needed to be investigated at some future point;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
New Pagination API Support required for Node Chaincode,FABCN-122,33450,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Duplicate,,davidkel,davidkel,04/Sep/18 5:24 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,19/Sep/18 6:09 PM,,0,,,,,,,"New Support for Pagination for rich queries was added to the Go Chaincode API, but was not provided for the Node.JS chaincode support.",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-24,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzpan:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add typescript definitions for fabric-shim-crypto package,FABCN-123,33040,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,davidkel,davidkel,20/Aug/18 10:30 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,09/Oct/19 5:51 PM,,0,,,,,,,"typescript definitions have been added for the fabric-shim-crypto package, we need to also do ones for the fabric-crypto package.",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzncv:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging required for chaincode-node,FABCN-124,35700,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,awjh-ibm,davidkel,davidkel,29/Nov/18 8:38 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,07/Mar/19 8:18 PM,,0,,,,,,,Logging is minimal in the chaincode-node package making it difficult to determine problems in a real world environment.,,awjh-ibm,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i000pz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,davidkel,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Feb/19 7:21 PM;awjh-ibm;Logging has been merged, will leave this as in progress I think we may want to continue fine tuning the logging information and levels;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a typescript developer I can use object and any as types,FABCN-125,40128,,Story,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,,,awjh-ibm,awjh-ibm,24/May/19 10:47 PM,18/Nov/20 7:54 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,community-help-wanted,,,,,Currently if the type of property or param is object the generation of metadata fails as it defines the element as being of type $ref: '/components/schemas/object' which is undefined. Same style error for for 'any'. Ideally it would just give the field a type of object with no params and allow additional params to match typescript.,,awjh-ibm,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl4e:c",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Nov/19 9:42 PM;davidkel;Taken from fab-16629 (and closed)

Given the following model definition
{code}
@Object()
export class Asset {

    @Property()
    public id: string;

    @Property()
    public params: any = { 
        param1: 'param1',
        param2: 'param2',
    } 
}
{code}

The chaincode fails to instantiate with the following cryptic message

{noformat}
[17/09/2019 15:35:57] [INFO] fabricvscodelocalfabric-peer0.org1.example.com-Documents-0.0.8|  --module-path  [string] [default: ""/usr/local/src""]
[17/09/2019 15:35:57] [INFO] fabricvscodelocalfabric-peer0.org1.example.com-Documents-0.0.8|
[17/09/2019 15:35:57] [INFO] fabricvscodelocalfabric-peer0.org1.example.com-Documents-0.0.8|{ [Error: can't resolve reference Object from id DaveAsset#]
[17/09/2019 15:35:57] [INFO] fabricvscodelocalfabric-peer0.org1.example.com-Documents-0.0.8|  message: 'can\'t resolve reference Object from id DaveAsset#',
[17/09/2019 15:35:57] [INFO] fabricvscodelocalfabric-peer0.org1.example.com-Documents-0.0.8|  missingRef: 'Object',
[17/09/2019 15:35:57] [INFO] fabricvscodelocalfabric-peer0.org1.example.com-Documents-0.0.8|  missingSchema: 'Object' }
{noformat}
There are 2 issues here
1. The error message does not help determine the problem
2. The type definition of any doesn't appear to be allowed

As well as ""any"", changing the type to ""object"" also produces the same results meaning that ""object"" is not allowed either, so it's possible other standard typescript types also cause the same problem.

As a further thought it would be good if unsupported options were picked up at typescript compile time rather than at runtime but don't know if that is possible and may be a limitation of the experimental annotation support in typescript.


;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update schema to make properties of components a map,FABCN-126,37482,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,07/Feb/19 8:49 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,11/Feb/19 6:26 PM,,0,,,,,,,OpenAPI has properties of components as a map with their names rather than an array. Update the schema to cover that,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00atr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node.js chaincode: Add validation for missing properties in components when taken as a param,FABCN-127,39363,,Story,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,awjh-ibm,awjh-ibm,17/Apr/19 6:19 PM,18/Nov/20 7:54 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,community-help-wanted,,,,,"Currently properties of components are not listed as required meaning the validation by AJV does not pick up when the value passed in as a param is missing fields.

E.g. {} is a valid value for any component taken in.

Possible fix: Amend @Property to mark as required by default and include option to mark the property as optional.

Complete implementation of fix for https://jira.hyperledger.org/browse/FAB-15190 prior to implementation of this as would mean having to pass additional properties that aren't really required bu appear to be due to the merging of sibling classes",,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00laf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare for chaincode-node 1.2.1 release,FABCN-128,34436,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,davidkel,davidkel,davidkel,05/Oct/18 12:39 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,13/Oct/18 1:37 AM,,0,,,,,,,New release of fabric-shim and fabric-shim-crypto,,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzttb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NodeSDK - Release v1.0.6,FABCN-129,29947,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,04/May/18 10:13 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,23/May/18 4:56 AM,,0,,,,,,,"*MUST BE REBASED JUST PRIOR TO MERGING*

generate CHANGELOG.md just *after rebasing* to pick up last minute merged CRs

./scripts/changelog.sh v1.0.5 v1.0.6

create release_notes/v1.0.6.txt

update 3 package.json files with the release identifier

./package.json

    ""version"": ""1.0.5"",  -> ""version"": ""1.0.6"",

./fabric-ca-client/package.json

    ""version"": ""1.0.5"",  -> ""version"": ""1.0.6"",

./fabric-client/package.json

    ""version"": ""1.0.5"",  -> ""version"": ""1.0.6"",

 ",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-86,FABN-37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzz8r3:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/18 4:40 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/21439/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Chaincode-Node to Gulp v4.0,FABCN-130,36550,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,SamRasha,SamRasha,SamRasha,08/Jan/19 7:47 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,09/Jan/19 9:48 PM,,0,,,,,,,Update Fabric-Chaincode-Node from Gulp v3.0 to v4.0,,SamRasha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i005d3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),SamRasha,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Update fabric-chaincode-release job to test and publish npm module,FABCN-131,30048,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,09/May/18 5:15 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,13/May/18 12:01 AM,,0,,,,,,,"Update fabric-chaincode-node release job with ""gulp test"" commands to test the patchset and publish npm modules using ""npm publish"" command.",,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzz9an:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/May/18 7:12 AM;sambhavdutt;https://gerrit.hyperledger.org/r/#/c/21587/ ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pure fabric-shim execution pulls in module contract-api,FABCN-132,34707,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,16/Oct/18 10:24 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,17/Oct/18 2:54 AM,,0,,,,,,,"Pure fabric-shim api pulls in contract-api.

Starting chaincode will give the error ""Cannot find module 'fabric-contract-api' ""

Solutions - do not run with the 'unstable' fabric-shim; unless the 'unstable' fabric-contract-api is installed as well. 

 ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12471,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzvbj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Oct/18 11:30 PM;mbwhite;https://gerrit.hyperledger.org/r/27025;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hope enhancement on rich query.,FABCN-133,40455,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,SamYuan1990,SamYuan1990,SamYuan1990,07/Jun/19 11:21 AM,18/Nov/20 8:10 PM,28/Oct/23 2:28 AM,18/Nov/20 8:10 PM,,0,cc-triaged,community-help-wanted,external,,,,"Hi Guys,

Recently, I am looking on rich query for ledger db. 

Want I am wanted as a chaincode developer or feature implementer of business is like

 
{code:java}
select value from table where key = 'xxx'{code}
 

I had studied rich query sample with nodejs below:

[https://github.com/hyperledger/fabric-samples/blob/master/chaincode/marbles02/node/marbles_chaincode.js#L343]

 I had noticed that the query returns me an [iterator] and I have to invoke function
{code:java}
getAllResults
{code}
to filter out values from the iterator.

I am able to understand when we do rich query, it is possible to have a value set as returning. 

However, I hope when we do rich query, we are able to have a function with behavior below

 
{code:java}
function rich_query(query_string){

return array_data/iterator_data

}
{code}

Otherwise, every developer who is going to implements a business scenario on rich query need to copy and paste [getAllResults] in to chaincode by themself.

Ex: 
Alice for her company having  [getAllResults] in her chaincode A
Bob for his company having  [getAllResults] in his chaincode B
...
Instead of above, why not we have the enhancement for rich query in SDK?

I am beginner to fabric, if anything wrong with this ticket tags, or types please help with a  correct.

Thanks and Regards
Sam",,davidkhala,lesleyannj,SamYuan1990,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-358,,,No,,Unset,No,,,"1|hzzl4e:yw",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,lesleyannj,SamYuan1990,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/19 2:00 PM;davidkhala;https://github.com/hyperledger/fabric-samples/blob/master/chaincode/marbles02/node/marbles_chaincode.js#L343 
It is not part of nodejs application using fabric-node-sdk, but a sample of using fabric-chaincode-node. 
They are conceptually different. ;;;","18/Nov/20 8:10 PM;lesleyannj;Closing as no current work taking place.  Please reopen if considered valid when work is re-started.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for 1.1.0-preview release,FABCN-134,23403,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,01/Nov/17 11:41 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,02/Nov/17 4:33 AM,,0,,,,,,,"add scripts/changelog.sh (from fabric/scripts)

add release_notes directory

Create CHANGELOG.md

./scripts/changelog.sh e64827ec0f9df38ac17215c9b792754ce479e875 v1.1.0-preview

create release_notes/v1.1.0-preview.txt",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzym4n:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Nov/17 12:00 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/15067;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for next release,FABCN-135,23500,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,02/Nov/17 12:13 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,02/Nov/17 4:33 AM,,0,,,,,,,"update package.json with snapshot identifier

 ",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzym4v:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Nov/17 12:21 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/15077;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for next release,FABCN-136,36057,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,11/Dec/18 3:47 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,09/Jan/19 1:48 AM,,0,,,,,,,"update package.json with snapshot identifier

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-162,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i002jj:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/18 11:39 PM;denyeart;[https://gerrit.hyperledger.org/r/#/c/28099/] master

[https://gerrit.hyperledger.org/r/#/c/28074/] release-1.4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release fabric-chaincode-node 1.4.0-rc1,FABCN-137,36055,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,11/Dec/18 3:42 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,11/Dec/18 9:00 PM,,0,,,,,,,"Create CHANGELOG.md

./scripts/changelog.sh v1.1.0-preview v1.1.0-alpha

create release_notes/v1.1.0-alpha.txt

update package.json files with the release identifier

/package.json

    ""version"":{color:#ff0000} ""1.0.0-snapshot"",{color}  -> ""version"": ""1.1.0-alpha"", \{ Highlighted version is not matching with the below versions.. could be missed in the previous release.}

/src/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",

./src/fabric-shim-crypto/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,FABCN-163,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i002j3:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Dec/18 7:27 PM;mbwhite;[https://gerrit.hyperledger.org/r/#/c/28065/]

 

The current release instructions[
https://docs.google.com/document/d/12IpQnREUoJEUj2pF2z-0Up55geItFd94fcsbAkPacTg/edit#]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release fabric-chaincode-java for v1.4.0-rc1,FABCN-138,35808,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,gennadyl,denyeart,denyeart,03/Dec/18 10:48 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,12/Dec/18 1:21 AM,,0,,,,,,,Prepare fabric-chaincode-java for v1.4.0-rc1,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCJ-82,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i001d3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ChristopherFerris,denyeart,,,,,,,,,,,,,,release-2.4,main-emeritius,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for next release,FABCN-139,38996,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,03/Apr/19 1:13 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,15/Oct/19 11:40 PM,,0,,,,,,,"update package.json and related files with snapshot identifiers.

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i00j67:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Apr/19 6:23 AM;denyeart;[~harrisob@us.ibm.com] [~mbwhite] This is still needed for master (v2.0);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release fabric-chaincode-node,FABCN-140,38995,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,03/Apr/19 1:13 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,10/Apr/19 11:48 AM,,0,,,,,,,"Create CHANGELOG.md

./scripts/changelog.sh v1.1.0-preview v1.1.0-alpha

create release_notes/v1.1.0-alpha.txt

update package.json files with the release identifier

/package.json

    ""version"":{color:#ff0000} ""1.0.0-snapshot"",{color}  -> ""version"": ""1.1.0-alpha"", \{ Highlighted version is not matching with the below versions.. could be missed in the previous release.}

/src/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",

./src/fabric-shim-crypto/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i00j5z:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Apr/19 9:48 PM;mbwhite;https://gerrit.hyperledger.org/r/30764 [FAB-14996] Release 2.0.0-alpha;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release fabric-chaincode-node 1.4.0,FABCN-141,36564,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,09/Jan/19 1:33 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,10/Jan/19 4:32 AM,,0,,,,,,,"Create CHANGELOG.md

./scripts/changelog.sh v1.1.0-preview v1.1.0-alpha

create release_notes/v1.1.0-alpha.txt

update package.json files with the release identifier

/package.json

    ""version"":{color:#ff0000} ""1.0.0-snapshot"",{color}  -> ""version"": ""1.1.0-alpha"", \{ Highlighted version is not matching with the below versions.. could be missed in the previous release.}

/src/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",

./src/fabric-shim-crypto/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i005fz:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jan/19 2:00 AM;mbwhite;1.4.0 CR in, awaiting prereqs to be built first.

: https://gerrit.hyperledger.org/r/28553 [FAB-13562] v1.4.0 release;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for next release,FABCN-142,36565,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,09/Jan/19 1:33 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,11/Jan/19 1:54 AM,,0,,,,,,,"update package.json and related files with snapshot identifiers.

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i005g7:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/19 7:05 PM;mbwhite;Build on it's way
https://gerrit.hyperledger.org/r/28623 [FAB-13563] Prepare next release 141;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for next release,FABCN-143,28564,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,harrisob@us.ibm.com,ChristopherFerris,denyeart,16/Mar/18 1:16 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,16/Mar/18 1:35 PM,,0,,,,,,,"update package.json with snapshot identifier

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-162,FABCN-156,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzz1hb:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Mar/18 1:06 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/19277/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for 1.1.0 release,FABCN-144,28562,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,harrisob@us.ibm.com,ChristopherFerris,denyeart,16/Mar/18 12:52 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,16/Mar/18 11:11 AM,,0,,,,,,,"Create CHANGELOG.md

./scripts/changelog.sh v1.1.0-preview v1.1.0-alpha

create release_notes/v1.1.0-alpha.txt

update package.json files with the release identifier

/package.json

    ""version"":{color:#ff0000} ""1.0.0-snapshot"",{color}  -> ""version"": ""1.1.0-alpha"", \{ Highlighted version is not matching with the below versions.. could be missed in the previous release.}

/src/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",

./src/fabric-shim-crypto/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",",,ChristopherFerris,denyeart,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,FABCN-163,FABCN-155,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzz1gv:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Mar/18 7:09 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/19265/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for next release,FABCN-145,43333,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,mbwhite,ChristopherFerris,denyeart,15/Nov/19 4:28 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Nov/19 8:31 PM,,0,,,,,,,"update package.json and related files with snapshot identifiers.

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i014oj:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release fabric-chaincode-node,FABCN-146,43332,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,mbwhite,ChristopherFerris,denyeart,15/Nov/19 4:28 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Nov/19 8:30 PM,,0,,,,,,,"Releasing v1.4.2 of the node.js modules. The process is now partly scripted... see the scripts/release.sh is the fabric-chaincode-node repo

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i014ob:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release fabric-chaincode-node,FABCN-147,41277,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,18/Jul/19 2:55 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,18/Jul/19 6:41 PM,,0,,,,,,,"Releasing v1.4.2 of the node.js modules. The process is now partly scripted... see the scripts/release.sh is the fabric-chaincode-node repo

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i00ubw:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for next release,FABCN-148,41278,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,18/Jul/19 2:55 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,30/Aug/19 1:33 AM,,0,,,,,,,"update package.json and related files with snapshot identifiers.

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i00uc4:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jul/19 6:40 PM;mbwhite;https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/32388 [FAB-16006] Prepare fro 1.4.3-snapshot;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release fabric-chaincode-java for v1.4.0-rc2,FABCN-149,36334,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,gennadyl,denyeart,denyeart,20/Dec/18 8:50 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Dec/18 3:25 AM,,0,,,,,,,Prepare fabric-chaincode-java for v1.4.0-rc1,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCJ-92,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00447:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for next release,FABCN-150,36331,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,20/Dec/18 8:50 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Dec/18 6:17 PM,,0,,,,,,,"update package.json and related files with snapshot identifiers.

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i0043j:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/18 5:56 PM;mbwhite;https://gerrit.hyperledger.org/r/28343 [FAB-13398] Prepare next release

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release fabric-chaincode-node 1.4.0-rc2,FABCN-151,36330,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,20/Dec/18 8:50 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Dec/18 3:25 AM,,0,,,,,,,"Create CHANGELOG.md

./scripts/changelog.sh v1.1.0-preview v1.1.0-alpha

create release_notes/v1.1.0-alpha.txt

update package.json files with the release identifier

/package.json

    ""version"":{color:#ff0000} ""1.0.0-snapshot"",{color}  -> ""version"": ""1.1.0-alpha"", \{ Highlighted version is not matching with the below versions.. could be missed in the previous release.}

/src/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",

./src/fabric-shim-crypto/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13386,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i0043b:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Dec/18 11:21 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/28311/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release fabric-chaincode-node,FABCN-152,42038,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,mbwhite,ChristopherFerris,denyeart,27/Aug/19 4:08 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,29/Aug/19 2:45 AM,,0,,,,,,,"Releasing v1.4.2 of the node.js modules. The process is now partly scripted... see the scripts/release.sh is the fabric-chaincode-node repo

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i00yc3:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for next release,FABCN-153,42039,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,mbwhite,ChristopherFerris,denyeart,27/Aug/19 4:08 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,29/Aug/19 2:45 AM,,0,,,,,,,"update package.json and related files with snapshot identifiers.

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i00ycb:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-java for v1.3.0-rc1,FABCN-154,34060,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,denyeart,denyeart,25/Sep/18 6:10 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,26/Sep/18 3:12 AM,,0,,,,,,,Prepare fabric-chaincode-java for v1.3.0-rc1,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCJ-118,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzse7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ChristopherFerris,denyeart,,,,,,,,,,,,,,release-2.4,main-emeritius,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Sep/18 3:11 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/26552/];;;","26/Sep/18 4:28 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/26568;;;","10/Oct/18 5:03 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/26567/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for 1.1.0-alpha release,FABCN-155,26914,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,18/Jan/18 5:37 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,27/Jan/18 3:10 AM,,0,,,,,,,"Create CHANGELOG.md

./scripts/changelog.sh v1.1.0-preview v1.1.0-alpha

create release_notes/v1.1.0-alpha.txt

update package.json files with the release identifier

/package.json

    ""version"":{color:#ff0000} ""1.0.0-snapshot"",{color}  -> ""version"": ""1.1.0-alpha"", \{ Highlighted version is not matching with the below versions.. could be missed in the previous release.}

/src/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",

./src/fabric-shim-crypto/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",",,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzytt3:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jan/18 10:32 PM;rameshthoomu;@cbf, Please review below point and this to the description

update package.json files with the release identifier

/package.json

    ""version"":{color:#ff0000} ""1.0.0-snapshot"",{color}  -> ""version"": ""1.1.0-alpha"", \{ Highlighted version is not matching with the below versions.. could be missed in the previous release.}

/src/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",

./src/fabric-shim-crypto/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",;;;","25/Jan/18 10:37 PM;ChristopherFerris;[~rameshthoomu] good catch thanks;;;","26/Jan/18 4:18 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/17201;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for next release,FABCN-156,26915,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,18/Jan/18 5:37 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,27/Jan/18 10:16 AM,,0,,,,,,,"update package.json with snapshot identifier

 ",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-143,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzyttb:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/18 4:26 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/17205;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for next release,FABCN-157,38973,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,03/Apr/19 12:51 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,29/May/19 7:59 PM,,0,,,,,,,"update package.json and related files with snapshot identifiers.

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i00j13:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Apr/19 12:07 AM;mbwhite;https://gerrit.hyperledger.org/r/30768 [FAB-14975] Prepare next release

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release fabric-chaincode-node,FABCN-158,38972,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,03/Apr/19 12:51 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,12/Apr/19 1:55 AM,,0,,,,,,,"Create CHANGELOG.md

./scripts/changelog.sh v1.1.0-preview v1.1.0-alpha

create release_notes/v1.1.0-alpha.txt

update package.json files with the release identifier

/package.json

    ""version"":{color:#ff0000} ""1.0.0-snapshot"",{color}  -> ""version"": ""1.1.0-alpha"", \{ Highlighted version is not matching with the below versions.. could be missed in the previous release.}

/src/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",

./src/fabric-shim-crypto/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",",,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|i00j0v:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Apr/19 9:16 PM;mbwhite;This CR contains the updates - but as yet there's no Fabric 1.4.1 to test against - hence why I think the first build failed

https://gerrit.hyperledger.org/r/30761 [FAB-14974] Release 1.4.1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix license statements,FABCN-159,39505,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,25/Apr/19 6:23 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,25/Apr/19 6:39 PM,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00lzz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mastersingh24,,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Apr/19 6:28 PM;mastersingh24;https://gerrit.hyperledger.org/r/31088;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
add CODE_OF_CONDUCT.md ,FABCN-160,29168,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,05/Apr/18 7:40 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,13/Jun/18 11:44 PM,,0,,,,,,,"add CODE_OF_CONDUCT.md and CONTRIBUTING.md

rename LICENSE.txt LICENSE

transform MAINTAINERS.rst to markdown",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzz4nj:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Apr/18 8:07 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/20173 FAB-9358;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node chaincode configuration,FABCN-161,37629,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,binhn,binhn,13/Feb/19 12:43 AM,12/May/20 10:04 PM,28/Oct/23 2:28 AM,12/May/20 10:04 PM,,0,cc-triaged,external,,,,,,,binhn,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-13582,,,No,,Unset,No,,,"1|i00bk7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),binhn,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/May/20 10:04 PM;mbwhite;Just clearing up old issues... if it is still needed please do update it. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-chaincode-node for next release,FABCN-162,34575,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,11/Oct/18 1:26 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,11/Oct/18 2:42 AM,,0,,,,,,,"update package.json with snapshot identifier

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-136,FABCN-143,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzzul3:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Oct/18 2:41 AM;harrisob@us.ibm.com;There is no need to do this in the branch release-1.3, there may not be a need to publish an unstable, the author of the next change to the release code will make this call and change the numbers accordingly.

A change like this has already been made to master where it is now at 1.4.0-snapshot;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release fabric-chaincode-node 1.3.0,FABCN-163,34574,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ChristopherFerris,denyeart,11/Oct/18 1:25 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,11/Oct/18 6:34 AM,,0,,,,,,,"Create CHANGELOG.md

./scripts/changelog.sh v1.1.0-preview v1.1.0-alpha

create release_notes/v1.1.0-alpha.txt

update package.json files with the release identifier

/package.json

    ""version"":{color:#ff0000} ""1.0.0-snapshot"",{color}  -> ""version"": ""1.1.0-alpha"", \{ Highlighted version is not matching with the below versions.. could be missed in the previous release.}

/src/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",

./src/fabric-shim-crypto/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",",,ChristopherFerris,denyeart,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,FABCN-137,FABCN-144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzzukv:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Oct/18 6:34 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/26907/] release-1.3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node CC needs to pass channel ID in messages,FABCN-164,23236,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,harrisob@us.ibm.com,muralisr,muralisr,01/Nov/17 9:23 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,12/Feb/18 7:13 AM,,0,,,,,,,Use the changes in shim https://gerrit.hyperledger.org/r/#/c/14919/ to add channel ID to chaincode messages.,,harrisob@us.ibm.com,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzym2n:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Nov/17 7:33 AM;muralisr;[~harrisob@us.ibm.com] the java chaincode CRs should provide additional material for comparison.

https://gerrit.hyperledger.org/r/#/c/15205/ - in fabric-chaincode-java
https://gerrit.hyperledger.org/r/#/c/15207/ - in fabric

Let me know if you need anything !;;;","08/Nov/17 9:41 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/15257/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Resolved objects passed to transaction functions are not instances of the class,FABCN-165,38300,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,awjh-ibm,awjh-ibm,08/Mar/19 7:07 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,22/May/19 12:17 AM,,0,,,,,,,"If I as a user define an object in my metadata of Asset using the @Object notation I would expect data passed in to a transaction function which takes this type as a parameter to be of this type and not just an object with its properties as fields.

 

Possible resolutions:
 * Store the target of the component tag and call its constructor when handling parameters. Downside those who manually specify metadata would still not have correct type sent.
 * Create a components array like we have contracts array called on startup which takes the components to be used. Can then call constructor on these when needed.
 * Combination of the above where user can specify the array but if they use @Object annotation those are used in place of the array. May confuse as no @Contract to replace the contract array.",,awjh-ibm,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-218,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00f5z:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Mar/19 6:59 AM;davidkel;I would prefer that the type of an object is not checked to see if it matches the name defined in the metadata. To do so properly would require checking the inheritance model that might exist. I would much prefer to work with an object type of my choosing that conforms to the specification of what is returned. It would be good to have 2 types of check however
1. strict where the properties exist and no extra properties exist
2. non-strict where the properties exist but other properties can also exist.
This would allow to handle objects that my be subclasses of the type but can still be passed or returned from the function.;;;","22/May/19 12:17 AM;mbwhite;Though the issues are not directly the same, the implementation of that will resolve the issues raise here. 

FAB-15500 will be adding documentation. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-shim relies on fabric-contract-api requiring reflect-metadata,FABCN-166,35290,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,13/Nov/18 12:51 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,13/Nov/18 11:19 PM,,0,,,,,,,Fabric shim throws an error if the fabric-contract-api is not imported when in typescript mode as Reflect.getMetadata is not defined.,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzyhj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
If an unknown transaction in a contract is encountered it always raises shim.error,FABCN-167,37170,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,SamRasha,davidkel,davidkel,27/Jan/19 6:41 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,31/Jan/19 10:17 PM,,0,,,,,,,"{code:java}
            } else {
                // if we've never heard of this function, then call the unknown tx function
                await contractInstance.unknownTransaction(ctx);
                return shim.error(new Error('Unknown function `${fn}'));
            }
{code}
I think this should return shim.success and let the unknownTransaction implementation throw an error if it wants a shim.error raised.",,awjh-ibm,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i0094n:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,davidkel,mbwhite,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jan/19 6:38 PM;mbwhite;Agreed; it would be more useful to be along the lines of

try {

await contractInstance unkownTx()

return shim.success();

} catch (error){

return shim.error(error)

}

The default unkownTx() function throws an error at the moment. So we're already duplicating errors.

Need to remember to update the docs as well. ;;;","29/Jan/19 7:17 PM;awjh-ibm;Is the plan here to make it return the value from the unknownTransaction as success if there is one?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
javascript shim throws unexpected error: TypeError: Cannot read property 'resultBytes' of undefined,FABCN-168,27510,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,sanchezl,davidkel,davidkel,08/Feb/18 4:51 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Feb/18 5:27 AM,,0,,,,,,,"This is due to the following issue
https://jira.hyperledger.org/browse/FAB-8103

The shim code is told there is more data, but when it requests it not only does it not get any more data, in fact it gets a blank response, not even a zero length array. 

This should be fixed in the peer. Defensive code could be placed into the shim to detect this and if the peer response is not fixed, this would have to be implemented.",,davidkel,denyeart,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzywhr:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,davidkel,denyeart,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/18 11:28 PM;denyeart;I'd suggest fix HasMore function in FAB-8103.  And fix the nil response in FAB-8115.  I believe this is what the reporter intended.;;;","09/Feb/18 2:50 PM;sanchezl;FAB-8103 will fix the HasMore issue. This makes the nil response issue irrelevant, except when a query actually returns zero results. In the scenario where the query returns zero results, the FAB-8103 fix should will also ensure that the response is not blank.

Please close or re-open after verification.;;;","21/Feb/18 5:27 AM;denyeart;Ok, I'll go ahead and close since it will be handled in FAB-8103.  Please re-open after FAB-8103 verification if something else is needed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-end-2-end-daily-release-1.2-x86_64 job is failing due to node chaincode.,FABCN-169,34306,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,,sambhavdutt,sambhavdutt,03/Oct/18 2:45 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,04/Oct/18 11:08 PM,,0,ci-flake,,,,,,"The fabric end-2-end-daily-release-1.2 job is failing due to the node chaincode error, Posting the errors, 

{code:java}
03:25:56 Tests run: 47, Failures: 0, Errors: 1, Skipped: 3, Time elapsed: 477.072 sec <<< FAILURE! - in org.hyperledger.fabric.sdkintegration.IntegrationSuite
03:25:56 setup(org.hyperledger.fabric.sdkintegration.End2endAndBackAgainNodeIT)  Time elapsed: 98.967 sec  <<< ERROR!
03:25:56 java.lang.RuntimeException: 
03:25:56 java.util.concurrent.ExecutionException: java.lang.AssertionError: Test failed with java.lang.AssertionError exception Not enough endorsers for upgrade :1.  failed to execute transaction c30332fa20d01518a75c90d57e288a1a450c9bb21d4a1685af32dbf6fa99360a: error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 ""npm WARN deprecated @types/winston@2.4.4: This is a stub types definition. winston provides its own type definitions, so you do not need this installed.
03:25:56 npm WARN tar ENOENT: no such file or directory, open '/chaincode/output/node_modules/.staging/long-ce340240/dist/long.min.js'
03:25:56 npm WARN tar ENOENT: no such file or directory, open '/chaincode/output/node_modules/.staging/long-ce340240/dist/long.min.js.gz'
03:25:56 npm WARN tar ENOENT: no such file or directory, open '/chaincode/output/node_modules/.staging/long-ce340240/dist/long.min.map'
03:25:56 npm WARN tar ENOENT: no such file or directory, open '/chaincode/output/node_modules/.staging/jsrsasign-ad843b72/lib/jsrsasign-jwths-min.js'
03:25:56 npm WARN tar ENOENT: no such file or directory, open '/chaincode/output/node_modules/.staging/nan-d288489e/README.md'
03:25:56 npm WARN tar ENOENT: no such file or directory, open '/chaincode/output/node_modules/.staging/@types/node-4d8ae03d/inspector.d.ts'
03:25:56 npm WARN tar ENOENT: no such file or directory, open '/chaincode/output/node_modules/.staging/bytebuffer-f77373f8/dist/bytebuffer.js'
03:25:56 npm WARN example_cc@1.0.0 No description
03:25:56 npm WARN example_cc@1.0.0 No repository field.
03:25:56 
03:25:56 npm ERR! code EINTEGRITY
{code}

*Build Log*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-release-1.2-x86_64/94/",,harrisob@us.ibm.com,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-272,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,76ed3ee4cd6e11f33dd33d1d4432582bbbc6d43b,Unset,No,,,"1|hzztkf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
npm error observed intermittently in fabric sdk-java,FABCN-170,36288,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,vijaypunugubati,vijaypunugubati,20/Dec/18 12:09 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,18/Feb/19 7:59 PM,,0,ci-flake,,,,,," 

npm error observed intermittently in fabric sdk-java, fail in fabric.sdkintegration.IntegrationSuite

Intermittent: Yes

Branch: master

Platform: x86_64

Error Snippet:
{code:java}
/19:35:39 Tests run: 47, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 788.79 sec <<< FAILURE! - in org.hyperledger.fabric.sdkintegration.IntegrationSuite
19:35:39 setup(org.hyperledger.fabric.sdkintegration.End2endNodeIT)  Time elapsed: 104.856 sec  <<< FAILURE!
19:35:39 java.lang.AssertionError: 
19:35:39 Not enough endorsers for instantiate :1endorser failed with error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 ""npm WARN deprecated @types/winston@2.4.4: This is a stub types definition. winston provides its own type definitions, so you do not need this installed.
19:35:39 npm WARN deprecated boom@4.3.1: This version is no longer maintained. Please upgrade to the latest version.
19:35:39 npm ERR! Unexpected end of JSON input while parsing near '...XrL2PBPPcib8o8dFZ2U4H'
19:35:39 
19:35:39 npm ERR! A complete log of this run can be found in:
19:35:39 npm ERR!     /root/.npm/_logs/2018-12-19T00_28_11_516Z-debug.log
19:35:39 "". Was verified:false
19:35:39 	at org.hyperledger.fabric.sdkintegration.End2endNodeIT.setup(End2endNodeIT.java:51)
19:35:39 
19:35:39 setup(org.hyperledger.fabric.sdkintegration.End2endAndBackAgainNodeIT)  Time elapsed: 72.77 sec  <<< FAILURE!
19:35:39 java.lang.AssertionError: Peer peer0.org2.example.com is missing instantiated chaincode name: example_cc_node, path:null, version: null
19:35:39 	at org.hyperledger.fabric.sdkintegration.End2endAndBackAgainNodeIT.setup(End2endAndBackAgainNodeIT.java:36)
19:35:39 
19:35:39 
19:35:39 Results :
19:35:39 
19:35:39 Failed tests: 
19:35:39   End2endAndBackAgainNodeIT.setup:36->End2endAndBackAgainIT.runFabricTest:269->End2endAndBackAgainIT.reconstructChannel:733 Peer peer0.org2.example.com is missing instantiated chaincode name: example_cc_node, path:null, version: null
19:35:39   End2endNodeIT.setup:51->End2endIT.runFabricTest:228->End2endIT.runChannel:527 Not enough endorsers for instantiate :1endorser failed with error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 ""npm WARN deprecated @types/winston@2.4.4: This is a stub types definition. winston provides its own type definitions, so you do not need this installed.
19:35:39 npm WARN deprecated boom@4.3.1: This version is no longer maintained. Please upgrade to the latest version.
19:35:39 npm ERR! Unexpected end of JSON input while parsing near '...XrL2PBPPcib8o8dFZ2U4H'
19:35:39 
19:35:39 npm ERR! A complete log of this run can be found in:
19:35:39 npm ERR!     /root/.npm/_logs/2018-12-19T00_28_11_516Z-debug.log
19:35:39 "". Was verified:false
19:35:39 
19:35:39 Tests run: 47, Failures: 2, Errors: 0, Skipped: 0
19:35:39 
19:35:39 [WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent! The file encoding for reports output files should be provided by the POM property ${project.reporting.outputEncoding}.
19:35:39 [INFO] 
19:35:39 [INFO] --- maven-failsafe-plugin:2.19.1:verify (failsafe-integration-tests) @ fabric-sdk-java ---
19:35:39 [WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent! The file encoding for reports output files should be provided by the POM property ${project.reporting.outputEncoding}.
19:35:39 [INFO] ------------------------------------------------------------------------
19:35:39 [INFO] BUILD FAILURE
19:35:39 [INFO] ------------------------------------------------------------------------
19:35:39 [INFO] Total time: 15:02 min
19:35:39 [INFO] Finished at: 2018-12-19T00:35:39+00:00
19:35:39 [INFO] Final Memory: 62M/1486M
19:35:39 [INFO] ------------------------------------------------------------------------
19:35:39 [ERROR] Failed to execute goal org.apache.maven.plugins:maven-failsafe-plugin:2.19.1:verify (failsafe-integration-tests) on project fabric-sdk-java: There are test failures.
19:35:39 [ERROR] / code placeholder
{code}
 

 

Build Logs:

[https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-x86_64/320/]",,mbwhite,rameshthoomu,rickr,sambhavdutt,tijohnson,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i003v3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,rameshthoomu,rickr,sambhavdutt,tijohnson,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jan/19 11:20 PM;rickr;Problem is on fabric side executing Node chaincode.  We've seen this time and time again the suggested solution was to have a local npm repository.
;;;","17/Jan/19 6:42 PM;mbwhite;[~rickr] are you able to expand on the root cause please?  I can see there's a problem parsing some json.

Is this caused by a NPM install failing - hence a local repository of some type would assist in that?;;;","25/Jan/19 12:37 AM;mbwhite;Will add [~andrew-coleman]  for FYI..;;;","25/Jan/19 4:09 AM;tijohnson;I can say that Ramesh and I spent several hours looking the nvm install process just yesterday (Jan23). The install process for nvm does not follow standard Unix practices and there  is no error handling (all errors that occur during the installation process are ignored). We should consider imiplementing our own installation scripts for nvm.;;;","31/Jan/19 11:24 PM;mbwhite;[~rameshthoomu] [~tijohnson]  I believe that a number of the build scripts are moving away from nvm is that true?;;;","01/Feb/19 1:39 AM;tijohnson;I do not know of anyone at LF using NVM.

I can say the install scripts are a mess and I suspect that some of the intermittent problems may be coming from that, but I have no way of knowing that. ;;;","01/Feb/19 11:33 PM;rameshthoomu;[~tijohnson] The above issue is not releated to installation script..As mentioned by Rick,  while fabric executing the node chaincode, somehow it's unable to pull the required node modules or not able to start the peer container. See the below error
{code:java}
Not enough endorsers for instantiate :1endorser failed with error starting container: error starting container{code};;;","02/Feb/19 1:22 AM;tijohnson;I asked, and there is no-one in LF that has any experience with npm. In all likelihood the error messages from NPM are just symptoms of something that failed earlier in the build. But I know nothing about how your code, NPM and docker interact.;;;","13/Feb/19 7:17 PM;mbwhite;I think we'll need to go back to 'first principals' and work forward on this one.

[~vijaypunugubati] (or anybody else :) )  

- which is the gerrit repo that this build comes from?  

 

 ;;;","14/Feb/19 1:15 AM;tijohnson;I don't know if this is still problem.

The build is controlled by scripts/configs in the ci-management repo. The script that installs NPM is located in the ci-managment repo. Much of the functionality of this build/test/validation is located in other repos.

LF does not have any experience with NPM, but I would be glad to assist. I can tell you that there is VERY good chance this is not the real problem but only a symptom of a problem that occurred earlier in the build.

The questions I would start with are:
 # where is NPM running when the error occurs (on the minion or on a (or multiple) docker image)
 # what is NPM trying to do when the error occurs
 # what environment (vars/files/permission) does NPM expect and are they are correct

I can assist here, but I but should not be the one driving this.

 

 ;;;","18/Feb/19 7:58 PM;mbwhite;[~tijohnson]  thanks for your comments - completely agree with you.   

 

I'm going to cancel this - can I ask that if anybody sees this - could they re-open this asap with links to the logs where it's seen. 

 ;;;","18/Feb/19 7:59 PM;mbwhite;See above comment;;;",,,,,,,,,,,,,,,,,
Only the final request does not reach the peer.,FABCN-171,40115,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,yamada_masatsugu,yamada_masatsugu,24/May/19 11:33 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,15/Oct/19 11:34 PM,,0,chaincode,gossip,v1.1,,,,"If the write process is frequently performed in a short time, only the final request does not reach the peer.

 

[Fact]

For example, when writing 10000 transactions, the chaincode is executed 10000 times in two threads from the client.

Only the last request does not reach the peer.

(This event does not occur when executed in one thread.)

 

After that, when chaincode is executed by another transaction, the staying data and the current transaction data are broadcast together and taken into Peer.

 

[Expectation]

All transactions are successfully logged to the peer.",,denyeart,heatherp,yamada_masatsugu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00p2c:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,heatherp,yamada_masatsugu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jun/19 8:25 PM;denyeart;I'm not understanding how the last request would be any different.

Please add minimal recreation steps... e.g. can you recreate with two transactions?;;;","15/Oct/19 11:34 PM;heatherp;Can you re-open this if you're still seeing it? Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Security vulnerabilities found in some packages on chaincode-node,FABCN-172,35255,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Works as Expected,mbwhite,vijaypunugubati,vijaypunugubati,10/Nov/18 1:12 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,15/Dec/18 12:08 AM,,0,ci-failure,,,,,,"Security vulnerabilities found critical, high and low in lodash, minimatch, growl and debug packages in fabric-chaincode-node.
{code:java}
/06:47:31 npm WARN notice [SECURITY] lodash has the following vulnerability: 1 low. Go here for more details: https://nodesecurity.io/advisories?search=lodash&version=1.0.2 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info.
06:47:31 npm WARN deprecated minimatch@0.2.14: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue
06:47:31 npm WARN deprecated graceful-fs@1.2.3: please upgrade to graceful-fs 4 for compatibility with current and future versions of Node.js
06:47:32 npm WARN deprecated @types/winston@2.4.4: This is a stub types definition. winston provides its own type definitions, so you do not need this installed.
06:47:47 npm WARN notice [SECURITY] minimatch has the following vulnerability: 1 high. Go here for more details: https://nodesecurity.io/advisories?search=minimatch&version=0.2.14 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info.
06:47:52 npm WARN notice [SECURITY] growl has the following vulnerability: 1 critical. Go here for more details: https://nodesecurity.io/advisories?search=growl&version=1.9.2 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info.
06:47:53 npm WARN notice [SECURITY] minimatch has the following vulnerability: 1 high. Go here for more details: https://nodesecurity.io/advisories?search=minimatch&version=2.0.10 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info./
{code}
{code:java}
/06:47:27 npm WARN notice [SECURITY] debug has the following vulnerability: 1 low. Go here for more details: https://nodesecurity.io/advisories?search=debug&version=2.6.0 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info.
06:47:27 npm WARN deprecated graceful-fs@3.0.11: please upgrade to graceful-fs 4 for compatibility with current and future versions of Node.js
06:47:28 npm WARN notice [SECURITY] debug has the following vulnerability: 1 low. Go here for more details: https://nodesecurity.io/advisories?search=debug&version=2.6.8 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info./
{code}
*Build log:*

[https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-verify-x86_64/466/consoleFull]",,ashutosh_kumar,mbwhite,rameshthoomu,sstone1,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzyb3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,mbwhite,rameshthoomu,sstone1,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Nov/18 11:22 PM;vijaypunugubati;The deprecated warnings are coming from the x509 library that is being used, pulled in as a dependent library - as used to provide APIs for chaincode to get information about a users' certificate.

Please check this issue ASAP, as all the daily fabric-test jobs have deprecated warnings.
{code:java}
/22:45:39 In file included from /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:26:0,
22:45:39                  from /home/jenkins/.node-gyp/8.9.4/include/node/node.h:63,
22:45:39                  from ../include/addon.h:4,
22:45:39                  from ../src/addon.cc:4:
22:45:39 /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:3502:36: note: declared here
22:45:39                  MaybeLocal<Object> CloneElementAt(Local<Context> context,
22:45:39                                     ^
22:45:39 /home/jenkins/.node-gyp/8.9.4/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
22:45:39    declarator __attribute__((deprecated(message)))
22:45:39    ^
22:45:39 In file included from ../node_modules/nan/nan_new.h:189:0,
22:45:39                  from ../node_modules/nan/nan.h:200,
22:45:39                  from ../include/x509.h:7,
22:45:39                  from ../src/addon.cc:5:
22:45:39 ../node_modules/nan/nan_implementation_12_inl.h: In static member function ‘static Nan::imp::FactoryBase<v8::BooleanObject>::return_t Nan::imp::Factory<v8::BooleanObject>::New(bool)’:
22:45:39 ../node_modules/nan/nan_implementation_12_inl.h:40:38: warning: ‘static v8::Local<v8::Value> v8::BooleanObject::New(bool)’ is deprecated: Pass an isolate [-Wdeprecated-declarations]
22:45:39    return v8::BooleanObject::New(value).As<v8::BooleanObject>();
22:45:39                                       ^
22:45:39 In file included from /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:26:0,
22:45:39                  from /home/jenkins/.node-gyp/8.9.4/include/node/node.h:63,
22:45:39                  from ../include/addon.h:4,
22:45:39                  from ../src/addon.cc:4:
22:45:39 /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:4793:56: note: declared here
22:45:39    V8_DEPRECATED(""Pass an isolate"", static Local<Value> New(bool value));
22:45:39                                                         ^
22:45:39 /home/jenkins/.node-gyp/8.9.4/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
22:45:39    declarator __attribute__((deprecated(message)))
22:45:39    ^
22:45:39 In file included from ../include/x509.h:7:0,
22:45:39                  from ../src/addon.cc:5:
22:45:39 ../node_modules/nan/nan.h: In function ‘bool Nan::SetAccessor(v8::Local<v8::Object>, v8::Local<v8::String>, Nan::GetterCallback, Nan::SetterCallback, v8::Local<v8::Value>, v8::AccessControl, v8::PropertyAttribute)’:
22:45:39 ../node_modules/nan/nan.h:1969:16: warning: ‘bool v8::Object::SetAccessor(v8::Local<v8::Name>, v8::AccessorNameGetterCallback, v8::AccessorNameSetterCallback, v8::Local<v8::Value>, v8::AccessControl, v8::PropertyAttribute)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
22:45:39      , attribute);
22:45:39                 ^
22:45:39 In file included from /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:26:0,
22:45:39                  from /home/jenkins/.node-gyp/8.9.4/include/node/node.h:63,
22:45:39                  from ../include/addon.h:4,
22:45:39                  from ../src/addon.cc:4:
22:45:39 /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:3172:22: note: declared here
22:45:39                  bool SetAccessor(Local<Name> name,
22:45:39                       ^
22:45:39 /home/jenkins/.node-gyp/8.9.4/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
22:45:39    declarator __attribute__((deprecated(message)))
22:45:39    ^
22:45:40   CXX(target) Release/obj.target/x509/src/x509.o
22:45:41 In file included from ../node_modules/nan/nan.h:194:0,
22:45:41                  from ../include/x509.h:7,
22:45:41                  from ../src/x509.cc:3:
22:45:41 ../node_modules/nan/nan_maybe_43_inl.h: In function ‘Nan::MaybeLocal<v8::Object> Nan::CloneElementAt(v8::Local<v8::Array>, uint32_t)’:
22:45:41 ../node_modules/nan/nan_maybe_43_inl.h:220:58: warning: ‘v8::MaybeLocal<v8::Object> v8::Array::CloneElementAt(v8::Local<v8::Context>, uint32_t)’ is deprecated: Cloning is not supported. [-Wdeprecated-declarations]
22:45:41    return array->CloneElementAt(GetCurrentContext(), index);
22:45:41                                                           ^
22:45:41 In file included from /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:26:0,
22:45:41                  from /home/jenkins/.node-gyp/8.9.4/include/node/node.h:63,
22:45:41                  from ../include/addon.h:4,
22:45:41                  from ../include/x509.h:5,
22:45:41                  from ../src/x509.cc:3:
22:45:41 /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:3502:36: note: declared here
22:45:41                  MaybeLocal<Object> CloneElementAt(Local<Context> context,
22:45:41                                     ^
22:45:41 /home/jenkins/.node-gyp/8.9.4/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
22:45:41    declarator __attribute__((deprecated(message)))
22:45:41    ^
22:45:41 In file included from ../node_modules/nan/nan_new.h:189:0,
22:45:41                  from ../node_modules/nan/nan.h:200,
22:45:41                  from ../include/x509.h:7,
22:45:41                  from ../src/x509.cc:3:
22:45:41 ../node_modules/nan/nan_implementation_12_inl.h: In static member function ‘static Nan::imp::FactoryBase<v8::BooleanObject>::return_t Nan::imp::Factory<v8::BooleanObject>::New(bool)’:
22:45:41 ../node_modules/nan/nan_implementation_12_inl.h:40:38: warning: ‘static v8::Local<v8::Value> v8::BooleanObject::New(bool)’ is deprecated: Pass an isolate [-Wdeprecated-declarations]
22:45:41    return v8::BooleanObject::New(value).As<v8::BooleanObject>();
22:45:41                                       ^
22:45:41 In file included from /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:26:0,
22:45:41                  from /home/jenkins/.node-gyp/8.9.4/include/node/node.h:63,
22:45:41                  from ../include/addon.h:4,
22:45:41                  from ../include/x509.h:5,
22:45:41                  from ../src/x509.cc:3:
22:45:41 /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:4793:56: note: declared here
22:45:41    V8_DEPRECATED(""Pass an isolate"", static Local<Value> New(bool value));
22:45:41                                                         ^
22:45:41 /home/jenkins/.node-gyp/8.9.4/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
22:45:41    declarator __attribute__((deprecated(message)))
22:45:41    ^
22:45:41 In file included from ../include/x509.h:7:0,
22:45:41                  from ../src/x509.cc:3:
22:45:41 ../node_modules/nan/nan.h: In function ‘bool Nan::SetAccessor(v8::Local<v8::Object>, v8::Local<v8::String>, Nan::GetterCallback, Nan::SetterCallback, v8::Local<v8::Value>, v8::AccessControl, v8::PropertyAttribute)’:
22:45:41 ../node_modules/nan/nan.h:1969:16: warning: ‘bool v8::Object::SetAccessor(v8::Local<v8::Name>, v8::AccessorNameGetterCallback, v8::AccessorNameSetterCallback, v8::Local<v8::Value>, v8::AccessControl, v8::PropertyAttribute)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
22:45:41      , attribute);
22:45:41                 ^
22:45:41 In file included from /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:26:0,
22:45:41                  from /home/jenkins/.node-gyp/8.9.4/include/node/node.h:63,
22:45:41                  from ../include/addon.h:4,
22:45:41                  from ../include/x509.h:5,
22:45:41                  from ../src/x509.cc:3:
22:45:41 /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:3172:22: note: declared here
22:45:41                  bool SetAccessor(Local<Name> name,/ code placeholder
{code}
Build log:

https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-verify-x86_64/88/consoleFull

 ;;;","29/Nov/18 12:55 AM;ashutosh_kumar;[~vijaypunugubati] Did you run nsp against Node repo ? How can I reproduce it locally ?;;;","29/Nov/18 10:00 PM;sstone1;[~mbwhite] can you look at this please?;;;","30/Nov/18 7:32 PM;mbwhite;Yes - the x509 libraries though we can't update till v2 (https://jira.hyperledger.org/browse/FAB-13075);;;","03/Dec/18 9:27 PM;mbwhite;[~sstone1] - Some of the changes we can make immediately.

However the rest (which do include some high), can't be changed without updating grpc and the gulp level.

 

Changes to grpc levels always seems to be 'sensitive'  and Gulp 3 -> Gulp 4 is a breaking change that will affect all the build files. ;;;","04/Dec/18 5:45 PM;mbwhite;As part of the beta2 update, a number of these have been updated; this leaves the grpc and the gulp udates to do as part of v2.0

Moving this work item to be v2.0 as a result;;;","07/Dec/18 7:15 PM;mbwhite;A number of the updates had to backed; the latest testing tools and code-coverage were mutually incompatible. ;;;",,,,,,,,,,,,,,,,,,,,,,
Annotated metadata appears to be invalid for referenced components.,FABCN-173,38603,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Duplicate,,davidkel,davidkel,20/Mar/19 10:47 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,22/May/19 9:16 PM,,0,,,,,,,"Consider the following example
{code}
@Object()
export class Commodity {
    @Property()
    tradingSymbol: Identifier;
};

@Object()
export class CommodityEvent {
    @Property()
    action: string;
    @Property()
    commodity: Commodity;
}
{code}
However the metadata generated for CommodityEvent is not correct. It generated

{noformat}
            ""CommodityEvent"": {
                ""$id"": ""CommodityEvent"",
                ""type"": ""object"",
                ""additionalProperties"": false,
                ""properties"": [
                    {
                        ""name"": ""action"",
                        ""schema"": {
                            ""type"": ""string""
                        }
                    },
                    {
                        ""name"": ""commodity"",
                        ""schema"": {
                            ""type"": ""commodity""
                        }
                    }
                ]
            }
{noformat}
We see the commodity event property is specifying a type of just commodity where it should actually be referencing the Commodity definition (not shown in the snippet). 

This again shows that annotated metadata is not validated against the schema as the chaincode starts whereas if I took the metadata and placed it into a JSON file then the chaincode would fail to start due to validation.",,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00gwn:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/May/19 9:16 PM;mbwhite;This has been resolved in the recent builds; shouldn't be an issue any longer. 
If it's seen again then please do re-open :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong TypeScript Type Definition for getPrivateDataQueryResult,FABCN-174,37903,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Done,mbwhite,AdVetter,AdVetter,22/Feb/19 5:47 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,12/Mar/19 6:43 PM,,0,typescript,,,,,,"ChaincodeStub.getPrivateDataQueryResult() does not return a _Iterators.__StateQueryIterator_ Promise. [The documentation|https://github.com/hyperledger/fabric-chaincode-node/blob/1a36c94865c230feefde6855a8a62f8cbf6de6ae/fabric-shim/lib/stub.js#L1014] says it is a _PrivateQueryIterator_, which is not defined in the TypeScript definition file:
https://github.com/hyperledger/fabric-chaincode-node/blob/1a36c94865c230feefde6855a8a62f8cbf6de6ae/fabric-shim/types/index.d.ts#L110",,AdVetter,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-257,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00czb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),AdVetter,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Mar/19 10:48 PM;mbwhite;[~AdVetter] you're quite correct there is no PrivateQueryIterator, it should be a regular iterator that is returned. 
However due to FAB-14216 you'll get a wrapped iterator returned. 

 

Will update the documentation to reflect this. ;;;","05/Mar/19 11:38 PM;mbwhite;https://gerrit.hyperledger.org/r/#/c/29830/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Undocumented breaking change in functionality - getStateByRange functions no longer works with composite keys,FABCN-175,36641,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,acshea,acshea,10/Jan/19 8:10 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,18/Feb/19 8:00 PM,,1,,,,,,,"The introduction of the validateSimpleKeys function to the getStateByRange and getStateByRangeWithPagination functions implicitly prevents composite keys from being used in any ranged queries.

There is a need to be able to perform these types of queries within the composite 'namespace' which needs to be addressed.",,acshea,denyeart,JoshuaVines,mbwhite,Senthil1,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11310,,FABCN-268,FAB-11281,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i005vr:",,,,Unset,Unset,,,,,,,,,,,,,,"1: Put a values into state stored under a range of composite keys
2: Attempt to call getStateByRange with a start and/or end key of type composite key
3: Observe error message",,Unset,,,,,,Unset,,Unset,,(Please add usage information),acshea,denyeart,JoshuaVines,mbwhite,Senthil1,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/19 5:06 AM;yuki-kon;I agree with your proposal. We need to improve chaincodeShim to handle data using composite keys efficiently.
I made a similar proposal at FAB-10520. I also posted a CR (https://gerrit.hyperledger.org/r/#/c/26943/) to discuss the new APIs.
It would be great if you take a look at the JIRA/CR and give some comments on them.
;;;","23/Jan/19 3:57 PM;denyeart;Support for range queries within composite key namespace is planned for a future release under FAB-11281.

Go and Java chaincode has always validated against this. There was a bug in Node.js chaincode where the validation was not occurring, which was fixed in v1.3. See links for more background.;;;","23/Jan/19 4:00 PM;denyeart;[~mbwhite] [~zhaochy] I think the statement above needs to be added to Node.js chaincode release notes in v1.3.1 and v1.4.1, to compensate for the lack of release note in v1.3.0 and v1.4.0.;;;","23/Jan/19 6:36 PM;mbwhite;[~denyeart]  I was considering pushing a fix for the problem - simply by checking that the keys for getStateByRange() were either both simple or both composite.

This doesn't break any existing application - nor does it mix the namespaces;  Is another API really necessary?;;;","28/Jan/19 1:16 PM;denyeart;[~mbwhite] Underlying existing ledger APIs will return error if composite keys are passed in getStateByRange(). I think a new API is needed as proposed in FAB-11281. For example, how would you specify a query in a composite key namespace with no start key and no end key?

[~manish-sethi] [~Senthil1] may want to provide a 2nd opinion... do you see any path where it would be possible to use the existing range query API but allow composite keys to be passed in?;;;","28/Jan/19 7:29 PM;Senthil1;[~denyeart] In _GetStateByRange()_, for the _startKey_ and _endKey_, we can allow either only simple keys (as we do now) or only composite keys (modification to the source code needed as chaincode shim throws error). 

However, to do a range query on the partialCompositeKey, we need a new API  such as`GetStateByPartialCompositeKeyRange()`. To summarize, 

*Existing APIs*
 * GetStateByRange(startKey, endKey) – keys needs to be simple keys. 
 * GetStateByPartialCompositeKey(objectType, attributes[]) – a single partial composite key

*Modification to Existing API*
 * GetStateByRange(startKey, endKey) – if both keys are composite keys, allow instead of throwing an error.

*New APIs*
 * GetStateByPartialCompositeKeyRange(objectType, startKey_attributes[], objectType, endKey_attributes[]) – two partial composite keys

 ;;;","29/Jan/19 6:33 AM;yuki-kon;[~Senthil1] Thank you for summarizing the idea. I have a question about the definition of API.
 - GetStateByRange(startKey, endKey):
This API requires application developers to create two composite keys beforehand if we use composite keys.
 - GetStateByPartialCompositeKeyRange(objectType, startKey_attributes[], objectType, endKey_attributes[]):
On the other hand, this API doesn’t require to create partial composite keys beforehand.
 Is there any reason to change the style of API definition?;;;","29/Jan/19 2:12 PM;Senthil1;[~yuki-kon] These are just a tentative APIs. It has not been finalised. 

Similar to GetStateByPartialCompositeKey(objectType string, attributes []string), I named  GetStateByPartialCompositeKeyRange(). We can in fact, allow the user to construct the partial composite key and pass in as arguments instead of objectType and attributes. ;;;","30/Jan/19 3:23 AM;yuki-kon;[~Senthil1] Thanks for your comment. I understand that API is on discussion. Passing objectType and attributes as arguments looks user-friendly. ;;;","30/Jan/19 7:30 AM;denyeart;In this Jira, let's keep focus on the subject API getStateByRange(). For the newly proposed APIs let's use FAB-11281. For getStateByRange(), I assumed we would want to continue to support simple keys only.

[~Senthil1] Are you suggesting that we should modify getStateByRange() to allow composite keys to be passed in?  I thought there would be issues, e.g. how to specify open-ended queries (no start or no end), how to handle if partial composite key is passed in?  How to distinguish partial composite key part from range part?;;;","30/Jan/19 11:01 AM;Senthil1;I see. I thought of partial composite key but missed open ended query though technically it is possible but might look ugly.

For partial composite key, I was suggesting a new API above. Technically, the same old API can be used and we don't need to differentiate between a partial composite key and a full composite key. User would call createcompositekey() with a partial attributes to construct the start and endKey. Then the constructed start and endKey can be used.

Open ended queries on composite key namespace can be done by passing '0x00' as the start key and '0x000xFF' as the endKey instead of empty strings. As you can notice, this does not look good and user should be unaware of simple and composite key namespaces.

Now, I agree that we may not reuse the same range query API for the composite key namespace as the usage of chaincode APIs should look neat without any confusion.;;;","02/Feb/19 1:21 AM;mbwhite;Thanks for the inputs to this issue:

For the record I do have a concern about increasing the surface area of the stub api; it is already quite large and this in itself is adding confusion.

I'm also concerned that about the issue of regression - this was observed in systems in use by end consumers; 

 

How does this issue come to a resolution? As a maintainer of chaincode-now and owner of this issue  I would propose the solution I outlined - however as 'new maintainer'  I need to listen to the views of the large community. 

 ;;;",,,,,,,,,,,,,,,,,
Stack trace should be captured in logs,FABCN-176,39732,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,davidkel,davidkel,09/May/19 8:12 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,22/May/19 9:11 PM,,0,,,,,,,"If I make a mistake in my chaincode I can see this in the logs
{noformat}
2019-05-09T07:55:44.239Z ERROR [contracts-spi/chaincodefromcontract.js] [mychannel-ccb20e69] TypeError: Cannot read property 'toString' of undefined
{noformat}

But this type of error could have occurred in multiple places depending on the complexity of the chaincode. 
It would be really useful to have the stack trace included in the log output
",,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00n9j:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/May/19 9:11 PM;mbwhite;Fixed in the CR for 15188;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Variables that use the spread operator generate incorrect metadata when annotated,FABCN-177,38604,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Not Supported,,davidkel,davidkel,20/Mar/19 10:52 PM,04/Jan/20 9:00 PM,28/Oct/23 2:28 AM,04/Jan/20 8:59 PM,,0,cc-triaged,,,,,,"Consider the following
{code}
    @Transaction(false)
    public async runQuery(ctx: Context, queryName: string, ...queryParams: string[]): Promise<any[]> {
{code}

This generated metadata 

{noformat}
              {
                    ""tag"": [],
                    ""parameters"": [
                        {
                            ""name"": ""queryName"",
                            ""description"": """",
                            ""schema"": {
                                ""type"": ""string""
                            }
                        },
                        {
                            ""name"": ""...queryParams"",
                            ""description"": """",
                            ""schema"": {
                                ""type"": ""string""
                            }
                        }
                    ],
                    ""name"": ""runQuery""
                },
{noformat}
so the name is not correct and the type is incorrect as well.",,davidkel,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00gwv:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/19 4:06 AM;denyeart;[~mbwhite] I've changed Fix Version to v2.0.0, do you agree?;;;","25/Sep/19 12:34 AM;jyellick;[~mbwhite] any update on this?;;;","04/Jan/20 9:00 PM;davidkel;Withdrawing as I don't need a fix and no other interest has been registered.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Metadata Generate Command was writing to file with space characters,FABCN-178,37037,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,SamRasha,SamRasha,SamRasha,22/Jan/19 10:26 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,23/Jan/19 12:20 AM,,0,,,,,,,"Files generated from the command was being created with '/n' characters to signify new lines, but wasnt creating new lines and so the format of the file was wrong.",,SamRasha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i008d3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),SamRasha,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update the pipeline scripts 'in-repo',FABCN-179,33311,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,mbwhite,mbwhite,mbwhite,29/Aug/18 5:35 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,07/Sep/18 5:18 AM,,0,,,,,,,The build scripts have swapped I believe to the 'in-repo' ones. These need to be updated as well. ,,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzoov:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Aug/18 5:37 PM;mbwhite;https://gerrit.hyperledger.org/r/25941;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-chaincode-node-merge job: Fail to publish npm module to npm registry.,FABCN-180,42690,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,vijaypunugubati,vijaypunugubati,09/Oct/19 11:48 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,10/Oct/19 4:24 AM,,0,ci-failure,,,,,,"fabric-chaincode-node-merge job: Fail to publish npm module(fabric-contract-api) to npm registry.

And this error was first observed on this CR merge [https://gerrit.hyperledger.org/r/#/c/fabric-chaincode-node/+/33532/]

*Branch:* Master

*Platform:* x86_64

*Error Snippet:* 
{code:java}
/00:17:06.649  ./Publish_NPM_Modules.sh: line 82: cd: /w/workspace/fabric-chaincode-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/api/fabric-contract-api: No such file or directory
[Pipeline] }/ code placeholder
{code}
*Build Logs:* 

[https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-merge-x86_64/221/console]",,heatherp,mbwhite,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-228,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i011ub:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,mbwhite,vijaypunugubati,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Oct/19 12:09 AM;vijaypunugubati;I guess the api dir should be apis in this [https://github.com/hyperledger/fabric-chaincode-node/blob/5e471b3cfe7ace403efaae68b39db135f5813c35/scripts/Jenkins_Scripts/Publish_NPM_Modules.sh#L82.|https://github.com/hyperledger/fabric-chaincode-node/blob/5e471b3cfe7ace403efaae68b39db135f5813c35/scripts/Jenkins_Scripts/Publish_NPM_Modules.sh#L82];;;","10/Oct/19 12:32 AM;mbwhite;https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33917 [FAB-16797] Typo in pathname;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation publish on the master branch fails,FABCN-181,39832,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Invalid: Works as Expected,jtonline,davidkel,davidkel,16/May/19 1:44 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,16/Oct/19 8:00 PM,,0,cc-triaged,,,,,,"
{noformat}
13:58:29  + ./CI_Script.sh --publish_ApiDocs
13:58:29  
13:58:29   -----------> Publish NODE_SDK API docs after successful merge on amd64 
13:58:29  ---------> CHAINCODE_NODE_COMMIT: 4852d22
13:58:29  Cloning into '****.github.io'...
13:58:32  [12:58:31] Using gulpfile /w/workspace/fabric-chaincode-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/gulpfile.js
13:58:32  [12:58:31] Starting 'docs'...
13:58:32  [12:58:31] Starting 'jsdocs'...
13:58:32  [12:58:31] Starting 'clean'...
13:58:32  [12:58:31] The following tasks did not complete: docs, jsdocs, clean
13:58:32  [12:58:31] Did you forget to signal async completion?
{noformat}
",,davidkel,jtonline,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00nu7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,jtonline,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/19 11:12 PM;jyellick;[~mbwhite] can you investigate?;;;","16/Oct/19 8:00 PM;jtonline;Docs now publishing ok on master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
node shim should not pass log entry back as error message,FABCN-182,27666,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,davidkel,davidkel,davidkel,13/Feb/18 7:30 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,14/Feb/18 2:01 AM,,0,,,,,,,"Currently the chaincode shim sends back the log entry as the error message which means the actual message is buried in a string and the other information is of no value. 
For example is if a chaincode function is invoked and throws an error the caller get's back the log entry string.",,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzyx9b:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Feb/18 2:01 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/17837/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
@Property tag does not handle array types,FABCN-183,37574,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,awjh-ibm,awjh-ibm,awjh-ibm,11/Feb/19 6:30 PM,21/Jun/21 11:43 PM,28/Oct/23 2:28 AM,13/Feb/19 6:55 PM,,0,,,,,,,,,awattez,awjh-ibm,Djx,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00bc7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awattez,awjh-ibm,Djx,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Feb/19 11:17 PM;awjh-ibm;https://gerrit.hyperledger.org/r/#/c/29227/

https://gerrit.hyperledger.org/r/#/c/29228/;;;","07/May/19 6:49 PM;awattez;I try to use  @Property with an array of object and i have an error on start.

In my ParentObj.ts file i have this definition
{code:java}
import {ChildObj} frome './childobj'

@Property('files', 'Array<ChildObj>')
 public files: ChildObj[];
{code}
 

When i try to start my cc

{{fabric-chaincode-node start --peer.address localhost:7052 --chaincode-id-name mycc}}

I have the following error :
{code:java}
{ [Error: can't resolve reference ChildObj from id ParentObj#] message: 'can\'t resolve reference ChildObj from id ParentObj#', missingRef: 'ChildObj', missingSchema: 'ChildObj' }{code}
Can you help me ? I think this issue is link to this bogue

Thanks;;;","10/May/19 5:40 PM;awattez;It works when i have the childObj class definition in the same file as ParentObj.ts

I think there is a problem with the 
import \{ChildObj} frome './childobj';;;","10/May/19 5:53 PM;awjh-ibm;That sounds like an issue I have faced in typescript before. Although imported at the top of the file TypesScript when compiled to JavaScript doesn't require the file in the generated code. This is usually as the definition imported is being used solely for type definitions so TypeScript decides the import is unnecessary in the JavaScript code. As the file is not required in the running JavaScript the chaincode in the smart contract cannot generate metadata from it and as such it is missing and can't be referenced.

The solution around this is, as you have done, add the definition within a file definitely imported or to import the file directly: {code} import './childobj' {code}. In the second scenario you must also import is as you have already {code} import { ChildObj } from './childobj' {code} for the type definitions to be used.;;;","21/Jun/21 11:43 PM;Djx;In 2021 on Hyperledger Fabric 2.3.2, I found the above to be useful. For my specific case I was able to do the two includes as mentioned above. The Property did not seem to need the additional decorators.

This seems to work for me:
{code:javascript}
import './childobj';
import { ChildObj } from './childobj'

@Object()
export class SomeOtherClass {
   @Property()
   public Children: Array<ChildObj>;
}
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,
Peer Can't tolerate ping frequency of node.js chaincode,FABCN-184,34843,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,davidkel,davidkel,davidkel,24/Oct/18 5:43 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,31/Oct/18 4:36 PM,,0,,,,,,,"The peer has a minimum default ping frequency of 60s. The node.js chaincode will ping at a frequency of 60s. However If this is slightly out for whatever reason, the Peer sends a GOAWAY with ENHANCE_YOUR_CALM and a message of `too_many_pings`, which in theory the client will then 1/2 the ping frequency but the peer then instantly closes the stream not even allowing the client side to handle. This causes the node.js container to terminate.

Although this doesn't fix the issue that appears to be with the peer (although there may also be a bug in grpc that ends up ignoring the GOAWAY request), there is a workaround which is to set 
CORE_PEER_KEEPALIVE_MININTERVAL=30s
But as the default in all the images is 60s, we need to change the default ping frequency of the node.js chaincode to not upset the peer. As a suggestion, we should set the ping frequency to 90 seconds.

Note the version numbers are not correct for for fabric-shim versions as they work on a different scale to core fabric",,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzw3r:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Oct/18 12:57 AM;mbwhite;Looking at the GRPC options, is this the
 
    'grpc.http2.min_time_between_pings_ms' : default: 60000 
property [~davidkel] ?   ;;;","31/Oct/18 4:36 PM;davidkel;release-1.1
https://gerrit.hyperledger.org/r/#/c/27200/

release-1.2
https://gerrit.hyperledger.org/r/#/c/27201/

release-1.3
https://gerrit.hyperledger.org/r/#/c/27202/

master
https://gerrit.hyperledger.org/r/#/c/27203/
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction sent with zero arguments causes unhandled rejection error,FABCN-185,41442,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jtonline,sstone1,sstone1,26/Jul/19 5:55 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,16/Oct/19 9:20 PM,,0,cc-triaged,,,,,,"https://github.com/hyperledger/fabric-chaincode-node/blob/release-1.4/fabric-shim/lib/contract-spi/chaincodefromcontract.js#L308

No check of args.length, so if you use the CLI to send in a transaction with zero arguments, you get the following error:

{code}
2019-07-26T08:12:55.962Z error [_]                                                error: Unhandled Rejection reason TypeError: Cannot read property 'toString' of undefined promise Promise {
  <rejected> TypeError: Cannot read property 'toString' of undefined
    at ChaincodeFromContract.Invoke (/usr/local/src/node_modules/fabric-shim/lib/contract-spi/chaincodefromcontract.js:308:32)
    at handleMessage (/usr/local/src/node_modules/fabric-shim/lib/handler.js:621:47)
    at ChaincodeSupportClient.handleTransaction (/usr/local/src/node_modules/fabric-shim/lib/handler.js:361:9)
    at ClientDuplexStream.<anonymous> (/usr/local/src/node_modules/fabric-shim/lib/handler.js:301:30)
    at emitOne (events.js:116:13)
    at ClientDuplexStream.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at ClientDuplexStream.Readable.push (_stream_readable.js:208:10)
    at Object.onReceiveMessage (/usr/local/src/node_modules/grpc/src/client_interceptors.js:1292:19) } {""timestamp"":""2019-07-26T08:12:55.962Z""}
{code}",,jtonline,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00v63:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,sstone1,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Oct/19 8:16 PM;jtonline;[https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/32608]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve error handling of node.js fabric-shim when invoking other chaincode,FABCN-186,27427,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,harrisob@us.ibm.com,janb87,janb87,06/Feb/18 12:12 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,13/Feb/18 2:09 AM,,0,,,,,,,"When doing an invoke of other chaincode the error does not get rethrow the original error, you lose the context of the error. 

This change request fixes this.

[https://gerrit.hyperledger.org/r/#/c/16597/] 

 ",,davidkel,janb87,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzyvzz:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,davidkel,janb87,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Feb/18 12:40 AM;janb87;[~jimthematrix] [~harrisob@us.ibm.com] can you provide your feedback, look at the change request in gerrit?;;;","10/Feb/18 3:19 AM;davidkel;Hi [~janb87] thanks for the CR, please could you provide test cases for this change

Also I assume that actually addresses FAB-7611 ?;;;","10/Feb/18 6:39 PM;davidkel;[~harrisob@us.ibm.com] There is a CR for this but it doesn't include any tests. I don't think the CR should go in without both a unit and e2e test, both of which shouldn't be hard to add.;;;","12/Feb/18 10:28 PM;davidkel;I am working on a revised CR which will include tests.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Update README and test setup script,FABCN-187,20852,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,15/Sep/17 11:37 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,02/Nov/17 4:29 AM,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzygjb:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Re-think npm audit check recurrence,FABCN-188,43457,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,heatherp,heatherp,26/Nov/19 11:10 PM,04/Jun/20 9:34 PM,28/Oct/23 2:28 AM,04/Jun/20 9:34 PM,,1,cc-triaged,,,,,,"If npm audit fails, it fails on every build/PR and this has caused us some headaches recently - should we consider only running it weekly?
To be discussed - perhaps we just got unlucky this week!",,jtonline,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1",,,,Unset,Unset,29 May to 5 June,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,mbwhite,,,,,,,,,,,,,,release-1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Nov/19 11:13 PM;jtonline;It should probably always run for release builds as well, although not quite sure what that means if it fails. Fix, move the release tag and tray again?;;;","02/Jun/20 12:46 AM;mbwhite;We've seen reliability in the audit checks on master/release-2.x recently.

release-1.4 less so.. go going to port back the approach to npm audit .;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Metadata for params and returns does not resolve array types,FABCN-189,35318,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,14/Nov/18 12:31 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,23/Jan/19 7:03 PM,,0,,,,,,,"The metadata for params and returns from a transaction (marked with an annotation) do not contain the fully resolved array type info just ""type"": ""array"".",,awjh-ibm,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzynb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Dec/18 10:41 PM;mbwhite;@andrewhurt IIRC, this can't be fixed at present - move to v2?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handling of parameters does not use supplied metadata for schema,FABCN-190,38596,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,20/Mar/19 8:13 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,27/Mar/19 1:51 AM,,0,,,,,,,If a user supplies their own metadata rather than using annotations the handling of parameters passed in does not compare against these values. Instead it uses the knowledge gathered from reflection.,,awjh-ibm,jmason900,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00gv3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,jmason900,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Discrepancy between chaincode-node tutorials in release-1.4 and master,FABCN-191,43045,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Done,kestutis.gudynas,heatherp,heatherp,31/Oct/19 12:09 AM,18/Sep/20 6:10 PM,28/Oct/23 2:28 AM,18/Sep/20 6:10 PM,,0,cc-triaged,,,,,,"First mentioned by Dave in FAB-15611 - the tutorials don't match between versions (commits missing from master, probably?) and the addition of rush in the master branch has complicated this, as there are now tutorials in docs/apidocs/tutorials
We need to do a diff and figure out whats what",,heatherp,kestutis.gudynas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:",,,,Unset,Unset,11Sep to 18Sep,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,kestutis.gudynas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Updates to the transaction hooks,FABCN-192,33452,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,mbwhite,mbwhite,mbwhite,04/Sep/18 6:13 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,06/Sep/18 9:29 PM,,0,,,,,,,"Currently referred to as `setUnknownFn/setBeforeFn/setAfterFn`
 * The function specified by ""setUnknownFn"" looks like it will never be called.
 * Before/After should support a set of functions; imagine wanting to use multiple libraries that provide these.
 ** Take an of functions, the order they are called is in defined as the order of the array.
 ** Once set the array of functions cannot be modified; there may be transactions in progress that must not be affected. 
 ** the unkown hook will remain taking one 
 * 'fn' to be replaced with the word. 'hook' is not totally obvious.  
 ** setUnknownHook
 ** addBeforeHook
 ** addAfterHook",,davidkel,denyeart,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-55,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzpb3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,denyeart,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Sep/18 9:04 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/26098/;;;","06/Sep/18 9:29 PM;davidkel;Duplicate of 11495 as it is still on progress;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
type checking is done on the return type of a contract when metadata is defined.,FABCN-193,38673,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Invalid: Works as Expected,,davidkel,davidkel,22/Mar/19 7:08 PM,04/Feb/20 9:51 PM,28/Oct/23 2:28 AM,04/Feb/20 9:51 PM,,0,cc-triaged,external,,,,,"In the jsonserializer class, the toBuffer method is defined as follows

{code:java}
    toBuffer(result, schema = {}) {

        // relay on the default algorithms, including for Buffers. Just retunring the buffer
        // is not helpful on inflation; is this a buffer in and of itself, or a buffer to inflated to JSON?
        if (result) {
            // check that schema to see exactly how we should de-marshall this
            if (schema.type && (schema.type === 'string' || schema.type === 'number')) {
                // ok so this is a basic primitive type, and for strings and numbers the wireprotocol is different
                // double check the type of the result passed in
                if (schema.type !== typeof result) {
                    throw new Error(`Returned value is ${typeof result} does not match schema type of ${schema.type}`);
                }
                return Buffer.from(result.toString());
            } else {
                const payload = JSON.stringify(result);
                return Buffer.from(payload);
            }
        } else {
            return;
        }
    }
{code}

This shows that it is checking the type of object being returned is of the same name as the return type of the metadata.json. 
I think this is very restrictive as it means the chaincode developer has to define a class of the return type in order to pass validation on the return and can't just return some POJO nor could they return a class that perhaps inherits from that type.
If validation is to take place then it should match the method of validation that is used for input variables (ie it checks each of the properties to ensure it matches the correct data type (and does it recursively as required)
Also this contract is for the receiver to understand what should be returned and the chaincode developer may not want validation to take place.

Due to another issue FAB-14722, this check is never done so actually has never been enforced. My suggestion is that the typeof code check should be removed for now for this jira. 

I would like to see a validation mechanism where
1. We can be specific about which input values are validated or not
2. We can specify whether the return value is validated or not
3. We can control the depth of validation for complex objects (and also cope with cyclic issues)
4. We can define the concept of strict/non-strict validation which means either an object has to have the exact parameters or whether it is allowed to have extra parameters ",,awjh-ibm,davidkel,denyeart,jyellick,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl4d:4",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,davidkel,denyeart,jyellick,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Mar/19 7:11 PM;awjh-ibm;I think for now rather than using the schema we should check the type of the result and perform any serialization based on that alone. The metadata is a suggestion to the user of what they should get back and it is down to the developer to ensure that what they return matches that metadata;;;","22/Mar/19 7:14 PM;davidkel;yep totally agree, also updated my original text to be specific about removing the typeof check.;;;","03/Apr/19 6:22 PM;mbwhite;Good points Dave; based on the current state-of-the-art in 1.4.1:

0. There are some corrections that need to made with respect to validation of the types; I'll use this issue to add those and some docs references. Also the error message in the code you've highlighted is misleading in it's current form, so will improve that.
 # _We can be specific about which input values are validated or not_
For primitive types such as string, number, boolean - very little checking is done here for the default schema. Really only the typechecking that JavaScript enforces!
For more complex types, the default of JSONSchema is that everything is optional so there is great freedom to return what you want
 # _We can specify whether the return value is validated or not_
Same rules are applied to return types as per parameters.
 # _We can control the depth of validation for complex objects (and also cope with cyclic issues)_
The optional nature should be able to help here
 # _We can define the concept of strict/non-strict validation which means either an object has to have the exact parameters or whether it is allowed to have extra parameters_
__This can be defined today...   additionalProperites: false to the object definition will mean that if a property is specified in the object it has to be from the supplied schema. mandatory: true on a property means the property has to be present.;;;","17/Jul/19 4:05 AM;denyeart;[~mbwhite] I've changed Fix Version to v2.0.0, do you agree?;;;","24/Sep/19 11:18 PM;jyellick;[~mbwhite] any updates on this?;;;","04/Feb/20 6:51 PM;mbwhite;[~davidkel] Rereviewing this I believe that it is possible to achieve what you want today.

Please shout and we can work out some examples/details. ;;;","04/Feb/20 9:51 PM;davidkel;[~mbwhite] ok, many thanks for the update;;;",,,,,,,,,,,,,,,,,,,,,,
Unstable v2.0 modules for Node.js chaincode not being published,FABCN-194,42119,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,sstone1,sstone1,sstone1,29/Aug/19 5:23 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,06/Sep/19 9:54 PM,,0,,,,,,,,,caod,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00yxf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caod,sstone1,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Aug/19 3:21 AM;caod;Looks like this is already being worked, moving to in progress.

[https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33266];;;","06/Sep/19 9:54 PM;sstone1;Now complete - modules are publishing again.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
contract returning a boolean false returns an empty buffer to the client,FABCN-195,38121,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,jtonline,davidkel,davidkel,01/Mar/19 8:39 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,26/Mar/19 12:43 AM,,0,,,,,,,"If I have a contract and a method returns a boolean false, the buffer is empty at the client end, whereas if I return a boolean true, the buffer contains the string `true`. I was expecting the buffer to return the string `false`.

Also if I have no schema defined for my contract. If I return a string then the buffer return contains the string wrapped in double quotes. So if I return `mystr`, the resulting buffer content is actually `""mystr""`.

",,davidkel,jtonline,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00e5j:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,jtonline,mbwhite,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Mar/19 12:39 AM;mbwhite;https://gerrit.hyperledger.org/r/#/c/29836/;;;","19/Mar/19 8:42 PM;jtonline;Needs porting to v2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
getPrivateData and getPrivateDataByRange return unreadable strings using fabric-shim for node,FABCN-196,34221,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Won't Do,,BChain,BChain,29/Sep/18 7:09 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,04/Dec/18 6:39 PM,,0,,,,,,,"As getPrivateData and getPrivateDataByRange are invoked something like ""�{�Ǎ�����""q�ڵ��ϴ��{�ǈ�鬶+ez�j���ܷ��q����Z�]y�)�'j.��u�.��&z��r��zw2Q"" is returned when converting the output buffer to a string. This occurs when the data is committed as a string to the ledger instead of a byte buffer. But according to the documentation committing data as a string should be possible. 

Three days ago it worked properly and returned the correct value as readable string. Therefore it is my guess that this originates from the most recent update of fabric-shim node library and the current build failure.

 

Moreover, these methods are currently not documented anymore on [https://fabric-shim.github.io/ChaincodeStub.html|https://fabric-shim.github.io/ChaincodeStub.html.]

 ",,awjh-ibm,BChain,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzt7z:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,BChain,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/18 6:55 AM;denyeart;[~zhaochy] Could you take a look?;;;","04/Dec/18 6:39 PM;awjh-ibm;Closed as fixed in 1.4;;;","04/Dec/18 6:50 PM;denyeart;[~awjh-ibm] is it an issue in v1.2 and v1.3 as well?;;;","04/Dec/18 6:54 PM;awjh-ibm;Its a docs issue in 1.2, docs say to pass string instead of buffer, not checked 1.3 but shall look now;;;","04/Dec/18 6:55 PM;awjh-ibm;1.3 is working as intended;;;","04/Dec/18 11:14 PM;denyeart;Thanks [~awjh-ibm]. So do we need a doc fix to get backported to release-1.2?  We don't backport every fix... but for fixes that are important to end users we do...;;;","04/Dec/18 11:20 PM;awjh-ibm;As far as I can tell the fix is to change the comment above the function from string to byte[] and rebuild the jsdoc page for this using that;;;","09/Dec/18 1:36 AM;denyeart;Thanks [~awjh-ibm], are you taking that action?;;;","12/Dec/18 10:27 PM;awjh-ibm;[~denyeart] yes I will amend 1.2;;;",,,,,,,,,,,,,,,,,,,,
Node.js chaincode does not preserve casing inside peer url,FABCN-197,23969,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,janb87,janb87,janb87,16/Nov/17 8:30 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,15/Feb/18 6:12 AM,,0,,,,,,,"We are having issues executing node.js chaincode on our network.

*More info on the issue:*
 # The peer starts up the chaincode container correctly
 # The chaincode container starts up the shim and sends a chat to the peer
 # The peer doesn't receive a message from the chaincode container and times out after waiting for 5 mins

*Problem*

Inside the shim code the peer url is converted to all lowercase. As Docker DNS is case senstive the peer cannot be found and does not receive any messages from the chaincode container.

*Suggested solution:*

Make sure the casing of the peer url is preserved inside the chain code.

The cause is the url.parse method from node.js itself. Which returns a url object.

[https://nodejs.org/api/url.html#url_urlobject_host]  (The {{hostname}} property is the lower-cased host name portion of the {{host}} component _without_ the {{port}} included.)

[https://github.com/hyperledger/fabric-chaincode-node/blob/master/src/lib/handler.js#L689]

[https://github.com/hyperledger/fabric-chaincode-node/blob/master/src/lib/handler.js#L683] 

*More info on our project:*
 # We have generated our own certificates
 # We have successfully deployed Go chaincode using the same configuration
 # We run both Go and Node.js chaincode (instantiated from the same peer)
 # Inside the node.js client we need to use the 'ssl-target-name-override' override (we don't have mutual TLS enabled)

Network setup schema

!ANB_Arch.004.png|thumbnail!

 

Environment variables chaincode container

[^env-variables-chaincode-container] 

[~jimthematrix@gmail.com] [~yacovm]

 ",,davidkel,denyeart,harrisob@us.ibm.com,janb87,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 8:31 PM;janb87;ANB_Arch.004.png;https://jira.hyperledger.org/secure/attachment/13348/ANB_Arch.004.png","16/Nov/17 8:30 PM;janb87;env-variables-chaincode-container;https://jira.hyperledger.org/secure/attachment/13347/env-variables-chaincode-container",,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzyn9b:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,davidkel,denyeart,harrisob@us.ibm.com,janb87,yacovm,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Nov/17 8:35 PM;janb87;Somewhere in the node.js fabric-shim code we found something about mutual TLS.

https://github.com/hyperledger/fabric-chaincode-node/blob/master/src/lib/chaincode.js#L102

We are not sure what it means. Do we need to configure something on the peer to enable this?;;;","16/Nov/17 8:38 PM;yacovm;[~jimthematrix] I did a hangout with them and they said that they did a *tcpdump* and the peer didn't receive any communication from the chaincode shim at port 7052 so it could be a configuration issue of the node.js chaincode.

[~janb87] I would recommend to also do a *tcpdump* in the chaincode container, and see if it tries to send any packets or not.;;;","16/Nov/17 11:13 PM;janb87;[~jimthematrix] [~yacovm] We figured out the issue. The url was somehow converted into lowercase ""epeer01.vlaanderen.be"" where the DNS in our docker network was case sensitive ""EPeer01.vlaanderen.be"".

Probably in Go the casing was kept that is why it was working there and not in node.js.;;;","17/Nov/17 5:53 AM;yacovm;If you think there is a bug, feel free to submit a change set in gerrit;;;","27/Nov/17 2:29 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/15705/;;;","06/Feb/18 12:06 AM;yacovm;[~jimthematrix] [~harrisob@us.ibm.com] is there any update on this one? ;;;","06/Feb/18 12:09 AM;janb87;Fix can be found here: [https://gerrit.hyperledger.org/r/#/c/16593/];;;","06/Feb/18 4:32 AM;harrisob@us.ibm.com;[https://gerrit.hyperledger.org/r/#/c/16593/]

 ;;;","15/Feb/18 3:00 AM;denyeart;[~janb87] Could you add a test as recommended in [https://gerrit.hyperledger.org/r/#/c/16593/] ?;;;","15/Feb/18 4:16 AM;janb87;[~denyeart] ok I'll try to add one tomorrow;;;","15/Feb/18 4:57 AM;janb87;[~denyeart] I've added a test: https://gerrit.hyperledger.org/r/#/c/16593/;;;",,,,,,,,,,,,,,,,,,
Custom metadata does not support openapi schema formats,FABCN-198,38607,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Works as Expected,awjh-ibm,awjh-ibm,awjh-ibm,20/Mar/19 11:25 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Mar/19 7:16 PM,,0,,,,,,,"OpenAPI allows a format to be specified along with a type to provide more details on the type e.g. type:integer, format: int64.

This will not affect verification of parameters but allowing it will make the metadata more useful for outside apps.",,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00gxj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't share an annotated typescript model with client code,FABCN-199,39502,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,davidkel,davidkel,25/Apr/19 5:34 PM,05/May/20 10:13 PM,28/Oct/23 2:28 AM,05/May/20 10:13 PM,,0,cc-triaged,external,,,,,"The scenario is where I want to use typescript for compile time checking to define a model which is shared between both the node.js chaincode and the node.js client.  So I have a model.ts file shared between the chaincode and client builds. However to annotate the model.ts file I need to import the contract api, but that pulls in fabric-shim and contract-spi which is ok when building the chaincode side but not appropriate for building the client side.

It should be possible to share typescript model files and have annotations generated chaincode side, but able to ignore client side without having to pull in irrelevant npm models.

",,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl4d:9",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/20 6:49 PM;mbwhite;[~davidkel]  This feature is possible to do within v2.0.0 node modules; this has been done by having a separate shim-api module. 

I'm not included at this point to port back introducing another npm module to the version 1.4 release; doesn't seem appropriate to add a module in a patch release.;;;","04/Feb/20 9:53 PM;davidkel;[~mbwhite] ok, many thanks for the update. ;;;","05/May/20 10:13 PM;mbwhite;v2 modules support this as the shim npm module does not need to be installed. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
composite keys cannot contain multibyte utf-8 characters,FABCN-200,35521,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,davidkel,davidkel,davidkel,21/Nov/18 10:55 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,03/Dec/18 10:41 PM,,0,,,,,,,A check on a composite key component is incorrectly rejecting key parts,,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzzs7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Nov/18 10:57 PM;davidkel;remove the check for utf8.decode in validateCompositeKeyAttribute. A node.js string will be valid utf-16 characters so no need to attempt to see if it contains valid utf8 characters.
This also means the dependency of utf8 npm module can also be removed.;;;","30/Nov/18 7:14 PM;mbwhite;[~davidkel] Are all the releases merged for this?  I don't see any outstanding changes in Gerrit.

The master branch for 1.4 certainly is. ;;;","01/Dec/18 7:13 PM;davidkel;[~mbwhite] still waiting for your approval of 
https://gerrit.hyperledger.org/r/#/c/27697/;;;","01/Dec/18 7:18 PM;davidkel;Master (1.4) CR https://gerrit.hyperledger.org/r/#/c/27692/

Release 1.3 CR
https://gerrit.hyperledger.org/r/#/c/27695/

Release 1.2 CR
https://gerrit.hyperledger.org/r/#/c/27696/

Release 1.1 CR
https://gerrit.hyperledger.org/r/#/c/27697/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Got an SSL_transport_security issue when instantiating a chaincode written with Node JS ,FABCN-201,30234,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,FenglianXu,FenglianXu,16/May/18 6:18 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,06/Sep/18 9:31 PM,,0,,,,,,,"When I instantiate a Node JS chaincode on the Hyperledger Fabric V1.1 network, I got below error:

E0508 10:52:31.948211338      18 ssl_transport_security.cc:238] Could not get common name of subject from certificate.

The certificate is corret when I viewed it with below command:

openssl x509 -noout -subject -in tlsca.org1.fabric.network-cert.pem

subject= /C=US/ST=California/L=San Francisco/O=org1.fabric.network/CN=tlsca.org1.fabric.network

This issue only occurs when instantiate a node js chaincode.

 ",,davidkel,FenglianXu,hbkmadness,kchristidis,nagap,VadimInshakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzzae7:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,davidkel,FenglianXu,hbkmadness,kchristidis,nagap,VadimInshakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 6:19 AM;kchristidis;[~FenglianXu]: Can you please attach the certificate (and whatever other artifacts are necessary) in order to reproduce?;;;","13/Jun/18 2:52 PM;hbkmadness;Same happened to me with Node v.8.11.2 I was using the chaincode from the fabric-samples from the byfn sample. The chaincode was installed successfully but when trying to instantiate and when the chaincode container started, its logs gave me the same error as the above one.

The TLS I was using is this:

-----BEGIN CERTIFICATE-----
MIICRzCCAe2gAwIBAgIUD7yJcHItWps43KUsn9jC+bNuacIwCgYIKoZIzj0EAwIw
UTELMAkGA1UEBhMCQkcxCjAIBgNVBAcTAWExCjAIBgNVBAoTAVQxHDAaBgNVBAsT
E0h5cGVyTGVkZ2VyLW5ldHdvcmsxDDAKBgNVBAMTA1RMUzAgFw0xODA2MTIxNTE3
MDBaGA8yMTE4MDUxOTE1MjIwMFowXTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5v
cnRoIENhcm9saW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGY2xp
ZW50MQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABElo
+tc0DdtP9F/vihqU7tyEOo2xq8G8RXg3zXD6XNFyAEv3qzUI2ml1qMbxP5NJc4V9
cdbTsU28ezDHn/3rwUKjgZQwgZEwDgYDVR0PAQH/BAQDAgeAMAwGA1UdEwEB/wQC
MAAwHQYDVR0OBBYEFJpBxO8y6AIgKCTZiSkaREjhM4HAMB8GA1UdIwQYMBaAFHVY
o+3RIZZrk+DfQoJucjg9obwDMDEGA1UdEQQqMCiCCWxvY2FsaG9zdIIPb3JkZXJl
ci5vcmQuY29thwTAqAEGhwR/AAABMAoGCCqGSM49BAMCA0gAMEUCIQDMI1JyJW55
IRaNCPJyUk4ynmbzQlywC5n1DVKQSHNZwAIgLtnmGSWrCE0H5zaYymzz8ZaGcQm8
iEeBDlxaR+MDebI=
-----END CERTIFICATE-----

and this is the CA cert signed the above one:


-----BEGIN CERTIFICATE-----
MIIB6jCCAZGgAwIBAgIUI7rij+CLaz//fiCt3RGaTpjidxIwCgYIKoZIzj0EAwIw
UTELMAkGA1UEBhMCQkcxCjAIBgNVBAcTAWExCjAIBgNVBAoTAVQxHDAaBgNVBAsT
E0h5cGVyTGVkZ2VyLW5ldHdvcmsxDDAKBgNVBAMTA1RMUzAgFw0xODA2MDgxODQ0
MDBaGA8yMTY4MDUwMjE4NDQwMFowUTELMAkGA1UEBhMCQkcxCjAIBgNVBAcTAWEx
CjAIBgNVBAoTAVQxHDAaBgNVBAsTE0h5cGVyTGVkZ2VyLW5ldHdvcmsxDDAKBgNV
BAMTA1RMUzBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABB3H5vhmmSV91cA9ya/V
WdUgrjR7fQnQ2lv8yksuphykAk6sWATNVMJLKAwK68SoI2bM2DIpytyV8FxJt+C6
iEKjRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0GA1Ud
DgQWBBR1WKPt0SGWa5Pg30KCbnI4PaG8AzAKBggqhkjOPQQDAgNHADBEAiAJJVnC
3NJlapJ47AUJmNcLks0h+HJ8rlz/NYGCHDkvLQIgbbYz9VJMJcPmd1JAj2FB2np4
HXAn5BkbzucOM72tyIY=
-----END CERTIFICATE-----;;;","15/Jun/18 1:13 AM;kchristidis;[~smithbk]: Perhaps you can shed some light here?;;;","06/Sep/18 9:31 PM;davidkel;This message is output from a dependent library but doesn't affect the implementation. The reporter did not provide any detail as to what didn't work and why this error message might indicate the cause.;;;","20/Sep/18 1:13 AM;VadimInshakov;I have the same error: https://stackoverflow.com/questions/52407083/hyperledger-composer-object-with-id-x-in-collection-with-id-y-does-not-exist;;;","26/Sep/18 3:45 AM;VadimInshakov;I think this CouchDB error causes these errors. 

Please pay attention to this CouchDB logs, we have here many state reading errors:
{code:java}
****************************************************
WARNING: CouchDB is running in Admin Party mode.
 This will allow anyone with access to the
 CouchDB port to access your database. In
 Docker's default configuration, this is
 effectively any other container on the same
 system.
 Use ""-e COUCHDB_USER=admin -e COUCHDB_PASSWORD=password""
 to set it in ""docker run"".
****************************************************
[os_mon] cpu supervisor port (cpu_sup): Error writing to Erlang
[info] 2018-09-25T18:05:05.018712Z nonode@nohost <0.7.0> -------- Application couch_log started on node nonode@nohost
[info] 2018-09-25T18:05:05.048838Z nonode@nohost <0.7.0> -------- Application folsom started on node nonode@nohost
[info] 2018-09-25T18:05:05.272179Z nonode@nohost <0.7.0> -------- Application couch_stats started on node nonode@nohost
[info] 2018-09-25T18:05:05.276028Z nonode@nohost <0.7.0> -------- Application khash started on node nonode@nohost
[info] 2018-09-25T18:05:05.312633Z nonode@nohost <0.7.0> -------- Application couch_event started on node nonode@nohost
[info] 2018-09-25T18:05:05.359547Z nonode@nohost <0.7.0> -------- Application ibrowse started on node nonode@nohost
[info] 2018-09-25T18:05:05.394067Z nonode@nohost <0.7.0> -------- Application ioq started on node nonode@nohost
[info] 2018-09-25T18:05:05.394480Z nonode@nohost <0.7.0> -------- Application mochiweb started on node nonode@nohost
[info] 2018-09-25T18:05:05.468773Z nonode@nohost <0.195.0> -------- Apache CouchDB 2.1.1 is starting.
2018-09-25T18:05:05.473169200Z 
[info] 2018-09-25T18:05:05.468889Z nonode@nohost <0.196.0> -------- Starting couch_sup
[notice] 2018-09-25T18:05:05.994312Z nonode@nohost <0.82.0> -------- config: [couchdb] uuid set to 06fcb3139f2556dea3ecb459701ef841 for reason nil
[info] 2018-09-25T18:05:06.196057Z nonode@nohost <0.201.0> -------- open_result error {not_found,no_db_file} for _users
[info] 2018-09-25T18:05:06.666443Z nonode@nohost <0.195.0> -------- Apache CouchDB has started. Time to relax.
2018-09-25T18:05:06.666743100Z 
[info] 2018-09-25T18:05:06.666589Z nonode@nohost <0.195.0> -------- Apache CouchDB has started on http://127.0.0.1:5986/
[info] 2018-09-25T18:05:06.667295Z nonode@nohost <0.7.0> -------- Application couch started on node nonode@nohost
[info] 2018-09-25T18:05:06.667862Z nonode@nohost <0.7.0> -------- Application ets_lru started on node nonode@nohost
[info] 2018-09-25T18:05:06.787977Z nonode@nohost <0.7.0> -------- Application rexi started on node nonode@nohost
[info] 2018-09-25T18:05:06.924139Z nonode@nohost <0.201.0> -------- open_result error {not_found,no_db_file} for _nodes
[warning] 2018-09-25T18:05:06.924214Z nonode@nohost <0.269.0> -------- creating missing database: _nodes
[info] 2018-09-25T18:05:07.123007Z nonode@nohost <0.201.0> -------- open_result error {not_found,no_db_file} for _dbs
[warning] 2018-09-25T18:05:07.123047Z nonode@nohost <0.282.0> -------- creating missing database: _dbs
[warning] 2018-09-25T18:05:07.123103Z nonode@nohost <0.281.0> -------- creating missing database: _dbs
[info] 2018-09-25T18:05:07.197369Z nonode@nohost <0.7.0> -------- Application mem3 started on node nonode@nohost
[info] 2018-09-25T18:05:07.198244Z nonode@nohost <0.7.0> -------- Application fabric started on node nonode@nohost
[info] 2018-09-25T18:05:07.341215Z nonode@nohost <0.7.0> -------- Application chttpd started on node nonode@nohost
[notice] 2018-09-25T18:05:07.437433Z nonode@nohost <0.318.0> -------- chttpd_auth_cache changes listener died database_does_not_exist at mem3_shards:load_shards_from_db/6(line:403) <= mem3_shards:load_shards_from_disk/1(line:378) <= mem3_shards:load_shards_from_disk/2(line:407) <= mem3_shards:for_docid/3(line:91) <= fabric_doc_open:go/3(line:38) <= chttpd_auth_cache:ensure_auth_ddoc_exists/2(line:187) <= chttpd_auth_cache:listen_for_changes/1(line:134)
[error] 2018-09-25T18:05:07.438260Z nonode@nohost emulator -------- Error in process <0.319.0> with exit value:
{database_does_not_exist,[{mem3_shards,load_shards_from_db,""_users"",[{file,""src/mem3_shards.erl""},{line,403}]},{mem3_shards,load_shards_from_disk,1,[{file,""src/mem3_shards.erl""},{line,378}]},{mem3_shards,load_shards_from_disk,2,[{file,""src/mem3_shards.erl""},{line,407}]},{mem3_shards,for_docid,3,[{file,""src/mem3_shards.erl""},{line,91}]},{fabric_doc_open,go,3,[{file,""src/fabric_doc_open.erl""},{line,38}]},{chttpd_auth_cache,ensure_auth_ddoc_exists,2,[{file,""src/chttpd_auth_cache.erl""},{line,187}]},{chttpd_auth_cache,listen_for_changes,1,[{file,""src/chttpd_auth_cache.erl""},{line,134}]}]}
2018-09-25T18:05:07.438932100Z 
[info] 2018-09-25T18:05:07.463182Z nonode@nohost <0.7.0> -------- Application couch_index started on node nonode@nohost
[info] 2018-09-25T18:05:07.463880Z nonode@nohost <0.7.0> -------- Application couch_mrview started on node nonode@nohost
[info] 2018-09-25T18:05:07.465702Z nonode@nohost <0.7.0> -------- Application couch_plugins started on node nonode@nohost
[notice] 2018-09-25T18:05:07.727972Z nonode@nohost <0.82.0> -------- config: [features] scheduler set to true for reason nil
[info] 2018-09-25T18:05:07.878473Z nonode@nohost <0.201.0> -------- open_result error {not_found,no_db_file} for _replicator
[notice] 2018-09-25T18:05:07.895340Z nonode@nohost <0.335.0> -------- creating replicator ddoc <<""_replicator"">>
[info] 2018-09-25T18:05:07.946918Z nonode@nohost <0.7.0> -------- Application couch_replicator started on node nonode@nohost
[info] 2018-09-25T18:05:08.054017Z nonode@nohost <0.7.0> -------- Application couch_peruser started on node nonode@nohost
[info] 2018-09-25T18:05:08.158935Z nonode@nohost <0.7.0> -------- Application ddoc_cache started on node nonode@nohost
[info] 2018-09-25T18:05:08.277989Z nonode@nohost <0.7.0> -------- Application global_changes started on node nonode@nohost
[info] 2018-09-25T18:05:08.278081Z nonode@nohost <0.7.0> -------- Application jiffy started on node nonode@nohost
[info] 2018-09-25T18:05:08.332579Z nonode@nohost <0.7.0> -------- Application mango started on node nonode@nohost
[info] 2018-09-25T18:05:08.385098Z nonode@nohost <0.7.0> -------- Application setup started on node nonode@nohost
[info] 2018-09-25T18:05:08.385467Z nonode@nohost <0.7.0> -------- Application snappy started on node nonode@nohost
[notice] 2018-09-25T18:05:11.575347Z nonode@nohost <0.408.0> 6e22d58556 prod.couchdb0:5984 172.19.0.18 undefined GET / 200 ok 360
[notice] 2018-09-25T18:05:11.595380Z nonode@nohost <0.408.0> 5c382d8031 prod.couchdb0:5984 172.19.0.18 undefined GET /_users 404 ok 18
[notice] 2018-09-25T18:05:11.861220Z nonode@nohost <0.408.0> 1442f9e149 prod.couchdb0:5984 172.19.0.18 undefined PUT /_users 201 ok 262
[notice] 2018-09-25T18:05:11.878138Z nonode@nohost <0.408.0> 95214ad958 prod.couchdb0:5984 172.19.0.18 undefined GET /_replicator 404 ok 10
[notice] 2018-09-25T18:05:11.972074Z nonode@nohost <0.408.0> 166c792292 prod.couchdb0:5984 172.19.0.18 undefined PUT /_replicator 201 ok 93
[notice] 2018-09-25T18:05:11.977357Z nonode@nohost <0.408.0> b382ab14e2 prod.couchdb0:5984 172.19.0.18 undefined GET /_global_changes 404 ok 0
[notice] 2018-09-25T18:05:12.069778Z nonode@nohost <0.408.0> d418e5618a prod.couchdb0:5984 172.19.0.18 undefined PUT /_global_changes 201 ok 91
[notice] 2018-09-25T18:05:12.602754Z nonode@nohost <0.339.0> -------- couch_replicator_clustering : cluster stable
[notice] 2018-09-25T18:05:12.654492Z nonode@nohost <0.355.0> -------- Started replicator db changes listener <0.621.0>
[notice] 2018-09-25T18:05:12.812625Z nonode@nohost <0.621.0> -------- creating replicator ddoc <<""shards/80000000-9fffffff/_replicator.1537898711"">>
[notice] 2018-09-25T18:05:36.789649Z nonode@nohost <0.259.0> -------- rexi_server : cluster stable
[notice] 2018-09-25T18:05:36.789816Z nonode@nohost <0.262.0> -------- rexi_buffer : cluster stable
[info] 2018-09-25T18:05:58.633694Z nonode@nohost <0.47.0> -------- alarm_handler: {set,{system_memory_high_watermark,[]}}
[notice] 2018-09-25T18:06:06.666377Z nonode@nohost <0.408.0> 95867339bc prod.couchdb0:5984 172.19.0.18 undefined GET /innochannel_ 404 ok 1
[notice] 2018-09-25T18:06:06.686838Z nonode@nohost <0.408.0> bea30c73cc prod.couchdb0:5984 172.19.0.18 undefined PUT /innochannel_ 201 ok 19
[notice] 2018-09-25T18:06:06.709583Z nonode@nohost <0.408.0> 71afb691d1 prod.couchdb0:5984 172.19.0.18 undefined GET /innochannel_ 200 ok 6
[notice] 2018-09-25T18:06:06.724057Z nonode@nohost <0.408.0> 872d7415cf prod.couchdb0:5984 172.19.0.18 undefined POST /innochannel_/_all_docs?include_docs=true 200 ok 11
[notice] 2018-09-25T18:06:06.756062Z nonode@nohost <0.408.0> 6056d80f3e prod.couchdb0:5984 172.19.0.18 undefined POST /innochannel_/_bulk_docs 201 ok 24
[notice] 2018-09-25T18:06:06.762868Z nonode@nohost <0.408.0> 400e31e2d1 prod.couchdb0:5984 172.19.0.18 undefined POST /innochannel_/_ensure_full_commit 201 ok 0
[notice] 2018-09-25T18:06:06.768360Z nonode@nohost <0.408.0> cfee83e5b5 prod.couchdb0:5984 172.19.0.18 undefined GET /innochannel_/statedb_savepoint?attachments=true 404 ok 2
[notice] 2018-09-25T18:06:06.780689Z nonode@nohost <0.408.0> a1b02dc611 prod.couchdb0:5984 172.19.0.18 undefined PUT /innochannel_/statedb_savepoint 201 ok 2
[notice] 2018-09-25T18:06:06.803853Z nonode@nohost <0.408.0> 9edfa0853e prod.couchdb0:5984 172.19.0.18 undefined GET /innochannel_/resourcesconfigtx.CHANNEL_CONFIG_KEY?attachments=true 200 ok 18
[notice] 2018-09-25T18:06:06.893056Z nonode@nohost <0.1497.0> 7db3f676ba prod.couchdb0:5984 172.19.0.18 undefined GET /innochannel_/_index/ 200 ok 124
[notice] 2018-09-25T18:06:48.139490Z nonode@nohost <0.1497.0> 4da3570f28 prod.couchdb0:5984 172.19.0.18 undefined POST /innochannel_/_all_docs?include_docs=true 200 ok 3
[notice] 2018-09-25T18:06:48.165927Z nonode@nohost <0.1497.0> a72ed4fa85 prod.couchdb0:5984 172.19.0.18 undefined POST /innochannel_/_bulk_docs 201 ok 5
[notice] 2018-09-25T18:06:48.207188Z nonode@nohost <0.408.0> 73d435932b prod.couchdb0:5984 172.19.0.18 undefined GET /innochannel_/_index/ 200 ok 1
[notice] 2018-09-25T18:06:48.222438Z nonode@nohost <0.1497.0> 1f62357270 prod.couchdb0:5984 172.19.0.18 undefined POST /innochannel_/_ensure_full_commit 201 ok 35
[notice] 2018-09-25T18:06:48.232136Z nonode@nohost <0.1497.0> f11bc6bcbc prod.couchdb0:5984 172.19.0.18 undefined GET /innochannel_/statedb_savepoint?attachments=true 200 ok 8
[notice] 2018-09-25T18:06:48.253684Z nonode@nohost <0.1497.0> 49ddf1aa8f prod.couchdb0:5984 172.19.0.18 undefined PUT /innochannel_/statedb_savepoint 201 ok 19
[notice] 2018-09-25T18:06:58.500154Z nonode@nohost <0.1497.0> 2b3ee9a234 prod.couchdb0:5984 172.19.0.18 undefined POST /innochannel_/_all_docs?include_docs=true 200 ok 2
[notice] 2018-09-25T18:06:58.510611Z nonode@nohost <0.1497.0> 95e5445017 prod.couchdb0:5984 172.19.0.18 undefined POST /innochannel_/_bulk_docs 201 ok 3
[notice] 2018-09-25T18:06:58.513963Z nonode@nohost <0.1497.0> 6495673a8b prod.couchdb0:5984 172.19.0.18 undefined POST /innochannel_/_ensure_full_commit 201 ok 0
[notice] 2018-09-25T18:06:58.517361Z nonode@nohost <0.1497.0> 5a1d2cf955 prod.couchdb0:5984 172.19.0.18 undefined GET /innochannel_/_index/ 200 ok 1
[notice] 2018-09-25T18:06:58.519305Z nonode@nohost <0.408.0> ebbe7dcb7f prod.couchdb0:5984 172.19.0.18 undefined GET /innochannel_/statedb_savepoint?attachments=true 200 ok 2
[notice] 2018-09-25T18:06:58.521894Z nonode@nohost <0.408.0> 38f093125c prod.couchdb0:5984 172.19.0.18 undefined PUT /innochannel_/statedb_savepoint 201 ok 1
[notice] 2018-09-25T18:07:41.238723Z nonode@nohost <0.408.0> 10fa822614 prod.couchdb0:5984 172.19.0.18 undefined GET /innochannel_lscc 404 ok 1
[notice] 2018-09-25T18:07:41.304338Z nonode@nohost <0.408.0> c3b163c2c4 prod.couchdb0:5... {code}
 ;;;",,,,,,,,,,,,,,,,,,,,,,,
Result to shim.success is not buffer meaning shim returns unreadable message,FABCN-202,34573,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,awjh-ibm,awjh-ibm,awjh-ibm,11/Oct/18 12:43 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,16/Oct/18 12:19 AM,,0,,,,,,,The result returned to shim.success is not checked to be a buffer or converted to a buffer and therefore the result returned by the peer is not in the expected format when received from a query or invoke.,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzukn:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation for fabric-shim Iterator classes is missing,FABCN-203,22937,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,30/Oct/17 11:23 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,01/Nov/17 12:58 AM,,0,fabric-chaincode-node,quality,,,,,"[Documentation|https://fabric-shim.github.io/] for the following classes is missing 
[HistoryQueryIterator|https://fabric-shim.github.io/HistoryQueryIterator.html]
[StateQueryIterator|https://fabric-shim.github.io/StateQueryIterator.html]",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzylov:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Oct/17 7:25 AM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/14969/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
node.js chaincode documentaion link is missing in README,FABCN-204,22824,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,25/Oct/17 2:28 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,25/Oct/17 11:45 PM,,0,fabric-chaincode-node,quality,,,,,"Now that documentation for all the apis are published and available for consumption.

Using this  JIRA Update the README file.",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzykpb:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Oct/17 11:45 PM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/14817/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node.js chaincode broken with Fabric v1.1.1,FABCN-205,30030,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,harrisob@us.ibm.com,sstone1,sstone1,08/May/18 6:49 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,11/May/18 4:30 PM,,0,,,,,,,"Node.js chaincode does not work with Fabric v1.1.1.

The fabric-shim module fails to load with the following error:
  
{code:java}
/private/tmp/node_modules/grpc/index.js:146
  return loadObject(builder.ns, options);
                            ^
 
TypeError: Cannot read property 'ns' of null
    at Object.load (/private/tmp/node_modules/grpc/index.js:146:29)
    at Object.<anonymous> (/private/tmp/node_modules/fabric-shim/lib/iterators.js:6:32)
    at Module._compile (module.js:652:30)
    at Object.Module._extensions..js (module.js:663:10)
    at Module.load (module.js:565:32)
    at tryModuleLoad (module.js:505:12)
    at Function.Module._load (module.js:497:3)
    at Module.require (module.js:596:17)
    at Function.Module._preloadModules (module.js:753:12)
    at preloadModules (bootstrap_node.js:472:38)
{code}
 
The problem is caused by the published fabric-shim module not having the file kv_query_result.proto, which should be at this path:
fabric-shim/lib/protos/ledger/queryresult/kv_query_result.proto

Passing to [~harrisob@us.ibm.com] initially, but FYI [~davidkel].",,harrisob@us.ibm.com,holocron,Sneljo,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzz96n:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,holocron,Sneljo,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/May/18 11:58 PM;harrisob@us.ibm.com;I am confused on the versions that are not working together ? Could I get some more detail ?
What is the npm verison of fabric-shim ?

What is Fabric 1.1.1 ? , are you building your own dockers, are you pulling from DockerHub ?

What is the npm version of fabric-client ?;;;","09/May/18 12:01 AM;Sneljo;fabric-chaincode-node v1.1.1, I've also just noticed this. There are some protobufs missing compared to version 1.1.0-alpha. ;;;","09/May/18 12:04 AM;Sneljo;I've noticed these protos are copied upon running the build script. Maybe this has not been run during the publish to npm?;;;","09/May/18 12:15 AM;sstone1;[~harrisob@us.ibm.com] as per Jonas, fabric-shim@1.1.1 was published yesterday:

$ npm view fabric-shim@1.1.1

...

'1.1.1': '2018-05-08T03:44:10.694Z';;;","09/May/18 1:40 AM;harrisob@us.ibm.com;Looks like a build issue... recent change to the publish step. Turns out the fabric-shim is a little different than the fabric-client. 

I will have to rebuild with 1.1.2;;;",,,,,,,,,,,,,,,,,,,,,,,,
Deprecated warnings on upgrade and maintenance on packages,FABCN-206,35260,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,nkl199,vijaypunugubati,vijaypunugubati,10/Nov/18 1:23 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,30/Nov/18 7:31 PM,,0,ci-failure,,,,,,"Bunch of deprecated warnings is found on chaincode-node to upgrade and maintenance for the packages.
{code:java}
/06:47:29 npm WARN deprecated text-encoding@0.6.4: no longer maintained
06:47:29 npm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue
06:47:30 npm WARN deprecated circular-json@0.3.3: CircularJSON is in maintenance only, flatted is its successor./
{code}
*Build log:*

[https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-verify-x86_64/466/consoleFull]

 ",,harrisob@us.ibm.com,mbwhite,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-6,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzyc7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,mbwhite,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Nov/18 11:16 PM;vijaypunugubati;The deprecated warnings are coming from the x509 library that is being used, pulled in as a dependent library - as used to provide APIs for chaincode to get information about a users' certificate.

The java.security.Certificate API has been deprecated since 1.2 and has been superseded by java.security.cert.Certificate and related classes since 1.2. It is no longer necessary.

Please check this ASAP, as all our daily builds have deprecated warnings.
{code:java}
/22:45:39 In file included from /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:26:0,
22:45:39                  from /home/jenkins/.node-gyp/8.9.4/include/node/node.h:63,
22:45:39                  from ../include/addon.h:4,
22:45:39                  from ../src/addon.cc:4:
22:45:39 /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:3502:36: note: declared here
22:45:39                  MaybeLocal<Object> CloneElementAt(Local<Context> context,
22:45:39                                     ^
22:45:39 /home/jenkins/.node-gyp/8.9.4/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
22:45:39    declarator __attribute__((deprecated(message)))
22:45:39    ^
22:45:39 In file included from ../node_modules/nan/nan_new.h:189:0,
22:45:39                  from ../node_modules/nan/nan.h:200,
22:45:39                  from ../include/x509.h:7,
22:45:39                  from ../src/addon.cc:5:
22:45:39 ../node_modules/nan/nan_implementation_12_inl.h: In static member function ‘static Nan::imp::FactoryBase<v8::BooleanObject>::return_t Nan::imp::Factory<v8::BooleanObject>::New(bool)’:
22:45:39 ../node_modules/nan/nan_implementation_12_inl.h:40:38: warning: ‘static v8::Local<v8::Value> v8::BooleanObject::New(bool)’ is deprecated: Pass an isolate [-Wdeprecated-declarations]
22:45:39    return v8::BooleanObject::New(value).As<v8::BooleanObject>();
22:45:39                                       ^
22:45:39 In file included from /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:26:0,
22:45:39                  from /home/jenkins/.node-gyp/8.9.4/include/node/node.h:63,
22:45:39                  from ../include/addon.h:4,
22:45:39                  from ../src/addon.cc:4:
22:45:39 /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:4793:56: note: declared here
22:45:39    V8_DEPRECATED(""Pass an isolate"", static Local<Value> New(bool value));
22:45:39                                                         ^
22:45:39 /home/jenkins/.node-gyp/8.9.4/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
22:45:39    declarator __attribute__((deprecated(message)))
22:45:39    ^
22:45:39 In file included from ../include/x509.h:7:0,
22:45:39                  from ../src/addon.cc:5:
22:45:39 ../node_modules/nan/nan.h: In function ‘bool Nan::SetAccessor(v8::Local<v8::Object>, v8::Local<v8::String>, Nan::GetterCallback, Nan::SetterCallback, v8::Local<v8::Value>, v8::AccessControl, v8::PropertyAttribute)’:
22:45:39 ../node_modules/nan/nan.h:1969:16: warning: ‘bool v8::Object::SetAccessor(v8::Local<v8::Name>, v8::AccessorNameGetterCallback, v8::AccessorNameSetterCallback, v8::Local<v8::Value>, v8::AccessControl, v8::PropertyAttribute)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
22:45:39      , attribute);
22:45:39                 ^
22:45:39 In file included from /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:26:0,
22:45:39                  from /home/jenkins/.node-gyp/8.9.4/include/node/node.h:63,
22:45:39                  from ../include/addon.h:4,
22:45:39                  from ../src/addon.cc:4:
22:45:39 /home/jenkins/.node-gyp/8.9.4/include/node/v8.h:3172:22: note: declared here
22:45:39                  bool SetAccessor(Local<Name> name,/ code placeholder
{code}
Build log: 

https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-verify-x86_64/88/consoleFull;;;","30/Nov/18 7:27 PM;mbwhite;This issue is dependent on either removing the x509 library and replacing it with another one (that is v2.0 issue due to breaking external changes on format of x509 certificate), or the x509 library being updated. 

That is a library we don't have control over.
[https://github.com/Southern/node-x509]


FYI 

The java.security.Certificate API has been deprecated since 1.2 and has been superseded by java.security.cert.Certificate and related classes since 1.2. It is no longer necessary. 

isn't relevent for Javascript;;;","30/Nov/18 7:31 PM;mbwhite;We can't resolve this without either an update to x509 library, (that does not appear to be forthcoming from the moderators of the repo).  Or removing it entirely.

Won't happen for 1.4 sadly.  

'Fixed-in-next-release' therefore;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-chaincode-node-merge jobs are failing consistently in x and z platforms due to NPM error.,FABCN-207,35134,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,harrisob@us.ibm.com,sambhavdutt,sambhavdutt,07/Nov/18 12:09 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,07/Nov/18 11:13 PM,,0,ci-failure,,,,,,"Noticed the errors below in the chaincode-node merge jobs,
{code:java}
09:19:47 npm ERR! code ENOENT
09:19:47 npm ERR! errno -2
09:19:47 npm ERR! syscall stat
09:19:47 npm ERR! enoent ENOENT: no such file or directory, stat '/chaincode/output/fabric-shim-1.4.0-beta.tgz'
09:19:47 npm ERR! enoent This is related to npm not being able to find a file.
09:19:47 npm ERR! enoent 
09:19:47 
09:19:47 npm ERR! A complete log of this run can be found in:
09:19:47 npm ERR!     /root/.npm/_logs/2018-11-06T14_19_46_611Z-debug.log
09:19:47 ""
09:19:47 [14:19:47] 'st-instantiate_chaincode' errored after 2.49 s
09:19:47 [14:19:47] Error in plugin ""gulp-shell""
09:19:47 Message:
09:19:47     Command `docker exec cli peer chaincode instantiate -o orderer.example.com:7050  -l node -C mychannel -n mysmartcontract -v v0 -c '{""Args"":[""org.mynamespace.updates:setup""]}' -P 'OR (""Org1MSP.member"")'` failed with exit code 1
09:19:47 [14:19:47] 'test-e2e' errored after 2.98 min
09:19:47 [14:19:47] Error in plugin ""run-sequence(st-instantiate_chaincode)""
09:19:47 Error
09:19:47     at finish (/w/workspace/fabric-chaincode-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/run-sequence/index.js:82:12)
09:19:47     at Gulp.onError (/w/workspace/fabric-chaincode-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/run-sequence/index.js:93:3)

09:19:47     at ChildProcess.child.on (/w/workspace/fabric-chaincode-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/gulp-shell/index.js:72:7)
09:19:47 [14:19:47] 'invokeAllFns' errored after 6.04 s
09:19:47 [14:19:47] Error in plugin ""run-sequence(test-e2e)""
09:19:47 Error
09:19:47     at finish (/w/workspace/fabric-chaincode-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/run-sequence/index.js:82:12)
09:19:47     at Gulp.onError (/w/workspace/fabric-chaincode-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/run-sequence/index.js:93:3)
09:19:47     at emitOne (events.js:121:20)
09:19:47     at Gulp.emit (events.js:211:7)
09:19:47     at Gulp.Orchestrator._emitTaskDone (/w/workspace/fabric-chaincode-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/orchestrator/index.js:264:8)
{code}
*Build Log*

[https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-merge-x86_64/169/consoleFull]

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-chaincode-node-merge-x86_64/169/",,davidkel,harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,27917ba08762f8ef7f921ce5b0b151e777502c43,Unset,No,,,"1|hzzxon:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/18 1:28 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/27395/;;;","07/Nov/18 11:15 PM;sambhavdutt;I see that the recent chaincode-node jobs passing without NPM error, 
[~harrisob@us.ibm.com] Thanks for the fix;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
[Chaincode-node] The docs for testing chaincode have some errors,FABCN-208,36305,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,yuki-kon,yuki-kon,yuki-kon,20/Dec/18 10:38 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,08/Jan/19 11:02 AM,,0,,,,,,,"The docs for testing chaincode have some errors. We need to update the following docs:
- fabric-chaincode-node/README.md
- fabric-chaincode-node/docs/tutorials/using-chaincodeinterface.md

1. Peer command location
The path of peer command is wrong. “./build/bin/peer” should be “.build/bin/peer”

2. Environment variable and options for peer command
Environment variable “FABRIC_CFG_PATH” is required to run peer command.
Endorsement policy and channel name are not correct.

3. Test steps when using docker
The doc misses 2 steps:
- `npm install` is required before running the command `gulp channel-init` to install related packages.
- `make peer` is required to use peer command.

4. Typo in the sample of package.json
The version of ""fabric-shim"" is wrong. ""unastable"" should be “unstable”.
",,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,commit c6ece0cdf0ec39afbbf0a4309445403c56b941ce,Unset,No,,,"1|i003yv:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yuki-kon,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Dec/18 9:47 AM;yuki-kon;CR is posted here. https://gerrit.hyperledger.org/r/#/c/28339/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release notes should be linked off of the fabric-shim.github.io site,FABCN-209,39255,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,,davidkel,davidkel,12/Apr/19 1:50 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,22/May/19 12:19 AM,,0,,,,,,,"Although release notes exist, the only way people can find them is to know where in the source code they are. Users of the node chaincode are not likely to try to inspect the source code to find published documentation and they should be easier to find than they currently are. Ideally would be good if these were included in the main fabric release notes well.

This is especially important if breaking changes are to be done in fix releases where users may be using a package reference of ""^1.4.0"" and inadvertently get broken due to the breaking changes.",,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00kp3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Apr/19 12:49 AM;mbwhite;https://gerrit.hyperledger.org/r/31100 [FAB-15150] Add in link to release notes;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
node.js chaincode instantiation fails ,FABCN-210,22704,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,,Ratnakar,Ratnakar,20/Oct/17 3:48 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Oct/17 3:52 AM,,0,fabric-chaincode-node,quality,,,,,"Unable to instantiate chaincode on fabric-chaincode-node branch.

commit level: *1e179cc5ffe07e49db6659f992138a8cb018c72c*

 

Fabric commit Level: *f754f40d3165571cecf5fce43c8a034559983311* 

Steps to reproduce the issue:
 * Clone fabric-chaincode-node repo.
 * Install dependent node modules and update the protos with the following commands
{code:java}
npm install && gulp protos
{code}

 * Run the e2e Integration test.
{code:java}
DEVMODE=false gulp channel-init
gulp test-e2e
{code}

After the above step, it fails with the following error while instantiating the chaincode.
{code:java}
Error: Error endorsing chaincode: rpc error: code = Unknown desc = transaction returned with failure: [a45b5515]Calling chaincode Init() returned error response [TypeError: _serviceProto.PutStateInfo is not a constructor]. Sending ERROR message back to peer 
{code}
 

 ",,denyeart,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-270,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzykb3:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Oct/17 3:56 AM;Ratnakar;There is an issue https://jira.hyperledger.org/browse/FAB-6689 already created by [~latitiah], where query on node chaincode is failing due to the similar root cause.

Changes need to be incorporated in  fabric-chaincode-node , as per the new protobuf changes made in fabric master.

 

 ;;;","21/Oct/17 3:52 AM;denyeart;Let's track the problem in FAB-6689.  I've added comments over there. I think we can therefore close this one.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-chaincode-node verify and merge jobs: failed to run Headless Tests,FABCN-211,41953,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,,vijaypunugubati,vijaypunugubati,22/Aug/19 3:48 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,10/Sep/19 2:15 AM,,0,ci-blocker,,,,,,"Fabric-chaincode-node verify and merge jobs failed to run protos in Headless Tests as it is looking for the dir token in PATH 
 gopath/src/github.com/hyperledger/fabric/protos/token/operations.proto
 and the token was removed from fabric in this CR [https://gerrit.hyperledger.org/r/c/fabric/+/32979]

*Branch:* Master

*Platform:* x86_64

*Error Snippet:* 
{code:java}
/ Starting 'protos'...
00:06:28.315  [15:27:31] 'protos' errored after 11 ms
00:06:28.315  [15:27:31] Error: File not found with singular glob: /w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric/protos/token/operations.proto (if this was purposeful, use `allowEmpty` option)
00:06:28.315      at Glob.<anonymous> (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob-stream/readable.js:84:17)
00:06:28.315      at Object.onceWrapper (events.js:277:13)
00:06:28.315      at Glob.emit (events.js:189:13)
00:06:28.315      at Glob.EventEmitter.emit (domain.js:441:20)
00:06:28.315      at Glob._finish (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob/glob.js:197:8)
00:06:28.315      at done (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob/glob.js:182:14)
00:06:28.315      at Glob._processSimple2 (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob/glob.js:688:12)
00:06:28.315      at /w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob/glob.js:676:10
00:06:28.315      at Glob._stat2 (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob/glob.js:772:12)
00:06:28.315      at lstatcb_ (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob/glob.js:764:12)
00:06:28.315      at RES (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/inflight/inflight.js:31:16)
00:06:28.315      at f (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/once/once.js:25:25)
00:06:28.315      at FSReqWrap.oncomplete (fs.js:154:21)
00:06:28.315  [15:27:31] 'test-headless' errored after 19 s
00:06:28.315  [31m ERROR!!! test-headless failed [0m/ code placeholder
{code}
*Build Logs:* [https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-verify-x86_64/lastFailedBuild/]",,btl5037,denyeart,harrisob@us.ibm.com,jtonline,mbwhite,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00xub:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,denyeart,harrisob@us.ibm.com,jtonline,mbwhite,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Aug/19 9:58 PM;harrisob@us.ibm.com;this should fix this 
https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33265;;;","31/Aug/19 2:23 AM;vijaypunugubati;{code:java}
/Error: File not found with singular glob: /w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric/protos/common/common.proto (if this was purposeful, use `allowEmpty` option)
00:06:06.381      at Glob.<anonymous> (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob-stream/readable.js:84:17)
00:06:06.381      at Object.onceWrapper (events.js:277:13)
00:06:06.381      at Glob.emit (events.js:189:13)
00:06:06.381      at Glob.EventEmitter.emit (domain.js:441:20)
00:06:06.381      at Glob._finish (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob/glob.js:197:8)
00:06:06.381      at done (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob/glob.js:182:14)
00:06:06.381      at Glob._processSimple2 (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob/glob.js:688:12)
00:06:06.381      at /w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob/glob.js:676:10
00:06:06.381      at Glob._stat2 (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob/glob.js:772:12)
00:06:06.381      at lstatcb_ (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/glob/glob.js:764:12)
00:06:06.381      at RES (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/inflight/inflight.js:31:16)
00:06:06.381      at f (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/once/once.js:25:25)
00:06:06.381      at FSReqWrap.oncomplete (fs.js:154:21)
00:06:06.381  [15:39:34] 'test-headless' errored after 19 s/ code placeholder
{code}
Protos was moved from *fabric repo* to a *new repo called ""fabric-protos*"" recently.

[https://github.com/hyperledger/fabric-protos]

In Headless & e2e tests are looking ""protos"" from fabric and builds got failed and change required in multiple places of cc-node code base.

ref: https://github.com/hyperledger/fabric-chaincode-node/blob/ef4c7aaca278aa855ef339a16de89f462692c2a7/build/protos.js#L19;;;","10/Sep/19 2:15 AM;denyeart;[~vijaypunugubati] I believe problem is resolved, please re-open if something else is required.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Info annotation generates invalid metadata,FABCN-212,38601,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,davidkel,davidkel,20/Mar/19 10:30 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,03/Apr/19 5:57 PM,,0,,,,,,,"I used the annotations to generate the metadata which was considered valid through this mechanism, however if I take the JSON representation of that metadata that was considered valid and put it into metadata.json for loading then the validator rejects the metadata with the following error

{noformat}
fabric-chaincode-node start --peer.address localhost:7051 --chaincode-id-name mycc

Options:
  --help                                  Show help  [boolean]
  -v, --version                           Show version number  [boolean]
  --peer.address  [string] [required]
  --grpc.max_send_message_length  [number] [default: -1]
  --grpc.max_receive_message_length  [number] [default: -1]
  --grpc.keepalive_time_ms  [number] [default: 110000]
  --grpc.http2.min_time_between_pings_ms  [number] [default: 110000]
  --grpc.keepalive_timeout_ms  [number] [default: 20000]
  --grpc.http2.max_pings_without_data  [number] [default: 0]
  --grpc.keepalive_permit_without_calls  [number] [default: 1]
  --ssl-target-name-override  [string]
  --chaincode-id-name  [string] [required]
  --module-path  [string] [default: ""/home/dave/code/bnaport/trade-network/native/fabric-new-ts/contract""]

Error: Contract metadata does not match the schema: [{""keyword"":""required"",""dataPath"":"".contracts['MyContract'].info"",""schemaPath"":""#/required"",""params"":{""missingProperty"":""title""},""message"":""should have required property 'title'""}]
    at Function.loadAndValidateMetadata (/home/dave/code/bnaport/trade-network/native/fabric-new-ts/contract/node_modules/fabric-shim/lib/contract-spi/bootstrap.js:128:19)
    at <anonymous>
{noformat}

Also it seems a bit weird for the output of the cli help is output in this case as well. 

I suspect the issue is here
{code}
        if (!info.name) {
            info.name = target.name;
        }
{code}
where it should be info.title

 ",,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00gw7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/19 1:12 AM;mbwhite;There are a number of niggles with the cli command.

 

https://gerrit.hyperledger.org/r/30460 [FAB-14726] CLI fixes

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSON Serialization of maps failing,FABCN-213,38432,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,awjh-ibm,awjh-ibm,awjh-ibm,14/Mar/19 12:25 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Mar/19 7:14 PM,,0,,,,,,,The JSON serialization of maps means that when maps are returned an empty object is given in response and when a function expects a map an object is instead given,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00fxj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node.js chaincode instantiate problems timeout after 5 minutes rather than returning an error message,FABCN-214,36074,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,sykesm,denyeart,denyeart,12/Dec/18 2:24 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,27/Feb/19 8:02 AM,,1,ipm,ipm-planned,,,,,"See reproduction steps.

Chaincode instantiate of javascript chaincode fails with error:
{code:java}
Error: could not assemble transaction, err proposal response was not successful, error code 500, msg timeout expired while starting chaincode fabcar:1.0 for transaction
{code}
The root cause is a prior golang image existing, but nothing in the error indicates this.

If we enable debug we can get some more information, but still no indication of root cause:
{code:java}
2018-12-11 17:17:12.593 UTC [chaincode] Launch -> DEBU 808 stopping due to error while launching: timeout expired while starting chaincode fabcar:1.0 for transaction
github.com/hyperledger/fabric/core/chaincode.(*RuntimeLauncher).Launch
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/runtime_launcher.go:71
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).LaunchInit
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:129
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).ExecuteLegacyInit
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:221
github.com/hyperledger/fabric/core/endorser.(*SupportImpl).ExecuteLegacyInit
	/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/support.go:131
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
	/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:179
github.com/hyperledger/fabric/core/endorser.(*Endorser).SimulateProposal
	/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:237
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
...
2018-12-11 17:17:12.593 UTC [container] lockContainer -> DEBU 809 waiting for container(fabcar-1.0) lock
2018-12-11 17:17:12.593 UTC [container] lockContainer -> DEBU 80a got container (fabcar-1.0) lock
2018-12-11 17:17:12.594 UTC [dockercontroller] stopInternal -> DEBU 80b stopping container {""id"": ""dev-peer0.org1.example.com-fabcar-1.0""}
2018-12-11 17:17:12.596 UTC [dockercontroller] stopInternal -> DEBU 80c stop container result {""error"": ""Container not running: dev-peer0.org1.example.com-fabcar-1.0""}
2018-12-11 17:17:12.596 UTC [dockercontroller] stopInternal -> DEBU 80d killing container {""id"": ""dev-peer0.org1.example.com-fabcar-1.0""}
2018-12-11 17:17:12.597 UTC [dockercontroller] stopInternal -> DEBU 80e kill container result {""id"": ""dev-peer0.org1.example.com-fabcar-1.0"", ""error"": ""Container not running: dev-peer0.org1.example.com-fabcar-1.0""}
2018-12-11 17:17:12.597 UTC [dockercontroller] stopInternal -> DEBU 80f removing container {""id"": ""dev-peer0.org1.example.com-fabcar-1.0""}
2018-12-11 17:17:12.606 UTC [dockercontroller] stopInternal -> DEBU 810 remove container result {""id"": ""dev-peer0.org1.example.com-fabcar-1.0"", ""error"": null}
2018-12-11 17:17:12.606 UTC [container] unlockContainer -> DEBU 811 container lock deleted(fabcar-1.0)
2018-12-11 17:17:12.606 UTC [chaincode] Launch -> DEBU 812 launch complete
2018-12-11 17:17:12.606 UTC [chaincode] Deregister -> DEBU 813 deregister handler: fabcar:1.0
2018-12-11 17:17:12.606 UTC [endorser] callChaincode -> INFO 814 [mychannel][de30817f] Exit chaincode: name:""lscc""  (300018ms)
2018-12-11 17:17:12.606 UTC [endorser] SimulateProposal -> ERRO 815 [mychannel][de30817f] failed to invoke chaincode name:""lscc"" , error: timeout expired while starting chaincode fabcar:1.0 for transaction
github.com/hyperledger/fabric/core/chaincode.(*RuntimeLauncher).Launch
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/runtime_launcher.go:71
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).LaunchInit
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:129
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).ExecuteLegacyInit
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:221
github.com/hyperledger/fabric/core/endorser.(*SupportImpl).ExecuteLegacyInit
	/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/support.go:131
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
	/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:179
github.com/hyperledger/fabric/core/endorser.(*Endorser).SimulateProposal
	/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:237
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
...
{code}
Opening as High since a failure with no information is a blocker to users and support personnel. An actionable error message is required. Not to mention the 5 minute timeout between user action and response adds to the confusion and frustration about what is going on. My objective here is to *fix the general error handling approach for node.js chaincode instantiation failures*, not necessarily this specific failure scenario.

Note that if we run node.js chaincode first, and then go chaincode second, we get an immediate error:
{code:java}
Error: could not assemble transaction, err proposal response was not successful, error code 500, msg error starting container: error starting container: API error (400): OCI runtime create failed: container_linux.go:348: starting container process caused ""exec: \""chaincode\"": executable file not found in $PATH"": unknown{code}
This error is not great, but better than the timeout error with node.js chaincode. I therefore recommend we focus on the node.js chaincode scenario first.",,denyeart,GingerMoon,mbwhite,skarim,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzq91:w",,,,Unset,Unset,,,,,,,,,,,,,,"from fabric-samples/fabcar directory:
$ ./startFabric.sh

Fabcar scenarios works.

Try again with:
$ .startFabric.sh javascript

This time Fabcar fails with error: 
""Error: could not assemble transaction, err proposal response was not successful, error code 500, msg timeout expired while starting chaincode fabcar:1.0 for transaction""",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,GingerMoon,mbwhite,skarim,sykesm,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/18 2:36 AM;denyeart;[~sykesm] [~mbwhite] [~sstone1] Any ideas on whether this could be improved easily?;;;","12/Dec/18 3:08 AM;sykesm;Regarding fix/version - edited the wrong JIRA.;;;","12/Dec/18 11:10 PM;mbwhite;To confirm the scenario is that if there is a chaincode already instantiate with the same chaincode id - but with a different language the error message is poor ( quite bad )

How is the chaincode installed - if I recall then if I try and do a second `peer chaincode install` then an error occurs if I use the same name?

 ;;;","13/Dec/18 1:30 AM;denyeart;I did some trials with other error scenarios and they behaved better with good error messages, so I will lower to Medium and defer to v2.0.0.;;;","13/Dec/18 2:08 AM;sykesm;Everything about chaincode install, instantiate, and execution needs to be redesigned. This is one of the things that I hope to get some focus on over the next 6 months.

Given what's been described, since we have an existing image on this peer that matches the chaincode name and version, the build and deploy are skipped and we go right to starting the container. Since the container start arguments are different between node and go, I'm going to assume (there are no logs) that the start command failed. (If the peer were configured to attach to the container after start we'd likely see some logs.)

The existing code, after start, doesn't do anything to monitor the container; it simply waits for the chaincode to register with the peer. My guess is that with the start command failing, and nothing waiting for the container to exit, the registration never occurs and the launch timeout hits.

If code were present to wait on the container, it would likely have detected the start command failure earlier and resulted in an error.;;;","23/Jan/19 7:02 PM;mbwhite;[~sykesm] [~denyeart]

To resolve this issue then.. version 2.0.0 lifecycle changes will resolve this issue. 

Is there any resolution required within the v1.4.0 timeframe? Or is it sufficient in your view to marked this as 'fixed-next-release'?;;;","28/Jan/19 1:20 PM;denyeart;[~mbwhite] I think it is sufficient to fix in a next release.;;;","05/Feb/19 1:39 AM;sykesm;For the person that picks this up, the when a chaincode container fails to start, we want to release waiters with information that clearly indicates the chaincode failed to start.

We do not want to propagate all of the error information (e.g. the client shouldn't see something like ""command not found"" in the eorror) but we do want to log it clearly in the peer.;;;","13/Feb/19 7:00 PM;mbwhite;[~skarim] happy to review if you wish;;;","14/Feb/19 10:21 AM;skarim;[~sykesm] As we had discussed, due to other priorities I had to shift focus from there. I am setting this as unassigned, as I won't be able to get to it in the next few days. From our earlier discussions, I have created the exit channel that is written to when the container stops. I was trying to pass this channel back up to runtime launcher and detect there if the container failed to start. Please see WIP commit: https://gerrit.hyperledger.org/r/c/29296/;;;","20/Feb/19 1:20 PM;sykesm;remote: New Changes:
remote:   https://gerrit.hyperledger.org/r/29395 [FAB-13238] regen core/{chaincode,container} mocks
remote:   https://gerrit.hyperledger.org/r/29396 [FAB-14257] mutex around inproccontroller maps
remote:   https://gerrit.hyperledger.org/r/29397 [FAB-13238] handle container exit during launch;;;",,,,,,,,,,,,,,,,,,
Executing the two invoke chaincodes through script without any sleep between then it is showing abnormal behaviour.  ,FABCN-215,30005,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,piyushkumar96,piyushkumar96,07/May/18 10:49 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,16/Oct/19 12:18 AM,,0,,,,,,,"When I am executing two invoke chaincode(node) command in continuations through the scripts then 2nd  invoke chaincode command is executing first and after this 1st  invoke chaincode command is executing. Means there is asynchronous in invoke chaincode (node) commands. 

Before these invoke transactions data in ledger  

_▒_ 

_10__▒\{__""countryId"":""10__"",""countryName"":""k__io"",""regSince"":""7/4/2018"",""channelName1"":""channelwhok__io"",""channelName2"":""channelk__io"",_*_""status"":""started""_*_,""peer0port"":"""",""peer1port"":"""",""reqport"":""""▒""_ 

 

Like 1st invoke transaction do some changes in ledger *(* *I.e* ** *_""_**_status"":""_**_active_**_""_* *)* but before commitment of this transaction 2nd invoke transaction reads the old value *(* *I.e* ** *_""_**_status"":""started_**_""_* *)* from ledger. Then the orderer orders these transactions send them to committers. Then the following things should happens:- 
 # 1st Transaction is validated. 
 # 1st Transaction is committed then in ledger value of ""status"" is changed to ""active"". 

_▒_ 

_10__▒\{__""countryId"":""__10__"",""countryName"":""__k__io"",""regSince"":""7/4/2018"",""channelName1"":""channelwho__k__io"",""channelName2"":""channel__k__io"",_*_""status"":""_**_active_**_""_*_,""peer0port"":"""",""peer1port"":"""",""reqport"":""""▒""_ 

 

3. 2nd  Trasaction's  validation should be failed because it's RW set is not matched with ledger data  *(* ** *I.e* ** *_""_**_status"":""started_**_""_* *)* ** , but in ledger  *(* *I.e* ** *_""_**_status"":""_**_active_**_""_* *)* *.* As version of ""status"" in RW set and ledger are not matched. So it should through errors but showing abnormal behaviour. **  

  !image-2018-05-07-18-54-43-256.png!

*Data inside in ledger after commands.* 

!image-2018-05-07-18-57-38-784.png!!image-2018-05-07-18-58-38-000.png!

But When I am providing a ** *sleep of* *atleast* *2 s**econd**s* between these two invoke chaincode commands in script, then no issues of synchronous.  

 

*_Commands_*  

!image-2018-05-07-18-59-22-303.png!

!image-2018-05-07-19-12-20-806.png!!image-2018-05-07-19-13-00-276.png!

If I am executing the two invoke chaincodes through script without any sleep between then it is showing abnormal behaviour.  

 ",,heatherp,mastersingh24,piyushkumar96,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/May/18 10:24 PM;piyushkumar96;image-2018-05-07-18-54-43-256.png;https://jira.hyperledger.org/secure/attachment/14948/image-2018-05-07-18-54-43-256.png","07/May/18 10:26 PM;piyushkumar96;image-2018-05-07-18-56-51-686.png;https://jira.hyperledger.org/secure/attachment/14947/image-2018-05-07-18-56-51-686.png","07/May/18 10:27 PM;piyushkumar96;image-2018-05-07-18-57-38-784.png;https://jira.hyperledger.org/secure/attachment/14946/image-2018-05-07-18-57-38-784.png","07/May/18 10:28 PM;piyushkumar96;image-2018-05-07-18-58-16-063.png;https://jira.hyperledger.org/secure/attachment/14945/image-2018-05-07-18-58-16-063.png","07/May/18 10:28 PM;piyushkumar96;image-2018-05-07-18-58-38-000.png;https://jira.hyperledger.org/secure/attachment/14944/image-2018-05-07-18-58-38-000.png","07/May/18 10:29 PM;piyushkumar96;image-2018-05-07-18-59-22-303.png;https://jira.hyperledger.org/secure/attachment/14943/image-2018-05-07-18-59-22-303.png","07/May/18 10:42 PM;piyushkumar96;image-2018-05-07-19-12-20-806.png;https://jira.hyperledger.org/secure/attachment/14942/image-2018-05-07-19-12-20-806.png","07/May/18 10:42 PM;piyushkumar96;image-2018-05-07-19-13-00-276.png;https://jira.hyperledger.org/secure/attachment/14941/image-2018-05-07-19-13-00-276.png",,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzz90n:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,heatherp,mastersingh24,piyushkumar96,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/May/18 6:34 PM;mastersingh24;[~piyushkumar96] - can you post the contents of your chaincode?  ;;;","08/May/18 8:20 PM;piyushkumar96; 

First Function  *updateStatus*

async updateStatus(stub , args, thisClass) \{
 if (args.length != 2 ) \{
 throw new Error("" Incorrect no. of the arguments, Expecting 2 Arguments "")
 }

let countryid = args[0];
 let status = args[1];

let detail1bytes = await stub.getState(args[0]);
 if (!detail1bytes || !detail1bytes.toString()) \{
 throw new Error(""Country does not exist"");
 }

let countryDetail1 = JSON.parse(detail1bytes); //unmarshal
 countryDetail1.status = status;

await stub.putState(countryid, Buffer.from(JSON.stringify(countryDetail1)));

}

 

Second Function *updatePorts*

 

async updatePorts(stub , args, thisClass) \{
 if (args.length != 4 ) \{
 throw new Error("" Incorrect no. of the arguments, Expecting 4 Arguments "")
 }

let countryid = args[0];
 let port1 = args[1];
 let port2 = args[2];
 let port3 = args[3];

let detail3bytes = await stub.getState(args[0]);
 if (!detail3bytes || !detail3bytes.toString()) \{
 throw new Error(""Country does not exist"");
 }

let countryDetail3 = JSON.parse(detail3bytes); //unmarshal
 countryDetail3.peer0port = port1;
 countryDetail3.peer1port = port2;
 countryDetail3.reqport = port3;

await stub.putState(countryid, Buffer.from(JSON.stringify(countryDetail3))); 
 }

 

 

 

 ;;;","11/May/18 9:14 PM;piyushkumar96;[~mastersingh24] what happens ? Is this issue is resolved or Not.;;;","16/Jun/19 7:39 PM;mastersingh24;[~piyushkumar96]  - have you actually looked at the peer logs and/or the ledger?  The CLI does not actually wait to see if the transaction has been committed.  It actually obtains the endorsement and then sends to the orderer.  It doesn't actually wait for transaction to be committed.
 So what you are seeing is the output of the endorsement but not actually of the commit.   

My guess is that if you actually check the ledger and/or query the chaincode after running the two transactions without the sleep, you'll see that the first transaction was committed and the second was rejected due to a read conflict.

When you add the sleep, it's likely that the first transaction is actually committed prior to the second invoke and hence the second invoke ends up modifying the committed data from the first.

What you really need to do is to check the actual ledger state not the results of the invoke.

Not that in later version of Fabric (you should really be using 1.4.1 and later), you can add the ""–waitForEvent"" option to the invoke command and this will tell you whether or not the transaction actually commits or not.;;;","16/Oct/19 12:18 AM;heatherp;Please re-open if you are still seeing this, closing for now;;;",,,,,,,,,,,,,,,,,,,,,,,,
npm problem with v1.4.0 RC ,FABCN-216,36183,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Environment Issue,,aspring,aspring,15/Dec/18 7:38 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,01/Jul/19 11:41 PM,,0,,,,,,,"I have a Fabric 1.1.0 running on a ubuntu 18.04 virtual machine for quite some time now.  Node.js chaincode install, instantiate, invoke and query, all the four chaincode life cycle works fine with Fabric REST API server that came with the ""balance-transfer"" sample app.  But started late yesterday when I attempted to install and instantiate new Node.js chaincode, installed successfully but instantiate failed.  Error message: UNKNOWN.

After some digging, I noticed a new hyperledger/fabric-tools:latest docker image was download and installed 3 days ago ( I did not download and install it ), and looking at its timing, so, it seems the Fabric v1.4.0 RC release has caused it to happen.  And since its image id does not match that of my existing hyperledger/fabric-tools:x86_64-1.1.0 I suspect it may cause problem.

To isolate the problem, I then removed this new docker image, and yet, instantiating Node.js chaincode still failed.

Based on the above new problem with instantiate, also, the creation of a docker image for a new chaincode ( previously it's created after successful instantiation ), I conclude that the new npm architecture as described below is most likely the culprit.
 "" The existing npm packages are still available for use, while the new npm packages provide a layer of abstraction to improve developer productivity and ease of use. "",

* Additional Info  *
One thing, I forgot to mention is that, I accidentally or something else accidentally shut down the Fabric REST API server, so, I restarted it and then ran the node chaincode install and instantiate process.   Around mid or late Thursday ( the 13th ) afternoon, when the Fabric REST API server was still up and running, I was able to run some other Node.js chaincode install, instantiate, invoke and query, the whole process for a new project.
My bad, and I feel bad for missing this info  

Looking forward to the problem resolution.  My new project is unable to move forward due to this show stopper problem.",,aspring,denyeart,mastersingh24,mbwhite,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/18 7:37 AM;aspring;v1.4.0-npm-problem.txt;https://jira.hyperledger.org/secure/attachment/16435/v1.4.0-npm-problem.txt",,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i003a7:",,,,Unset,Unset,,,,,,,,,,,,,,"Under Fabric v1.1.0  ( preferably under Ubuntu 18.04 )
1) Shut down Fabric REST API server under ""balance-transfer"" sample app and restart it
2) Run new node.js chaincode install and instantiate via the Fabric REST API server",,Unset,,,,,,Unset,,Unset,,(Please add usage information),aspring,denyeart,mastersingh24,mbwhite,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/18 11:00 PM;mastersingh24;I'm still not sure where/how you used 1.4 here ... ;;;","15/Dec/18 11:39 PM;aspring;The Fabric v1.1.0 instantiate process via the Fabric REST API server involves the npm registry ( online interaction ), I wonder if the Fabric v1.4.0 RC has made some inadvertent change to the npm registry process that has affected fabric v1.1.0.;;;","16/Dec/18 12:14 PM;aspring;The new ""fabric-shim"" at URL, https://registry.npmjs.org/fabric-shim
seems the culprit.

Following is the detailed debugging and analysis.

For the benefit of those who are not in the Node.js chaincode camp, such chaincode relies on ""fabric-shim"", which provides the chaincode interface, a lower level API for implementing ""Smart Contracts"".  So, our node.js chaincode usually starts with 
""
const shim = require('fabric-shim');
""

To verify my concern about npm for node.js chaincode, I intentionally disconnected from the Internet and then ran new node.js chaincode install and instantiate.
As expected, instantiate failed, part of the error message includes the following:
"" 
npm ERR! errno EAI_AGAIN
npm ERR! request to https://registry.npmjs.org/fabric-shim failed,
reason: getaddrinfo EAI_AGAIN registry.npmjs.org:443
""
It indicates that fabric-shim is now behaving differently.
And what's its relationship with 
 "" The existing npm packages are still available for use, while the new npm packages provide a layer of abstraction to improve developer productivity and ease of use. "" ? 

I'm thinking loud here...
It seems to be desirable to have an ability to run fabric-shim locally (thus, whatever new dev for better or for worse won't adversely impact working applications ) or remotely as current default.
OR alternatively, we have fabric-shim-v1.1.0 to fabric-shim-v1.4.0-rc ...;;;","17/Dec/18 11:46 AM;aspring;To those with Fabric 1.1.0,

Could you please try to reproduce the issue ( per Steps to Reproduce ).  One of my clients is getting upset and I'm unable to move forward with a new blockchain project intended to use HL Fabric.;;;","18/Dec/18 3:35 AM;denyeart;[~mbwhite] Can you take a look?;;;","18/Dec/18 6:33 AM;mastersingh24;[~aspring]  When chaincode is instantiated, it will *ALWAYS* pull from npm ... and it will pull the version based on the constraints in package.json ;;;","18/Dec/18 5:37 PM;mbwhite;[~aspring] - to double check the version of the balanace transfer ( the fabric samples repo ) you are using.  Is this a version from 'today' that is reerring to the 1.4 RC... or is it a version consistent with a 1.1 set of images.

 
 * As part of your investigations have you attempted install and instantiating a chaincode outside of the balance-transfer sample.?
 * Within the balanace-transfer sample - there's no mention of fabric-tools in the docker-compose
 * I believe that the example rest server is struggling to instantiate the chaincode.  ;;;","19/Dec/18 2:04 AM;aspring;"" 'today' that is reerring to the 1.4 RC...""
it seems to be the case, please review my OP on this.

 ""have you attempted install and instantiating a chaincode outside of the balance-transfer sample.?""
yes, an attempt to instantiate a new chaincode via CLI completed with no error message or anything else, but 
' peer chaincode list --instantiate -C mychannel ' indicated, it has not instantiated successfully.

""Within the balanace-transfer sample - there's no mention of fabric-tools in the docker-compose"",
I don't get this.  If you were saying, where's docker-compose.yaml file, then it's under subdirectory 'artifacts'.

""I believe that the example rest server is struggling to instantiate the chaincode. ""
It's been working reliably for me for several months already for multiple applications.
* the default single action of ""transfer"" from party a to party b for an amount ==> ok
* I tweaked the fabcar to fit into this  ==> ok 
* my poc app on house title recording ==> ok
* another poc app ==> ok

;;;","19/Dec/18 11:36 AM;aspring;I took another look at my Fabric v1.1.0 box ( and yes, I again confirmed its version with peer version )

then, verified fabric-client and fabric-ca-client versions.
for the former, it's NOW 1.3.0.  i would guess this version was released in the last two months or so... but my 
Fabric 1.1.0 was installed like over four moths ago.  I did not update Fabric to v1.4.0 RC or run any script to do that or update fabric-client myself, so, something was wrong.   My suspicion was the new ""instantiate"" process.
;;;","19/Dec/18 10:47 PM;sstone1;[~aspring] please can you provide copies of the package.json files from the balance-transfer application (fabric-samples/balance-transfer/package.json) and the chaincode you are trying to instantiate (the sample CC is fabric-samples/balance-transfer/artifacts/src/github.com/example_cc/node/package.json).;;;","20/Dec/18 5:01 AM;aspring;[~sstone1]

Please refer to my response to Matthew White yesterday.  In essence, my node.js chaincode and its corresponding package.json configuration files do not have any issue.  I've worked on multiple applications albeit on a small scale and poc.

Regarding cc path, i don't use path like fabric-samples/balance-transfer/artifacts/src/github.com/example_cc/node,
instead, i use /home/myuserid/fabric-samples/chaincode as its root,
and I have it mapped via CLI section in the docker-compose.yaml config file.

Question, 
What's the spec for Fabric v1.1.0 for Node.js chaincode ( particularly for linux/ubuntu OS ) ?
That is, 
1) sets of Fabric docker image version and respective id that have been tested to work
2) specific version of corresponding fabric-client and fabric-ca-client
3) anything else important that I miss here

Same question for Fabric v1.2.0
Same question for Fabric v1.3.0

Asking this question because at least in my cases:
a) Fabric v.1.1.0,  does not seem to be compatible with fabric-client version 1.1.0.  This morning, with a basic node.js chaincode, it failed to join channel, err msg: ""network connection failure"".   This ubuntu box of mine is main node,

Please see the following fabric mailing list thread and related ones:
https://lists.hyperledger.org/g/fabric/message/5197?p=,,,20,0,0,0::Created,,npm+bug,20,2,0,28752315
b) Fabric v1.3.0 did not seem to work with fabric-client version 1.3.0, instead, fabric-client version 1.2.0 seems to be ok for instantiate node.js chaincode.

Thanks.

 ;;;","20/Dec/18 7:31 PM;sstone1;[~DonLi] in the email chain I can see that the chaincode specifies a fabric-shim dependency of ~1.1.0, so that is correct for Fabric v1.1.

This error:
[ERROR] Join-Channel - TypeError: client.getEventHubsForOrg is not a function
    at Object.joinChannel
(/home/userX/fabric-samples/balance-transfer/app/join-channel.js:54:27)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)  

... is caused by the breaking change in Fabric v1.3 to remove the event hub classes and associated APIs in favour of channel event hub. This is an annoying change that breaks semantic versioning rules and IMO should have gone into Fabric v2.0, but we are where we are.

The Fabric v1.3 version of balance-transfer demonstrates using the new *channel* event hub classes and associated APIs:
https://github.com/hyperledger/fabric-samples/blob/release-1.3/balance-transfer/app/instantiate-chaincode.js#L101

When you run ""npm audit fix"", as shown in the email chain, you may be getting upgraded to Fabric v1.2/3/4 without knowing it. If you move up a Fabric v1.1/1.2 app up to Fabric v1.3+, you will have to rewrite your applications for the event hub change mentioned above.;;;","20/Dec/18 9:02 PM;aspring;[~sstone1] Simon Stone, 

Very informative, I appreciate it.

Regarding ""breaking change in Fabric v1.3 to remove the event hub classes and associated APIs in favour of channel event hub. This is an annoying change that breaks semantic versioning rules and IMO should have gone into Fabric v2.0, but we are where we are.""
I think, a rough but practical analogue is, instead of adding an extension to a house, it's burning it down.  Some one in charge really needs to reflect on this...

So, ""npm audit fix"" does not really do fixing but upgrade, it's Terribly Misleading and dangerous, instead, it really should be called something like "" npm fabric upgrade {version} "".

Questions:
(1) For Fabric 1.3.0, fabric-client version 1.2.0 seems able to instantiate node.js chaincode but a bit quirky, does that mean fabric-client 1.2.0 has addressed the annoying "" event hub classes and associated APIs in channel events""?
(2) Could you respond to my question ""(a)"" above? 
What's supposed to be fabric-ca-client version for Fabric v1.1.0?
I haven't checked the current one on my Fabric v1.1.0 box yet.

Many thanks.



;;;","20/Dec/18 10:59 PM;sstone1;[~DonLi] ""npm audit fix"" assumes you follow the semantic versioning rules and a change from v1.1 to v1.4 is compatible; npm itself is doing nothing wrong. The damage caused is 100% due to the breaking change within Fabric v1.3.

1) Fabric v1.1 has EventHub, Fabric v1.2 has ChannelEventHub and EventHub, and Fabric v1.3 just has ChannelEventHub. So Fabric v1.2 is code compatible with the version of the balance-transfer code you are using, which explains why it works.

2) If you are using Fabric v1.1, you should use ""~1.1.0"" for all dependencies on the fabric-client, fabric-ca-client, and fabric-shim packages in your package.json files.;;;","20/Dec/18 11:52 PM;aspring;Very informative, [~sstone1] Simon Stone, thank you.

In each of my package.json file for each of my node.js chaincode, the fabric-shim references the installed fabric-client version.

I wonder if there's any hope of an improvement of the reliability of node.js chaincode instantiate under Fabric v1.3.0 with fabric-client v.1.2.0.  As mentioned earlier, it's quirky in my recent experience.

Much obliged.;;;","22/Dec/18 12:57 PM;aspring;This is about Fabric 1.1.0 that has been crashed by v1.4.0 RC by accident.  New testing results.

Client request: node.js chaincode instantiate via Fabric REST API server

Configuration:
fabric v1.1.0
fabric-client v1.2.0
fabric-ca-client v1.1.2

err msg:
[2018-12-21 21:38:57.617] [DEBUG] Helper - [crypto_ecdsa_aes]: ecdsa
signature:  Signature {
  r: <BN: bb0c63e5d3e25d41127ab2e6592958c175e8cf0fc93f69545cbf4412e88c36d0>,
  s: <BN: 7394232742fcc55ca09f592cee97bc2622c3c7ed0c2d29d351fdeddfea774aa>,
  recoveryParam: 0 }
error: [client-utils.js]: sendPeersProposal - Promise is rejected:
Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a
valid endorsement system chaincode)

-------------------------------------

Configuration:
fabric v1.1.0
fabric-client v1.1.0
fabric-ca-client v1.1.2

err msg:
[2018-12-21 22:13:19.008] [DEBUG] Helper - [crypto_ecdsa_aes]: ecdsa
signature:  Signature {
  r: <BN: baa057a7ead848090a6321806a60e3fe612fdaac28ac42da65d1f5ce26610c48>,
  s: <BN: 30f3af8bfafd2ec35fe79596825a071b7e5ae084344bfa147c3174340bc3d5eb>,
  recoveryParam: 0 }
/home/userX/fabric-samples/balance-transfer/node_modules/fabric-client/lib/EventHub.js:308
                        if(self._stream) state = self._stream.call.channel_.getConnectivityState();
                                                                          ^

TypeError: Cannot read property 'getConnectivityState' of undefined
    at ClientDuplexStream.<anonymous>
(/home/userX/fabric-samples/balance-transfer/node_modules/fabric-client/lib/EventHub.js:308:56)
    at emitOne (events.js:116:13)

Note:
It even failed to join channel.

So, back to the question I asked earlier, how to make this installation of Fabric 1.1.0 able to instantiate
node.js chaincode again?
Not Fabric 1.1.0 docker image reinstallation option.
;;;","15/Jan/19 12:11 AM;mastersingh24;I'm still struggling to see how to reproduce this.  There is also no such thing as a Fabric REST server ... balance transfer is a sample but the REST server it uses is not a supported offering.

But we are clearly able to run the balance-transfer sample with Fabric when using the same versions of both.;;;","15/Jan/19 7:20 AM;aspring;A few thoughts.

(a) I've been working with Hyperledger Fabric from version 1.1.0 to 1.3.0 including setting up such a blockchain network albeit small scale, developing chaincode in node.js and developing PoC web application integrating with chaincode and have reasonable success with that.  So, hopefully, I know a thing or two about Hyperledger Fabric.

(b) The issue I experienced, particularly, the ""instantiate"" problem could also be the result that my host computer had been compromised, then you know what's next.  And thus, impossible to reproduce.  Each minute of my time is valuable.  I wouldn't want to spend time to speculate nor to damage this platform's reputation ( that would not be in my interest neither ).

(c) I respectfully disagree with Gari Singh's statement in the first paragraph.  I'm not interested in semantics, but a three layered or tiered architecture seems very desirable.
See the following:
(1) chaincode as the bottom layer, (2) a REST API server in the middle as the middle layer, and then (3) a web app and/or mobile app sits on top.  With the middle layers connects the bottom layer and the top layer.

I've proven it works.

Having said that, I'm open to other types of architectures as well.
 
;;;","30/Jun/19 7:40 PM;mastersingh24;Lowering the priority of this as no one seems to be able to reproduce the issue here.
;;;","01/Jul/19 11:41 PM;mbwhite;I'd go further and close - we can't reproduce this issue, and there's no additional information.

If the problem re-appears than please do re-open the issue. ;;;",,,,,,,,,
Cannot read property namespace of undefined on chaincode node builds,FABCN-217,33399,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,,mbwhite,mbwhite,31/Aug/18 6:30 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,01/Sep/18 4:06 PM,,0,,,,,,,"This error is occuring a lot on the chaincode-node tests.

{{2018-08-31 08:56:18.164 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> DEBU 0a5 ESCC invoke result: response:<status:500 message:""transaction returned with failure: TypeError: Cannot read property 'namespace' of undefined"" >}}
(reference https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-chaincode-node-verify-x86_64/253/console.log.gz)

The tests that trigger this seems to be either

let iterator = await stub.getStateByRange('key2', 'key6');
or

let iterator = await stub.getStateByPartialCompositeKey('color~name', ['blue']);

Assuming that this message is being sent wrongly


{{// KV -- QueryResult for range/execute query. Holds a key and corresponding value.
message KV {
    string namespace = 1;
    string key = 2;
    bytes value = 3;
}
}}",,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzp2n:",,,,Unset,Unset,,,,,,,,,,,,,,At the moment this is only seen in the chaincode-node tests run in jenkins,,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/18 11:15 PM;davidkel;Further to this, the problem only appears to occur on the x86 builds. The s390 builds don't experience this problem.;;;","01/Sep/18 4:06 PM;davidkel;GetAllResults assumes there are results to get and also had a console.log(val.namespace) in it. Seems that the tests can are running now where the previous run has not yet been committed to the ledger, so assume that something has changed recently or things have got slower.

Thanks to [~simonstone1] for fixing

https://gerrit.hyperledger.org/r/#/c/26032/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Using annotations on classes of superclasses causes merged metadata,FABCN-218,39326,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,awjh-ibm,awjh-ibm,16/Apr/19 12:11 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,22/May/19 9:11 PM,,0,,,,,,,"If a user defined a class to extend a superclass, property annotations on another child class of that superclass appear in the metadata of the sibling and superclass.

This is due to the use of getMetadata rather than getOwnMetadata when getting the properties of the target in Object.js.

Example:
{code:title=example.ts}
class Person {
   @Property()
   private eyeColour: string;
}

@Object()
class Bob extends Person {
   @Property()
   private houseName: string;

}

@Object()
class Fred extends Person {
    @Property()
    private favouriteColour: string;
}
{code}

The above will result in both Bob and Fred having the same metadata properties as well as Person (although in this case person will not appear in the metadata returned to the user as it has no @Object annotation)",,awjh-ibm,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-165,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00l33:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Apr/19 12:30 AM;mbwhite;1.4.2 gives me this data back..
{noformat}
      -      ""Bob"": {
      -        ""$id"": ""Bob""
      -        ""additionalProperties"": false
      -        ""properties"": {
      -          ""houseName"": {
      -            ""type"": ""string""
      -          }
      -        }
      -        ""type"": ""object""
      -      }
      -      ""Fred"": {
      -        ""$id"": ""Fred""
      -        ""additionalProperties"": false
      -        ""properties"": {
      -          ""favouriteColour"": {
      -            ""type"": ""string""
      -          }
      -        }
      -        ""type"": ""object""
      -      }
{noformat};;;","26/Apr/19 5:44 PM;awjh-ibm;Apologies. The sample given missed the crucial part! The person type needs an @Property to causes the reported issue. Updated the example to show this;;;","26/Apr/19 9:01 PM;mbwhite;.. and reproduced, with fix available

 

https://gerrit.hyperledger.org/r/31110 [FAB-15190] Superclass properties;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction metadata should not return transaction context as param,FABCN-219,35277,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,12/Nov/18 8:55 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,13/Nov/18 11:19 PM,,0,,,,,,,The transaction metadata returned for a typescript contract with annotations should not return context as one of the parameters for the function.,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzyf3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
node chaincode reference docs hidden,FABCN-220,34256,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,mbwhite,davidkel,davidkel,02/Oct/18 6:01 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,04/Oct/18 7:05 PM,,0,,,,,,,"pretty much the only place that exists now that I can find is
https://fabric-shim.github.io/release-1.3/

",,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzte7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Oct/18 6:10 PM;mbwhite;We need to get a merge build from the master branch in.

[https://gerrit.hyperledger.org/r/#/c/26669/]

Is the next candidate, and is passed review waiting on merge.;;;","02/Oct/18 9:53 PM;mbwhite;Next steps are to add code to the `release-1.2` and `release-1.1` codebases to prevent them for removing all the documentation! 

 ;;;","03/Oct/18 12:03 AM;mbwhite;Update:  

Misunderstanding on exactly how the scripts re pipelines work.
 * Pipeline scripts being updated per https://jira.hyperledger.org/browse/FABCI-145
 * Update to the release-1.1 & release-1.2 JSDoc generation in https://jira.hyperledger.org/browse/FAB-12266 ;;;","03/Oct/18 7:14 PM;mbwhite;The update to the CI is in progress - waiting to be merged.. then we'll need to get the merge builds of the JSDocs.
(fyi [~rameshthoomu] );;;",,,,,,,,,,,,,,,,,,,,,,,,,
 Document for CommonIterator.next() is not consistent with the behavior,FABCN-221,40209,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,shimos,shimos,shimos,30/May/19 5:41 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,20/Jun/19 6:39 PM,,0,,,,,,,"The document for CommonIterator.next() states that
bq. Get the next value and return it through a promise and also emit it if event listeners have been registered.
and it returns
bq. a promise that is fulfilled with the next value or is rejected otherwise

But emitting events is removed by FAB-15330, and the promise just resolves with an object { done: true } if there is no more value instead of rejecting.
The sample code and output are shown below.

Sample code in chaincode:

{code}
class SampleContract extends Contract {
…
    async testIterator(ctx) {
        const iterator = await ctx.stub.getStateByRange(""a"", ""b"");

        try {
            while (true) {
                const v = await iterator.next();
                console.log(v);
            }
        } catch (e) {
        }
    }
}
{code}

Result (when testIterator is invoked):

{code}
{ value:
   { namespace: 'mycc',
     key: 'a1',
     value:
      ByteBuffer {
        buffer: <Buffer 0a 11 0a 0f 0a 04 6d 79 63 63 12 02 61 31 1a 03 31 30 30 0a 10 0a 0e 0a 04 6d 79 63 63 12 02 61 32 1a 02 35 30 1a 24 36 37 31 38 39 31 62 65 2d 32 65 ... >,
        offset: 16,
        markedOffset: -1,
        limit: 19,
        littleEndian: true,
        noAssert: false } },
  done: false }
{ value:
   { namespace: 'mycc',
     key: 'a2',
     value:
      ByteBuffer {
        buffer: <Buffer 0a 11 0a 0f 0a 04 6d 79 63 63 12 02 61 31 1a 03 31 30 30 0a 10 0a 0e 0a 04 6d 79 63 63 12 02 61 32 1a 02 35 30 1a 24 36 37 31 38 39 31 62 65 2d 32 65 ... >,
        offset: 35,
        markedOffset: -1,
        limit: 37,
        littleEndian: true,
        noAssert: false } },
  done: false }
{ done: true }
{ done: true }
{ done: true }
…
{code}
",,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,08dd59830ae46e3dc76af91d47a07c41f9c25b5f,Unset,No,,,"1|i00plo:",,,,Unset,Unset,,,,,,,,,,,,,,Call getStateByRange() or other functions returning an iterator repeatedly from a chaincode,,Unset,,,,,,Unset,,Unset,,(Please add usage information),shimos,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/May/19 6:39 AM;shimos;For master: https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/31614
For release-1.4: https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/31613;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
getPrivateDataByRange throws error in Node.js,FABCN-222,37734,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,kestutis.gudynas,mehulshahnj,mehulshahnj,17/Feb/19 1:36 AM,25/Nov/20 8:45 PM,28/Oct/23 2:28 AM,25/Nov/20 8:45 PM,,0,cc-triaged,external,,,,,"Receive error ""TypeError: iterator.next is not a function"" when attempting to iterate through the results after function call to getPrivateDataByRange, code shown below for collection name 'abc':
 
iterator = await stub.getPrivateDataByRange(""abc"",""aaaaa"", ""zzzzz"");
while (true) {
            let res=await iterator.next();
            .....rest of the code

Same problem with getPrivateDataQueryResult;
 
getPrivateData without the iterator works fine, code shown below:
 
let sampleRecordAsBytes = await stub.getPrivateData(""abc"",""bbbbb"");",,davidkel,denyeart,jtonline,jyellick,mbwhite,mehulshahnj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6y",,,,Unset,Unset,20Nov to 29Nov,,,,,,,,,,,,,The code sample provided above should be suffice I believe.,,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,denyeart,jtonline,jyellick,mbwhite,mehulshahnj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Feb/19 1:58 PM;denyeart;[~mbwhite] Can you take a look?;;;","18/Feb/19 11:12 PM;mbwhite;Configuring a local test envionment for private data now...

 ;;;","26/Feb/19 1:52 AM;mehulshahnj;Adding affected version as 1.4.0 as well, same problem as 1.3.0.;;;","01/Mar/19 7:25 PM;mbwhite;Found the root cause of this problem; the overall journey took quite a winding path, but the problem itself is not as complex as might appear.
 * In a number of APIs an iterator is returned for the developer to use to look at all the results
 * In some cases, though this iterator object is wrapped in another object  `return \{ iterator }`  effectively
 * End result is that for some APIs the return values needs 'unpacking' or 'destructuring', and some it doesn't.

This change was introduced when a number of pagination functions where added; though this would appear to be accidental change rather than deliberate. 

The plan is therefore to 

(1) Revert to the approach where the iterator is not wrapped

(2) For the v1.4.0 release, mitigate any migration issues by adding the iterator as a property of itself under the key iterator. Should any code have worked around the problem - this will keep that code working. 

(3) For v2.0, revert to returned an interator but without the migration support. ;;;","05/Mar/19 11:35 PM;mbwhite;Affected code is

handler.js - line 697 handleGetQueryResult()

 ;;;","20/Mar/19 8:01 PM;jtonline;I think handleGetQueryResult() is right to be returning an object since it seems to include paging related metadata. Should other methods also return objects for consistency, or does that not really matter?;;;","20/Mar/19 10:46 PM;mbwhite;Consistency is important; looking at the approach of the other languages; they have extended the iterator.. so you can call both the 'next' method and the 'getmetadata'

It would be better in this case to add in the metadata to the iterator object. rather than wrapping it another object. ;;;","10/May/19 7:38 PM;davidkel;A summary of the problem is as follows
1. The original methods getHistoryForKey, getQueryResult, getStateBy.... just return the appropriate iterator
2. The getPrivateData... methods introduced return an object with an iterator property. This isn't necessary as no metadata is returned. These api's should have just returned the iterator
3. The get...Pagination methods introduced, return an object with an iterator and metadata property.

FAB-15330 will provide a consistent experience across all these api's and provide detail about how to obtain the metadata for the Pagination apis.;;;","23/Aug/19 2:15 AM;tangross;To handle TypeError, can workaround like this.

const \{ iterator } = (await stub.getPrivateDataByRange(""abc"",""aaaaa"", ""zzzzz"")) as any;;;;","25/Sep/19 12:36 AM;jyellick;Is this still in progress? Any updates?;;;","16/Oct/19 12:17 AM;davidkel;As a side
1. The new async loop capabilities in v2.0 will hide all the discrepancies
2. If these apis are changed then the tutorial which describes the differences of returned values from apis that return iterators will need to be updated.;;;",,,,,,,,,,,,,,,,,,
Contract metadata includes createContext function,FABCN-223,37485,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,sstone1,sstone1,07/Feb/19 10:59 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,12/Feb/19 12:14 AM,,0,,,,,,,"# Deploy the commericial paper sample
# Get the transaction metadata
# Note that the transaction metadata references a transaction called createContext

This is not a transaction, and should not be in the transaction metadata.",,awjh-ibm,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00auf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,sstone1,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Feb/19 11:16 PM;awjh-ibm;[https://gerrit.hyperledger.org/r/#/c/29230/]

https://gerrit.hyperledger.org/r/#/c/29231/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"test-fv-shim, test-e2e are failing consistently in s390x as timeout exceeded",FABCN-224,39565,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,jtonline,sambhavdutt,sambhavdutt,30/Apr/19 11:39 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,17/May/19 12:03 AM,,0,ci-blocker,,,,,,"test-fv-shim, test-e2e are failing consistently in s390x, Chaincode clientidentity and Chaincode crosschaincode tests are exceeding the timeout and the test errors out.


*Branch:* master
*Platform:* s390x
*Error Snippet:*

{code:java}
06:07:46   25 passing (27m)
06:07:46   2 failing
06:07:46 
06:07:46   1) Chaincode clientidentity should create an instance of the client identity class:
06:07:46      Error: Timeout of 120000ms exceeded. For async tests and hooks, ensure ""done()"" is called; if returning a Promise, ensure it resolves.
06:07:46   
06:07:46 
06:07:46   2) Chaincode crosschaincode ""before all"" hook:
06:07:46      Error: Timeout of 240000ms exceeded. For async tests and hooks, ensure ""done()"" is called; if returning a Promise, ensure it resolves.
06:07:46   
06:07:46 
06:07:46 
06:07:46 
06:07:46 [06:07:41] '<anonymous>' errored after 27 min
06:07:46 [06:07:41] Error: child process exited with code 2
06:07:46     at ChildProcess.cmd.on (/w/workspace/fabric-chaincode-node-merge-s390x/gopath/src/github.com/hyperledger/fabric-chaincode-node/build/test/fv.js:20:18)
06:07:46     at ChildProcess.emit (events.js:189:13)
06:07:46     at ChildProcess.EventEmitter.emit (domain.js:459:23)
06:07:46     at maybeClose (internal/child_process.js:970:16)
06:07:46     at Process.ChildProcess._handle.onexit (internal/child_process.js:259:5)
06:07:46 [06:07:41] 'test-fv-shim' errored after 27 min
06:07:46 [06:07:41] 'test-e2e' errored after 27 min
06:07:46  ERROR!!! test-e2e failed
{code}
 
*Build Log*

https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-merge-s390x/162/consoleFull",,davidkel,jtonline,mbwhite,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,FABCN-281,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,017d5c8403d4705001bbe8cfdc6e3c3231e4f7cb,Unset,No,,,"1|i00mbr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,jtonline,mbwhite,sambhavdutt,vijaypunugubati,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/May/19 10:35 PM;sambhavdutt;[~mbwhite][~davidkel]
The chaincode-node tests, test-fvt-shim test-e2e continue to fail with the timeout error in verify/merge for s390x

*Branch:* master
*Platform:* s390x
*Error Snippet:*

{code:java}
15:47:18   25 passing (26m)
15:47:18   2 failing
15:47:18 
15:47:18   1) Chaincode clientidentity should create an instance of the client identity class:
15:47:18      Error: Timeout of 120000ms exceeded. For async tests and hooks, ensure ""done()"" is called; if returning a Promise, ensure it resolves.
15:47:18   
15:47:18 
15:47:18   2) Chaincode crosschaincode ""before all"" hook:
15:47:18      Error: Timeout of 240000ms exceeded. For async tests and hooks, ensure ""done()"" is called; if returning a Promise, ensure it resolves.
{code}

*Build Log*
https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-merge-s390x/166/consoleFull;;;","07/May/19 5:35 PM;mbwhite;This needs to be a focus this week...

 ;;;","09/May/19 12:51 AM;mbwhite;Good news is that this has reproduced in a test environment.;;;","10/May/19 7:01 PM;jtonline;The good news is that ""clientidentity should create an instance of the client identity class"" genuinely seems to be a timeout. It passes with a longer wait.

Unfortunately there seems to be something odd going on with the crosschaincode tests. They seem to be failing because chaincode2 isn't starting on org2. Kicking it into life with a direct query in the before block looks like it makes the tests pass but that doesn't seem like it should be necessary.

 ;;;","10/May/19 11:44 PM;jtonline;[https://gerrit.hyperledger.org/r/#/c/31322/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,
False build results on fabric-chaincode-node npm publish script,FABCN-225,36104,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,vijaypunugubati,rameshthoomu,rameshthoomu,13/Dec/18 1:08 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,18/Jan/19 4:41 AM,,0,,,,,,,"Observed that fabric-chaincode-node npm publish is executed but it failed to fetch the unstable version with npm dist-tags command. UNSTABLE_VERSION value is blank in this case as there is no module available on the current_tag (or unstable-1.4) version. 

 
{code:java}
09:47:12 -----------> Publish npm modules from amd64 
09:47:13 ======> CURRENT_TAG: unstable-1.4 
09:47:13 ======> Current RELEASE_VERSION: 
09:47:13 ======> fabric-shim 
09:47:13 
09:47:14 ======> UNSTABLE VERSION:
09:47:15 ======> Incremented UNSTABLE VERSION:
09:47:15 ======> UNSTABLE_INCREMENT:
09:47:15 ======> UNSTABLE_INCREMENT_VERSION: 1.4.0-snapshot.
09:47:15 npm ERR! Invalid version: ""1.4.0-snapshot.""
09:47:15 
09:47:15 npm ERR! A complete log of this run can be found in:
09:47:15 npm ERR! /home/jenkins/.npm/_logs/2018-12-12T14_47_15_705Z-debug.log
{code}
Please see failed build log here but the build shows blue (green) or success

[https://jenkins.hyperledger.org/job/fabric-chaincode-node-merge-x86_64/]

 

 ",,mbwhite,rameshthoomu,sstone1,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i002tz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,rameshthoomu,sstone1,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jan/19 8:40 PM;sstone1;The scripts fail if the module does not exist in npm (e.g. new module), or if the tag does not exist in npm (e.g. new tag for new version). I've submitted a CR that updates the scripts to handle both of these cases:
https://gerrit.hyperledger.org/r/#/c/28456/;;;","03/Jan/19 8:41 PM;sstone1;Oh, except someone's beaten me to it! 
https://gerrit.hyperledger.org/r/#/c/28363/

Assigning to [~vijaypunugubati].;;;","17/Jan/19 7:04 PM;mbwhite;[~vijaypunugubati]  I've observed something similar in the the merge builds of 1.4.1 can't publish an unstable snapshot..

Is this the same problem - or has this change been merged now?;;;","18/Jan/19 1:01 AM;vijaypunugubati;This patch fix the above issue to publish an unstable snapshot module in branch 1.4 https://gerrit.hyperledger.org/r/#/c/28785/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Error: PUT_STATE failed no ledger context,FABCN-226,36937,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Test Error,,SashaPESIC,SashaPESIC,18/Jan/19 11:47 PM,06/May/20 7:19 AM,28/Oct/23 2:28 AM,21/Jan/19 10:51 PM,,0,,,,,,,"I am getting the above written error from a smart contract in Node JS I wrote. I did not find any legitimate help elsewhere so I am posting it here. I was wondering whether chaincodes have a problem in async execution inside a function that is called. If this cannot be done inside a function, how to workaround it? 

The problem is inside the pullState function that uses other libraries and their Promises to form a final asset to be written to the ledger. The chaincode fails in this line: 
 {color:#9cdcfe}stub{color}{color:#d4d4d4}.{color}{color:#dcdcaa}putState{color}{color:#d4d4d4}({color}{color:#9cdcfe}status{color}{color:#d4d4d4}.{color}{color:#9cdcfe}key{color}{color:#d4d4d4}, {color}{color:#4ec9b0}Buffer{color}{color:#d4d4d4}.{color}{color:#dcdcaa}from{color}{color:#d4d4d4}({color}{color:#4ec9b0}JSON{color}{color:#d4d4d4}.{color}{color:#dcdcaa}stringify{color}{color:#d4d4d4}({color}{color:#9cdcfe}status{color}{color:#d4d4d4}))){color}

with the error. 

I have added the code and package.json file in a .zip archive. Thanks for the help!",,SashaPESIC,yuriiuhlanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jan/19 11:47 PM;SashaPESIC;Desktop.zip;https://jira.hyperledger.org/secure/attachment/16598/Desktop.zip",,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i007qv:",,,,Unset,Unset,,,,,,,,,,,,,,Install and instantiate chaincode. Call the pullState function with one argument. ,,Unset,,,,,,Unset,,Unset,,(Please add usage information),SashaPESIC,yuriiuhlanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/May/20 7:19 AM;yuriiuhlanov;I just ran in the same issue.

In my case, it occurred because the result from my smartcontract was returned faster than a promise resolved. If it's also a case for you, add a missing await somewhere.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix unstable-1.4 npm modules of fabric-chaincode-node,FABCN-227,36106,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,13/Dec/18 1:25 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,18/Dec/18 1:59 AM,,0,,,,,,,"fix unstable-1.4 npm modules of fabric-chaincode-node. As we don't have unstable modules of unstable-1.4, it;s not possible to push the latest npm node modules.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i002uf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Dec/18 1:59 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/28118/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fabric-merge-end-2-end, fabric-test-daily-behave-master jobs: Fail in Install chaincode with node lang",FABCN-228,42691,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,,vijaypunugubati,vijaypunugubati,09/Oct/19 11:54 PM,12/Jun/20 12:31 AM,28/Oct/23 2:28 AM,11/Oct/19 12:03 AM,,0,ci-failure,,,,,,"Fabric-merge-end-2-end, fabric-test-daily-behave-master jobs: Fail in Installing chaincode with node lang, in multiple places like fail byfn tets (javascript chaincode) in fabric and chaincodes testing test case(chaincodes.Chaincodes Testing.FAB-6211: Test example02 chaincode written using NODE without tls -- @1.2) in fabric-test projects. 

*Branch:* Master

*Platform:* x86_64

*Error Snippet:*
{code:java}
/00:26:24.574 Installing chaincode on peer0.org1...
00:26:24.574 + peer lifecycle chaincode install mycc.tar.gz
00:26:30.699 + res=1
00:26:30.699 + set +x
00:26:30.703 Error: chaincode install failed with status: 500 - failed to invoke backing implementation of 'InstallChaincode': could not build chaincode: failed external (no builders defined) and docker build: docker image build failed: docker build failed: Error returned from build: 1 ""+ INPUT_DIR=/chaincode/input
00:26:30.703 + OUTPUT_DIR=/chaincode/output
00:26:30.703 + cp -R /chaincode/input/src/. /chaincode/output
00:26:30.703 + cd /chaincode/output
00:26:30.703 + '[' -f package-lock.json -o -f npm-shrinkwrap.json ]
00:26:30.703 + npm install --production
00:26:30.703 npm ERR! code ETARGET
00:26:30.703 npm ERR! notarget No matching version found for fabric-contract-api@2.0.0-snapshot
00:26:30.703 npm ERR! notarget In most cases you or one of your dependencies are requesting
00:26:30.703 npm ERR! notarget a package version that doesn't exist.
00:26:30.703 npm ERR! notarget 
00:26:30.703 npm ERR! notarget It was specified as a dependency of 'fabric-shim'
00:26:30.703 npm ERR! notarget 
00:26:30.703 
00:26:30.703 npm ERR! A complete log of this run can be found in:
00:26:30.703 npm ERR!     /root/.npm/_logs/2019-10-09T14_09_53_984Z-debug.log
00:26:30.703 ""
00:26:30.703 !!!!!!!!!!!!!!! Chaincode installation on peer0.org1 has failed !!!!!!!!!!!!!!!!/ code placeholder
{code}
*Build Logs:* 

[https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/6512/console]

[https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-merge-end-2-end-x86_64/6511/Docker_Container_Logs/]

[https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-daily-behave-master-x86_64/369/Behave_Test_Logs/]",,mbwhite,scottz,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-180,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzwqfq:g",,,,Unset,Unset,To Do,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,scottz,vijaypunugubati,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Oct/19 6:08 PM;mbwhite;https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33924 [FAB-16798] Update dependencies versions;;;","10/Oct/19 7:12 PM;mbwhite;And the follow on to lock step all the versions to be same.

https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33927 [FAB-16798] Lock step the versions to that of the shim;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction proposal transient data not delivered to Node chaincode,FABCN-229,42328,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,sstone1,btl5037,btl5037,12/Sep/19 11:09 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,26/Sep/19 6:04 PM,,0,ci-blocker,,,,,,"{code:java}
2019-09-11 10:28:20,040 main ERROR HFCAClient:1458 - POST request to https://localhost:7054 failed request body {""caname"":""ca0"",""certificate_request"":""-----BEGIN CERTIFICATE REQUEST-----\nMIHWMH4CAQAwHDEaMBgGA1UEAwwRdXNlcjE1NjgxOTc2ODBfMTUwWTATBgcqhkjO\nPQIBBggqhkjOPQMBBwNCAASxHb/7DHljnEmfDqW1Oe7D0qfIpxDhQB6N7qlA6441\nB4+PkFRGUXpHGIl7p+HCgS7ECuhs1cvgd+RsdNqNwGfEoAAwCgYIKoZIzj0EAwID\nSAAwRQIhAKNoL+A0y9CQ5zGoDXvlMye/UEWT8h2fKr6deYwfMVHAAiBQBARd3H11\n81QcFzjk/k7UcQeDGNWoB8o8jXXciDAZ/A==\n-----END CERTIFICATE REQUEST-----\n""}. Response: {""result"":"""",""errors"":[{""code"":20,""message"":""Authentication failure""}
],""messages"":[],""success"":false}
2019-09-11 10:28:20,041 main ERROR HFCAClient:677 - POST request to https://localhost:7054 failed request body {""caname"":""ca0"",""certificate_request"":""-----BEGIN CERTIFICATE REQUEST-----\nMIHWMH4CAQAwHDEaMBgGA1UEAwwRdXNlcjE1NjgxOTc2ODBfMTUwWTATBgcqhkjO\nPQIBBggqhkjOPQMBBwNCAASxHb/7DHljnEmfDqW1Oe7D0qfIpxDhQB6N7qlA6441\nB4+PkFRGUXpHGIl7p+HCgS7ECuhs1cvgd+RsdNqNwGfEoAAwCgYIKoZIzj0EAwID\nSAAwRQIhAKNoL+A0y9CQ5zGoDXvlMye/UEWT8h2fKr6deYwfMVHAAiBQBARd3H11\n81QcFzjk/k7UcQeDGNWoB8o8jXXciDAZ/A==\n-----END CERTIFICATE REQUEST-----\n""}. Response: {""result"":"""",""errors"":[{""code"":20,""message"":""Authentication failure""}
],""messages"":[],""success"":false}
org.hyperledger.fabric_ca.sdk.exception.HTTPException: POST request to https://localhost:7054 failed request body {""caname"":""ca0"",""certificate_request"":""-----BEGIN CERTIFICATE REQUEST-----\nMIHWMH4CAQAwHDEaMBgGA1UEAwwRdXNlcjE1NjgxOTc2ODBfMTUwWTATBgcqhkjO\nPQIBBggqhkjOPQMBBwNCAASxHb/7DHljnEmfDqW1Oe7D0qfIpxDhQB6N7qlA6441\nB4+PkFRGUXpHGIl7p+HCgS7ECuhs1cvgd+RsdNqNwGfEoAAwCgYIKoZIzj0EAwID\nSAAwRQIhAKNoL+A0y9CQ5zGoDXvlMye/UEWT8h2fKr6deYwfMVHAAiBQBARd3H11\n81QcFzjk/k7UcQeDGNWoB8o8jXXciDAZ/A==\n-----END CERTIFICATE REQUEST-----\n""}. Response: {""result"":"""",""errors"":[{""code"":20,""message"":""Authentication failure""}
],""messages"":[],""success"":false}
	at org.hyperledger.fabric_ca.sdk.HFCAClient.getResult(HFCAClient.java:1456)
	at org.hyperledger.fabric_ca.sdk.HFCAClient.post(HFCAClient.java:1374)
	at org.hyperledger.fabric_ca.sdk.HFCAClient.httpPost(HFCAClient.java:1348)
	at org.hyperledger.fabric_ca.sdk.HFCAClient.reenroll(HFCAClient.java:662)
	at org.hyperledger.fabric_ca.sdk.HFCAClient.reenroll(HFCAClient.java:614)
	at org.hyperledger.fabric_ca.sdkintegration.HFCAClientIT.testUserRevokeNullReason(HFCAClientIT.java:500)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:38)
	at junit.framework.TestSuite.runTest(TestSuite.java:252)
	at junit.framework.TestSuite.run(TestSuite.java:247)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
[ERROR] Tests run: 50, Failures: 5, Errors: 2, Skipped: 0, Time elapsed: 1,840.52 s <<< FAILURE! - in org.hyperledger.fabric.sdkintegration.IntegrationSuite
[ERROR] setup(org.hyperledger.fabric.sdkintegration.End2endNodeIT)  Time elapsed: 43.042 s  <<< FAILURE!
java.lang.AssertionError: expected:<2> but was:<0>
	at org.hyperledger.fabric.sdkintegration.End2endNodeIT.setup(End2endNodeIT.java:51)

[ERROR] setup(org.hyperledger.fabric.sdkintegration.End2endJavaIT)  Time elapsed: 348.824 s  <<< FAILURE!
java.lang.AssertionError: Test failed with error : java.lang.AssertionError: Test failed with java.util.concurrent.CompletionException exception java.lang.AssertionError: Not enough endorsers for invoke(move a,b,100):1 endorser error: Channel Channel{id: 202, name: foo} sending proposal with transaction 22bb65c1891f453071c67b2dafce392b06958a5036ac01917f6bcdf71b7282d3 to Peer{ id: 206, name: peer0.org1.example.com, channelName: foo, url: grpcs://localhost:7051} failed because of timeout(300000 milliseconds) expiration. Was verified: false
	at org.hyperledger.fabric.sdkintegration.End2endJavaIT.setup(End2endJavaIT.java:60)

[ERROR] setup(org.hyperledger.fabric.sdkintegration.End2endAndBackAgainNodeIT)  Time elapsed: 235.213 s  <<< ERROR!
org.hyperledger.fabric.sdk.exception.ProposalException: Failed exception message is Channel Channel{id: 226, name: } sending proposal with transaction ef6b54ff2d03c16c241e2edf61ad1c12638b58825fbde28dcf04ea087a506deb to Peer{ id: 220, name: peer0.org1.example.com, channelName: foo, url: grpcs://localhost:7051} failed because of timeout(55000 milliseconds) expiration, status is 500
	at org.hyperledger.fabric.sdkintegration.End2endAndBackAgainNodeIT.setup(End2endAndBackAgainNodeIT.java:36)

[ERROR] setup(org.hyperledger.fabric.sdkintegration.End2endIdemixIT)  Time elapsed: 418.812 s  <<< FAILURE!
java.lang.AssertionError: Not enough endorsers for install :1.  Channel Channel{id: 244, name: } sending proposal with transaction 8cf47942b2d12c876279a8c8dd81593f54112b4dc5219d4dfadb7978ca5c3936 to Peer{ id: 238, name: peer0.org1.example.com, channelName: foo, url: grpcs://localhost:7051} failed because of timeout(55000 milliseconds) expiration
	at org.hyperledger.fabric.sdkintegration.End2endIdemixIT.setup(End2endIdemixIT.java:57)

[ERROR] setup(org.hyperledger.fabric.sdkintegration.PrivateDataIT)  Time elapsed: 201.125 s  <<< FAILURE!
org.junit.ComparisonFailure: Failed compare on channel bar chaincode id ChaincodeID(private_data_cc1_go:github.com/private_data_cc:1) expected value:'300', but got:'250' expected:<[30]0> but was:<[25]0>
	at org.hyperledger.fabric.sdkintegration.PrivateDataIT.queryChaincodeForExpectedValue(PrivateDataIT.java:501)
	at org.hyperledger.fabric.sdkintegration.PrivateDataIT.runChannel(PrivateDataIT.java:346)
	at org.hyperledger.fabric.sdkintegration.PrivateDataIT.runFabricTest(PrivateDataIT.java:185)
	at org.hyperledger.fabric.sdkintegration.PrivateDataIT.setup(PrivateDataIT.java:137)

[ERROR] setup(org.hyperledger.fabric.sdkintegration.End2endLifecycleIT)  Time elapsed: 180.376 s  <<< ERROR!
org.hyperledger.fabric.sdk.exception.TransactionException: Channel v2channel, send transactions failed on orderer OrdererClient{id: 263, channel: v2channel, name: orderer.example.com, url: grpcs://localhost:7050}. Reason:  timeout after 180000 ms.
	at org.hyperledger.fabric.sdkintegration.End2endLifecycleIT.constructChannel(End2endLifecycleIT.java:980)
	at org.hyperledger.fabric.sdkintegration.End2endLifecycleIT.runFabricTest(End2endLifecycleIT.java:195)
	at org.hyperledger.fabric.sdkintegration.End2endLifecycleIT.setup(End2endLifecycleIT.java:178)

[ERROR] setup(org.hyperledger.fabric.sdkintegration.ServiceDiscoveryIT)  Time elapsed: 240.119 s  <<< FAILURE!
junit.framework.AssertionFailedError: expected:<1> but was:<0>
	at org.hyperledger.fabric.sdkintegration.ServiceDiscoveryIT.setup(ServiceDiscoveryIT.java:139)

[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   End2endIdemixIT.setup:57->End2endIT.runFabricTest:209->End2endIT.runChannel:478 Not enough endorsers for install :1.  Channel Channel{id: 244, name: } sending proposal with transaction 8cf47942b2d12c876279a8c8dd81593f54112b4dc5219d4dfadb7978ca5c3936 to Peer{ id: 238, name: peer0.org1.example.com, channelName: foo, url: grpcs://localhost:7051} failed because of timeout(55000 milliseconds) expiration
[ERROR]   End2endJavaIT.setup:60->End2endIT.runFabricTest:209->End2endIT.runChannel:805 Test failed with error : java.lang.AssertionError: Test failed with java.util.concurrent.CompletionException exception java.lang.AssertionError: Not enough endorsers for invoke(move a,b,100):1 endorser error: Channel Channel{id: 202, name: foo} sending proposal with transaction 22bb65c1891f453071c67b2dafce392b06958a5036ac01917f6bcdf71b7282d3 to Peer{ id: 206, name: peer0.org1.example.com, channelName: foo, url: grpcs://localhost:7051} failed because of timeout(300000 milliseconds) expiration. Was verified: false
[ERROR]   End2endNodeIT.setup:51->End2endIT.runFabricTest:209->End2endIT.runChannel:784 expected:<2> but was:<0>
[ERROR]   PrivateDataIT.setup:137->runFabricTest:185->runChannel:346->queryChaincodeForExpectedValue:501 Failed compare on channel bar chaincode id ChaincodeID(private_data_cc1_go:github.com/private_data_cc:1) expected value:'300', but got:'250' expected:<[30]0> but was:<[25]0>
[ERROR]   ServiceDiscoveryIT.setup:139 expected:<1> but was:<0>
[ERROR] Errors: 
[ERROR]   End2endAndBackAgainNodeIT.setup:36->End2endAndBackAgainIT.runFabricTest:253->End2endAndBackAgainIT.reconstructChannel:703 » Proposal
[ERROR]   End2endLifecycleIT.setup:178->runFabricTest:195->constructChannel:980 » Transaction
[INFO] 
[ERROR] Tests run: 50, Failures: 5, Errors: 2, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- maven-failsafe-plugin:3.0.0-M3:verify (failsafe-integration-tests) @ fabric-sdk-java ---
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 32:10 min
[INFO] Finished at: 2019-09-11T10:28:20Z
[INFO] Final Memory: 58M/855M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-failsafe-plugin:3.0.0-M3:verify (failsafe-integration-tests) on project fabric-sdk-java: There are test failures.
[ERROR] 
[ERROR] Please refer to /w/workspace/fabric-sdk-java-master-merge-x86_64/target/failsafe-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
{code}",,bestbeforetoday,btl5037,denyeart,mbwhite,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i0100z:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,btl5037,denyeart,mbwhite,sstone1,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Sep/19 11:10 PM;btl5037;[https://jenkins.hyperledger.org/view/fabric-sdk-java/job/fabric-sdk-java-master-merge-x86_64/61/console]

 We absolutely must triage and clean up the state of CI targets in SDK Java. We are starting migrations to GitHub, and we cannot test our pipelines because we cannot get successes in the SDK;;;","13/Sep/19 1:34 AM;denyeart;[~bestbeforetoday] Can you take a look?;;;","14/Sep/19 1:34 AM;bestbeforetoday;The root cause appears to be that transient data sent by the client along with transaction proposals is not being delivered correctly to Node chaincode. The Node chaincode returns an empty Map for the transient data. The client is sending the transient data correctly and it is received correctly by Go and Java chaincode.;;;","16/Sep/19 6:10 PM;mbwhite;I'll need to grab the latest code and reproduce the failure; sounds like this should be on the fabric-chaincode-node project.;;;","18/Sep/19 9:38 PM;sstone1;The Node.js chaincode is failing to publish chaincode events properly. The event name property of chaincode events is not being set. The test uses transient data to pass in the event name and payload, and the test checks that the correct event was emitted.;;;","26/Sep/19 6:04 PM;sstone1;https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33574;;;",,,,,,,,,,,,,,,,,,,,,,,
X509 Library needs to be locked to 0.3.3,FABCN-230,36286,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,mbwhite,mbwhite,mbwhite,19/Dec/18 11:49 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,08/Jan/19 6:54 PM,,0,,,,,,,"Creating a ClientIdentity object gives this error.

SyntaxError: Unexpected token in JSON at position 0
at JSON.parse (<anonymous>)
at new ClientIdentity (/usr/local/src/node_modules/fabric-shim/lib/chaincode.js:251:38)

*Workaround* within the chaincode explicitly add the x509 library at a 0.3.3 level.

`npm install --save x509@0.3.3`

 


We'll fix at the 0.3.3;   

 

release-1.3 [https://gerrit.hyperledger.org/r/28312] FAB-13364 Lock x509 level

release-1.2 [https://gerrit.hyperledger.org/r/28313] FAB-13364 Lock x509 level

release-1.3 [https://gerrit.hyperledger.org/r/28313] FAB-13364 Lock x509 level",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i003un:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/18 7:51 PM;mbwhite;FYI [https://github.com/Southern/node-x509/pull/75]

We repushed a community PR71 to get node10 support;  this was merged (Pr74 and published as 0.3.4), but then discovered that the certificates as used in Fabric weren't compatible with the original PR - the error above is seen.  

 Pull 75 is a correction that both enables Node10 and also fixes the parsing of the certificates - but is yet to be merged..

Until such time, 0.3.3 is the level of x509 that has to be used. 

 

What would be good to get is the command that creates a certificate originally for the that has issue

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
[NODEJS shim] invokeChaincode alters returned data,FABCN-231,38709,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Works as Expected,mbwhite,florianc,florianc,25/Mar/19 7:08 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,28/Mar/19 11:39 PM,,0,chaincode,Documentation,,,,,"This happens using the Nodejs fabric-shim.

I have two chaincodes, chaincode A (CCA) and chaincode B (CCB).

CCB invoke CCA to get data stored into its worldstate with invokeChaincode function.

 

CCA pass the following data into the shim.success() function:
{code:java}
{\""company\"":\""ad\"",\""email\"":\""ad@i.com\"",\""firstName\"":\""ad\"",\""lastName\"":\""ad\"",\""providerId\"":\""ad\"",\""role\"":\""ad\"",\""status\"":\""ad\""}{code}
CCA code:

 
{code:java}
var Chaincode = class {
 Init(stub) {
 return shim.success();
 }
async Invoke(stub) {
 let ret = stub.getFunctionAndParameters();
 console.info(ret);
let method = this[ret.fcn];
 if (!method) {
 console.error('no function of name:' + ret.fcn + ' found');
 throw new Error('Received unknown function ' + ret.fcn + ' invocation');
 }
 try {
 let payload = await method(stub, ret.params);
 return shim.success(payload);
 } catch (err) {
 console.info(err);
 return shim.error(err);
 }
 }
async query(stub, args) {
 console.info('============= START : Query method ===========');
 if (args.length != 1) {
 throw new Error('Incorrect number of arguments. Expecting 1');
 }
 
 let query = args[0];
 let queryAsBytes = await stub.getState(query);
 if (!queryAsBytes || queryAsBytes.toString().length <= 0) {
 throw new Error('key' + ' does not exist: ');
 }
 console.log(""IN IDENTITY "" + queryAsBytes.toString());
 console.info('============= END : Query method ===========');
 return queryAsBytes;
 
 }
};
{code}
 
 
CCB receives the following data:
{code:java}
\b\u0006\u001au\b�\u0001\u001ap{\""company\"":\""ad\"",\""email\"":\""ad@i.com\"",\""firstName\"":\""ad\"",\""lastName\"":\""ad\"",\""providerId\"":\""ad\"",\""role\"":\""ad\"",\""status\"":\""ad\""}\""@736084b8ec863778a2d4825198fbfb7463313cfc03e0247c1e987ab5215dda95:\u000edefaultchannel\n{code}
 
The same data, but as buffer (original format received):
{code:java}
{\""status\"":200,\""message\"":\""\"",\""payload\"":{\""buffer\"":{\""type\"":\""Buffer\"",\""data\"":[8,6,26,117,8,200,1,26,112,123,34,99,111,109,112,97,110,121,34,58,34,97,100,34,44,34,101,109,97,105,108,34,58,34,97,100,64,105,46,99,111,109,34,44,34,102,105,114,115,116,78,97,109,101,34,58,34,97,100,34,44,34,108,97,115,116,78,97,109,101,34,58,34,97,100,34,44,34,112,114,111,118,105,100,101,114,73,100,34,58,34,97,100,34,44,34,114,111,108,101,34,58,34,97,100,34,44,34,115,116,97,116,117,115,34,58,34,97,100,34,125,34,64,55,51,54,48,56,52,98,56,101,99,56,54,51,55,55,56,97,50,100,52,56,50,53,49,57,56,102,98,102,98,55,52,54,51,51,49,51,99,102,99,48,51,101,48,50,52,55,99,49,101,57,56,55,97,98,53,50,49,53,100,100,97,57,53,58,14,100,101,102,97,117,108,116,99,104,97,110,110,101,108]},\""offset\"":9,\""markedOffset\"":-1,\""limit\"":121,\""littleEndian\"":true,\""noAssert\"":false}}{code}
 
CCB code:
 
 
{code:java}
async createBadge(stub, args) {
 console.info('============= START : Create Badge ===========');
 if (args.length != 6) {
 throw new Error('Incorrect number of arguments. Expecting 6, got ' + args.length);
 }
// Get the badge creator identity from the identity-manager chaincode
 var badgeCreatorQuery = [
 ""query"",
 args[5]
 ];
 try {
 //TODO CLEAN CODE
 var bufferIdentity = await stub.invokeChaincode('identity-manager', badgeCreatorQuery, ""defaultchannel"");
var jsonIdentity = JSON.stringify(bufferIdentity);
 console.log(""L41 "" + jsonIdentity);
 console.log(""L42 "" + Buffer.from(JSON.parse(jsonIdentity).payload.buffer));
 var bufferData = Buffer.from(JSON.parse(jsonIdentity).payload.buffer.data);
 console.log(""L44 "" + bufferData);
// Other stuff
{code}
 

 
 
Despite my questions on [stackoverflow|https://stackoverflow.com/q/55302364/6213883]
and on rocket.chat, I have not been able to fix that problem, or to even know if the data modification is supposed to happen or not.
 
If the data alteration is ""normal"", then I would recommand to change the function to not do that (unless there is a reason of course). Moreover, It could be quite nice that the function returns exactly the same data in the exact same format that we returned it previously. It would be more intuitive and logical in my opinion.
 
 
Alos, the documentation about that function is not clear at all. It just says it returns a promise, but nothing about data format.
 ",,florianc,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00hif:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),florianc,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/19 12:57 AM;mbwhite;There is no intentional data manipulation, and the level of the API you're working at (the init/invoke) level works purely in terms of buffers - the data format within that is entirely left to the developer of the chaincode.   You are free to choose the format that you wish - the only thing is when you give it to the `shim.success()` it has to be a buffer.

Firstly I would suggest taking a look at the updated programming model - that doesn't need you to return buffers and you might find it easier to work with. 

Though you are perfectly fine to keep working with the init/invoke api however I'm a bit confused as the exact sequence of calls... Your StackOverflow is referring to  other systems.  Is this purely between chaincodes that you believe that is data modification. 

 

 

 

 

 
 
 ;;;","26/Mar/19 4:54 PM;florianc;Thank you for your response [~mbwhite].

I unfortunately cannot use the new programming model as I work with IBM Blockchain platform that is using Fabric 1.2.1.

Indeed my stackoverflow is not very clear about fabric. It is because I originally wanted to make it a javascript question and not a Fabric one.

The flow is actually quite simple: I call a ""query"" function in a chaincode from another chaincode and return data as the getState gives it to me. But as shown in the example, when retrieving the data, some unicode characters come in at the beginning of the buffer and the channel ID is put at the end of the buffer, forcing me to extract the data with custom function.

So far it is not really a problem as my data, in JSON, are quite simple (no nesting or anything else), but in the case of complex objects, extracting data from this result would become quite hard.;;;","26/Mar/19 10:27 PM;mbwhite;Thanks [~florianc] ..

On the Fabric1.2.1 topic you are able to use the Chaincode side - as the chaincode programming model sits on top of the shim rather than replaces it - the protocol between the shim and the peer is unchanged. If you wrote your chaincode using `fabric-contract-api@1.4.0` and `fabric-contract-api@1.4.0` `fabric-shim@1.4.0` you should be good to go.

To confirm you usecase.. is this correct?

 

let response = await stub.invokeChaincode('secondChaincode',['fna'],'secondChannel)

let str = response.payload.toString('utf8')

let obj = JSON.parse(str)

 

 ;;;","27/Mar/19 9:55 PM;florianc;Not exactly what I am using. So far I am using:
 {color:#569cd6}var{color}{color:#d4d4d4} bufferIdentity {color}{color:#d4d4d4}={color} {color:#569cd6}await{color}{color:#d4d4d4} stub.invokeChaincode({color}{color:#ce9178}'secondchaincode'{color}{color:#d4d4d4}, myquery, {color}{color:#ce9178}""sameOrDifferentChannel""{color}{color:#d4d4d4});{color}

{color:#569cd6}var{color}{color:#d4d4d4} stringifiedIdentity {color}{color:#d4d4d4}={color}{color:#d4d4d4} JSON.stringify(bufferIdentity);{color}
 {color:#569cd6}var{color}{color:#d4d4d4} bufferData {color}{color:#d4d4d4}={color}{color:#d4d4d4} Buffer.from(JSON.parse(stringifiedIdentity).payload.buffer.data).toString();{color}
 With this, I get the altered data. But before going further, with the ""old"" programming model, in my functions, shoud I:
 * Return my data without doing anything to it (like a JSON, a string, etc)

{color:#569cd6}return{color}{color:#d4d4d4} myJson;{color} * Return my data as a buffer

{color:#569cd6}return{color}{color:#d4d4d4} Buffer.from(myJson);{color}
  

I am asking this because I am getting confused while reading more about this.
 * Does shims.success already build the buffer?
 * Do I have to return data in a buffer I made myself?

 

No one in rocket.chat was able to answer clearly this question.

 

 ;;;","27/Mar/19 11:16 PM;mbwhite;The shim.success() is expecting a buffer, that you've created, to be supplied as an argument. If one is not supplied at all, then an empty buffer is created for you; but this is the only time the buffer is created.

This buffer can contain data in whatever format you like; typically it will be an object made into JSON, and then put into a Buffer in utf8 format.

 

So always return the data in a buffer constructed yourself.

 

 ;;;","28/Mar/19 12:45 AM;florianc;Alright. Then I have made a mistake somewhere. Thank you very much for your support.

I will most likely be able to check/fix my work next week. I will come back to you ASAP (and I hope we can close this issue).

 ;;;","28/Mar/19 9:23 PM;florianc;Hi. I did a test, and unfortunately I got the same result as before:

I have a function in chaincode B that queries the ledger and returns the result:
{color:#569cd6}async{color}{color:#d4d4d4} query(stub, args) {{color}
{color:#d4d4d4} console.info({color}{color:#ce9178}'============= START : Query method ==========='{color}{color:#d4d4d4});{color}
{color:#569cd6}if{color}{color:#d4d4d4} (args.length {color}{color:#d4d4d4}!={color} {color:#b5cea8}1{color}{color:#d4d4d4}) {{color}
{color:#569cd6}throw{color} {color:#569cd6}new{color}{color:#d4d4d4} Error({color}{color:#ce9178}'Incorrect number of arguments. Expecting 1'{color}{color:#d4d4d4});{color}
{color:#d4d4d4} }{color}

{color:#569cd6}let{color}{color:#d4d4d4} query {color}{color:#d4d4d4}={color}{color:#d4d4d4} args[{color}{color:#b5cea8}0{color}{color:#d4d4d4}];{color}
{color:#569cd6}let{color}{color:#d4d4d4} queryAsBytes {color}{color:#d4d4d4}={color} {color:#569cd6}await{color}{color:#d4d4d4} stub.getState(query);{color}
{color:#569cd6}if{color}{color:#d4d4d4} ({color}{color:#d4d4d4}!{color}{color:#d4d4d4}queryAsBytes {color}{color:#d4d4d4}||{color}{color:#d4d4d4} queryAsBytes.toString().length {color}{color:#d4d4d4}<={color} {color:#b5cea8}0{color}{color:#d4d4d4}) {{color}
{color:#569cd6}throw{color} {color:#569cd6}new{color}{color:#d4d4d4} Error({color}{color:#ce9178}'key'{color} {color:#d4d4d4}+{color} {color:#ce9178}' does not exist: '{color}{color:#d4d4d4});{color}
{color:#d4d4d4} }{color}
{color:#d4d4d4} console.info({color}{color:#ce9178}'============= END : Query method ==========='{color}{color:#d4d4d4});{color}
{color:#569cd6}let{color}{color:#d4d4d4} toReturn {color}{color:#d4d4d4}={color}{color:#d4d4d4} Buffer.from(JSON.stringify(queryAsBytes));{color}
{color:#569cd6}return{color}{color:#d4d4d4} toReturn;{color}

{color:#d4d4d4} }{color}
 

The function is invoked from chaincode A with the following:
{color:#569cd6}async{color}{color:#d4d4d4} createBadge(stub, args) {{color}
{color:#d4d4d4} console.info({color}{color:#ce9178}'============= START : Create Badge ==========='{color}{color:#d4d4d4});{color}
{color:#569cd6}if{color}{color:#d4d4d4} (args.length {color}{color:#d4d4d4}!={color} {color:#b5cea8}6{color}{color:#d4d4d4}) {{color}
{color:#569cd6}throw{color} {color:#569cd6}new{color}{color:#d4d4d4} Error({color}{color:#ce9178}'Incorrect number of arguments. Expecting 6, got '{color} {color:#d4d4d4}+{color}{color:#d4d4d4} args.length);{color}
{color:#d4d4d4} }{color}

{color:#6a9955}// Get the badge creator identity from the identity-manager chaincode{color}
{color:#569cd6}var{color}{color:#d4d4d4} query{color}{color:#d4d4d4}={color}{color:#d4d4d4} [{color}
{color:#ce9178}""query""{color}{color:#d4d4d4},{color}
{color:#d4d4d4} args[{color}{color:#b5cea8}5{color}{color:#d4d4d4}]{color}
{color:#d4d4d4} ];{color}
{color:#569cd6}try{color}{color:#d4d4d4} {{color}
{color:#569cd6}var{color}{color:#d4d4d4} bufferIdentity {color}{color:#d4d4d4}={color} {color:#569cd6}await{color}{color:#d4d4d4} stub.invokeChaincode({color}{color:#ce9178}'identity-manager'{color}{color:#d4d4d4}, query, {color}{color:#ce9178}""defaultchannel""{color}{color:#d4d4d4});{color}

{color:#d4d4d4} console.log({color}{color:#ce9178}""TEST ""{color} {color:#d4d4d4}+{color}{color:#d4d4d4} Buffer.from(bufferIdentity.payload.buffer).toString({color}{color:#ce9178}'utf-8'{color}{color:#d4d4d4}));{color}
 

It returns me the following result:

{{���\{""type"":""Buffer"",""data"":[123,34,99,111,109,112,97,110,121,34,58,34,105,98,109,34,44,34,101,109,97,105,108,34,58,34,105,98,109,64,97,100,109,105,110,46,99,111,109,34,44,34,102,105,114,115,116,78,97,109,101,34,58,34,97,100,109,105,110,34,44,34,108,97,115,116,78,97,109,101,34,58,34,97,100,109,105,110,34,44,34,112,114,111,118,105,100,101,114,73,100,34,58,34,108,101,100,103,101,114,73,110,105,116,34,44,34,114,111,108,101,34,58,34,99,104,97,105,110,46,97,100,109,105,110,105,115,116,114,97,116,111,114,34,44,34,115,116,97,116,117,115,34,58,34,79,75,34,125]}""@a5dadb0af706a18dd0eb43736a1ce3268187c4643a3c9d5d454e48d86d32a4b5:defaultchannel}}

 

The buffer only stringified (JSON.stringify) returns:

{color:#2d2d2d}{""status"":200,""message"":"""",""payload"":\{""buffer"":{""type"":""Buffer"",""data"":[8,6,26,177,4,8,200,1,26,171,4,123,34,116,121,112,101,34,58,34,66,117,102,102,101,114,34,44,34,100,97,116,97,34,58,91,49,50,51,44,51,52,44,57,57,44,49,49,49,44,49,48,57,44,49,49,50,44,57,55,44,49,49,48,44,49,50,49,44,51,52,44,53,56,44,51,52,44,49,48,53,44,57,56,44,49,48,57,44,51,52,44,52,52,44,51,52,44,49,48,49,44,49,48,57,44,57,55,44,49,48,53,44,49,48,56,44,51,52,44,53,56,44,51,52,44,49,48,53,44,57,56,44,49,48,57,44,54,52,44,57,55,44,49,48,48,44,49,48,57,44,49,48,53,44,49,49,48,44,52,54,44,57,57,44,49,49,49,44,49,48,57,44,51,52,44,52,52,44,51,52,44,49,48,50,44,49,48,53,44,49,49,52,44,49,49,53,44,49,49,54,44,55,56,44,57,55,44,49,48,57,44,49,48,49,44,51,52,44,53,56,44,51,52,44,57,55,44,49,48,48,44,49,48,57,44,49,48,53,44,49,49,48,44,51,52,44,52,52,44,51,52,44,49,48,56,44,57,55,44,49,49,53,44,49,49,54,44,55,56,44,57,55,44,49,48,57,44,49,48,49,44,51,52,44,53,56,44,51,52,44,57,55,44,49,48,48,44,49,48,57,44,49,48,53,44,49,49,48,44,51,52,44,52,52,44,51,52,44,49,49,50,44,49,49,52,44,49,49,49,44,49,49,56,44,49,48,53,44,49,48,48,44,49,48,49,44,49,49,52,44,55,51,44,49,48,48,44,51,52,44,53,56,44,51,52,44,49,48,56,44,49,48,49,44,49,48,48,44,49,48,51,44,49,48,49,44,49,49,52,44,55,51,44,49,49,48,44,49,48,53,44,49,49,54,44,51,52,44,52,52,44,51,52,44,49,49,52,44,49,49,49,44,49,48,56,44,49,48,49,44,51,52,44,53,56,44,51,52,44,57,57,44,49,48,52,44,57,55,44,49,48,53,44,49,49,48,44,52,54,44,57,55,44,49,48,48,44,49,48,57,44,49,48,53,44,49,49,48,44,49,48,53,44,49,49,53,44,49,49,54,44,49,49,52,44,57,55,44,49,49,54,44,49,49,49,44,49,49,52,44,51,52,44,52,52,44,51,52,44,49,49,53,44,49,49,54,44,57,55,44,49,49,54,44,49,49,55,44,49,49,53,44,51,52,44,53,56,44,51,52,44,55,57,44,55,53,44,51,52,44,49,50,53,93,125,34,64,97,98,49,49,48,100,57,99,97,100,99,98,99,101,102,56,102,102,102,57,57,53,99,98,102,55,54,52,97,52,48,53,50,50,101,97,97,50,55,99,57,49,52,97,102,51,53,99,50,102,49,99,55,54,52,53,100,56,49,54,98,55,54,48,58,14,100,101,102,97,117,108,116,99,104,97,110,110,101,108]},""offset"":11,""markedOffset"":-1,""limit"":566,""littleEndian"":true,""noAssert"":false}}{color}

 

{color:#2d2d2d}There are still these weird unicode characters at the beginning and the network ID + channel name at the end. I expect it is a problem from the IBM Blockchain platform?{color};;;","28/Mar/19 10:54 PM;florianc;Ok. I know why (it is pretty obvious all things considered).

The properties ""offset"" and ""limit"" actually represents the ""position"" of my actual data, without all the other unwanted stuff. So, example to get the data without doing all my for loop stuffs:
{color:#d4d4d4}console.log(data.payload.buffer.data.splice({color}{color:#b5cea8}0{color}{color:#d4d4d4},data.payload.offset));{color}
{color:#d4d4d4}console.log(data.payload.buffer.data.splice(data.payload.limit {color}{color:#d4d4d4}-{color}{color:#d4d4d4} data.payload.offset, data.payload.buffer.data.length));{color}
{color:#569cd6}var{color}{color:#d4d4d4} buf {color}{color:#d4d4d4}={color}{color:#d4d4d4} Buffer.from(data.payload.buffer.data).toString();{color}
{color:#d4d4d4}console.log(buf);{color}
{color:#569cd6}var{color}{color:#d4d4d4} json {color}{color:#d4d4d4}={color}{color:#d4d4d4} JSON.parse(Buffer.from(JSON.parse(buf)).toString());{color}
{color:#d4d4d4}console.log(json){color}
 

Et voila!

 

Thank you for your support and sorry for brigging here a problem that does not concern fabric. This issue can be closed.

 ;;;","28/Mar/19 11:28 PM;mbwhite;Pleased it's working - I'd also suggest just trying payload.buffer.toString('utf8')  I don't think you need to go so far into the data structure.

My local test that was ok .;;;",,,,,,,,,,,,,,,,,,,,
Unable to use components which reference other components,FABCN-232,38282,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,08/Mar/19 1:16 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,19/Mar/19 6:23 PM,,0,,,,,,,Components are currently compiled as separate schemas for use in data marshal. This needs to be updated to allow for components which reference other components.,,awjh-ibm,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00f27:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Mar/19 8:23 PM;mbwhite;[~awjh-ibm]  have merged the master version - are you able to back port please to 1.4.1?  Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make instantiate function the default called on instantiate,FABCN-233,35281,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,SamRasha,caroline-church,caroline-church,12/Nov/18 10:46 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,21/Nov/18 7:00 PM,,0,,,,,,,"The new fabric samples have an instantiate function called instantiate, however the default is init so you have to say you want to call instantiate. This should be the default",,caroline-church,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzyfz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caroline-church,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Nov/18 11:17 PM;mbwhite;[~caroline-church]  Today, if nothing is given, then the no actual function is run *per se* ... the code just retruns and says 'ok';  no ctual function called *init* is run. 

 

But we can change to say 'if nothing is specified, and there is an 'instantiate' function call it. 

If it's not there then do nothing. 

 

Does that seem valuable?;;;","14/Nov/18 11:35 PM;caroline-church;Yes that would work :);;;","21/Nov/18 7:00 PM;mbwhite;We gave this some more consideration; we would prefer to not implement this feature. 
 * All the transaction functions are peers of each other; there are not rules that a funciton should have a given name. 
 * The developer has the flexability as well to split their implementation into different classes ; previously called namespace, but know referred to as contact name.  We can't know ahead of time really what to call
 * If there's no supplied function on the instantiate call then there is no error.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction type validation,FABCN-234,37195,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,Jakeeyturner,Jakeeyturner,29/Jan/19 1:01 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,06/Feb/19 7:02 PM,,0,,,,,,,"When submitting a transaction which requires a number as part of the input, an error is thrown as fabric-network doesn't correctly verify the arguments.

Submitting a transaction with the input: 

 
{code:java}
['carNumber', 'make', 'model', 'color', 'owner', 123]
{code}
Produces the error:

 
{code:java}
Error submitting transaction:  Error: Transaction arguments must be strings: ""carNumber"", ""make"", ""model"", ""color"", ""owner"", 123     at verifyArguments (/Users/jake/Documents/DIRECTORY/common/temp/node_modules/fabric-network/lib/transaction.js:31:9)     at Transaction.submit (/Users/jake/Documents/DIRECTORY/common/temp/node_modules/fabric-network/lib/transaction.js:110:3)     at Contract.submitTransaction (/Users/jake/Documents/DIRECTORY/common/temp/node_modules/fabric-network/lib/contract.js:145:39)     at FabricProxy.submitTransaction (/Users/jake/Documents/DIRECTORY/DIR-API/dist/util/fabric-proxy.js:166:50)     at app.route.post (/Users/jake/Documents/DIRECTORY/DIR-API/dist/controllers/transactions.js:26:57)     at Layer.handle [as handle_request] (/Users/jake/Documents/DIRECTORY/common/temp/node_modules/express/lib/router/layer.js:95:5)     at next (/Users/jake/Documents/DIRECTORY/common/temp/node_modules/express/lib/router/route.js:137:13)     at Route.dispatch (/Users/jake/Documents/DIRECTORY/common/temp/node_modules/express/lib/router/route.js:112:3)     at Layer.handle [as handle_request] (/Users/jake/Documents/DIRECTORY/common/temp/node_modules/express/lib/router/layer.js:95:5)     at /Users/jake/Documents/DIRECTORY/common/temp/node_modules/express/lib/router/index.js:281:22 {code}
 

 ",,awjh-ibm,Jakeeyturner,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i0099z:",,,,Unset,Unset,,,,,,,,,,,,,,"1. Install and instantiate the following sample:

import { Context, Contract, Transaction, Returns } from 'fabric-contract-api';

class Car {
    public docType?: string;
    public color: string;
    public make: string;
    public model: string;
    public owner: string;
    public someNumber: number;
}

export class FabCar extends Contract {
    constructor() {
        super('org.example.fabcar');
    }

    @Transaction()
    public async init(ctx: Context) {
        // Fabric runs the init function by default when instantiating
        // or upgrading smart contracts
    }

    @Transaction()
    public async initLedger(ctx: Context) {
        console.info('============= START : Initialize Ledger ===========');
        const cars: Car[] = [
            {
                color: 'blue',
                make: 'Toyota',
                model: 'Prius',
                owner: 'Tomoko',
                someNumber: 1
            },
            {
                color: 'red',
                make: 'Ford',
                model: 'Mustang',
                owner: 'Brad',
                someNumber: 1
            },
            {
                color: 'green',
                make: 'Hyundai',
                model: 'Tucson',
                owner: 'Jin Soo',
                someNumber: 1
            },
            {
                color: 'yellow',
                make: 'Volkswagen',
                model: 'Passat',
                owner: 'Max',
                someNumber: 1
            },
            {
                color: 'black',
                make: 'Tesla',
                model: 'S',
                owner: 'Adriana',
                someNumber: 1
            },
            {
                color: 'purple',
                make: 'Peugeot',
                model: '205',
                owner: 'Michel',
                someNumber: 1
            },
            {
                color: 'white',
                make: 'Chery',
                model: 'S22L',
                owner: 'Aarav',
                someNumber: 1
            },
            {
                color: 'violet',
                make: 'Fiat',
                model: 'Punto',
                owner: 'Pari',
                someNumber: 1
            },
            {
                color: 'indigo',
                make: 'Tata',
                model: 'Nano',
                owner: 'Valeria',
                someNumber: 1
            },
            {
                color: 'brown',
                make: 'Holden',
                model: 'Barina',
                owner: 'Shotaro',
                someNumber: 1
            },
        ];

        for (let i = 0; i < cars.length; i++) {
            cars[i].docType = 'car';
            await ctx.stub.putState('CAR' + i, Buffer.from(JSON.stringify(cars[i])));
            console.info('Added <--> ', cars[i]);
        }
        console.info('============= END : Initialize Ledger ===========');
    }

    @Transaction(false)
    @Returns('string')
    public async queryCar(ctx: Context, carNumber: string): Promise<string> {
        const carAsBytes = await ctx.stub.getState(carNumber); // get the car from chaincode state
        if (!carAsBytes || carAsBytes.length === 0) {
            throw new Error(`${carNumber} does not exist`);
        }
        console.log(carAsBytes.toString());
        return carAsBytes.toString();
    }

    @Transaction()
    public async createCar(ctx: Context, carNumber: string, make: string, model: string, color: string, owner: string, someNumber: number) {
        console.info('============= START : Create Car ===========');

        const car: Car = {
            color,
            docType: 'car',
            make,
            model,
            owner,
            someNumber
        };

        await ctx.stub.putState(carNumber, Buffer.from(JSON.stringify(car)));
        console.info('============= END : Create Car ===========');
    }

    @Transaction(false)
    @Returns('string')
    public async queryAllCars(ctx: Context): Promise<string> {
        const startKey = 'CAR0';
        const endKey = 'CAR999';

        const iterator = await ctx.stub.getStateByRange(startKey, endKey);

        const allResults = [];
        while (true) {
            const res = await iterator.next();

            if (res.value && res.value.value.toString()) {
                console.log(res.value.value.toString('utf8'));

                const Key = res.value.key;
                let Record;
                try {
                    Record = JSON.parse(res.value.value.toString('utf8'));
                } catch (err) {
                    console.log(err);
                    Record = res.value.value.toString('utf8');
                }
                allResults.push({ Key, Record });
            }
            if (res.done) {
                console.log('end of data');
                await iterator.close();
                console.info(allResults);
                return JSON.stringify(allResults);
            }
        }
    }

    @Transaction()
    public async changeCarOwner(ctx: Context, carNumber: string, newOwner: string) {
        console.info('============= START : changeCarOwner ===========');

        const carAsBytes = await ctx.stub.getState(carNumber); // get the car from chaincode state
        if (!carAsBytes || carAsBytes.length === 0) {
            throw new Error(`${carNumber} does not exist`);
        }
        const car: Car = JSON.parse(carAsBytes.toString());
        car.owner = newOwner;

        await ctx.stub.putState(carNumber, Buffer.from(JSON.stringify(car)));
        console.info('============= END : changeCarOwner ===========');
    }

}
export const contracts: any[] = [ FabCar ];

2. Submit a createCar transaction using the following input:
[""carNumber"",""make"",""model"",""color"",""owner"",123]

",,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,Jakeeyturner,mbwhite,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jan/19 11:21 PM;mbwhite;Within the `fabric-contract-api/jsontransactionserliazer.js` we need to add string-> number type coercion.

I.e. ensure that the types that come from the wire protocol should be co-erced into the types that the schema says they should be. ;;;","04/Feb/19 7:33 PM;awjh-ibm;Not sure but is this an issue with the contract-api? Looks to me like an issue with the SDK which only takes an array of strings. We take those strings and coerce them to the correct values. 123 should therefore be submitted as a string, it will be converted later;;;","04/Feb/19 8:08 PM;Jakeeyturner;When submitting:
{code:java}
[""carNumber"", ""make"",""model"",""color"",""owner"",""2""]{code}
This error is thrown
{code:java}
  DIR-api:ContractProcess ERROR:2019-02-04T11:03:47.315Z ERROR [contracts-spi/chaincodefromcontract.js] 
  DIR-api:ContractProcess 	{""message"":""Unable to validate parameter due to [{\""keyword\"":\""type\"",\""dataPath\"":\""\"",\""schemaPath\"":\""#/type\"",\""params\"":{\""type\"":\""number\""},\""message\"":\""should be number\""}]"",""stack"":""Error: Unable to validate parameter due to [{\""keyword\"":\""type\"",\""dataPath\"":\""\"",\""schemaPath\"":\""#/type\"",\""params\"":{\""type\"":\""number\""},\""message\"":\""should be number\""}]\n    at DataMarshall.handleParameters (/Users/jake/Documents/DIRECTORY/contracts/DIR-contract/node_modules/fabric-shim/lib/contract-spi/datamarshall.js:118:27)\n    at ChaincodeFromContract.invokeFunctionality (/Users/jake/Documents/DIRECTORY/contracts/DIR-contract/node_modules/fabric-shim/lib/contract-spi/chaincodefromcontract.js:315:49)\n    at ChaincodeFromContract.Invoke (/Users/jake/Documents/DIRECTORY/contracts/DIR-contract/node_modules/fabric-shim/lib/contract-spi/chaincodefromcontract.js:278:21)\n    at handleMessage (/Users/jake/Documents/DIRECTORY/contracts/DIR-contract/node_modules/fabric-shim/lib/handler.js:614:47)\n    at ChaincodeSupportClient.handleTransaction (/Users/jake/Documents/DIRECTORY/contracts/DIR-contract/node_modules/fabric-shim/lib/handler.js:356:9)\n    at ClientDuplexStream.<anonymous> (/Users/jake/Documents/DIRECTORY/contracts/DIR-contract/node_modules/fabric-shim/lib/handler.js:296:30)\n    at emitOne (events.js:116:13)\n    at ClientDuplexStream.emit (events.js:211:7)\n    at addChunk (_stream_readable.js:263:12)\n    at readableAddChunk (_stream_readable.js:250:11)""}
{code}
The error response that comes from the peer is:
{code:java}
2019-02-04T11:03:47.318Z - warn: [Transaction]: _validatePeerResponses: Received error response from peer: message=transaction returned with failure: Error: Unable to validate parameter due to [{""keyword"":""type"",""dataPath"":"""",""schemaPath"":""#/type"",""params"":{""type"":""number""},""message"":""should be number""}], stack=Error: transaction returned with failure: Error: Unable to validate parameter due to [{""keyword"":""type"",""dataPath"":"""",""schemaPath"":""#/type"",""params"":{""type"":""number""},""message"":""should be number""}]
    at self._endorserClient.processProposal (/Users/jake/Documents/DIRECTORY/common/temp/node_modules/fabric-client/lib/Peer.js:140:36)
    at Object.onReceiveStatus (/Users/jake/Documents/DIRECTORY/common/temp/node_modules/grpc/src/client_interceptors.js:1191:9)
    at InterceptingListener._callNext (/Users/jake/Documents/DIRECTORY/common/temp/node_modules/grpc/src/client_interceptors.js:564:42)
    at InterceptingListener.onReceiveStatus (/Users/jake/Documents/DIRECTORY/common/temp/node_modules/grpc/src/client_interceptors.js:614:8)
    at callback (/Users/jake/Documents/DIRECTORY/common/temp/node_modules/grpc/src/client_interceptors.js:841:24), status=500, , url=grpc://localhost:7051, name=peer0.org1.example.com, name=peer0.org1.example.com, request-timeout=120001, grpc.ssl_target_name_override=peer0.org1.example.com, grpc.default_authority=peer0.org1.example.com, grpc.max_receive_message_length=-1, grpc.max_send_message_length=-1, isProposalResponse=true
{code};;;","04/Feb/19 8:45 PM;awjh-ibm;Verified, that when sending numbers the above happens;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Exception from Init not returned as error,FABCN-235,40760,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,Jakeeyturner,Jakeeyturner,24/Jun/19 7:40 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,26/Jun/19 9:28 PM,,0,,,,,,,"If an exception is thrown from the init() or invoke() methods rather than returning an error code - this is not handled by the lower level shim API.  An unhandled promised rejection occurs. 

 

handler.js:handleMessage() would need to put a try-catch around lines 616-622 - and treat anything thrown as an error.",,Jakeeyturner,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00sec:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Jakeeyturner,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/19 9:28 PM;mbwhite;After a discussion with [~jtonline]  the conclusion is that the approach of the `init/invoke` programming model adopts the approach of all errors /success should be reported via the success response return values.

Therefore omitting the try{} catch block is a programming error. 

In addition the Contract programming model is recommended; and has this extra protection;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
commercial paper tutorial fails probably due to breaking changes in 1.4.1 contract impl,FABCN-236,39527,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,jtonline,davidkel,davidkel,26/Apr/19 4:49 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,01/Jul/19 11:28 PM,,0,,,,,,,"Following the tutorial it's not possible to instantiate the commercial paper for magnetocorp. The instantiate fails with the following message

{code:java}
|Error: [""Missing contract org.hyperledger.fabric in metadata""]
    at new ChaincodeFromContract (/usr/local/src/node_modules/fabric-shim/lib/contract-spi/chaincodefromcontract.js:63:19)
    at Function.register (/usr/local/src/node_modules/fabric-shim/lib/contract-spi/bootstrap.js:35:27)
    at Function.bootstrap (/usr/local/src/node_modules/fabric-shim/lib/contract-spi/bootstrap.js:49:19)
    at <anonymous>
{code}

See also https://stackoverflow.com/questions/55856395/hyperledger-fabric-unable-to-instantiate-missing-contract-org-hyperledger-fa",,davidkel,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00m3z:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/May/19 1:11 AM;jtonline;Looks like this is due to the contract-metadata introduced in https://github.com/hyperledger/fabric-samples/commit/ec9eb7fa7308e7bac9182c7ca0bf0a77bcc16bf1;;;","13/May/19 6:27 AM;davidkel;Although the contract-metadata has been removed from the commercial paper example, it's likely that there is still a problem with the contract processing in 1.4.1 as surely a user shouldn't have to declare anything that is provided by the system contract.;;;","01/Jul/19 11:28 PM;jtonline;[https://gerrit.hyperledger.org/r/c/fabric-samples/+/31191];;;",,,,,,,,,,,,,,,,,,,,,,,,,,
annotated metadata is not validated,FABCN-237,38602,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Works as Expected,,davidkel,davidkel,20/Mar/19 10:41 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,01/Nov/19 7:41 PM,,0,cc-triaged,,,,,,"Incorrectly created an annotation as follows

{noformat}
@Info({
    license: 'http://www.apache.org/licenses/LICENSE-2.0',
})
{noformat}
Which actually isn't valid as the metadata.json it creates is as follows

{noformat}
            ""info"": {
                ""license"": ""http://www.apache.org/licenses/LICENSE-2.0"",
                ""name"": ""MyContract"",
                ""version"": """"
            }
{noformat}
Which if placed into metadata.json will be rejected by the validator

So is there a way to validate annotations at compile time as it seems the code assumes that the metadata generated from the annotations is valid.",,davidkel,denyeart,jyellick,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00gwf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,denyeart,jyellick,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Mar/19 10:31 PM;mbwhite;Possible solutions:

Once would be to implement some more checking within the annotations themselves; the other would be to do a validation of the schema as a whole after the data from the annotations had been processed.

Currently would favor the former; as fail as early as possible, but also it means that if the annotations package was taken by itself; then it contains the schema as well.

Each annotation (see fabric-contract-api/annotations) therefore when processing the data would need to validate against the specific part of the schema. As elements of JSON schema are themselves schemas this is perfectly reasonable to do. A lot of the annotations use a utility function to form up the data. (see fabric-contract-api/lib/annotations/utils.js);;;","29/Mar/19 10:31 PM;mbwhite;[~jtonline]  good introduction to metadata :)

 ;;;","17/Jul/19 4:06 AM;denyeart;[~mbwhite] I've changed Fix Version to v2.0.0 do you agree?;;;","25/Sep/19 12:34 AM;jyellick;[~mbwhite] any update on this?;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"Returning a simple string from a contract, string gets wrapped in double quotes",FABCN-238,38375,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Invalid: Works as Expected,,davidkel,davidkel,12/Mar/19 6:57 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,26/Mar/19 1:09 AM,,0,,,,,,,"If I have no schema defined for my contract. If I return a string then the buffer return contains the string wrapped in double quotes. So if I return `mystr`, the resulting buffer content is actually `""mystr""`.",,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-257,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00flr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/19 1:09 AM;mbwhite;To quote from:

As odd as it seems; this is working correctly.

1) The contract is written in JavaScript and there is no additional metadata to describe the types. Therefore contract api needs to make an assumption about return types

2) This assumption is therefore to JSON.stringify(..) what the contract transactional functional returns, before converting it to a buffer to return

3) The contract though itself is returning a string - this is then being double stringified as a consequence.

Fix is to the contract sample

 

https://jira.hyperledger.org/browse/FAB-14170;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failure of some tests does not fail build,FABCN-239,37244,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,30/Jan/19 7:01 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,30/Jan/19 8:44 PM,,0,,,,,,,"fabric-chaincode-node, the way the process exit code was returned from the tests meant that the unit tests could fail and the build would assume success. 

 

/cc  [~nkl199]

 ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i009kf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jan/19 7:04 PM;mbwhite;https://gerrit.hyperledger.org/r/29011 [FAB-13954] Correct build failures;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging missing useful information,FABCN-240,39322,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,awjh-ibm,awjh-ibm,15/Apr/19 10:44 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,28/May/19 5:27 PM,,0,,,,,,,Logging is missing key information which is not printed out to the console. Logs for @Object and @Property I have noticed are affected but others may or may not have the same issue,,awjh-ibm,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-176,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00l27:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/May/19 7:26 PM;mbwhite;https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/31480 [FAB-15188] Return missing information;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove to.be.ok calls in unit tests,FABCN-241,42380,,Test Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Lowest,Done,lesleyannj,heatherp,heatherp,18/Sep/19 12:18 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,10/Sep/20 10:59 PM,,0,cc-triaged,good-first-issue,,,,,"Not recommended by chai :[https://www.chaijs.com/api/bdd/]
and we can do better",,lesleyannj,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,Automated,,Unset,No,,,"1|i01b8a:ji",,,,Unset,Unset,7May to 14May,15 May to 22 May 2020,22 May to 29 May,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,4 Sep to 11 Sep 20,(Please add steps to reproduce),,Unset,,,,,,Pass,"rush rebuild - pass
rush test:e2e - pass
rush test:fv - pass",Unset,,(Please add usage information),lesleyannj,mbwhite,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Jan/20 5:44 PM;mbwhite;FYI Have merged the latest PR;;;","09/Jan/20 8:32 PM;lesleyannj;[~mbwhite]  

I have made all the basic changes of to.be.ok chaing to to.be.true. 

However, 8 to.be.ok's remain.  2 in shim-crypto.js and 6 in handler.js. 

They will required more in-depth knowledge of the tests.  They all relate to calledWithNew references which may be being used incorrectly.;;;","12/May/20 10:17 PM;mbwhite;[~lesleyannj]  I've had a look at the tests that still have these... the to.be.ok lines that are left can all be removed without loss of testing. 

 ;;;","10/Sep/20 10:58 PM;lesleyannj;Changes made in master and release-2.x branches.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
published contract schema doesn't match the 1.4.1 delivered schema,FABCN-242,39249,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Lowest,Invalid: Not Supported,,davidkel,davidkel,12/Apr/19 12:42 AM,04/Jan/20 9:20 PM,28/Oct/23 2:28 AM,04/Jan/20 9:20 PM,,0,cc-triaged,,,,,,"On the release notes, it states the schema can be found here
https://fabric-shim.github.io/contract-schema.json

This schema doesn't appear to match the one shipped in 1.4.1 of fabric-chaincode-node",,davidkel,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00knr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Sep/19 12:06 AM;jyellick;[~mbwhite] is this being tracked?;;;","04/Jan/20 9:20 PM;davidkel;Withdrawing as not an issue for me and there is no other interest registered;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-end-2-end-daily <x86_64> <release-1.3> failed once in BYFN Node Chaincode test. NPM Error.,FABCN-243,35846,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Environment Issue,,sambhavdutt,sambhavdutt,04/Dec/18 1:33 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,05/Dec/18 6:08 PM,,0,ci-failure,,,,,,"The fabric-end-2-end-daily <x86_64> <release-1.3> failed first time in BYFN Node Chaincode test due to NPM Error. This test passed all tests in the last build. Observed the below errors,
, 

{code:java}
00:23:01.933 Error: could not assemble transaction, err proposal response was not 
successful, error code 500, msg error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 ""npm WARN deprecated @types/winston@2.4.4: This is a stub types definition. winston provides its own type definitions, so you do not need this installed.
00:23:01.933 npm WARN deprecated boom@4.3.1: This version is no longer maintained. Please upgrade to the latest version.
00:23:01.933 npm ERR! code EINTEGRITY
00:23:01.933 npm ERR! sha512-xmhA11h2XhqpSVzDAmoQAYdNQ+swILXpKOiRpAEQ2kX55ioxVADc6v7SkS4zQBxm4klhQHgGqpGKvoL6LGx4VQ== integrity checksum failed when using sha512: wanted sha512-xmhA11h2XhqpSVzDAmoQAYdNQ+swILXpKOiRpAEQ2kX55ioxVADc6v7SkS4zQBxm4klhQHgGqpGKvoL6LGx4VQ== but got sha512-IASkDFcdCT8lK6eZumelNZOCKVYTK2QVPCT7Me5+e0XgLVNCnIYrNlhUyVR8+hllvEoOa16X4WtNAOBD10gFtQ==. (294286 bytes)
00:23:01.933 
00:23:01.933 npm ERR! A complete log of this run can be found in:
00:23:01.933 npm ERR!     /root/.npm/_logs/2018-12-03T23_49_43_047Z-debug.log
00:23:01.933 ""
00:23:01.937 + res=1
00:23:01.937 + set +x
00:23:01.938 2018-12-03 23:49:37.193 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc
00:23:01.938 2018-12-03 23:49:37.193 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc
00:23:01.938 2018-12-03 23:49:37.205 UTC [chaincodeCmd] install -> INFO 003 Installed remotely response:<status:200 payload:""OK"" > 
00:23:01.940 !!!!!!!!!!!!!!! Chaincode upgrade on peer0.org1 has failed !!!!!!!!!!!!!!!!
00:23:01.940 ========= ERROR !!! FAILED to execute End-2-End Scenario ===========
{code}

*Build Logs*

https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-release-1.3-x86_64/76/consoleFull

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-release-1.3-x86_64/76/Docker_Container_Logs/
",,davidkel,denyeart,mbwhite,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,b350b2697908ffcd85c9d1224f69c41393a3aafc,Unset,No,,,"1|i001lj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,denyeart,mbwhite,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Dec/18 6:07 PM;mbwhite;Afraid that errors like this are not uncommon; however the root cause of them is not known. The best advice is to respin the build.;;;","05/Dec/18 6:08 PM;mbwhite;Sadly known this occurs; respin the build :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Master branch missing changes that are in 1.4 branch,FABCN-244,40358,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,heatherp,davidkel,davidkel,04/Jun/19 5:02 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,31/Oct/19 11:11 PM,,0,cc-triaged,,,,,,"The master branch is missing several tutorials that are in the 1.4 branch however this could also mean that the master branch doesn't have other changes such as code fixes or doc changes so would recommend a check to see what has been missed that needs to be copied from the 1.4 branch to the master branch in preparation for another 2.0.0 release (be it official or another alpha/beta).

",,davidkel,heatherp,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00qbw:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,heatherp,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Sep/19 1:28 AM;heatherp;I've done some manual comparisons and ran some git commands. I think the most accurate is the cherry output.

This is the offending list of commits that's missing from master that I think should be:

heathers-mbp:fabric-chaincode-node heatherp$ git cherry -v master
 + 4d444fac42e9ee489217a1a67e03da12291f62bb FAB-15190 Superclass properties

And we should check the tutorials in master aren't missing anything, as part of this jira;;;","24/Sep/19 11:25 PM;jyellick;[~heatherp] [~mbwhite] any updates on this?;;;","25/Sep/19 6:27 PM;heatherp;[~jyellick] I'm working on it now;;;","11/Oct/19 12:26 AM;heatherp;Still working on this in the background, I've done them all bar two:
[https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33723] (CLI fixes)

[https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33819] (Superclass properties);;;","31/Oct/19 12:11 AM;heatherp;Ok, I've raised a seperate issue for the fact the tutorials are out of sync: https://jira.hyperledger.org/browse/FAB-16973
And the final PR needed to close this issue out is a cherry pick here: https://github.com/hyperledger/fabric-chaincode-node/pull/15;;;","31/Oct/19 11:11 PM;heatherp;PR has been merged so closing this;;;",,,,,,,,,,,,,,,,,,,,,,,
As a Developer I have CouchDB Query Index files that I wish to include in a package,FABCN-245,35280,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Works as Expected,simonstone1,caroline-church,caroline-church,12/Nov/18 10:40 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,12/Nov/18 11:38 PM,,0,,,,,,,"Developers will want to test their Query Indexes as part of the dev/test process - this is not just a production deployment requirement.

Standard location for the query files is {{META-INF/statedb/couchdb/indexes}}",,caroline-church,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzyfr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caroline-church,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Port gPRC deprecation fix to node chaincode,FABCN-246,38119,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jtonline,mbwhite,mbwhite,01/Mar/19 7:03 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,25/Mar/19 8:59 PM,,0,,,,,,,"Need to port the fix to remove the grpc deprecation warnings to chaincode

From https://gerrit.hyperledger.org/r/#/c/27166/

 
|[FABN-942] Remove gRPC warnings from grpc.load() The grpc.load() method currently spits out the following error: ""grpc.load: Use the @grpc/proto-loader module ..."" That would be great if it was that simple; however, the new functions do not load any messages, enums, etc from the proto file. Only services are loaded. The rest need to be retrieved using the protobufjs module but that is a *lot* of rework, so let's get rid of the warning first, and then focus on rewriting the code.|

 ",,jtonline,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00e53:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Mar/19 12:40 AM;mbwhite;https://gerrit.hyperledger.org/r/#/c/29834/;;;","19/Mar/19 11:00 PM;jtonline;Needs fixing in v2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
node chaincode has grpc message limit of 4Mb,FABCN-247,29193,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,,davidkel,davidkel,06/Apr/18 12:33 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,13/Apr/18 10:51 AM,,0,nodejs-chaincode,,,,,,"when the node chaincode container is started, no grpc message limits are provided (fabric has hardcoded defaults of 100Mb but these are never applied). 

A possible solution to the problem could be to update `chaincode.js` to support these following extra CLI parameters as follows


{code:java}
const argsDef = [
	{name: 'peer.address', type: String},
	{name: 'grpc.max_send_message_length', type: Number},
	{name: 'grpc.max_receive_message_length', type: Number}
];
{code}

Then in the chaincode launch go code you could pass the appropriate values as parameters eg (note maxReceive, maxSend are made up vars)

{code:java}
	case pb.ChaincodeSpec_NODE:
		args = []string{""/bin/sh"", ""-c"", fmt.Sprintf(""cd /usr/local/src; npm start -- --peer.address %s --grpc.max_receive_message_length %s --grpc.max_send_message_length %s"", chaincodeSupport.peerAddress, maxReceive, maxSend)}

{code}

On a further note in handler.js there are also this other option `ssl-target-name-override` but this is not on option accepted as a command line option nor as far as I can see can be passed in any other way, so was wondering what the intention on how this option should be supplied ? If it would make sense to add it as a command line option then it should also go into `argsDef` constant but I suspect it's of use only when running a peer in dev mode.",,davidkel,harrisob@us.ibm.com,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzz4rz:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,davidkel,harrisob@us.ibm.com,zhaochy,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Apr/18 1:00 AM;harrisob@us.ibm.com;I think we should just set the grpc settings to unlimited and let the fabric side control the size.;;;","06/Apr/18 1:22 AM;harrisob@us.ibm.com;master        [https://gerrit.hyperledger.org/r/#/c/20217/]
 release 1.1 [https://gerrit.hyperledger.org/r/#/c/20219/];;;","06/Apr/18 1:53 AM;davidkel;Could just set to -1, just wondered if there would ever be a need to be able to set the values during chaincode start. Maybe default to -1 if no values are provided ? Also what do you think about the `ssl-target-name-override` ? assume we should add that to the cli args list as well ? ;;;","06/Apr/18 2:09 AM;davidkel;This would be the most concise solution 

{code:java}
const argsDef = [
	{name: 'peer.address', type: String},
	{name: 'grpc.max_send_message_length', type: Number, defaultValue: -1},
	{name: 'grpc.max_receive_message_length', type: Number, defaultValue: -1},
	{name: 'ssl-target-name-override', type: String}	
];
{code}
;;;","13/Apr/18 10:51 AM;zhaochy;master          https://gerrit.hyperledger.org/r/#/c/20285/ 
release 1.1   https://gerrit.hyperledger.org/r/#/c/20283/;;;",,,,,,,,,,,,,,,,,,,,,,,,
Unit tests being published in chaincode node,FABCN-248,37216,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,nkl199,nkl199,29/Jan/19 6:29 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,02/Feb/19 1:37 AM,,0,chaincode,,,,,,"It would appear that the unit tests are being published as part of the chaincode-node package being pushed to npm. 

This needs to be stopped, as it adds unnecessary bulk to the package.",,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i009en:",,,,Unset,Unset,,,,,,,,,,,,,,"isntall node chaincode package, inspect it, observe presence and content of fabric-shim/test folder.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode fails to instantiate when annotations are used,FABCN-249,42390,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Duplicate,,davidkel,davidkel,18/Sep/19 3:07 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,09/Nov/19 9:43 PM,,0,cc-triaged,,,,,,"Given the following model definition
{code}
@Object()
export class Asset {

    @Property()
    public id: string;

    @Property()
    public params: any = { 
        param1: 'param1',
        param2: 'param2',
    } 
}
{code}

The chaincode fails to instantiate with the following cryptic message

{noformat}
[17/09/2019 15:35:57] [INFO] fabricvscodelocalfabric-peer0.org1.example.com-Documents-0.0.8|  --module-path  [string] [default: ""/usr/local/src""]
[17/09/2019 15:35:57] [INFO] fabricvscodelocalfabric-peer0.org1.example.com-Documents-0.0.8|
[17/09/2019 15:35:57] [INFO] fabricvscodelocalfabric-peer0.org1.example.com-Documents-0.0.8|{ [Error: can't resolve reference Object from id DaveAsset#]
[17/09/2019 15:35:57] [INFO] fabricvscodelocalfabric-peer0.org1.example.com-Documents-0.0.8|  message: 'can\'t resolve reference Object from id DaveAsset#',
[17/09/2019 15:35:57] [INFO] fabricvscodelocalfabric-peer0.org1.example.com-Documents-0.0.8|  missingRef: 'Object',
[17/09/2019 15:35:57] [INFO] fabricvscodelocalfabric-peer0.org1.example.com-Documents-0.0.8|  missingSchema: 'Object' }
{noformat}
There are 2 issues here
1. The error message does not help determine the problem
2. The type definition of any doesn't appear to be allowed

As well as ""any"", changing the type to ""object"" also produces the same results meaning that ""object"" is not allowed either, so it's possible other standard typescript types also cause the same problem.

As a further thought it would be good if unsupported options were picked up at typescript compile time rather than at runtime but don't know if that is possible and may be a limitation of the experimental annotation support in typescript.


",,davidkel,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i010ar:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/19 11:07 PM;jyellick;[~mbwhite] can you take a look?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
NodeChaincode - handle large data,FABCN-250,29197,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,harrisob@us.ibm.com,harrisob@us.ibm.com,06/Apr/18 12:56 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,20/Jul/18 11:06 PM,,0,,,,,,,"Need to tell GRPC to allow for large data by setting

grpc.max_send_message_length
grpc.max_receive_message_length

Will set to unlimited by default",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzz4sv:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Apr/18 1:03 AM;harrisob@us.ibm.com;dup of FAB-9378;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error when returning transient data from transaction,FABCN-251,39592,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,caroline-church,caroline-church,03/May/19 1:02 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,15/Jul/19 7:06 PM,,0,,,,,,,"If i return the whole object that is returned from getTransientData() then i get the error 
TypeError: Converting circular structure to JSON",,caroline-church,denyeart,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00mh3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caroline-church,denyeart,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/May/19 9:13 PM;mbwhite;Strictly speaking the code is working correct - in that what is returned isn't a JavaScript Map object but rather a protobufjs Map object.

Notionally the same thing, and functions on them that return the same values - but the JSON form is so very different.

 ;;;","10/Jun/19 8:45 PM;denyeart;[~mbwhite] Please close if nothing needs to be fixed.;;;","15/Jul/19 7:06 PM;mbwhite;Will do in the context of updates to overall stub API to make this easier to use. 
Don't want to change this specific API as it would break any code currently able to use it. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Need to change versions in master for chaincode node,FABCN-252,31943,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,,davidkel,davidkel,17/Jul/18 6:25 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,17/Jul/18 4:03 PM,,0,,,,,,,"package.json versions are still at 1.2.0 in master, they need to be bumped to 1.3.0-snapshot",,davidkel,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzitz:",,,,Unset,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,davidkel,zhaochy,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jul/18 4:03 PM;zhaochy;https://gerrit.hyperledger.org/r/#/c/24467/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typescript contracts error if missing type in argument,FABCN-253,40925,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,EdMoffatt,EdMoffatt,04/Jul/19 11:15 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,13/Sep/19 10:57 PM,,0,,,,,,,"For example...

 
{{public async createMyAsset(ctx: Context, myAssetId: string, assetName: string, *assetValue:string*): Promise<void> {}}
{{...}}
{{}}}
 
is fine, whilst
 
{{public async createMyAsset(ctx: Context, myAssetId: string, assetName: string, *assetValue*): Promise<void> {}}
{{...}}
{{}}}
 
(with the ""{{:string}}"" missing after {{assetValue}}) will error.
 
The error I get out in the console when debugging this in VS Code is:


{{[7/4/2019 11:11:32 AM] [INFO] fabricvscodelocalfabric_peer0.org1.example.com|2019-07-04 10:11:32.702 UTC [endorser] SimulateProposal -> ERRO 139 [mychannel][9f4f926e] failed to invoke chaincode name:""myContract"" , error: transaction returned with failure: Error: can't resolve reference #/components/schemas/Object from id #}}",,EdMoffatt,heatherp,mbwhite,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00tb8:",,,,Unset,Unset,,,,,,,,,,,,,,"Generate a TypeScript smart contract using the IBM Blockchain Platform VS Code extension, and replace the createMyAsset transaction with:

    @Transaction()
    public async createMyAsset(ctx: Context, myAssetId: string, assetName: string, assetValue): Promise<void> {
        const exists = await this.myAssetExists(ctx, myAssetId);
        if (exists) {
            throw new Error(`The my asset ${myAssetId} already exists`);
        }
        const myAsset = new MyAsset();
        myAsset.value = assetName + ' ' + assetValue;
        const buffer = Buffer.from(JSON.stringify(myAsset));
        await ctx.stub.putState(myAssetId, buffer);
    }

Then save, install + instantiate that contract, and try submitting the createMyAsset transaction!",,Unset,,,,,,Unset,,Unset,,(Please add usage information),EdMoffatt,heatherp,mbwhite,wlahti,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jul/19 12:07 AM;mbwhite;A type should really be specified here; after some considering whether an assumption could be made about the type, concluded that the complexity involved in making any form of assumption safe is not worth the cost.

 

As this is in effect a coding bug, implemented a change to fail fast if this scenario is encountered. ;;;","16/Jul/19 12:09 AM;mbwhite;https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/32328;;;","15/Aug/19 12:18 AM;wlahti;Is this needed in master as well?;;;","12/Sep/19 11:27 PM;heatherp;master cherry pick is here: https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/%2B/33490;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Unable to instantiate node chaincode ,FABCN-254,21094,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,30/Sep/17 3:38 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,30/Sep/17 9:40 AM,,0,,,,,,,"integration tests are failing due to chaincode instantiation failure.

Due to recent changes in Fabric [FAB-6280|https://gerrit.hyperledger.org/r/#/c/13785/] ,  package.json expects the file name hence scripts need to be updated.

 Adding package.json with script will fix this issue.",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzyht3:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Sep/17 4:17 AM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/13979/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
error in sample code,FABCN-255,31738,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Invalid: Works as Expected,,abdulrashid,abdulrashid,09/Jul/18 5:50 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,19/Sep/18 6:11 PM,,0,nodejs-chaincode,samples,,,,,"There is an error in the fabric sample code.

 

[https://github.com/hyperledger/fabric-samples/blob/release-1.2/balance-transfer/artifacts/src/github.com/example_cc/node/example_cc.js#L38]

!image-2018-07-09-11-47-28-013.png!

 

 

According to the [https://fabric-shim.github.io/Shim.html] documentation the error message should be the Buffer object. But above sample code just printing the plain text. Lets fix it and add a comment.",,abdulrashid,davidkel,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jul/18 5:47 PM;abdulrashid;image-2018-07-09-11-47-28-013.png;https://jira.hyperledger.org/secure/attachment/15277/image-2018-07-09-11-47-28-013.png",,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzzi67:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,abdulrashid,davidkel,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Aug/18 9:21 PM;denyeart;[~harrisob@us.ibm.com] Could you take a look?;;;","11/Sep/18 1:22 PM;denyeart;[~davidkel] What's your opinion on this one?;;;","11/Sep/18 4:46 PM;davidkel;[~denyeart] It's an interesting one. The documentation actually states it should be a string, however the example passes in an Error object and I think that is valid. So what appears to be valid are
1. String (need to check to see if there are any limitations on what a string could contain)
2. Buffer
3. Any object that has a toString method which does something sensible, rather than use the default prototype implementation (such as an Error object)

The reason I think Buffer is specified on success but string is on error is that in a success scenario you may want to return binary data whereas in an error message it will always be a string.
If I get time today I will just do some quick checks, but in Composer we always did this approach and have had no problems so I am pretty sure the above describes valid scenarios.;;;","19/Sep/18 6:11 PM;davidkel;This is not an error in the samples, the samples reflect a good use of shim.error();;;",,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode instantiation is failing consistently in node-chaincode test,FABCN-256,38622,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,,sambhavdutt,sambhavdutt,21/Mar/19 5:51 AM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,22/Mar/19 11:19 PM,,0,ci-blocker,,,,,,"Chaincode instantiation has been failing consistently in Node-Chaincode tests in BYFN, this failure has been observed in the recent builds starting today.

*Branch:* master
*Platform:* x86_64
*Error Snippet:*

{code:java}
16:08:28 Instantiating chaincode on peer0.org2...
16:08:28 + peer chaincode instantiate -o orderer.example.com:7050 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n mycc -l node -v 1.0 -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}' -P 'AND ('\''Org1MSP.peer'\'','\''Org2MSP.peer'\'')'
16:08:50 + res=1
16:08:50 + set +x
16:08:50 2019-03-20 20:08:28.109 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc
16:08:50 2019-03-20 20:08:28.110 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc
16:08:50 Error: could not assemble transaction, err proposal response was not successful, error code 500, msg chaincode registration failed: container exited with 0
16:08:50 !!!!!!!!!!!!!!! Chaincode instantiation on peer0.org2 on channel 'mychannel' failed !!!!!!!!!!!!!!!!
{code}

*Build Log*
https://jenkins.hyperledger.org/view/fabric-samples/job/fabric-samples-merge-x86_64/22/artifact/Docker_Container_Logs/

https://jenkins.hyperledger.org/view/fabric-samples/job/fabric-samples-merge-x86_64/22/consoleFull
",,denyeart,jamie,mastersingh24,raft 3,rickr,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,48e73cf49b09d1ef5f4c27ccd948f22badb54127,Unset,No,,,"1|i00h0v:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,jamie,mastersingh24,raft 3,rickr,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Mar/19 7:31 PM;denyeart;[~mbwhite] CI is also hitting the same issue I mentioned in FAB-14740.;;;","21/Mar/19 7:34 PM;denyeart;The associated peer errors in my environment are:

{code:java}
2019-03-21 02:24:40.942 UTC [core.comm] ServerHandshake -> ERRO 05f TLS handshake failed with error EOF server=ChaincodeServer remoteaddress=172.18.0.8:37938
2019-03-21 02:24:41.552 UTC [endorser] callChaincode -> INFO 060 [mychannel][f1b50292] Exit chaincode: name:""lscc""  (26138ms)
2019-03-21 02:24:41.552 UTC [endorser] SimulateProposal -> ERRO 061 [mychannel][f1b50292] failed to invoke chaincode name:""lscc"" , error: container exited with 0
github.com/hyperledger/fabric/core/chaincode.(*RuntimeLauncher).Launch.func1
	/go/src/github.com/hyperledger/fabric/core/chaincode/runtime_launcher.go:64
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1333
chaincode registration failed
{code}
;;;","22/Mar/19 11:19 PM;mastersingh24;this is now fixed - first we reverted the upgrade to Node 10 but then https://gerrit.hyperledger.org/r/30300 allows us to go back to Node 10;;;","28/May/19 7:08 PM;raft 3;We are also experiencing this issue at 1.4.1, not consistently but if it ever starts happening, it continues to happen


{code:java}
2019-05-28 10:03:10.723 UTC [endorser] callChaincode -> INFO 0aa [common][5791fdae] Entry chaincode: name:""lscc""
2019-05-28 10:03:12.080 UTC [endorser] callChaincode -> INFO 0ab [common][5791fdae] Exit chaincode: name:""lscc"" (1357ms)
2019-05-28 10:03:12.080 UTC [endorser] SimulateProposal -> ERRO 0ac [common][5791fdae] failed to invoke chaincode name:""lscc"" , error: container exited with 0
github.com/hyperledger/fabric/core/chaincode.(*RuntimeLauncher).Launch.func1
 /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/runtime_launcher.go:63
runtime.goexit
 /opt/go/src/runtime/asm_amd64.s:1333
chaincode registration failed{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,
Network API responses contain escaped characters,FABCN-257,37652,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,mbwhite,nkl199,nkl199,13/Feb/19 11:15 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,22/May/19 12:16 AM,,0,,,,,,,"When using the network API to invoke on an installed smart contract (fabrcar) the response contains escaped characters:

` [""{\""color\"":\""brown\"",\""docType\"":\""car\"",\""make\"":\""Trabant\"",\""model\"":\""601 Estate\"",\""owner\"":\""Simon\""}""]`

I would have expected that the response could be cast directly into JSON, instead of needing to perform the following on a payload:

```
JSON.parse(this.formatString(response.toString('utf8')).split('\\').join(''))

formatString(inputString){
        if ((inputString.charAt(0)=='""') &&  (inputString.charAt(inputString.length -1)=='""')) {
            return inputString.slice(1, -1);
        } else {
            return inputString;
        }
    }

```",,mbwhite,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15500,,,,FABCN-174,,FABCN-238,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00bp3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Feb/19 8:44 PM;mbwhite;As odd as it seems; this is working correctly.

1) The contract is written in JavaScript and there is no additional metadata to describe the types. Therefore contract api needs to make an assumption about return types

2) This assumption is therefore to JSON.stringify(..) what the contract transactional functional returns, before converting it to a buffer to return

3) The contract though itself is returning a string - this is then being double stringified as a consequence.

Fix is to the contract sample

 

But will use this issue to update documentation in the JSDocs rather than a code fix. 

Fix is to state - that without any metadata on the return type - then the assumption the contract API will make is to json.stringify() any response. 

 ;;;","04/Mar/19 10:55 PM;mbwhite; 

 

 

 ;;;","05/Mar/19 11:36 PM;mbwhite;_Relates in the sense that both are minor documentation fixes - so I've put them together_;;;","22/May/19 12:16 AM;mbwhite;Will create a dedicated Docs focus issue for this. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
shim interface getTxTimestamp returns undefined,FABCN-258,21259,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,jimthematrix,Ratnakar,Ratnakar,03/Oct/17 11:19 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,16/Nov/17 4:09 AM,,0,ci-failure,,,,,,node chaincode shim interface *getTxTimestamp* API  returns *undefined*,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzyi7z:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Nov/17 1:06 PM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/15459/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode Init function is executing even after instantiation via Invoke method,FABCN-259,42808,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Works as Expected,,salmandabbakuti,salmandabbakuti,18/Oct/19 3:47 PM,20/Dec/19 9:28 PM,28/Oct/23 2:28 AM,20/Dec/19 9:28 PM,,0,cc-triaged,external,,,,,"I am using high level fabric-contract-api for writing chaincode. I defined Init method with some predefined key values to include in Ledger while instantiating. However this Init method is executing with invoke command 

 

To instantiate the chaincode, I use the following command:
 ``` 

peer chaincode instantiate -o orderer.example.com:7050 -C mychannel -n blue-coin -l ""$CC_RUNTIME_LANGUAGE"" -v 1.0 -c '

{""Args"":[""init""]}

' -P ""OR ('Org1MSP.member','Org2MSP.member')""

{{```}}
 The {{Args}} property needs to specify the name of the method (i.e., which is {{init}}) so that it will be called during instantiation.

I initially thought that the {{init}} method can be called only during instantiation since the {{init}} method may contain code that will initialize some values in the world state (e.g., set values to zero).

However, I realized that the same {{init}} method can be called beyond initialization by calling the invoke command:
 ```

 {{peer chaincode invoke -o orderer.example.com:7050 -C mychannel -n blue-coin -c '\{""function"":""init"",""Args"":[]}'}}

```
 If a user can execute the {{init}} command beyond initialization, there is a risk that the values in the world state will be reinitialized to its initial value.",,heatherp,mbwhite,salmandabbakuti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i012ez:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,mbwhite,salmandabbakuti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Nov/19 4:27 AM;wlahti;This is specific to how the fabric-contract-api dispatches calls to init and invoke. Tagged this as fabric-sdk-node for now.;;;","27/Nov/19 8:11 PM;heatherp;Hi [~Salmandabbakuti] - there is no distinction between smart contract functions that are called on instantiation and any other type of function. 

Thoughts:
- Why are you calling the init function again on the invoke command?

- Can you update your init function to handle being called after instantiate? i.e. multiple times;;;","03/Dec/19 1:20 AM;salmandabbakuti;There are some cases when we wanted to initialize ledger with some predefined values and don't wanted to override those values once initialized.  just like solidity constructor if you know what I mean? lets say,  there is a key with an Id ""admin279"" initialized when instantiating chaincode. so this admin Id is used widely particular business application. what if this Id is overrided by malicious user? ;;;","05/Dec/19 8:54 PM;heatherp;Hi [~Salmandabbakuti] I'm not following. If you don't want to ""override those values once initialized"" - why are you calling init again?
You could update your Init function to not override them if they are already initialized if you are calling init again;;;","05/Dec/19 9:22 PM;salmandabbakuti;Hello Heather Pollard. do you think I am the only user of business application? there will be plenty of users out there who can initialize init method again for malicious operations for particular business Applications. that's what I'm talking about man. why you guys are not able to think up to that certainty?;;;","20/Dec/19 9:28 PM;mbwhite;For others coming to this thread, it's worth reviewing the context, especially with the 2.0.0-beta now available.

In 1.4, when a chaincode was instantiated or upgraded the 'init' function would called (with arguments if supplied). After this when a chaincode was invoked it would call 'invoke' (with arguments if supplied). The chaincode developer would need to provide their own routing/function handling logic... eg for CRUD operations.

With the updated programming model introduced in 1.4; the chaincode developer (or more accurately now the contract developer) would not need to worry about this routing logic it is handled for them. Within this model, each transaction function the developer writes has the same 'status' as other functions. If you call a function 'init' then it's just a choice of name.  There isn't the concept of 'functions that happen specifically and only at instantiation or upgrade'.  

As [~heatherp] notes; if you want to call a tx function at say upgrade you can - but OP's point is that this can be called at any time by anybody - thereby reset the world state;  if you have a function that resets the world state to starting conditions and it's called (accidentally or deliberately) then yes, it will be reset. 

Remember though that Fabric is a permissioned system, that in order to get to submit this transaction the user would have had to had some level of access to be able to send the request in the first place.  If the system is open enough to permit this then are potentially bigger problems - eg stopping upgrading to a malicious new chaincode entirely.

As reseting the state would be a big problem - even with just the init semantics - it would be recommended to make sure that it was properly guarded against accidental invocation anyway. Is the correct user invoking it? Is this being called on an upgrade or first instantiation?  Upgrade will, of course, be in the end more common.  If there is any state, does it need to be upgraded or migrated somehow?

It's worth though now reviewing the 2.0.0-beta code and more importantly the lifecycle changes.  The key thing here for this discussion - is that the concept of a distinct 'init' function or phase is not in the updated lifecycle - it has been deprecated.   The Lifecycle epics explain the details behind problems that init causes.

Going forward, therefore; the 1.4 'init' semantics are deprecated - so it's prudent therefore to not rely on this.

True a requirement for some form of state set-up or migration will still exist; this will have to be coded as regular tx function; yes it will need to be invoked at a specific point - however as this is such a critical function for all the organizations, it will have to be orchestrated by the organizations running the peers anyway.  As would upgrading or instantiating in 1.4; it's not something to be done in 5 minutes when you're trying to leave for a long weekend :)

The code for setting up world state, if needed, will have always been in the chaincode - therefore it has always been prudent to protect it.  Future updates to the programming model will look to improving the accessibility of who has submitted a transaction, what org are they from?  What is the data in the world state? What's its schema.  All will help here, and it's important they are delivered for many use cases. 

TL;DR: 

The contract programming model is working exactly as designed; yes the behavior is different but any chaincode/contract written now on this model will not be sustainable in the long term with the updated lifecycle.

A large proportion of the systems to manage the risk of accidental or otherwise state 'mangling' will be in place for all versions. 

I'll close this issue as the code is working as designed, however it has provided a means to discuss the topic fully, so hopefully the above will provide important context for everybody. 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,
S390 builds on release-1.1 builds for chaincode-node always fail,FABCN-260,34072,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Invalid: Environment Issue,mastersingh24,davidkel,davidkel,25/Sep/18 8:44 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,30/Nov/18 7:07 PM,,0,,,,,,,"Taken from
https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-verify-s390x/254/console

{code}
17:47:38 Get:1 http://security.debian.org jessie/updates InRelease [44.9 kB]
17:47:39 Ign http://deb.debian.org jessie InRelease
17:47:39 Get:2 http://deb.debian.org jessie-updates InRelease [145 kB]
17:47:39 Get:3 http://deb.debian.org jessie Release.gpg [2420 B]
17:47:39 Get:4 http://deb.debian.org jessie Release [148 kB]
17:47:40 Get:5 http://deb.debian.org jessie-updates/main s390x Packages [23.0 kB]
17:47:41 Get:6 http://deb.debian.org jessie/main s390x Packages [8798 kB]
17:47:44 Fetched 9162 kB in 6s (1493 kB/s)
17:47:44 W: Failed to fetch http://security.debian.org/dists/jessie/updates/InRelease  Unable to find expected entry 'main/binary-s390x/Packages' in Release file (Wrong sources.list entry or malformed file)
17:47:44 
17:47:44 E: Some index files failed to download. They have been ignored, or old ones used instead.
17:47:44 The command '/bin/sh -c apt-get update && apt-get install -y netcat && rm -rf /var/cache/apt' returned a non-zero code: 100
17:47:44 Makefile:137: recipe for target 'build/image/fabric-ca/.dummy-s390x-1.1.1-snapshot-e656889' failed
17:47:44 make: *** [build/image/fabric-ca/.dummy-s390x-1.1.1-snapshot-e656889] Error 100
17:47:44 Build step 'Execute shell' marked build as failure
{code}",,davidkel,denyeart,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzshz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,denyeart,mbwhite,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Oct/18 12:44 AM;rameshthoomu;This is failing at this line [https://github.com/hyperledger/fabric-ca/blob/release-1.1/images/fabric-ca/Dockerfile.in#L14]

similar failure has been fixed by Gari in release-1.0 branch https://gerrit.hyperledger.org/r/#/c/26377/
{code:java}
00:04:58.049 W: Failed to fetch http://security.debian.org/dists/jessie/updates/InRelease Unable to find expected entry 'main/binary-s390x/Packages' in Release file (Wrong sources.list entry or malformed file)
00:04:58.049 
00:04:58.049 E: Some index files failed to download. They have been ignored, or old ones used instead.
00:04:58.444 The command '/bin/sh -c apt-get update && apt-get install -y netcat && rm -rf /var/cache/apt' returned a non-zero code: 100
00:04:58.446 Makefile:137: recipe for target 'build/image/fabric-ca/.dummy-s390x-1.1.1-snapshot-e656889'
{code}
 ;;;","16/Oct/18 12:46 AM;rameshthoomu;As this is failing while doing apt-get update, I think this needs to be updated in fabric-baseimage version change. [~mastersingh24] Could you please check this.;;;","29/Nov/18 7:09 AM;denyeart;[~davidkel][~rameshthoomu] Is this still an issue?;;;","30/Nov/18 7:07 PM;mbwhite;After the recent git-clone issues on s/390, we've not seen any other errant failures on s/390.  

Will cancel this.;;;","30/Nov/18 7:07 PM;mbwhite;Environment issues are resolved.;;;",,,,,,,,,,,,,,,,,,,,,,,,
test-e2e failing due to overlapping volume mounts on cli container,FABCN-261,38426,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,jtonline,jtonline,jtonline,13/Mar/19 11:52 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,18/Mar/19 8:21 PM,,0,,,,,,,"The cli volume mounts in [build/test/docker-compose.yml|https://github.com/hyperledger/fabric-chaincode-node/blob/release-1.4/build/test/docker-compose.yml#L131] overlap which appears to cause problems when running e2e tests, since there is a 'crypto' folder which exists in both- one empty and one with the required crypto material

 

 ",,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00fw7:",,,,Unset,Unset,,,,,,,,,,,,,,"1. clone fabric-chaincode-node and associated repos
2. run `npm install`
3. run `npm test`
4. run `gulp channel-init`
5. run `gulp test-e2e`",,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/19 12:28 AM;jtonline;The commit for FAB-14414 should fix this problem, and is probably worth back porting anyway https://github.com/hyperledger/fabric-chaincode-node/commit/7b258b9a24381abd832f154780aad99f16cb9ff1;;;","18/Mar/19 8:21 PM;jtonline;Apparently back porting use own network from master pulls in too many changes for 1.4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix Fabric-Shim type definitions for winston logger,FABCN-262,37786,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Done,mbwhite,jlcs,jlcs,19/Feb/19 8:26 PM,01/Dec/19 6:14 AM,28/Oct/23 2:28 AM,27/Mar/19 1:49 AM,,0,node-SDK,,,,,,"When usign typescript to write Node chaincode, an error appears at the file:
fabric-shim/types/index.d.ts
from the fabric-chaincode-node repository.

The typescript compiler cannot find the Winston module at line 11:

import { LoggerInstance } from 'winston';

Also, if you manually import in your package.json the package ""winston"", it still fails as LoggerInstance is not defined in its types definitions. You must install the deprecated package @types/winston that still defines LoggerInstance.

The terminal output:

{color:#505F79}user@server:[~/chaincode]:
$ tsc
node_modules/fabric-shim/types/index.d.ts:11:36 - error TS2307: Cannot find module 'winston'.

11     import { LoggerInstance } from 'winston';
                                      ~~~~~~~~~

$ npm i  winston
[...]


user@server:[~/chaincode]:
$ tsc
node_modules/fabric-shim/types/index.d.ts:11:14 - error TS2305: Module '""/home/user/chaincode/node_modules/winston/index""' has no exported member 'LoggerInstance'.

11     import { LoggerInstance } from 'winston';
                ~~~~~~~~~~~~~~
$ npm i @types/winston
[...]

$ tsc
[ works fine ]
{color}
",,jlcs,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00cdb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jlcs,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/19 12:35 AM;mbwhite;Build running: https://gerrit.hyperledger.org/r/30357 [FAB-14736] Update Logging

 

As part of this change updated to winston 3.0

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
shim.error from node chaincode doesn't send the error status code 500 to the peer,FABCN-263,20964,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,nnao,Ratnakar,Ratnakar,23/Sep/17 12:14 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,23/May/18 3:18 AM,,0,ci-failure,,,,,,"Couldn't see HTTPerror *status code 500* as response to peer when there is an error (*shim.error*) thrown from chaincode.

*+Steps :+*

Used  chaincode_example02.go
 * Create state *a* and *b*
 * Delete the state *a*
 * Query for the state *a***Response we see in this case is :

 
{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = chaincode error (status: 500, message: {""Error"":""Nil amount for a""}) - <nil>
{code}
 

Used chaincode.js - written the above in nodejs

repeated the same steps given above and failure message we could see here is 
{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: transaction returned with failure: [32fdaf5d]Calling chaincode Invoke() returned error response [Error: {""Error"":""Nil amount for a""}]. Sending ERROR message back to peer - <nil>{code}",,denyeart,nnao,Ratnakar,,,,,,,,,,,,,,,,,,,,,,FAB-6387,FAB-6678,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzyh47:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,nnao,Ratnakar,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,true,"23/Sep/17 2:39 AM;Ratnakar;Please refer the examle02 chaincode writen in node in here: 

https://github.com/hyperledger/fabric-test/tree/master/chaincodes/example02/node;;;","03/Oct/17 12:36 AM;Ratnakar;+*Steps to reproduce the issue:*+

  **  ensure path is set for fabric binaries
 # git clone *[https://github.com/hyperledger/fabric-test]*
 # cd fabric-test/feature
 # behave n FAB---5790

error message :

 
{code:java}
Then a user receives an error response of status: 500 # steps/endorser_impl.py:336 0.000s
Assertion Failed: Expected response was status: 500; received Error occurred [u'docker exec peer0.org1.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/14474b4fa78711e7b3d580e65025f612/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query --name mycc --ctor \'{\\""Args\\"": [\\""readMarble\\"",\\""marble201\\""]}\' --channelID behavesystest ""']: 2017-10-02 15:35:55.879 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-10-02 15:35:55.879 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-10-02 15:35:55.880 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2017-10-02 15:35:55.880 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
2017-10-02 15:35:55.880 UTC [msp/identity] Sign -> DEBU 005 Sign: plaintext: 0A9E070A6B08031A0C08DBB9C9CE0510...6172626C650A096D6172626C65323031
2017-10-02 15:35:55.880 UTC [msp/identity] Sign -> DEBU 006 Sign: digest: 9F0B4C6076536D1DDE72A8C50FAD5EF55221CCA5D168B011B8F427F7128D3135
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: transaction returned with failure: [76e70a4b]Calling chaincode Invoke() returned error response [Error: {""Error"":""Marble does not exist: marble201""}]. Sending ERROR message back to peer - <nil>
Usage:
peer chaincode query [flags]
Flags:
-C, --channelID string The channel on which this command should be executed (default ""testchainid"")
-c, --ctor string Constructor message for the chaincode in JSON format (default ""{}"")
-x, --hex If true, output the query value byte array in hexadecimal. Incompatible with --raw
-n, --name string Name of the chaincode
-r, --raw If true, output the query value as raw bytes, otherwise format as a printable string
-t, --tid string Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64
Global Flags:
--cafile string Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
--logging-level string Default logging level and overrides, see core.yaml for full syntax
-o, --orderer string Ordering service endpoint
--test.coverprofile string Done (default ""coverage.cov"")
--tls Use TLS when communicating with the orderer endpoint
--transient string Transient map of arguments in JSON encoding
-v, --version Display current version of fabric peer server{code}
 

 ;;;","30/Nov/17 4:58 AM;nnao;I tried to reproduce this problem but FAB-5790 does not exist.
These codes merged into FAB-5791. I tried FAB-5791 and ended successfully.
I think this problem is fixed. May I close this JIRA?;;;","30/Nov/17 5:12 AM;Ratnakar;Hi [~nnao], Thanks for working on this issue.

Node related tests been disabled due to this issue,  you have to uncomment them

[https://github.com/hyperledger/fabric-test/blob/master/feature/chaincodes.feature#L516], to test them against node.js chaincode.

 

Issue still exists in Node.js chaincode , Please uncomment and try again

 ;;;","30/Nov/17 6:22 AM;nnao;Hi [~Ratnakar], Thanks for the comment. I will try this.;;;","08/Jan/18 11:49 AM;denyeart;[~nnao] [~Ratnakar] Could you provide an update on this one?;;;","08/Jan/18 6:41 PM;nnao;[~denyeart] I am working on this bug.

This bug needs FAB-6387 patch and some minor bug fix for ""chaincodes.feature""
After applying those patch I tried a behave test like that.

{code:java}
$ behave -n FAB-5791 -k -D logs=y
{code}

I had success FAB-5791 test using nodejs chaincode, but I had fail FAB-5791 test using golang chaincode.
I got the following message:
{code:java}
less peer0.org1.example.com_FAB-5791\:_Test_API_in_SHIM_interface_using_marbles02_and_shimApiDriver_chaincodes_for_solo_orderer_leveldb_db_GOLANG_lang_--_@1.1_.log 
...
ESC[36m2018-01-08 09:02:32.331 UTC [stateleveldb] GetState -> DEBU 1854ESC[0m GetState(). ns=mycc, key=marble201
ESC[36m2018-01-08 09:02:32.331 UTC [chaincode] func1 -> DEBU 1855ESC[0m [cbe831ef]No state associated with key: marble201. Sending RESPONSE with an empty payload
ESC[36m2018-01-08 09:02:32.331 UTC [chaincode] 1 -> DEBU 1856ESC[0m [cbe831ef]handleGetState serial send RESPONSE
ESC[36m2018-01-08 09:02:32.332 UTC [chaincode] processStream -> DEBU 1857ESC[0m [cbe831ef]Received message COMPLETED from shim
...

$ less peer0.org1.example.com_FAB-5791\:_Test_API_in_SHIM_interface_using_marbles02_and_shimApiDriver_chaincodes_for_solo_orderer_leveldb_db_NODE_lang_--_@1.2_.log
ESC[36m2018-01-08 09:05:42.599 UTC [stateleveldb] GetState -> DEBU 1849ESC[0m GetState(). ns=mycc, key=marble201
ESC[36m2018-01-08 09:05:42.599 UTC [chaincode] func1 -> DEBU 184aESC[0m [2f43921e]No state associated with key: marble201. Sending RESPONSE with an empty payload
ESC[36m2018-01-08 09:05:42.599 UTC [chaincode] 1 -> DEBU 184bESC[0m [2f43921e]handleGetState serial send RESPONSE
ESC[36m2018-01-08 09:05:42.601 UTC [chaincode] processStream -> DEBU 184cESC[0m [2f43921e]Received message ERROR from shim
...
{code}

This test case(get marble201 key that does not exist) returns different value COMPLETED(GOLANG chaincode) and ERROR(NODE chaincode).
I think the behavior of GOLANG and NODE shim package is different in error case.


;;;","12/Jan/18 4:45 AM;nnao;I send patches
- [https://gerrit.hyperledger.org/r/#/c/16779/]
- [https://gerrit.hyperledger.org/r/#/c/16781/]
These patches need FAB-6387 patches



 ;;;","23/May/18 3:18 AM;nnao;This problem was solved by FAB-6387. ;;;",,,,,,,,,,,,,,,,,,,,
If sub class of contract is created with super() name is incorrectly set,FABCN-264,35827,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,03/Dec/18 11:10 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,04/Dec/18 5:49 PM,,0,,,,,,,"It should be set to the name of the class, but rather it is set to the empty string. ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i001hb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Dec/18 12:02 AM;mbwhite;https://gerrit.hyperledger.org/r/#/c/27882/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Contract name (was namespace) always required in applications,FABCN-265,36038,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,sstone1,sstone1,11/Dec/18 1:34 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,11/Dec/18 3:18 AM,,0,,,,,,,"A change went into the Fabric Node.js chaincode shim last week that means that contracts always have a name (used to be namespace). This change in itself is fine, but the change now means that applications must always specify three things when wanting to call a transaction:

chaincode ID, contract name, transaction name

In most cases, there will be one contract deployed in one chaincode, with the same name. For example the FabCar contract will be deployed with a chaincode ID of fabcar. However you will have to specify fabcar twice - e.g. fabcar.fabcar.queryCar.

We need to revert this behaviour so that in the common case of one contract to one chaincode, you do not have to qualify the transaction name with the contract name. We propose that if you have a single contract then that is the ""default"" contract. If you have multiple contracts, then the first one in the contracts array becomes the ""default"" contract. If a transaction comes in without a contract name, then the default contract is used to resolve the transaction.",,mbwhite,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i002fb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,sstone1,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Dec/18 2:12 AM;mbwhite;[https://gerrit.hyperledger.org/r/28048]

 ;;;","11/Dec/18 2:40 AM;mbwhite;Had to rerun the build - so needing +1 again [~sstone1];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Dev Mode Test fail in fabric-chaincode-node master branch,FABCN-266,36440,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,awjh-ibm,vijaypunugubati,vijaypunugubati,01/Jan/19 12:37 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,21/Jan/19 11:23 PM,,0,ci-failure,,,,,,"dm-startup-chaincode fail due to ""Starting up chaincode via CLI failed"" in Dev Mode Tests.

Consistent: Yes 
Branch: Master
Platform: x86_64 & s390x
Error Snippet:
{code:java}
/09:29:22 [14:29:22] Starting 'dm-startup-chaincode'...
09:29:22 [14:29:22] 'dm-startup-chaincode' errored after 188 ms
09:29:22 [14:29:22] Error: Starting up chaincode via CLI failed
09:29:22     at formatError (/w/tools/jenkins.plugins.nodejs.tools.NodeJSInstallation/nodejs-8.11.3/lib/node_modules/gulp/node_modules/gulp-cli/lib/versioned/^3.7.0/format-error.js:20:10)
09:29:22     at Gulp.<anonymous> (/w/tools/jenkins.plugins.nodejs.tools.NodeJSInstallation/nodejs-8.11.3/lib/node_modules/gulp/node_modules/gulp-cli/lib/versioned/^3.7.0/log/events.js:41:15)
09:29:22     at emitOne (events.js:121:20)
09:29:22     at Gulp.emit (events.js:211:7)
09:29:22     at Gulp.Orchestrator._emitTaskDone (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/orchestrator/index.js:264:8)
09:29:22     at /w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/orchestrator/index.js:275:23
09:29:22     at finish (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/orchestrator/lib/runTask.js:21:8)
09:29:22     at cb (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/node_modules/orchestrator/lib/runTask.js:29:3)
09:29:22     at Gulp.gulp.task (/w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/build/test/devmode.js:103:9)
09:29:22     at <anonymous>
09:29:22     at process._tickDomainCallback (internal/process/next_tick.js:228:7)
09:29:22 [14:29:22] 'test-devmode-cli' errored after 4.3 s
09:29:22 [14:29:22] Error in plugin ""run-sequence(dm-startup-chaincode)""/ Some comments here

{code}
Build Logs:[https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-verify-x86_64/242/consoleFull]

[https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-merge-x86_64/62/console]

 

 ",,harrisob@us.ibm.com,mbwhite,rameshthoomu,sambhavdutt,sstone1,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i004ov:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,mbwhite,rameshthoomu,sambhavdutt,sstone1,vijaypunugubati,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jan/19 7:26 PM;sstone1;These tests are failing because the tests use the hyperledger/fabric-tools image for running the chaincode in development mode (why, I have no idea). This image has been modified for 2.0.0 to be based upon Alpine and no longer contains Node.js + npm, which is as it should be.

These tests should either use the new hyperledger/fabric-nodeenv image, or they should just run outside of Docker altogether - I think I'd prefer the latter because a developer running their chaincode outside of Docker is a much more realistic development mode use case.;;;","04/Jan/19 11:25 PM;vijaypunugubati;[https://gerrit.hyperledger.org/r/#/c/28457/] This is a temporary change to fix the above error by disable the ""test-devmode-cli"" test.;;;","04/Jan/19 11:35 PM;sstone1;Assigning to [~mbwhite]; the tests have been disabled, but these tests need fixing to work with 2.0.0 and then re-enabling.;;;","17/Jan/19 7:01 PM;mbwhite;The CLI was container was used as a convenience for executing the commands; it was off the main test execution path especially as the dev mode tests are inherently more synchronous.

Options
 * Add another slim docker container to the tests with node to represent the developers environment
 * Run the dev mode chaincode in-line but in a background process. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
fabric-chaincode-node generate command fails when fabric env vars set,FABCN-267,36995,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,SamRasha,awjh-ibm,awjh-ibm,22/Jan/19 12:01 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,23/Jan/19 12:24 AM,,0,,,,,,,"fabric-chaincode-node metadata generate fails with unknownArguments when operating in an environment when other env vars are set for fabric opperations.

Example error recieved when running in fabric-samples devmode chaincode container:

 

{{/opt/gopath/src/chaincode/ts_sample # ./node_modules/.bin/fabric-chaincode-node metadata gen}}erate --file metadata.json -p .}}
 

fabric-chaincode-node metadata generate --file ""fileName""

{{Options:}}
    --help Show help [boolean]
    -v, --version Show version number [boolean]
    --file, -f The file name/path to save the generated metadata file, if no file is specified, it will print to stdout [string]
    --module-path, -p The path to the directory of your smart contract project which contains your chaincode, default is your current working directory [string] [default: ""/opt/gopath/src/chaincode/ts_sample""]

{{Unknown arguments: peerId, peerLocalmspid, vmEndpoint, peerMspconfigpath, peerAddress}}",,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00833:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
paged response seems serialize MetadataResponse not correctly,FABCN-268,33622,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,zhaochy,zhaochy,zhaochy,10/Sep/18 11:31 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,04/Oct/18 1:37 PM,,0,,,,,,,"I'm testing the new pagination features.

My test is as follows:
1. create several composite keys and call putState(key, val) with these keys.
2. call getStateByRangeWithPagination and get the response.

My code is as follows:

{code:java}
    // step 1
    let key1 = stub.createCompositeKey('color~name', ['blue', 'name1']);
    let key2 = stub.createCompositeKey('color~name', ['blue', 'name2']);
    let key3 = stub.createCompositeKey('color~name', ['red', 'name3']);
    let key4 = stub.createCompositeKey('color~name', ['red', 'name4']);

    // step 2, pageSize is 2, and bookmark is key2
    stub.getStateByRangeWithPagination(key1, key4, 2, key2);
{code}

after step2
the expected result is [key2 and key3], and the actual result is as we expected.
the expected bookmark is key4, i.e.,
{code}
\u0000color~name\u0000red\u0000name4\u0000        
{code}

after decoded the message QueryResponseMetadata, I get the following result
{code}
\\u0000color~name\\u0000red\\u0000name4\\u0000
{code}

I'm not sure if this is a peer side serialize bug or just by the design?",,denyeart,Senthil1,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-175,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzq5j:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,Senthil1,zhaochy,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Sep/18 11:33 PM;zhaochy;[~denyeart] please have a look at this;;;","19/Sep/18 9:58 PM;denyeart;[~Senthil1] I haven't been able to get to this, could you take a look?;;;","19/Sep/18 10:20 PM;Senthil1;[~zhaochy] which statedb did you use?;;;","20/Sep/18 1:15 AM;Senthil1;[~zhaochy]

Note that we cannot pass compositeKeys to range query APIs (both pagination and non-pagination range query). We would throw error if a composite key is passed as an argument in a call to _GetStateByRangeWithPagination()_ (refer to [https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/chaincode.go#L806 |https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/chaincode.go#L806]

To do a range query on composite keys, we need to introduce new chaincode APIs (https://jira.hyperledger.org/browse/FAB-11281)

Note that we can use _GetStateByPartialCompositeKey()_ and _GetStateByPartialCompositeKeyWithPagination()_ for partial composite keys only. ;;;","20/Sep/18 1:35 AM;Senthil1;[~denyeart] [~zhaochy] node shim seems to be different from go shim 
for range query. In go shim, we do not allow composite key to be used with range query whereas we do in node shim
go shim – [https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/chaincode.go#L806 |https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/chaincode.go#L806]
node shim -  [https://github.com/hyperledger/fabric-chaincode-node/blob/master/fabric-shim/lib/stub.js#L470]

[~zhaochy]  refer to [https://gerrit.hyperledger.org/r/c/8119/ |https://gerrit.hyperledger.org/r/c/8119/]for reasoning behind restricting only simple keys for the range query API. node shim might need to fix this.;;;","20/Sep/18 1:41 AM;Senthil1;[~zhaochy] java shim has this check [https://github.com/hyperledger/fabric-chaincode-java/blob/master/fabric-chaincode-shim/src/main/java/org/hyperledger/fabric/shim/impl/ChaincodeStubImpl.java#L181]

 ;;;","20/Sep/18 3:09 PM;zhaochy;[~Senthil1] thanks for your help. Some fix for node shim should be made. I just self assigned this ticket and would fix this later.;;;","04/Oct/18 1:19 PM;denyeart;master: [https://gerrit.hyperledger.org/r/#/c/26452/] - merged

cherry picked to release-1.3: [https://gerrit.hyperledger.org/r/#/c/26781/] - merged;;;",,,,,,,,,,,,,,,,,,,,,
"When no metadata is present, parameters are just converted to strings bypassing the pluggable serializer",FABCN-269,42783,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,,davidkel,davidkel,17/Oct/19 7:39 PM,23/Jan/20 10:23 PM,28/Oct/23 2:28 AM,23/Jan/20 10:23 PM,,0,cc-triaged,external,,,,,"contracts can have pluggable serializers and all returns go via the serializer however if no metadata is present then parameters are converted to strings but not by the serializer. 
I would like to suggest that the serializer handles the conversion to strings when no metadata is present and make the handling of parameters go via the serializer. This would allow contracts to implement their own serializer and not have to use metadata.

",,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl4c:i",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jan/20 11:32 PM;mbwhite;[~davidkel]  

 

By inspection the following is the approach that, by inspection, would configure the serializer for a JS contract (so no annotations, and no separate json file). Using FabCar as a vehicle.

 
const FabCar = require('./lib/fabcar');

module.exports.FabCar = FabCar;
module.exports.contracts = [ FabCar ];

const MySerializer = require('./myserializer.js');
module.exports.serializers = {
transaction:'mySerializer',
serializers: {
mySerializer :MySerializer
}
};;;;","16/Jan/20 11:40 PM;mbwhite;..but you're correct that it won't get used for parameters - see datamarshall.js handleParameters() line 81-89;;;","17/Jan/20 12:14 AM;mbwhite;Have a proposed solution; need to validate in the test suite.;;;","21/Jan/20 11:32 PM;mbwhite;Have found that this was already fixed in master... [https://github.com/hyperledger/fabric-chaincode-node/commit/08dd59830ae46e3dc76af91d47a07c41f9c25b5f]

Need to back port to 1.4.x;;;","22/Jan/20 8:43 PM;mbwhite;PR to do this.

[https://github.com/hyperledger/fabric-chaincode-node/pull/64];;;",,,,,,,,,,,,,,,,,,,,,,,,
Node Chaincode Tests failing,FABCN-270,22700,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,harrisob@us.ibm.com,latitiah,latitiah,20/Oct/17 2:38 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,24/Oct/17 11:55 AM,,0,ci-failure,,,,,,"*commit:* f754f40d3165571cecf5fce43c8a034559983311

The following fabric-test smoke tests are failing after the specified commit was merged to master:
https://jenkins.hyperledger.org/job/fabric-test-verify-x86_64/261/testReport/
- FAB-6211: Test example02 chaincode written using NODE with tls
- FAB-6211: Test example02 chaincode written using NODE without tls

These tests can be found at https://github.com/hyperledger/fabric-test/blob/master/feature/chaincodes.feature#L329-L347",,davidkel,denyeart,harrisob@us.ibm.com,latitiah,Nishi,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,FAB-6697,,,,FABCN-210,,,,FAB-5080,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzyka7:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,davidkel,denyeart,harrisob@us.ibm.com,latitiah,Nishi,rameshthoomu,scottz,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Oct/17 11:31 PM;rameshthoomu;I could see fabric-sdk-node chaincode tests are failing consistently on all platforms. Below is the CI job log [https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node6-merge-x86_64/34/console]

Please see the debug log file https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-s390x/268/artifact/debug.log;;;","21/Oct/17 3:34 AM;denyeart;With the merge of CR 12257, GetState() and DelState() utilize a proto message to send the key between chaincode shim and peer.  I assume the problem here is that node js chaincode needs to make the same change.  See the updated proto in:

[https://gerrit.hyperledger.org/r/#/c/12257/27/protos/peer/chaincode_shim.proto]

and see how this is handled in golang shim handleGetState() and handleDelState() now:

[https://gerrit.hyperledger.org/r/#/c/12257/27/core/chaincode/shim/handler.go]

Note that eventually node js chaincode will need to support private data chaincode apis by passing a collection in the proto message, but for now shifting to the new proto approach (without populating collection) should be sufficient to get node js chaincode working again.;;;","21/Oct/17 7:07 AM;davidkel;So I did ask about whether the node.js shim was going to be included in the core/chaincode as it would seem to me that any changes to the proto would have an impact, and as the java shim is also there it would seem that the precedent is set. Any changes to the protos would be picked up, or the build would fail which is what you would want.;;;","22/Oct/17 10:25 PM;harrisob@us.ibm.com;I have made the changes to handle the proto change, does not include changes for private data.

 

https://gerrit.hyperledger.org/r/#/c/14751/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
tutorial on how to use iterators in 1.4,FABCN-271,42422,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,davidkel,davidkel,davidkel,20/Sep/19 12:06 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,26/Sep/19 10:08 PM,,1,,,,,,,For node.js chaincode one of the common problems seen is how to use iterators. Might be good to have a section under the tutorials reference site (fabric-shim.github.io) describing how to use iterators. This would be cutdown version of the one in master as it describes both the old way and new way using new node.js 10 features. ,,davidkel,jmason900,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i010gj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,jmason900,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Sep/19 10:51 PM;davidkel;https://gerrit.hyperledger.org/r/#/c/fabric-chaincode-node/+/33666/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-merge and fabric-ca-merge end-2-end-x86_64 jobs are failing due to node chaincode.,FABCN-272,33849,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,sambhavdutt,sambhavdutt,18/Sep/18 11:30 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,02/Oct/18 8:27 PM,,0,ci-flake,,,,,,"The fabric and fabric-ca end-2-end merge jobs are failing failing due to node chaincode, Copying the errors observed,


{code:java}
16:36:48 Tests run: 50, Failures: 0, Errors: 1, Skipped: 3, Time elapsed: 627.647 sec <<< FAILURE! - in org.hyperledger.fabric.sdkintegration.IntegrationSuite
16:36:48 setup(org.hyperledger.fabric.sdkintegration.End2endAndBackAgainNodeIT)  Time elapsed: 102.074 sec  <<< ERROR!
16:36:48 java.lang.RuntimeException: 
16:36:48 java.util.concurrent.ExecutionException: java.lang.AssertionError: Test failed with java.lang.AssertionError exception Not enough endorsers for upgrade :1.  error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 ""npm WARN deprecated @types/winston@2.4.4: This is a stub types definition. winston provides its own type definitions, so you do not need this installed.
16:36:48 npm WARN tar ENOENT: no such file or directory, open '/chaincode/output/node_modules/.staging/bytebuffer-f77373f8/dist/bytebuffer-node.js'
16:36:48 npm WARN tar ENOENT: no such file or directory, open '/chaincode/output/node_modules/.staging/jsrsasign-ad843b72/lib/jsrsasign-jwths-min.js'
16:36:48 npm WARN tar ENOENT: no such file or directory, open '/chaincode/output/node_modules/.staging/@types/node-4d8ae03d/inspector.d.ts'
16:36:48 npm WARN example_cc@1.0.0 No description
16:36:48 npm WARN example_cc@1.0.0 No repository field.
16:36:48 
16:36:48 npm ERR! code EINTEGRITY
{code}

*Build Logs*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-merge-end-2-end-x86_64/3217/

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-ca-merge-end-2-end-x86_64/123/",,davidkel,denyeart,rameshthoomu,rickr,sambhavdutt,scottz,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-169,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,b649868,Unset,No,,,"1|hzzrbj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,denyeart,rameshthoomu,rickr,sambhavdutt,scottz,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Sep/18 1:03 AM;sambhavdutt;The latest e2e merge job for fabric and fabric-ca is passing in the last build without this error.

;;;","19/Sep/18 1:19 AM;rickr;This is a Node chaincode issue.  The test in JSDK and I bet NSDK have not changed.

Also the JSDK code for installing, instantiating and invoking Node chaincode is identical to Java CC and GO CC  and they're not failing.;;;","19/Sep/18 1:33 AM;sambhavdutt;[~rickr]

I agree, Updated the details.;;;","19/Sep/18 6:06 PM;davidkel;This looks like an environmental issue. A problem with attempting to perform an npm install on the node chaincode package. It isn't an issue with the chaincode-node package itself. Some of the issues that might cause this are
1. left over failed npm installs in the environment
2. corrupted npm cache
3. a package-lock.json exists
Things like the above should not happen in a clean build image container, therefore it will be down to interaction with the npm registry.

There are ways that the build environment can mitigate problems with interacting with an external registry. For example a npm proxy can be setup which caches npm packages but pulls down the required npm package from the official npm registry if it's not in the cache. You then use the local proxy as an npm registry and can guarantee a better QOS through it. Products like JFrog Artifactory can do this and probably nexus too.;;;","19/Sep/18 10:33 PM;sambhavdutt;The fabric-end-2-end-daily-master is failing along with the fabric e2e merge tests because of the same failure today.;;;","22/Sep/18 11:55 PM;rameshthoomu;Update CI scripts to clean the  leftover artifacts before start sdk-java tests.;;;","24/Sep/18 10:58 PM;denyeart;This is an intermittent failure.;;;","02/Oct/18 8:26 PM;sambhavdutt;The fabric and ca merge e2e jobs are no longer failing with the npm errors.;;;",,,,,,,,,,,,,,,,,,,,,
"node chaincode tests are failing consistently with ""chaincode registration failed"" error",FABCN-273,38446,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,mastersingh24,rameshthoomu,rameshthoomu,14/Mar/19 10:58 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,16/Mar/19 4:01 PM,,0,,,,,,,"In master branch, we are observing node chaincode tests are failing consistently with chaincode registration failed error. Please see the below log.

Below log is generated while running `echo y | ./byfn.sh -m up -l node -t 60`

on fabric, fabric-ca and chaincode-node latest images (on latest commit)
{code:java}
2019-03-13 20:21:40.558 UTC [gossip.channel] reportMembershipChanges -> INFO 05a Membership view has changed. peers went online: [[peer0.org1.example.com:7051 ] [peer1.org1.example.com:8051 ]] , current view: [[peer0.org1.example.com:7051 ] [peer1.org2.example.com:10051] [peer1.org1.example.com:8051 ]]
2019-03-13 20:22:01.665 UTC [core.comm] ServerHandshake -> ERRO 05b TLS handshake failed with error EOF server=ChaincodeServer remoteaddress=192.168.0.8:46188
2019-03-13 20:22:02.231 UTC [endorser] callChaincode -> INFO 05c [mychannel][573230ea] Exit chaincode: name:""lscc"" (24006ms)
2019-03-13 20:22:02.231 UTC [endorser] SimulateProposal -> ERRO 05d [mychannel][573230ea] failed to invoke chaincode name:""lscc"" , error: container exited with 0
github.com/hyperledger/fabric/core/chaincode.(*RuntimeLauncher).Launch.func1
 /go/src/github.com/hyperledger/fabric/core/chaincode/runtime_launcher.go:63
runtime.goexit
 /usr/local/go/src/runtime/asm_amd64.s:1333
chaincode registration failed{code}
https://jenkins.hyperledger.org/sandbox/view/All/job/fabric-samples-veriy-x86_64/30/artifact/Docker_Container_Logs/peer0.org2-default-channel-node.log",,mastersingh24,rameshthoomu,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00fzz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mastersingh24,rameshthoomu,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/19 5:29 PM;sstone1;The chaincode builder is using Node 10, where the chaincode runtime is using Node 8. This causes a native module version mismatch:

Error: Failed to load gRPC binary module because it was not installed for the current system
Expected directory: node-v57-linux-x64-musl
Found: [node-v64-linux-x64-musl]

We need the following CR to be merged to resolve the problem:
https://gerrit.hyperledger.org/r/#/c/29982/;;;","16/Mar/19 4:01 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/30084/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Build brake due to FAB-12787,FABCN-274,38903,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,jtonline,jtonline,jtonline,01/Apr/19 10:46 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,02/Apr/19 9:48 PM,,0,,,,,,,The Fabric protobufs have changed causing the  build to break. Ideally the protobufs should be managed more robustly (separate repo?) but for now just need to get the build fixed.,,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00imv:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Apr/19 11:21 PM;jtonline;https://gerrit.hyperledger.org/r/#/c/30585/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
example contract schemas in the fabric-contract-api schema directory do not conform to the schema,FABCN-275,39225,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Lowest,Invalid: Not Supported,,davidkel,davidkel,11/Apr/19 10:47 PM,04/Jan/20 9:21 PM,28/Oct/23 2:28 AM,04/Jan/20 9:21 PM,,0,cc-triaged,,,,,,"Noticed the following in the example but there could be other problems


{code:java}
                    ""return"": [
                        {
                            ""name"": ""commercialpaper"",
                            ""description"": ""Commercial Paper Object"",
                            ""required"": true,
                            ""schema"": {
                                ""$ref"": ""#/components/schemas/paper""
                            }
                        }
                    ]
{code}
note that it should be returns and not return, plus this doesn't match the definition of returns that appears to have changed between 1.4.0 and 1.4.1 and would fail validation

",,davidkel,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00kf3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/19 4:04 AM;denyeart;[~mbwhite] I've switched Fix Version to v2.0.0. Do you agree?;;;","25/Sep/19 12:06 AM;jyellick;[~mbwhite] any updates on this?;;;","04/Jan/20 9:20 PM;davidkel;Withdrawing as not an issue for me and no other interest registered;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
node chaincode shim throws error if extra command line parameters passed,FABCN-276,21017,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,jimthematrix@gmail.com,davidkel,davidkel,27/Sep/17 7:40 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,06/Oct/17 12:37 AM,,0,,,,,,,"With the imminent change from calling chaincode.js to npm start, it becomes possible for the chaincode writer to pass their own parameters to the chaincode to be processed as part of the chaincode initialisation story. Unfortunately the shim code throws an error if there are any command line parameters other than the ones it declares.

The problem is this line
{noformat}
let opts = CLIArgs(argsDef);
{noformat}
in the chaincode.js file. This needs to be changed to 
{noformat}
let opts = CLIArgs(argsDef, { partial: true });
{noformat}
 ",,davidkel,jimthematrix@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzyhef:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,davidkel,jimthematrix@gmail.com,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Oct/17 7:39 AM;jimthematrix@gmail.com;https://gerrit.hyperledger.org/r/14097;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
txid exists inside createTxContext when invoking two chaincodes directly after each other,FABCN-277,25412,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,harrisob@us.ibm.com,daanporon,daanporon,12/Dec/17 11:28 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,13/Jun/18 12:32 AM,,0,,,,,,,"inside our chaincode we are doing: 
{code:java}
await stub.invokeChaincode('chaincode2', []);
await stub.invokeChaincode('chaincode3', []);
{code}
and when doing this we sometimes get an error when invoking the second one that the txid already exists. We think this has something to do with that the deleteTxContext isn't executed for the first context ([https://github.com/hyperledger/fabric/blob/release/core/chaincode/chaincode_support.go#L749)] when the promise is resolved. Right now we resolved this with waiting 100ms before invoking chaincode3 and then we don't have this issue anymore.

 

We are using node.js chaincode on the 1.1.0-preview version",,daanporon,davidkel,denyeart,harrisob@us.ibm.com,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 11:27 PM;daanporon;error.log;https://jira.hyperledger.org/secure/attachment/13604/error.log",,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzyqrr:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,daanporon,davidkel,denyeart,harrisob@us.ibm.com,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Feb/18 11:50 PM;davidkel;I've tried to recreate the problem but I haven't been able to on builds later than the preview release. However is this is a problem then as indicated by the reporter, the issue could like inside the peer itself rather than the fabric-chaincode-node part. 
The fabric-chaincode-node would only return to the caller once it has a response from the peer and it replicates what the go shim would do as well so if this problem occurs in the fabric-chaincode-node then the likelyhood is that it also occurs in go chaincode as well.

[~daanporon] are you able to test against the alpha release to see if the problem still occurs ? if it does then it may be worth tagging it to a different component given that I don't believe the problem lies in the node shim implementation as indicated by your comment.;;;","26/Feb/18 8:55 PM;denyeart;Deferring to 1.2 since it is not know if this is still a problem in 1.1.;;;","21/Mar/18 5:31 AM;harrisob@us.ibm.com;Is this an issue with the fabric 1.1 ?;;;","05/May/18 2:32 AM;jyellick;Any updates here? If a real issue, should definitely be fixed;;;","13/Jun/18 12:27 AM;harrisob@us.ibm.com;This is issue has not been seen with current build.;;;","13/Jun/18 12:33 AM;harrisob@us.ibm.com;Marked done, 'returned' was still showing up in reports.;;;",,,,,,,,,,,,,,,,,,,,,,,
fabric-chaincode-node-merge job: Command failed on Scenario Tests ,FABCN-278,40855,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Invalid: Works as Expected,mbwhite,vijaypunugubati,vijaypunugubati,02/Jul/19 12:26 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,03/Aug/19 1:18 AM,,0,ci-blocker,,,,,," Node chaincode command failed on Scenario Tests.

*Branch:* Master

*Platform:* ** s390x, x86_64

*Error Snippet:*
{code:java}
/00:04:04.617  [10:30:25] Using gulpfile /w/workspace/fabric-chaincode-node-merge-s390x/gopath/src/github.com/hyperledger/fabric-chaincode-node/gulpfile.js
00:04:04.617  [10:30:25] Starting 'test-e2e'...
00:04:04.617  [10:30:25] Starting 'test-fv-shim'...
00:04:04.617  [10:30:25] Starting '<anonymous>'...
00:04:05.009  
00:04:05.009  
00:04:05.009  (node:56201) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 uncaughtException listeners added. Use emitter.setMaxListeners() to increase limit
00:04:05.009    Typescript chaincode
00:06:44.508      Scenario
00:06:44.508        1) should write an asset
00:06:44.508        2) should update an asset
00:06:44.508        3) should handle the getMetadata
00:06:44.508  
00:06:44.508    Chaincode clientidentity
00:09:07.578      4) should create an instance of the client identity class
00:09:07.578  
00:09:07.578    Chaincode crosschaincode
00:13:31.182      5) ""before all"" hook
00:13:31.182  
00:13:31.183    Chaincode CRUD
00:15:54.268      Get
00:15:54.268        6) should get single key value
00:15:54.268        7) should get a single key containing json data
00:15:54.268        8) should get multiple keys concurrently
00:15:54.268        9) should get a single composite key value
00:15:54.268        10) should return a list of results from a partial composite key using the old iterator style
00:15:54.268        11) should return a list of results from a partial composite key using the new iterator style
00:15:54.268        12) should return all keys between key1 and key3 using the old iterator style
00:15:54.268        13) should return all keys between key1 and key3 using the new iterator style
00:15:54.268        14) should get the history for a key using the old and new iterator style
00:15:54.268        15) should get a query result with pagination without setting a bookmark using the old iterator style
00:15:54.268        16) should get a query result with pagination without setting a bookmark using the new iterator style
00:15:54.268        17) should get a query result with pagination with a set bookmark using the old iterator style
00:15:54.268        18) should get a query result with pagination with a set bookmark using the new iterator style
00:15:54.268        19) should return a paginated list using the old iterator style
00:15:54.268        20) should return a paginated list using the new iterator style
00:15:54.268        21) should return a state from a partial composite key using the old iterator style
00:15:54.268        22) should return a state from a partial composite key using the new iterator style
00:15:54.268        23) should return a paginated list from partial composte key using the old iterator style
00:15:54.268        24) should return a paginated list from partial composte key using the new iterator style
00:15:54.268      Put
00:15:54.268        25) should add a key
00:15:54.268        26) should add a composite key
00:15:54.268        27) should update an existing key
00:15:54.268      Delete
00:15:54.268        28) should delete a key
00:15:54.268        29) should delete a composite key
00:15:54.268      Split
00:15:54.268        30) should split the composite key
00:15:54.268  
00:15:54.268    Chaincode encryption
00:18:17.358      31) should encrypt and decrypt state values
00:18:17.358      32) should sign a value and verify the signature
00:18:17.358  
00:18:17.358    Chaincode query
00:20:40.555      33) should perform an equals query
00:20:40.555      34) should perform an regex query
00:20:40.555  
00:20:40.555  
00:20:40.555    0 passing (16m)
00:20:40.555    34 failing
00:20:40.555  
00:20:40.555    1) Typescript chaincode Scenario should write an asset:
00:20:40.555       Error: Command failed: docker exec org1_cli peer chaincode invoke  -o orderer.example.com:7050 -C mychannel -n annotations -c '{""Args"":[""TestContract:createAsset"",""GLD"",""GOLD_BAR"",""100"",""EXTRA_ID"",""50""]}' --waitForEvent --waitForEventTimeout 100s 2>&1
00:20:40.555  
00:20:40.555        at ChildProcess.exithandler (child_process.js:294:12)
00:20:40.555        at maybeClose (internal/child_process.js:970:16)
00:20:40.556        at Process.ChildProcess._handle.onexit (internal/child_process.js:259:5)
00:20:40.556  
00:20:40.556    2) Typescript chaincode Scenario should update an asset:
00:20:40.556       Error: Command failed: docker exec org1_cli peer chaincode invoke  -o orderer.example.com:7050 -C mychannel -n annotations -c '{""Args"":[""TestContract:updateAsset"",""{\""id\"":\""GLD\"",\""name\"":\""GOLD_BAR\"",\""value\"":200,\""extra\"":{\""id\"":\""EXTRA_ID\"",\""value\"":100}}""]}' --waitForEvent --waitForEventTimeout 100s 2>&1
00:20:40.556  
00:20:40.556        at ChildProcess.exithandler (child_process.js:294:12)
00:20:40.556        at maybeClose (internal/child_process.js:970:16)
00:20:40.556        at Process.ChildProcess._handle.onexit (internal/child_process.js:259:5)
00:20:40.556  
00:20:40.556    3) Typescript chaincode Scenario should handle the getMetadata:
00:20:40.556       Error: Command failed: docker exec org2_cli peer chaincode query  -C mychannel -n annotations -c '{""Args"":[""org.hyperledger.fabric:GetMetadata""]}'
00:20:40.556  Error: endorsement failure during query. response: status:500 message:""make sure the chaincode annotations has been successfully defined on channel mychannel and try again: chaincode annotations not found"" 
00:20:40.556  
00:20:40.556        at ChildProcess.exithandler (child_process.js:294:12)
00:20:40.556        at maybeClose (internal/child_process.js:970:16)
00:20:40.556        at Process.ChildProcess._handle.onexit (internal/child_process.js:259:5)
00:20:40.556  
00:20:40.556    4) Chaincode clientidentity should create an instance of the client identity class:
00:20:40.556       Error: Command failed: docker exec org2_cli peer chaincode query  -C mychannel -n clientidentity -c '{""Args"":[""org.mynamespace.clientidentity:clientIdentityInstance""]}'
00:20:40.556  Error: endorsement failure during query. response: status:500 message:""make sure the chaincode clientidentity has been successfully defined on channel mychannel and try again: chaincode clientidentity not found"" 
00:20:40.556  
00:20:40.556        at ChildProcess.exithandler (child_process.js:294:12)
00:20:40.556        at maybeClose (internal/child_process.js:970:16)
00:20:40.556        at Process.ChildProcess._handle.onexit (internal/child_process.js:259:5)
00:20:40.556  
00:20:40.556    5) Chaincode crosschaincode ""before all"" hook:
00:20:40.556       Error: Command failed: docker exec org2_cli peer chaincode query  -C mychannel -n crosschaincode2 -c '{""Args"":[""org.mynamespace.crosschaincode2:getKey"",""key1""]}'
00:20:40.556  Error: endorsement failure during query. response: status:500 message:""make sure the chaincode crosschaincode2 has been successfully defined on channel mychannel and try again: chaincode crosschaincode2 not found"" / code placeholder
{code}
 

Similar failures observed on all 34 scenarios. The error's for 34 scenarios is on below link's provided.

*Build:*

**[https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-merge-s390x/180/consoleFull]

[https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-merge-x86_64/180/console]",,btl5037,denyeart,harrisob@us.ibm.com,mbwhite,shimos,sykesm,vijaypunugubati,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,f09bb438f9db6bd22e147e2749406a38355ca76b,Unset,No,,,"1|i00swc:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,denyeart,harrisob@us.ibm.com,mbwhite,shimos,sykesm,vijaypunugubati,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jul/19 3:06 AM;davidkel;Moved to correct project/component type;;;","11/Jul/19 12:29 AM;mbwhite;The CA is failing to start with this error 

Failed to find private key for certificate in '/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem': Could not find matching private key for SKI: Failed getting key for SKI;;;","12/Jul/19 11:29 PM;sykesm;> Failed to find private key for certificate in '/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem': Could not find matching private key for SKI: Failed getting key for SKI

Where are those logs?
Who configures the CA in your tests?;;;","12/Jul/19 11:44 PM;sykesm;Vijay is telling me that this only impacts master (not 1.4.2).;;;","13/Jul/19 12:42 AM;mbwhite;1.4.x pulls the fabric-samples basic network, master doesn't. 

I reproduced the problem on 1.4 locally; we think it was related to a problem some people have had on MacOS with overlapping volume mounts.

The dependency on fabric-samples is not correct; so just finishing up on making itself contained...

 ;;;","15/Jul/19 6:34 PM;mbwhite;1.4 has a CR merged, , thanks [~harrisob@us.ibm.com]  that should help with the issues that have been seen there.

Onto master now...  dropping priority as master is not releasing; and fixes on 1.4 currently higher priority. ;;;","25/Jul/19 12:52 AM;denyeart;[~mbwhite] Can you provide an update?;;;","03/Aug/19 1:18 AM;mbwhite;Look back in Jenkins I can't see any failures on this build for a while. 

I know that [~jtonline] was looking at a master branch failure this week 

 ;;;",,,,,,,,,,,,,,,,,,,,,
Return type from Chaincode is not 100% symetric on primitives,FABCN-279,36023,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,mbwhite,mbwhite,10/Dec/18 6:58 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,10/Dec/18 10:20 PM,,0,,,,,,,"Return types for String (and other primitives convert to strings) are JSONified.

Very subtly - but not 100% correct- and will confuse users (which is how it was found in local testing)",,denyeart,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i002bz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Dec/18 9:08 PM;mbwhite;https://gerrit.hyperledger.org/r/#/c/28031/;;;","10/Dec/18 9:18 PM;denyeart;[~mbwhite] I've converted to Bug / High. Please arrange for a reviewer/merger.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode node docs are based off of master,FABCN-280,32132,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,davidkel,davidkel,23/Jul/18 11:39 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,19/Sep/18 5:52 PM,,0,Documentation,,,,,,"Whenever a merge of master is done, the docs published at

[https://fabric-shim.github.io/]

are published. This is a problem as it will include information about unreleased capabilities. Ideally a user of this site should be able to get release specific information ie 1.1, 1.2 and as well as master, but it should default to the latest released level of fabric.

 

Will be removing the fabric contract apis as well. ",,davidkel,denyeart,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-78,,,,,,FABN-829,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzjrr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,denyeart,mbwhite,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Sep/18 8:12 PM;denyeart;[~davidkel] Is there somebody from your team that could work on this?  Same issue exists on node sdk.  Until there is versioned docs, in the short term for v1.3 perhaps we just need to be very clear in the docs about which releases functions got introduced in.;;;","07/Sep/18 9:42 PM;mbwhite;For reference the JSDocs are published for the node chaincode as follows:

 
 * docs are built using gulp/JSDoc - and are generated as static html files  (docs/gen directory)
 * for publishing (on the merge builds) the fabric-shim.github.io repo is cloned
 * locally all the contents are deleted
 * html code copied over
 * changes are added and then committed, and pushed

 

Looking at the main docs a format of 

<rooturl>/<language>/master/....

<rooturl>/<language>/latest/....

<rooturl>/<language>/release1.2/....

<rooturl>/<language>/release1.3/....

Assuming that JSDoc would be not translated, the language could be dropped but worth keeping the other syntax.

A key factor is needing to be able to know what the current build version is, and is this the latest or not. 


Important to note that if the same repo is going to be used for all versions - any version that might currently run a build and would delete the REPO should be modified first. 

 ;;;","07/Sep/18 9:58 PM;mbwhite;Migration of existing links is the hardest part; 

A solution based off the idea of SPA routing could be workable here (see https://github.com/rafrex/spa-github-pages and the discussion in [https://github.com/isaacs/github/issues/408)]   This could be used to make it possible to have easy redirect of any existing URL. ;;;","10/Sep/18 7:36 PM;davidkel;Also note there is a link from the fabric docs to https://fabric-shim.github.io/ChaincodeInterface.html. This is in 1.1, 1.2, latest and master which is going to be a right pain. We will have to go back and fix the previous docs.

Currently this link is broken.;;;","11/Sep/18 9:57 PM;mbwhite;I've submitted  [https://gerrit.hyperledger.org/r/26222] 
 * Each release will push it's into a subdirectory called after the GERRIT_BRANCH variable, eg master, release-1.2 etc.
 * Only the MASTER branch build will have control over the files in the root of the docs repo
 ** this will be the index.html and 404.html files
 * Within the package.json there is a property that defines the version that is the *latest version*
 ** The root index.html will redirect to that version. 
 ** If the 404 page is triggered, the following logic applies
 *** If the page is in a predefined list (i.e. the page names in previous versions) a redirect to the latest documentation with the `fabric-shim` prefix..  will take place.  
 *** Otherwise a general redirect is triggered to the index page of the latest docs. ;;;","14/Sep/18 6:10 PM;mbwhite;The build has completed ok;

This is currently set that all the master branch will build and only the DOCS for the master branch will be available. When 1.3 is cut; then 1.3 set of the docs will be created. At that point

1) we will need to update the latest tag in the package.json

2) Create a new Jira to investigate how the API docs can be updated to provide a drop down style of choice like the read-the-docs.;;;","17/Sep/18 9:26 PM;mbwhite;*THIS Jira IS ALSO REMOVING THE FABRIC_CONTRACT API DOCS*;;;",,,,,,,,,,,,,,,,,,,,,,
The nightly publish job and end-2-end jobs are failing consistently as nodenv image is not available,FABCN-281,39763,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Invalid: Works as Expected,,sambhavdutt,sambhavdutt,10/May/19 4:59 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,12/Jun/19 4:09 AM,,0,ci-failure,,,,,,"The nightly publish job and end-2-end jobs are failing consistently as nodeenv image is not available for s390x. The nodeenv image is not published for s390x as the fabric-chaincode-node-s390x job has been failing consistently with timeout error.


*Branch:* master
*Platform:* s390x
*Error Snippet:*

{code:java}
19:46:53 [fabric-end-2-end-daily-master-s390x] $ /bin/bash -eu /tmp/jenkins436961889519374753.sh
19:46:53  ############# 
19:46:53 P U L L - N O D E E N V
19:46:53  ############# 
19:46:53 
19:46:54 Error response from daemon: manifest for nexus3.hyperledger.org:10001/hyperledger/fabric-nodeenv:s390x-latest not found
19:46:54 Build step 'Execute shell' marked build as failure
{code}

*Build Log*
https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-master-s390x/109/consoleFull",,jtonline,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,FABCN-224,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,017d5c8403d4705001bbe8cfdc6e3c3231e4f7cb,Unset,No,,,"1|i00ng7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jun/19 4:09 AM;vijaypunugubati;The nodeenv image is available for s390x in nexus repository, and the latest image published was on May 24, 2019, closing this bug as it is invalid now.;;;","12/Jun/19 4:09 AM;vijaypunugubati;Working as expected.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot instantiate chaincode successfully,FABCN-282,41224,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Won't Do,,yun_chen,yun_chen,16/Jul/19 11:16 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,15/Oct/19 11:20 PM,,0,chaincode,,,,,,"Hi, all

I'm not sure why when I ran command to instantiate chaincode, there's no error message showing; but didn't show in instantiated chaincode list. Invoke command indicated I should check if my chaincode is instantiated successfully. So, I suppose it didn't instantiated successfully. However, I checked docker logs, didn't find any log info. Don't know how to fix it. 

I'm working on multiple organizations setup. When I tried to instantiate one of chaincode in channelone, it printed out like this:

 
{code:java}
// command I used to instantiate chaincode
docker exec -e ""CORE_PEER_ADDRESS=peer0.org2.example.com:7051"" cli2 peer chaincode instantiate -o orderer.example.com:7050 --tls --cafile $ORDERER_CA -n processcontracts2 -v 1.1 -l node -c '{""Function"":""initLedger"", ""Args"":[""""]}' -C channeltwo -P ""OR('Org1MSP.member', 'Org2MSP.member')""{code}
 

*[output]* 
2019-07-20 19:45:46.799 UTC [viperutil] getKeysRecursively -> DEBU 001 Found map[string]interface{} value for peer.BCCSP
2019-07-20 19:45:46.800 UTC [viperutil] getKeysRecursively -> DEBU 002 Found map[string]interface{} value for peer.BCCSP.PKCS11
2019-07-20 19:45:46.800 UTC [viperutil] getKeysRecursively -> DEBU 003 Found map[string]interface{} value for peer.BCCSP.PKCS11.FileKeyStore
2019-07-20 19:45:46.800 UTC [viperutil] unmarshalJSON -> DEBU 004 Unmarshal JSON: value is not a string: <nil>
2019-07-20 19:45:46.800 UTC [viperutil] getKeysRecursively -> DEBU 005 Found real value for peer.BCCSP.PKCS11.FileKeyStore.KeyStore setting to <nil> <nil>
2019-07-20 19:45:46.801 UTC [viperutil] unmarshalJSON -> DEBU 006 Unmarshal JSON: value is not a string: <nil>
2019-07-20 19:45:46.801 UTC [viperutil] getKeysRecursively -> DEBU 007 Found real value for peer.BCCSP.PKCS11.Library setting to <nil> <nil>
2019-07-20 19:45:46.801 UTC [viperutil] unmarshalJSON -> DEBU 008 Unmarshal JSON: value is not a string: <nil>
2019-07-20 19:45:46.801 UTC [viperutil] getKeysRecursively -> DEBU 009 Found real value for peer.BCCSP.PKCS11.Label setting to <nil> <nil>
2019-07-20 19:45:46.801 UTC [viperutil] unmarshalJSON -> DEBU 00a Unmarshal JSON: value is not a string: <nil>
2019-07-20 19:45:46.802 UTC [viperutil] getKeysRecursively -> DEBU 00b Found real value for peer.BCCSP.PKCS11.Pin setting to <nil> <nil>
2019-07-20 19:45:46.802 UTC [viperutil] unmarshalJSON -> DEBU 00c Unmarshal JSON: value is not a string: <nil>
2019-07-20 19:45:46.802 UTC [viperutil] getKeysRecursively -> DEBU 00d Found real value for peer.BCCSP.PKCS11.Hash setting to <nil> <nil>
2019-07-20 19:45:46.802 UTC [viperutil] unmarshalJSON -> DEBU 00e Unmarshal JSON: value is not a string: <nil>
2019-07-20 19:45:46.802 UTC [viperutil] getKeysRecursively -> DEBU 00f Found real value for peer.BCCSP.PKCS11.Security setting to <nil> <nil>
2019-07-20 19:45:46.803 UTC [viperutil] unmarshalJSON -> DEBU 010 Unmarshal JSON: value cannot be unmarshalled: invalid character 'S' looking for beginning of value
2019-07-20 19:45:46.803 UTC [viperutil] getKeysRecursively -> DEBU 011 Found real value for peer.BCCSP.Default setting to string SW
2019-07-20 19:45:46.803 UTC [viperutil] getKeysRecursively -> DEBU 012 Found map[string]interface{} value for peer.BCCSP.SW
2019-07-20 19:45:46.803 UTC [viperutil] getKeysRecursively -> DEBU 013 Found map[string]interface{} value for peer.BCCSP.SW.FileKeyStore
2019-07-20 19:45:46.803 UTC [viperutil] unmarshalJSON -> DEBU 014 Unmarshal JSON: value cannot be unmarshalled: unexpected end of JSON input
2019-07-20 19:45:46.803 UTC [viperutil] getKeysRecursively -> DEBU 015 Found real value for peer.BCCSP.SW.FileKeyStore.KeyStore setting to string
2019-07-20 19:45:46.803 UTC [viperutil] unmarshalJSON -> DEBU 016 Unmarshal JSON: value cannot be unmarshalled: invalid character 'S' looking for beginning of value
2019-07-20 19:45:46.803 UTC [viperutil] getKeysRecursively -> DEBU 017 Found real value for peer.BCCSP.SW.Hash setting to string SHA2
2019-07-20 19:45:46.804 UTC [viperutil] unmarshalJSON -> DEBU 018 Unmarshal JSON: value is not a string: 256
2019-07-20 19:45:46.804 UTC [viperutil] getKeysRecursively -> DEBU 019 Found real value for peer.BCCSP.SW.Security setting to int 256
2019-07-20 19:45:46.804 UTC [viperutil] EnhancedExactUnmarshalKey -> DEBU 01a map[peer.BCCSP:map[PKCS11:map[Pin:<nil> Hash:<nil> Security:<nil> FileKeyStore:map[KeyStore:<nil>] Library:<nil> Label:<nil>] Default:SW SW:map[Security:256 FileKeyStore:map[KeyStore:] Hash:SHA2]]]
2019-07-20 19:45:46.804 UTC [bccsp_sw] openKeyStore -> DEBU 01b KeyStore opened at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/keystore]...done
2019-07-20 19:45:46.804 UTC [bccsp] initBCCSP -> DEBU 01c Initialize BCCSP [SW]
2019-07-20 19:45:46.804 UTC [msp] getPemMaterialFromDir -> DEBU 01d Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/signcerts
2019-07-20 19:45:46.804 UTC [msp] getPemMaterialFromDir -> DEBU 01e Inspecting file /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/signcerts/Admin@org2.example.com-cert.pem
2019-07-20 19:45:46.804 UTC [msp] getPemMaterialFromDir -> DEBU 01f Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/cacerts
2019-07-20 19:45:46.805 UTC [msp] getPemMaterialFromDir -> DEBU 020 Inspecting file /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/cacerts/ca.org2.example.com-cert.pem
2019-07-20 19:45:46.805 UTC [msp] getPemMaterialFromDir -> DEBU 021 Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/admincerts
2019-07-20 19:45:46.805 UTC [msp] getPemMaterialFromDir -> DEBU 022 Inspecting file /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/admincerts/Admin@org2.example.com-cert.pem
2019-07-20 19:45:46.805 UTC [msp] getPemMaterialFromDir -> DEBU 023 Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/intermediatecerts
2019-07-20 19:45:46.805 UTC [msp] getMspConfig -> DEBU 024 Intermediate certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/intermediatecerts]. Skipping. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/intermediatecerts: no such file or directory]
2019-07-20 19:45:46.805 UTC [msp] getPemMaterialFromDir -> DEBU 025 Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/tlscacerts
2019-07-20 19:45:46.805 UTC [msp] getPemMaterialFromDir -> DEBU 026 Inspecting file /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/tlscacerts/tlsca.org2.example.com-cert.pem
2019-07-20 19:45:46.805 UTC [msp] getPemMaterialFromDir -> DEBU 027 Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/tlsintermediatecerts
2019-07-20 19:45:46.805 UTC [msp] getMspConfig -> DEBU 028 TLS intermediate certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/tlsintermediatecerts]. Skipping. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/tlsintermediatecerts: no such file or directory]
2019-07-20 19:45:46.806 UTC [msp] getPemMaterialFromDir -> DEBU 029 Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/crls
2019-07-20 19:45:46.806 UTC [msp] getMspConfig -> DEBU 02a crls folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/crls]. Skipping. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/crls: no such file or directory]
2019-07-20 19:45:46.806 UTC [msp] getMspConfig -> DEBU 02b MSP configuration file not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/config.yaml]: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/config.yaml: no such file or directory]
2019-07-20 19:45:46.806 UTC [msp] newBccspMsp -> DEBU 02c Creating BCCSP-based MSP instance
2019-07-20 19:45:46.806 UTC [msp] New -> DEBU 02d Creating Cache-MSP instance
2019-07-20 19:45:46.806 UTC [msp] loadLocaMSP -> DEBU 02e Created new local MSP
2019-07-20 19:45:46.806 UTC [msp] Setup -> DEBU 02f Setting up MSP instance Org2MSP
2019-07-20 19:45:46.807 UTC [msp/identity] newIdentity -> DEBU 030 Creating identity instance for cert -----BEGIN CERTIFICATE-----
MIICRDCCAeqgAwIBAgIRAJdZnqIqmxovrwa+wxq0eykwCgYIKoZIzj0EAwIwczEL
MAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG
cmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh
Lm9yZzIuZXhhbXBsZS5jb20wHhcNMTkwNzE4MjA0NzQ1WhcNMjkwNzE1MjA0NzQ1
WjBzMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN
U2FuIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEcMBoGA1UE
AxMTY2Eub3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BOkdw98vahnBZmf5gJi5bC1vW+l7i64t40Y6YLBOREHB3vsDY0m0B0RG+x8j/7k2
fbofPDCBUb97QDScTUl22T+jXzBdMA4GA1UdDwEB/wQEAwIBpjAPBgNVHSUECDAG
BgRVHSUAMA8GA1UdEwEB/wQFMAMBAf8wKQYDVR0OBCIEII3TQPYwdZCm+r/z32ut
A2l326qiQmle5guYxTEwEDdeMAoGCCqGSM49BAMCA0gAMEUCIQD0vpzT+TQEVvuV
4ALdv25ubrKvWfVntxSFlMfB1Wc8CQIgNcHz9skir69Z+Mz5Miwf4cZyQsqd4tXR
tTIx4HJoOjM=
-----END CERTIFICATE-----
2019-07-20 19:45:46.807 UTC [msp/identity] newIdentity -> DEBU 031 Creating identity instance for cert -----BEGIN CERTIFICATE-----
MIICKjCCAdGgAwIBAgIRANGRxiTP+P39oblB1+SBsYEwCgYIKoZIzj0EAwIwczEL
MAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG
cmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh
Lm9yZzIuZXhhbXBsZS5jb20wHhcNMTkwNzE4MjA0NzQ1WhcNMjkwNzE1MjA0NzQ1
WjBsMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN
U2FuIEZyYW5jaXNjbzEPMA0GA1UECxMGY2xpZW50MR8wHQYDVQQDDBZBZG1pbkBv
cmcyLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEcy+GtB7l
QASkzJInuXRGfn9lVIgn/mjqUcMtTLgPGren3L6EQWLofmZ8OUdipxx5LuV2Wq2l
NHAvu70K2GCTkqNNMEswDgYDVR0PAQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwKwYD
VR0jBCQwIoAgjdNA9jB1kKb6v/Pfa60DaXfbqqJCaV7mC5jFMTAQN14wCgYIKoZI
zj0EAwIDRwAwRAIgAdOYpCm+jlNu8ZmOnHCK7wUguLZYNdVPWR5KlcAdRo4CIEeJ
JMCtjJPotSkCDwJNnCPDC97CNg4LxIq5P5z9eOm5
-----END CERTIFICATE-----
2019-07-20 19:45:46.821 UTC [msp/identity] newIdentity -> DEBU 032 Creating identity instance for cert -----BEGIN CERTIFICATE-----
MIICKjCCAdGgAwIBAgIRANGRxiTP+P39oblB1+SBsYEwCgYIKoZIzj0EAwIwczEL
MAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG
cmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh
Lm9yZzIuZXhhbXBsZS5jb20wHhcNMTkwNzE4MjA0NzQ1WhcNMjkwNzE1MjA0NzQ1
WjBsMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN
U2FuIEZyYW5jaXNjbzEPMA0GA1UECxMGY2xpZW50MR8wHQYDVQQDDBZBZG1pbkBv
cmcyLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEcy+GtB7l
QASkzJInuXRGfn9lVIgn/mjqUcMtTLgPGren3L6EQWLofmZ8OUdipxx5LuV2Wq2l
NHAvu70K2GCTkqNNMEswDgYDVR0PAQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwKwYD
VR0jBCQwIoAgjdNA9jB1kKb6v/Pfa60DaXfbqqJCaV7mC5jFMTAQN14wCgYIKoZI
zj0EAwIDRwAwRAIgAdOYpCm+jlNu8ZmOnHCK7wUguLZYNdVPWR5KlcAdRo4CIEeJ
JMCtjJPotSkCDwJNnCPDC97CNg4LxIq5P5z9eOm5
-----END CERTIFICATE-----
2019-07-20 19:45:46.821 UTC [bccsp_sw] loadPrivateKey -> DEBU 033 Loading private key [b9ac5d1275aaab8a0b8cf7464e139250fb095946fd57f50b65adb527c170f44b] at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/keystore/b9ac5d1275aaab8a0b8cf7464e139250fb095946fd57f50b65adb527c170f44b_sk]...
2019-07-20 19:45:46.822 UTC [msp/identity] newIdentity -> DEBU 034 Creating identity instance for cert -----BEGIN CERTIFICATE-----
MIICKjCCAdGgAwIBAgIRANGRxiTP+P39oblB1+SBsYEwCgYIKoZIzj0EAwIwczEL
MAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG
cmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh
Lm9yZzIuZXhhbXBsZS5jb20wHhcNMTkwNzE4MjA0NzQ1WhcNMjkwNzE1MjA0NzQ1
WjBsMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN
U2FuIEZyYW5jaXNjbzEPMA0GA1UECxMGY2xpZW50MR8wHQYDVQQDDBZBZG1pbkBv
cmcyLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEcy+GtB7l
QASkzJInuXRGfn9lVIgn/mjqUcMtTLgPGren3L6EQWLofmZ8OUdipxx5LuV2Wq2l
NHAvu70K2GCTkqNNMEswDgYDVR0PAQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwKwYD
VR0jBCQwIoAgjdNA9jB1kKb6v/Pfa60DaXfbqqJCaV7mC5jFMTAQN14wCgYIKoZI
zj0EAwIDRwAwRAIgAdOYpCm+jlNu8ZmOnHCK7wUguLZYNdVPWR5KlcAdRo4CIEeJ
JMCtjJPotSkCDwJNnCPDC97CNg4LxIq5P5z9eOm5
-----END CERTIFICATE-----
2019-07-20 19:45:46.822 UTC [msp] setupSigningIdentity -> DEBU 035 Signing identity expires at 2029-07-15 20:47:45 +0000 UTC
2019-07-20 19:45:46.822 UTC [msp] Validate -> DEBU 036 MSP Org2MSP validating identity
2019-07-20 19:45:46.823 UTC [grpc] Printf -> DEBU 037 parsed scheme: """"
2019-07-20 19:45:46.823 UTC [grpc] Printf -> DEBU 038 scheme """" not registered, fallback to default scheme
2019-07-20 19:45:46.823 UTC [grpc] Printf -> DEBU 039 ccResolverWrapper: sending new addresses to cc: [\{peer0.org2.example.com:7051 0 <nil>}]
2019-07-20 19:45:46.823 UTC [grpc] Printf -> DEBU 03a ClientConn switching balancer to ""pick_first""
2019-07-20 19:45:46.824 UTC [grpc] Printf -> DEBU 03b pickfirstBalancer: HandleSubConnStateChange: 0xc42055da90, CONNECTING
2019-07-20 19:45:46.825 UTC [grpc] Printf -> DEBU 03c pickfirstBalancer: HandleSubConnStateChange: 0xc42055da90, READY
2019-07-20 19:45:46.826 UTC [grpc] Printf -> DEBU 03d parsed scheme: """"
2019-07-20 19:45:46.826 UTC [grpc] Printf -> DEBU 03e scheme """" not registered, fallback to default scheme
2019-07-20 19:45:46.826 UTC [grpc] Printf -> DEBU 03f ccResolverWrapper: sending new addresses to cc: [\{peer0.org2.example.com:7051 0 <nil>}]
2019-07-20 19:45:46.826 UTC [grpc] Printf -> DEBU 040 ClientConn switching balancer to ""pick_first""
2019-07-20 19:45:46.826 UTC [grpc] Printf -> DEBU 041 pickfirstBalancer: HandleSubConnStateChange: 0xc4205f5950, CONNECTING
2019-07-20 19:45:46.828 UTC [grpc] Printf -> DEBU 042 pickfirstBalancer: HandleSubConnStateChange: 0xc4205f5950, READY
2019-07-20 19:45:46.829 UTC [msp] GetDefaultSigningIdentity -> DEBU 043 Obtaining default signing identity
2019-07-20 19:45:46.829 UTC [grpc] Printf -> DEBU 044 parsed scheme: """"
2019-07-20 19:45:46.829 UTC [grpc] Printf -> DEBU 045 scheme """" not registered, fallback to default scheme
2019-07-20 19:45:46.829 UTC [grpc] Printf -> DEBU 046 ccResolverWrapper: sending new addresses to cc: [\{orderer.example.com:7050 0 <nil>}]
2019-07-20 19:45:46.829 UTC [grpc] Printf -> DEBU 047 ClientConn switching balancer to ""pick_first""
2019-07-20 19:45:46.829 UTC [grpc] Printf -> DEBU 048 pickfirstBalancer: HandleSubConnStateChange: 0xc4204c9880, CONNECTING
2019-07-20 19:45:46.831 UTC [grpc] Printf -> DEBU 049 pickfirstBalancer: HandleSubConnStateChange: 0xc4204c9880, READY
2019-07-20 19:45:46.831 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 04a Using default escc
2019-07-20 19:45:46.832 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 04b Using default vscc
2019-07-20 19:45:46.832 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 04c java chaincode disabled
2019-07-20 19:45:46.832 UTC [msp/identity] Sign -> DEBU 04d Sign: plaintext: 0AC0070A6808031A0C08EADECDE90510...324D53500A04657363630A0476736363
2019-07-20 19:45:46.832 UTC [msp/identity] Sign -> DEBU 04e Sign: digest: BAC4FC54FE2164E912E3CBF4C8D567784E9B971B603544EBDC649B86CAD79F25

 
----
{code:java}
// command I used to list instantiated chaincodes
docker exec -e ""CORE_PEER_ADDRESS=peer0.org2.example.com:7051"" cli2 peer chaincode list --instantiated -C channeltwo
{code}
 

 *[output]* 
2019-07-20 19:52:41.820 UTC [viperutil] getKeysRecursively -> DEBU 001 Found map[string]interface{} value for peer.BCCSP
2019-07-20 19:52:41.821 UTC [viperutil] getKeysRecursively -> DEBU 002 Found map[string]interface{} value for peer.BCCSP.SW
2019-07-20 19:52:41.821 UTC [viperutil] unmarshalJSON -> DEBU 003 Unmarshal JSON: value cannot be unmarshalled: invalid character 'S' looking for beginning of value
2019-07-20 19:52:41.821 UTC [viperutil] getKeysRecursively -> DEBU 004 Found real value for peer.BCCSP.SW.Hash setting to string SHA2
2019-07-20 19:52:41.821 UTC [viperutil] unmarshalJSON -> DEBU 005 Unmarshal JSON: value is not a string: 256
2019-07-20 19:52:41.821 UTC [viperutil] getKeysRecursively -> DEBU 006 Found real value for peer.BCCSP.SW.Security setting to int 256
2019-07-20 19:52:41.821 UTC [viperutil] getKeysRecursively -> DEBU 007 Found map[string]interface{} value for peer.BCCSP.SW.FileKeyStore
2019-07-20 19:52:41.821 UTC [viperutil] unmarshalJSON -> DEBU 008 Unmarshal JSON: value cannot be unmarshalled: unexpected end of JSON input
2019-07-20 19:52:41.821 UTC [viperutil] getKeysRecursively -> DEBU 009 Found real value for peer.BCCSP.SW.FileKeyStore.KeyStore setting to string
2019-07-20 19:52:41.822 UTC [viperutil] getKeysRecursively -> DEBU 00a Found map[string]interface{} value for peer.BCCSP.PKCS11
2019-07-20 19:52:41.822 UTC [viperutil] unmarshalJSON -> DEBU 00b Unmarshal JSON: value is not a string: <nil>
2019-07-20 19:52:41.822 UTC [viperutil] getKeysRecursively -> DEBU 00c Found real value for peer.BCCSP.PKCS11.Library setting to <nil> <nil>
2019-07-20 19:52:41.822 UTC [viperutil] unmarshalJSON -> DEBU 00d Unmarshal JSON: value is not a string: <nil>
2019-07-20 19:52:41.822 UTC [viperutil] getKeysRecursively -> DEBU 00e Found real value for peer.BCCSP.PKCS11.Label setting to <nil> <nil>
2019-07-20 19:52:41.822 UTC [viperutil] unmarshalJSON -> DEBU 00f Unmarshal JSON: value is not a string: <nil>
2019-07-20 19:52:41.823 UTC [viperutil] getKeysRecursively -> DEBU 010 Found real value for peer.BCCSP.PKCS11.Pin setting to <nil> <nil>
2019-07-20 19:52:41.823 UTC [viperutil] unmarshalJSON -> DEBU 011 Unmarshal JSON: value is not a string: <nil>
2019-07-20 19:52:41.823 UTC [viperutil] getKeysRecursively -> DEBU 012 Found real value for peer.BCCSP.PKCS11.Hash setting to <nil> <nil>
2019-07-20 19:52:41.823 UTC [viperutil] unmarshalJSON -> DEBU 013 Unmarshal JSON: value is not a string: <nil>
2019-07-20 19:52:41.823 UTC [viperutil] getKeysRecursively -> DEBU 014 Found real value for peer.BCCSP.PKCS11.Security setting to <nil> <nil>
2019-07-20 19:52:41.824 UTC [viperutil] getKeysRecursively -> DEBU 015 Found map[string]interface{} value for peer.BCCSP.PKCS11.FileKeyStore
2019-07-20 19:52:41.824 UTC [viperutil] unmarshalJSON -> DEBU 016 Unmarshal JSON: value is not a string: <nil>
2019-07-20 19:52:41.824 UTC [viperutil] getKeysRecursively -> DEBU 017 Found real value for peer.BCCSP.PKCS11.FileKeyStore.KeyStore setting to <nil> <nil>
2019-07-20 19:52:41.824 UTC [viperutil] unmarshalJSON -> DEBU 018 Unmarshal JSON: value cannot be unmarshalled: invalid character 'S' looking for beginning of value
2019-07-20 19:52:41.824 UTC [viperutil] getKeysRecursively -> DEBU 019 Found real value for peer.BCCSP.Default setting to string SW
2019-07-20 19:52:41.824 UTC [viperutil] EnhancedExactUnmarshalKey -> DEBU 01a map[peer.BCCSP:map[SW:map[Hash:SHA2 Security:256 FileKeyStore:map[KeyStore:]] PKCS11:map[FileKeyStore:map[KeyStore:<nil>] Library:<nil> Label:<nil> Pin:<nil> Hash:<nil> Security:<nil>] Default:SW]]
2019-07-20 19:52:41.825 UTC [bccsp_sw] openKeyStore -> DEBU 01b KeyStore opened at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/keystore]...done
2019-07-20 19:52:41.825 UTC [bccsp] initBCCSP -> DEBU 01c Initialize BCCSP [SW]
2019-07-20 19:52:41.825 UTC [msp] getPemMaterialFromDir -> DEBU 01d Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/signcerts
2019-07-20 19:52:41.825 UTC [msp] getPemMaterialFromDir -> DEBU 01e Inspecting file /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/signcerts/Admin@org2.example.com-cert.pem
2019-07-20 19:52:41.825 UTC [msp] getPemMaterialFromDir -> DEBU 01f Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/cacerts
2019-07-20 19:52:41.825 UTC [msp] getPemMaterialFromDir -> DEBU 020 Inspecting file /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/cacerts/ca.org2.example.com-cert.pem
2019-07-20 19:52:41.825 UTC [msp] getPemMaterialFromDir -> DEBU 021 Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/admincerts
2019-07-20 19:52:41.825 UTC [msp] getPemMaterialFromDir -> DEBU 022 Inspecting file /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/admincerts/Admin@org2.example.com-cert.pem
2019-07-20 19:52:41.825 UTC [msp] getPemMaterialFromDir -> DEBU 023 Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/intermediatecerts
2019-07-20 19:52:41.826 UTC [msp] getMspConfig -> DEBU 024 Intermediate certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/intermediatecerts]. Skipping. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/intermediatecerts: no such file or directory]
2019-07-20 19:52:41.826 UTC [msp] getPemMaterialFromDir -> DEBU 025 Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/tlscacerts
2019-07-20 19:52:41.826 UTC [msp] getPemMaterialFromDir -> DEBU 026 Inspecting file /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/tlscacerts/tlsca.org2.example.com-cert.pem
2019-07-20 19:52:41.826 UTC [msp] getPemMaterialFromDir -> DEBU 027 Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/tlsintermediatecerts
2019-07-20 19:52:41.826 UTC [msp] getMspConfig -> DEBU 028 TLS intermediate certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/tlsintermediatecerts]. Skipping. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/tlsintermediatecerts: no such file or directory]
2019-07-20 19:52:41.826 UTC [msp] getPemMaterialFromDir -> DEBU 029 Reading directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/crls
2019-07-20 19:52:41.826 UTC [msp] getMspConfig -> DEBU 02a crls folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/crls]. Skipping. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/crls: no such file or directory]
2019-07-20 19:52:41.826 UTC [msp] getMspConfig -> DEBU 02b MSP configuration file not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/config.yaml]: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/config.yaml: no such file or directory]
2019-07-20 19:52:41.826 UTC [msp] newBccspMsp -> DEBU 02c Creating BCCSP-based MSP instance
2019-07-20 19:52:41.826 UTC [msp] New -> DEBU 02d Creating Cache-MSP instance
2019-07-20 19:52:41.826 UTC [msp] loadLocaMSP -> DEBU 02e Created new local MSP
2019-07-20 19:52:41.826 UTC [msp] Setup -> DEBU 02f Setting up MSP instance Org2MSP
2019-07-20 19:52:41.827 UTC [msp/identity] newIdentity -> DEBU 030 Creating identity instance for cert -----BEGIN CERTIFICATE-----
MIICRDCCAeqgAwIBAgIRAJdZnqIqmxovrwa+wxq0eykwCgYIKoZIzj0EAwIwczEL
MAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG
cmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh
Lm9yZzIuZXhhbXBsZS5jb20wHhcNMTkwNzE4MjA0NzQ1WhcNMjkwNzE1MjA0NzQ1
WjBzMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN
U2FuIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEcMBoGA1UE
AxMTY2Eub3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BOkdw98vahnBZmf5gJi5bC1vW+l7i64t40Y6YLBOREHB3vsDY0m0B0RG+x8j/7k2
fbofPDCBUb97QDScTUl22T+jXzBdMA4GA1UdDwEB/wQEAwIBpjAPBgNVHSUECDAG
BgRVHSUAMA8GA1UdEwEB/wQFMAMBAf8wKQYDVR0OBCIEII3TQPYwdZCm+r/z32ut
A2l326qiQmle5guYxTEwEDdeMAoGCCqGSM49BAMCA0gAMEUCIQD0vpzT+TQEVvuV
4ALdv25ubrKvWfVntxSFlMfB1Wc8CQIgNcHz9skir69Z+Mz5Miwf4cZyQsqd4tXR
tTIx4HJoOjM=
-----END CERTIFICATE-----
2019-07-20 19:52:41.827 UTC [msp/identity] newIdentity -> DEBU 031 Creating identity instance for cert -----BEGIN CERTIFICATE-----
MIICKjCCAdGgAwIBAgIRANGRxiTP+P39oblB1+SBsYEwCgYIKoZIzj0EAwIwczEL
MAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG
cmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh
Lm9yZzIuZXhhbXBsZS5jb20wHhcNMTkwNzE4MjA0NzQ1WhcNMjkwNzE1MjA0NzQ1
WjBsMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN
U2FuIEZyYW5jaXNjbzEPMA0GA1UECxMGY2xpZW50MR8wHQYDVQQDDBZBZG1pbkBv
cmcyLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEcy+GtB7l
QASkzJInuXRGfn9lVIgn/mjqUcMtTLgPGren3L6EQWLofmZ8OUdipxx5LuV2Wq2l
NHAvu70K2GCTkqNNMEswDgYDVR0PAQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwKwYD
VR0jBCQwIoAgjdNA9jB1kKb6v/Pfa60DaXfbqqJCaV7mC5jFMTAQN14wCgYIKoZI
zj0EAwIDRwAwRAIgAdOYpCm+jlNu8ZmOnHCK7wUguLZYNdVPWR5KlcAdRo4CIEeJ
JMCtjJPotSkCDwJNnCPDC97CNg4LxIq5P5z9eOm5
-----END CERTIFICATE-----
2019-07-20 19:52:41.839 UTC [msp/identity] newIdentity -> DEBU 032 Creating identity instance for cert -----BEGIN CERTIFICATE-----
MIICKjCCAdGgAwIBAgIRANGRxiTP+P39oblB1+SBsYEwCgYIKoZIzj0EAwIwczEL
MAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG
cmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh
Lm9yZzIuZXhhbXBsZS5jb20wHhcNMTkwNzE4MjA0NzQ1WhcNMjkwNzE1MjA0NzQ1
WjBsMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN
U2FuIEZyYW5jaXNjbzEPMA0GA1UECxMGY2xpZW50MR8wHQYDVQQDDBZBZG1pbkBv
cmcyLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEcy+GtB7l
QASkzJInuXRGfn9lVIgn/mjqUcMtTLgPGren3L6EQWLofmZ8OUdipxx5LuV2Wq2l
NHAvu70K2GCTkqNNMEswDgYDVR0PAQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwKwYD
VR0jBCQwIoAgjdNA9jB1kKb6v/Pfa60DaXfbqqJCaV7mC5jFMTAQN14wCgYIKoZI
zj0EAwIDRwAwRAIgAdOYpCm+jlNu8ZmOnHCK7wUguLZYNdVPWR5KlcAdRo4CIEeJ
JMCtjJPotSkCDwJNnCPDC97CNg4LxIq5P5z9eOm5
-----END CERTIFICATE-----
2019-07-20 19:52:41.839 UTC [bccsp_sw] loadPrivateKey -> DEBU 033 Loading private key [b9ac5d1275aaab8a0b8cf7464e139250fb095946fd57f50b65adb527c170f44b] at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/keystore/b9ac5d1275aaab8a0b8cf7464e139250fb095946fd57f50b65adb527c170f44b_sk]...
2019-07-20 19:52:41.840 UTC [msp/identity] newIdentity -> DEBU 034 Creating identity instance for cert -----BEGIN CERTIFICATE-----
MIICKjCCAdGgAwIBAgIRANGRxiTP+P39oblB1+SBsYEwCgYIKoZIzj0EAwIwczEL
MAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG
cmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh
Lm9yZzIuZXhhbXBsZS5jb20wHhcNMTkwNzE4MjA0NzQ1WhcNMjkwNzE1MjA0NzQ1
WjBsMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN
U2FuIEZyYW5jaXNjbzEPMA0GA1UECxMGY2xpZW50MR8wHQYDVQQDDBZBZG1pbkBv
cmcyLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEcy+GtB7l
QASkzJInuXRGfn9lVIgn/mjqUcMtTLgPGren3L6EQWLofmZ8OUdipxx5LuV2Wq2l
NHAvu70K2GCTkqNNMEswDgYDVR0PAQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwKwYD
VR0jBCQwIoAgjdNA9jB1kKb6v/Pfa60DaXfbqqJCaV7mC5jFMTAQN14wCgYIKoZI
zj0EAwIDRwAwRAIgAdOYpCm+jlNu8ZmOnHCK7wUguLZYNdVPWR5KlcAdRo4CIEeJ
JMCtjJPotSkCDwJNnCPDC97CNg4LxIq5P5z9eOm5
-----END CERTIFICATE-----
2019-07-20 19:52:41.840 UTC [msp] setupSigningIdentity -> DEBU 035 Signing identity expires at 2029-07-15 20:47:45 +0000 UTC
2019-07-20 19:52:41.840 UTC [msp] Validate -> DEBU 036 MSP Org2MSP validating identity
2019-07-20 19:52:41.841 UTC [grpc] Printf -> DEBU 037 parsed scheme: """"
2019-07-20 19:52:41.841 UTC [grpc] Printf -> DEBU 038 scheme """" not registered, fallback to default scheme
2019-07-20 19:52:41.841 UTC [grpc] Printf -> DEBU 039 ccResolverWrapper: sending new addresses to cc: [\{peer0.org2.example.com:7051 0 <nil>}]
2019-07-20 19:52:41.841 UTC [grpc] Printf -> DEBU 03a ClientConn switching balancer to ""pick_first""
2019-07-20 19:52:41.841 UTC [grpc] Printf -> DEBU 03b pickfirstBalancer: HandleSubConnStateChange: 0xc4204afa70, CONNECTING
2019-07-20 19:52:41.844 UTC [grpc] Printf -> DEBU 03c pickfirstBalancer: HandleSubConnStateChange: 0xc4204afa70, READY
2019-07-20 19:52:41.845 UTC [grpc] Printf -> DEBU 03d parsed scheme: """"
2019-07-20 19:52:41.845 UTC [grpc] Printf -> DEBU 03e scheme """" not registered, fallback to default scheme
2019-07-20 19:52:41.845 UTC [grpc] Printf -> DEBU 03f ccResolverWrapper: sending new addresses to cc: [\{peer0.org2.example.com:7051 0 <nil>}]
2019-07-20 19:52:41.845 UTC [grpc] Printf -> DEBU 040 ClientConn switching balancer to ""pick_first""
2019-07-20 19:52:41.846 UTC [grpc] Printf -> DEBU 041 pickfirstBalancer: HandleSubConnStateChange: 0xc42035f500, CONNECTING
2019-07-20 19:52:41.848 UTC [grpc] Printf -> DEBU 042 pickfirstBalancer: HandleSubConnStateChange: 0xc42035f500, READY
2019-07-20 19:52:41.848 UTC [msp] GetDefaultSigningIdentity -> DEBU 043 Obtaining default signing identity
2019-07-20 19:52:41.849 UTC [msp/identity] Sign -> DEBU 044 Sign: plaintext: 0AC0070A6808031A0C0889E2CDE90510...0F0A0D676574636861696E636F646573
2019-07-20 19:52:41.849 UTC [msp/identity] Sign -> DEBU 045 Sign: digest: BD719ADD0016A4A7D305730A4F9E1E80B162C838B01CBBE0D39DE5123C16670F
Get instantiated chaincodes on channel channeltwo:",,denyeart,heatherp,yun_chen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00u1o:",,,,Unset,Unset,,,,,,,,,,,,,,"I followed this article to set up multiple organizations:
https://www.skcript.com/svr/setting-hyperledger-fabric-network-multiple-chaincodes-channels/",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,heatherp,yun_chen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/19 1:00 PM;denyeart;When you instantiate you'll see log message like this during endorsement phase:

{code:java}
2019-07-15 12:47:57.884 EDT [endorser] callChaincode -> INFO 1c8 [mychannel][73da5c4b] Entry chaincode: name:""lscc"" 
2019-07-15 12:47:57.884 EDT [chaincode] Execute -> DEBU 1c9 Entry
2019-07-15 12:47:57.884 EDT [chaincode] handleMessage -> DEBU 1ca [73da5c4b] Fabric side handling ChaincodeMessage of type: GET_STATE in state ready
2019-07-15 12:47:57.884 EDT [chaincode] HandleTransaction -> DEBU 1cb [73da5c4b] handling GET_STATE from chaincode
2019-07-15 12:47:57.884 EDT [chaincode] HandleGetState -> DEBU 1cc [73da5c4b] getting state for chaincode lscc, key marblesp, channel mychannel
2019-07-15 12:47:57.884 EDT [stateleveldb] GetState -> DEBU 1cd GetState(). ns=lscc, key=marblesp
2019-07-15 12:47:57.884 EDT [chaincode] HandleGetState -> DEBU 1ce [73da5c4b] No state associated with key: marblesp. Sending RESPONSE with an empty payload
2019-07-15 12:47:57.884 EDT [chaincode] HandleTransaction -> DEBU 1cf [73da5c4b] Completed GET_STATE. Sending RESPONSE
2019-07-15 12:47:57.885 EDT [chaincode] handleMessage -> DEBU 1d0 [73da5c4b] Fabric side handling ChaincodeMessage of type: PUT_STATE in state ready
2019-07-15 12:47:57.885 EDT [chaincode] HandleTransaction -> DEBU 1d1 [73da5c4b] handling PUT_STATE from chaincode
2019-07-15 12:47:57.885 EDT [chaincode] HandleTransaction -> DEBU 1d2 [73da5c4b] Completed PUT_STATE. Sending RESPONSE
2019-07-15 12:47:57.885 EDT [chaincode] handleMessage -> DEBU 1d3 [73da5c4b] Fabric side handling ChaincodeMessage of type: PUT_STATE in state ready
2019-07-15 12:47:57.885 EDT [chaincode] HandleTransaction -> DEBU 1d4 [73da5c4b] handling PUT_STATE from chaincode
2019-07-15 12:47:57.885 EDT [chaincode] HandleTransaction -> DEBU 1d5 [73da5c4b] Completed PUT_STATE. Sending RESPONSE
2019-07-15 12:47:57.885 EDT [chaincode] handleMessage -> DEBU 1d6 [73da5c4b] Fabric side handling ChaincodeMessage of type: COMPLETED in state ready
2019-07-15 12:47:57.885 EDT [chaincode] Notify -> DEBU 1d7 [73da5c4b] notifying Txid:73da5c4b94dbc055f604f7c2facc383cbbda3d6f1d084d8ba84fa08a6e312e9e, channelID:mychannel
2019-07-15 12:47:57.885 EDT [chaincode] Execute -> DEBU 1d8 Exit
2019-07-15 12:47:57.885 EDT [chaincode] LaunchConfig -> DEBU 1d9 launchConfig: executable:""chaincode"",Args:[chaincode,-peer.address=9.107.214.250:7052],Envs:[CORE_CHAINCODE_LOGGING_LEVEL=info,CORE_CHAINCODE_LOGGING_SHIM=warning,CORE_CHAINCODE_LOGGING_FORMAT=%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message},CORE_CHAINCODE_ID_NAME=marblesp:0,CORE_PEER_TLS_ENABLED=false],Files:[]
2019-07-15 12:47:57.885 EDT [chaincode] Start -> DEBU 1da start container: marblesp:0
2019-07-15 12:47:57.885 EDT [chaincode] Start -> DEBU 1db start container with args: chaincode -peer.address=9.107.214.250:7052
2019-07-15 12:47:57.885 EDT [chaincode] Start -> DEBU 1dc start container with env:
	CORE_CHAINCODE_LOGGING_LEVEL=info
	CORE_CHAINCODE_LOGGING_SHIM=warning
	CORE_CHAINCODE_LOGGING_FORMAT=%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}
	CORE_CHAINCODE_ID_NAME=marblesp:0
	CORE_PEER_TLS_ENABLED=false
2019-07-15 12:47:57.885 EDT [container] lockContainer -> DEBU 1dd waiting for container(marblesp-0) lock
2019-07-15 12:47:57.885 EDT [container] lockContainer -> DEBU 1de got container (marblesp-0) lock
2019-07-15 12:47:57.886 EDT [dockercontroller] stopInternal -> DEBU 1df stopping container id=dev-jdoe-marblesp-0
2019-07-15 12:47:57.888 EDT [dockercontroller] stopInternal -> DEBU 1e0 stop container result error=""No such container: dev-jdoe-marblesp-0""
2019-07-15 12:47:57.888 EDT [dockercontroller] stopInternal -> DEBU 1e1 killing container id=dev-jdoe-marblesp-0
2019-07-15 12:47:57.890 EDT [dockercontroller] stopInternal -> DEBU 1e2 kill container result id=dev-jdoe-marblesp-0 error=""No such container: dev-jdoe-marblesp-0""
2019-07-15 12:47:57.890 EDT [dockercontroller] stopInternal -> DEBU 1e3 removing container id=dev-jdoe-marblesp-0
2019-07-15 12:47:57.892 EDT [dockercontroller] stopInternal -> DEBU 1e4 remove container result id=dev-jdoe-marblesp-0 error=""No such container: dev-jdoe-marblesp-0""
2019-07-15 12:47:57.892 EDT [dockercontroller] createContainer -> DEBU 1e5 create container imageID=dev-jdoe-marblesp-0-c07ccb031678e37d705026111a8125b464ec569fe30e81eb0b750ba387b091a4 containerID=dev-jdoe-marblesp-0
2019-07-15 12:47:57.892 EDT [dockercontroller] getDockerHostConfig -> DEBU 1e6 docker container hostconfig NetworkMode: host
2019-07-15 12:47:58.034 EDT [dockercontroller] createContainer -> DEBU 1e7 created container imageID=dev-jdoe-marblesp-0-c07ccb031678e37d705026111a8125b464ec569fe30e81eb0b750ba387b091a4 containerID=dev-jdoe-marblesp-0
2019-07-15 12:47:58.313 EDT [dockercontroller] Start -> DEBU 1e8 Started container dev-jdoe-marblesp-0
2019-07-15 12:47:58.313 EDT [container] unlockContainer -> DEBU 1e9 container lock deleted(marblesp-0)
2019-07-15 12:47:58.313 EDT [container] lockContainer -> DEBU 1ea waiting for container(marblesp-0) lock
2019-07-15 12:47:58.313 EDT [container] lockContainer -> DEBU 1eb got container (marblesp-0) lock
2019-07-15 12:47:58.313 EDT [container] unlockContainer -> DEBU 1ec container lock deleted(marblesp-0)
2019-07-15 12:47:58.341 EDT [chaincode] handleMessage -> DEBU 1ed [] Fabric side handling ChaincodeMessage of type: REGISTER in state created
2019-07-15 12:47:58.341 EDT [chaincode] HandleRegister -> DEBU 1ee Received REGISTER in state created
2019-07-15 12:47:58.341 EDT [chaincode] Register -> DEBU 1ef registered handler complete for chaincode marblesp:0
2019-07-15 12:47:58.341 EDT [chaincode] HandleRegister -> DEBU 1f0 Got REGISTER for chaincodeID = name:""marblesp:0"" , sending back REGISTERED
2019-07-15 12:47:58.341 EDT [chaincode] HandleRegister -> DEBU 1f1 Changed state to established for name:""marblesp:0"" 
2019-07-15 12:47:58.341 EDT [chaincode] sendReady -> DEBU 1f2 sending READY for chaincode name:""marblesp:0"" 
2019-07-15 12:47:58.341 EDT [chaincode] sendReady -> DEBU 1f3 Changed to state ready for chaincode name:""marblesp:0"" 
2019-07-15 12:47:58.341 EDT [chaincode] Launch -> DEBU 1f4 launch complete
2019-07-15 12:47:58.341 EDT [chaincode] Execute -> DEBU 1f5 Entry
2019-07-15 12:47:58.344 EDT [chaincode] handleMessage -> DEBU 1f6 [73da5c4b] Fabric side handling ChaincodeMessage of type: COMPLETED in state ready
2019-07-15 12:47:58.344 EDT [chaincode] Notify -> DEBU 1f7 [73da5c4b] notifying Txid:73da5c4b94dbc055f604f7c2facc383cbbda3d6f1d084d8ba84fa08a6e312e9e, channelID:mychannel
2019-07-15 12:47:58.344 EDT [chaincode] Execute -> DEBU 1f8 Exit
2019-07-15 12:47:58.344 EDT [endorser] callChaincode -> INFO 1f9 [mychannel][73da5c4b] Exit chaincode: name:""lscc""  (460ms)
{code}


Then you'll see log messages like this during validation/commit phase:


{code:java}
2019-07-15 12:48:00.379 EDT [gossip.privdata] StoreBlock -> INFO 207 [mychannel] Received block [1] from buffer
2019-07-15 12:48:00.383 EDT [committer.txvalidator] Validate -> INFO 22e [mychannel] Validated block [1] in 3ms
2019-07-15 12:48:00.384 EDT [cceventmgmt] HandleStateUpdates -> INFO 23e Channel [mychannel]: Handling deploy or update of chaincode [marblesp]
2019-07-15 12:48:00.457 EDT [kvledger] CommitWithPvtData -> INFO 265 [mychannel] Committed block [1] with 1 transaction(s) in 73ms (state_validation=11ms block_and_pvtdata_commit=41ms state_commit=10ms) commitHash=[1b83c00e0071bea0eed1b8f24ba43c2d10730c89e601f38ee350491b79070b9d]
{code}


I'm not seeing evidence of either in your logs.  Please provide proof of such messages and then click *Information Provided* if you suspect a real bug.
If you simply need help and are not reporting a bug, please use RocketChat.;;;","15/Oct/19 11:20 PM;heatherp;Hi [~yun_chen] - can you reopen this if you're still seeing it?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
TypeScript constructor for Contract needs optional first arg,FABCN-283,33436,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,sstone1,sstone1,sstone1,03/Sep/18 6:54 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,06/Sep/18 9:02 PM,,0,,,,,,,"The namespace argument of the Contract constructor is not optional in the TypeScript definitions, but the JavaScript code allows this argument to be optional. The TypeScript should match up with the JavaScript.",,denyeart,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzp8n:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,sstone1,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Sep/18 9:02 PM;denyeart;https://gerrit.hyperledger.org/r/#/q/FAB-11842;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-chaincode-node-merge job: failed on test-fv-shim,FABCN-284,42190,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Works as Expected,,vijaypunugubati,vijaypunugubati,05/Sep/19 4:21 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,10/Sep/19 2:45 AM,,0,ci-failure,,,,,,"fabric-chaincode-node-merge job: failed to launch chaincode CRUD on test-fv-shim test on test-e2e.

*Branch:* Master

*Platform:* x86_64

*Error Snippet:* 
{code:java}
/1) Chaincode CRUD Get should get single key value:
00:17:29.024       Error: Command failed: docker exec org2_cli peer chaincode query  -C mychannel -n crud -c '{""Args"":[""org.mynamespace.crud:getKey"",""string""]}'
00:17:29.024  Error: endorsement failure during query. response: status:500 message:""error in simulation: failed to execute transaction e96d4f813fadf4b99c7bdb66a26fdb06591c2200c15cf1549452854d753a1bd9: could not launch chaincode crud:v0: error starting container: error building image: failed external (no builders defined) and docker build: docker image build failed: docker build failed: Error returned from build: 1 \""npm WARN deprecated @types/winston@2.4.4: This is a stub types definition. winston provides its own type definitions, so you do not need this installed.\nnpm ERR! Unexpected end of JSON input while parsing near '...t/cPe+aEBtrMq6BYqnf9w'\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /root/.npm/_logs/2019-09-04T13_40_47_748Z-debug.log\n\"""" 
00:17:29.024  
00:17:29.024        at ChildProcess.exithandler (child_process.js:294:12)
00:17:29.024        at maybeClose (internal/child_process.js:970:16)
00:17:29.024        at Process.ChildProcess._handle.onexit (internal/child_process.js:259:5)
00:17:29.024  
00:17:29.024  
00:17:29.024  
00:17:29.024  [13:43:26] '<anonymous>' errored after 7.3 min
00:17:29.024  [13:43:26] Error: child process exited with code 1
00:17:29.024      at ChildProcess.cmd.on (/w/workspace/fabric-chaincode-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/build/test/fv.js:20:18)
00:17:29.024      at ChildProcess.emit (events.js:189:13)
00:17:29.024      at ChildProcess.EventEmitter.emit (domain.js:459:23)
00:17:29.024      at maybeClose (internal/child_process.js:970:16)
00:17:29.024      at Process.ChildProcess._handle.onexit (internal/child_process.js:259:5)
00:17:29.024  [13:43:26] 'test-fv-shim' errored after 7.3 min
00:17:29.024  [13:43:26] 'test-e2e' errored after 7.3 min
00:17:29.024  [31m ERROR!!! test-e2e failed [0m/ code placeholder
{code}",,14gracel,awjh-ibm,mbwhite,sykesm,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00zaz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),14gracel,awjh-ibm,mbwhite,sykesm,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Sep/19 2:42 AM;sykesm;Looks like builds after the chaincode deps were vendored are successful. Should this be closed out?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Primitive Types are not correct serialised,FABCN-285,35799,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,03/Dec/18 8:20 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,03/Dec/18 10:43 PM,,0,,,,,,,"The String, Number types are converted to a raw JSON form, then they don't need to be. 

Makes handling the very basic types too hard. ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i001bb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Dec/18 8:22 PM;mbwhite;https://gerrit.hyperledger.org/r/27875;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
TypeError: Illegal buffer in stub.setEvent(),FABCN-286,33614,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Works as Expected,,dmk88,dmk88,10/Sep/18 8:09 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,21/Oct/18 5:11 PM,,0,,,,,,,"I use setEvent() [https://fabric-shim.github.io/fabric-shim.ChaincodeStub.html#setEvent__anchor] in my chaincode on node.js.
 And I have a problem. 
 For example:

 
{code:java}
console.info('=========== Node.js Chaincode query with Set Event Start ===========');
try {
    stub.setEvent('TransferTestEvent', Buffer.from('testPayload'));
} catch (e) {
    console.info('Catch Error: ');
    console.info(e);
}
console.info('Event add :');
console.info(stub.chaincodeEvent.getEventName());
console.info('Payload add :');
console.info(stub.chaincodeEvent.getPayload().toString('utf8'));
console.info('=========== Node.js Chaincode query with Set Event End ===========');{code}
 

After that I can see event name and payload in logs:

 
{code:java}
=========== Node.js Chaincode query with Set Event Start =========== 
Event add : 
TransferTest 
Payload add : test 
=========== Node.js Chaincode query with Set Event End =========== 
(node:19) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): TypeError: Illegal buffer 
(node:19) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.{code}
 

So I have error: TypeError: Illegal buffer.

setEvent(name, payload) is not async function. It`s only simple setter. So I can`t solve the problem of UnhandledPromiseRejectionWarning. 
 I think that problem is in encoding payload ""TypeError: Illegal buffer"" in fabric-shim.

 ",,davidkel,dmk88,SashaPESIC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzq47:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,dmk88,SashaPESIC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Sep/18 10:58 PM;davidkel;Moved to the correct component, was in the fabric node-sdk component.;;;","14/Sep/18 1:13 AM;davidkel;In your function did you call 
{code}
shim.success(...)
{code}
or
{code}
shim.error(...)
{code}
where 
{code}
const shim = require('fabric-shim');
{code}
I think you are getting this error because you didn't call either of these shim methods. Could you add the appropriate call to your function and see if that solves the problem.;;;","21/Oct/18 5:11 PM;davidkel;A fix has gone in to ensure that if neither has been called then it will call shim.error. This was actually in but due to cyclic requires it may not work as expected. However this is there only to ensure that chaincode always calls either shim.success or shim.error;;;","21/Jan/19 11:58 PM;SashaPESIC;Hi, 

I am getting the same error in 1.3 -> node SDK, in putState. Any fresh ideas on how to address the issue? I am calling shim.success.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
TypeScript chaincode cannot use async iterators,FABCN-287,40210,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,shimos,shimos,shimos,30/May/19 8:19 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,20/Jun/19 6:34 PM,,0,,,,,,,"*JavaScript chaincode:*
{code}
    async test(ctx) {
        const iterator = ctx.stub.getStateByRange(""a"", ""b"");
        for await (const res of iterator) {
            console.log(res);
        }
    }
{code}

works with the result like

{noformat}
{ namespace: 'mycc',
  key: 'a1',
  value:
   ByteBuffer {
     buffer:
      <Buffer 0a 11 0a 0f 0a 04 6d 79 63 63 12 02 61 31 1a 03 31 30 30 0a 10 0a 0e 0a 04 6d 79 63 63 12 02 61 32 1a 02 35 30 1a 24 31 36 30 37 39 61 35 35 2d 35 65 ... >,
     offset: 16,
     markedOffset: -1,
     limit: 19,
     littleEndian: true,
     noAssert: false } }
…
{noformat}

But for a TypeScript chaincode:

{code}
    async test(ctx: Context): Promise<Buffer> {
        const iterator = ctx.stub.getStateByRange(""a"", ""b"");

        for await (const res of iterator) {
           console.log(res);
        }
        return Buffer.from("""");
    }
{code}

does not compile with an error:

{noformat}
$ npx tsc
ts-chaincode.ts:20:33 - error TS2504: Type 'Promise<StateQueryIterator>' must have a '[Symbol.asyncIterator]()' method that returns an async iterator.

20         for await (const res of iterator) {
                                   ~~~~~~~~


Found 1 error.
{noformat}

It seems to be because the type definition was not updated in FAB-15330.
",,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-34,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,08dd59830ae46e3dc76af91d47a07c41f9c25b5f,Unset,No,,,"1|i00plw:",,,,Unset,Unset,,,,,,,,,,,,,,Try to use “for await” for iterators returned from getStateByRange() in a Typescript chaincode and compile it,,Unset,,,,,,Unset,,Unset,,(Please add usage information),shimos,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/May/19 8:36 AM;shimos;CR: [https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/31616];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
linting rules different on release-1.4/master branches,FABCN-288,42365,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Invalid: Works as Expected,heatherp,heatherp,heatherp,16/Sep/19 8:32 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,16/Sep/19 9:29 PM,,0,,,,,,,"In attempting to cherry pick the commit from: https://jira.hyperledger.org/browse/FAB-15027
 into master here: [https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33489]
 The build fails due to linting errors: [https://jenkins.hyperledger.org/job/fabric-chaincode-node-verify-x86_64/682/console]

 

*15:47:47* [14:47:44] Starting 'lint'...

*15:47:57* /w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node/fabric-shim/lib/logger.js

*15:47:57* 24:53 error 'MESSAGE' is not defined no-undef

*15:47:57* 31:7 error 'getTransport' is assigned a value but never used no-unused-vars

*15:47:57* 51:25 error 'config' is not defined no-undef

*15:47:57* 52:32 error 'config' is not defined no-undef

*15:47:57* ✖ 4 problems (4 errors, 0 warnings)

*15:47:57* [14:47:56] 'lint' errored after 11 s*15:47:57* [14:47:56] [31mESLintError[39m in plugin ""[36mgulp-eslint[39m""

*15:47:57* Message:*15:47:57* Failed with 4 errors

Why was this found in master branch but not in release-1.4? Why are the linting rules different?",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i01077:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Sep/19 9:02 PM;heatherp;There is a difference in version between ecmaVersions defined in .eslintrc between the branches. 
This commit changed it in master, and this wasn't ported to 1.4: https://github.com/hyperledger/fabric-chaincode-node/commit/4852d2233c2d3f2842ea8d86abcdff4b2b6da4f2;;;","16/Sep/19 9:29 PM;heatherp;Spoke to Dave, behaviour is expected due to different node versions. I'll have to fix my cherry picking CR to adhere to more up to date linting rules. Closing this;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
GetMetadata does not match schema for returns,FABCN-289,35317,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,awjh-ibm,awjh-ibm,awjh-ibm,14/Nov/18 12:29 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,20/Nov/18 1:40 AM,,0,,,,,,,When using Return annotation the value set in the metadata for returns does not match the schema.,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzyn3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove some unrequired files from the schema,FABCN-290,35896,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,mbwhite,mbwhite,mbwhite,06/Dec/18 12:01 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,06/Dec/18 7:52 PM,,0,,,,,,,,,denyeart,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i001uf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Dec/18 7:43 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/27959/;;;","06/Dec/18 7:52 PM;mbwhite;Not important to do now; pulling this out... ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
A tutorial for fabric-chaincode-api has an error. Running chaincode in development mode fails.,FABCN-291,36380,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,yuki-kon,yuki-kon,yuki-kon,22/Dec/18 9:23 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,03/Jan/19 10:57 AM,,0,,,,,,,"A tutorial for fabric-chaincode-api has an error. Running chaincode in development mode fails.
https://fabric-shim.github.io/master/tutorial-using-contractinterface.html

The following command is used in the current tutorial doc. 
{noformat}
$ $(npm bin)/fabric-chaincode-node --peer.address localhost:7052
{noformat}

After executing this command, the error messages below are returned.
{noformat}
fabric-chaincode-node <command>

Commands:
  fabric-chaincode-node start [options]  Start an empty chaincode

Options:
  --help         Show help  [boolean]
  -v, --version  Show version number  [boolean]

Not enough non-option arguments: got 0, need at least 1
{noformat}

To run chaincode in development mode, we should fix the command.
",,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,6786a8e830d6bbd68cef52b88f82a2eb9bb81b2d,Unset,No,,,"1|i004c7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yuki-kon,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Dec/18 9:47 AM;yuki-kon;CR is here. https://gerrit.hyperledger.org/r/#/c/28357/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to supply just the info section of contract metadata,FABCN-292,35892,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,05/Dec/18 9:28 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,06/Dec/18 7:47 PM,,0,,,,,,,"A typical use case would be to supply the info by metadata and then take the metadata from code.

The changes has also modfified slightly the cli - as it turned out metadata was coming as a string rather than an objecty",,denyeart,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i001tz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Dec/18 7:46 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/27954/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failure to call shim.success or shim.error fails with shim.error not found,FABCN-293,33845,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,18/Sep/18 10:06 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,19/Sep/18 10:41 PM,,0,,,,,,,"Failure to call wither shim.success or shim.error should result in a shim.error being done on behalf of the chaincode with an error to state that neither success or error were called. However the code fails as the shim doesn't get resolved properly when required. This is likely due to circular requires as shim requires chaincode, then chaincode requires shim.

The code to require shim should be removed and the logic for shim.error just copied in.",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzran:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Sep/18 1:15 AM;mbwhite;[https://gerrit.hyperledger.org/r/26367]

 

Builds do appear to be unreliable...;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Question: how to simulate Ethereum like contract to contract calls,FABCN-294,20820,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,,crazyquark,crazyquark,14/Sep/17 6:01 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,27/Nov/17 1:37 PM,,0,,,,,,,"Hello,

 

We are trying to mimic the setup from Ethereum where a contract instantiates another contract and calls other contract instances.

Right now I modeled this by using different structs inside a single chaincode and linking them together via code.

Is this the proper way to approach this? Should we use chaincode to chaincode calling instead and model each entity as a chaincode instance?

 

Thank you",,crazyquark,denyeart,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzygen:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,crazyquark,denyeart,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/17 5:03 PM;zhaochy;shim.invokeChaincode;;;","15/Sep/17 10:45 PM;crazyquark;Hi,

Yes, I know that is the method used to call another chaincode BUT what I am asking is whether one chaincode equates to one Ethereum smart contract, see my comments above.;;;","27/Nov/17 1:37 PM;denyeart;[~crazyquark] For questions please use hyperledger-fabric mailing list or rocket.chat rather than opening Bugs.;;;","27/Nov/17 7:09 PM;crazyquark;I did use rocket.chat but nobody answered there either :);;;",,,,,,,,,,,,,,,,,,,,,,,,,
metadata file not importing correctly and throwing errors,FABCN-295,35453,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,SamRasha,SamRasha,SamRasha,19/Nov/18 7:46 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,20/Nov/18 1:21 AM,,0,,,,,,,"AJV uses schema-draft-07 not schema-draft-04, create changes within code to import 04 schema and adapt to have it work fully.]

Fixing [FAB-12562]",,SamRasha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzzef:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),SamRasha,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect naming of the chaincode start command,FABCN-296,33397,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,mbwhite,mbwhite,mbwhite,31/Aug/18 5:27 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,06/Sep/18 9:27 PM,,0,,,,,,,Move the `startChaincode` command to be `fabric-chaincode-node start`,,davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-55,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzp2f:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Sep/18 9:27 PM;davidkel;not required as above issue still in progress;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Could not install node chaincode with Fabric 1.1.0-rc1,FABCN-297,28541,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,tibetty,tibetty,tibetty,15/Mar/18 2:28 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,16/Mar/18 1:26 PM,15/Mar/18 12:00 AM,0,help-wanted,,,,,,"When I tried to install node blockchain with the ""peer"" tool shipped with Fabric 1.1.0-rc1, it failed with below error message:

[node-platform] GetDeploymentPayload -> ERRO 004 Error writing folder to tar package no source files found in <path of test/integration folder>.

 

I strictly followed the instruction of the READ.ME of [https://github.com/hyperledger/fabric-chaincode-node,] so my bug report is actually comprised of 2 parts:
 # Has node chaincode been supported in 1.1.0?
 # If so, what's the possible reason cause above error?

Thanks,

Xihua","OS: MacOS High Sierra v10.13.3 (17D102)

Docker: v17.12.0-ce, build c97c6d6

Fabric: v1.1rc

Golang: v1.10 darwin/amd64

Node: v9.8.0",denyeart,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/18 2:27 PM;tibetty;fabric-err.png;https://jira.hyperledger.org/secure/attachment/14778/fabric-err.png",,,,,,,,,,,,,,Unset,,Unset,,,Unknown,,,,Unset,,,,"1|hzz1cn:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/18 10:52 PM;denyeart;[~tibetty] Please try this tutorial, and note the syntax for node js chaincode install and instantiate:

[http://hyperledger-fabric.readthedocs.io/en/release-1.1/build_network.html#install-instantiate-chaincode]

 ;;;","16/Mar/18 11:07 AM;tibetty;Thanks, David!  I followed the instructions you recommended to me, but the problem remained there when I tried to install node chaincode:

Xihua's MacBook:fabric-chaincode-node xihua$ peer chaincode install -n mycc -v 1.0 -l node -p <the leading parts of the absolute path>/fabric-chaincode-node/test/integration/

2018-03-16 09:59:09.241 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc

2018-03-16 09:59:09.241 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc

2018-03-16 09:59:09.241 CST [container] WriteFolderToTarPackage -> INFO 003 rootDirectory = <the leading parts of the absolute path>/fabric-chaincode-node/test/integration

2018-03-16 09:59:09.242 CST [node-platform] GetDeploymentPayload -> ERRO 004 Error writing folder to tar package no source files found in '<the leading parts of the absolute path>/fabric-chaincode-node/test/integration'

Error: Error getting chaincode code chaincode: Error getting chaincode package bytes: Error writing Chaincode package contents: no source files found in '<the leading parts of the absolute path>/fabric-chaincode-node/test/integration'

Usage: – omitted --

Xihua's MacBook:fabric-chaincode-node xihua$ ll <the leading parts of the absolute path>/fabric-chaincode-node/test/integration/

total 24

drwxr-xr-x  3 xihua  staff     96 Mar 15 11:22 ./

drwxr-xr-x  6 xihua  staff    192 Mar  9 11:39 ../

-rw-r--r--  1 xihua  staff  10750 Mar  9 11:39 test.js

 ;;;","16/Mar/18 11:57 AM;tibetty;P.s., when I used relative path, it's been successfully install (no error msg and I bashed into the peer container to check the chaincodes directory), but the following initialization command reported the chaincode had not been installed (handler not found), any suggestions?

 

Xihua's MacBook:fabric-chaincode-node xihua$ CORE_LOGGING_PEER=debug peer chaincode install -l node -n mycc -p test/integration -v v0

2018-03-16 10:50:35.248 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc

2018-03-16 10:50:35.248 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc

2018-03-16 10:50:35.248 CST [container] WriteFolderToTarPackage -> INFO 003 rootDirectory = test/integration

2018-03-16 10:50:35.272 CST [main] main -> INFO 004 Exiting.....

Xihua's MacBook:fabric-chaincode-node xihua$ CORE_LOGGING_PEER=debug peer chaincode instantiate -o localhost:7050 -C mychannel -l node -n mycc -v v0 -c '\{""Args"":[""init""]}' -P 'OR (""DEFAULT.member"")'

2018-03-16 10:51:15.385 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc

2018-03-16 10:51:15.385 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc

Error: Error endorsing chaincode: rpc error: code = Unknown desc = failed to init chaincode: handler not found for chaincode mycc:v0

-- omitted --

 

 ;;;","16/Mar/18 1:24 PM;tibetty;All problems got solved!
 # Use relative path (run in the directory where the package.json is placed) to install chaincode
 # Run ""node test.js"" to register chaincode.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Error in the type definition for CouchDB results in node.js chaincode,FABCN-298,36377,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,shimos,shimos,shimos,22/Dec/18 7:37 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,03/Jan/19 12:02 PM,,0,,,,,,,"In the current type definition, the type for a value from the iterator returned by getQueryResult is ""KV"", and the definition for KV is:
{code:java}
        interface KV {
            key: string;
            value: Buffer;
            getKey(): string;
            getValue(): Buffer;
        }
{code}
However, the value is not Buffer but ByteBuffer as it is deserialized from a protobuf object.

*To reproduce the bug:*

Suppose we have some values which have ""testType"" as their docTypes in the state db and  the following chaincode:
{code:java}
class NodeCC implements shim.ChaincodeInterface { 

...(snip)...

    async Invoke(stub: shim.ChaincodeStub): Promise<shim.ChaincodeResponse> {
        const {fcn, params} = stub.getFunctionAndParameters();
        
         if (fcn == ""query"") {
            const query = { selector: { docType: ""testType"" } };
            const response = await stub.getQueryResult(JSON.stringify(query));
            
            const next = await response.next();
            console.log(""(Raw) key = %s, value = %s"", next.value.key, next.value.value);

            const value = JSON.parse(next.value.value.toString());
            await response.close();

            return shim.success(Buffer.from(JSON.stringify(value.data)));
        }
...(snip)... 
    }
}
{code}
And invoking ""query"" results in the following output and error in the chaincode log:
{noformat}
(Raw) key = abc, value = ByteBufferNB(offset=17,markedOffset=-1,limit=52,capacity=90)
(node:13877) UnhandledPromiseRejectionWarning: SyntaxError: Unexpected token B in JSON at position 0
    at JSON.parse (<anonymous>)
    at NodeCC.Invoke (/home/shimos/test/nodecc/index.js:31:32)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
(node:13877) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)
(node:13877) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code. 
{noformat}
which is not what we expect for a Buffer value.",,denyeart,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,5c3874deeb63a39c374882ce2209364654adff4f,Unset,No,,,"1|i004bj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,shimos,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jan/19 12:18 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/28356/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Correct jsDOC documentation ,FABCN-299,37822,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,20/Feb/19 5:13 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,13/Sep/19 10:57 PM,,0,,,,,,,,,denyeart,heatherp,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00ckf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,heatherp,mbwhite,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Aug/19 3:05 AM;denyeart;[~mbwhite]
https://gerrit.hyperledger.org/r/#/c/fabric-chaincode-node/+/29403/ went into release-1.4 for v1.4.1.
Is a cherry pick to master required?;;;","12/Sep/19 11:14 PM;heatherp;Cherry pick to master is here: https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/%2B/33488;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Update the chaincode FAQ ,FABCN-300,38957,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,02/Apr/19 11:11 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,17/Apr/19 5:36 PM,,0,,,,,,,Updating the FAQ with some additional information on gradle targets and installation.,,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00ixr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,main-emeritius,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Apr/19 11:12 PM;mbwhite;https://gerrit.hyperledger.org/r/30638 [FAB-14961] Update to the FAQ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add-in programming reference docs to fabric-chaincode-node,FABCN-301,37145,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,mbwhite,mbwhite,mbwhite,25/Jan/19 8:22 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,06/Feb/19 6:56 PM,,0,,,,,,,To assist with the documentation effort checking in the source material for the documentation as reference tutorials in the jsdoc api referenced,,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i008zb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jan/19 10:32 PM;mbwhite;https://gerrit.hyperledger.org/r/28957 [FAB-13890] Additional Reference info;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need to update docs to show access to ClientIdentity in contract development,FABCN-302,37968,,Documentation,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,mahoney1,mahoney1,26/Feb/19 1:36 AM,18/Nov/20 6:35 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,,,,,,"Currently the ClientIdentity page of the Fabric Contract and Shim docs: [https://fabric-shim.github.io/master/fabric-shim.ClientIdentity.html]  indicates that the developer has to:

1) instantiate a new ClientIdentity object 

2) indicates the parameters must include a stub to be passed

3) developer must include the ClientIdentity class in the JS sample code example shown

Example (current docs) is below:

 
{code:java}
const ClientIdentity = require('fabric-shim').ClientIdentity;
let cid = new ClientIdentity(stub); // ""stub"" is the ChaincodeStub object passed to Init() and Invoke() methods
if (cid.assertAttributeValue('hf.role', 'auditor')) 
{   // proceed to carry out auditing}
{code}

  
 
 But using fabric-contract-api Contract interface in 1.4  the same `cid` can be referenced as follows via the context object (ctx below) in a transaction:
 
  
{code:java}
const cid = ctx.clientIdentity;
if (cid.assertAttributeValue('hf.role', 'auditor')) 
{   // proceed to carry out auditing }
{code}
 ",,mahoney1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i01zr",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mahoney1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode-node: shim.error require string instead of buffer,FABCN-303,32174,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Lowest,Done,davidkhala,davidkhala,davidkhala,25/Jul/18 11:22 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,31/Jul/18 1:06 PM,,0,,,,,,,As tittled,,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzjy7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jul/18 1:06 PM;davidkhala;https://gerrit.hyperledger.org/r/#/c/24731/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
API Documentation for KeyEndorsementPolicy,FABCN-304,38678,,Documentation,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,Jakeeyturner,Jakeeyturner,22/Mar/19 9:28 PM,18/Nov/20 6:35 PM,28/Oct/23 2:28 AM,,,1,cc-triaged,,,,,,"Inside of the docs ([https://fabric-shim.github.io/|https://fabric-shim.github.io/)], currently there is no mention of the KeyEndorsementPolicy class ([https://github.com/hyperledger/fabric-chaincode-node/blob/release-1.4/fabric-shim/lib/utils/statebased.js)] and how to use it.

This would help developers to understand how to set endorsement policies on keys.",,Jakeeyturner,Nammalvar,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i01zw",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Jakeeyturner,Nammalvar,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Update schema validation docs, and fix validation",FABCN-305,39030,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,03/Apr/19 6:55 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,24/Sep/19 11:21 PM,,0,,,,,,,"Validation is not taking place for any field.

Update the documentation with more examples. ",,denyeart,heatherp,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00jd3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,heatherp,mbwhite,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Aug/19 3:10 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/fabric-chaincode-node/+/30682/ was merged to release-1.4 for v1.4.1, is a cherry pick to master needed?;;;","12/Sep/19 11:23 PM;heatherp;Master cherry pick is here: https://gerrit.hyperledger.org/r/c/fabric-chaincode-node/+/33531;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Decoupling of Code Coverage for Unit and e2e Tests,FABCN-306,36370,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,nkl199,nkl199,21/Dec/18 7:54 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,03/Oct/19 10:44 PM,,0,,,,,,,"With the unit test coverage hitting 100%, we have opened the ability to remove e2e tests without dropping code coverage. This needs to be addressed as we need to be able to safeguard against the accidental disabling of tests with an errant `.only` being left in and missed by a reviewer.

The most effective way to do this would be to run the unit and e2e tests separately within the build, with their own code coverage limits.",,mbwhite,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i004a7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/19 6:32 PM;mbwhite;TODO here is to forward port the changes from 1.4.1 to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance testing of network model,FABCN-307,33346,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,nkl199,nkl199,nkl199,30/Aug/18 5:47 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,02/Oct/19 1:01 AM,,0,,,,,,,"The new programming model provides two new routes to invoke chaincode:
  1) Through the `network` command (client side)
  2) Through the specification of a function to invoke (chaincode side)

These routes should be performance tested to ensure optimal operation, the removal/alleviation of any bottlenecks attributable to the code flow, and changes in achievable TPS

 

Network Command (Node-SDK)

The network command requires profiling to investigate potential performance increases and a comparison to the existing (required) code flow for a 'standard' network connection/transaction invocation. At the same time a 'required lines of code' compare will be made to provide insight into the benefits for developers to use the new API to invoke a transaction.

 

Chaincode (Node)

The changes in the chaincode-node package permit users to directly specify a function within the deployed chaincode to invoke. This modifies the manner in which chaincode is itself invoked and consequently requires performance testing on a 'TPS' level.

A comparison on the maximum TPS for pre and post change should be investigated, through the deployment of a smart contract and invocation of a chaincode function for both levels of chaincode-node on the same level of Fabric images (1.3)

  

 ",,jyu617,mbwhite,nkl199,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11246,FABN-692,FAB-11767,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzouf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Executing,,System Test,,(Please add usage information),jyu617,mbwhite,nkl199,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Sep/18 11:59 PM;nkl199;Initial performance testing of submitTransaction() method within node sdk revealed a bottleneck to be resolved under Jira https://jira.hyperledger.org/browse/FABN-904;;;","02/Oct/18 9:18 PM;nkl199;Performance testing (and code analysis through heatmaps) has been completed for both `submitTransaction()` and `executeTransaction()`.

Testing was completed using Caliper, and code contributions will be made when possible to the main Caliper repository on GitHub. This will enable 3rd parties to replicate test results, and to obtain their own.;;;","07/Dec/18 7:17 PM;mbwhite;[~nkl199] is this complete?

I'd like to be able to run the caliper suite against the latest chaincode changes; pointers welcomed!;;;","10/Dec/18 8:57 PM;nkl199;[~mbwhite] - yes this is still current, and the only remaining item is node chaincode changes as the goLang changes have been tested (there was no observed difference in tps) .. lets prioritise the node work for resolution this week :D
;;;","11/Dec/18 6:18 AM;scottz;That would be great, [~nkl199]. So, can we expect a forecast date by Friday?
I believe the RC1 is being created today already.;;;","18/Dec/18 12:44 AM;mbwhite;Using Appmetrics and the RC1 builds I've done an analysis of node.js chaincode. 

The extra path length added by the chaincode-api routing is negligible compared to items such as GRPC Networking and Logging. It's on a par with the additional load that AppMetrics places on the test.

The most interesting/important observation is the time taken to perform creating a new ClientIdentity object. Parsing the x509 certs etc.. is a significant part of the time taken.  Creating a ClientIdentity object is to approximately 80% longer than a getState() api call. 

Any chaincode that used the client identity object would get this extra cost; what's different is this is created for a every transaction call in the contract-api.    So everybody gets the cost vs only those that used it before get the cost. 

 

The suggestion would be to make this a 'create-on-demand' rather than a per transaction call. 

Note as well that the x509 library used is going to have to be replaced in v2.0 - as the current one is not compatible with Node 10. 

 

The initial creation of the contract (when it is started by the shim) has the most codepath length increase; though this is a one time hit when the chaincode container starts; and is still a fraction of the time taken compared with the npm install and other container management that is taking place. ;;;","09/Aug/19 11:10 PM;scottz;[~nkl199] Is it appropriate to close this now? I would like to close this task and its epic.
[~mbwhite] Do you want to create an enhancement task to 'create-on-demand' rather than a per transaction call?
Based on your testing and observations, are there any other followup tasks to be done, maybe for v2.0? ;;;",,,,,,,,,,,,,,,,,,,,,,
Rationalize the two different approaches to FV,FABCN-308,37610,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,SamRasha,mbwhite,mbwhite,12/Feb/19 6:36 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,03/Apr/19 10:30 PM,,0,,,,,,,"In the build/test/e2e.js file there are a number of docker invoke commands for chaincode tests. 

This approach has been superseded by the use of mocha and additional tests.
For each test invoked from docker, check if the update suite achieves the same coverage and test function.  If there's a  difference; then port across the changes. ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-93,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i00bgn:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"MockStub tests ""read what you write"", opposed to actual behaviour",FABCN-309,40394,,Story,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,jlcs,jlcs,05/Jun/19 12:23 AM,18/Nov/20 7:54 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,community-help-wanted,external,,,,"Fabric doesn't allow ""read what you write"" in the same proposal transaction, i.e. calling `stub.getState(key)` after a `stub.putState(key, newvalue)` will retrieve oldvalue instead of newvalue.

In the test at mockstub_test.go#L242 :

[https://github.com/hyperledger/fabric/blob/eca1b14b7e3453a5d32296af79cc7bad10c7673b/core/chaincode/shim/mockstub_test.go#L242]

 

while testing empty states, it does it by a ""read what you write"" strategy.

 

 

I have confirmed Fabric is ""no read what you write"" with this sample code, where the functions relating to writing to or reading from ledger just stringify/parse with JSON and transform to/from Buffer:
{noformat}
try {
    await saveJSONObjectToLedger(stub, ""mahKey"", ""hello there"");
    let value = await getJSONObjectFromLedger(stub, ""mahKey"");
    console.log(""mahValue = "" + value);
    await saveJSONObjectToLedger(stub, ""mahKey"", ""goodbye there"");
    value = await getJSONObjectFromLedger(stub, ""mahKey"");
    console.log(""mahValue = "" + value);
} catch(err) {
    logger.warn(""AccessControl.InvokePrenda.ChaincodeState: "" + JSON.stringify(err, Object.getOwnPropertyNames(err)));
}{noformat}
The output in the peer chaincode docker is:
{noformat}
mahValue = goodbye there
mahValue = goodbye there
{noformat}
meaning that the `hello there` written first cannot be read until after transaction commitment.",,jlcs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00qic:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jlcs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve performance of node chaincode fv tests,FABCN-310,42704,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,jtonline,jtonline,jtonline,10/Oct/19 7:05 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,10/Oct/19 7:11 PM,,0,,,,,,,"There are currently multiple separate chaincodes required for testing which are all started individually causing long delays and timeouts during chaincode node fv testing.

These are currently {{fabric-chaincode-node/test/chaincodes}}... invoked from the {{test/fv/*.js}}... each file in the {{fv}}directory is a separate test invoked via {{mocha *.js}}.  as part of the {{@beforeAll}} it installs the required contract

Combining them all into a single chaincode should help",,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-31,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|i011x7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SVT of programming model aspects,FABCN-311,33370,,Epic,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,nkl199,nkl199,nkl199,31/Aug/18 12:46 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,17/Dec/18 7:45 PM,,0,,,,,,,"As the SVT system evolves, tests for the new programming model should be added into the regression test bucket, to investigate system topology change impacts on the new code features.

The fabric network commands remain client side, so the ability to flex these relies upon the manner in which tests are to be run within the SVT system.

The chaincode changes are immediately testable for node chaincode and are anticipated to be made available for goLang chaincode in the future. These can *and should* be invoked within an SVT system to ensure consistent operation irrespective of the base Fabric topology.

Documentation of this feature is available at: https://fabric-sdk-node.github.io/Gateway.html",,latitiah,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Unknown,,No,,Unset,No,,,"1|hzzown:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Interoperability Test,,(Please add usage information),latitiah,nkl199,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,true,"29/Nov/18 2:01 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/26721/;;;","11/Dec/18 11:18 PM;latitiah;https://gerrit.hyperledger.org/r/#/c/28045/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-chaincode-node azure setup fails to publish cobertura coverage results file,FABCN-312,43275,,Test Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Won't Do,,heatherp,heatherp,12/Nov/19 1:21 AM,18/Nov/20 6:39 PM,28/Oct/23 2:28 AM,18/Nov/20 6:39 PM,,0,cc-triaged,,,,,,"I see some warning on fabric-chaincode-node azure PR builds, like:

{{##[warning]No code coverage results were found to publish.}}

and then sometimes:

{{##[warning]Multiple file or directory matches were found. Using the first match: /home/vsts/work/1/s/apis/fabric-contract-api/coverage/cobertura-coverage.xml}}

[https://dev.azure.com/Hyperledger/Fabric-Chaincode-Node/_build/results?buildId=1795&view=logs&j=ffafc2ec-a09b-5922-a611-c81727b1330f&t=4cdcc0af-64e3-56ef-794e-70028a58113f&l=9]",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl4e:f",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Code structure design and initial impl of node chaincode shim,FABCN-313,19343,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,19/Jul/17 12:37 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,26/Aug/17 12:12 AM,,0,,,,,,,"- the runtime image should be built based on the fabric-baseimage image, which already has node 6.9.x and npm 3.10.x pre-installed, and add the following pieces:
  - module: command-line-require
  - module: log4js
  - module: grpc
- the user-provided chaincode should be the main entry point to start the app:
{code}
const shim = require('fabric-shim');
var Chaincode = class {
  Init() { // init() impl }
  Invoke() { // invoke() impl }
};
shim.Start(new Chaincode());
{code}
- all shim interface's functions should be implemented in the 'fabric-shim' package
- arguments passing b/w the SDK and the chaincode should be JSON based instead of byte arrays

Note: a significant internal refactoring on the communication protocol b/w the peer and chaincode container during endorsement is being worked on, with the main goal to eliminate FSM: https://gerrit.hyperledger.org/r/#/c/11867. Basing the javascript shim implementation on the refactored code should be preferred.",,davidkel,,,,,,,,,,,,,,"- defined JS chaincode user-contributed code structure
- defined means to publish the shim: npm
- implemented code structure in fabric/core/chaincode/shim/node:
  - ""src"" for ""fabric-shim"" npm publishing
  - ""test"" for test suite and CI
- implemented initial set of shim APIs
  - Start();25/Jul/17 11:07 PM;jimthematrix;57600",";18/Aug/17 12:08 AM;jimthematrix;57600",115200,0,115200,100%,115200,0,115200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8vj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,davidkel,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,purge-pd,main-emeritius,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,correct-nodeenv-version,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jul/17 4:01 AM;jimthematrix;part I: https://gerrit.hyperledger.org/r/#/c/11823/;;;","25/Jul/17 9:26 PM;davidkel;Hi Jim, here are the list of shim methods Composer currently calls as promised.

The basic lifecycle type calls
{code:java}
shim.Start
shim.Success
shim.Error
stub.GetFunctionAndParameters{code}
Logging stuff, but not required for functionality
{code:java}
shim.NewLogger
shim.LogLevel
{code}
Key and State Calls (fundamental to Composer)
{code:java}
GetStateByPartialCompositeKey
CreateCompositeKey
GetState
PutState
DelState
{code}
Other calls
{code:java}
GetCreator - Fundamental for our access control
GetQueryResult - Required for us to support complex queries
SetEvent - Required for us to support emitting events
{code}

The last 2 can be bottom of the list for implementing stuff, the Logging isn't important to get up and running but I think all the others are required to do basic Composer;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode platform for handling javascript chaincode docker builds,FABCN-314,19344,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,19/Jul/17 12:38 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,26/Aug/17 12:12 AM,,0,,,,,,,"node.js chaincode platform should be responsible for the following ""build"" steps that result in a custom-built image during chaincode instantiation:
- using fabric-ccenv, build the chaincode package by running {code}npm install{code} within the user-supplied chaincode source folder, which must contain a package.json along with the chaincode source itself
- create a package that contains the entire app folder including the package.json (use-supplied), chaincode JS source files and any other source files (one or more, use-supplied), node_modules folder resulted from the ""npm install"" step above

The runtime image should be based on fabric-baseimage, which already contains node engine (and npm, but we won't be using that since all dependencies will have been resolved in the build steps and contained in the chaincode package).",,,,,,,,,,,,,,,,"https://gerrit.hyperledger.org/r/11895

- implemented fabric/core/chaincode/shim/node/platform.go to:
  - generate code package during ""peer chaincode install""
  - generate build commands in fabric-ccenv to run ""npm install"" during instantiate
  - generate Dockerfile commands to make chaincode docker image
  - generate docker instance launch command;25/Jul/17 11:11 PM;jimthematrix;57600",";18/Aug/17 12:10 AM;jimthematrix;230400",288000,0,288000,100%,288000,0,288000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8vr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/17 1:12 PM;jimthematrix;https://gerrit.hyperledger.org/r/11895;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Design and implement the JS chaincode plugin mechanism,FABCN-315,19345,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,19/Jul/17 12:42 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,18/Aug/17 12:09 AM,,0,,,,,,,"What's the format of the chaincode source?
- chaincode should be written as CommonJS modules and be launch-able with the node.js engine

How does the chaincode get discovered and loaded into the node.js app?
- a package.json must accompany is chaincode sources, in the root folder of the ""chaincodePath"" parameter during chaincode install. The package.json is critically important for two purposes:
  ## specifies any dependencies, including the fabric-shim package itself which is needed by all JS chaincodes, and any other external dependencies
  ## using the ""scripts"" section to specify how the chaincode should be launched:
  {code}
  ""scripts"": {
    ""start"": ""node mychaincode.js""
  },{code}

Do we allow JS chaincodes to have other source dependencies? in other words can a JS chaincode by broken up into multiple modules?
- yes definitely

How do we ensure multiple install operations produce the same binary from npm install?
- use best practices with shrinkwrap.json",,,,,,,,,,,,,,,,"https://gerrit.hyperledger.org/r/11823

- defined the node.js chaincode user-contributed code structure
- defined the mechanism to load and run the chaincode
- implemented the above;25/Jul/17 11:16 PM;jimthematrix;28800",";18/Aug/17 12:09 AM;jimthematrix;57600",86400,0,86400,100%,86400,0,86400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8vz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Complete implementation of must-have shim APIs - Part I,FABCN-316,19473,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,25/Jul/17 11:22 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,23/Aug/17 9:43 PM,,0,,,,,,,"Based on [feedback from Composer|https://jira.hyperledger.org/browse/FAB-5371?focusedCommentId=28964&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-28964], the must-have APIs to be implemented:
The basic lifecycle type calls
{code}
shim.Start
shim.Success
shim.Error
stub.GetFunctionAndParameters
{code}
Key and State Calls (fundamental to Composer)
{code}
GetState
PutState
DelState
{code}
Other calls
{code}
GetCreator - Fundamental for our access control
SetEvent - Required for us to support emitting events
{code}
Finally, these come for free:
{code}
getArgs
getStringArgs
getTxID
getTransient
getSignedProposal
getTxTimestamp
{code}",,,,,,,,,,,,,,,,"all APIs implemented, need more unit tests coverage and integration tests.;14/Aug/17 11:49 AM;jimthematrix;144000",";24/Aug/17 5:26 AM;jimthematrix;144000",288000,0,288000,100%,288000,0,288000,,,,,FABCN-317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9lj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Aug/17 10:20 PM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/12401/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Complete implementation of must-have shim APIs - Part II,FABCN-317,20156,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,davidkel,jimthematrix,jimthematrix,14/Aug/17 11:44 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,14/Sep/17 10:41 PM,,0,,,,,,,"Based on [feedback from Composer|https://jira.hyperledger.org/browse/FAB-5371?focusedCommentId=28964&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-28964], the must-have APIs to be implemented, part II. See FAB-5455 for list of part I:

Key and State Calls (fundamental to Composer)
{code}
getStateByRange
GetStateByPartialCompositeKey
CreateCompositeKey
splitCompositeKey
getHistoryForKey
{code}

Other calls
{code}
GetQueryResult - Required for us to support complex queries
invokeChaincode
{code}
",,,,,,,,,,,,,,,,";23/Aug/17 9:45 PM;davidkel;144000",";20/Oct/17 2:15 AM;jimthematrix;144000",288000,0,288000,100%,288000,0,288000,,,,,,FABCN-316,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyczb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define the code package content structure,FABCN-318,19346,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,19/Jul/17 12:43 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,26/Aug/17 12:12 AM,,0,,,,,,,"what files should be contained in the code package of the ChaincodeDeploymentSpec for a javascript chaincode?

Two files are the main ones:
- chaincode.js: does not have to be named exactly as such, because the chaincode container will use ""npm start"" to launch the container instance. this module gets called by the node.js engine and should start the shim by calling shim.start(). it will implement the init() and invoke() functions required by the chaincode API interface. It can require other source modules with require(""./a/relative/path""), or external modules with require(""the-external-module"")
- package.json: is critical in two aspects, one is to declare how to launch the chaincode program by providing a ""scripts"" section that has a ""start"" entry, which will be used by the chaincode container to start the chaincode program with ""npm start"". Another is to declare the runtime dependencies.",,,,,,,,,,,,,,,,"https://gerrit.hyperledger.org/r/11823;25/Jul/17 11:39 PM;jimthematrix;28800",,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8w7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Aug/17 2:36 AM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/12515/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
SDK support - node.js SDK,FABCN-319,19347,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,zhaochy,jimthematrix,jimthematrix,19/Jul/17 12:45 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,22/Sep/17 9:24 PM,,0,,,,,,,"The current ""protocol"" how the SDK's responsibility for golang is like this:
 - given the chaincode path, build a chaincode package that includes all the dependencies
 - then the SDK sends the package to the peer to install
 - then the SDK calls the peer to instantiate the chaincode. if instantiating for the first time (it may get instantiated multiple times for different channels), the peer will use the fabric-ccenv environment to build it into native binaries, and package the resulting binary into a custom docker image based on a base image (fabric-baseos for golang).

This protocol can be directly translated to handling node.js chaincode lifecycles like the following:
 - given the node.js chaincode path, which is expected to be a folder containing the chaincode JS code, plus package.json to declare dependencies
 - then the SDK sends the package to the peer to install
 - then the SDK calls the peer to instantiate the chaincode. if instantiating for the first time, the peer will use the fabric-ccenv environment to ""build"" it by running ""npm install -production"", and package the resulting folder into a custom docker image based on a base image (fabric-baseos at the moment does not have node.js engine, so we should use fabric-baseimage for now).

Another option is to utilize the CAR support.",,cbl,,,,,,,,,,,,,,";20/Oct/17 2:15 AM;jimthematrix;144000",,144000,0,144000,100%,144000,0,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8wf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,cbl,,,,,,,,,,,,,,,dev,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI jobs,FABCN-320,19448,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,jimthematrix,jimthematrix,25/Jul/17 2:53 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,09/Oct/17 10:56 PM,,0,,,,,,,"note that the CI environment must have node.js 8.4+ and npm 5.3+ installed

the CI capabilities to support node.js chaincode:
 - run unit tests using 'gulp test-headless' command, which generates cubertura coverage report
 - set up the integration test environment:
 -- clone fabric-samples so it's a peer directory to fabric-chaincode-node
 -- run 'DEVMODE=false gulp channel-init'
 - run integration tests using 'gulp test-e2e' command

 - on merge, publish to npm based on the version string in src/package.json (NOT package.json in the root directory of the repo), similarly to how the CI is set up for fabric-sdk-node repo
 - if `m.n.p-snapshot`, then publish to the ""unstable"" stream
 - if `m.n.p-<suffix>` or `m.n.p`, and the suffix is anything other than `snapshot`, then publish to the main stream

Reference: https://jira.hyperledger.org/browse/FAB-2802

Finally, need merge CIs that will publish the API Reference to fabric-shim.github.io like is done for fabric-sdk-node.github.io",,jimthematrix@gmail.com,rameshthoomu,,,,,,,,,,,,,";20/Oct/17 2:15 AM;jimthematrix;57600",,57600,0,57600,100%,57600,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9j3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jimthematrix@gmail.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/17 6:24 AM;rameshthoomu;So, Do I need to build docker images for this setup and follow the below steps

 
{code:java}
cd ${WORKSPACE}/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/node/test && npm install
npm config set prefix ~/npm && npm install -g gulp && npm install -g istanbul
gulp || exit 1
rm -rf node_modules/fabric-ca-client && npm install
gulp test
{code}
Are these the steps I have to execute before push npm modules

If yes, to which npm repository I have to publish?;;;","26/Jul/17 2:17 AM;jimthematrix;hi Ramesh, the scripts above look fine to me, note that all code is not in place yet (for instance there's no ""gulp test"" task yet)

the target package to publish out of the fabric/core/chaincode/shim/node/src folder will be called ""fabric-shim"" (as is specified in package.json);;;","27/Jul/17 12:20 AM;rameshthoomu;Thanks for the update.. so the fabric-shim package has to publish to fabric-sdk-node npm repository (fabric-ca-client and fabric-client npm repo) ? Also do you want me to add this as a separate job or want me to include in e2e tests? If it's a separate job, Do you want me to disable gerrit voting if build fails?

 ;;;","17/Aug/17 12:03 AM;rameshthoomu;Submitted patch to create CI verify and merge jobs for fabric-chaincode-node repository. https://gerrit.hyperledger.org/r/#/c/12509/;;;","30/Aug/17 10:55 PM;rameshthoomu;Patch has been submitted https://gerrit.hyperledger.org/r/#/c/12933/;;;","31/Aug/17 9:56 PM;rameshthoomu;This change has been merged in CI and the changes are working as expected. https://gerrit.hyperledger.org/r/#/c/12933/;;;","06/Oct/17 1:01 AM;jimthematrix@gmail.com;hi [~rameshthoomu], re-opening this for the last piece of work I added above:
 * Finally, need merge CIs that will publish the API Reference to fabric-shim.github.io like is done for fabric-sdk-node.github.io;;;","09/Oct/17 10:55 PM;rameshthoomu;patch has been submitted and merged. Now chaincode API docs are available at https://fabric-shim.github.io/;;;",,,,,,,,,,,,,,,,,,,,,
Complete implementation of remaining shim APIs,FABCN-321,19474,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,25/Jul/17 11:31 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,22/Sep/17 9:24 PM,,0,,,,,,,"After the must-haves (FAB-5455), these are the remaining ones to be implemented in the 2nd phase:
{code}
shim.NewLogger
shim.LogLevel
getBinding
{code}",,Rohit-Thukral,zhaochy,,,,,,,,,,,,,";04/Sep/17 8:38 PM;davidkel;57600",";20/Oct/17 2:16 AM;jimthematrix;518400",576000,0,576000,100%,576000,0,576000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9lr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rohit-Thukral,zhaochy,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/17 7:11 PM;Rohit-Thukral;I would like to work on this issue and start contribution to the project. I am the new to this project. So i am not aware of the process. Could you please suggest / guide me about the process how should i contribute and also please provide more details on this requriement;;;","17/Sep/17 12:53 PM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/13559/ for getBinding();;;","17/Sep/17 1:08 PM;jimthematrix;https://gerrit.hyperledger.org/r/13561 for newLogger(), which returns a log4js based logger and have logging level controls, so instead of defining a custom logger interface with logging level control, we'll just expose the log4js API itself which is a familiar library to the node.js developers;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Create a new repo ""fabric-chaincode-node""",FABCN-322,19691,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,jwagantall,jimthematrix,jimthematrix,02/Aug/17 2:01 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,11/Aug/17 9:53 AM,,0,,,,,,,"Based on discussed in RC: https://chat.hyperledger.org/channel/fabric-ci?msg=Y84TnmqSwjhAJXWdp

Create a new repository called ""fabric-chaincode-node"", and set up the following as initial committers:
Jim Zhang, jim_the_matrix@hotmail.com
David Kelsey, d_kelsey@uk.ibm.com
Bret Harrison <beharrison@nc.rr.com>

with 1-vote merge policy please",,jwagantall,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5573,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyahz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jwagantall,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Aug/17 4:03 AM;jwagantall;Created now and the 3 team members have been invited to join the group:

_hyperledger-gerrit-fabric-chaincode-node-committers_

https://gerrit.hyperledger.org/r/#/admin/projects/fabric-chaincode-node;;;","06/Aug/17 11:16 AM;jimthematrix;hi [~jwagantall], sorry about this but I mis-typed the email for my linux foundation ID, it should be ""jim_the_matrix@hotmail.com"". I didn't accept the invite for jzhang@us.ibm.com to join the project as a committer, so you can just sent a new one. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable peer grpc prefix to be determined at runtime,FABCN-323,20248,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,18/Aug/17 12:15 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,18/Aug/17 10:54 AM,,0,,,,,,,"Allow developers to pass in --peer.address value in either of the following styles:
- grpc(s)://host:port
- host:port - when the protocol is omitted, use the CORE_PEER_TLS_ENABLED environment variable to determine the proper protocol",,,,,,,,,,,,,,,,";18/Aug/17 10:54 AM;jimthematrix;28800",,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydif:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade node.js chaincode engine to v8,FABCN-324,20252,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,18/Aug/17 1:11 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,26/Aug/17 1:29 AM,,0,,,,,,,"among other things, v8 introduced native ""async"" and ""await"" support that transforms messy Promise-based source code like this:
{code}
Invoke(stub) {
	let ret = stub.getFunctionAndParameters();

	return stub.getState('dummyKey')
	.then((value) => {
		if (value.toString() === 'dummyValue') {
			return stub.success();
		} else {
			console.error('Failed to retrieve dummyKey or the retrieved value is not expected: ' + value);
			return shim.error();
		}
	}
}
{code}
to this:
{code}
Invoke(stub) {
	let ret = stub.getFunctionAndParameters();

	let value = await stub.getState('dummyKey');
	if (value.toString() === 'dummyValue') {
		return stub.success();
	} else {
		console.error('Failed to retrieve dummyKey or the retrieved value is not expected: ' + value);
		return shim.error();
	}
}
{code}

There's also performance benefits due to ""Ignition"" (interpreter) and ""Turbofan"" (JIT compiler).

Note that node 8 does not enter LTS (Long-Term Service) status until October (exact date to be determined), but we have obtained agreement from node.js engine committers for support on possible bug fixes during the interim. Thus we felt it's appropriate to introduce the node.js chaincode feature directly on top of node 8 rather than 6.x.

For developers who are writing both chaincode and client applications with the node.js SDK, although the node.js SDK may still be stuck on 6.x for official support (pending further discussions), the good news is that node 8 has excellent backward compatibility, so they should be able to continue to write both code for app and chaincode under node 8 and test. As long as they don't accidentally introduce language features that are not supported by 6.x in the client app, they should be fine.",,mastersingh24,,,,,,,,,,,,,,";23/Aug/17 9:44 PM;jimthematrix;28800",";20/Oct/17 2:16 AM;jimthematrix;57600",86400,0,86400,100%,86400,0,86400,,,,,,,FABCN-28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydiv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,purge-pd,main-emeritius,release-1.0,main,correct-nodeenv-version,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Aug/17 7:39 PM;mastersingh24;Should move to Node 8.3 or higher - https://medium.com/the-node-js-collection/node-js-8-3-0-is-now-available-shipping-with-the-ignition-turbofan-execution-pipeline-aa5875ad3367;;;","23/Aug/17 12:59 AM;jimthematrix;https://gerrit.hyperledger.org/r/12665;;;","26/Aug/17 1:30 AM;jimthematrix;Closing this now that 12665 has been merged. Note that though the ultimate solution is in the work tracked by https://jira.hyperledger.org/browse/FAB-5886;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Integration Test framework for node.js chaincode,FABCN-325,20264,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,18/Aug/17 10:53 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,19/Aug/17 2:35 AM,,0,,,,,,,"The integration tests should be carried out in an environment as close to the real world as possible, which means:
- use docker images to launch a target network
- deploy chaincodes to peers in dev and network modes
- run through the install -> instantiate -> invoke -> query -> upgrade -> invoke -> query lifecycle",,,,,,,,,,,,,,,,";20/Oct/17 2:16 AM;jimthematrix;57600",,57600,0,57600,100%,57600,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydl3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable TLS support,FABCN-326,20338,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,23/Aug/17 12:53 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,17/Sep/17 10:04 PM,,0,,,,,,,"Step 1 is enable server-only TLS handshake, with the chaincode process being the client and the peer process being the server. the chaincode process needs to have access to the peer's ca root cert so as to validate the server cert during TLS handshake.

Step 2, add mutual TLS support, if that is included in the fabric for v1.1 (FAB-5406). the CRs for this have been merged to master, but there are questions on whether they should be included in v1.1",,baohua,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydv3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,baohua,Ratnakar,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Aug/17 4:50 AM;Ratnakar;Fabric changes to pass TLS key/cert pair to the node chaincode container

: https://gerrit.hyperledger.org/r/#/c/12799/;;;","30/Aug/17 6:10 AM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/12817/;;;","14/Sep/17 10:43 PM;jimthematrix;new approach that takes care of the TLS client key and certs using docker upload API and for all languages:
https://gerrit.hyperledger.org/r/#/c/13451/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Samples,FABCN-327,20375,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,Ratnakar,jimthematrix,jimthematrix,24/Aug/17 11:44 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,19/Oct/17 10:18 PM,,0,,,,,,,"Should port the following samples from golang to node.js chaincode:
 - [https://github.com/hyperledger/fabric-samples/tree/master/chaincode/chaincode_example02]
 - [https://github.com/hyperledger/fabric-samples/tree/master/chaincode/fabcar]

also add new chaincodes from popular demand:
 - chaincode-based access control (stub.getCreator()) using ECert attributes

 ",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye1r:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Sep/17 11:13 PM;Ratnakar;golang based example02 and marbles are re-written in nodejs. 
here are the references:
https://github.com/hyperledger/fabric-test/tree/master/chaincodes/example02/node
https://github.com/hyperledger/fabric-test/tree/master/chaincodes/marbles/node

Fabcar: https://github.com/asararatnakar/fabric-samples/tree/release/chaincode/fabcar/node;;;","09/Oct/17 11:42 AM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/14323/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation - API Reference,FABCN-328,21331,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix@gmail.com,jimthematrix@gmail.com,jimthematrix@gmail.com,06/Oct/17 12:53 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,17/Oct/17 12:39 AM,,0,,,,,,,"For documentation, should publish an API Reference similar to [https://fabric-sdk-node.github.io|https://fabric-sdk-node.github.io/], to be generated from inline jsdoc",,jimthematrix@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyig7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jimthematrix@gmail.com,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Oct/17 1:16 PM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/14231/
https://gerrit.hyperledger.org/r/14405;;;","13/Oct/17 5:44 AM;jimthematrix;https://gerrit.hyperledger.org/r/14479 - links to the API Reference website in Fabric docs;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
JSDK Node CC example,FABCN-329,24791,14893,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Done,skarim,rickr,rickr,06/Dec/17 3:46 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,22/Feb/18 8:56 PM,,0,,,,,,,"Add support of defining Node CC for install. 
Provide example Node CC install, invoke, query

See Node :  [https://gerrit.hyperledger.org/r/#/c/13633/]

for eample of Node CC

https://github.com/hyperledger/fabric-sdk-node/blob/3ec51fcda24154ed33deef59fb29cf3df25dc58f/test/fixtures/src/github.com/example_cc/example_cc.go#L1

 ",,rickr,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypmf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rickr,skarim,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jan/18 12:12 AM;rickr;The approach I'd like to see if we can in

[https://github.com/hyperledger/fabric-sdk-java/blob/b8c81c2f3305e4647c870c47e73df0f2d7c810f9/src/test/java/org/hyperledger/fabric/sdkintegration/End2endIT.java#L1]

[
|https://github.com/hyperledger/fabric-sdk-java/blob/b8c81c2f3305e4647c870c47e73df0f2d7c810f9/src/test/java/org/hyperledger/fabric/sdkintegration/End2endIT.java#L1]|

Change it so it can deploy both GO and Node code.

We should have something like this in :

 

[https://github.com/hyperledger/fabric-sdk-java/blob/b8c81c2f3305e4647c870c47e73df0f2d7c810f9/src/test/java/org/hyperledger/fabric/sdkintegration/IntegrationSuite.java]

@Suite.SuiteClasses(\{
 End2endIT.class,
 End2endAndBackAgainIT.class,
 UpdateChannelIT.class,
 HFCAClientIT.class,

End2endNodeIT.class,
 })

 

End2endNodeIT.class would Subclass End2endIt

It would do all the same test but deploy Node code.

 

 

 

 

 

 ;;;","22/Feb/18 3:40 AM;skarim;https://gerrit.hyperledger.org/r/#/c/17751/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric-samples marbles02 node.js chaincode to utilize paginated query,FABCN-330,33820,33318,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,zhaochy,denyeart,denyeart,17/Sep/18 9:02 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,30/Oct/18 2:55 AM,,0,,,,,,,"Update fabric-samples marbles02 node.js chaincode to utilize paginated query.

Update this chaincode:

[https://github.com/hyperledger/fabric-samples/blob/master/chaincode/marbles02/node/marbles_chaincode.js]

To be compatible with the go sample pagination queries:

[https://github.com/hyperledger/fabric-samples/blob/master/chaincode/marbles02/go/marbles_chaincode.go#L147-L150]

...see exact changes in CR [https://gerrit.hyperledger.org/r/#/c/26231/]",,denyeart,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzr5j:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,zhaochy,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Sep/18 5:28 PM;zhaochy;https://gerrit.hyperledger.org/r/#/c/26446/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add build settings in package.json in release-1.3 branch,FABCN-331,35119,35118,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Nov/18 3:21 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,08/Nov/18 2:44 PM,,0,,,,,,,Add in the package settings needed to support the NPM versioning and fabric version and thirdparty docker images.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzxlj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/18 5:30 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/27408/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add build settings in package.json in release-1.2 branch,FABCN-332,35120,35118,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Nov/18 3:22 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,08/Nov/18 2:44 PM,,0,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzxlr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Nov/18 4:07 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/27380/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add build settings in package.json in release-1.1 branch,FABCN-333,35121,35118,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,rameshthoomu,rameshthoomu,rameshthoomu,06/Nov/18 3:22 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,30/Nov/18 1:44 PM,,0,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12996,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzxlz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Nov/18 1:43 PM;rameshthoomu;Pipeline and build scripts have been updated with this patch set https://gerrit.hyperledger.org/r/#/c/27742/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add build settings in package.json in master branch,FABCN-334,35145,35118,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,07/Nov/18 5:20 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,08/Nov/18 2:44 PM,,0,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzxr3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Nov/18 5:30 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/27407/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update integration test suite to use npm pack modules in all manners,FABCN-335,34735,34733,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,14gracel,mbwhite,mbwhite,17/Oct/18 6:10 PM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,28/Nov/18 7:30 PM,,0,,,,,,,"Update the integration tests so that they
 * use npm pack for the modules
 * make sure there are at least one test chaincode impl per programming model",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzvh3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Initial implementation of encrypt, decrypt, sign and verify with tests",FABCN-336,23987,23901,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,17/Nov/17 6:18 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,19/Jan/18 12:32 AM,,0,,,,,,,"As the initial implementation, only support ""aes-256-cbc"" for encryption, and ECDSA ""p256"" curve for signing",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyncv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/17 6:18 AM;jimthematrix;https://gerrit.hyperledger.org/r/15549;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Complete documentation on encryption library APIs,FABCN-337,23988,23901,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,jimthematrix,jimthematrix,17/Nov/17 6:19 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,16/Oct/19 12:20 AM,,0,Documentation,,,,,,,,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynd3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Oct/19 12:20 AM;heatherp;please re-open if still needed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI job to publish fabric-shim-crypto package,FABCN-338,23989,23901,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,jimthematrix,jimthematrix,17/Nov/17 6:20 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,19/Dec/17 12:11 AM,,0,,,,,,,"the folder ""fabric-shim-crypto"" in the project contains a separate package from the fabric-shim (which is under ""src""). should publish on merge",,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyndb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/17 6:38 AM;rameshthoomu;Jim, I don't see fabric-shim-crypto folder under src directory.. [https://github.com/hyperledger/fabric-chaincode-node/tree/master/src|https://github.com/hyperledger/fabric-chaincode-node/tree/master/src..]

Did you submit patch to merge this change?;;;","17/Nov/17 6:40 AM;rameshthoomu;Ok now I see a patch has been submitted for this change. Once the patch is merged will work on this.;;;","19/Dec/17 12:11 AM;rameshthoomu;patch has been submitted and merged. publish unstable fabric-shim-crypto to npm https://www.npmjs.com/package/fabric-shim-crypto;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Make AES and ECDSA algorithms configurable,FABCN-339,23990,23901,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,jimthematrix,jimthematrix,17/Nov/17 6:26 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,16/Oct/19 12:20 AM,,0,,,,,,,,,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyndj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Oct/19 12:20 AM;heatherp;please re-open if still needed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a user I shouldn't have to declare a name when declaring property type,FABCN-340,38220,38269,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,awjh-ibm,awjh-ibm,06/Mar/19 12:12 AM,18/Nov/20 7:51 PM,28/Oct/23 2:28 AM,18/Nov/20 7:51 PM,,0,cc-triaged,,,,,,"When using the @Property annotation to declare an object property it is currently required that the name of the property is specified so that the type can be used. It would be better to allow the name to be inferred whilst still declaring type.

Edit: Name should be sent as null to ensure that it doesn't mix up with a user just wanting to set the name",,awjh-ibm,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00epj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/20 7:51 PM;lesleyannj;Closing as no current work taking place.  Please reopen if considered valid when work is started.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Annotations cannot be paired with interface types,FABCN-341,38219,38269,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,awjh-ibm,awjh-ibm,06/Mar/19 12:09 AM,18/Nov/20 7:51 PM,28/Oct/23 2:28 AM,18/Nov/20 7:51 PM,,0,cc-triaged,,,,,,When declaring an object for metadata it is not currently possible to have properties which are interface types due to typescript not allowing annotations on interfaces. This means that when using the annotations to build metadata the chaincode will fail on startup as the references for the interface types will not have been generated.,,awjh-ibm,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00epb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/20 7:51 PM;lesleyannj;Closing as no current work taking place.  Please reopen if considered valid when work is started.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
The @Property() decorator should accept regular expressions,FABCN-342,39069,38269,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,JoshuaVines,JoshuaVines,05/Apr/19 1:17 AM,18/Nov/20 7:52 PM,28/Oct/23 2:28 AM,18/Nov/20 7:52 PM,,0,cc-triaged,external,,,,,"The `@Property()` decorator should accept Regular Expressions to enforce pattern matching to strings as part of runtime validation.
This is extremely helpful for verifying strings are not empty or a string conforms to a certain data format for example.",,JoshuaVines,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00jlr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),JoshuaVines,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/20 7:52 PM;lesleyannj;Closing as no current work taking place.  Please reopen if considered valid when work is started.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move @Param annotation to be on the parameter not the function,FABCN-343,39321,38269,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,awjh-ibm,awjh-ibm,15/Apr/19 10:34 PM,18/Nov/20 7:52 PM,28/Oct/23 2:28 AM,18/Nov/20 7:52 PM,,0,cc-triaged,,,,,,Currently the param annotation exists above the function meaning that the parameter name is passed as a string to the annotation. Instead this should sit on the parameter to avoid this and avoid confusion with the property annotation which takes a name for renaming.,,awjh-ibm,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00l1z:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/20 7:52 PM;lesleyannj;Closing as no current work taking place.  Please reopen if considered valid when work is started.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create multiarch script to publish nodeenv image from master branch,FABCN-344,39104,39103,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Apr/19 12:14 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,12/Apr/19 12:17 AM,,0,,,,,,,Create multiarch script to publish nodeenv image from master branch,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00jsv:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Apr/19 12:17 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/30770/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update CI script to publish release job to publish nodeenv image to hyperledger Dockerhub,FABCN-345,39105,39103,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Apr/19 12:15 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,12/Apr/19 12:17 AM,,0,,,,,,,Update CI script to publish release job to publish nodeenv image to hyperledger Dockerhub,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00jt3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Apr/19 12:18 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/30772/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create multiarch CI job to publish multiarch images.,FABCN-346,39109,39103,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Apr/19 12:29 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,11/Apr/19 11:35 PM,,0,,,,,,,Create multiarch CI job to publish multiarch images.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00jtr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Apr/19 11:36 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/30772/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode convenience layer for state-based endorsement,FABCN-347,34783,29930,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,zhaochy,zhaochy,zhaochy,19/Oct/18 11:44 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,30/Oct/18 10:53 AM,,0,,,,,,,A shim library that facilitates the creation of key-level validation parameters for state-based endorsement.,,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzvrb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),zhaochy,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Oct/18 11:47 AM;zhaochy;https://gerrit.hyperledger.org/r/#/c/27101/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode shim for key-level metadata,FABCN-348,34784,29930,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,zhaochy,zhaochy,zhaochy,19/Oct/18 11:44 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,30/Oct/18 10:53 AM,,0,,,,,,,Chaincode handler implementation of the chaincode shim interface for key-level metadata.,,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzvrj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),zhaochy,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Oct/18 7:16 PM;zhaochy;https://gerrit.hyperledger.org/r/#/c/27156/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
type definition for new APIs,FABCN-349,34785,29930,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,zhaochy,zhaochy,zhaochy,19/Oct/18 11:45 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,30/Oct/18 10:54 AM,,0,,,,,,,update Type definition for new shim APIs,,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzvrr:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),zhaochy,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Oct/18 10:54 AM;zhaochy;https://gerrit.hyperledger.org/r/#/c/27222/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update the pipeline script to fetch the patchset on master branch,FABCN-350,36223,35848,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,rameshthoomu,rameshthoomu,rameshthoomu,18/Dec/18 2:07 AM,01/Dec/19 6:15 AM,28/Oct/23 2:28 AM,20/Jan/19 1:30 AM,,0,,,,,,,"Update fetch patchset stage in fabric-chaincode-node master branch to fetch the patch set and run the tests on verify job and clone the repository and run the tests on Merge job.


Also Optimize the publish npm module script to set the unstable_version to 1 if there is no npm module available in npm registry otherwise fetch the unstable version and increment by 1",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-73,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i003if:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jan/19 3:32 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/28683/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CORE_PEER_ADDRESS has no effect on the configuration object,FABCN-351,43539,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Done,kestutis.gudynas,palra,palra,04/Dec/19 10:38 PM,15/Dec/20 10:35 PM,28/Oct/23 2:28 AM,15/Dec/20 10:35 PM,,0,cc-triaged,external,,,,,"I was trying to pass options for the shim via env variables, especially the peer address. What I used to do is passing the argument directly via argv, like {{node ./my-chaincode.js --peer.address grpc://...:7052}}. Setting the {{CORE_PEER_ADDRESS}} has no effect because {{yargs-parser}} parses the environment variable with the key {{peerAddress}}, and not the key {{peer.address}}, used in the code here : [https://github.com/hyperledger/fabric-chaincode-node/blob/master/libraries/fabric-shim/lib/chaincode.js#L105]

I didn't went into a full investigation, but looks like that line 105 should read the key {{peer-address}} instead, while keeping {{peer.address}} for compatibility.",,mbwhite,palra,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6ku",,,,Unset,Unset,14Dec-4Jan,,,,,,,,,,,,,"Write a simple ChaincodeInterface, just for getting the shim working
Launch the chaincode with CORE_PEER_ADDRESS=peer0.example.com node ./my-chaincode
It should fail with the error ""Missing required argument peer.address""
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,palra,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/May/20 6:54 PM;mbwhite;Can I suggest that you use `CORE_PEER__ADDRESS` as a workaround please..   Note the double underscore. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update readme.md and move tutorial to ReadTheDocs,FABCN-352,43623,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,mbwhite,mbwhite,mbwhite,06/Dec/19 7:53 PM,07/Jan/20 10:39 PM,28/Oct/23 2:28 AM,07/Jan/20 10:39 PM,,0,cc-triaged,,,,,,"Minor update to the Readme.md, and move the tutorial.md file to the read-the-docs tutorial",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015wz:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Dec/19 7:55 PM;mbwhite;[https://github.com/hyperledger/fabric-chaincode-node/pull/46];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect license in file.,FABCN-353,43651,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ryjones,ryjones,10/Dec/19 4:02 AM,16/Dec/19 7:26 PM,28/Oct/23 2:28 AM,16/Dec/19 7:26 PM,,0,,,,,,,"package.json says:

  ""license"": ""ISC""

 

The correct license is Apache 2.
 * fabric-chaincode-node/tools/azure-mocha-reporter/package.json

 * fabric-chaincode-node/tools/toolchain/package.json

 * fabric-chaincode-node/docker/fabric-nodeenv/package.json

 * fabric-chaincode-node/test/chaincodes/encryption/package.json

 * fabric-chaincode-node/test/chaincodes/clientidentity/package.json

 * fabric-chaincode-node/test/chaincodes/crosschaincode2/package.json

 * fabric-chaincode-node/test/chaincodes/crosschaincode/package.json

 * fabric-chaincode-node/test/e2e/package.json

 * fabric-chaincode-node/docs/apidocs/package.json",,mbwhite,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0161n:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,ryjones,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Dec/19 6:16 PM;mbwhite;[https://github.com/hyperledger/fabric-chaincode-node/pull/50];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Two NPM packages are missing readme files,FABCN-355,43690,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,ryjones,ryjones,13/Dec/19 3:07 AM,06/Jan/20 5:42 PM,28/Oct/23 2:28 AM,06/Jan/20 5:42 PM,,0,external,,,,,,"visit https://www.npmjs.com/package/fabric-shim-crypto

{quote}""Unable to find a readme for fabric-shim-crypto@1.4.4""{quote}

visit https://www.npmjs.com/package/fabric-shim-api

bq. ""Unable to find a readme for fabric-shim-api@2.0.0-snapshot.1""",,mbwhite,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01683:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,ryjones,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Dec/19 6:36 PM;mbwhite;[https://github.com/hyperledger/fabric-chaincode-node/pull/51];;;","16/Dec/19 7:26 PM;mbwhite;[https://github.com/hyperledger/fabric-chaincode-node/pull/52]  << for 1.4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Azure Pipelines have upgraded node version,FABCN-356,43782,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,,mbwhite,mbwhite,20/Dec/19 6:03 PM,06/Jan/20 5:43 PM,28/Oct/23 2:28 AM,06/Jan/20 5:43 PM,,0,,,,,,,The check for version numbers of node in the rush script is using < 12.14.0  but the release is now == 12.14.0 so the build fails.,,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016rf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
contract-metadata schema for parameter not used by ajv for validation,FABCN-357,43795,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Won't Do,,waychan23,waychan23,24/Dec/19 1:35 PM,05/May/20 10:11 PM,28/Oct/23 2:28 AM,05/May/20 10:11 PM,,0,bug,cc-triaged,,,,,"In [contract-metadata.json|https://github.com/hyperledger/fabric-chaincode-node/blob/master/apis/fabric-contract-api/schema/contract-schema.json], the `schema` property with path `definitions.parameter.properties.schema` is not recognizable to the JSON-Schema [metadata definition|http://json-schema.org/draft-04/schema], causing the ajv validator not validating transaction parameters against the schema rules defined with the `schema` property.

The `contract-spi/bootstrap` does validation to the loaded contract-metadata/metadata.json, making users not able to just ignore the contract-metadata.json schema and stick to the JSON-Schema way of defining schema rules.",,mbwhite,waychan23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl4d:i",,,,Unset,Unset,,,,,,,,,,,,,,"1. create a contract-metadata/metadata.json file under the contract working directory
2. define a simple schema of path 'components.schemas.FooBar' as the following: 
```
{
    ""$id"":""FooBar"",
    ""required"": [""id""],
    ""properties"":[
        {
            ""name"":""id"",
            ""schema"":{
                ""type"":""number""
            }
        }
    ]
}
```
3. create a simple transaction in your contract with a parameter of type 'FooBar'
4. invoke the transaction with an intentionally invalid payload:
```
{
  ""id"": {}
}
```
5. The transaction should be succeed without validation errors, proving that the input parameter not validate against the schema.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,waychan23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jan/20 12:36 AM;mbwhite;~waychan23

Sorry taken a while to get to this... have you tried  
{ ""components"": {
{{  ""schemas"": {}}
{{    ""FooBar"":{}}
{{      ""$id"":""FooBar"",}}
{{      ""required"": [""id""],}}
{{      ""properties"":{}}
{{         ""id"":{}}
{{           ""name"":""id"",}}
{{           ""schema"":{}}
{{             ""type"":""number""}}
{{           }}}
        }}}

 

Properties being an object rather than array?;;;","28/Jan/20 1:00 AM;mbwhite;To add some more information...

The trransaction function I've got is 

*{*
 *""name"": ""updateMyAsset"",*
 *""tags"": [*
 *""submitTx""*
 *],*
 *""parameters"": [*
 *{*
 *""name"": ""arg0"",*
 *""description"": ""Argument 0"",*
 *""schema"": {*
 *""type"": ""string""*
 *}*
 *},*
 *{*
 *""name"": ""arg1"",*
 *""description"": ""Argument 1"",*
 *""schema"": {*
 *""$ref"": ""#/components/schemas/FooBar""*
 *}*
 *}*
 *]*
 *},*

with components as

*""components"": {*
 *""schemas"": {*
  *""FooBar"":{*
   *""$id"":""FooBar"",*
   *""required"": [""id""],*
   *""properties"":{*
    *""id"":{*
     *""name"":""id"",*
     *""schema"":*

*{ ""type"":""number"" }* 

*}**}**}**}**}*;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger API,FABCN-358,43832,,Epic,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,,,heatherp,heatherp,08/Jan/20 2:59 AM,18/Nov/20 6:38 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,community-help-wanted,,,,,"This epic connects all child work items related to delivering a new ledger-api in the fabric-chaincode-node repository.

A short introduction is included below, with a much more detailed design explanation is included in the ""Design"" section.

We're currently thinking this will exist as a separate package, i.e. in addition to fabric-shim and fabric-contract-api and therefore will live in a top level directory alongside those other apis. However the placement of this work may be reviewed as we iteratively deliver new functionality and test importing it, from a user's perspective.

Currently also planning on delivering this in typescript



Introduction

-------------

A typical sequence is for an application to connect to a peer (the 'gateway' into the network channel), and obtain a reference to a smart contract. The Network-shared transaction logic in the Smart Contract is then be invoked by name, and with optional data arguments and return values. The data arguments can include transient data if needed. The logic in the Smart Contract will typical reference and update the shared transaction data, subject of course to exactly how the code is written.

The 'Ledger' is, therefore, a primary abstraction in a blockchain system, including in Hyperledger Fabric; this abstraction allows the concepts of states, world state, collections, transactions, blocks etc. to be tied together and formalised.",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCJ-3,,FABCAG-6,FABCN-361,FABCN-367,FABCN-366,FABCN-364,FABCN-363,FABCN-362,FABCN-42,FABCN-92,FABCN-360,,,,,,,,,,,,,,"A very good high-level design summary is here:

https://github.com/hyperledger/fabric-rfcs/pull/16",Reviewed,Unset,Unset,ghx-label-5,,Node ledger-api,To Do,No,,Unset,No,,,"1|i016zv:",,,,No,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a smart contract developer, I want to use a ledger object",FABCN-359,43835,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jtonline,heatherp,heatherp,08/Jan/20 3:29 AM,04/Feb/20 2:06 AM,28/Oct/23 2:28 AM,04/Feb/20 12:45 AM,,0,cc-triaged,,,,,,"*As a* smart contract developer
 *I want* to get a ledger object
 *So that* I can get default and private collections objects from it

Conceptual APIs to include:
|get-collection-default (worldstate)|
|get-collection-private-name|
|bootstrap-ledger-api|

May include refactoring/improving current fabric-shim/lib/contract-spi code, which the ledger-api will make use of

Definition of Done includes:
 * interfaces and implementation
 * full unit tests
 * corresponding api docs for the apis added
 * integration tests satisfying this user outcome",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-358,,,No,,Unset,No,,,"1|hzx33q:s72",,,,Unset,Unset,20-27 Jan 20,31st-7th Feb 2020,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a smart contract developer, I want to use a state object",FABCN-360,43851,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,heatherp,heatherp,08/Jan/20 9:31 PM,18/Nov/20 6:38 PM,28/Oct/23 2:28 AM,18/Nov/20 6:38 PM,,0,cc-triaged,,,,,,"*As a* smart contract developer
 *I want* to get a state object
 *So that* I can get keys and values

Conceptual APIs to include:
|create-composite-key|
|split-composite-key|
|get-value|
|get-key|
|get-key-level-endorsement|
|set-key-level-endorsement|
|get-private-data-hash|
|get-policy (precise meaning TBD)|
|get-historic-states-for-key|

May include refactoring/improving current fabric-shim/lib/contract-spi code, which the ledger-api will make use of

Definition of Done includes:
 * interfaces and implementation
 * full unit tests
 * corresponding api docs for the apis added
 * integration tests satisfying this user outcome",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-358,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-358,,,No,,Unset,No,,,"1|hzzl4e:s",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a smart contract developer, I want to use a collection object",FABCN-361,43852,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,jtonline,heatherp,heatherp,08/Jan/20 9:39 PM,18/Nov/20 6:06 PM,28/Oct/23 2:28 AM,18/Nov/20 6:06 PM,,0,cc-triaged,,,,,,"*As a* smart contract developer
 *I want* to get a collection object
 *So that* I can access the state from it

Conceptual APIs to include:
  
|get-state|
|put-state|
|delete-state|
|current-ledger-state-query|

May include refactoring/improving current fabric-shim/lib/contract-spi code, which the ledger-api will make use of 


 Definition of Done includes:
 * interfaces and implementation
 * full unit tests
 * corresponding api docs for the apis added
 * integration tests satisfying this user outcome
  
  
h4.  ",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-358,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-358,,,No,,Unset,No,,,"1|hzwrnx:f",,,,Unset,Unset,31st-7th Feb 2020,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a smart contract developer, I want to use a query handler ",FABCN-362,43853,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,heatherp,heatherp,08/Jan/20 9:42 PM,18/Nov/20 6:09 PM,28/Oct/23 2:28 AM,18/Nov/20 6:09 PM,,0,cc-triaged,,,,,,"*As a* smart contract developer
 *I want* to use a query handler 
 *So that* I can access keys

Conceptual APIs to include:
 
|query-by-key-range|
|query-by-partial-key|
|query-from-key|
|query-to-key|
|query-selector (existing rich query)|

Definition of Done includes:
 * interfaces and implementation
 * full unit tests
 * corresponding api docs for the apis added
 * integration tests satisfying this user outcome",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-358,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-358,,,No,,Unset,No,,,"1|hzzl4e:t",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a smart contract developer, I want to use a state iterator",FABCN-363,43854,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,heatherp,heatherp,08/Jan/20 9:45 PM,18/Nov/20 6:09 PM,28/Oct/23 2:28 AM,18/Nov/20 6:09 PM,,0,cc-triaged,,,,,,"*As a* smart contract developer
 *I want* to use a state iterator
 *So that* I can iterate through states

Conceptual APIs to include:
  
|next-state|
|has-next-state|
|close-iterable|

Definition of Done includes:
 * interfaces and implementation
 * full unit tests
 * corresponding api docs for the apis added
 * integration tests satisfying this user outcome",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-358,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-358,,,No,,Unset,No,,,"1|hzzl4e:u",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a smart contract developer, I want to use a state history object and historic state iterator",FABCN-364,43856,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,heatherp,heatherp,08/Jan/20 9:48 PM,18/Nov/20 6:08 PM,28/Oct/23 2:28 AM,18/Nov/20 6:08 PM,,0,cc-triaged,,,,,,"*As a* smart contract developer
 *I want* to get a state history object and historic state iterator
 *So that* I can get keys, values and transaction ids from it and so that I can iterate through historic states

Conceptual APIs to include:
  
|get-value|
|get-key|
|get-tx-id|
|get-timestamp|
|get-is-delete|
|next-historic-state|
|has-next-historic-state|
|close-iterable |


 Definition of Done includes:
 * interfaces and implementation
 * full unit tests
 * corresponding api docs for the apis added
 * integration tests satisfying this user outcome",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-358,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-358,,,No,,Unset,No,,,"1|hzzl4e:v",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a javascript smart contract developer, I want to use the ledger-api",FABCN-365,43886,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,heatherp,heatherp,09/Jan/20 9:55 PM,18/Nov/20 6:08 PM,28/Oct/23 2:28 AM,18/Nov/20 6:08 PM,,0,cc-triaged,,,,,,"This is for us to provide confidence that our ledger-api typescript definitions are correct. Will probably include an integration test to ensure a javascript smart contract can call the ledger-api successfully

*Note: this is dependent on when the majority of major ledger-api stories (i.e. FABCN-359 to 364) are closed out, when no major changes to the typescript definitions are outstanding.*",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-358,,,No,,Unset,No,,,"1|hzzl4e:w",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a smart contract developer, I want to use fabric-samples and the ledger-api",FABCN-366,43887,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,heatherp,heatherp,09/Jan/20 10:47 PM,18/Nov/20 6:08 PM,28/Oct/23 2:28 AM,18/Nov/20 6:08 PM,,0,cc-triaged,,,,,,"*As a* smart contract developer
 *I want* to use the fabcar and commercial paper fabric samples and the ledger-api
 *So that* I can learn how to use the ledger-api in my smart contract, by example

*Note: this is dependent on when the majority of major ledger-api stories (i.e. FABCN-359 to 364) are closed out.*

We may decide to use a working fabcar sample as a milestone for a beta-release. However, both commercial paper and fabcar should be updated to include using the ledger-api before a proper release.

Matthew's notes: Update existing, add in additional and query",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-358,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-358,,,No,,Unset,No,,,"1|hzzl4e:x",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a smart contract developer, I want to use ledger-api docs and tutorials",FABCN-367,43889,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,heatherp,heatherp,09/Jan/20 10:52 PM,18/Nov/20 6:07 PM,28/Oct/23 2:28 AM,18/Nov/20 6:07 PM,,0,cc-triaged,,,,,,"*As a* smart contract developer
 *I want* formal documentation and tutorials regarding the ledger-api
 *So that* I can learn how to use the ledger-api in my smart contract

*Note: this is dependent on when the majority of major ledger-api stories (i.e. FABCN-359 to 364) are closed out.*

This is different from the API docs, I'm thinking most likely readTheDocs docs updates. We may only choose to have one location for formal documentation and tutorials, but it should provide examples for all languages",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-358,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-358,,,No,,Unset,No,,,"1|hzzl4e:y",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a smart contract developer, I want to check the performance of my smart contract written using the ledger-api",FABCN-368,43890,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid,,heatherp,heatherp,09/Jan/20 11:02 PM,18/Nov/20 8:08 PM,28/Oct/23 2:28 AM,18/Nov/20 8:08 PM,,0,cc-triaged,community-help-wanted,,,,,"*As a* smart contract developer
 *I want* to be able to run performance benchmarks against my smart contract written using the ledger-api
 *So that* I can understand it's performance

At the time of writing this we aren't too concerned by regressions as fabric-shim isn't going away or being re-written. 

I think this will include updates to caliper.",,heatherp,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-358,,,No,,Unset,No,,,"1|hzzl4e:yi",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/20 8:08 PM;lesleyannj;Closing as no current work taking place.  Please reopen if considered valid when work is started.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a smart contract developer, I want to use generator-fabric to generate smart contracts that make use of the ledger-api",FABCN-369,43891,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,heatherp,heatherp,09/Jan/20 11:05 PM,09/Jan/20 11:16 PM,28/Oct/23 2:28 AM,09/Jan/20 11:15 PM,,0,,,,,,,"*As a* smart contract developer
 *I want* to use generator-fabric to generate smart contracts that make use of the ledger-api
 *So that* I can access an auto-generated smart contract

Will involved updating generator-fabric",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i017c3:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add compatability matrix to documentation,FABCN-373,43916,,Documentation,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,heatherp,heatherp,10/Jan/20 1:28 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,29/Jan/20 12:49 AM,,0,cc-triaged,,,,,,"This could exist as a wider effort across all fabric components and therefore exist in readTheDocs?
For now, let's discuss adding a table into our docs, readMe perhaps? Explaining what versions of fabric/node we support on which version - at least to point RC users at when we frequently get asked",,heatherp,mbwhite,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1446,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s6o",,,,Unset,Unset,20-27 Jan 20,24-31st Jan 2020,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,mbwhite,pandrejko,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jan/20 8:17 PM;mbwhite;+Support Matrix - From the perspective of the Smart Contract+ 

The key elements are : 
 - the version of the Fabric Contract npm modules used
 - the version of the node.js runtime used to run the code

When starting a chaincode container to run a Smart Contract the version of the runtime that is used is determined by these factors:
 * Fabric v1.4.2, and Fabric v2.0.0 will by default start up a docker image, that is defined by the version of Fabric in use.
 * The name of this docker image can be altered by configuring the Fabric Peer
 * With Fabric v2.0.0, the chaincode container can be configured to be started by other means, and not the Peer. In this case, the environment used is not in the control of Fabric.

 

npm modules that are produced are the *fabric-contract-api, fabric-shim, fabric-shim-crypto & fabric-shim-api*

+Supported Runtimes+

v1.4.x and v2.0.0 npm modules are supported running in *node12.13* with the  *x86_64* architecture. Later node 12 versions are supported but are not tested
 v1.4.x npm modules are supported running in *node8.16.1* with the  *x86_64* architecture. Later node 8 versions are supported but are not tested

Architecture Support: all docker images, runtimes, tools are tested under *x86_64* ONLY

+Default+ +Peer Runtime selection+

When using _Fabric 2.0.0_, the default docker image that is used to run the Node chaincode is *node:12.13.0-alpine* 

_Note:_ With the default docker image used by Fabric 2.0.0 the packaged code will be installed with *npm*. If a package-lock.sj or a npm-shrinkwrap.json file is present, *npm ci --nly=production* will be used. Otherwise *npm install --production* will be used. 

 

When using _Fabric 1.4.4_, the docker image that is used to run the Node chaincode is *node v8.16.1.* It is installed with *npm install --production*

+Supported Runtime communication with the Peer+
  
 Subject to a suitable runtime environment, the *1.4.4 npm modules*   and *2.0.0 npm modules* can used to communicate with a Fabric 2.0.0 or 1.4.4 Peer - with the level of functionality that is implied by the Fabric version in use. 

 

 

 ;;;","15/Jan/20 8:23 PM;mbwhite;[~heatherp] [~lesleyannj]  does the above make sense?;;;","17/Jan/20 9:13 PM;heatherp;[~mbwhite] I'm no expert at being a smart contract developer, so I can't pass loads of judgement on the meaning of the words, but the sentences do make sense, yes :) I definitely think we need the above information somewhere in our docs for users to consume.
Thoughts:

- it's word heavy. I still think we need a table, somewhere. Does the word heavy aspect make it more difficult to maintain going forward?;;;","17/Jan/20 10:20 PM;mbwhite;This can easily be added as a SUPPORT.md in the repo, for the main docs - will defer to  [~pandrejko] opinion on the best place for this support statement for chaincode.

Yes a simple table - but can't really do tables in Jira - if I create a PR to add the SUPPORT.md - that can have tables.

Yes it is word heavy;  in a sense that was deliberate - wanted it to be unambiguous as possible; past experience coming back to haunt me :) Also people would tend to have a single scenario they are concerned with so go looking for a specific answer.  Hence having each section be as independent as possible... i.e. not saying relative terms like,  'this release'

 ;;;","17/Jan/20 11:42 PM;mbwhite;The PR for `fabric-chaincode-node` master branch is up for review;;;","18/Jan/20 12:03 AM;pandrejko;[~mbwhite] I do agree that a Table does sound like a good idea here. I'm happy to review the PR and edit it if we need help.  Can you post a link to the PR?;;;","18/Jan/20 2:36 AM;pandrejko;Matthew gave me a link to the content here: https://github.com/hyperledger/fabric-chaincode-node/blob/46c79659d919e7b06754f737afb590527618a0b8/SUPPORT.md;;;","21/Jan/20 6:18 PM;mbwhite;And the Java  [https://github.com/hyperledger/fabric-chaincode-java/blob/551c174bc519669d86ef38b008689f00942be67b/SUPPORT.md];;;",,,,,,,,,,,,,,,,,,,,,
"Publish image tag as ""latest"" in master",FABCN-374,43960,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Won't Do,,vijaypunugubati,vijaypunugubati,14/Jan/20 3:07 AM,20/Jan/20 11:20 PM,28/Oct/23 2:28 AM,20/Jan/20 11:20 PM,,0,cc-triaged,ci-failure,,,,,"Rename the tag as latest in master for nodeenv image. since all the dependent builds in CI are using the images with ""latest"" as tag while pulling from artifactory.

The same issue observed in javaenv image aswell.
{code:java}
/mage: nodeenv
Error response from daemon: manifest for nexus3.hyperledger.org:10001/hyperledger/fabric-nodeenv:amd64-latest not found: manifest unknown: manifest unknown
FAILED: Docker Pull Failed on nodeenv
Makefile:173: recipe for target 'pull-images' failed
make: *** [pull-images] Error 1
##[error]Bash exited with code '2'./ code placeholder
{code}
*Build:* https://dev.azure.com/Hyperledger/Fabric-Test/_build/results?buildId=5197&view=logs&j=1d99425b-0e5e-525f-8602-4964d4d27096&t=b366eb5e-ce7b-508a-7f7f-fed47afc96f0",,bharadwajambati1,btl5037,denyeart,heatherp,mbwhite,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl4d:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bharadwajambati1,btl5037,denyeart,heatherp,mbwhite,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/20 7:50 PM;denyeart;[~vijaypunugubati] In a Bug description, please separate a summary of the current problem, and the proposed fix. With the current Description, it is not possible for reader to distinguish the problem from the proposed fix.

If you are proposing some specific fix, please include Brett Logan in the discussion.  Note that we have to be careful about latest tags, as it is often unclear if you are talking about latest on master or latest on a specific release branch.;;;","20/Jan/20 11:15 PM;heatherp;[~denyeart] [~btl5037] Is there anything for us to do here?;;;","20/Jan/20 11:19 PM;btl5037;This was a problem before we switched to Artifactory, since we got those changes in at the end of last week (the new pipelines in Azure publish the correct tags) this is invalid, I will close;;;","20/Jan/20 11:20 PM;btl5037;Fixed with new AZP pipelines in Fabric-Test;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"Node chaincode 1.4.4, fails to install within Fabric v2",FABCN-375,43966,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,14/Jan/20 6:33 PM,14/Jan/20 10:54 PM,28/Oct/23 2:28 AM,14/Jan/20 10:54 PM,,0,,,,,,,"The node chaincode contains a hard dependency to the x509 library at the wrong version. 

Move it up to the latest and all is well. ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i017mb:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update getStateByPartialCompositeKey docs for when using a full key,FABCN-376,43988,,Documentation,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,,,icarrascol,icarrascol,15/Jan/20 12:57 AM,18/Nov/20 6:35 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,chaincode,external,hyperledger-fabric,stub,,"this functions allows us to query by a partial composite key but i think it should be allowed to query for the full key if we give all the attributes that form it, when i tested for the full composite key using this function i got an empty value. if there is no change to this method i think it needs to be specified in the documentation that we cant do a full key query",,heatherp,icarrascol,manish-sethi,pandrejko,,,,,,,,,,,,,,,,,,,,,FABCN-378,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i01zi",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,icarrascol,manish-sethi,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jan/20 3:23 AM;manish-sethi;The code doc is clear about this behavior - [https://github.com/hyperledger/fabric-chaincode-go/blob/b2c82fcbfa9778f3e0d4aa1b3e50944b9600bcd7/shim/stub.go#L486.|https://github.com/hyperledger/fabric-chaincode-go/blob/b2c82fcbfa9778f3e0d4aa1b3e50944b9600bcd7/shim/stub.go#L486]

[~pandrejko] - do you want to mention anywhere else in docs - else, we can close this.

 

 ;;;","17/Jan/20 5:43 AM;pandrejko;The Fabric documentation does not include Go SDK details.

The Go Fabric SDK documentation link from the Fabric docs points to https://github.com/hyperledger/fabric-chaincode-go under which is where Manish points to.

I can't think of a place to add this other than where it currently resides, but welcome suggestions. Otherwise, I think this can be closed.;;;","17/Jan/20 12:27 PM;manish-sethi;Closing this now [~icarrascol] - you can reopen if you have another suggestion that you think can provide improvement.;;;","17/Jan/20 8:49 PM;icarrascol;Sorry i couldnt answer before, i was talking about this site https://fabric-shim.github.io/release-1.4/fabric-shim.ChaincodeStub.html i think that is the one everyone uses or checks first, it seems that it doesnt have the same info as the docs directly from the code itself, i dont know who maintains it but it needs to be updated;;;","18/Jan/20 1:08 AM;manish-sethi;/cc [~andrew-coleman] /[~heatherp] would you be able to take a look?;;;","18/Jan/20 1:33 AM;heatherp;Yep, I've moved it to be under the chaincode project so it's on my radar and I'll take a look with the maintainers next week. 
Exact link to function referenced is here: [https://fabric-shim.github.io/release-1.4/fabric-shim.ChaincodeStub.html#getStateByPartialCompositeKey__anchor]

The comment here doesn't match chaincode-go's that Manish posted earlier, so it's probably worth making sure they match

[~icarrascol]- what version of fabric-shim were you using?;;;","18/Jan/20 1:57 AM;icarrascol;hello [~heatherp], ive been using version 1.4.4,  thanks for handling the issue;;;","20/Jan/20 11:12 PM;heatherp;Ok, spoke to the chaincode-node maintainers and it sounds like you want the api docs to match what it says in the relevant comment in chaincode-go, i.e. ""For a full composite key, an iter with empty response would be returned."" I'll update the title to reflect this, please change it if I've got that wrong. 

We need to move the location of the api docs before doing this one, so I'll block this Jira behind that change (FABCN-378);;;","20/Jan/20 11:35 PM;heatherp;It's probably also worth me mentioning that we're working on a new set of apis under a ""ledger-api"", which would help you out in this case. The work is tracked under here: https://jira.hyperledger.org/browse/FABCN-358 and is proposed/described here: https://github.com/hyperledger/fabric-rfcs/pull/16;;;",,,,,,,,,,,,,,,,,,,,
Release v2.0.0 chaincode-node,FABCN-377,44030,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,jtonline,heatherp,heatherp,20/Jan/20 9:07 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,24/Jan/20 10:55 PM,,0,cc-triaged,,,,,,Needs to include an update to azure pipelines file to ensure it recognises the release,,heatherp,jtonline,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s93",,,,Unset,Unset,20-27 Jan 20,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,jtonline,mbwhite,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jan/20 10:28 PM;mbwhite;PR to update version numbers in preparation at 

[https://github.com/hyperledger/fabric-chaincode-node/pull/62]

ReleaseNotes to do still.;;;","23/Jan/20 1:55 AM;jtonline;https://github.com/hyperledger/fabric-chaincode-node/pull/67;;;","24/Jan/20 12:20 AM;jtonline;[https://github.com/hyperledger/fabric-chaincode-node/pull/69];;;","24/Jan/20 10:55 PM;jtonline;[https://github.com/hyperledger/fabric-chaincode-node/pull/70];;;",,,,,,,,,,,,,,,,,,,,,,,,,
Move chaincode-node api docs to hyperledger.github.io site,FABCN-378,43992,,Documentation,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jtonline,heatherp,heatherp,15/Jan/20 2:10 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,03/Feb/20 7:23 PM,,0,cc-triaged,,,,,,"Docs currently live here: [https://fabric-shim.github.io/release-1.4/index.html]
it should be: [https://hyperledger.github.io/fabric-chaincode-node/|https://hyperledger.github.io/fabric-chaincode-node/release-1.4/]

Currently the docs builds are failing to publish, I believe
We also need to ensure we update links in readTheDocs to use the new links",,heatherp,jtonline,,,,,,,,,,,,,,,,,,,,,,,,FABCN-376,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s73",,,,Unset,Unset,20-27 Jan 20,31st-7th Feb 2020,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,jtonline,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,purge-pd,main-emeritius,main,release-2.0,mergify/bp/release-2.2/pr-3750,release-1.4,release-2.2,release-2.5,release-2.4,correct-nodeenv-version,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jan/20 10:47 PM;jtonline;[https://github.com/hyperledger/fabric-chaincode-node/pull/72]

[https://github.com/hyperledger/fabric-chaincode-node/pull/76]

[https://github.com/hyperledger/fabric-chaincode-node/pull/77]

 ;;;","29/Jan/20 11:30 PM;jtonline;[https://github.com/fabric-shim/fabric-shim.github.io/pull/1];;;","30/Jan/20 1:46 AM;jtonline;[https://github.com/hyperledger/fabric/pull/589]

[https://github.com/hyperledger/fabric/pull/590]

[https://github.com/hyperledger/fabric/pull/593];;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Setup integration tests in the CI build,FABCN-379,44040,,Task,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,awjh-ibm,awjh-ibm,21/Jan/20 6:38 PM,18/Nov/20 7:53 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,community-help-wanted,,,,,"The fabric-test repo contains a chaincode-integration tool which provides a number of cucumber tests for integration testing a chaincode language implementation.

Work needed:
- Run the tool as part of azure-pipeline build
- Create contracts required by the tool",,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i0a",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node 10 from chaincode is not compatible with Node 10 from SDK Node,FABCN-380,44142,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,awattez,awattez,27/Jan/20 7:47 PM,31/Mar/20 10:51 PM,28/Oct/23 2:28 AM,31/Mar/20 10:51 PM,,0,cc-triaged,chaincode,external,node,nodejs-chaincode,node-sdk,"Hi everyone,

Is it possible to not keep node version hardcoded in package.json ?

 

[https://github.com/hyperledger/fabric-chaincode-node/blob/master/package.json]

""node"": ""10.15.2""

 

I think it's good thing to communicate with fabric-sdk-node team in order to agree with version:

[https://github.com/hyperledger/fabric-sdk-node/blob/master/fabric-client/package.json]

""node"": ""^8.9.0 || ^10.15.3 || ^12.13.1"",

 

Regards,

Adrien",,awattez,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-391,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-6,,,No,https://github.com/hyperledger/fabric-chaincode-node/commit/d1c03f02ccb8b6bda24d9f3ef1659396e98f0a,Unset,No,,,"1|i0189f:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awattez,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/20 2:21 AM;heatherp;Hey [~awattez] I think this has been resolved - can you confirm you agree?
Clicking on your first link in the description shows a package.json with no node version specified. The apis/packages in the master branch of chaincode-node support node 12:
*""node"": ""^12.13.0"",*

And the release-1.4 branch supports node 8: 
 *""node"": ""^8.9.0"",*

So neither have a hardcoded version of node 10. Let me know if you're still stuck;;;","10/Feb/20 6:57 PM;awattez;Hey [~heatherp] thanks.

On release-2.0 branch the node 10 version is hardcoded.

[https://github.com/hyperledger/fabric-chaincode-node/blob/release-2.0/package.json]

{ ""engines"": \{ ""node"": ""10.15.2""}}

fabric-shim 2.0 is not compatible based on node version with 1.4.5 of fabric-client if we have chaincode and client in the same repository.

 

Is it possible to create a 2.0.1 version with this fix ?

{ ""engines"": \{ ""node"": ""^10.15.2""}}

 

Regards,

 ;;;","31/Mar/20 10:50 PM;heatherp;I've this in the release-2.0 branch, here: [https://github.com/hyperledger/fabric-chaincode-node/commit/2e8e698fa9579563abe46e8a933689756e34120d]
I'm working on updating the 2.0 branch to be *release-2.x* and releasing a v2.1.0 from it very soon, in line with the upcoming fabric v2.1.0 release.
Work tracked here: https://jira.hyperledger.org/browse/FABCN-391
So I'm going to close this off, you should be able to get a fix in 2.1.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Support fabric-chaincode-node api for retrieving mspid,FABCN-381,44148,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jtonline,caod,caod,28/Jan/20 3:51 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,24/Feb/20 8:18 PM,,0,cc-triaged,external,,,,,This mirrors the fabric-chaincode-node half of FAB-17439 and exposes a new shim function for returning the env var CORE_PEER_LOCALMSPID set from the peer side in FAB-17439.,,caod,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl4e:i",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caod,jtonline,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Feb/20 1:47 AM;jtonline;[https://github.com/hyperledger/fabric-chaincode-node/pull/90]

[https://github.com/hyperledger/fabric-chaincode-node/pull/94];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compatibility matrix title should say fabric-chaincode-node not java,FABCN-382,44187,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Done,,awjh-ibm,awjh-ibm,30/Jan/20 7:57 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,31/Jan/20 11:04 PM,,0,cc-triaged,,,,,,The compatibility matrix has a title of fabric-chaincode-java,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s97s",,,,Unset,Unset,24-31st Jan 2020,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getStateByRange does not work,FABCN-383,44179,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Works as Expected,jtonline,siddjain,siddjain,30/Jan/20 5:12 AM,13/Feb/20 1:10 AM,28/Oct/23 2:28 AM,13/Feb/20 1:10 AM,,0,cc-triaged,external,,,,,"The `getStateByRange` method documented at [https://fabric-shim.github.io/master/fabric-shim.ChaincodeStub.html#getStateByRange] is supposed to allow one to iterate over the records in Fabric. we have tried it with following code (just for illustration) and it does not work

 

```
public async getAssets(ctx: Context): Promise<Asset[]> {
const assets: Asset[] = [];
const results = awaitctx.stub.getStateByRange('', '');
while (true) {
let item = await results.next();
if (item.done) {
break;
} else {
let buffer = item.value.getValue();
let asset = JSON.parse(buffer.buffer.toString()) asAsset;
assets.push(asset);
}
}
await results.close();
return assets;
}
```
 
the `buffer` when converted to string returns
""ByteBufferNB(offset=22,markedOffset=-1,limit=386,capacity=1981)""
 
*Observed*
*=======*

`buffer.buffer.toString()` gives

""
�
�
mycc00000�\{""createdBy"":""x509::/C=US/ST=California/L=San Francisco/OU=client/CN=User1@org1.com::/C=US/ST=California/L=San Francisco/O=org1.com/CN=ca.org1.com"",""id"":""00000"",""lastModifiedBy"":""x509::/C=US/ST=California/L=San Francisco/OU=client/CN=User1@org1.com::/C=US/ST=California/L=San Francisco/O=org1.com/CN=ca.org1.com"",""metadata"":"""",""owner"":""org2MSP""}
�
�
mycc00001�\{""createdBy"":""x509::/C=US/ST=California/L=San Francisco/OU=client/CN=User1@org1.com::/C=US/ST=California/L=San Francisco/O=org1.com/CN=ca.org1.com"",""id"":""00001"",""lastModifiedBy"":""x509::/C=US/ST=California/L=San Francisco/OU=client/CN=User1@org1.com::/C=US/ST=California/L=San Francisco/O=org1.com/CN=ca.org1.com"",""metadata"":"""",""owner"":""org1MSP""}
�
�
mycc00002�\{""createdBy"":""x509::/C=US/ST=California/L=San Francisco/OU=client/CN=User1@org1.com::/C=US/ST=California/L=San Francisco/O=org1.com/CN=ca.org1.com"",""id"":""00002"",""lastModifiedBy"":""x509::/C=US/ST=California/L=San Francisco/OU=client/CN=User1@org1.com::/C=US/ST=California/L=San Francisco/O=org1.com/CN=ca.org1.com"",""metadata"":"""",""owner"":""org1MSP""}
�
�
mycc00003�\{""createdBy"":""x509::/C=US/ST=California/L=San Francisco/OU=client/CN=User1@org1.com::/C=US/ST=California/L=San Francisco/O=org1.com/CN=ca.org1.com"",""id"":""00003"",""lastModifiedBy"":""x509::/C=US/ST=California/L=San Francisco/OU=client/CN=User1@org1.com::/C=US/ST=California/L=San Francisco/O=org1.com/CN=ca.org1.com"",""metadata"":"""",""owner"":""org1MSP""}
�
�
mycc00004�\{""createdBy"":""x509::/C=US/ST=California/L=San Francisco/OU=client/CN=User1@org1.com::/C=US/ST=California/L=San Francisco/O=org1.com/CN=ca.org1.com"",""id"":""00004"",""lastModifiedBy"":""x509::/C=US/ST=California/L=San Francisco/OU=client/CN=User1@org1.com::/C=US/ST=California/L=San Francisco/O=org1.com/CN=ca.org1.com"",""metadata"":"""",""owner"":""org1MSP""}$efc8d188-16ae-41e8-a024-7880a8d0bf31""
 
as a result `JSON.parse(buffer.buffer.toString())` gives
 
```
SyntaxError: Unexpected token � in JSON at position 1
```
 
*Expected*
*=======*
 
*`*buffer.buffer` should return just the value of the first record. As it is, its returning a whole shebang of data.
 
---
 
As best as we can tell this is a bug in the return value of `item.value.getValue()`. If its a bug in our code, would appreciate an example of how we can rewrite to make it work. We cannot find any example online.",,heatherp,jtonline,siddjain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s70ac",,,,Unset,Unset,7-14th Feb 2020,,,,,,,,,,,,,Please see above,,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,jtonline,siddjain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jan/20 11:53 PM;heatherp;Hi [~siddjain] this is an issue with the apis provided by fabric-chaincode-node, so just moving this Jira to be under that project, as opposed to the node-sdk. Hopefully we'll take a look at the start of next week;;;","31/Jan/20 3:47 AM;siddjain;there is actually an official sample here: [https://hyperledger.github.io/fabric-chaincode-node/release-1.4/api/tutorial-using-iterators.html]

copying it below but with the same result *it does not work*. gives same result as code we have pasted.
async function getAllResults(iterator) {    const allResults = [];    while (true) {        const res = await iterator.next();        if (res.value) {            // if not a getHistoryForKey iterator then key is contained in res.value.key            allResults.push(res.value.value.toString('utf8'););        }        // check to see if we have reached then end        if (res.done) {            // explicitly close the iterator                        await iterator.close();            return allResults;        }    }};;;","11/Feb/20 1:21 AM;jtonline;Hi [~siddjain]

I'm not sure why the Working with iterators example isn't working but there's a working example in the FabCar contract here

[https://github.com/hyperledger/fabric-samples/blob/release-1.4/chaincode/fabcar/javascript/lib/fabcar.js#L108];;;","11/Feb/20 2:24 AM;jtonline;I just tried using the getAllResults function from the Working with iterators documentation in a modified fabcar contract and it worked.;;;","13/Feb/20 1:10 AM;jtonline;Closing since it looks like getStateByRange is working as expected. While unfortunately changing the current API would break existing code, there's a proposal around to implement an improved ledger api which is here if you're interested (there's no outlook on if or when it might be implemented though) [https://github.com/hyperledger/fabric-rfcs/pull/16];;;",,,,,,,,,,,,,,,,,,,,,,,,
DevDependencies included in shrinkwrap,FABCN-384,44203,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,31/Jan/20 7:39 PM,03/Feb/20 11:52 PM,28/Oct/23 2:28 AM,03/Feb/20 11:52 PM,,0,external,,,,,,"npm is confusing in how shrinkwrap files are handled both on creation and installation.

Whilst the shinkwrap file will include the devDependencies, it will mark them as such. 

However, though a npm install --production will not install the devDependencies of the module it is run in, it won't do the same down the tree.

Whether this is correct or not - the CI build can easily prune the devDepenendcies before the npm shrinkwrap... in that case there is no possibility of confusion

 ",,lesleyannj,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s70c",,,,Unset,Unset,31st-7th Feb 2020,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,mbwhite,,,,,,,,,,,,,,release-1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jan/20 11:10 PM;lesleyannj;So moving to use?

npm prune --production ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
release 1.4 iterator tutorial contains fabric 2.0 example for getHistoryForKey,FABCN-385,44259,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,davidkel,davidkel,davidkel,04/Feb/20 6:05 PM,12/Feb/20 9:39 PM,28/Oct/23 2:28 AM,12/Feb/20 9:39 PM,,0,cc-triaged,,,,,,The example at the bottom of the tutorial for the getHistoryForKey only works with fabric 2.0 (as it requires node 10 or higher). It doesn't add much value so it should be deleted,,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrnx:d",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,release-1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Feb/20 11:13 PM;davidkel;[https://github.com/hyperledger/fabric-chaincode-node/pull/86];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare next release - 1.4.6,FABCN-386,44295,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,07/Feb/20 7:57 PM,10/Feb/20 9:28 PM,28/Oct/23 2:28 AM,10/Feb/20 9:25 PM,,0,cc-triaged,,,,,,lPrepare next release for chaincode node.,,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s70a",,,,Unset,Unset,7-14th Feb 2020,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update node version support in fabric 1.4 chaincode,FABCN-387,44332,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,jtonline,jtonline,13/Feb/20 1:24 AM,09/Mar/20 10:54 PM,28/Oct/23 2:28 AM,09/Mar/20 10:54 PM,,0,,,,,,,"Fabric chanincode node currently uses node 8 in the version 1.4 releases, which went out of maintenance in January 2020

Should we update 1.4 to use node 10 instead?

This would require changes to the node packages (i.e. engines, and possibly dependency updates, etc.),  the ci builds, and the fabric-baseimage docker image...

https://github.com/hyperledger/fabric-baseimage/blob/2a5a65e135d9b8b48dfda790ec003ac36c8d25f4/scripts/common/setup.sh#L70",,jtonline,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0194z:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When using transaction annotation parameters, transaction decorator overrides param decorator ",FABCN-388,44500,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,kestutis.gudynas,awjh-ibm,awjh-ibm,04/Mar/20 2:57 AM,09/Dec/20 10:34 PM,28/Oct/23 2:28 AM,09/Dec/20 10:34 PM,,0,cc-triaged,good-first-issue,,,,,"If the chaincode tsconfig does not set ""emitDecoratorMetadata"" then the parameters are not included as no parameter types can be found. Even if a user uses the `@param` annotation the parameter array is still empty as `@transaction` overwrites it. This is unless `@param` is put before `@transaction` then it works as expected.",,awjh-ibm,calanais,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6qy",,,,Unset,Unset,7Dec-14Dec,,,,,,,,,,,,,"Don't set emitDecoratorMetadata in tsconfig

Define txn like:

```
@Transaction()
@Param('blah', 'Blah')
public async noParamsInMetadtaa(ctx: Context, blah: Blah) {
```

This will give params:
```
@Param('blah', 'Blah')
@Transaction()
public async yesParamsInMetadtaa(ctx: Context, blah: Blah) {
```",,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,calanais,heatherp,,,,,,,,,,,,,release-2.2,release-1.4,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Mar/20 11:03 PM;heatherp;Matthew says ""emitDecoratorMetadata"" is mandatory. 

The second example where transaction is overwriting param sounds like a bug;;;","09/Mar/20 11:07 PM;heatherp;We should also update he docs to explain that ""emitDecoratorMetadata"" is mandatory, as part of this issue;;;","18/Nov/20 6:27 PM;calanais;^ documentation issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-shim and fabric-contract-api nodejs version too restrictive,FABCN-390,44641,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,tangross,tangross,24/Mar/20 1:17 PM,31/Mar/20 6:51 PM,28/Oct/23 2:28 AM,31/Mar/20 6:51 PM,,0,,,,,,,"In chaincode-node ([https://github.com/hyperledger/fabric-chaincode-node/tree/release-2.0]) 

 

in package.json, 
|""engines"": \{""node"": ""10.15.2"",""npm"": ""^6.4.1""},|

 

The nodejs version is too restrictive, can it be changed to something like ""node"": "">10""?, or better remove engineStrict? Does it support nodejs v12?

 

This is because I am using monorepo nodejs approach. The chaincode development and node-sdk related development are in the same project. If this is too restrictive, the node-sdk is impacted to align to the same/single version ""10.15.2"". And, ""10.15.2"" is not LTS. ",,davidkhala,heatherp,tangross,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-391,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,,,No,,Unset,No,,,"1|i01a6z:",,,,Yes,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,heatherp,tangross,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Mar/20 10:16 PM;heatherp;Hey [~tangross], this has been fixed in the latest commit to release-2.0, here: [https://github.com/hyperledger/fabric-chaincode-node/commit/78f8cf8c2d51c60c0effdbe82c5ee254c2a1b4e5]
I'm in the process of releasing v2.1.0 from the release-2.0 branch (work will be attached to FABCN-391) so you should be able to pick this up when it's out. 
We're seeing an issue with builds against node v12.16: FABCN-392, so I'm reluctant to change this branch to an unrestricted node 12 version, as users may run into this issue more.;;;","31/Mar/20 2:03 PM;tangross;Hi [~heatherp] the ^ is fine enough. Thank you. ;;;","31/Mar/20 6:51 PM;heatherp;I'm closing this off, as this will be available in the 2.1.0 release;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Release v2.1.0,FABCN-391,44657,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,heatherp,heatherp,heatherp,26/Mar/20 1:23 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,16/Apr/20 5:58 PM,,0,cc-triaged,,,,,,"Fabric v2.1.0 is due mid-April, potentially earlier. So before Easter let's have done the following list. We're going to release from the release-2.0 branch, not master.
 * -port anything useful from master to release-2.0 branch:- Pr#103
 * -rename release-2.0 branch to be *release-2.x*-
 * -update azure pipelines to run against release-2.x branch PR- #109
 * -change master version number to not be 2.1.0, so it doesn't clash? to v3.0.0- Pr#104
 * -Ensure we're testing against Fabric v2.1- PR#101
 * -Update docs, references to v2.0.0 etc- Pr #110
 * -Go back to supporting node 12, either restrict version number, or fix- FABCN-392
 * -Release, usual stuff: release notes (paying attention to node version), version number change etc. *Change tag to latest*-
 -PR #112-
 * -(Probably) update fabric-samples to use our 2.1.0 version-
 * -Finally: version bump to 2.1.1 #122-",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-390,FABCN-380,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6z5xz",,,,Unset,Unset,20-27th March 2020,27-3rd Apr 20,3-9th Apr 2020,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,release-2.2,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fails to build against node 12.16.1,FABCN-392,44703,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,heatherp,heatherp,30/Mar/20 6:31 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,07/Apr/20 6:32 PM,,0,,,,,,,"{{FAILURE (1) }}
{{ }}
================================ 
{{ }}
fabric-shim (15.07 seconds) 
{{ }}
>>> fabric-shim 
{{ }}
npm run lint & npm test 2>&1 
{{ }}
> fabric-shim@2.1.0-unstable test /home/vsts/work/1/s/libraries/fabric-shim 
{{ }}
> nyc mocha --recursive 'test/unit/**/*.js' --reporter azure-mocha-reporter 
{{ }}
> fabric-shim@2.1.0-unstable lint /home/vsts/work/1/s/libraries/fabric-shim 
{{ }}
> eslint ./lib 
{{ }}
../../../../../apis/fabric-contract-api/lib/jsontransactionserializer.js 
{{ }}
[Function: JSONSerializer] 
{{ }}
============================================================================== 
{{ }}
 Chaincode 
{{ }}
[...795 lines omitted...] 
{{ }}
 at Module.replacementCompile (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/append-transform/1.0.0/node_modules/append-transform/index.js:58:13) 
{{ }}
 at Module._extensions..js (internal/modules/cjs/loader.js:1178:10) 
{{ }}
 at Object.<anonymous> (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/append-transform/1.0.0/node_modules/append-transform/index.js:62:4) 
{{ }}
 at Module.load (internal/modules/cjs/loader.js:1002:32) 
{{ }}
 at Function.Module._load (internal/modules/cjs/loader.js:901:14) 
{{ }}
 at Module.require (internal/modules/cjs/loader.js:1044:19) 
{{ }}
 at require (internal/modules/cjs/helpers.js:77:18) 
{{ }}
 at Context.<anonymous> (test/unit/cli.js:82:13) 
{{ }}{{ at processImmediate (internal/timers.js:456:21) }}",,heatherp,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6z5xz9",,,,Unset,Unset,27-3rd Apr 20,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,mbwhite,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Apr/20 11:19 PM;mbwhite;The above problem is related to [https://github.com/jhnns/rewire/issues/178]

 

Have set the unit tests to run using node 12.15.0, but the docker container uses 12.16.1 in production;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix broken links on npm package pages,FABCN-393,44818,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,kestutis.gudynas,heatherp,heatherp,15/Apr/20 7:58 PM,24/Nov/20 8:20 PM,28/Oct/23 2:28 AM,20/Nov/20 7:08 PM,,0,cc-triaged,,,,,,"[https://www.npmjs.com/package/fabric-shim]
[https://www.npmjs.com/package/fabric-contract-api]

Both contain broken links that need fixing",,kestutis.gudynas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6w",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),kestutis.gudynas,,,,,,,,,,,,,,,release-1.4,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Nov/20 7:06 PM;kestutis.gudynas;All links seem to be working.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-shim incorrectly implements interface ChaincodeStub from fabric-shim-api,FABCN-394,44830,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,Done,mbwhite,hristo-benchev,hristo-benchev,17/Apr/20 12:16 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,05/May/20 10:29 PM,,0,cc-triaged,external,,,,,"I'm using TS and just upgraded to the new 2.1.0 version of fabric-shim and start getting the following error:

-----

Class 'import(""fabric-shim"").ChaincodeStub' incorrectly implements interface 'import(""fabric-shim-api"").ChaincodeStub'.
 Property 'getMspID' is missing in type 'import(""fabric-shim"").ChaincodeStub' but required in type 'import(""fabric-shim-api"").ChaincodeStub'.ts(2420)


*apis/fabric-shim-api/types/index.d.ts(57, 9):* 'getMspID' is declared here. ",,hristo-benchev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zyi",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),hristo-benchev,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support grpc-js,FABCN-395,44903,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,sstone1,heatherp,heatherp,22/Apr/20 7:07 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,13/May/20 5:36 PM,,0,cc-triaged,,,,,,"grpc has been deprecated, migrate from grpc to grpc-js in fabric-shim

groundwork for protobufjs 6 was done under FABCN-49",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1544,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zy9",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Installing older Node based chaincode on 2.0 peer fails - document compatibility and upgrade steps,FABCN-396,44900,,Documentation,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,varadatibm,varadatibm,22/Apr/20 7:43 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,12/May/20 9:34 PM,,0,cc-triaged,external,operator,,,,"I have a Node chaincode code (CDS) from a couple of months ago that works on 1.4.6... but installing the same package on a Fabric 2.0 peer throws an error, but still gets added to the peer. When querying the peer, peer returns the failed cc into the installed chaincodes.

 
{panel}
could not build chaincode: docker build failed: docker image build failed: docker build failed: Error returned from build: 1 ""+ INPUT_DIR=/chaincode/input + OUTPUT_DIR=/chaincode/output + cp -R /chaincode/input/src/. /chaincode/output + cd /chaincode/output + '[' -f package-lock.json -o -f npm-shrinkwrap.json ] + npm ci '--only=production' > x509@0.3.3 install /chaincode/output/node_modules/x509 > node-gyp rebuild make: Entering directory '/chaincode/output/node_modules/x509/build' CXX(target) Release/obj.target/x509/src/addon.o In file included from ../node_modules/nan/nan.h:194, from ../include/x509.h:7, from ../src/addon.cc:5: ../node_modules/nan/nan_maybe_43_inl.h: In function 'Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)': ../node_modules/nan/nan_maybe_43_inl.h:88:15: error: 'class v8::Object' has no member named 'ForceSet' 88 | return obj->ForceSet(GetCurrentContext(), key, value, attribs); | ^~~~~~~~ ../node_modules/nan/nan_maybe_43_inl.h: In function 'Nan::MaybeLocal<v8::Object> Nan::CloneElementAt(v8::Local<v8::Array>, uint32_t)': ../node_modules/nan/nan_maybe_43_inl.h:220:17: error: 'class v8::Array' has no member named 'CloneElementAt' 220 | return array->CloneElementAt(GetCurrentContext(), index); | ^~~~~~~~~~~~~~ In file included from ../node_modules/nan/nan_converters.h:59, from ../node_modules/nan/nan.h:199, from ../include/x509.h:7, from ../src/addon.cc:5: ../node_modules/nan/nan_converters_43_inl.h: In static member function 'static Nan::imp::ToFactoryBase<v8::Boolean>::return_t Nan::imp::ToFactory<v8::Boolean>::convert(v8::Local<v8::Value>)': 
{panel}
{panel}
 
{panel}",,denyeart,mbwhite,robmurgai,varadatibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17784,,,,,,,,,,,,"23/Apr/20 6:18 AM;varadatibm;fabcar@3.0.1.cds;https://jira.hyperledger.org/secure/attachment/18300/fabcar%403.0.1.cds",,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:k",,,,Unset,Unset,1 May to 8 May,7May to 14May,,,,,,,,,,,,"On IBP UI
Install the chaincode on a Fabric 2.1 peer",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,mbwhite,robmurgai,varadatibm,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Apr/20 12:13 PM;denyeart;[~varadatibm] the error message indicates node.js chaincode, while the title indicates Go chaincode. Can you clarify?;;;","23/Apr/20 12:04 AM;varadatibm;[~denyeart] my bad! the chaincode was a nodejs chaincode... updated the issue...;;;","23/Apr/20 7:09 AM;denyeart;This issue will be used to track the node.js chaincode build issue.

A separate bug has been opened for the 'partial install' issue: https://jira.hyperledger.org/browse/FAB-17784;;;","23/Apr/20 5:46 PM;mbwhite;I would suspect that the issue here is that the version of the node modules used in that CDS are previous versions that don't build on node 12 (that is used in the Fabric 2.0 NodeEnv images).

To work with a Fabric 2.x, any 1.4 module must be at a minimum 1.4.5.

Would also recommend using Fabric 2.1 as that as an updated nodeenv image that uses a locked version of Node 12 (node 12.15.0)

 

 

[fabric-contract-api@1.4.5  fabric-shim@1.4.5];;;","23/Apr/20 5:46 PM;mbwhite;-Can you double check the module versions in the chaincode please?-

I've been able to take the cds file apart... the package-lock.json is using the 1.4.0 version of the node.js contract modules; these need to be updated. ;;;","23/Apr/20 8:57 PM;denyeart;[~mbwhite] A few questions...

 

1) I seem to be able to install fabric-samples release-1.4 fabcar chaincode to a v2.1 peer.  It ends up using fabric-contract-api 1.4.5. Why the difference between my results and Varad's?

2) Could Varad's problem be resolved by using the old chaincode runtime, e.g. setting {{CORE_CHAINCODE_NODE_RUNTIME}}=hyperledger/fabric-baseimage:0.4.18 ?

3) I think we'll want to document the user action to upgrade in a couple places:

[https://hyperledger-fabric.readthedocs.io/en/latest/upgrade_to_newest_version.html]

[https://github.com/hyperledger/fabric-chaincode-node/releases/tag/v2.0.0]

 ;;;","23/Apr/20 9:22 PM;mbwhite;1) it's the package-lock.json Varad has in the CDS - forcing the old node module to be used

2) Yes

3) agreed;;;","23/Apr/20 11:10 PM;denyeart;[~mbwhite]

1) Ah, when I force it to use fabric-contract-api 1.4.5 it works. When I force it to use fabric-contract-api 1.4.0 I see the same problem as Varad. 

2) Unfortunately {{CORE_CHAINCODE_NODE_RUNTIME}}=hyperledger/fabric-baseimage:0.4.18 doesn't fix it, since in v2.x Fabric uses a single image for the chaincode image basis and building (nodeenv), while in v1.x it was split between baseimage and ccenv. But {{CORE_CHAINCODE_NODE_RUNTIME}}=hyperledger/fabric-ccenv:1.4.6 appears to fix it.

3) So what do you recommend we document? Is it acceptable for people to use latest v1.4.x contract api on peer 2.x with nodeenv? Or should they shift to v2.x contract api?;;;","24/Apr/20 5:14 PM;mbwhite;The main issue is that the v2.x peer by default pulls in nodeenv that uses Node 12.x.  1.4.x contract-api can work happily here provided it's  1.4.5 or later.

 ;;;","24/Apr/20 9:46 PM;denyeart;Thanks [~mbwhite] . Can you be more specific with exactly what you'd like to document.

Specifically, you say nodeenv by default uses Node 12.x. Does that imply that a different version of Node could be used?

The compatibility page at  [https://github.com/hyperledger/fabric-chaincode-node/blob/master/COMPATIBILITY.md]

mentions that Node 1.4 modules can be used with 2.x peer and supports both Node.js 8 and 12. But there is no indication that at least 1.4.5 contract api is required, or how you would choose a Node.js 8 runtime versus a Node.js 12 runtime.  {{CORE_CHAINCODE_NODE_RUNTIME}} is mentioned in concept, but it doesn't mention what value to set (e.g. nodeenv or ccenv at a specific version).

So I'd suggest let's use this Jira to first cleanup that compatibility page, and then figure out which information to highlight in the Fabric upgrade docs and node.js SDK release notes. I've re-opened as a Doc task and assigned to you for now but feel free to re-assign as needed.

 

 ;;;",,,,,,,,,,,,,,,,,,,
All state queries are limited to 100 assets,FABCN-397,44974,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,mbwhite,ioannis.balomenos,ioannis.balomenos,29/Apr/20 5:21 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,12/May/20 9:37 PM,,0,cc-triaged,chaincode,external,,,,"Chaincodes written using `fabric-shim` 2.0^ cannot query more than 100 assets.
 
*Reason:*
The CommonIterator class is checking the response from the peer for a `has_more` property.
However, the property has been renamed to `hasMore`. The result of this is that a `handleQueryStateNext` call is never happening.
 
The impact of this is that all query results are limited to 100 no matter the actual amount on the State DB.

Have attached screenshots of the problem.",,ioannis.balomenos,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-399,,,,,,,,,,,,,,,,"29/Apr/20 5:15 PM;ioannis.balomenos;Screenshot 2020-04-23 at 15.18.33-1.png;https://jira.hyperledger.org/secure/attachment/18315/Screenshot+2020-04-23+at+15.18.33-1.png","29/Apr/20 5:20 PM;ioannis.balomenos;Screenshot 2020-04-29 at 10.20.33.png;https://jira.hyperledger.org/secure/attachment/18314/Screenshot+2020-04-29+at+10.20.33.png",,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:r",,,,Unset,Unset,1 May to 8 May,7May to 14May,,,,,,,,,,,,"1. Start a hyperledger-fabric network and install chaincode written on fabric-shim 2.1.1
2. Create more than 100 assets.
3. Try to query them all.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),ioannis.balomenos,mbwhite,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/May/20 1:02 AM;mbwhite;Analysis is spot on, the regenerated JS files from the protobuf changed the API from what was expected previously.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Iterators.KV.getValue(): returns ByteBuffer instead of Buffer,FABCN-398,44994,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Won't Do,,yuriiuhlanov,yuriiuhlanov,05/May/20 5:26 AM,26/May/20 5:12 PM,28/Oct/23 2:28 AM,26/May/20 5:12 PM,,0,cc-triaged,external,,,,," 
{code:java}
Iterators.KV.getValue(){code}
is annotated as *Buffer* whereas, in fact, it returns *ByteBuffer* instead.

 

 

in the doc, it is described as following
interface KV {    key: string;    value: Buffer;    getKey(): string;    getValue(): ProtobufBytes;}",,mbwhite,yuriiuhlanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01bn7:",,,,Unset,Unset,,,,,,,,,,,,,,"import { isByteBuffer } from 'bytebuffer';
...
const stateIter: Iterators.StateQueryIterator
let nextResult: Iterators.NextResult;
nextResult = await stateIter.next();
console.log(isByteBuffer(nextResult.value.getValue()))",,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,yuriiuhlanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/May/20 12:45 AM;mbwhite;So the ByteBuffer that is coming back is direct from the protobufjs library. It's a protobufjs/bytebuffer  rather than a regular buffer.

 

I believe that you should be able to use this as it is without issue?

 

V2.1 - has moved to use UInt8Arrays for everything. ;;;","11/May/20 9:52 PM;mbwhite;[~yuriiuhlanov]  have you observed any problems with this difference?  Problems that stop compilation or otherwise.

If this is just a warning/observation of a mismatch but functional things work, we'd prefer to leave this as-is... As in 2.1 the interface is different anyway;;;","26/May/20 5:12 PM;mbwhite;Resolved in the v2 updates; please shout if this causes compilation issues in 1.4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Node chaincode doesn't iterate past 100 records in a result set,FABCN-399,45012,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Duplicate,,denyeart,denyeart,07/May/20 1:03 PM,21/May/20 11:05 PM,28/Oct/23 2:28 AM,07/May/20 6:29 PM,,0,cc-triaged,,,,,,"I found this problem when testing FABCJ-285 on v2.1.

I updated FabCar to initialize 140 cars instead of 10. Query all cars returns the following number of cars:

Go chaincode - 140 cars

Java chaincode - 140 cars

Javascript chaincode - {color:#ff0000}100 cars{color}

Records are returned from peer to chaincode shim in batches of 100 records.

When the 101st record is requested by a chaincode, the chaincode shim is supposed to request the next batch of 100 from the peer by calling QUERY_STATE_NEXT.

This works as expected in Go chaincode and Java chaincode, but Javascript chaincode never calls QUERY_STATE_NEXT, and therefore only the first 100 records are returned to the client.

Each of the chaincode languages should have a test for > 100 records.",,denyeart,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-397,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01bqj:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/May/20 6:29 PM;mbwhite;PRs in CR review already.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Decorator @Property() only works with certain types,FABCN-400,45041,,Bug,Unverified,FABCN,Fabric Chaincode Node,software,mbwhite,,,Low,,,Arnaudboubou,Arnaudboubou,12/May/20 1:32 AM,18/Nov/20 6:28 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,external,,,,,"I'm using fabric-contract-api with Typescript and when I put the decorator @Property on properties differents than string or number the smart contract can't instantiate and got this error : ""failed to invoke chaincode name:""lscc"" , error: container exited with 1"".
I have tried with ""string[]"" and ""Date"" but apparently doesn't work on other types too except string or number.",,Arnaudboubou,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/May/20 1:29 AM;Arnaudboubou;screen-iic-model.png;https://jira.hyperledger.org/secure/attachment/18329/screen-iic-model.png","12/May/20 1:28 AM;Arnaudboubou;screen-logs-exited-with-1.png;https://jira.hyperledger.org/secure/attachment/18330/screen-logs-exited-with-1.png",,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i01y",,,,Unset,Unset,,,,,,,,,,,,,,"In Typescript, create a model class with types like ""Date"" and ""string[]"", then instantiate the smart contract.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),Arnaudboubou,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Correct use of yargs deprecated features,FABCN-401,45050,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,12/May/20 10:30 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,13/May/20 6:51 PM,,0,cc-triaged,,,,,,"The yargs parse configuration is in package.json, whereas it should be in the code using the API.",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:p",,,,Unset,Unset,7May to 14May,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/May/20 5:31 PM;mbwhite;PRs for release-2.x and master awaitning merge;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Version 2.1 Patch Release,FABCN-402,45103,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jtonline,mbwhite,mbwhite,18/May/20 4:52 PM,20/May/20 10:41 PM,28/Oct/23 2:28 AM,20/May/20 10:41 PM,,0,cc-triaged,,,,,,,,jtonline,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:ii",,,,Unset,Unset,15 May to 22 May 2020,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/May/20 10:41 PM;jtonline;Version 2.1.2 released
[https://github.com/hyperledger/fabric-chaincode-node/pull/148]

 

Version bumped to 2.1.3 for follow on work
[https://github.com/hyperledger/fabric-chaincode-node/pull/149];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Feature Request] Support aroundTransaction hook,FABCN-403,45105,,Story,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,iMacTia,iMacTia,18/May/20 11:48 PM,26/Nov/20 6:20 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,community-help-wanted,external,,,,"The Fabric Chaincode Node `Contract` class already supports some useful hooks like many other frameworks: `beforeTransaction`, `afterTransaction` and `unknownTransaction`:
{code:java}
async beforeTransaction(ctx) {
    // default implementation is do nothing
}

async afterTransaction(ctx, result) {
    // default implementation is do nothing
}
{code}
 

However other frameworks also support another really useful hook: `aroundTransaction`.

This hook can be used to ""wrap"" a transaction execution into a block, and it's really useful to implement middleware-style coding patterns.

The signature and default implementation would be as following:
{code:java}
/**
 *
 * @param {Function} txn - The transaction function to execute.
 */
 async aroundTransaction(txn, ...params) {
    // default implementation
    return await txn(...params)
} {code}
This can then be overridden in contracts, for example to catch, log and rethrow exceptions at a global level:
{code:java}
async aroundTransaction(txn, ...params) {
    try {
        return await txn(...params)
    } catch(error) {
        // catches the error and does some
        // processing before rethrowing, e.g. logging
        console.log(error)
        throw error
    }
}
{code}
 
  ",,iMacTia,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|i01c8b:",,,,Yes,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),iMacTia,mbwhite,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jun/20 5:02 PM;mbwhite;Hello; thanks for the suggestion - I can certainly see how it could be beneficial. Initial thoughts are that it might be only applicable in languages where you can pass a function pointer. However not to say it can't be used within node.

Where you seeing this as an alternative to the before/after... i.e. it's before/after XOR around?;;;","15/Jun/20 7:05 PM;iMacTia;Hello [~mbwhite] and thanks for looking into this.
{quote}Where you seeing this as an alternative to the before/after... i.e. it's before/after XOR around?
{quote}
Yes before/after and around should not be combined to achieve the same thing, but they most likely will both used in the same project.

before/after are much easier and more immediate to use, however there are some things that are simply impossible to implement with before/after hooks.

Developer should pick the best one for the job depending on what they need to do, but I wouldn't remove before/after in favour of around, they should all be available for different use-cases.
{quote}Initial thoughts are that it might be only applicable in languages where you can pass a function pointer
{quote}
That is correct, and node is an easy and elegant one. I didn't work with Java in recent years but I'd be surprised if something like this wouldn't be possible. No idea about GO to be honest, but if it really is similar to C++ as I heard, it should definitely be possible.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
FabCar sample uses Node 10 function,FABCN-404,45106,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,kestutis.gudynas,lesleyannj,lesleyannj,19/May/20 7:02 PM,18/Sep/20 8:35 PM,28/Oct/23 2:28 AM,18/Sep/20 8:35 PM,,0,cc-triaged,samples,,,,,"FabCar javascript sample uses a Node 10 functionality, but the package.json indicates 8 or above.

Line 112 in samples chaincode/fabcar queryAllCars  https://github.com/hyperledger/fabric-samples/blob/b2c486a1a4abbb3413e7eb84354b879bc9cd5d93/chaincode/fabcar/javascript/lib/fabcar.js#L112

*for await *(const {key, value} of ctx.stub.getStateByRange(startKey, endKey))

the for await syntax is only valid in node 10 and above.

However the package.json indicates 8 or above:


https://github.com/hyperledger/fabric-samples/blob/0396bbd8533f5d2180099cceffcb570f5fcf6f72/chaincode/fabcar/javascript/package.json#L8

""engines"": {
        *""node"": "">=8""*,
        ""npm"": "">=5""

package.json should be updated to reflect minimum node requirement",,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gea:i",,,,Unset,Unset,18Sep to 25Sep,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
references to incorrect package name,FABCN-405,45108,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,ryjones,ryjones,ryjones,20/May/20 1:50 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,26/May/20 5:58 PM,,0,cc-triaged,external,,,,,`fabric-contract-api`  should be used in tutorials instead of `fabric-chaincode-api`,,magnocav,mbwhite,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jw",,,,Unset,Unset,15 May to 22 May 2020,22 May to 29 May,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),magnocav,mbwhite,ryjones,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/May/20 2:41 AM;magnocav;I wrote my package.json with reference to the packages described in the URL ""[https://hyperledger.github.io/fabric-chaincode-node/master/api/tutorial-using-contractinterface.html]"". And in this page there is the code ""dependencies"": \{ ""fabric-chaincode-api"": ""^1.4.0"", ""fabric-shim"": ""^1.4.0"" }. So I believe that this code snippet has some inconsistency.;;;","22/May/20 5:06 PM;mbwhite;[Git commit |https://github.com/hyperledger/fabric-chaincode-node/commit/2fcf3eb117f70fb12675a7e6d354c667e194b57c]

[https://github.com/hyperledger/fabric-chaincode-node/commit/2fcf3eb117f70fb12675a7e6d354c667e194b57c];;;","22/May/20 5:15 PM;mbwhite;[https://github.com/hyperledger/fabric-chaincode-node/pull/152];;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Nodejs chaincode gRPC server,FABCN-406,45154,,Story,In Progress,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,shimos,shimos,shimos,29/May/20 11:10 PM,18/Nov/20 6:42 PM,28/Oct/23 2:28 AM,,,1,cc-triaged,external,,,,,"Implement chaincode as a server for nodejs chaincode.

This is duplicate of FABCJ-215, but it is in a wrong (I guess) project.",,lesleyannj,mbwhite,shimos,Udossohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCJ-45,,FAB-18041,FABCJ-215,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i09",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,mbwhite,shimos,Udossohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jun/20 10:17 PM;lesleyannj;[~shimos] FYI I am moving all the sub-tasks out of the active sprint.  Only this jira will remain.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update proto to prepare for the chaincode server,FABCN-407,45155,45154,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,shimos,shimos,shimos,29/May/20 11:11 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,04/Jun/20 1:45 AM,,0,,,,,,,The current protobuf files in fabric-chaincode-node are a little old and do not include the service definition for chaincode as a server.,,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01cib:",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),shimos,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Divide Chaincode client into a gRPC client and message handlers,FABCN-408,45156,45154,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,shimos,shimos,shimos,29/May/20 11:12 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,18/Jun/20 7:13 AM,,0,,,,,,,"The ChaincodeSupportClient class includes a gRPC client connecting to a peer and message handlers during the communication with the peer.
This should be divided to two so that the message handler part should be commonly used by a Chaincode server, which is to be implemented.",,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01cij:",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),shimos,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement a chaincode gRPC server without TLS,FABCN-409,45157,45154,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,shimos,shimos,shimos,29/May/20 11:13 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,18/Jun/20 7:13 AM,,0,,,,,,,First implement a chaincode gRPC server without TLS. Another sub-task will add TLS support.,,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01cir:",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),shimos,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use new chaincode lifecycle for the fv/e2e tests,FABCN-410,45187,45154,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,shimos,shimos,shimos,02/Jun/20 11:23 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,05/Jun/20 12:26 AM,,0,,,,,,,"The current fv/e2e tests are using the old (v1.x) chaincode lifecycle. To test v2.x feature, it is necessary to switch to the new chaincode lifecycle.",,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01cob:",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),shimos,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update CLI to support the chaincode server mode,FABCN-411,45206,45154,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,shimos,shimos,shimos,05/Jun/20 12:26 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,18/Jun/20 7:13 AM,,0,,,,,,,Update CLI to support the chaincode server mode with the contract API,,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01crv:",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),shimos,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TLS support for the chaincode gRPC server,FABCN-412,45208,45154,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,shimos,shimos,shimos,05/Jun/20 5:47 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,18/Jun/20 7:13 AM,,0,,,,,,,,,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01csb:",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),shimos,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add e2e test for the chaincode gRPC server mode,FABCN-413,45225,45154,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,shimos,shimos,shimos,09/Jun/20 5:43 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,18/Jun/20 7:14 AM,,0,,,,,,,,,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01cw3:",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),shimos,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update TypeScript definition for the chaincode gRPC server,FABCN-414,45246,45154,Sub-task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,shimos,shimos,shimos,11/Jun/20 6:20 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,18/Jun/20 7:14 AM,,0,,,,,,,,,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01cyj:",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),shimos,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
grpc-js@1.1.0 breaks chaincode deployment,FABCN-415,45419,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,,bestbeforetoday,bestbeforetoday,19/Jun/20 11:25 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,20/Jun/20 12:01 AM,,0,cc-triaged,,,,,,"grpc-js@1.0.5 works OK. Need to either figure out and fix the reason for the 1.1.0 breakage, or use an exact version dependency on grpc-js to ensure a working version is picked up at runtime.",,bestbeforetoday,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-417,,,,,,FABCN-416,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b7w:",,,,Unset,Unset,15 June to 19 June,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,mbwhite,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jun/20 11:41 PM;mbwhite;A workaround is to install the `@grpc/grpc-js@1.0.3` in the chaincode. As the dependency is listed as `^1.0.3` in the fabric-shim, this will force npm to use the working level. 

 ;;;","20/Jun/20 12:30 AM;mbwhite;Stack trace from the grpc error is 

Chat stream with peer - on error: %j ""Error: 14 UNAVAILABLE: No connection established
 at Object.callErrorFromStatus (/usr/local/src/node_modules/@grpc/grpc-js/build/src/call.js:31:26)
 at Object.onReceiveStatus (/usr/local/src/node_modules/@grpc/grpc-js/build/src/client.js:387:49)
 at Object.onReceiveStatus (/usr/local/src/node_modules/@grpc/grpc-js/build/src/client-interceptors.js:305:181)
 at Http2CallStream.outputStatus (/usr/local/src/node_modules/@grpc/grpc-js/build/src/call-stream.js:117:74)
 at Http2CallStream.maybeOutputStatus (/usr/local/src/node_modules/@grpc/grpc-js/build/src/call-stream.js:156:22)
 at Http2CallStream.endCall (/usr/local/src/node_modules/@grpc/grpc-js/build/src/call-stream.js:142:18)
 at Http2CallStream.cancelWithStatus (/usr/local/src/node_modules/@grpc/grpc-js/build/src/call-stream.js:458:14)
 at ChannelImplementation.tryPick (/usr/local/src/node_modules/@grpc/grpc-js/build/src/channel.js:238:32)
 at Object.updateState (/usr/local/src/node_modules/@grpc/grpc-js/build/src/channel.js:107:26)
 at ResolvingLoadBalancer.updateState (/usr/local/src/node_modules/@grpc/grpc-js/build/src/resolving-load-balancer.js:181:35)"" 



This is occurring on the initial service call that is made.  ;;;","20/Jun/20 1:01 AM;mbwhite;Suspect that this is the issue...

https://github.com/grpc/grpc-node/pull/1478;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Release of 2.1.3,FABCN-416,45420,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,mbwhite,mbwhite,mbwhite,20/Jun/20 12:01 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,22/Jun/20 9:34 PM,,0,cc-triaged,,,,,,"Patch release of 2.1.3 chaincode, due lock grpc-js level. ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-415,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z1",,,,Unset,Unset,15 June to 19 June,19 June to 26 June,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode invoke failing node gRPC error,FABCN-417,45400,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Duplicate,,icarrascol,icarrascol,19/Jun/20 6:35 AM,22/Jun/20 10:34 PM,28/Oct/23 2:28 AM,22/Jun/20 10:34 PM,,0,cc-triaged,chaincode,fabric,gRPC,node,,"Hello everyone ive been working all the day with some fabric networks i have, modifying the chaincode and regenerating them, everything was working fine but after like 2pm here i started having errors on chaincode invocation, while i try to install it it throws an error, i verified and grpc-js node module was updated today so i think this could be related to a change they did.

i have some other networks that were working and i didnt modify so i tried to redeploy them and this same error happens.

this is the error that is registered in the chaincode container when i try to invoke init method.

2020-06-18T20:13:06.168Z error [c-api:lib/handler.js] Chat stream with peer - on error: %j ""Error: 14 UNAVAILABLE: No connection established\n at Object.callErrorFromStatus (/usr/local/src/node_modules/@grpc/grpc-js/build/src/call.js:31:26)\n at Object.onReceiveStatus (/usr/local/src/node_modules/@grpc/grpc-js/build/src/client.js:387:49)\n at Object.onReceiveStatus (/usr/local/src/node_modules/@grpc/grpc-js/build/src/client-interceptors.js:305:181)\n at Http2CallStream.outputStatus (/usr/local/src/node_modules/@grpc/grpc-js/build/src/call-stream.js:117:74)\n at Http2CallStream.maybeOutputStatus (/usr/local/src/node_modules/@grpc/grpc-js/build/src/call-stream.js:156:22)\n at Http2CallStream.endCall (/usr/local/src/node_modules/@grpc/grpc-js/build/src/call-stream.js:142:18)\n at Http2CallStream.cancelWithStatus (/usr/local/src/node_modules/@grpc/grpc-js/build/src/call-stream.js:458:14)\n at ChannelImplementation.tryPick (/usr/local/src/node_modules/@grpc/grpc-js/build/src/channel.js:238:32)\n at Object.updateState (/usr/local/src/node_modules/@grpc/grpc-js/build/src/channel.js:107:26)\n at ResolvingLoadBalancer.updateState (/usr/local/src/node_modules/@grpc/grpc-js/build/src/resolving-load-balancer.js:181:35)""tldr

tldr: chaincode container image is installing an updated version of grpc-js package that seems to break the chaincode invoking process, seems like the dependency is not locked to an specific version.",,btl5037,icarrascol,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-415,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01dfv:",,,,Unset,Unset,,,,,,,,,,,,,,"1. deploy a network
2. install a chaincode writen in node
3. try an invoke like init or another method",,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,icarrascol,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jun/20 12:49 AM;btl5037;This was recently patched by the chaincode team to lock the new grpc-js dep to a specific version. You need to simply delete you current nodeenv image and the peer will pull the updated image when your next chaincode is installed.;;;","22/Jun/20 12:50 AM;btl5037;Please let us know that this fixes your problem.;;;","22/Jun/20 10:34 PM;lesleyannj;Duplicate of FABCN-415;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Dependency unable to use git,FABCN-418,45436,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jtonline,Jakeeyturner,Jakeeyturner,22/Jun/20 10:28 PM,23/Jun/20 9:50 PM,28/Oct/23 2:28 AM,23/Jun/20 9:50 PM,,0,cc-triaged,,,,,,"Unable to install a contract - this is due to github.com/DABH/diagnostics unable to find 'git'.
{code:java}
Error: Could not install smart contact received error: failed with status:500 ::failed to invoke backing implementation of 'InstallChaincode': could not build chaincode: docker build failed: docker image build failed: docker build failed: Error returned from build: 1 ""+ INPUT_DIR=/chaincode/input
 + OUTPUT_DIR=/chaincode/output
 + cp -R /chaincode/input/src/. /chaincode/output
 + cd /chaincode/output
 + '[' -f package-lock.json -o -f npm-shrinkwrap.json ]
 + npm install --production
 npm WARN deprecated mkdirp@0.5.1: Legacy versions of mkdirp are no longer supported. Please update to mkdirp 1.x. (Note that the API surface has changed to use Promises in 1.x.)
 npm WARN deprecated circular-json@0.3.3: CircularJSON is in maintenance only, flatted is its successor.
 npm ERR! code ENOENT
 npm ERR! syscall spawn git
 npm ERR! path git
 npm ERR! errno ENOENT
 npm ERR! enoent Error while executing:
 npm ERR! enoent undefined ls-remote -h -t ssh://git@github.com/DABH/diagnostics.git
 npm ERR! enoent 
 npm ERR! enoent 
 npm ERR! enoent spawn git ENOENT
 npm ERR! enoent This is related to npm not being able to find a file.
 npm ERR! enoent npm ERR! A complete log of this run can be found in:
 npm ERR! /root/.npm/_logs/2020-06-22T08_09_45_550Z-debug.log
 {code}
Related to this package - [https://github.com/winstonjs/winston/issues/1814]",,Jakeeyturner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1za",,,,Unset,Unset,19 June to 26 June,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Jakeeyturner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update dependencies,FABCN-419,45457,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,24/Jun/20 4:55 PM,26/Jun/20 9:24 PM,28/Oct/23 2:28 AM,26/Jun/20 9:24 PM,,0,cc-triaged,,,,,,"Update dependencies for the grpc-js and winston library

 ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z1i",,,,Unset,Unset,19 June to 26 June,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
azure pipline warnings,FABCN-420,45463,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,24/Jun/20 9:50 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,26/Jun/20 9:24 PM,,0,cc-triaged,,,,,,"A number of Azure warnings are present in the build output.

 

Swap over to use a new task for download artifacts

Try and merge the code coverage.",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1zb",,,,Unset,Unset,19 June to 26 June,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release 2.2 LTS,FABCN-421,45512,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,mbwhite,mbwhite,mbwhite,01/Jul/20 5:19 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,03/Jul/20 10:30 PM,,0,cc-triaged,,,,,,,,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z7",,,,Unset,Unset,29 Jun to 6 Jul,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document release process,FABCN-422,45547,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,jtonline,jtonline,jtonline,03/Jul/20 10:59 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,24/Jul/20 7:59 PM,,0,cc-triaged,,,,,,Add {{RELEASING.md}} file in root of repo documenting the current release process,,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzc",,,,Unset,Unset,3 Jul to 10 Jul,10 Jul to 24 Jul,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,,,,,,,,,,,,,,,release-2.2,release-1.4,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Jul/20 7:31 PM;jtonline;[https://github.com/hyperledger/fabric-chaincode-node/pull/188]

[https://github.com/hyperledger/fabric-chaincode-node/pull/187]

[https://github.com/hyperledger/fabric-chaincode-node/pull/189];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Suggestion] Unify the letter case of (ClientIdentity.)getMSPID and (ChaincodeStub.)getMspID,FABCN-423,45574,,Story,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,winderica,winderica,08/Jul/20 11:57 PM,18/Nov/20 7:53 PM,28/Oct/23 2:28 AM,,,1,cc-triaged,community-help-wanted,external,,,,"As mentioned in [this github pr|[https://github.com/hyperledger/fabric-chaincode-node/pull/185]], it's a bit confusing between {{(ClientIdentity.)getMSPID}} and {{(ChaincodeStub.)getMspID}} . We can unify their cases for consistency, but support both of them for a period of time, during which a warning message is shown when the deprecated one is called.",,winderica,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01eer:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),winderica,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resolving npm dependencies without Internet access,FABCN-424,45576,,Story,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Won't Do,,uhaller,uhaller,09/Jul/20 6:35 PM,09/Jul/20 9:59 PM,28/Oct/23 2:28 AM,09/Jul/20 9:54 PM,,0,cc-triaged,external,,,,,"We got following Suppport ticket from a customer who wants to package the chaincode and Peers without having access to the Internet:

[[|https://github.ibm.com/IBM-Blockchain/Support-Tickets/issues/1672]Build image with internal registry npm]([https://github.ibm.com/IBM-Blockchain/Support-Tickets/issues/1672])

Can you please check how to support the customer? Thanks.

 ",,mbwhite,uhaller,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ef7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,uhaller,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jul/20 9:53 PM;mbwhite;1) You can include the `.npmrc` file within the chaincode package that will direct the npm install to a local repository. We use this approach within the chaincode integration tests, to do a local publish of the just built chaincode npm packages, which can then be installed 'normally'

In a production environment, the challenge is that for 1.4 the chaincode package needs to be byte for byte identical - and this includes the .npmrc. So if there are different organizations that have different local npm repositories this is a challenge.

The solution here is to use the v2 peers with the v2 lifecycle that does not have this exact byte-for-byte check.. hence different organizations can use different local repositories.

Also note that all deployed contracts should be shrinkwraped, therefore it can be assured that the versions in the local repositories can be used. 

2) you can include the node_modules folder within the deployed contract, however, a `npm install` will still be installed. This though can be of considerable size and has risks as the native code that is used within the running docker image may be incompatible with what you built with

3) For complete deterministic control, the best Fabric approach would be to define an external builder and launch a specific docker image that you've built with the exact code you wish to use ;;;","09/Jul/20 9:54 PM;mbwhite;The approaches available esp in v2 should resolve this problem.

 

It's a general issue with node.js and it's ecosystem, so hard for Fabric to solve itself.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong interface for the method ChaincodeStub.getTxTimestamp(),FABCN-425,45580,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,kestutis.gudynas,yuriiuhlanov,yuriiuhlanov,10/Jul/20 9:24 AM,09/Dec/20 8:12 PM,28/Oct/23 2:28 AM,26/Nov/20 8:19 PM,,0,cc-triaged,external,,,,,"According to d.ts ([https://github.com/hyperledger/fabric-chaincode-node/blob/master/apis/fabric-shim-api/types/index.d.ts]) ChaincodeStub.getTxTimestamp() returns an interface Timestamp 

 
{code:java}
interface Timestamp {
        seconds: number;
        nanos: number;    
}{code}
or *google.protobuf.Timestamp* object as mentioned on the doc page here [https://hyperledger.github.io/fabric-chaincode-node/release-2.1/api/fabric-shim.ChannelHeader.html

 

 But when I call 
{code:java}
stub.getTxTimestamp().toDate(){code}
with
{code:java}
toDate(){code}
being a valid google.protobuf.Timestamp function

I get 
{code:java}
TypeError: stub.getTxTimestamp(...).toDate is not a function{code}",,btl5037,kestutis.gudynas,lesleyannj,yuriiuhlanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/20 8:24 PM;yuriiuhlanov;Screenshot from 2020-07-24 13-19-46-1.png;https://jira.hyperledger.org/secure/attachment/18500/Screenshot+from+2020-07-24+13-19-46-1.png",,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6zr",,,,Unset,Unset,20Nov to 29Nov,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,kestutis.gudynas,lesleyannj,yuriiuhlanov,,,,,,,,,,,,release-2.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Jul/20 5:51 PM;yuriiuhlanov;what timestamp.getSeconds() returns looks like
{code:java}
Long { low: 1591309740, high: 0, unsigned: false }{code}
apparently, it's type Long from long.js;;;","19/Jul/20 1:31 PM;btl5037;As the doc suggests, this is a Protobuf. You either need to use the *google.protobuf.Timestamp* package to convert it to a timestamp object (this is the correct way) or you can do something like:
{code:java}
const newTimestamp = new Date(timestamp.seconds.low * 1000);
{code}
Using the second method however frowned upon as it is possible to lose data in the calculation (like timezone adjsuted information) which the protobuf package will account for based on system time.;;;","23/Jul/20 10:12 PM;lesleyannj;Recommend API Docs update to show the example.;;;","24/Jul/20 8:16 PM;yuriiuhlanov;The problem that I'm having with the *Timestamp* interface that it misleadingly suggests that seconds have *number* type and not *Long* as it is in reality.;;;","24/Jul/20 9:17 PM;yuriiuhlanov;[~btl5037] I found a workaround for this bug myself, I'm using
{code:java}
(ctx.stub.getTxTimestamp().getSeconds() as unknown as Long).toNumber()
{code}
which is super ugly.

And what you suggest won't work because you don't have access to seconds from the timestamp object as demonstrated below:

!Screenshot from 2020-07-24 13-19-46-1.png|thumbnail!

The correct way would be to return Timestamp object directly as documentation implies;;;","26/Nov/20 8:19 PM;kestutis.gudynas;In order not to break already existing API, a new method was added to _ChaincodeStub_ class, which returns a Node.js _Date_ object.
{code:java}
getDateTimestamp(){code};;;",,,,,,,,,,,,,,,,,,,,,,,
state-based validation using nodejs chaincode,FABCN-426,45617,,Story,Backlog,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,,Sara.r,Sara.r,16/Jul/20 3:24 PM,18/Nov/20 6:06 PM,28/Oct/23 2:28 AM,,,0,cc-triaged,community-help-wanted,External,,,," am trying to set the key-level endorsement policy in my nodejs chaincode.

I can successfully set the endorsement using the following code

await ctx.stub.setStateValidationParameter(dataID, Buffer.from(""OR('Org1MSP.client','Org1MSP.admin','Org1MSP.member')"");

I have tried with both first-network and test-network default configurations. The problem is that when I want to update my data I get ""ENDORSEMENT_POLICY_FAILURE"" error. The docker logs show the following error. stateBasedValidator.Validate failed, err validation of key data1 (coll'':ns'monitoring') in tx 6:0 failed: Error unmarshaling to SignaturePolicy: proto: can't skip unknown wire type 7

Without setting the state-based endorsement policy I can successfully update my data, which means the problem comes from the way I set sate-based endorsement policy. I could not find any example regarding state-based endorsement using nodejs and I am not sure my ep format is correct.",,Sara.r,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i9",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Sara.r,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update grpc level to 1.24.3,FABCN-428,45722,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,calanais,calanais,calanais,30/Jul/20 6:06 PM,11/Sep/20 4:45 PM,28/Oct/23 2:28 AM,11/Sep/20 4:45 PM,,0,cc-triaged,,,,,,"Updating the grpc level to 1.24.3; 

The existing version with later node 8 versions had issues if a recompilation was attempted",,calanais,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhqz9",,,,Unset,Unset,23 Jul to 7 Aug,7 Aug to 14 Aug,4 Sep to 11 Sep 20,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/20 6:08 PM;calanais;[https://github.com/hyperledger/fabric-chaincode-node/pull/190];;;","07/Aug/20 5:47 PM;lesleyannj;[~calanais]    Can this be closed?  Is it required on any other branches?;;;","11/Sep/20 4:45 PM;calanais;To clarify that this is not required post-1.4 as 1.4 uses the native version of grpc.  other releases use the grpc-js library;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
tutorial using-iterators.md should reflect the current attribute names,FABCN-429,45796,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,kestutis.gudynas,harrisob@us.ibm.com,harrisob@us.ibm.com,11/Aug/20 6:52 AM,09/Dec/20 10:34 PM,28/Oct/23 2:28 AM,09/Dec/20 10:34 PM,,0,cc-triaged,,,,,," 
 - The tutorial ""using-iterators.md"" is using ""is_delete"" and the ""KeyModification"" interface is using ""isDelete"", along with tx_id vs txId.

 - The bundle.js defines it as isDelete and txId.

 - The test method
 {color:#795e26}testHistoryQueryIterator{color}
 is using txid vs txId.

 

 

 ",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6qz",,,,Unset,Unset,7Dec-14Dec,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong type definition for timestamp,FABCN-430,45821,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,shimos,shimos,shimos,14/Aug/20 3:30 AM,01/Jun/23 6:53 AM,28/Oct/23 2:28 AM,16/Sep/20 2:00 AM,,0,cc-triaged,external,,,,,"The {{second}} field in the {{Timestamp}} type is defined as {{number}} but is actually a {{Long}} instance
because it is converted from a protobuf field which is defined in
{{libraries/fabric-shim/google-protos/google/protobuf/timestamp.proto}} as follows:

{code}
message Timestamp {

  // Represents seconds of UTC time since Unix epoch
  // 1970-01-01T00:00:00Z. Must be from from 0001-01-01T00:00:00Z to
  // 9999-12-31T23:59:59Z inclusive.
  int64 seconds = 1;

  // Non-negative fractions of a second at nanosecond resolution. Negative
  // second values with fractions must still have non-negative nanos values
  // that count forward in time. Must be from 0 to 999,999,999
  // inclusive.
  int32 nanos = 2;
}
{code}

Therefore, currently the timestamp cannot be properly handled with a TypeScript chaincode.

For example, the following chaincode function (class omitted)

{code}
    async testTimestamp(ctx: Context): Promise<number> {
        const timestamp = ctx.stub.getTxTimestamp();

        console.log(util.inspect(timestamp));

        return timestamp.seconds;
    }
{code}

prints
{code}
Timestamp {
  seconds: Long { low: 1597274278, high: 0, unsigned: false },
  nanos: 717000000
}
{code}

to the console, and returns 

{code}
{""low"":1597274278,""high"":0,""unsigned"":false}
{code}

instead of a simple number.
",,rrozek,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,2553b32cad3beae227f21468b0701c41e622f2df (master),Unset,No,,,"1|i01fjn:",,,,Unset,Unset,,,,,,,,,,,,,,See the description,,Unset,,,,,,Unset,,Unset,,(Please add usage information),rrozek,shimos,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Sep/20 2:01 AM;shimos;https://github.com/hyperledger/fabric-chaincode-node/pull/194;;;","01/Jun/23 6:52 AM;rrozek;[~shimos] 

hi, i've been using `getTxTimestamp` happily for quite some time now, but (amazingly) after upgrading to 2.4 with new Gateway i receive some strange results from this method. Namely:
{code:java}
ctx.stub.getTxTimestamp(): {
  ""wrappers_"": null,
  ""arrayIndexOffset_"": -1,
  ""array"": [
    1685569393,
    463000000
  ],
  ""pivot_"": 1.7976931348623157e+308,
  ""convertedPrimitiveFields_"": {}
}
await ctx.stub.getTxTimestamp(): {
  ""wrappers_"": null,
  ""arrayIndexOffset_"": -1,
  ""array"": [
    1685569393,
    463000000
  ],
  ""pivot_"": 1.7976931348623157e+308,
  ""convertedPrimitiveFields_"": {}
}
ctx.stub.getDateTimestamp(): Invalid Date
await ctx.stub.getDateTimestamp(): Invalid Date
await ctx.stub.getDateTimestamp().getTime(): NaN
txTime: NaN
 {code}
am i the only one seeing this? Any idea how to investigate it? I tried running also regular asset-transfer-basic contract with this log but results are the same, getTxTimestamp is broken on my end :(

 

PS. i'm using Fablo for my local development in v1.1.0 if that matters in any way;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Periodic Cycle to check Vulnerabilities on Repo,FABCN-432,45977,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,lesleyannj,lesleyannj,lesleyannj,05/Sep/20 12:02 AM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,18/Sep/20 5:47 PM,,0,cc-triaged,,,,,,,,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8id9",,,,Unset,Unset,11Sep to 18Sep,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,,,,,,,,,,,,,,,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Sep/20 11:10 PM;lesleyannj;class-transformer updated to 0.3.1 in master, 2.x and 1.4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update level of Typescript to support versions,FABCN-433,45986,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,calanais,calanais,calanais,08/Sep/20 6:19 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,11/Sep/20 4:45 PM,,0,cc-triaged,,,,,,"Need to update Typescript and @types/node to a supported version.

 

Otherwise this error prevents the ts contracts from compiling.

https://github.com/DefinitelyTyped/DefinitelyTyped/issues/47250",,calanais,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8id2i",,,,Unset,Unset,4 Sep to 11 Sep 20,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,,,,,,,,,,,,,,,release-1.4,release-2.2,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Nightly Azure pipelines runs,FABCN-434,46009,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,calanais,calanais,calanais,09/Sep/20 10:08 PM,14/Sep/20 6:09 PM,28/Oct/23 2:28 AM,11/Sep/20 5:25 PM,,0,cc-triaged,,,,,,"Release 2.x already has nightly drivers builts, add these for the master and release-1.4 branches",,calanais,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhqzzr",,,,Unset,Unset,4 Sep to 11 Sep 20,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,,,,,,,,,,,,,,,release-1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OutOfMemory with large message sizes,FABCN-435,46108,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,High,Done,calanais,calanais,calanais,14/Sep/20 9:28 PM,11/Nov/20 12:59 AM,28/Oct/23 2:28 AM,15/Sep/20 9:57 PM,,0,cc-triaged,,,,,,"When sending a transaction to a Node.js chaincode(any version), if the arguments or transient data are sufficiently large, a OOM exception happens, this terminates the container. 

Transaction Timeouts may also occur as a result as processing large- but not 'fatally' large args can take a while. 

The issue is the result of an incorrect log point that was attempting to log the complete binary format of the network messages. ",,calanais,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8idv",,,,Unset,Unset,11Sep to 18Sep,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,lesleyannj,,,,,,,,,,,,,,release-2.2,release-1.4,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Sep/20 12:34 AM;lesleyannj;Patched on 1.7, 2.x and master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release 1.4.6 Fabric-chaincode-node,FABCN-436,46122,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,calanais,calanais,calanais,16/Sep/20 11:27 PM,18/Sep/20 7:21 PM,28/Oct/23 2:28 AM,18/Sep/20 7:21 PM,,0,cc-triaged,,,,,,Releasing 1.4.6 of the Chaincode Node libraries,,calanais,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8id3w",,,,Unset,Unset,11Sep to 18Sep,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,lesleyannj,,,,,,,,,,,,,,release-1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Sep/20 9:50 PM;lesleyannj;Release Bump to be done.;;;","17/Sep/20 10:10 PM;calanais;https://github.com/hyperledger/fabric-chaincode-node/pull/219;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CC 2.3 Release for Fabric 2.3,FABCN-437,46268,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,calanais,lesleyannj,lesleyannj,30/Oct/20 11:50 PM,12/Nov/20 10:35 PM,28/Oct/23 2:28 AM,12/Nov/20 10:35 PM,,0,cc-triaged,,,,,,,,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf9",,,,Unset,Unset,6Nov-13Nov,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix unit test node version,FABCN-438,46315,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,Kestutis_Gudynas,jtonline,jtonline,11/Nov/20 8:41 PM,23/Apr/21 9:43 PM,28/Oct/23 2:28 AM,23/Apr/21 9:43 PM,,0,cc-triaged,,,,,,"The node version used for unit tests is currently stuck at 12.15.0 due to a rewire issue


[https://github.com/jhnns/rewire/issues/178]

Either need to update rewire, and the node version, once a fix is available, or consider removing/replacing rewire in the unit tests if a fix isn't available in the near future.
 ",,jtonline,Kestutis_Gudynas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhjzixr",,,,Unset,Unset,NEXT TODO ITEMS,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,Kestutis_Gudynas,,,,,,,,,,,,,,release-2.2,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Apr/21 12:49 AM;Kestutis_Gudynas;Shebang problems in fabric-node-chaincode were caused not by rewire but by importing a node file which has a Shebang declaration not in the beginning of a file (e.g. [https://github.com/hyperledger/fabric-chaincode-node/blob/653c61589a08e8ddc2a22b7a8705dac721849025/libraries/fabric-shim/test/unit/cli.js#L50).|https://github.com/hyperledger/fabric-chaincode-node/blob/653c61589a08e8ddc2a22b7a8705dac721849025/libraries/fabric-shim/test/unit/cli.js#L50)]

This issue has been solved by removing the shebang when code is being tested and adding it back after that.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support META-INF directory as primary source of contract metadata,FABCN-439,46331,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,kestutis.gudynas,calanais,calanais,18/Nov/20 11:06 PM,02/Dec/20 9:02 PM,28/Oct/23 2:28 AM,02/Dec/20 8:18 PM,,0,cc-triaged,,,,,,"The issue is with the chaincode metadata and it's location.
 
 
It's a JSON description of the contracts, version title, etc, along with a list of all the transaction functions and their arguments.
[very much like the OpenAPI if you've encountered that]
 
 The way the chaincodes work, is that in most cases the annotations in the code let the chaincode libraries create the metadata... but in some cases (javascript or for some reason you don't use annotations), the metadata can be specified up by the user as a JSON file... for historical reasons it's in a directory called contract-metadata....There's other metadata that is used for the CouchDB indexes; that goes in a directory called META-INF - which is more sensible.
 
What we need is that all the chaincodes will look for the metadata in the META-INF directory and falling back to the original directory.
 
 
So this needs changing in all the chaincodes (1.4 I think as well as 2.2 and master).The complexity however is as part of this we need to go and check all the different ways a chaincode package can be created - to make sure they don't actively strip out the metadata file.",,calanais,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6r",,,,Unset,Unset,30Nov-7Dec,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/20 9:02 PM;lesleyannj;Changes merged to master and 2.2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
azure-mocha-reporter is vulnerable to package confusion,FABCN-441,46576,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Done,calanais,ryjones,ryjones,17/Feb/21 2:29 AM,26/Mar/21 11:07 PM,28/Oct/23 2:28 AM,26/Mar/21 11:07 PM,,0,cc-triaged,external,,,,,"Source: https://hackerone.com/bugs?subject=hyperledger&report_id=1104728

 

In the context of your bug bounty program I wanted to inform you I have found some misconfigurations in one of your open source node projects that lead to RCE (this was disclosed some days ago). Please read the vulnerability details to get more information about the ""dependency confusion"" vulnerability:
 [https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610]

Basically, if you reference a private package without specifying the full path to it, somebody can take those package names on npm and this leads to RCE. I have done several PoC for this vulnerability and it is actually quite effective. Unfortunately, even though I tried to do so for this case my npm account was just blocked :sad:. So I basically registered your misreferenced package names but I cannot transfer their ownership to you now because of my npm account being blocked. I already sent npm several emails without response but I will definitely let you know if they unlock my account.

The packages misreferenced in your open source projects are:
 azure-mocha-reporter:1.0.0

While the package was up I did receive some install requests with the following information (3 times), these may be coming from your servers or maybe from any of your package users, I would not be able to determine:
 {
 ip: '13.66.219.121',
 org: 'hyperledger',
 packageName: 'azure-mocha-reporter',
 hostname: '97deadae9444',
 username: 'root',
 path: '/opt/src/npm/azure-mocha-reporter/1.0.2/installed/node_modules/azure-mocha-reporter'
 }

Please fix your package references to be safer for now and I will let you know if I have my account unblocked for you to have the ownership of this package name.

Have a great day!

Impact
 Remote code execution on any machine that installs the project by running npm install.",,calanais,kevindick_tevora,lesleyannj,ryjones,,,,,,,,,,,,,,,,,,,,Security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,calanais,lesleyannj,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01j1f:",,,,Unset,Unset,22Mar to 4Apr,,,,,,,,,,,,,"ry@ry-mini:~/co$ grep -Rl azure-mocha *
hyperledger/fabric-chaincode-node/rush.json
hyperledger/fabric-chaincode-node/common/config/rush/pnpm-lock.yaml
hyperledger/fabric-chaincode-node/.git/index
hyperledger/fabric-chaincode-node/libraries/fabric-ledger/package.json
hyperledger/fabric-chaincode-node/libraries/fabric-shim-crypto/package.json
hyperledger/fabric-chaincode-node/libraries/fabric-shim/package.json
hyperledger/fabric-chaincode-node/tools/azure-mocha-reporter/package.json
hyperledger/fabric-chaincode-node/test/e2e/package.json
hyperledger/fabric-chaincode-node/test/fv/package.json
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,kevindick_tevora,lesleyannj,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Mar/21 7:53 PM;calanais;Hello,

We've addressed this within [https://github.com/hyperledger/fabric-chaincode-node/pull/262]

I'm afraid we didn't have visibility of this issue until yesterday. ;;;","11/Mar/21 10:43 PM;lesleyannj;Do we required a cherry-pick to 2.2;;;","25/Mar/21 2:23 AM;ryjones;Is this closed?;;;","26/Mar/21 11:07 PM;lesleyannj;Submitted to 2.2 https://github.com/hyperledger/fabric-chaincode-node/pull/263
;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Metadata tags for transaction submit/evaluate should be consistent across contract languages,FABCN-442,46613,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,Kestutis_Gudynas,lquintai,lquintai,04/Mar/21 10:43 PM,24/Mar/21 12:23 AM,28/Oct/23 2:28 AM,24/Mar/21 12:23 AM,,0,cc-triaged,external,,,,,"Currently metadata regarding submit/evaluate tags is different in all 4 tested languages.

There are 2 types of differences:
 # The name of the tag array: in some cases is *tag* (singular) in other is *tags* (plural).
 # The tag names

I am raising this against the node chaincode because there are 2 languages that need modifying here. Other chaincode languages will also have to be updated but I'll let the teams decide how to track this rather than copy/pasting this defect everywhere.


What does the submit/evaluate metadata look like for contracts written in:
 * JS: transactions have *tags* array
 ** ['submitTx'] --> submit - this is the only option


 * TS: transactions have *tag* array
 ** ['submitTx'] --> submit
 ** [] --> evaluate (empty array!!)


 * Go: transactions have *tag* array
 ** ['submit'] --> submit
 ** ['evaluate'] --> evaluate


 * Java: transactions have *tags* array
 ** ['INVOKE'] --> submit
 ** ['DEFAULT'] --> submit
 ** ['QUERY'] --> evaluate",,lquintai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01j0z:",,,,Unset,Unset,22Mar to 4Apr,,,,,,,,,,,,,"Create contracts in all the languages, make some transactions to be of evaluate and others submit type, and check metadata.

I have deployed these contracts and requested metadata on a v2 network using node SDK 2.2.2.
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),lquintai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node chaincode integration test flake: Error: Timeout of 2000ms exceeded.,FABCN-444,46631,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Environment Issue,calanais,denyeart,denyeart,10/Mar/21 12:28 PM,22/Mar/21 11:25 PM,28/Oct/23 2:28 AM,22/Mar/21 11:25 PM,,0,cc-triaged,ci-flake,,,,,"Interop Test failure in master:

[https://dev.azure.com/Hyperledger/Fabric-Test/_build/results?buildId=31497&view=logs&j=8e671fb0-2618-5094-37cc-902caf839e7f&t=8d81586b-9131-54eb-476e-43d53e3e5da4]

 

7 of 11: [fabric-shim] failed! 
  
 ================================ 
  
  
  
 FAILURE (1) 
  
 ================================ 
  
 fabric-shim (14.68 seconds) 
  
 >>> fabric-shim 
  
 npm run lint & npm test 2>&1 
  
 > fabric-shim@2.3.1-unstable lint /home/vsts/work/1/nodeenv-source/libraries/fabric-shim 
  
 > eslint ./lib 
  
 > fabric-shim@2.3.1-unstable test /home/vsts/work/1/nodeenv-source/libraries/fabric-shim 
  
 > nyc mocha --recursive 'test/unit/**/*.js' --reporter azure-mocha-reporter 
  
 ../../../../../apis/fabric-contract-api/lib/jsontransactionserializer.js 
  
 [Function: JSONSerializer] 
  
 ============================================================================== 
  
 Chaincode 
  
 [...773 lines omitted...] 
  
 ✓ should shorten txids over 8 letters 
  
 ✓ should leave txids shorter than 8 as was 
  
 ✓ should leave txids exactly 8 letters as was 
  
 417 passing (5s) 
  
 1 failing 
  
 1) bootstrap.js 
  
 ""before each"" hook: Sandbox creation for ""should pass on the register to the shim"": 
  
 Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure ""done()"" is called; if returning a Promise, ensure it resolves. (/home/vsts/work/1/nodeenv-source/libraries/fabric-shim/test/unit/contract-spi/bootstrap.js) 
  
 at processImmediate (internal/timers.js:439:21)",,denyeart,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01j17:",,,,Unset,Unset,22Mar to 4Apr,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Mar/21 12:29 PM;denyeart;This test has failed twice this week.;;;","22/Mar/21 11:25 PM;lesleyannj;Issue no longer seen.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Gradle to v7,FABCN-445,46815,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,Kestutis_Gudynas,Kestutis_Gudynas,Kestutis_Gudynas,23/Apr/21 7:05 PM,05/May/21 7:04 PM,28/Oct/23 2:28 AM,05/May/21 7:04 PM,,0,,,,,,,,,Kestutis_Gudynas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jhn:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Kestutis_Gudynas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not able to get Logger from Fabric API,FABCN-446,46820,,Bug,Unverified,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,,Kestutis_Gudynas,ismail5701,ismail5701,27/Apr/21 7:31 PM,11/May/21 8:00 PM,28/Oct/23 2:28 AM,,,0,external,Logging,,,,,"I am developing chiancode using typescript. For my purpose I needed all logs to be written in JSON format to console. I did not see any way to modify existing logging format from ```fabric-contract-api```. 

I tried to get the existing logger from Context but returning undefined.

````
beforeTransaction(ctx: Context): Promise<void> {
        log.info(\{ channelId: ctx.stub.getChannelID(), transactionId: ctx.stub.getTxID() });

        console.log('****************************inside taransaction**************');
        console.log('logger value @ transaction', ctx.logger);

        return;
    }
````
 ",,ismail5701,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jir:",,,,Unset,Unset,,,,,,,,,,,,,,"(Please add steps to repbeforeTransaction(ctx: Context): Promise<void> {
        log.info({ channelId: ctx.stub.getChannelID(), transactionId: ctx.stub.getTxID() });

        console.log('****************************inside taransaction**************');
        console.log('logger value @ transaction', ctx.logger);

        return;
    }roduce)",,Unset,,,,,,Unset,,Unset,,(Please add usage information),ismail5701,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
command `fabric-chaincode-node metadata generate` has wrong output,FABCN-447,46833,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Done,Kestutis_Gudynas,calanais,calanais,29/Apr/21 11:48 PM,06/May/21 12:50 AM,28/Oct/23 2:28 AM,06/May/21 12:47 AM,,0,,,,,,,"Running `fabric-chaincode-node metadata generate` ..

Produces lots of log output on stdout - fine for normal chaincode but not useful here

the --file option writes to the file - but without it it should write to screen but in a sensible way... i.e. something JQ could parse  But instead it's all escaped...

 ",,calanais,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jl7:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,,,,,,,,,,,,,,,release-2.2,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
How can we deploy Nodejs chaincode without Docker?,FABCN-448,46914,,Task,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Highest,Won't Do,kushalm,kushalm,kushalm,08/Jun/21 9:07 PM,14/Sep/21 5:25 PM,28/Oct/23 2:28 AM,14/Sep/21 5:25 PM,,0,Documentation,external,node-SDK,,,,"I have created hyperledger fabric channel using this -  [https://medium.com/cloudronics/hyperledger-fabric-blockchain-cluster-without-using-docker-containers-746359e174c |https://medium.com/cloudronics/hyperledger-fabric-blockchain-cluster-without-using-docker-containers-746359e174c].



Now, I have to deploy nodejs chaincode without using Docker on the peer started using above link. 

So, Can we install Nodejs chaincode *without Docker?* If yes, then please suggest me any document with complete process.",,calanais,kushalm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABCN-2,,,No,,Unset,No,,,"1|i01k17:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,kushalm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Sep/21 5:25 PM;calanais;To run the chaincode without a docker reqauires using the External Builders and potentially running the chaincode as a server.

 

Check this documentation link., 

Check [https://hyperledger-fabric.readthedocs.io/en/release-2.2/cc_service.html?highlight=chaincode%20as%20a%20server]

 ;;;","14/Sep/21 5:25 PM;calanais;Documentation Reference given.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer Out of Sync issue,FABCN-449,47031,,Bug,Closed,FABCN,Fabric Chaincode Node,software,mbwhite,,,Medium,Invalid: Environment Issue,,avinashsachdewani,avinashsachdewani,22/Jul/21 12:09 PM,02/Sep/21 10:50 PM,28/Oct/23 2:28 AM,02/Aug/21 9:54 AM,,0,external,node-SDK,,,,,"Hi,
 Currently we are upgrading our network from HLF 1.4 to 2.2.
 As our current HLF network using docker and kubernetes we decided to use below approach for the migration.
 # Identify the last block using peer channel fetch
 # Clone all the transactions blocks using peer channel fetch
 # Convert these blocks to JSON
 # Use the JSON objects to execute transactions using a fabric network.

We are running both HLF 1.4 and 2.2 network during the migration.
 While transferring the transaction blocks network handling up to 65K transactions after that both peers going out of sync and maintaining different balance.
 65K max I can reach so far sometime peer going out of sync as early as 5K transactions.

HLF 2.2 network Configuration:
 * One Org
 * 2 Peer
 * 3 Orderer

Fabric Network 2.2.5
 fabric-ca-client 2.2.5
  
 Please let me know if any other detail required about the network.",,avinashsachdewani,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jul/21 12:09 PM;avinashsachdewani;Screenshot 2021-07-12 at 12.47.37 PM.png;https://jira.hyperledger.org/secure/attachment/19032/Screenshot+2021-07-12+at+12.47.37+PM.png","22/Jul/21 12:09 PM;avinashsachdewani;Screenshot 2021-07-12 at 12.47.53 PM.png;https://jira.hyperledger.org/secure/attachment/19033/Screenshot+2021-07-12+at+12.47.53+PM.png",,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kpf:",,,,Unset,Unset,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),avinashsachdewani,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
