Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Description,Environment,Watchers,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Inward issue link (Cloners),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Business Value),Custom field (Commit Levels),Custom field (Current Status),Custom field (Design),Custom field (Design Status),Custom field (Documentation Impact),Custom field (Documentation Status),Custom field (Epic Color),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (Executed),Custom field (Found in Commit),Custom field (Function Test Status),Custom field (Must Fix),Custom field (Original story points),Custom field (Parent Link),Custom field (Rank),Custom field (Release Note),Custom field (Release Note Required),Custom field (Root Cause Analysis),Custom field (SDK Impact),Custom field (Sample/Tutorial),Sprint,Sprint,Sprint,Sprint,Sprint,Custom field (Steps to Reproduce),Custom field (Story Points),Custom field (System Test Impact),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Team),Custom field (Test Plan),Custom field (Test Result),Custom field (Test Result Details),Custom field (Test Type),Custom field (Triaged),Custom field (Usage),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Workaround),Custom field (gitCommitsReferenced),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
CLI: 'did rotate-key' CLI command should support fees,IS-1001,33950,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,zhigunenko.dsr,ozheregelya,ozheregelya,21/Sep/18 1:41 AM,09/Oct/18 5:01 PM,28/Oct/23 2:49 AM,09/Oct/18 5:01 PM,,,,,,,,,,,,,,,0,,,," 
{code:java}
pool(p1):wallet(w1):did(Q36...mKW):indy> did rotate-key help 
Command:
 did rotate-key - Rotate keys for active did
Usage:
 did rotate-key [seed[=<seed-value>]]
Parameters are:
 seed - (optional) (leave empty for deferred input) If not provide then a random one will be created
Examples:
 did rotate-key
 did rotate-key seed=00000000000000000000000000000My2
{code}

did rotate-key should have optional parameters fees_inputs and fees_outputs.","libindy, indy-cli 1.6.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwv93:",,,,Unset,Unset,Ev 18.20,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,ozheregelya,zhigunenko.dsr,,,,,,,"21/Sep/18 4:19 PM;gudkov;[~ozheregelya] It seems more like missing feature than bug. I suggest to change it to story.;;;","01/Oct/18 2:01 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1157;;;","04/Oct/18 10:17 PM;Artemkaaas;Build version: master-769;;;","05/Oct/18 12:43 AM;zhigunenko.dsr;*Environment:*
indy-cli                   1.6.6~769 

*Steps to Validate:*
1) set fee for NYM
2) run ""rotate-key"" with payment sources
3) send schema with new key

*Actual Results:*
Key has been rotated successfully. Schema has been written in ledger

*Additional Info:*
Further testing will be performed in scope of IS-1022;;;",,,,,,,,
replace openssl hash,IS-1002,33970,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,ignisvulpis,ignisvulpis,21/Sep/18 5:05 PM,03/Oct/18 4:22 AM,28/Oct/23 2:49 AM,03/Oct/18 4:21 AM,,,,,,,,,,,,,,,0,,,,"Rust hash functions from the sha2 and sha3 crate provide everything needed by libindy.

Remove [https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/utils/crypto/hash/openssl.rs] and replace it with native rust.

The wallet import and export functions seem to have introduced this new dependency on openssl.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1021,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvg7:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,gudkov,ignisvulpis,sergey.minaev,,,,,,,"21/Sep/18 8:32 PM;gudkov;[~ignisvulpis] indy-crypto depends on OpenSSL for bignumbers and RSA-like code. There is no alternative for the moment that provides acceptable licence and performance.;;;","21/Sep/18 10:57 PM;ignisvulpis;indy-crypto also wants to get rid of openssl.

libindy is using sha2 and sha3 already and therefore I assume they perform well

[https://github.com/hyperledger/indy-sdk/pull/1154];;;","24/Sep/18 2:56 PM;ignisvulpis;I advanced  [https://github.com/hyperledger/indy-sdk/pull/1154]

That removes openssl from indy-sdk although it is still in indy-crypto but getting rid of openssl makes cross-compiling libindy for e.g. Android much simpler.;;;","24/Sep/18 3:09 PM;ignisvulpis;If 1154 is done the https://jira.hyperledger.org/browse/IS-962 is not needed.;;;","28/Sep/18 1:20 AM;ignisvulpis;I compared different cryto libraries using https://github.com/AxelNennker/crypto-bench
``` Finished release [optimized + debuginfo] target(s) in 0.02s 
 Running target/release/deps/crypto_bench_rustcrypto-2b1f68cfdab32d00

running 6 tests
test digest::sha256::_1000 ... bench: 4,559 ns/iter (+/- 281) = 219 MB/s
test digest::sha256::_16 ... bench: 306 ns/iter (+/- 23) = 52 MB/s
test digest::sha256::_2000 ... bench: 9,317 ns/iter (+/- 1,000) = 214 MB/s
test digest::sha256::_256 ... bench: 1,439 ns/iter (+/- 41) = 177 MB/s
test digest::sha256::_8192 ... bench: 37,831 ns/iter (+/- 3,092) = 216 MB/s
test digest::sha256::block_len ... bench: 594 ns/iter (+/- 33) = 107 MB/s

test result: ok. 0 passed; 0 failed; 0 ignored; 6 measured; 12 filtered out

Finished release [optimized + debuginfo] target(s) in 0.01s 
 Running target/release/deps/crypto_bench_sodiumoxide-c735c721ccf15fea

running 6 tests
test digest::sha256::_1000 ... bench: 4,243 ns/iter (+/- 170) = 235 MB/s
test digest::sha256::_16 ... bench: 311 ns/iter (+/- 40) = 51 MB/s
test digest::sha256::_2000 ... bench: 8,275 ns/iter (+/- 423) = 241 MB/s
test digest::sha256::_256 ... bench: 1,375 ns/iter (+/- 42) = 186 MB/s
test digest::sha256::_8192 ... bench: 33,960 ns/iter (+/- 7,060) = 241 MB/s
test digest::sha256::block_len ... bench: 595 ns/iter (+/- 21) = 107 MB/s

test result: ok. 0 passed; 0 failed; 0 ignored; 6 measured; 9 filtered out

Finished release [optimized + debuginfo] target(s) in 0.01s 
 Running target/release/deps/crypto_bench_openssl-89872258fec62510

running 6 tests
test digest::sha256::_1000 ... bench: 2,281 ns/iter (+/- 163) = 438 MB/s
test digest::sha256::_16 ... bench: 278 ns/iter (+/- 54) = 57 MB/s
test digest::sha256::_2000 ... bench: 4,274 ns/iter (+/- 116) = 467 MB/s
test digest::sha256::_256 ... bench: 811 ns/iter (+/- 63) = 315 MB/s
test digest::sha256::_8192 ... bench: 16,959 ns/iter (+/- 2,017) = 483 MB/s
test digest::sha256::block_len ... bench: 453 ns/iter (+/- 84) = 141 MB/s

test result: ok. 0 passed; 0 failed; 0 ignored; 6 measured; 19 filtered out
```
So it seems openssl is twice as fast as RustCrypto and libsodium.
At least on my machine which is:
ignisvulpis@namenlos:~/development/crypto-bench$ inxi -C
CPU: Quad core Intel Core i7-6920HQ (-HT-MCP-) cache: 8192 KB
 clock speeds: max: 3800 MHz 1: 1068 MHz 2: 2012 MHz 3: 1947 MHz 4: 1728 MHz 5: 1742 MHz 6: 1468 MHz
 7: 1794 MHz 8: 1780 MHz
ignisvulpis@namenlos:~/development/crypto-bench$

Can you verify these findings?

So removing openssl from indy seems unwise and actually we should move all sha256 to openssl, right? What do you think?
Could somebody confirm these findings? I suggest to close this issue and in fact suggest to consider removing sha2 and sha3 from indy and replacing them with openssl methods.;;;","02/Oct/18 11:13 PM;sergey.minaev;[~ignisvulpis] thank you for investigation!

[~gudkov] I also think that we should close this ticket after creation new one like  ""Use optimal implementation for math like hash encryption etc"". Or may be some exploratory ticket;;;","03/Oct/18 3:31 AM;ignisvulpis;I think crypto-bench should be enhanced by adding all crypto methods we are using. I think there are some missing we are using in sodiumoxide.

Also use indy-crypto and don't care how things are implemented in indy-sdk.;;;","03/Oct/18 4:22 AM;esplinr;Closing this issue.

We created IS-1021 to check that we are using the correct functions.;;;",,,,
env::home_dir is deprecated,IS-1003,33971,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ignisvulpis,ignisvulpis,21/Sep/18 5:15 PM,08/Oct/18 8:35 PM,28/Oct/23 2:49 AM,08/Oct/18 8:35 PM,,,,,,,,,,,,,,,0,,,,"Rust warns that env::home_dir is deprecated and should be replaced by dirs::home_dir from the dirs crate.

 

[https://docs.rs/dirs/1.0.3/dirs/]

[https://crates.io/crates/dirs]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvan:",,,,Unset,Unset,Ev 18.20,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,ignisvulpis,sergey.minaev,,,,,,,"04/Oct/18 7:56 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1187;;;","08/Oct/18 5:53 PM;sergey.minaev;Waiting master build 777+;;;","08/Oct/18 8:35 PM;gudkov;No deprecation warnings now;;;",,,,,,,,,
IndySDK should require exact matches of proof and credential attribute names,IS-1004,33972,,Improvement,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,andrey.goncharov,andrey.goncharov,21/Sep/18 5:38 PM,23/Nov/19 1:12 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,EV-CS,,,"*Problem statement*
Consider the following case. Say, we create a schema with an attribute ""AAA"". Then we create a cred def based on this schema. We issue a credential { “AAA”: “value” } using this cred def to a connection. We send a proof request to the connection with an attribute ""aaa"". Due to a previous requirement Libindy normalizes fields in credentials and therefore matches ""aaa"" from the request to ""AAA"" in the credential. Libindy issues a proof { “aaa”: “value” } and considers this proof valid.

*Immediate action*
Libindy no longer does any normalization and requires exact matches. It means that in the example above Libindy wouldn’t be able to match “aaa” from the proof request to “AAA” from the credential. Only a proof request with an attribute “AAA” would satisfy the credential with “AAA”.

*Future plans*
We introduce “negotiation” phase. Say, as a user we have an issued credential with data { “Name”: “Alex” } and somebody requests a proof with data { “name” }. We can not use “Name” and issue a proof right away, instead we a counter-offer, saying that we don’t have “name”, but we could send a proof with “Name”, would it be ok? The other party can either accept this counter-offer and send an updated proof requests or reject it effectively ending this negotiation.
We introduce “loosely-matched” attributes. Now when we send a proof request, we basically say I want a list of attributes with these names
{[ { name: “Name” }, { “name”: “Address” } ]}
, where a name of an attribute is always a string. We could allow regexps as attribute names to allow “loosely-matched” attributes, satisfying a provided regexp.

*Notes*
* Useful comments in an internal doc
https://docs.google.com/document/d/1aySmwd-fJN7aC3jsMIB_IrDE6wri-5lZmqpHC1tPvrE

*TODO*
* We need to evaluate the impact this change has on previous proofs.
** Version the proof request format, and have a different default behavior with the new version?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifrc",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrey.goncharov,esplinr,,,,,,,,,"21/Dec/18 10:11 AM;esplinr;Thank you [~andrey.goncharov] for raising this question. It resulted in a few rounds of interesting conversation. We agree that we should require exact matches in attribute names and proofs.

Reasons for requiring an exact match:
* Case conversion is locale dependent (Spain preserves accents in uppercase, but Mexico does not)
* When in doubt, we should not match

Additional future work should include tooling to do fuzzy matches in the wallet query language, and tools to help developers create useful attribute names (such as strip out white space).;;;",,,,,,,,,,,
Community PR: Bumb sha2 and sha3 versions to 0.7,IS-1005,34006,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ignisvulpis,ignisvulpis,24/Sep/18 4:08 AM,24/Oct/18 7:55 PM,28/Oct/23 2:49 AM,24/Oct/18 7:55 PM,,,,,,,,,,,,,,,0,,,,"bumb sha2 and sha3 versions to 0.7

-digest = ""0.6.2""
+digest = ""0.7""
-generic-array = ""0.8.3""
+generic-array = ""0.9""
-sha2 = ""0.6.0""
-sha3 = ""0.6.0""
+sha2 = ""0.7""
+sha3 = ""0.7""

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvdj:",,,,Unset,Unset,EV 18.21,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,ignisvulpis,,,,,,,,,"24/Oct/18 7:54 PM;gudkov;PR: https://github.com/hyperledger/indy-sdk/pull/1218

Versions bumped, PR merged.;;;",,,,,,,,,,,
Invalid behavior of payment.parse_payment_response func,IS-1006,34015,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,dsurnin,dsurnin,24/Sep/18 4:00 PM,09/Nov/18 7:24 PM,28/Oct/23 2:49 AM,30/Oct/18 7:36 PM,,,,,,,,,,,,,,,0,TShirt_M,,,"In case of response without fees payment.parse_payment_response raises exception CommonInvalidStructure.
It is unclear if response incorrect or fees incorrect of there is no any fees at all.
I would prefer to have None or empty dict return value.
Dedicated exception for no-fees case is ok too.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvdr:",,,,Unset,Unset,EV 18.21,EV 18.22,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,dsurnin,gudkov,KitHat,zhigunenko.dsr,,,,,,"12/Oct/18 5:47 PM;KitHat;This issue was fixed in token sprint

[https://evernym.atlassian.net/browse/TOK-446];;;","12/Oct/18 6:42 PM;gudkov;We need to check libnullpay;;;","25/Oct/18 7:49 PM;gudkov;PR for libnullpay fixes: https://github.com/hyperledger/indy-sdk/pull/1235;;;","30/Oct/18 12:03 AM;Artemkaaas;Build-version: master-816;;;","30/Oct/18 7:36 PM;zhigunenko.dsr;*Environment:*
libindy 1.6.7-818

*Reason to Close:*
There is no way to check it via CLI
Existing test coverage: _parse_response_with_fees_works_for_response_without_fees()_;;;",,,,,,,
UnhandledPromiseRejectionWarning: IndyError: CommonInvalidState,IS-1007,34022,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,pranav_kirtani,pranav_kirtani,24/Sep/18 6:49 PM,05/Oct/18 4:55 PM,28/Oct/23 2:49 AM,05/Oct/18 4:55 PM,,,,,,,,,,cli,deployment,indycrypto,,,0,,,,"* 
Hi
i am getting the following error when i try to run the sample node.js code(node:29110) UnhandledPromiseRejectionWarning: IndyError: CommonInvalidState
followed thr steps given here [https://github.com/hyperledger/indy-sdk/tree/master/samples/nodejs]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvaf:",,,,Unset,Unset,Ev 18.20,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,pranav_kirtani,zhigunenko.dsr,,,,,,,,"01/Oct/18 2:00 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1162;;;","05/Oct/18 12:41 AM;zhigunenko.dsr;*Environment:*
libindy                               1.6.6~769 

*Steps to Validate:*
1) run samples by [instruction|https://github.com/hyperledger/indy-sdk/tree/master/samples/nodejs]

*Actual Results:*
Samples have finished successfully;;;",,,,,,,,,,
VCX:  Dummy Cloud Agent Onboarding API,IS-1008,34028,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,24/Sep/18 10:41 PM,25/Oct/18 7:45 PM,28/Oct/23 2:49 AM,25/Oct/18 7:45 PM,,,,,,,,,,,,,,,0,,,,"Implement Onboarding API for VCX Dummy Cloud Agent

*Acceptance criteria:*
* API implemented and tested
* API can be used with VCX
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-931,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,Unset,No,,,"1|hzwv5b:",,,,Unset,Unset,Ev 18.20,EV 18.21,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,"25/Oct/18 7:45 PM;gudkov;* API implemented
* API covered by integration tests, note that mostly happy path, but it looks enough for ""dummy"" agent.;;;",,,,,,,,,,,
VCX:  Dummy Cloud Agent Configuration API,IS-1009,34029,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,donqui,gudkov,gudkov,24/Sep/18 10:44 PM,12/Sep/19 12:56 AM,28/Oct/23 2:49 AM,09/Nov/18 5:48 PM,,,,,,,,,,,,,,,0,,,,"Implement Configuration API for VCX Dummy Cloud Agent

*Acceptance criteria:*
* API implemented and tested
* API can be used with VCX
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-931,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,Unset,No,,,"1|hzwvbj:",,,,Unset,Unset,EV 18.21,EV 18.22,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,sergey.minaev,,,,,,,,,"09/Nov/18 5:48 PM;sergey.minaev;Created API successfully used while initial integration with VCX;;;",,,,,,,,,,,
VCX:  Dummy Cloud Agent Pairwise API,IS-1010,34030,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,24/Sep/18 10:45 PM,09/Nov/18 5:48 PM,28/Oct/23 2:49 AM,09/Nov/18 5:48 PM,,,,,,,,,,,,,,,0,,,,"Implement Pairwise API for VCX Dummy Cloud Agent

*Acceptance criteria:*
* API implemented and tested
* API can be used with VCX
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-931,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,Unset,No,,,"1|hzwvbb:",,,,Unset,Unset,EV 18.21,EV 18.22,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,sergey.minaev,,,,,,,,,"09/Nov/18 5:48 PM;sergey.minaev;Created API successfully used while initial integration with VCX;;;",,,,,,,,,,,
Assist EV QA,IS-1011,34063,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,esplinr,esplinr,25/Sep/18 7:35 AM,16/Nov/18 7:10 AM,28/Oct/23 2:49 AM,16/Nov/18 7:10 AM,,,,,,,,,,,,,,,0,,,,"The Evernym Indy SDK team will be assisting other Evernym teams with QA tasks.

*Acceptance Criteria*
* Each engineer will spend one day running QA scripts provided by the Evernym QA team.
* Instructions on what to test, and how to report the results will be provided by [~krw910].
* Part of the day should be spent doing structured QA, and part should be spent doing related exploratory testing. 
* Also provide feedback on how to improve the testing instructions and activities.",,,,,,,,,,,,,,,,,,,,,INDY-1714,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvn3:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),0.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Rust Wrapper: Review and merge libindy rust wrapper PR,IS-1013,34104,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,26/Sep/18 8:47 PM,08/Oct/18 8:34 PM,28/Oct/23 2:49 AM,08/Oct/18 8:34 PM,,,,,,,,,,,,,,,0,,,,"*Acceptance criteria*
* PR reviewed 
* PR merged
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwv8n:",,,,Unset,Unset,Ev 18.20,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,,,,,,,,,,,,
Rust Wrapper: Implement CI/CD pipeline branches for libindy rust wrapper,IS-1014,34105,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,26/Sep/18 8:49 PM,08/Oct/18 8:30 PM,28/Oct/23 2:49 AM,08/Oct/18 8:30 PM,,,,,,,,,,,,,,,0,,,,"*Acceptance criteria*
* wrapper tested
* artifacts automatically published to crates.io",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwv8v:",,,,Unset,Unset,Ev 18.20,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,"08/Oct/18 8:30 PM;gudkov;Merged to RC, publishing verified;;;",,,,,,,,,,,
Determine whether Java needs to track unmanaged resources to free them for custom wallets,IS-1015,19523,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,srottem,srottem,27/Jul/17 8:08 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,5Months,,,"In the Java wrapper the callbacks to get values from a custom wallet type copy the strings from the managed JVM environment to unmanaged memory so the underlying SDK can access them and the SDK subsequently calls the free() callback in order to get the type to release the unmanaged resources. I'm concerned since the managed environment doesn't track the allocated resources there is a risk that under some circumstances, if the free() callback is not called (e.g. if the type was disposed by the managed environment before the callback) then some unmanaged resources may never be freed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy13j:",,,,,,,,,,,,,,,,,,,,,,,,danielhardman,gudkov,srottem,,,,,,,,"02/Aug/17 12:31 PM;danielhardman;[~gudkov] Is this an SDK ticket?;;;","02/Aug/17 4:00 PM;gudkov;[~danielhardman] 

> Is this an SDK ticket?

Yes, It describes potential problem in java wrapper for libindy;;;",,,,,,,,,,
Verifiable Credentials for Offline Interactions,IS-1016,32817,,Epic,Complete,IS,Indy SDK,software,resplin,,,High,Deferred,,vinomaster,vinomaster,14/Aug/18 10:07 PM,09/Oct/19 12:28 AM,28/Oct/23 2:49 AM,08/Oct/19 11:12 PM,,,,,,,,,,,,,,,1,,,,"The rate of stakeholder adoption of digital peer-2-peer identity proofing is highly dependent on the flexibility of a solution to support both offline and online verification models between a holder and a verifier. While Indy (currently @ v1.6.1) provides ZKP support for the proofing process between a holder and verifier for online interactions, Indy will not be a complete interoperable solution until is can (a) co-exisit with existing traditional  identity readers (b) support offline interactions.

 

This epic is based on several related dependencies in both Indy and the W3C Verifiable Credentials specification. A detailed problem description along with supporting evidence for the [requirements are outlined in this repo|https://github.com/vinomaster/offline-vcreds].",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1075,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-3,,Offline Interactions,Done,No,,Unset,No,,,"1|hzzmon:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,remmeier,vinomaster,,,,,,,,"28/Sep/18 7:01 AM;esplinr;Thanks for creating this story [~vinomaster]. The work will probably be done in the Indy SDK project.;;;","08/Oct/19 11:12 PM;esplinr;This is partially supported today by the work we did to cache credentials for offline use (IS-1075).

We also plan additional work to support the W3C VC specification, which will be tracked in a separate epic (with many stories in the Aries project).

We have also been working on authentication use cases for interaction with traditional identity readers (DID-Auth, and integration with OpenID Connect).

Additional work is probably necessary for a full solution to these use cases, but the design should start at the Aries tier and only create Indy issues to add the functionality required to support the Aries applications. I will close this epic as ""Deferred"". Someone who plans to do this work can reopen the epic.;;;",,,,,,,,,,
Sovrin-Client: Use consistent terminology for Agent and Wallets per the Sovrin Provisional Trust Framework V2 whitepaper,IS-1017,17816,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,SeanBohan_Sovrin,farooq_m_khan,farooq_m_khan,13/Jun/17 7:29 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,should,,,"Drummond has published a version V2 of the Sovrin Provisional Trust Framework: [http://forum.sovrin.org/t/final-review-v2-of-the-sovrin-provisional-trust-framework/305?u=drummond]

With regard to terminology, it deprecates the terms *“app”* and *“client”* in favor of just talking about *agents*. It contains the following definitions in section 3:

*Agent*. A software program or process used by or acting on behalf of a Sovrin Entity to interact with other Agents or directly with the Sovrin Ledger. Agents are of two types: Local Agents run at the edge of the network on a local device, while Cloud Agents run remotely on a server or cloud hosting service. Agents typically have access to a Wallet in order to perform cryptographic operations on behalf of the Sovrin Entity they represent.

*Local Agent*. An Agent that runs at the edge of the network on a local device, such as a smartphone, tablet, laptop, automotive computer, etc. Mutually exclusive with Cloud Agent. A Local Agent may be an app used directly by an Identity Owner, or it may be an operating system module or background process called by other apps. Local Agents typically do not have a Service Endpoint, but do have access to a Local Wallet.

*Cloud Agent*. An Agent that does not run at the edge of the network on a local device, but remotely on a server or cloud hosting service. Mutually exclusive with Local Agent. A Cloud Agent typically has a Service Endpoint and may have access to a Cloud Wallet. Cloud agents may be hosted by an Agency.

 *Wallet*. A software module, and optionally an associated hardware module, for securely storing and accessing Private Keys, Master Secrets, and other sensitive cryptographic key material or other Private Data used by a Sovrin Entity. A Wallet may be either a Local Wallet or a Cloud Wallet. In Sovrin infrastructure, a Wallet implements the emerging DKMS standards for interoperable cryptographic key management.

*Local Wallet*. A Wallet, typically used by a Local Agent, that operates at the edge of the network on a local device and stores its cryptographic key material in a secure enclave or other secure storage on that device. Mutually exclusive with Cloud Wallet.

*Cloud Wallet*. A Wallet that operates remotely on a server or cloud hosting service and stores its cryptographic key material securely on that server or cloud service. Cloud Wallets will typically use an HSM (Hardware Security Module). Mutually exclusive with Local Wallet.

 

Sovrin-Cli needs to be updated so the terminolgy suggested in above document is the one we use in CLI for naming all our commands corresponding command parameters etc.

 
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx1c7:",,,,,,,,,,,,,,,,,,,,,,,,farooq_m_khan,krw910,,,,,,,,,"13/Jun/17 7:34 PM;farooq_m_khan;[~jamesmonaghan] : Created this story as you suggested.;;;","26/Sep/17 6:05 AM;krw910;[~SeanBohan_Sovrin] Can you take time to review the current trust framework and let us know what terminology we should be using in the code? (The terminology in this ticket is out of date);;;",,,,,,,,,,
Wallet performance is slow on Android,IS-1018,34229,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,01/Oct/18 3:05 PM,10/Oct/18 8:51 PM,28/Oct/23 2:49 AM,10/Oct/18 8:51 PM,,,,,,,,,,,,,,,0,,,,"Please see https://evernym.atlassian.net/browse/CO-1810 for details. 

The time taken to restore a wallet in the Connect.me Android app is of the order of 40 seconds on most devices.

The time taken on the Connect.me iOS app is of the order of 8 seconds.

I would request [~viswa0269] [~ryanmarsh] Khagesh to add more details relating to libindy version numbers, device info etc. I believe some of these details are already available in another ticket opened earlier. [~viswa0269] Can you provide those details?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Oct/18 4:03 PM;viswa0269;ConnectMe-2018-09-25-16-19-43.zip;https://jira.hyperledger.org/secure/attachment/15896/ConnectMe-2018-09-25-16-19-43.zip",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzc9z:",,,,Unset,Unset,Ev 18.20,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),avkrishnan,gudkov,viswa0269,,,,,,,,"01/Oct/18 3:48 PM;viswa0269;[~khagesh.sharma] added a comment - 4 days ago
 I ran some manual tests with logging enabled in Android devices with libvcx version “0.1.2097319+338ad01“ and libindy 1.6.6. Wallet file is 2KB in size. Here are my observations on this for now
{quote}API calls to vcx starts with log message ""09-26 16:44:21.347 6788 6968 I ReactNativeJS: 'CM::LOG:: before decryptWalletFile', 72860636.771673""
""09-26 16:45:04.858 6788 6968 I ReactNativeJS: 'CM::LOG:: after decryptWalletFile', 72904144.520411""
Decrypt wallet call takes around 44 seconds to return success

For getting data out of wallet with ~10 wallet get calls and then with vcx init, it takes ~1min 15 seconds
09-26 16:45:05.582 6788 6968 I ReactNativeJS: 'CM::LOG:: before hydrate', 72904872.317484
09-26 16:46:16.281 6788 6968 I ReactNativeJS: 'CM::LOG:: after hydrate', 72975570.740327
{quote}
As per me, Logs are not showing full output, this was what used to set log environment variable
{{Libcore.os.setenv(""RUST_LOG"", ""TRACE"", true);}}
Also, this was tried as well
{{Os.setenv(""RUST_LOG"", ""TRACE"", true);}}
I tried setting TRACE to small letters as well, and results for logs were the same.

Walletkey: 060ede342ac93c8bab39d0225a57304b334de243f21976c1fd3a21a34699503489b59b508d5673340decdfc009be4ad5355e511b54e814e1bc532a2c64ddf402

Passphrase if need to test with ConnectMe:
{quote}hunchback detached obstinate steep autism hunk coach crispness
{quote}
Attached wallet file “ConnectMe-2018-09-26-16-32-01.zip“, in bug and attached log file (“Logs_for_backup_with_3kb_zip_file_2018-09-26.txt“) in bug as well.

[ConnectMe-2018-09-26-16-32-01.zip^!https://evernym.atlassian.net/images/icons/link_attachment_7.gif|width=7,height=7,align=absmiddle!^|https://evernym.atlassian.net/secure/attachment/16133/16133_ConnectMe-2018-09-26-16-32-01.zip] [Logs_for_backup_with_3kb_zip_file_2018-09-26.txt^!https://evernym.atlassian.net/images/icons/link_attachment_7.gif|width=7,height=7,align=absmiddle!^|https://evernym.atlassian.net/secure/attachment/16134/16134_Logs_for_backup_with_3kb_zip_file_2018-09-26.txt];;;","01/Oct/18 4:06 PM;viswa0269;passphrase for attached file : thickness humility spearhead elective mutt broaden phantom headdress

 

The restore operation took around 57-58 seconds in MI 5 device (Platform : Android (7.1.2) equivalent, RAM : 2GB, CPU : Octa core 1.8 GHZ) and around 30-32 seconds in Oneplus 5T ( Platform : Android 8.1, RAM : 6GB) and 1:15 minute in Nokia 1 ( Platform : Android 8.0, RAM : 1GB) with latest connect.me builds pointing to libindy 1.6.6.;;;","10/Oct/18 8:48 PM;gudkov;```
rmarsh [12 days ago]
@khagesh @sminaev I added a comment to CO-1810. I believe that this should be logged with libindy. The wallet api's are what take the longest time. Libvcx is no more than a wrapper for the wallet api's. My comment  in the ticket has more details.



a.v.krishnan [9 days ago]
@rmarsh Thanks for getting the data.


a.v.krishnan [9 days ago]
@sminaev @vyacheslav.gudkov @Darko Kulić Can you please look into this?


vyacheslav.gudkov [9 days ago]
@a.v.krishnan Could you log a ticket to IS Jira?. And please clearly describe what you mean on “bad performance” and what you consider as “acceptable performance”.


a.v.krishnan [9 days ago]
https://jira.hyperledger.org/browse/IS-1018 has been opened. @viswa Please review and provide additional details which we have.


vyacheslav.gudkov [9 days ago]
What is the size of wallet? Could you attach exported file? And provide exact platform information.


vyacheslav.gudkov [9 days ago]
Also 40 seconds look acceptable for such rarely operation.


a.v.krishnan [9 days ago]
@viswa


khagesh [9 days ago]
@vyacheslav.gudkov Please look at this comment in ticket CO-1810 https://evernym.atlassian.net/browse/CO-1810?focusedCommentId=28877&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-28877


khagesh [9 days ago]
@viswa can you attach information from this comment to IS-1018


vyacheslav.gudkov [9 days ago]
Export uses the most strong key derivation method.


khagesh [9 days ago]
@tyler as per @vyacheslav.gudkov 40 seconds looks fine. Do you agree?


viswa [9 days ago]
The details have been attached to IS-1018.

a.v.krishnan [9 days ago]
The 40 secs is on some devices. On certain devices, the restore operation takes well above that, even with wallets which have minimal data. This would be a bad user experience.


sminaev [9 days ago]
Most probably 40 sec is cost of KDF inside libindy (Argon2i Moderate)
If we prefer performance instead security, app should use Argon2i Interactive (available from 1.6.2 libindy) KDF for import/export key derivation


sminaev [9 days ago]
@a.v.krishnan @khagesh @wightman https://github.com/hyperledger/indy-sdk/blob/rc/doc/migration-guide-1.5.0-1.6.0.md#wallet-api-162
doc/migration-guide-1.5.0-1.6.0.md
```<!-- markdownlint-disable MD033 -->

# Libindy 1.5 to 1.6 migration Guide```
Show more…
hyperledger/indy-sdkAdded by GitHub


tyler [9 days ago]
I don’t think 40 seconds is acceptable.

sminaev [9 days ago]
In this case App should NOT use KDF Argon2i Moderate @khagesh
@rmarsh @wightman is vcx allow to control KDF options for wallet operations? (edited)


wightman [9 days ago]
No.  Libvcx uses the default so we can switch to use the other.


vyacheslav.gudkov [9 days ago]
@sminaev So we can move ticket to validate as the problem is on VCX side. @wightman It can be better to allow application to choise security level as it is defenetly need to be an application choise.



sminaev [9 days ago]
@khagesh @wightman @rmarsh As I can see (may be outdated vision?), ConnectMe also use KDF on application level
It seems redundant to have 2 KDF: one inside libindy and one in app


khagesh [9 days ago]
Yes, connectme uses KDF on application level to define wallet_key. We can use lower security on either app side or wallet side if exposed


rmarsh [9 days ago]
@khagesh libvcx can expose key derivation method for the provisioning step (which creates wallet) and the import api. By default and if no method is specified, libvcx will use ARGON2I_INT.


khagesh [9 days ago]
@rmarsh I was referring to more that if vcx exposes a flag to use KDF in wallet or not

vyacheslav.gudkov [9 days ago]
@khagesh why we need KDF in ConnectMe at all? We need to remve it from my point of view.


khagesh [9 days ago]
because we need to generate a key to encrypt wallet and save that key somewhere secure

vyacheslav.gudkov [9 days ago]
> default and if no method is specified, libvcx will use ARGON2I_INT.


It should be MOD


vyacheslav.gudkov [9 days ago]
> because we need to generate a key to encrypt wallet and save that key somewhere secure


libindy provides it for you


khagesh [9 days ago]
it saves key securely as well? and if we use that API, then would libindy not run KDF function again? Decision to control it has to be done by connectme right? So it does not matter if connectme uses it's own KDF or calls libindy's method to generate key


vyacheslav.gudkov [9 days ago]
For ConnectMe you should always rely on crypto included with libindy. It is under constant review and maintenance.


khagesh [9 days ago]
These are two separate things



vyacheslav.gudkov [9 days ago]
For now you executes expensive KDF twice without any reason for this.


khagesh [9 days ago]
We are talking about multiple things here


khagesh [9 days ago]
Let us take these things one by one


khagesh [9 days ago]
For wallet import:
- ConnectMe takes a passphrase from user (something like ""hello some words"") and then combines it with a salt and generates a hash. Then this hash is passed to `import_wallet` API call. which is taking more than 40 seconds on decent Android hardware


khagesh [9 days ago]
Now which API are you saying that we are doing twice?

Darko Kulić [9 days ago]
I think he means, libindy will than use that hash and combine with salt to derive key. So essentially double salting and hashing). That api is meant to be used directly with passphrase. But if you already generated a good key, than I guess we should skip key deriving procedure inside libindy. (edited)


Darko Kulić [9 days ago]
One note here, `import_wallet` does key derivation twice, one for wallet open key and second for key for decrypting export file. So if you also do deriving for both keys it is 4x deriving. (edited)


vyacheslav.gudkov [9 days ago]
@khagesh libindy API consumes passphrase, combines it with salt and calls. You don't need it on applciation side at all. It is already provided by libindy.


vyacheslav.gudkov [9 days ago]
As result you call KDF in Connect me, provide result to libindy and libindy calls KDF once more. The same is done for opening wallet that crashes performance.


khagesh [9 days ago]
ok, then connectme can stop hashing. However, the time for running KDF that is defined in bug is after subtracting the time it takes in ConnectMe. It is only import_wallet API call that takes more than 40 seconds. Even if ConnectMe stops doing what we are doing, it will still take same time


vyacheslav.gudkov [9 days ago]
You can reduce KDF level. It is supported by libindy already.


khagesh [9 days ago]
What is the level of KDF recommended. @rmarsh Are you thinking of exposing same API that @vyacheslav.gudkov is talking about


rmarsh [9 days ago]
@vyacheslav.gudkov That is what libvcx is going to change. we were not providing access to change level. We will now add ability to change (will be optional). By default, libvcx will use the faster level.


vyacheslav.gudkov [9 days ago]
> By default, libvcx will use the faster level.


It have to use libindy defaults


rmarsh [9 days ago]
@khagesh we will provide the ability to specify KDF level. Libvcx already uses the libindy default which is ARGON2I_MOD. The faster but less secure method is ARGON2I_INT or RAW. (edited)


khagesh [9 days ago]
ok, any recommendation on what to use?


vyacheslav.gudkov [9 days ago]
ARGON2I_INT


vyacheslav.gudkov [9 days ago]
for your use case only


khagesh [9 days ago]
ok
```;;;","10/Oct/18 8:51 PM;gudkov;Result of investigation:

- ConnectMe uses it's own KDF function
- VCX forces usage of ARGON2_MOD settings for KDF on libindy side

As result there are no problems on libindy side. We suggest the following:

- Expose KDF mode selection in VCX
- Use ARGON2_INT mode for android devices in ConnectME
- Avoid custom KDF in ConnectME in favor libindy-based solution
;;;",,,,,,,,
Community PR: Remove all third numbers from versions,IS-1019,34246,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,ignisvulpis,ignisvulpis,02/Oct/18 1:36 AM,17/Oct/18 6:50 PM,28/Oct/23 2:49 AM,17/Oct/18 6:50 PM,,,,,,,,,,,,,,,0,devops,,,"I suggest to remove all z from version x.y.z in dependencies.
I think we can trust crate developers to not break the api contract when changing the version.

So e.g. `openssl = { version = ""=0.10.12"", optional = true }` should be replaced by `openssl = { version = ""=0.10"", optional = true }`  

So we can benefit from bug fixes and other improvements.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvcn:",,,,Unset,Unset,EV 18.21,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,gudkov,ignisvulpis,,,,,,,,"09/Oct/18 10:33 PM;esplinr;Thank you for the suggestion [~ignisvulpis]. We are currently in the process of auditing all of our dependencies to draw the right balance between confidence in the stability of the code base, and flexibility to accept security updates. We'll include this in that work.;;;","12/Oct/18 6:31 PM;gudkov;[~ignisvulpis] [~esplinr] 

When we write 0.10.12 it means that major.minor version should be fixed and patch version can be increased with cargo update. 

We use lock file that locks exact versions, but consider cargo update to be regular procedure to get all available patches.

Allowing minor versions to be updated looks much more dangerous procedure and requires analysis of each crate. A lot of crates don't have strong release process. can avoid some SemVer rules and introduce security issues.

In my vision such updates are better to perform manually. We discussed this inside of core team and suggest to keep current process with fixing minor version.
;;;","17/Oct/18 6:50 PM;gudkov;@AxelNennker I am closing this PR. If you still need further discussion we can re-open it. Also if you want to updated some crates to achieve specific goal and analysed the changes we can accept these PRs.;;;",,,,,,,,,
Reduce common build times,IS-1020,34280,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,03/Oct/18 4:06 AM,25/Oct/18 7:46 PM,28/Oct/23 2:49 AM,25/Oct/18 7:46 PM,,,,,,,,,,,,,,,0,devops,,,"As we bring new artifacts into Indy SDK, the build times are increasing. We should limit the platforms we continously build to keep developer cycles productive.

*Acceptance Criteria*
 * Create a plan for what platforms and tests can be removed from the regular builds.
 * Determine a schedule for when all platforms and tests will be executed.
 * Get approval from architects and QA.
 * Implement the changes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvb3:",,,,Unset,Unset,EV 18.21,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,gudkov,sergey.minaev,,,,,,,,"19/Oct/18 10:59 PM;sergey.minaev;After some enhancement the most problematic part now is Android compilation

On EC2 m5.large instances ~35 min for build libindy and tests + 10 min unit tests + 15 min base interaction test for anoncreds with revocation and ledger
On EC2 t2.xlarge with available credits compilation is x3 times faster (about 10 minutes);;;","19/Oct/18 11:53 PM;sergey.minaev;https://github.com/hyperledger/indy-sdk/pull/1233
https://github.com/hyperledger/indy-sdk/pull/1230
https://github.com/hyperledger/indy-sdk/pull/1229
https://github.com/hyperledger/indy-sdk/pull/1228;;;","19/Oct/18 11:55 PM;sergey.minaev;Debug build on android may be much faster, but interaction test without HW emulation on my local machine took about 2h and don't finished at Jenkins agent while 18h;;;","25/Oct/18 7:46 PM;gudkov;CI is significantly reduced (1h overage) and requires less jenkins nodes that allows to run 2 jobs in parallel.;;;",,,,,,,,
Ensure we are using most efficient crypto implementations,IS-1021,34282,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,03/Oct/18 4:20 AM,30/Mar/19 1:10 PM,28/Oct/23 2:49 AM,,,,,,,,,,,indycrypto,,,,,0,help-wanted,,,"In some cases we are using Rust crypto primitives instead of the faster versions in OpenSSL or LibSodium.

*Acceptance Criteria*
 * Audit usages of Rust cryptographic functions.
 * Evaluate if an openssl or libsodium would be faster.
 * Replace the call with the fastest function.
 * Ensure all tests pass.

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1002,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvuv:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
CLI command 'did rotate-key' doesn't work in some cases,IS-1022,34318,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,zhigunenko.dsr,zhigunenko.dsr,03/Oct/18 11:11 PM,11/Oct/18 9:01 PM,28/Oct/23 2:49 AM,11/Oct/18 9:01 PM,,,,,,,,,,,,,,,0,,,,"*Environment:*
indy-node 1.6.619
indy-plenum 1.6.553
indy-cli 1.6.6~759

*Steps to Reproduce:*
1. Create Docker pool with 4 nodes
2. Connect to pool and rotate default Trustee key many times
3. run [traffic_shaper.sh|https://docs.google.com/document/d/1swLE5FwYY0tQXWpcge7KNQ5oosiz4P57Iz9843e7uHY/edit#] with default latencies
4. try to rotate key few times
5. try to send NYM

*Expected results:*
CLI guarantees consistency between keys in ledger and in local storage

*Actual Results:*
On step 2 keys successfully changed in ledger
On step 4 keys successfully changed in CLI, but ledger response falls in timeout
On step 5 error appears: _Transaction has been rejected: client request invalid: InsufficientCorrectSignatures(0, 1)_",,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1707,,,,,,,"03/Oct/18 11:06 PM;zhigunenko.dsr;Node1.log;https://jira.hyperledger.org/secure/attachment/16005/Node1.log","03/Oct/18 11:06 PM;zhigunenko.dsr;Node2.log;https://jira.hyperledger.org/secure/attachment/16004/Node2.log","03/Oct/18 11:06 PM;zhigunenko.dsr;Node3.log;https://jira.hyperledger.org/secure/attachment/16003/Node3.log","03/Oct/18 11:06 PM;zhigunenko.dsr;Node4.log;https://jira.hyperledger.org/secure/attachment/16002/Node4.log","03/Oct/18 11:06 PM;zhigunenko.dsr;indy_cli.log;https://jira.hyperledger.org/secure/attachment/16006/indy_cli.log",,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvw7:",,,,Unset,Unset,Ev 18.20,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,"04/Oct/18 4:36 PM;Artemkaaas;Fixed in the scope of IS-1001;;;","04/Oct/18 10:19 PM;Artemkaaas;Build version: master-769;;;","05/Oct/18 5:44 PM;zhigunenko.dsr;*Environment:*
indy-cli                   1.6.6~769
indy-node                  1.6.623

*Steps to Reproduce:*
1. Create Docker pool with 4 nodes
2. Connect to pool and rotate default Trustee key many times
3. run traffic_shaper.sh with default latencies
4. try to rotate key few times
5. try to send NYM

*Expected results:*
CLI guarantees consistency between keys in ledger and in local storage

*Actual results:*
Pool successfully ordered rotate-key txn when 2 from 4 nodes have network delays, but CLI resolves ""timeout"" and isn't applies change

*Additional Tests to Validate:*
1) run ""rotate"" without fees
2) set fees
3) run ""rotate"" without fees (wrong payment source)
4) run ""rotate"" without fees (insufficient funds)
5) run ""rotate"" without fees (too much funds)
6) run ""rotate"" with fees (correct case);;;","11/Oct/18 9:01 PM;gudkov;To solve this we need to implement ""resume"" mode for rotate-key command. Corresponded ticket is here: https://jira.hyperledger.org/browse/IS-1036

We can close this bug in favor of story https://jira.hyperledger.org/browse/IS-1036;;;",,,,,,,,
Indy CLI needs to support hexadecimal seeds,IS-1023,34406,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,VladimirWork,esplinr,esplinr,04/Oct/18 4:24 AM,11/Oct/18 6:25 PM,28/Oct/23 2:49 AM,09/Oct/18 7:03 PM,,,,,,,,1.6.7,,cli,,,,,0,,,,"*Story*

As a trustee of an Indy network, I need to be able to use my hexadecimal seed created with the legacy python CLI on the new CLI to import my existing keys into a new wallet. My hexadecimal seed contains unprintable characters, and so cannot be represented as ASCII.

*Acceptance Criteria*
 * Use the legacy CLI to create a seed containing non-printable characters encoded as 64 bytes of hexadecimal.
 * The new CLI should accept the seed through the command line (not a configuration file)

*Notes*
* Why don't they just upgrade their wallet? Some trustees did not create a wallet. They created and stored their seed without creating a wallet. So they need to provide a seed to perform actions such as changing IP addresses or adding new trustees or stewards.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwv9z:",,,,Unset,Unset,Ev 18.20,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,jackson18,krw910,mgbailey,sergey.minaev,tharmon,VladimirWork,,,"04/Oct/18 4:45 AM;sergey.minaev;AFAIR IndyCLI doesn't support hex seed as parameter for creation of DID, so this bug is actual.
But there is migration process https://github.com/hyperledger/indy-sdk/blob/master/cli/README.md#old-python-based-cli-migration and it shold work well now. [~krw910] have you tried this option?;;;","04/Oct/18 4:51 AM;esplinr;This is for the use case where no wallet exists to migrate. I updated the story. It's good to know about the workaround of using the old CLI and upgrading the wallet if adding this feature proves more difficult than expected.;;;","04/Oct/18 4:35 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1179;;;","04/Oct/18 9:39 PM;sergey.minaev;[~krw910] [~tharmon]
There is simple workaround in current IndyCLI:
IndyCLI accepts base64 seeds, so hex seed can be converted to base64 anywhere and base64 seed can be used in current/previous versions of IndyCLI

[~esplinr][~gudkov] FYI;;;","08/Oct/18 10:03 PM;sergey.minaev;Available in build 1.6.7 RC 35;;;","09/Oct/18 7:03 PM;VladimirWork;Build Info:
libindy / indy-cli 1.6.7~39

Steps to Validate:
1. Generate Signing Key + Seed and DID + Verification Key using old CLI or sovrin-keygen tool.
2. Create new DID via new CLI using Seed from previous step to get DID and abbreviated verkey.
3. Check that DIDs from Step 1 and Step 2 are the same.
4. Decode DID from new CLI to hex.
5. Decode abbreviated verkey without `~` from new CLI to hex.
6. Concatenate Step 4 hex with Step 5 hex and encode it back to base58.
7. Check that Verification Key from Step 1 and Step 6 result are the same.

Actual Results:
We get the same DIDs/verkeys from new CLI using the same seeds from old CLI.;;;",,,,,,
Prepare the 1.6.7 release of IndySDK,IS-1024,34407,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,04/Oct/18 4:29 AM,11/Oct/18 6:25 PM,28/Oct/23 2:49 AM,10/Oct/18 6:11 PM,,,,,,,,1.6.7,,,,,,,0,,,,"*Task Overview*
 Perform all necessary tasks to have a release of LibIndy.

This is a minimal release to deliver the fix for IS-1023, but may contain other low-risk changes that are already complete, ready for delivery, and easy to test.

Current list of included changes:
* https://github.com/hyperledger/indy-sdk/blob/8c36447e2165e6be4b6d20dbe9621ecf147e07b9/CHANGELOG.md
* The Rust Wrapper should be marked as experimental in the release notes.

*Acceptance Criteria*
 * Code is tested
* Issues in JIRA are assigned to the correct fix version
 * Release is tagged
 * Release notes are drafted
 * Release notes are reviewed by Docs and Product Management
 * A new release of Indy-Crypto is part of this release

*Notes*",,,,,,,,,,,,,,,,,,,,,IS-1025,,IS-795,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,"1|hzwva7:",,,,,,Ev 18.20,,,,,,5.0,,,,,,,,,,,,Artemkaaas,esplinr,gudkov,zhigunenko.dsr,,,,,,,"08/Oct/18 2:39 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1182;;;",,,,,,,,,,,
Release Indy SDK 1.7.0,IS-1025,34408,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,esplinr,esplinr,04/Oct/18 4:31 AM,18/Jan/19 10:42 PM,28/Oct/23 2:49 AM,27/Dec/18 11:11 PM,,,,,,,,1.7.0,,,,,,,0,,,,"*Task Overview*
 Perform all necessary tasks to have a release of LibIndy.

*Acceptance Criteria*
 * Code is tested
 * Release is tagged
 * Release notes are drafted
* Issues in JIRA are assigned to the correct fix version
 * Release notes are reviewed by Docs and Product Management
 * A new release of Indy-Crypto is part of this release

*Notes*",,,,,,,,,,,,IS-1093,,,,,,,,,IS-1150,,IS-1024,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,"1|hzwrh3:",,,,,,EV 18.24,EV 18.25,Ev 19.01,,,,13.0,,,,,,,,,,,,esplinr,gudkov,ozheregelya,zhigunenko.dsr,,,,,,,"27/Dec/18 11:11 PM;ozheregelya;Versions info:
 libindy, indy-cli, libindy wrappers: 1.7.0
 libvcx, libvcx wrappers: 0.2.0
 libindy-crypto, python3-indy-crypto: 0.5.0
 * Code is tested 
=> see acceptance test results [here|https://docs.google.com/spreadsheets/d/1UfK5JC2ro_vMMUig6vVJcBdDYtEeswHewCzb4Ww40qM/edit#gid=1527965778]
 * Release is tagged 
=> https://github.com/hyperledger/indy-sdk/tree/v1.7.0
 * Release notes are drafted 
=> https://github.com/hyperledger/indy-sdk/releases/tag/v1.7.0
 * Issues in JIRA are assigned to the correct fix version 
=> all issues with fix version 1.7.0 are done
 * Release notes are reviewed by Docs and Product Management
 * A new release of Indy-Crypto is part of this release 
=> 0.5.0 versions of libindy-crypto and python3-indy-crypto are released;;;",,,,,,,,,,,
Community PR: fix store_tails_from_generator hash computation,IS-1026,34418,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,ignisvulpis,ignisvulpis,04/Oct/18 2:39 PM,11/Oct/18 9:22 PM,28/Oct/23 2:49 AM,11/Oct/18 9:15 PM,,,,,,,,,,,,,,,0,,,,"[tails.rs|http://tails.rs/] has a sha256 hasher but finalize is never called and removing the hasher has no effect on `{{RUST_TEST_THREADS=1 cargo test lib}}`.
 
A hasher is created here:
[https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/commands/anoncreds/tails.rs#L82]
and for this hasher finalize is never called.

The code calls service.finalize but that calls finalize of a different hasher.
 
This bug is not caught by any test.
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvxb:",,,,Unset,Unset,Ev 18.20,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,ignisvulpis,,,,,,,,,"11/Oct/18 9:15 PM;gudkov;PR reviewed and merged;;;",,,,,,,,,,,
Ledger submit_action hangs indefinitely,IS-1027,34448,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,Artemkaaas,Artemkaaas,05/Oct/18 5:48 PM,10/Oct/18 6:11 PM,28/Oct/23 2:49 AM,10/Oct/18 6:11 PM,,,,,,,,,,,,,,,0,,,,Here is the test that reproduces this bug https://github.com/hyperledger/indy-sdk/blob/1.6.x/wrappers/rust/tests/ledger.rs#L322,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvwf:",,,,Unset,Unset,Ev 18.20,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,sergey.minaev,,,,,,,,"05/Oct/18 7:05 PM;sergey.minaev;Fixed in PR https://github.com/hyperledger/indy-sdk/pull/1190;;;","10/Oct/18 6:11 PM;gudkov;I see passed test.;;;",,,,,,,,,,
Transfer Wallet tests from PR 924,IS-1028,34474,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,08/Oct/18 4:54 PM,24/Oct/18 7:50 PM,28/Oct/23 2:49 AM,24/Oct/18 7:50 PM,,,,,,,,,,,,,,,0,,,,"PR 924 (https://github.com/hyperledger/indy-sdk/pull/924) contains several valuable unit tests related to Wallet Storage.
Because wallet code base in PR is significantly outdated, it takes some time to move tests on the new code base.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvc7:",,,,Unset,Unset,EV 18.21,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"24/Oct/18 7:00 PM;sergey.minaev;https://github.com/hyperledger/indy-sdk/pull/1213;;;",,,,,,,,,,,
Rust Wrapper: Futures based interface,IS-1029,34479,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,08/Oct/18 9:48 PM,21/May/20 12:58 AM,28/Oct/23 2:49 AM,09/Nov/18 9:37 PM,,,,,,,,,,,,,,,0,,,,"Rust wrapper now provides 3 interfaces:

- Sync (default)
- Sync + timeout
- FnMut based async

We need to replace them with one Future based interface to avoid moving of community developers in a wrong way.
",,,,,,,,,,,,,,,,,,,IS-1037,IS-1030,,,,,,IS-1479,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwven:",,,,Unset,Unset,EV 18.22,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,sergey.minaev,,,,,,,,,"09/Nov/18 9:36 PM;sergey.minaev;new version of rust wrapper is available in https://github.com/hyperledger/indy-sdk/tree/feature/future_based_rust_wrapper;;;",,,,,,,,,,,
Rust Wrapper: Use Rust wrapper in libindy tests,IS-1030,34480,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,08/Oct/18 9:53 PM,26/Nov/18 5:46 PM,28/Oct/23 2:49 AM,26/Nov/18 5:46 PM,,,,,,,,1.7.0,,,,,,,0,,,,"Libindy tests now use it's own rust wrapper implementation. I suggest:

- Switch to Rust wrapper
- Use the same test procedure for libindy and for Rust wrapper
",,,,,,,,,,,,IS-1029,,,,,,,,,,,,,,,,,,IS-1052,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvdz:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,MattRaffel,sergey.minaev,,,,,,,"19/Nov/18 10:29 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1292;;;","20/Nov/18 12:44 AM;MattRaffel;this creates a potential circular dependency that will make it difficult to do.   either you have broken tests until the wrapper can be updated or you have to do the work twice to keep tests working.;;;","20/Nov/18 9:51 PM;gudkov;[~MattRaffel] It isn't rust wrapper is only test dependency and tests are depend on both libindy and rust wrapper. ;;;","26/Nov/18 5:46 PM;sergey.minaev;Available in master since https://github.com/hyperledger/indy-sdk/pull/1313 has been merged;;;",,,,,,,,
Rust Wrapper: Use Rust wrapper in libnullpay,IS-1031,34485,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,gudkov,gudkov,09/Oct/18 12:38 AM,26/Nov/18 5:47 PM,28/Oct/23 2:49 AM,26/Nov/18 5:47 PM,,,,,,,,,,,,,,,0,,,,Libnullpay and libnullpay tests now use it's own rust wrapper implementation. We need switch to common rust wrapper.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1052,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzy8f:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,KitHat,sergey.minaev,,,,,,,,"13/Nov/18 11:47 PM;KitHat;After discussion with [~gudkov] and [~sergey.minaev] we decided to remove functions `register_payment_method` and `register_transaction_parser_for_sp` because they should be used only by plugins that should consume libindy through external symbols instead of rust wrapper.
Here is the PR:
https://github.com/hyperledger/indy-sdk/pull/1285;;;","26/Nov/18 5:46 PM;sergey.minaev;Available in master since https://github.com/hyperledger/indy-sdk/pull/1313 has been merged;;;",,,,,,,,,,
Rust Wrapper: Use Rust wrapper in Indy CLI,IS-1032,34486,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,gudkov,gudkov,09/Oct/18 12:40 AM,26/Nov/18 5:46 PM,28/Oct/23 2:49 AM,26/Nov/18 5:46 PM,,,,,,,,1.7.0,,,,,,,0,,,,Indy CLI and CLI tests now use it's own rust wrapper implementation. We need switch to common rust wrapper.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1052,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvif:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,KitHat,sergey.minaev,,,,,,,,"15/Nov/18 9:42 PM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/1291;;;","26/Nov/18 5:46 PM;sergey.minaev;Available in master since https://github.com/hyperledger/indy-sdk/pull/1313 has been merged;;;",,,,,,,,,,
Community PR: Android build script fails when host system contains libzmq.a,IS-1033,34503,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,osesov,osesov,09/Oct/18 11:02 PM,18/Oct/18 12:28 AM,28/Oct/23 2:49 AM,18/Oct/18 12:28 AM,,,,,,,,,,libindy,,,,,0,,,,"There are two issues with android build script ({{android.build.sh}})
 1) build fails when host system contains {{/lib/libzmq.a}} with clang message {{""incompatible target""}}:
{noformat}
Output will be available at /tmp/android_build/libindy_armv7/lib/libindy.so
+ /tmp/android_build/toolchains/linux/arm/bin/arm-linux-androideabi-clang -v -shared -o/tmp/android_build/libindy_armv7/lib/libindy.so -Wl,--whole-archive /home/osesov/blockchain/projects/indy/indy-sdk/libindy/target/armv7-linux-androideabi/release/libindy.a /tmp/android_build/toolchains/linux/arm/sysroot/usr/lib/libz.so /tmp/android_build/toolchains/linux/arm/sysroot/usr/lib/libm.a /tmp/android_build/toolchains/linux/arm/sysroot/usr/lib/liblog.so /home/osesov/blockchain/projects/indy/indy-sdk/libindy/openssl_armv7/lib/libssl.a /home/osesov/blockchain/projects/indy/indy-sdk/libindy/openssl_armv7/lib/libcrypto.a /home/osesov/blockchain/projects/indy/indy-sdk/libindy/libsodium_armv7/lib/libsodium.a /home/osesov/blockchain/projects/indy/indy-sdk/libindy/libzmq_armv7/lib/libzmq.a /tmp/android_build/toolchains/linux/arm/arm-linux-androideabi/lib/libgnustl_shared.so -Wl,--no-whole-archive -z muldefs
Android clang version 5.0.300080  (based on LLVM 5.0.300080)
Target: armv7a-none-linux-android
Thread model: posix
InstalledDir: /tmp/android_build/toolchains/linux/arm/bin
Found candidate GCC installation: /tmp/android_build/toolchains/linux/arm/bin/../lib/gcc/arm-linux-androideabi/4.9.x
Selected GCC installation: /tmp/android_build/toolchains/linux/arm/bin/../lib/gcc/arm-linux-androideabi/4.9.x
Candidate multilib: thumb;@thumb
Candidate multilib: armv7-a;@armv7
Candidate multilib: armv7-a/thumb;@armv7@thumb
Candidate multilib: .;
Selected multilib: armv7-a;@armv7
 ""/tmp/android_build/toolchains/linux/arm/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld"" --sysroot=/tmp/android_build/toolchains/linux/arm/bin/../sysroot -X --eh-frame-hdr -m armelf_linux_eabi -shared -o /tmp/android_build/libindy_armv7/lib/libindy.so /tmp/android_build/toolchains/linux/arm/bin/../sysroot/usr/lib/../lib/crtbegin_so.o -L/tmp/android_build/toolchains/linux/arm/lib64/clang/5.0.300080/lib/linux/arm -L/tmp/android_build/toolchains/linux/arm/bin/../lib/gcc/arm-linux-androideabi/4.9.x/armv7-a -L/tmp/android_build/toolchains/linux/arm/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/lib/../lib/armv7-a -L/tmp/android_build/toolchains/linux/arm/bin/../sysroot/usr/lib/../lib -L/tmp/android_build/toolchains/linux/arm/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/lib/armv7-a -L/tmp/android_build/toolchains/linux/arm/bin/../sysroot/usr/lib --whole-archive /home/osesov/blockchain/projects/indy/indy-sdk/libindy/target/armv7-linux-androideabi/release/libindy.a /tmp/android_build/toolchains/linux/arm/sysroot/usr/lib/libz.so /tmp/android_build/toolchains/linux/arm/sysroot/usr/lib/libm.a /tmp/android_build/toolchains/linux/arm/sysroot/usr/lib/liblog.so /home/osesov/blockchain/projects/indy/indy-sdk/libindy/openssl_armv7/lib/libssl.a /home/osesov/blockchain/projects/indy/indy-sdk/libindy/openssl_armv7/lib/libcrypto.a /home/osesov/blockchain/projects/indy/indy-sdk/libindy/libsodium_armv7/lib/libsodium.a /home/osesov/blockchain/projects/indy/indy-sdk/libindy/libzmq_armv7/lib/libzmq.a /tmp/android_build/toolchains/linux/arm/arm-linux-androideabi/lib/libgnustl_shared.so --no-whole-archive -z muldefs -lgcc -ldl -lc -lgcc -ldl /tmp/android_build/toolchains/linux/arm/bin/../sysroot/usr/lib/../lib/crtend_so.o
/tmp/android_build/toolchains/linux/arm/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: /home/osesov/blockchain/projects/indy/indy-sdk/libindy/target/armv7-linux-androideabi/release/libindy.a(src_libzmq_la-address.o): incompatible target
/tmp/android_build/toolchains/linux/arm/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: /home/osesov/blockchain/projects/indy/indy-sdk/libindy/target/armv7-linux-androideabi/release/libindy.a(src_libzmq_la-client.o): incompatible target
...
{noformat}
{{That happens due to error in {{libindy/build.rs}}, which joins OPENSSL_DIR environment variable with absolute ""{{/lib""}} path, resulting in ""{{/lib"", instead of expected""${OPENSSL_DIR}/lib""}}}}

2) when no openssl, sodium, or zmq libs are downloaded (run without -d flag), default behavior is to check for arch specific libs in the current folder (like openssl_${ABSOLUTE_ARCH}) and use relative path, however later build fails to find these (I guess, due to run with another work dir).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvcf:",,,,Unset,Unset,EV 18.21,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),osesov,sergey.minaev,,,,,,,,,"15/Oct/18 7:54 PM;sergey.minaev;Fixed in https://github.com/hyperledger/indy-sdk/pull/1206 by [~osesov];;;",,,,,,,,,,,
Indy-crypto python wrapper should have fixed dependency to indy-crypto,IS-1034,34562,,Task,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,sergey.minaev,VladimirWork,VladimirWork,10/Oct/18 5:31 PM,11/Oct/18 6:25 PM,28/Oct/23 2:49 AM,10/Oct/18 8:52 PM,,,,,,,,,,,,,,,0,,,,Indy-crypto python wrapper should have fixed dependency to indy-crypto.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwv9b:",,,,Unset,Unset,Ev 18.20,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,VladimirWork,,,,,,,,,"10/Oct/18 7:40 PM;sergey.minaev;Fixed in https://github.com/hyperledger/indy-crypto/pull/129;;;",,,,,,,,,,,
SDK support for Xcode 10,IS-1035,34598,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Low,Done,Artemkaaas,srunpengsreang,srunpengsreang,11/Oct/18 6:39 PM,22/May/19 7:33 PM,28/Oct/23 2:49 AM,20/Dec/18 8:30 PM,,,,,,,,1.7.0,,cli,libindy,,,,0,help-wanted,,,"*Acceptance Criteria*
* Review the PR in IS-1096 and IS-1058
* Integrate the testing procedure into the official CI / CD

*Notes*
* If problems are found with the PR, push back to the submitter for the fix and remove from the sprint.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1058,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-68,,,No,,Unset,No,,,"1|i00246:c",,,,Unset,Unset,EV 18.25,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,srunpengsreang,,,,,,,,"12/Oct/18 11:14 PM;esplinr;[~srunpengsreang] In order for us to assist with an issue, you need to provide more details about what should be done. To prioritize the issue, we need to understand how the task will provide new value.

My team is not setup to assist with XCode, but if you provide additional details someone else might be able to help.;;;","16/Oct/18 4:08 PM;srunpengsreang;Okay thank you [~esplinr] for your replying. What should be done is that I want Indy-SDK supported Xcode 10 because all version of Indy-SDK supported on old version of Xcode. And this helps me and other developer who is update to date of Xcode to implement the Indy-SDK.;;;","20/Dec/18 8:30 PM;Artemkaaas;ios tests passed after [PR|https://github.com/hyperledger/indy-sdk/pull/1348] has been merged.
execution command is:

{code:java}
xcodebuild test -workspace Indy.xcworkspace -scheme Indy-demo -destination 'platform=iOS Simulator,name=iPhone X,OS=12.0
{code}
;;;",,,,,,,,,
CLI: did rotate-key command should support resume mode,IS-1036,34600,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,11/Oct/18 8:46 PM,22/May/19 7:32 PM,28/Oct/23 2:49 AM,09/Nov/18 5:47 PM,,,,,,,,1.7.0,,,,,,,0,,,,"did rotate-key is complex operation that includes multiple steps:

1. Creation of transition key
2. Posting transition key to ledger
3. Applying transition key to DID

If step 2 finishes with timeout we are in a vague state as txn can be ordered or rejected by pool and don't know should we apply step 3 or not. To solve this we recommends the following:

1. Interrupt command after step 2
2. Show to the user proposal to execute the same command with ""resume"" flag
3. If ""resume"" flag is set read transition key from the wallet
4. Send GET_NYM to the ledger. Check NYM verkey with transition key.
5. If keys are the same just apply new key to DID
6. If keys are different try to post NYM with new key to ledger and in case of success apply new key to DID

Note that keys can be different because of freshness, but it is acceptable as in this case transaction will be just rejected by ledger and user can retry once more.

*Acceptance criteria*
* indy_get_did_with_meta updated to allow access to transition verkey
* New resume flag added to did rotate-key command
* Tests written and passed

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Oct/18 10:22 PM;zhigunenko.dsr;1036.tar.gz;https://jira.hyperledger.org/secure/attachment/16186/1036.tar.gz","06/Nov/18 9:18 PM;zhigunenko.dsr;after_reestablish.txt;https://jira.hyperledger.org/secure/attachment/16225/after_reestablish.txt","06/Nov/18 9:18 PM;zhigunenko.dsr;check_keys.txt;https://jira.hyperledger.org/secure/attachment/16224/check_keys.txt","06/Nov/18 9:18 PM;zhigunenko.dsr;during_disconnect.txt;https://jira.hyperledger.org/secure/attachment/16226/during_disconnect.txt","30/Oct/18 10:23 PM;zhigunenko.dsr;resume_true_failed.txt;https://jira.hyperledger.org/secure/attachment/16187/resume_true_failed.txt",,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvbz:",,,,Unset,Unset,EV 18.21,EV 18.22,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,gudkov,sergey.minaev,zhigunenko.dsr,,,,,,,"24/Oct/18 10:55 PM;dkulic;https://github.com/hyperledger/indy-sdk/pull/1243;;;","29/Oct/18 11:56 PM;dkulic;Built in 1.6.7 master 816;;;","30/Oct/18 12:12 AM;dkulic;Test cases:
 # rotate-key resume=true, without rotation being started before. This should return error.
 # rotate-key ledger write timeut:
 ## Transaction written to ledger, resume should succeed.
 ## Transaction not written to ledger, resume should succeed

Timeout may be simulated this way:

After you connect to the pool, setup the rules to drop packets (inbound for case 2.1, outbound for case 2.2).

Do `rotate-key` command. It should fail with timeout.

Remove the firewall rules.

Try `rotate-key resume=true`. It should succeed now.;;;","30/Oct/18 8:01 PM;zhigunenko.dsr;*Environment:*
libindy 1.6.7~818
Docker: 4 separate instances as nodes and 1 as client

*Steps to Validate:*
1) rotate-key resume=true for not yet started process. Error is expected.
2) rotate-key to ledger when pool orders rotation but client response has timeout. resume = true restores keys consistency
3) rotate-key to ledger when pool doesn't order rotation, client response has timeout. resume = true restores keys consistency

*Actual Results:*
1) If second step failed, CLI show message like this:
{code}
Use command `did rotate-key resume=7zdMZjLQgJQGJzXExHNRjsfss8MKJ2DBXfbu3V7fD6P1` to complete
{code}
but valid syntax is
{code:java}
did rotate-key resume=true
{code}

2) If pool has ordered transaction right after client has received timeout
{code:java}
pool(p1):wallet(w1):did(LnX...hJQ):indy> did rotate-key
Transaction response has not beed received
Use command `did rotate-key resume=D2c6DWYahqqsdHSxqpbwWhRaSWzaLjRB7nnE53sUHrkH` to complete
pool(p1):wallet(w1):did(LnX...hJQ):indy> did rotate-key resume=true
Unable to resume, verkey on ledger is completely different from verkey in wallet
{code}

See _resume_true_failed.txt_ for CLI logs

3) Same problem as clause 2

*Additional Info:*
* How network was being degraded (case 2): [traffic_shaping.sh|https://docs.google.com/document/d/1swLE5FwYY0tQXWpcge7KNQ5oosiz4P57Iz9843e7uHY/edit#] was started on node3 and node4 before ""rotate-key"" sending and stopped after ""client timeout""
* Client connection (case 3) was broken via ""docker network disconnect pool-network indyclient""
* CLI and nodes logs are attached
* Used DIDs
** PNQm3CwyXbN5e39Rw3dXYx 
** LnXR1rPnncTPZvRdmJKhJQ 
** KMSWjAnqdwgLRc5yZBygcA
;;;","02/Nov/18 10:46 PM;dkulic;New PR: https://github.com/hyperledger/indy-sdk/pull/1264;;;","06/Nov/18 6:12 PM;sergey.minaev;New master build is 1.6.7 821;;;","06/Nov/18 9:21 PM;zhigunenko.dsr;*Environment:*
 libindy 1.6.7~821

*Step to Validate:*
 1) rotate-key resume=true for not yet started process. Error is expected.
 2) rotate-key to ledger when pool orders rotation but client response has timeout. resume = true restores keys consistency
 3) rotate-key to ledger when pool doesn't order rotation, client response has timeout. resume = true restores keys consistency
 4) rotate-key resume=true is omitted but necessary

*Actual Results:*
 *Case #1* - OK

*Case #2* - skipped this time

*Case #3*
 First, I've disconnect container and tried to rotate key. _CLI logs:_ [^during_disconnect.txt]

After connection reestablishing I got this:
{code:java}
pool(p1):wallet(w1):did(KMS...gcA):indy> did rotate-key resume=true
Verkey on ledger: ~SYaYSBf1ngDyM4VtKf7nxW
Current verkey in wallet: B1A3Ups41SbhE7GgwRho4xVr645ud92FQHkUBk1rWSdt
Temp verkey in wallet: 5Ydq6nyMeMuJJGD6gd8GKPQ3xz3na18F3KHnDWG1GVLx
Unable to resume, verkey on ledger is completely different from verkey in wallet
{code}
_CLI logs:_ [^after_reestablish.txt] 
 BUT when I tried to send NYM - it was successful. And there is no record in domain ledger about new verkey. (it looks like old verkey still in action)
 _CLI logs_ [^check_keys.txt]

*Case #4*
 In case I forget about ""resume=true"" parameter, error message may be discouraging
{code:java}
did rotate-key
Invalid format of command params. Please check format of posted JSONs, Keys, DIDs and etc...
{code}
CLI Logs for case 4:
{code:java}
2018-11-06T11:50:20.215053611+00:00 [indy_cli::commands::did::rotate_key_command] TRACE indy_cli::commands::did::rotate_key_command:execute >> ctx CommandContext { main_prompt: RefCell { value: ""indy"" }, sub_prompts: RefCell { value: {1: ""pool(p1)"", 2: ""wallet(w1)"", 3: ""did(PNQ...XYx)""} }, is_exit: RefCell { value: false }, int_values: RefCell { value: {""OPENED_WALLET_HANDLE"": 2, ""CONNECTED_POOL_HANDLE"": 3} }, string_values: RefCell { value: {""ACTIVE_DID"": ""PNQm3CwyXbN5e39Rw3dXYx"", ""CONNECTED_POOL_NAME"": ""p1"", ""OPENED_WALLET_NAME"": ""w1""} }, plugins: RefCell { value: {} } } params ""_""
2018-11-06T11:50:20.215110996+00:00 [indy::api::did] TRACE indy::api::did:indy_replace_keys_start: >>> wallet_handle: 2, did: 0x7f1cd5234700, identity_json: 0x7f1cd52151f0
2018-11-06T11:50:20.215119131+00:00 [indy::api::did] TRACE indy::api::did:indy_replace_keys_start: entities>>> wallet_handle: 2, did: ""PNQm3CwyXbN5e39Rw3dXYx"", key_info: ""_""
2018-11-06T11:50:20.215127815+00:00 [indy::api::did] TRACE indy::api::did:indy_replace_keys_start: <<< res: Success
2018-11-06T11:50:20.215139632+00:00 [indy::commands] INFO indy::commands:DidCommand command received
2018-11-06T11:50:20.215143977+00:00 [indy::commands::did] INFO indy::commands::did:ReplaceKeysStart command received
2018-11-06T11:50:20.215147815+00:00 [indy::commands::did] DEBUG indy::commands::did:replace_keys_start >>> wallet_handle: 2, key_info_json: ""_"", my_did: ""PNQm3CwyXbN5e39Rw3dXYx""
2018-11-06T11:50:20.215159299+00:00 [indy::services::crypto] TRACE indy::services::crypto:validate_did >>> did: ""PNQm3CwyXbN5e39Rw3dXYx""
2018-11-06T11:50:20.215168073+00:00 [indy::services::crypto] TRACE indy::services::crypto:validate_did <<< res: ()
2018-11-06T11:50:20.215239713+00:00 [indy::services::crypto] TRACE indy::services::crypto:create_key >>> key_info: KeyInfo { seed: None, crypto_type: None }
2018-11-06T11:50:20.215246347+00:00 [indy::services::crypto] TRACE indy::services::crypto:convert_seed >>> seed: None
2018-11-06T11:50:20.215249111+00:00 [indy::services::crypto] TRACE indy::services::crypto:convert_seed <<< res: None
2018-11-06T11:50:20.215326992+00:00 [indy::services::crypto] TRACE indy::services::crypto:create_key <<< key: Key { verkey: ""HF9azsoKeuYiR43VcqdncP2tztesdPBa1PhHU3V5qhya"" }
2018-11-06T11:50:20.239107755+00:00 [indy::errors::indy] ERROR indy::errors::indy:Casting error to ErrorCode: Item already exists
2018-11-06T11:50:20.239135977+00:00 [indy::api::did] TRACE indy::api::did:indy_replace_keys_start: verkey: """"
{code};;;","07/Nov/18 12:56 AM;dkulic;Added support for abbreviated verkey from ledger (in some cases it is received that way).

https://github.com/hyperledger/indy-sdk/pull/1266;;;","09/Nov/18 12:54 AM;sergey.minaev;New master build is 829;;;","09/Nov/18 5:47 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.7~829

*Steps to Validate:*
1) rotate-key resume=true for not yet started process.
2) rotate-key to ledger when pool orders rotation but client response has timeout.
3) rotate-key to ledger when pool doesn't order rotation, client response has timeout.

*Actual Resilts:*
1) Error is expected.
2) resume = true restores keys consistency
3) resume = true restores keys consistency;;;",,
Rust Wrapper: create how-tos for rust-libindy-wrapper,IS-1037,34608,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MattRaffel,esplinr,esplinr,12/Oct/18 2:12 AM,26/Nov/18 5:46 PM,28/Oct/23 2:49 AM,26/Nov/18 5:46 PM,,,,,,,,1.7.0,,,,,,,0,,,,"See indy-sdk how-tos.
https://github.com/hyperledger/indy-sdk/tree/master/doc/how-tos

We should write how-tos for the rust wrapper as documentation to the community on how to use it.

h2. Status
*Completed*
# write-did-and-query-verkey
# rotate-key
# save-schema-and-cred-def

*In progress*
# issue-credential
# negotiate-proof
# proof-negotiation 

*TO-DO*
# send-secure-msg
# use updated rust wrapper crate
# add default logger

_Note_:  Documentation (aka readme) are started but needs work.

_Also completed_:  
# README.md for the other language how-tos needed updating:  corrected.
# Java samples had bugs or were wrong:  corrected.",,,,,,,,,,,,IS-1029,,,,,,,,,,,,,,,,,,IS-1052,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvi7:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"23/Nov/18 3:41 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1311
Note:  
* How-TO's are significantly outdated.
* 'negotiate-proof ' and  'proof-negotiation' look same;;;","23/Nov/18 8:32 PM;sergey.minaev;The 1311 PR is append for Matt's one https://github.com/hyperledger/indy-sdk/pull/1289;;;","26/Nov/18 5:46 PM;sergey.minaev;Available in master since https://github.com/hyperledger/indy-sdk/pull/1313 has been merged;;;",,,,,,,,,
MacOS Support: It failed to pass sdk test cases,IS-1038,34614,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,MichaelWang,MichaelWang,12/Oct/18 9:56 AM,24/Oct/18 7:53 PM,28/Oct/23 2:49 AM,24/Oct/18 7:53 PM,,,,,,,,,,libindy,,,,,0,,,,"I have setup all the env and built the libindy in my Mac, Which is at the version 10.13.6. And the rust version is 1.27.0(I also tried 1.29.0).

When I try to test, got some weird error as below:

*ERROR|panic |/Users/dong/.cargo/registry/src/github.com-1ecc6299db9ec823/log-panics-2.0.0/src/[lib.rs:67|http://lib.rs:67/] | thread 'unnamed' panicked at 'FIXME: CommonError(IOError(Custom \{ kind: Other, error: Too many open files }))': libcore/[result.rs:945|http://result.rs:945/]*

 

*Then the messages as:*
 * *DEBUG|zmq |/Users/dong/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/[lib.rs:503|http://lib.rs:503/] | socket dropped*
 * *DEBUG|zmq |/Users/dong/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/[lib.rs:503|http://lib.rs:503/] | socket dropped*
 * *DEBUG|zmq |/Users/dong/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/[lib.rs:410|http://lib.rs:410/] | context dropped*

At last, I got flooded by the messages as below(I enabled the trace log):

*TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(Timeout(""3igET9saurLQitK3i54GRVsVEynhF3Z5iuoZUHwzXak1"", ""ALIAS_NODE""))*

 *WARN|indy::services::pool::pool    |          src/services/pool/pool.rs:409 | Unexpected timeout: req_id 3igET9saurLQitK3i54GRVsVEynhF3Z5iuoZUHwzXak1.*

 

with some investigation, I found it is caused by the test cases of pool. If I disabled the trace log, when I issued cargo test ---test pool, it just pended on the case: ** 

*open_pool_ledger_works_after_error*

and never return or terminate.

But when I execute it alone, it passed. And any other cases work well as I tested.

And also I booted the local pool as  *Starting the test pool on localhost.*

 

*As discussed with Sergey, this must be some bug or MacOS version issue.*

*Please confirm this and if possible correct it.*

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvav:",,,,Unset,Unset,EV 18.21,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,MichaelWang,sergey.minaev,,,,,,,,"13/Oct/18 11:40 PM;MichaelWang;I can resolve this by changing the maximum number of open file descriptors in my MacOS.
{code:java}
ulimit -n
{code}
And it works. Maybe it is not the bug of the sdk.;;;","15/Oct/18 8:01 PM;sergey.minaev;Before closing this issue I suggest to add note into macos readme about unsufficient default limit in this OS;;;","24/Oct/18 6:07 PM;sergey.minaev;https://github.com/hyperledger/indy-sdk/pull/1242;;;","24/Oct/18 7:53 PM;gudkov;The note about file descriptors limit was added to MacOS documentation.;;;",,,,,,,,
pairwise.create_pairwise raises ErrorCode.WalletItemNotFound,IS-1039,34657,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,trthhrtz,trthhrtz,14/Oct/18 7:00 PM,14/Oct/18 9:09 PM,28/Oct/23 2:49 AM,14/Oct/18 8:36 PM,,,,,,,,,,libindy,,,,,0,,,,"The presented piece of code fails with `indy.error.IndyError: ErrorCode.WalletItemNotFound`.

 

[^test.py]","python3-indy 1.6.5

libindy:amd64/xenial 1.6.7~787 uptodate

Ubuntu 16.04 LTS",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/18 6:55 PM;trthhrtz;test.py;https://jira.hyperledger.org/secure/attachment/16135/test.py",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzv0f:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),trthhrtz,,,,,,,,,,"14/Oct/18 8:35 PM;trthhrtz;before creating pairwise I had to do did.store_their_did.  Now it doesnot raise any errors;;;","14/Oct/18 8:48 PM;trthhrtz;This bug should be closed;;;",,,,,,,,,,
As a user of Indy CLI I would like help/hints for non-trivial workflows,IS-1040,34585,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,ckochenower,ckochenower,11/Oct/18 4:13 AM,08/Oct/19 11:55 PM,28/Oct/23 2:49 AM,,,,,,,,,,,cli,,,,,0,,,,"Workflows using Indy CLI would be much easier if the CLI provided state/flow-based hints like {{git status}} does. For example, after running {{ledger mint-prepare ...}}, Indy CLI could provide hints to complete the next/remaining step/steps (i.e. ledger multi-sig and custom commands). I understand that Indy CLI isn’t as stateful as git and some flows may be more complex than git flow state transitions. Perhaps this feature isn’t feasible. However, guiding an Indy CLI user through non-trivial multi-step workflows/tasks seems to be ideal.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-273,,,No,,Unset,No,,,"1|hzwvtj:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ckochenower,,,,,,,,,,,,,,,,,,,,,
As a user of Indy CLI I want a comprehensive way of managing plugins without starting from scratch every time,IS-1041,34584,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Low,,,ckochenower,ckochenower,11/Oct/18 3:51 AM,08/Oct/19 11:55 PM,28/Oct/23 2:49 AM,,,,,,,,,,,cli,,,,,0,,,,"An Indy CLI user can do the following:

# Load a plugin by specifying the library and initializer

An Indy CLI user is unable to do the following (each of these could be a sub-task):

# List loaded plugins
# Unload/Reload plugins

Perhaps reorganizing plugin management to something like the following would be sufficient?

{panel}
plugin
---> list
---> load library=<path> initializer=<init method>
---> unload <path or some ID listed using the `plugin list` command>
---> reload library=<path> [initializer=<init method>]
{panel}

Additional considerations (each of these could be a sub-task):

# Should the `about` Indy CLI command list all loaded plugins (same list produced by `plugin list` above)?
# Should plugins be loadable using a configuration file? Much like .bashrc and .bash_profile are to bash, and .vimrc is to VIM?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1049,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-273,,,No,,Unset,No,,,"1|hzwvtr:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ckochenower,,,,,,,,,,,,,,,,,,,,,
VCX: Dummy Cloud Agent integration with VCX,IS-1042,34711,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,16/Oct/18 11:38 PM,09/Nov/18 10:41 PM,28/Oct/23 2:49 AM,09/Nov/18 10:41 PM,,,,,,,,,,,,,,,0,,,,"We need to integrate VCX with Dummy Cloud Agent and fix possible integration issues.

*Acceptance criteria*
* Provision scripts updated and work with Dummy Cloud Agent
* Integration tests work with Dummy Cloud Agent
* Available demo and samples work with Dummy Cloud Agent
* If possible try to get a demo with ConnectMe and Dummy Cloud Agent. Most probably it will be impossible as we don't support push notifications.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvef:",,,,Unset,Unset,EV 18.22,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,,,,,,,,,,,,
Revocation serialization probably broken on 32bit platforms,IS-1043,34712,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,KitHat,sergey.minaev,sergey.minaev,17/Oct/18 12:08 AM,23/Nov/18 10:22 PM,28/Oct/23 2:49 AM,23/Nov/18 10:22 PM,,,,,,,,1.7.0,,indycrypto,,,,,0,TShirt_L,,,"indy_build_revoc_reg_def_request and indy_build_revoc_reg_def_request tests are failed on 32bit android. Probably there is some issue in hex serialization of AMCL primitives

Acceptance Criteria: 
* investigate bug actuality and reason if confirmed
* create PoA in separate task to fix the issue if exists",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1093,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwve7:",,,,Unset,Unset,EV 18.22,EV 18.23,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),KitHat,sergey.minaev,,,,,,,,,"23/Nov/18 9:09 PM;KitHat;As a result of investigation we found out that hex serialization and deserialization was working incorrect.

If we serialize some data on 64-bit platform and then try to deserialize and serialize it on 32-bit the source and the result won't be equal.
The reason is that we serializing not the byte-representation of big number primitives but inner representation of AMCL (which is platform dependent).
We made a decision to change the (de)serialization to byte-representation instead of inner representation.;;;",,,,,,,,,,,
need build artifact (or build command) that enumerates dependencies,IS-1044,34865,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,esplinr,danielhardman,danielhardman,25/Oct/18 2:15 AM,25/Mar/20 12:53 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Sooner or later, developers that build atop Indy SDK may run into an infosec or regulatory compliance requirement like this one:

""Besides the immediate source that you have placed in the open, please tell me about each dependency that you have, along with the corresponding versions, licenses, and source code for those dependencies.""

This may be required, for example, to satisfy an organization that wishes to develop proprietary code against libindy without fear that there's a copyleft provision lurking somewhere in the stack.

Because the source code is open, these dependencies can be discovered with enough effort–and I think it's okay for consumers of the codebase to feel some duty to solve the problem themselves, since we can't anticipate all possible ways the code will be consumed. For example, today a developer could find libindy's Cargo.toml file and examine the [dependencies] section, and have a moderately good start on answering this question. However, there are subtleties–for example, does libindy's java wrapper introduce java dependencies that a consumer of the codebase should know about, over and above the Rust ones? Is there a python library somewhere, but it's only a dependency of the test automation, instead of being a dependency of the python wrapper at runtime?

Making this all the more complicated is that answers to these more subtle questions may change without notice.

For these reasons, I think it's worthwhile to provide some ready answers to this need, somewhat alleviating the burden of consumers of the codebase.

What we need is a build artifact (or a build command that produces an artifact) that is maintained by the developers, and that is assigned the job of accurately reporting runtime dependencies at any given point in time. I imagine this artifact to be a text file that contains sections for each binary produced by the build, listing its runtime dependencies, something like this:

{{[libindy.so]}}

{{rusqlite=Rust crate, version =0.13.0, MIT license}}

{{rust-openssl=Rust crate, version >=0.10.12, Apache 2 license}}

{{openssl=system library, version >=1.1.1, Apache 1 license}}

{{[python wrapper]}}

{{requests=pypi, version >= 2.18, Apache 2 license}}

The logic behind this info could be a simple python script that opens several different Cargo.toml files and combines the [dependencies] sections, suppressing anything that is not a runtime dependency, and supplementing this with a quick peek into pypi / npm manifests or equivalent structures for other programming ecosystems relevant to the codebase. The output of the script could be a file with a standard name (perhaps, ""runtime-dependencies.txt""?).

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzw7z:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),danielhardman,esplinr,tharmon,,,,,,,,"11/May/19 11:53 AM;esplinr;Keywords that I use when searching for this issue: Bill of Materials, 3rd Party Dependencies.;;;","20/Mar/20 9:30 AM;esplinr;Useful tools:
* NPM license-checker
* Rust cargo-license (https://github.com/onur/cargo-license)
* https://github.com/pivotal/LicenseFinder

One-liner for getting all the import statements from Python:
for file in `find . -iname '*py'`; do grep ""import "" $file >> out-tmp.txt; done; sort out-tmp.txt | uniq >> out.txt; rm out-tmp.txt;;;",,,,,,,,,,
Plugged Wallet return error codes should match Default,IS-1045,34937,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,ianco,ianco,ianco,29/Oct/18 5:06 AM,07/Dec/18 2:16 AM,28/Oct/23 2:49 AM,05/Dec/18 8:16 PM,,,,,,,,,,wallet,,,,,0,,,,"Return error codes for the plugged storage should match those returned by the default storage.  Currently the plugged methods for add(), update(), search(), create_storage(), open_storage() don't return error codes as granular as the default wallet.

See changes in commit:

[https://github.com/hyperledger/indy-sdk/pull/1247/files#diff-3ef068287d272575d182d10ff4517073]

 ",,,,,,,,,,,,,,,,,,,,,,,,,,IS-804,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwspr:",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ianco,,,,,,,,,,"08/Nov/18 12:00 PM;ianco;https://github.com/hyperledger/indy-sdk/pull/1273;;;",,,,,,,,,,,
"Update wallet search ""language"" parsing to support plugged storage",IS-1046,34938,,Improvement,Complete,IS,Indy SDK,software,resplin,,,High,Done,ianco,ianco,ianco,29/Oct/18 5:11 AM,07/Dec/18 2:15 AM,28/Oct/23 2:49 AM,10/Nov/18 2:29 AM,,,,,,,,,,wallet,,,,,0,,,,"Update the json parsing method in language.rs to support json-to-Operator parsing required by plugged storage.  The json as parsed to plugged storage is base64 encoded and encrypted, and the existing parse_from_json() method does not work in a plugged storage module.

See the example parse_from_json_encrypted() in the following link for an example that works in a plugged storage module:

[https://github.com/hyperledger/indy-sdk/pull/1247/files#diff-c937c420c059f2809292e0f67b3f34caR172]

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzwkf:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ianco,,,,,,,,,,"10/Nov/18 2:29 AM;ianco;included in [https://github.com/hyperledger/indy-sdk/pull/1282]

 ;;;",,,,,,,,,,,
Implement shared library for code required by Plugged Storage,IS-1047,34939,,Improvement,Complete,IS,Indy SDK,software,resplin,,,High,Done,ianco,ianco,ianco,29/Oct/18 5:20 AM,10/Oct/19 9:24 PM,28/Oct/23 2:49 AM,10/Nov/18 2:29 AM,,,,,,,,,,wallet,,,,,0,,,,"Implement a shared library containing code required by plugged wallet storage.  Currently there is code within indy-sdk that is required by the plugged storage, but it is not available because it is in private modules.  Also it is not available through the API so is only available by statically linking libindy.  For example see code in the inmem and postgres storage plug-ins in PR:

[https://github.com/hyperledger/indy-sdk/pull/1247]

Duplicated files include:

src/utils/byte_array.rs, cstring.rs, sequence.rs, crypo functions, ctypes.rs, environment.rs, logger.rs

wallet functions - language.rs, query.rs, storage.rs (EncryptedValue, Tag, TagName, StorageRecord, etc), transaction.rs

Also src/postgres_wallet.rs (as implemented) is a fairly generic wrapper layer between the c-callable API and the underlying wallet storage functions, and can be made generic.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1404,,,No,,Unset,No,,,"1|hzzwkn:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ianco,,,,,,,,,,"31/Oct/18 12:20 AM;ianco;I suggest creating a set of shared code that can be statically linked into libindy, cli, storage libraries etc.

For example it could look something like:

indy-sdk/shared

indy-sdk/shared/src

indy-sdk/shared/src/util

indy-sdk/shared/src/crypto

indy-sdk/shared/src/wallet

... etc, and then we can move any shared code into this library.

 ;;;","10/Nov/18 2:29 AM;ianco;included in https://github.com/hyperledger/indy-sdk/pull/1282;;;",,,,,,,,,,
Add register_wallet_storage() to python API wrapper,IS-1048,34940,,Improvement,Complete,IS,Indy SDK,software,resplin,,,High,Won't Do,,ianco,ianco,29/Oct/18 5:21 AM,23/May/19 1:37 AM,28/Oct/23 2:49 AM,23/May/19 1:37 AM,,,,,,,,,,wallet,,,,,0,,,,"Add methods to the python API wrapper to expose the underlying libindy API method to register pluggable wallet storage.

See for an example:

[https://github.com/hyperledger/indy-sdk/pull/1247/files#diff-d5cf6bfb96bf3d84e5018517f8f8b222R14]

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzwkv:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,ianco,,,,,,,,,"19/Nov/18 5:47 PM;gudkov;[~ianco] We don't want to expose any low-level plugin methods in wrappers. Plugins should be written in C or any language that should allow to build dll/so with C-compatible code. 

Each plugin should provide *init_* function that will call register_wallet_storage internally. 

What we may want to reduce boilerplate is to provide call *load_plugin(path, init_fn_name)* in python wrapper.;;;",,,,,,,,,,,
Update CLI to add ability to load pluggable wallet storage,IS-1049,34941,,Improvement,Complete,IS,Indy SDK,software,resplin,,,High,Done,,ianco,ianco,29/Oct/18 5:24 AM,07/Dec/18 2:15 AM,28/Oct/23 2:49 AM,20/Nov/18 11:36 PM,,,,,,,,,,cli,,,,,0,,,,"Add a ""register"" command to CLI to load and register pluggable wallet storage.

See for example as included in PR 1247:

[https://github.com/hyperledger/indy-sdk/pull/1247/files#diff-f5dab221a08143a41b792225532d989aR489]

 ",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1041,IS-947,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvm7:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,ianco,,,,,,,,,"20/Nov/18 11:35 PM;esplinr;Thank you for the pull request. As we noted on the pull request, the Indy CLI already allows loading plugins with the command

{quote}indy> load-plugin library=libnullpay initializer=nullpay_init{quote}

As documented here:

https://github.com/hyperledger/indy-sdk/tree/master/doc/design/006-cli-plugins;;;",,,,,,,,,,,
Re-factor in-mem plugged storage example to load in shared library,IS-1050,34942,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ianco,ianco,ianco,29/Oct/18 5:26 AM,07/Dec/18 2:16 AM,28/Oct/23 2:49 AM,10/Nov/18 2:29 AM,,,,,,,,,,wallet,,,,,0,,,,"Re-factor in-mem shared plugged storage to load from a shared library.

This will provide better example of how to build a plugged storage, and can potentially work with CLI, getting started guides, etc.

See example from PR 1247:

[https://github.com/hyperledger/indy-sdk/pull/1247/files#diff-a4ed2437cbbf69df2acd8ecf9c08a65eR1]

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzwl3:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ianco,,,,,,,,,,"10/Nov/18 2:29 AM;ianco;included in https://github.com/hyperledger/indy-sdk/pull/1282;;;",,,,,,,,,,,
Implement standard test harness for plugged wallet storage,IS-1051,34943,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,ianco,ianco,29/Oct/18 5:32 AM,10/Oct/19 9:24 PM,28/Oct/23 2:49 AM,,,,,,,,,,,wallet,,,,,0,,,,"Implement a standard test suite for plugged storage to verify the plugged storage works, meets API standards and works within standard wallet scenarios.

One example is implemented in PR 1247 and described in [https://github.com/hyperledger/indy-hipe/pull/49] - this inserts a ""shim"" into existing unit tests so that tests written for the default storage can be leveraged against new storage plug-ins.  The advantages are that these test already exist, and new unit tests for the default storage can automatically be applied to storage plug-ins as well.

Another suggestion is:
 # Wallet storage test harness should be dedicated native library with one method {{test_wallet_storage(storage_type, options)}}
 # {{test_wallet_storage}} executes the short list of well documented test cases and generates report
 # Wallet storage test links libindy, test harness lib and wallet storage in the way he needs. Calls {{init}} function of storage and {{test_wallet_storage}} after it.

... however this suggestion implies new development required, and must then be maintained in parallel with any new development.

A third suggestion is to use the CLI - build test scripts that run against the CLI to create and open storage, create DID's, etc, and ensure that these scripts can function using the default storage or any plug-in storage.  However the functionality available through the CLI is limited (for example anoncreds functions are not available) so CLI functionality would have to be extended to ensure that a comprehensive test suite could be built.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-881,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1404,,,No,,Unset,No,,,"1|hzwvm1:9",,,,Unset,Unset,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),ianco,,,,,,,,,,,,,,,,,,,,,
Document design and approach to build plugged wallet storage,IS-1052,34944,,Improvement,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,ianco,ianco,29/Oct/18 5:35 AM,10/Oct/19 9:38 PM,28/Oct/23 2:49 AM,,,,,,,,,,,wallet,,,,,0,Documentation,,,"Plugged storage API is documented, but there is no documentation to describe how to build a plugged storage (for example in Rust).  Should include how to link to libindy (for example, using rust wrapper?), what shared code is available, how to run test suite, as well as any lessons learned from previous storage implementations.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1037,IS-1032,IS-1031,IS-1030,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-320,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009fw",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,ianco,,,,,,,,,"20/Nov/18 11:32 PM;esplinr;We agree that we don't have this level of documentation. The most applicable documents we currently have are these ones:

https://github.com/hyperledger/indy-sdk/tree/master/doc/design/003-wallet-storage

https://github.com/hyperledger/indy-sdk/tree/master/doc/design/006-cli-plugins

https://github.com/hyperledger/indy-sdk/tree/master/doc/design/011-wallet-query-language

The architecture of the payment plugins is very similar to the wallet plugins, so LibNullPay and the Sovrin LibSovToken plugins are good examples that can be used in creating a wallet plugin.

We think that building a wallet plugin is a rare use case, so creating a tutorial hasn't been a priority. But we would love your help in building a document like this.
;;;",,,,,,,,,,,
Implement wallet storage wrapper for Postgres database,IS-1053,34945,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ianco,ianco,ianco,29/Oct/18 5:37 AM,10/Oct/19 9:24 PM,28/Oct/23 2:49 AM,10/Nov/18 2:30 AM,,,,,,,,,,wallet,,,,,0,,,,"Required for high volume/high performance applications, as the default sqllite implementation is not scalable in an OpenShift environment.

Implementation is in PR 1247 [https://github.com/hyperledger/indy-sdk/pull/1247] and described in [https://github.com/hyperledger/indy-hipe/pull/49]

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1404,,,No,,Unset,No,,,"1|hzzwlb:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ianco,,,,,,,,,,"10/Nov/18 2:30 AM;ianco;included in https://github.com/hyperledger/indy-sdk/pull/1282;;;","07/Dec/18 12:35 AM;ianco;PR [https://github.com/hyperledger/indy-sdk/pull/1282] updated based on feedback

 ;;;",,,,,,,,,,
Investigate: indy-sdk locks on call from subprocess,IS-1054,34997,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,MattRaffel,sklump,sklump,31/Oct/18 9:52 PM,18/Dec/18 9:08 PM,28/Oct/23 2:49 AM,06/Dec/18 9:55 PM,1.6.7,,,,,,,1.7.0,,libindy,,,,,0,quality,TShirt_S,,"Indy-sdk libindy blocks the on calls that come from a subprocess. It's the command executor that just doesn't get its message.

Procedure:
*1:* create indy-sdk/wrappers/python/tests/ledger/test_fork.py as per attachment  [^test_fork.py].

*2:* From indy-sdk/wrappers/python/tests/ledger/, run the test case however one normally does in the environment:

$ pipenv run pytest -s test_fork.py
================================================= test session starts ==================================================
platform linux -- Python 3.7.0, pytest-3.6.4, py-1.7.0, pluggy-0.7.1
rootdir: /home/sklump/indy-sdk/wrappers/python, inifile:
plugins: asyncio-0.8.0
collected 1 item

test_fork.py
parent process 17740 returning
.

=============================================== 1 passed in 0.03 seconds ===============================================
Child process 17750 done set-sid
process 17750 exiting
Grandchild process 17751 calling blob_storage.open_writer()
$ kill 17751
$ kill 17751
-bash: kill: (17751) - No such process

*3:* Note that the call from the subprocess never returns from indy-sdk and must be killed off manually (although it may time out if the test harness is so configured).

Is this just a Linux characteristic I don't understand? Very possible. Regardless, I would appreciate any advice on getting past this, allowing our main process to fork a subprocess to run an expensive toolkit operation in parallel, surviving after the main process exits until the work (i.e., revocation registry & tails file generation) is done.

*Acceptance Criteria*
* Investigate the cause
* Create a separate issue for fixing the problem
If it is an easy fix, you can go ahead and do it.","Ubuntu 16.04 VM, indy-sdk 1.6.7-dev-805",,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,"31/Oct/18 10:06 PM;sklump;test_fork.py;https://jira.hyperledger.org/secure/attachment/16190/test_fork.py","30/Nov/18 1:33 AM;MattRaffel;test_output.txt;https://jira.hyperledger.org/secure/attachment/16332/test_output.txt",,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvov:",,,,Unset,Unset,EV 18.24,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,MattRaffel,sklump,,,,,,,,"02/Nov/18 12:59 AM;sklump;Using python subprocess.Popen() promises to work around this issue. As such I've reduced its priority to LOW.;;;","30/Nov/18 1:33 AM;MattRaffel;1) the expectation is calling blob_storage.open_writer leaves a process still running after the test completes.  I do not see this as happening.
2) the test crashes on somewhere during the return of blob_storage.open_writer  and before the process gets to back to test_fork (which probably explains #1 above)

Output from run attached as test_output.txt  [^test_output.txt]   FYI: other ledger tests run successfully.

More information.  Looking at the logs, I do see statement like 
{noformat}
Grandchild process 4453 calling blob_storage.open_writer()
{noformat}
.  however, when the test run is over, that process does not exist.  


{noformat}
matt.raffel@mattraffel:~$ kill 4453
-bash: kill: (4453) - No such process
{noformat}
;;;","04/Dec/18 4:21 AM;MattRaffel;The problem is as described below (from a rocket chat discussion with [~sklump])
{noformat}
""A fork duplicates only the main thread. The command executor is a separate thread, so it never gets duplicated. If any out-of-process requirements are possible, the caller must fork first before any calls to libindy. Then the subprocess will instantiate its own command executor thread.""
{noformat}


The following reproduces the problem in rust:


{noformat}
use nix::unistd::{fork, ForkResult};
use nix::sys::wait::wait;
use std::os::unix::process;


extern crate nix;

#[test]
fn test_mlt() {
    use std::thread;

    use std::sync::mpsc::{Sender, channel};
    let (sender, receiver) = channel();

    println!(""main"");
    sender.send(""main"");

    thread::spawn(move || {
        match fork() {
            Ok(ForkResult::Parent { child, .. }) => {
                println!(""parent"");
                sender.send(""parent"");
            }
            Ok(ForkResult::Child) => {
                println!(""child"");
                sender.send(""child"");
            }
            Err(_) => println!(""Fork failed""),
        }
        for i in 0..10 {
            thread::sleep(::std::time::Duration::from_secs(5));
            println!(""pid 1 {}"", ::std::process::id());
//            let ev = receiver.recv();
//            println!(""received: {:?}"", ev);
        }
    });
    match fork() {
        Ok(ForkResult::Parent { child, .. }) => {
            println!(""parent"");
            sender.send(""parent"");
        }
        Ok(ForkResult::Child) => {
            println!(""child"");
            sender.send(""child"");
        }
        Err(_) => println!(""Fork failed""),
    }

    println!(""pid 2 {}"", ::std::process::id());
    thread::sleep(::std::time::Duration::from_secs(50));
}
{noformat}



;;;","04/Dec/18 4:01 PM;Artemkaaas;I added it to the main Libindy Read.me
https://github.com/hyperledger/indy-sdk/pull/1333;;;",,,,,,,,
New required parameter is not shown in indy-cli help screen,IS-1055,35006,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,mgbailey,mgbailey,01/Nov/18 2:06 AM,23/Nov/18 8:30 PM,28/Oct/23 2:49 AM,21/Nov/18 5:39 PM,,,,,,,,1.6.8,,,,,,,0,TShirt_S,,,"There is a new parameter needed when adding a node to a validator pool: blskey_pop. Since BLS keys are now used on all networks, and this parameter is required if a BLS key is used, this is effectively now a required parameter. The help screen for ""ledger node help"" should be updated accordingly. Typical usage of the ""ledger node"" command is now:


{code:java}
ledger node target=58b3Fy45qjcBfVtEt2Zi1MgiRzX9PPmj68FwD143SuWQ node_ip=18.136.178.42 client_ip=18.136.178.42 node_port=9701 client_port=9702 blskey=HK1xnx6WuK3yEPbKkWD6CTp6QfZez9BHd67WEsCYyuyrWrgTvxCdbU7QudwJ5U7MzmrUNivcV5F9ui8HLiuHr7XzANADwyHefqSz5Ft6C13JHyn3ViGBHDUFYiFstvhhZMkGEzddCquqSWKf9AooX1rfpFzyi2kdDxdcXVuCzxxKzb blskey_pop=QqPuAnjnkYcE51H11Tub12i7Yri3ZLHmEYtJuaH1NFYKZBLi87SXgC3tMHxw3LMxErnbFwJCSdJKbTb2aCVmGzqXQtVWSpTVEQCsaSm4SUZLbzWVoHNQqDJASRYNbHH2CqpR2MtntA4YNb2WixNSZNXFSdHMbB1yMQ7XUcZqtGHhcb services=VALIDATOR alias=Node19
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1796,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvhb:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,mgbailey,zhigunenko.dsr,,,,,,,,"10/Nov/18 12:41 AM;Artemkaaas;Corrected in PR: https://github.com/hyperledger/indy-sdk/pull/1279;;;","19/Nov/18 12:44 AM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.7~850 

*Actual Results:*
There are no help changes that corresponding PR;;;","20/Nov/18 8:45 PM;Artemkaaas;Build version: master-854;;;","21/Nov/18 5:39 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.7~854

*Steps to Validate:*
_ledger node help_

*Actual Results:*
Help output has been changed according to PR;;;",,,,,,,,
Can't access CI for PR,IS-1057,35078,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,aknudsen,aknudsen,05/Nov/18 4:23 AM,21/Mar/19 6:03 PM,28/Oct/23 2:49 AM,09/Nov/18 7:23 PM,,,,,,,,,,build-delivery-pipelines,,,,,0,ci-failure,,,"I can't access the Jenkins instance verifying pull requests. When I try to visit its [website|https://ci.evernym.com/job/Indy%20Crypto%20CI the request just times out.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-344,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvgn:",,,,Unset,Unset,EV 18.22,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),aknudsen,sergey.minaev,,,,,,,,,"09/Nov/18 7:22 PM;sergey.minaev;Now CI/CD for IndySDK and Crypto repos are private. 

[~aknudsen] Please track status of IS-344. This issue will be closed as duplicated.;;;","21/Mar/19 6:03 PM;sergey.minaev;The CI/CD is moved to public Sovrin Jenkins, so we can consider this ticket as resolved, not duplicates another one.

IS-344 is postponed and probably will not be required.

[~aknudsen] FYI;;;",,,,,,,,,,
iOS demo fails with xcode 10.0.1 and MacOS 10.14,IS-1058,35150,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Invalid,Artemkaaas,MichaelWang,MichaelWang,07/Nov/18 1:56 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,,,libindy,,,,,0,,,,"I try to run the iOS demo cases in my Mac. But it seems that sdk does not support xcode 10.0.1. I will give more detailed info as below. And from the iOS readme, the OpenSSL should be installed from Podfile. But there is a issue when pod install with OpenSSL without version specified.

*cp: file.tgz: No such file or directory*

This issue will be fixed when I change podfile  to specify the *OpenSSL-Universal as version 1.0.1.16*. As I found that this is the right version that CoreBitCoin supports. So I changed it.

 

After pod install. I try to test it with the command:

*xcodebuild* test -workspace Indy.xcworkspace -scheme Indy-demo -destination 'platform=iOS Simulator,name=iPhone X,OS=12.1' (For xcode 10.0.1 only got iOS 12.1.)

 

I got some warning from the start:

_warning: The iOS Simulator deployment target is set to 6.0, but the range of supported deployment target versions for this platform is 8.0 to 12.1. (in target 'OpenSSL-Universal')_

 __ 

_Build system information_

_warning: The iOS Simulator deployment target is set to 6.0, but the range of supported deployment target versions for this platform is 8.0 to 12.1. (in target 'libzmq')_

 __ 

_Build system information_

_warning: The iOS Simulator deployment target is set to 4.3, but the range of supported deployment target versions for this platform is 8.0 to 12.1. (in target 'libsodium')_

 __ 

_Build system information_

_warning: The iOS Simulator deployment target is set to 7.0, but the range of supported deployment target versions for this platform is 8.0 to 12.1. (in target 'CoreBitcoin')_

 __ 

_Build system information_

_warning: The iOS Simulator deployment target is set to 5.0, but the range of supported deployment target versions for this platform is 8.0 to 12.1. (in target 'ISO8601DateFormatter')_

 

Then the error: 

 

_Build system information_

_error: Multiple commands produce '/Users/dong/Library/Developer/Xcode/DerivedData/Indy-cqksoplvagrbeefcjyxazzhvteig/Build/Products/Debug-iphonesimulator/Indy-demo.app/PlugIns/Indy-demoTests.xctest/Info.plist':_

_1) Target 'Indy-demoTests' (project 'Indy-demo') has copy command from '/Users/dong/repos/indy-ios/indy-sdk/wrappers/ios/libindy-pod/Indy-demoTests/Info.plist' to '/Users/dong/Library/Developer/Xcode/DerivedData/Indy-cqksoplvagrbeefcjyxazzhvteig/Build/Products/Debug-iphonesimulator/Indy-demo.app/PlugIns/Indy-demoTests.xctest/Info.plist'_

_2) Target 'Indy-demoTests' (project 'Indy-demo') has process command with output '/Users/dong/Library/Developer/Xcode/DerivedData/Indy-cqksoplvagrbeefcjyxazzhvteig/Build/Products/Debug-iphonesimulator/Indy-demo.app/PlugIns/Indy-demoTests.xctest/Info.plist'_

 __ 

_2018-11-07 12:53:32.699 xcodebuild[99790:2343306]  DVTAssertions: Warning in /Library/Caches/com.apple.xbs/Sources/IDEFrameworks_Fall2018/IDEFrameworks-14460.46/IDEFoundation/Logging/ActivityLog/IDEActivityLogSectionRecorder.m:1050_

_Details:  log recorder was sent -stopRecordingWithInfo:completionBlock: after it had already been asked to stop recording._

_Object:   <IDEActivityLogSectionRecorder: 0x7ff39fb8c950>_

_Method:   -stopRecordingWithInfo:completionBlock:_

_Thread:   <NSThread: 0x7ff39b9271e0>\{number = 7, name = (null)}_

_Please file a bug at [https://bugreport.apple.com|https://bugreport.apple.com/] with this warning message and any useful information you can provide._

 

 ","xcode version: 10.0.1

MacOS: 10.14

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1035,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00246:r",,,,Unset,Unset,EV 18.25,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,MichaelWang,smithbk,,,,,,,,"13/Nov/18 10:43 PM;MichaelWang;As some one advised the 

I installed all prerequisites mentioned at ""How to build"" section. Steps 1,2,3,4. I am not sure if environment variables at steps 5, 6 are necessary. But i ve set them up as well.

2) Download master repository from [https://github.com/hyperledger/indy-sdk]
3) Correct ""indy-sdk-master/ci/[ios-build.sh|http://ios-build.sh/]"" script - line 13 - ""export OPENSSL_DIR=/usr/local/Cellar/openssl/1.0.2p"" - path to OpenSSL dir has to be correct.
4) Terminal: cd indy-sdk-master
5) Terminal: chmod +x ci/[ios-build.sh|http://ios-build.sh/]
6) Terminal: ci/[ios-build.sh|http://ios-build.sh/] libindy aarch64-apple-ios armv7-apple-ios armv7s-apple-ios x86_64-apple-ios
7) Terminal: cd wrappers/ios/libindy-pod

And the modified Podfile is as attached file.

Then

$$pod install and 

*$$ open* Indy.xcworkspace

 

But I got the error 

ld: framework not found openssl

clang: error: linker command failed with exit code 1 (use -v to see invocation)

 

So I am not sure if this is modification is right.

 ;;;","27/Nov/18 10:33 PM;MichaelWang;With help of [~solocez], I can build the indy.framework now.

After modifying the config file of project file of indy.

I guess it is cause of xcode version.;;;","05/Dec/18 8:13 PM;MichaelWang;With the podfile above, some more modification will be needed.
 # delete the -lcrpto and -lssl in indy project file.
 # change the HEADER_SEARCH_PATHS in project file as below ""$(inherited)"",                                                                                      

""\""$(PODS_ROOT)/libsodium/src/libsodium/include/sodium\"""",                                           

""\""$(PODS_ROOT)/libsodium/src/libsodium/include\"""",                                                  

""\""${PODS_ROOT}/Headers/Public\"""",                                                                   

""\""${PODS_ROOT}/Headers/Public/CoreBitcoin\"""",                                                       

""\""${PODS_ROOT}/Headers/Public/ISO8601DateFormatter\"""",                                              

""\""${PODS_ROOT}/Headers/Public/OpenSSL-Universal\"""",                                                 

""\""${PODS_ROOT}/Headers/Public/libsodium\"""",                                                         

""\""${PODS_ROOT}/Headers/Public/libzmq\"""",                                                            

""\""$(PODS_ROOT)/../../../../libindy/out_pod"", );
 # change the 

LIBRARY_SEARCH_PATHS = (                                                                                

""$(inherited)"",                                                                                      

""$(PROJECT_DIR)/../../../libindy/out_pod"",                                                           

""$(PROJECT_DIR)/build/Debug-iphoneos"",   ); 
 #  there are two    LIBRARY_SEARCH_PATHS      HEADER_SEARCH_PATHS in the indy project file   and the same thing should be done to indy-demo project file.                     

 

Other steps are as the document.                                      ;;;","11/Dec/18 11:03 PM;Artemkaaas;Regarding the problem with openssl, we found solution [here|https://github.com/FredericJacobs/OpenSSL-Pod/issues/49];;;","11/Dec/18 11:05 PM;Artemkaaas;Regarding the problem with Info.plist, we solved it in PR: https://github.com/hyperledger/indy-sdk/pull/1348;;;","20/Dec/18 7:07 PM;Artemkaaas;ios tests passed after PR has been merged.
execution command:
{code:java}
xcodebuild test -workspace Indy.xcworkspace -scheme Indy-demo -destination 'platform=iOS Simulator,name=iPhone X,OS=12.0
{code}
;;;",,,,,,
VCX Nodejs Testing,IS-1059,35159,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,07/Nov/18 6:32 PM,18/Dec/18 9:08 PM,28/Oct/23 2:49 AM,29/Nov/18 10:57 PM,,,,,,,,1.7.0,,,,,,,0,TShirt_L,,,"There is a problem with timing in VCX Nodejs tests.
'GC' tests often fail with a timeout in case Libindy logging enabled with `Trace` level",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Nov/18 8:47 PM;Artemkaaas;libvcx_amazon.txt;https://jira.hyperledger.org/secure/attachment/16315/libvcx_amazon.txt","26/Nov/18 8:48 PM;Artemkaaas;vcn_nodejs_amazon.txt;https://jira.hyperledger.org/secure/attachment/16316/vcn_nodejs_amazon.txt",,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvhj:",,,,Unset,Unset,EV 18.23,EV 18.24,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"12/Nov/18 7:00 PM;Artemkaaas;These tests strongly depend on Nodejs Garbage Collector behavior.
But, Nodejs doesn't guarantee exact time it will be called. So, the execution time can differ on machines. 
The only solution is extending of tests timeout.
Done in PR: https://github.com/hyperledger/indy-sdk/pull/1284;;;","19/Nov/18 5:32 PM;Artemkaaas;Build version: master-850;;;","19/Nov/18 6:13 PM;sergey.minaev;There are still a lot of fails of master node js tests for VCX. Probably the reason is realted to https://github.com/hyperledger/indy-sdk/pull/1293 PR;;;","28/Nov/18 8:55 PM;Artemkaaas;Changes:  There were several mistakes in ffi function definitions.
Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1312;;;","29/Nov/18 10:57 PM;sergey.minaev;After PR merged CD is became passed (e.g. 867 master build);;;",,,,,,,
Aborted (core dumped) in case of usage Libindy from Python,IS-1060,35160,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,07/Nov/18 6:43 PM,18/Dec/18 7:41 PM,28/Oct/23 2:49 AM,18/Dec/18 7:41 PM,,,,,,,,,,,,,,,0,TShirt_L,,,"There is a similar problem in Libindy python sample and Vcx python wrapper tests.
We need to wait for libindy thread complete after python test completed.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1107,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvpo:",,,,Unset,Unset,EV 18.24,EV 18.25,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,,,,,,,,,,"06/Dec/18 7:27 PM;Artemkaaas;Reason: Pytest execution thread completes before Libvcx Threadpool. 
    For some reason, `Drop` is never called for Threadpool.
    Possible, there is the same problem in Libindy. 
Changes: Updated `vcx_shutdown` API function to wait for Threadpool shutdown.
Fixed for Libvcx in PR: https://github.com/hyperledger/indy-sdk/pull/1329/

;;;","10/Dec/18 7:43 PM;Artemkaaas;This solution didn't help. PR has been closed.
The only solution for the current moment is adding of `shutdown` function in Libindy API. 
Libvx already has this function, so we just need to add shutdowning of ThreadPool.
We created a separate ticket for it: IS-1107;;;",,,,,,,,,,
[VCX] Provide Readme for VCX wrappers ,IS-1061,35161,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,07/Nov/18 6:54 PM,29/Nov/18 10:04 PM,28/Oct/23 2:49 AM,29/Nov/18 10:03 PM,,,,,,,,1.7.0,,,,,,,0,,,,"Readme of VCX wrappers is poor.
For example, `Install` section is absent. We need to provide basic information similar to libindy wrappers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvo7:",,,,Unset,Unset,EV 18.24,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,"26/Nov/18 7:52 PM;gudkov;PR: https://github.com/hyperledger/indy-sdk/pull/1306;;;","29/Nov/18 10:04 PM;gudkov;Readme looks good for me.;;;",,,,,,,,,,
GSG: Revocation scenario,IS-1062,35165,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,Artemkaaas,Artemkaaas,07/Nov/18 8:21 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Current Indy Getting Started Guide reflects only proving of existence user credential.
We need to updated GSG to explain `Revocation` process also.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-983,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzxtz:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,,,,,,,,,,,,,,,,,,,,,
Community PR: Postgres storage - review HIPE and PRs,IS-1063,35202,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,sergey.minaev,sergey.minaev,08/Nov/18 6:05 PM,10/Oct/19 9:24 PM,28/Oct/23 2:49 AM,18/Dec/18 9:57 PM,,,,,,,,1.7.0,,,,,,,0,,,,"HIPE
https://github.com/hyperledger/indy-hipe/pull/49

Implementation
https://github.com/hyperledger/indy-sdk/pull/1175
https://github.com/hyperledger/indy-sdk/pull/1247
https://github.com/hyperledger/indy-sdk/pull/1273",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1404,,,No,,Unset,No,,,"1|i00246:6",,,,Unset,Unset,EV 18.23,EV 18.25,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,sergey.minaev,,,,,,,,,"19/Nov/18 10:48 PM;gudkov;I performed review of HIPE and PR 1282. The following changes were requested:

1. Change how plugin is exposed. Instead of providing a lot of callback for indy_register_wallet_storage we need to provide one public postgress_storage_init function
2. Remove unnecessary register command from CLI in favor of existing load-plugin command
3. Remove libindy-common crate in favor of just copy paste.

I also suggested to do the following, but these items don't look like a blocker:

1. Remove in-memory plugin sample at all as it is incomplete and it is strange to have wallet without long-term persistence.
2. Remove mutexes as storage is always called from one thread
Implement lazy loading of records
3. Look to my another comments;;;","12/Dec/18 8:36 PM;gudkov;PR was merged, but it requires some cleanup later:

- Copy/paste is much more deep than required. It makes code hard to understand and cause misleading. For example, storage don't need any cryptography and don't know anything about encoding, we don't need so deep error handling and etc...
- Current code organization is also caused by copy/paste and can be simplified a lot
- Correct lazy loading and avoiding of mutex-es are required;;;","18/Dec/18 9:57 PM;gudkov;Tickets for improvements IS-1113, IS-1114;;;",,,,,,,,,
Secrets in trace of release build,IS-1064,35204,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,sergey.minaev,sergey.minaev,08/Nov/18 6:07 PM,23/Nov/18 11:24 PM,28/Oct/23 2:49 AM,23/Nov/18 11:24 PM,,,,,,,,1.6.8,,,,,,,0,TShirt_S,,,"There are some trace in libindy containing secret information

{code:java}
TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:349 | convert_seed >>> seed: Some(""2f217fb7e7dc3d13a
{code}

In release built should not be any secrets in trace like seed, private keys, etc.

The fix should be available as patch for 1.6.x",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvh3:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,zhigunenko.dsr,,,,,,,,"10/Nov/18 12:40 AM;Artemkaaas;Fxed in PR: https://github.com/hyperledger/indy-sdk/pull/1278;;;","20/Nov/18 8:45 PM;Artemkaaas;Build version: master-854;;;","21/Nov/18 7:21 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.7~854

*Steps to Validate:*
1) _did new_ 
2) _did new_ with seed
3) _wallet import_
4) _wallet export_
5) _ledger nym_
6) _did rotate-key_
7) _did rotate-key_ with seed

*Actual Results:*
Export key *1234567* has been exposed during wallet importing
{code:java}
2018-11-21T10:06:54.745521888+00:00 [indy_cli::commands::wallet::import_command] TRACE indy_cli::commands::wallet::import_command:Wallet::import_wallet try: config {""id"":""w2"",""storage_config"":null,""storage_type"":null}, import_config {""key"":""1234567"",""path"":""/home/indy/backup""}
{code};;;","21/Nov/18 9:23 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1308;;;","23/Nov/18 10:22 PM;sergey.minaev;Build version 1.6.8 master 858;;;","23/Nov/18 11:24 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.7~858

*Steps to Validate:*
1) _wallet export_
2) _wallet import_

*Actual Results:*
There are no secrets in trace;;;",,,,,,
Convert seq_no from int32 to uint64,IS-1065,35216,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,dsurnin,dsurnin,08/Nov/18 8:04 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,2.0.0,,,,,,,0,,,,"It looks like SDK uses int32 to represent seq_no from ledger.
It could be ok for now but for the future we definitely need at least uin64 for seq_no",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzy3r:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dsurnin,,,,,,,,,,"08/Nov/18 8:06 PM;dsurnin;Python wrapper uses int for type annotation which is unbound;;;",,,,,,,,,,,
Investigate LibIndy to identify reasons for slow proof generation,IS-1066,35243,,Task,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,sergey.minaev,sergey.minaev,sergey.minaev,09/Nov/18 6:17 PM,29/Nov/18 6:17 PM,28/Oct/23 2:49 AM,22/Nov/18 8:11 PM,,,,,,,,1.6.8,,,,,,,0,EV-CS,,,"Proof generation should take less than 2 seconds from the SDK.

Proof generation in applications built by the Evernym engineering team is taking much longer. We are seeing the problem in both Android and IOS environments using Evernym's Connect.Me.

We should test that the delays are not in the time necessary for the SDK to respond.

*Acceptance Criteria*
Test proof generation in the following environment:
* A proof with 10 attributes
* Using 3 different credential definitions from 3 different trust anchors
* In Android environment (using the Android Wrapper)
* At the LibIndy layer
Report the distribution of response times.

*Notes*
* We start with the Android layer because we have more reports of slowness from that layer. Investigating IOS would also be useful.

Reference issues (internal to Evernym):
CM-2070 - Connect.Me shouldn't be dependent on ledger connectivity for presenting proofs
CM-2072 - Sending a proof should take less than 2 seconds",,,,,,,,,,,,,,,,,,,,,IS-1087,,,,,,,,,INDY-1816,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1082,,,No,,Unset,No,,,"1|hzwvhr:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,VladimirWork,,,,,,,,,"20/Nov/18 10:38 PM;sergey.minaev;PR with fix on libindy side https://github.com/hyperledger/indy-sdk/pull/1303/files;;;","20/Nov/18 10:39 PM;sergey.minaev;More details in the ticket for Indy Node;;;","22/Nov/18 6:31 PM;sergey.minaev;Build with fix: stable 1.6.8;;;","22/Nov/18 8:11 PM;VladimirWork;Build Info:
libindy 1.6.8~45
python3-indy 1.6.8.dev45

Steps to Validate:
1. Get existing nym/schema/cred_def from 1 single alive node in the pool to check general state proof availability.
2. Run benchmark test against STN to get existing schemas and cred_defs to check average response time.

Actual Results:
We have working state proofs for all txn types (not only for NYMs as before).
We have 1.2637479336421864 seconds average schema response time and 0.3993049508309923 seconds average cred_def response time during 130 test runs (they were from 5 to 30 seconds before the fix).;;;",,,,,,,,
Community PR: NodeJS samples,IS-1067,35245,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,09/Nov/18 7:16 PM,20/Nov/18 9:47 PM,28/Oct/23 2:49 AM,20/Nov/18 9:46 PM,,,,,,,,,,,,,,,0,,,,Review NodeJS samples PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzy87:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,sergey.minaev,,,,,,,,,"20/Nov/18 9:46 PM;gudkov;PR was reviewed and merged;;;",,,,,,,,,,,
3rd party open source manifest,IS-1068,35249,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,09/Nov/18 10:14 PM,17/Nov/18 4:12 AM,28/Oct/23 2:49 AM,17/Nov/18 4:12 AM,,,,,,,,,,,,,,,0,,,,"*Acceptance criteria:*
A spreadsheet with all direct dependencies for the artifacts delivered in the Indy SDK, which contains the following information about each dependency:
* Name
* License
* Version
* Reason for usage

Destination spreadsheet:
https://drive.google.com/drive/folders/1crXe2FSzaojc_QWfsl0jYfYCliVly4jj",,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1839,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzy8v:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"17/Nov/18 4:12 AM;esplinr;This looks good. Thank you.;;;",,,,,,,,,,,
Knowledge transfer stub,IS-1069,35251,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,sergey.minaev,sergey.minaev,09/Nov/18 10:34 PM,22/Nov/18 11:20 PM,28/Oct/23 2:49 AM,22/Nov/18 11:20 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzy93:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
CI for integrated dummy agent and VCX,IS-1070,35252,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,09/Nov/18 10:41 PM,22/Nov/18 10:27 PM,28/Oct/23 2:49 AM,22/Nov/18 6:33 PM,,,,,,,,1.7.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzy9b:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"12/Nov/18 11:34 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1280;;;","19/Nov/18 5:32 PM;Artemkaaas;Build version: master-850;;;","22/Nov/18 6:33 PM;sergey.minaev;CI/CD successfully use dummy agent for VCX testing;;;",,,,,,,,,
Clean up Vcx logs,IS-1071,35273,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,12/Nov/18 7:54 PM,04/Dec/18 6:15 PM,28/Oct/23 2:49 AM,04/Dec/18 6:15 PM,,,,,,,,1.7.0,,,,,,,0,,,,"We need to clean up Libvcx logging because `info` level is used almost everywhere. 
We disabled logs for VCX in CI/CD pipelines because it takes too much disk space.","We need to clean up Libvcx logging because `info` level is used almost everywhere. 
We disabled logs for VCX in CI/CD pipelines because it takes too much disk space.",,,,,,,,,,,,,,,,,,,,,,,,,IS-455,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvnj:",,,,Unset,Unset,EV 18.24,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,"27/Nov/18 6:40 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1318;;;","04/Dec/18 6:15 PM;gudkov;PR looks ok, merged to master;;;",,,,,,,,,,
[Rust Wrapper] Provide logging bridge to Rust logger facade,IS-1072,35286,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,12/Nov/18 11:33 PM,26/Nov/18 5:50 PM,28/Oct/23 2:49 AM,26/Nov/18 5:50 PM,,,,,,,,,,,,,,,0,,,,Provide init_logger(logger: &Logger) function that will initialize liibindy logger by passing all libindy logs to application logger implementation.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzy9j:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"14/Nov/18 4:32 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1288;;;","26/Nov/18 5:50 PM;sergey.minaev;Available in master since https://github.com/hyperledger/indy-sdk/pull/1313 has been merged;;;",,,,,,,,,,
Pack and Unpack Functionality,IS-1073,35300,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,kdenhartog,kdenhartog,kdenhartog,13/Nov/18 6:50 AM,25/May/19 1:32 AM,28/Oct/23 2:49 AM,01/Feb/19 5:20 AM,,,,,,,,1.8.0,,libindy,,,,,0,,,,This aligns with HIPE #43 AMES.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwsp0:",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),13.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),kdenhartog,,,,,,,,,,,,,,,,,,,,,
Add support for ISSUANCE_ON_DEMAND option in creating revocable credentials,IS-1074,35321,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,DouglasWightman,dkulic,dkulic,14/Nov/18 1:26 AM,19/Sep/19 1:50 AM,28/Oct/23 2:49 AM,,,,,,,,,,,libvcx,,,,,0,,,,"Currently vcx supports only ISSUANCE_BY_DEFAULT.

Add support for ISSUANCE_ON_DEMAND.

 

-Add revocation to libvcx, python wrapper, and node wrapper.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-949,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1080,,,No,,Unset,No,,,"1|hzzynz:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,VladimirVujovic,,,,,,,,,"14/Nov/18 1:40 AM;VladimirVujovic;Ticket created and will be done as part of following backlog https://evernym.atlassian.net/browse/ON-32;;;",,,,,,,,,,,
Cache information to speed up sending a proof,IS-1075,35322,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dkulic,dkulic,dkulic,14/Nov/18 1:34 AM,08/Oct/19 11:08 PM,28/Oct/23 2:49 AM,24/May/19 10:59 PM,,,,,,,,1.9.0,,libvcx,,,,,0,,,,"*Acceptance Criteria*
* Cache schema definitions and credential definitions so that a ledger read is not required in order to generate a proof.
* The cached definitions should be refreshed monthly so that they are available when required.
* The length of time for the cache to be refreshed should be configurable.
* There should be an API call to force a cache refresh.
* If a generated proof is found to be invalid, the cached definitions should be refreshed before the proof is re-generated.

*Notes*
* If the cached definitions are out-of-date, the generated proof will fail.
* Sending a proof should take less than 2 seconds.",,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1816,,,,IS-1016,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1082,,,No,,Unset,No,,,"1|hzzyo7:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,sergey.minaev,VladimirVujovic,,,,,,,,"14/Nov/18 1:41 AM;VladimirVujovic;Ticket will be done as part of following backlog: https://evernym.atlassian.net/browse/ON-21;;;","24/May/19 10:58 PM;sergey.minaev;Done in PR [https://github.com/hyperledger/indy-sdk/pull/1605];;;",,,,,,,,,,
Standardize code format using Rustfmt,IS-1076,35325,,Task,Complete,IS,Indy SDK,software,resplin,,,Low,Invalid,,kdenhartog,kdenhartog,14/Nov/18 3:02 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,,,,,,,,0,,,,"run the libindy codebase and rust code through Rustfmt crate to format the code in a standard way. This is similar to pep-8 in python.

[~gudkov] [~sergey.minaev] [~Artemkaaas]

What are your thoughts on this? I think it would be an easy ticket for a new person to take on.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzyov:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),kdenhartog,,,,,,,,,,,,,,,,,,,,,
Review: Revocation support in VCX PoA and PRs,IS-1077,35341,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,14/Nov/18 10:41 PM,25/May/19 1:33 AM,28/Oct/23 2:49 AM,20/Dec/18 6:27 PM,,,,,,,,1.7.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-949,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvp9:r",,,,Unset,Unset,EV 18.23,EV 18.24,EV 18.25,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Support multiple Indy DIDs in the same wallet,IS-1078,35366,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,,esplinr,esplinr,15/Nov/18 7:44 AM,30/Aug/19 11:33 PM,28/Oct/23 2:49 AM,30/Aug/19 11:33 PM,,,,,,,,,,wallet,,,,,0,,,,"*Story*
As a developer building applications for Indy networks, I want my wallet to be able to store DIDs from multiple networks: Sovrin Main, Sovrin Test, my development network, and my corporate network. This will make it easier to develop, test, and demo my applications.",,,,,,,,,,,,,,,,,,,,,,,,IS-1360,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eq",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Investigate the reasons of CD pipeline fails,IS-1079,35379,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,sergey.minaev,sergey.minaev,15/Nov/18 8:41 PM,23/May/19 1:37 AM,28/Oct/23 2:49 AM,19/Nov/18 10:50 PM,,,,,,,,1.7.0,,,,,,,0,,,,During last week we see a lot of failures of IndySDK CD master.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzy9z:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,sergey.minaev,,,,,,,,,"15/Nov/18 8:43 PM;sergey.minaev;The reason for major part of fails  is typo in CD. It's affected only RHEL branch and hide the problem in some meaning.
Fix https://github.com/hyperledger/indy-sdk/pull/1290;;;","19/Nov/18 10:50 PM;gudkov;Fix allowed us to get new master build.;;;",,,,,,,,,,
LibVCX API refactoring,IS-1080,35385,,Epic,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,15/Nov/18 11:23 PM,21/Jan/20 8:59 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-13,,LibVCX API refactoring,To Do,No,,Unset,No,,,"1|hzzyzz:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
LibVCX should handle multiple wallets,IS-1081,35387,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,15/Nov/18 11:26 PM,08/Oct/19 10:26 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,LibVCX should accept LibIndy wallet handles instead of managing its own wallets.,,,,,,,,,,,,,,,,,,,,,,,,IS-944,,IS-947,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1080,,,No,,Unset,No,,,"1|hzwvtc:r",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"07/Feb/19 12:54 AM;esplinr;From  [~ianco]:
I want the ability to pass a wallet handle to VCX (rather than wallet name and password). Currently if I'm already logged into the wallet I have to logout, and then login again after the VCX call, which is not convenient.;;;",,,,,,,,,,,
Handle slow ledger reads,IS-1082,35422,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,esplinr,esplinr,17/Nov/18 4:11 AM,08/Oct/19 10:46 PM,28/Oct/23 2:49 AM,08/Oct/19 10:43 PM,,,,,,,,,,libindy,,,,,0,,,,"*Story*
As a user of an application build on an Indy network, my application should always respond within 2 seconds of my requesting an action so that I have confidence my credentials are available when I need them.

*Background*
Sometimes libIndy will make a read request to a ledger node that is slow to respond. LibIndy should employ multiple strategies  to ensure a good user experience even in these situations.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-1,,Slow Ledger Reads,Done,No,,Unset,No,,,"1|hzzz8f:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Force a re-try after a non-response from the ledger,IS-1083,35424,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,17/Nov/18 4:41 AM,08/Oct/19 10:42 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"If an application using the Indy SDK is waiting for a response from the ledger, there should be a way to force it to try again with a different node.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1397,,,No,,Unset,No,,,"1|hzzz8v:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,mgbailey,,,,,,,,"31/Jan/19 6:05 AM;mgbailey;[~esplinr] is there a ticket allowing a read to have a preferred source? We need this on the radar.;;;","09/Aug/19 8:06 PM;Artemkaaas;Libindy allows specifying of a list of pre-ordered nodes as a field of config json in `indy_open_pool_ledger` command.
https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/api/pool.rs#L72
It was done in the scope of IS-834;;;",,,,,,,,,,
LibIndy return status on read requests for the UI,IS-1084,35425,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,17/Nov/18 4:42 AM,08/Oct/19 10:42 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"*Story*
As an application developer building a solution that uses the Indy SDK to talk to an Indy network, I need to be able to update the user interface on the status of long read requests.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1397,,,No,,Unset,No,,,"1|hzzz93:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Request reads from multiple nodes,IS-1085,35426,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,17/Nov/18 4:44 AM,30/May/20 8:59 AM,28/Oct/23 2:49 AM,27/Mar/19 3:33 PM,,,,,,,,1.8.2,,libindy,,,,,1,EV-CS,,,"*Story*
As a developer building an application using the Indy SDK, I want all read requests to go to multiple nodes so that I can complete my operations with the response from the fastest one.

*Acceptance Criteria*
* Read requests should query X nodes, and return the result from the one that first responds.
* The value for X should be configurable.
* The default of X should be 2.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1305,IS-1348,,,IS-1208,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1082,,,No,,Unset,No,,,"1|hzwrhj:910wyi",,,,Unset,Unset,EV 19.06,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,mgbailey,VladimirWork,,,,,,,,"28/Feb/19 6:58 AM;esplinr;The behavior of LibIndy 1.8.1 is to exponentially increase the number of nodes that are being queried. The first read-request goes to one node, and if it fails then the follow-up request goes to two nodes, then four, etc. We start with one node in order to minimize load on the ledger.;;;","26/Mar/19 11:05 PM;VladimirWork;Build Info:
libindy 1.8.2~64 rc

Actual Results:
It looks like we do SendOneRequest twice to the same Node:
{noformat}
019-03-26 16:37:20,365 	src/services/pool/networker.rs:62 | sending new request
2019-03-26 16:37:20,365 	src/services/pool/networker.rs:251 | is_active >> time worked: Duration { secs: 0, nanos: 779407831 }
2019-03-26 16:37:20,365 	src/services/pool/networker.rs:253 | is_active << true
2019-03-26 16:37:20,365 	src/services/pool/networker.rs:70 | existing connection unavailable
2019-03-26 16:37:20,365 	src/services/pool/networker.rs:86 | send request in new conn
2019-03-26 16:37:20,365 	src/services/pool/networker.rs:183 | PoolConnection::new: from nodes [RemoteNode { name: ""Node3"", public_key: [79, 5, 67, 174, 174, 29, 149, 231, 155, 21, 224, 85, 146, 120, 150, 148, 59, 245, 158, 37, 83, 26, 154, 135, 77, 138, 28, 147, 175, 47, 27, 119], zaddr: ""tcp://10.0.0.4:9706"", is_blacklisted: false }, RemoteNode { name: ""Node1"", public_key: [245, 162, 146, 125, 78, 184, 226, 60, 221, 1, 103, 194, 231, 134, 97, 57, 147, 89, 13, 171, 80, 230, 214, 139, 195, 130, 29, 243, 184, 195, 79, 31], zaddr: ""tcp://10.0.0.2:9702"", is_blacklisted: false }, RemoteNode { name: ""Node5"", public_key: [41, 187, 234, 133, 43, 242, 111, 244, 252, 245, 236, 183, 36, 145, 244, 169, 101, 126, 186, 216, 224, 244, 179, 97, 70, 247, 99, 222, 247, 163, 79, 16], zaddr: ""tcp://10.0.0.6:9710"", is_blacklisted: false }, RemoteNode { name: ""Node4"", public_key: [196, 24, 141, 31, 105, 237, 27, 65, 201, 62, 59, 55, 193, 242, 181, 53, 42, 157, 34, 231, 131, 64, 176, 60, 30, 210, 123, 110, 169, 191, 133, 26], zaddr: ""tcp://10.0.0.5:9708"", is_blacklisted: false }, RemoteNode { name: ""Node7"", public_key: [239, 13, 240, 165, 23, 18, 154, 242, 21, 175, 105, 55, 135, 9, 50, 194, 194, 110, 72, 21, 144, 164, 196, 129, 242, 196, 102, 198, 229, 214, 155, 87], zaddr: ""tcp://10.0.0.8:9714"", is_blacklisted: false }, RemoteNode { name: ""Node6"", public_key: [169, 63, 90, 144, 217, 229, 243, 51, 122, 163, 28, 93, 107, 87, 138, 190, 137, 26, 243, 155, 117, 182, 28, 1, 13, 244, 231, 86, 194, 217, 112, 108], zaddr: ""tcp://10.0.0.7:9712"", is_blacklisted: false }, RemoteNode { name: ""Node2"", public_key: [221, 7, 213, 25, 70, 73, 199, 226, 112, 254, 71, 75, 167, 252, 229, 6, 9, 164, 175, 172, 99, 45, 152, 229, 52, 56, 128, 121, 246, 160, 155, 14], zaddr: ""tcp://10.0.0.3:9704"", is_blacklisted: false }]
2019-03-26 16:37:20,365 	src/services/pool/networker.rs:258 | send_request >> pe: Some(SendOneRequest(""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""dest\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""type\"":\""105\""},\""protocolVersion\"":2,\""reqId\"":1553607440353089855,\""signature\"":\""3iZGeSZNVKFVPxuZHEVGbaPEpij3AGc3ADFpVyKBHbjV1fuFA2GUZSNM7Lrzk4c7XRRJxscqt4N5y5V7xZjWRSUT\""}"", ""1553607440353089855"", 20))
2019-03-26 16:37:20,366 	src/services/pool/networker.rs:322 | _send_msg_to_one_node >> idx 0, req_id 1553607440353089855, req {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""dest"":""V4SGRU86Z58d6TV7PBUe6f"",""type"":""105""},""protocolVersion"":2,""reqId"":1553607440353089855,""signature"":""3iZGeSZNVKFVPxuZHEVGbaPEpij3AGc3ADFpVyKBHbjV1fuFA2GUZSNM7Lrzk4c7XRRJxscqt4N5y5V7xZjWRSUT""}
2019-03-26 16:37:20,366 	src/services/pool/networker.rs:334 | _get_socket: open new socket for node 0
2019-03-26 16:37:20,366 	src/services/pool/networker.rs:328 | _send_msg_to_one_node <<
2019-03-26 16:37:20,366 	src/services/pool/networker.rs:288 | send_request <<
2019-03-26 16:37:20,367 	src/services/pool/networker.rs:77 | send request in existing conn
2019-03-26 16:37:20,367 	src/services/pool/networker.rs:258 | send_request >> pe: Some(SendOneRequest(""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""dest\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""type\"":\""105\""},\""protocolVersion\"":2,\""reqId\"":1553607440353089855,\""signature\"":\""3iZGeSZNVKFVPxuZHEVGbaPEpij3AGc3ADFpVyKBHbjV1fuFA2GUZSNM7Lrzk4c7XRRJxscqt4N5y5V7xZjWRSUT\""}"", ""1553607440353089855"", 20))
2019-03-26 16:37:20,367 	src/services/pool/networker.rs:322 | _send_msg_to_one_node >> idx 0, req_id 1553607440353089855, req {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""dest"":""V4SGRU86Z58d6TV7PBUe6f"",""type"":""105""},""protocolVersion"":2,""reqId"":1553607440353089855,""signature"":""3iZGeSZNVKFVPxuZHEVGbaPEpij3AGc3ADFpVyKBHbjV1fuFA2GUZSNM7Lrzk4c7XRRJxscqt4N5y5V7xZjWRSUT""}
2019-03-26 16:37:20,367 	src/services/pool/networker.rs:328 | _send_msg_to_one_node <<
2019-03-26 16:37:20,367 	src/services/pool/networker.rs:288 | send_request <<
2019-03-26 16:37:20,386 	src/services/pool/pool.rs:550 | received pool event: Some(NodeReply(""{\""reqId\"":1553607440353089855,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""op\"":\""REQACK\""}"", ""Node2""))
2019-03-26 16:37:20,387 	src/services/pool/pool.rs:397 | received reply from node ""Node2"": ""{\""reqId\"":1553607440353089855,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""op\"":\""REQACK\""}""
2019-03-26 16:37:20,390 	src/services/pool/pool.rs:550 | received pool event: Some(NodeReply(""{\""result\"":{\""type\"":\""105\"",\""state_proof\"":{\""root_hash\"":\""EvptKRBjtxbuz9FW3C6iQx5vt6EoJdd62ijVi6NKSceK\"",\""multi_signature\"":{\""signature\"":\""R6HsqghVUzYcf9kyhAagf4TGgg52RkGu5UznvHLUe4wmACNEmyiujz8FwNt91pXbEDtRcX9KBJnMEYn4ts3mE6tonLS6FaaDCHYFTSayv4ehViFfFB79gSFhWsQ4K9xddcitYTexrAGWZ8gumAFGm7Dp9RRY5cv3kXJvaoHvaBuyxB\"",\""value\"":{\""pool_state_root_hash\"":\""AyA4Yuk4GkME75JwzJBVCiax61hzhJjVpzHVYC1Gw5sh\"",\""state_root_hash\"":\""EvptKRBjtxbuz9FW3C6iQx5vt6EoJdd62ijVi6NKSceK\"",\""timestamp\"":1553607279,\""txn_root_hash\"":\""Evvf4EwVXngnGbfgWmR2zYYjF2R1pq1e7ztXjZhfw1mS\"",\""ledger_id\"":1},\""participants\"":[\""Node6\"",\""Node4\"",\""Node3\"",\""Node1\"",\""Node7\""]},\""proof_nodes\"":\""+QMq+IGgIL3tL9rLCaNhaLueITfpAXOXuPKY3xpts7IFO2f\\/3IK4XvhcuFp7ImlkZW50aWZpZXIiOm51bGwsInJvbGUiOiIwIiwic2VxTm8iOjEsInR4blRpbWUiOm51bGwsInZlcmtleSI6In5Db1JFUjYzRFZZbldadEs4dUF6TmJ4In34sYCAgICgadHWs8iJ2mDFvlOq8dMok9No7v6chcAGOJZBZFLopcyg8Pafq\\/M+EyCbhK1frtr8huL+S5Mul2JTtIt8zDDFDqyAgKD2II1jfI3jgDcq2Gjho2tgZ\\/WllZg6\\/Uqm7\\/Mx0qW6kKCVea2xZlEF1WQlMBskbxjhlJXGtb58Pwug0ZUSTwjqpKBUT8SJZ2SRZsel1hR3W6igTWoM7NLQA6BW+6C+ERTHRoCAgICAgPkB8aBNV3TK\\/Xl+V5dN+OvVAb526MLsnnX+s+URFDQBmgBU\\/qB+TreFBYNTU7gs3cvtO5xSOwXjpc8+ePMDOqmWvkuF\\/6CjIqfxjX0uplflYRor4SOh2xVl9yVNvK6dSK4cmxg3pKCamro+9EH\\/vrNION29c750BMkCYdpXzasRUbZmgA75MKBk4Y7Qk\\/CVTOYO3NPLFU2ku\\/6RCUFqZvEsl+isz69WdqCvAh2B3TiFbx674DQZy\\/DF6Alki7FwS8tN8HKl7LEOjKDsb7g9\\/KXsLKRfsdCEDOtgj76LhuhhsuKHZCiSW4lfmaBae72f+ASD6vaGVq0h5q+lp8qCRwqaW6eJWyMKLnvTE6DcSopVzBN7Uw+83ixA1wmKNAkUKDR9LJDx47\\/ZDXAqqICgE51qiSZpF8xf9k1wCs+vcqZ8rUXoqNrzfG\\/x59OxCc+g7Z2rWOtEcBK0RfRHkSv9oGOKeszJrY+iJk8dEmdYOKWg5pMyVdol04vYx9blJyXBzMwuT2mY+ridNjzocWnwe7KgSPFxE7GIAdYVFQHY6GY9m5Fi6UqwOZuEC3Vx+Yrja9GgG6BzHSqYPnFTV5lWowbE46w9sZ4UcCA1LewmFX9SOaKgrRePjX+otLhtN1zoq2L2aEFbQIQcHjTeXK4AvY7Shb2A\""},\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""data\"":\""{\\\""dest\\\"":\\\""V4SGRU86Z58d6TV7PBUe6f\\\"",\\\""identifier\\\"":null,\\\""role\\\"":\\\""0\\\"",\\\""seqNo\\\"":1,\\\""txnTime\\\"":null,\\\""verkey\\\"":\\\""~CoRER63DVYnWZtK8uAzNbx\\\""}\"",\""seqNo\"":1,\""reqId\"":1553607440353089855,\""dest\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""txnTime\"":null},\""op\"":\""REPLY\""}"", ""Node2""))
2019-03-26 16:37:20,390 	src/services/pool/pool.rs:397 | received reply from node ""Node2"": ""{\""result\"":{\""type\"":\""105\"",\""state_proof\"":{\""root_hash\"":\""EvptKRBjtxbuz9FW3C6iQx5vt6EoJdd62ijVi6NKSceK\"",\""multi_signature\"":{\""signature\"":\""R6HsqghVUzYcf9kyhAagf4TGgg52RkGu5UznvHLUe4wmACNEmyiujz8FwNt91pXbEDtRcX9KBJnMEYn4ts3mE6tonLS6FaaDCHYFTSayv4ehViFfFB79gSFhWsQ4K9xddcitYTexrAGWZ8gumAFGm7Dp9RRY5cv3kXJvaoHvaBuyxB\"",\""value\"":{\""pool_state_root_hash\"":\""AyA4Yuk4GkME75JwzJBVCiax61hzhJjVpzHVYC1Gw5sh\"",\""state_root_hash\"":\""EvptKRBjtxbuz9FW3C6iQx5vt6EoJdd62ijVi6NKSceK\"",\""timestamp\"":1553607279,\""txn_root_hash\"":\""Evvf4EwVXngnGbfgWmR2zYYjF2R1pq1e7ztXjZhfw1mS\"",\""ledger_id\"":1},\""participants\"":[\""Node6\"",\""Node4\"",\""Node3\"",\""Node1\"",\""Node7\""]},\""proof_nodes\"":\""+QMq+IGgIL3tL9rLCaNhaLueITfpAXOXuPKY3xpts7IFO2f\\/3IK4XvhcuFp7ImlkZW50aWZpZXIiOm51bGwsInJvbGUiOiIwIiwic2VxTm8iOjEsInR4blRpbWUiOm51bGwsInZlcmtleSI6In5Db1JFUjYzRFZZbldadEs4dUF6TmJ4In34sYCAgICgadHWs8iJ2mDFvlOq8dMok9No7v6chcAGOJZBZFLopcyg8Pafq\\/M+EyCbhK1frtr8huL+S5Mul2JTtIt8zDDFDqyAgKD2II1jfI3jgDcq2Gjho2tgZ\\/WllZg6\\/Uqm7\\/Mx0qW6kKCVea2xZlEF1WQlMBskbxjhlJXGtb58Pwug0ZUSTwjqpKBUT8SJZ2SRZsel1hR3W6igTWoM7NLQA6BW+6C+ERTHRoCAgICAgPkB8aBNV3TK\\/Xl+V5dN+OvVAb526MLsnnX+s+URFDQBmgBU\\/qB+TreFBYNTU7gs3cvtO5xSOwXjpc8+ePMDOqmWvkuF\\/6CjIqfxjX0uplflYRor4SOh2xVl9yVNvK6dSK4cmxg3pKCamro+9EH\\/vrNION29c750BMkCYdpXzasRUbZmgA75MKBk4Y7Qk\\/CVTOYO3NPLFU2ku\\/6RCUFqZvEsl+isz69WdqCvAh2B3TiFbx674DQZy\\/DF6Alki7FwS8tN8HKl7LEOjKDsb7g9\\/KXsLKRfsdCEDOtgj76LhuhhsuKHZCiSW4lfmaBae72f+ASD6vaGVq0h5q+lp8qCRwqaW6eJWyMKLnvTE6DcSopVzBN7Uw+83ixA1wmKNAkUKDR9LJDx47\\/ZDXAqqICgE51qiSZpF8xf9k1wCs+vcqZ8rUXoqNrzfG\\/x59OxCc+g7Z2rWOtEcBK0RfRHkSv9oGOKeszJrY+iJk8dEmdYOKWg5pMyVdol04vYx9blJyXBzMwuT2mY+ridNjzocWnwe7KgSPFxE7GIAdYVFQHY6GY9m5Fi6UqwOZuEC3Vx+Yrja9GgG6BzHSqYPnFTV5lWowbE46w9sZ4UcCA1LewmFX9SOaKgrRePjX+otLhtN1zoq2L2aEFbQIQcHjTeXK4AvY7Shb2A\""},\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""data\"":\""{\\\""dest\\\"":\\\""V4SGRU86Z58d6TV7PBUe6f\\\"",\\\""identifier\\\"":null,\\\""role\\\"":\\\""0\\\"",\\\""seqNo\\\"":1,\\\""txnTime\\\"":null,\\\""verkey\\\"":\\\""~CoRER63DVYnWZtK8uAzNbx\\\""}\"",\""seqNo\"":1,\""reqId\"":1553607440353089855,\""dest\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""txnTime\"":null},\""op\"":\""REPLY\""}""
{noformat}

Expected Results:
We should send requests to 2 different nodes.;;;","27/Mar/19 3:33 PM;VladimirWork;Build Info:
libindy 1.8.1~1043 master

Actual Results:
There are 2 requests sent to 2 different nodes.
{noformat}
2019-03-27 09:29:23,220 	src/services/pool/networker.rs:86 | send request in new conn
2019-03-27 09:29:23,220 	src/services/pool/networker.rs:183 | PoolConnection::new: from nodes [RemoteNode { name: ""Node5"", public_key: [41, 187, 234, 133, 43, 242, 111, 244, 252, 245, 236, 183, 36, 145, 244, 169, 101, 126, 186, 216, 224, 244, 179, 97, 70, 247, 99, 222, 247, 163, 79, 16], zaddr: ""tcp://10.0.0.6:9710"", is_blacklisted: false }, RemoteNode { name: ""Node7"", public_key: [239, 13, 240, 165, 23, 18, 154, 242, 21, 175, 105, 55, 135, 9, 50, 194, 194, 110, 72, 21, 144, 164, 196, 129, 242, 196, 102, 198, 229, 214, 155, 87], zaddr: ""tcp://10.0.0.8:9714"", is_blacklisted: false }, RemoteNode { name: ""Node1"", public_key: [245, 162, 146, 125, 78, 184, 226, 60, 221, 1, 103, 194, 231, 134, 97, 57, 147, 89, 13, 171, 80, 230, 214, 139, 195, 130, 29, 243, 184, 195, 79, 31], zaddr: ""tcp://10.0.0.2:9702"", is_blacklisted: false }, RemoteNode { name: ""Node3"", public_key: [79, 5, 67, 174, 174, 29, 149, 231, 155, 21, 224, 85, 146, 120, 150, 148, 59, 245, 158, 37, 83, 26, 154, 135, 77, 138, 28, 147, 175, 47, 27, 119], zaddr: ""tcp://10.0.0.4:9706"", is_blacklisted: false }, RemoteNode { name: ""Node2"", public_key: [221, 7, 213, 25, 70, 73, 199, 226, 112, 254, 71, 75, 167, 252, 229, 6, 9, 164, 175, 172, 99, 45, 152, 229, 52, 56, 128, 121, 246, 160, 155, 14], zaddr: ""tcp://10.0.0.3:9704"", is_blacklisted: false }, RemoteNode { name: ""Node6"", public_key: [169, 63, 90, 144, 217, 229, 243, 51, 122, 163, 28, 93, 107, 87, 138, 190, 137, 26, 243, 155, 117, 182, 28, 1, 13, 244, 231, 86, 194, 217, 112, 108], zaddr: ""tcp://10.0.0.7:9712"", is_blacklisted: false }, RemoteNode { name: ""Node4"", public_key: [196, 24, 141, 31, 105, 237, 27, 65, 201, 62, 59, 55, 193, 242, 181, 53, 42, 157, 34, 231, 131, 64, 176, 60, 30, 210, 123, 110, 169, 191, 133, 26], zaddr: ""tcp://10.0.0.5:9708"", is_blacklisted: false }]
2019-03-27 09:29:23,221 	src/services/pool/networker.rs:258 | send_request >> pe: Some(SendOneRequest(""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""dest\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""type\"":\""105\""},\""protocolVersion\"":2,\""reqId\"":1553668163213511759,\""signature\"":\""4JATFeLU2AcSegG67v9jqtvyLh5vdZKFE4d8Z3o51aWUBbcBE9t3VDCfS34YP2BTezb87V981iWZmdSsZnxY9s6K\""}"", ""1553668163213511759"", 20))
2019-03-27 09:29:23,221 	src/services/pool/networker.rs:322 | _send_msg_to_one_node >> idx 0, req_id 1553668163213511759, req {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""dest"":""V4SGRU86Z58d6TV7PBUe6f"",""type"":""105""},""protocolVersion"":2,""reqId"":1553668163213511759,""signature"":""4JATFeLU2AcSegG67v9jqtvyLh5vdZKFE4d8Z3o51aWUBbcBE9t3VDCfS34YP2BTezb87V981iWZmdSsZnxY9s6K""}
2019-03-27 09:29:23,221 	src/services/pool/networker.rs:334 | _get_socket: open new socket for node 0
2019-03-27 09:29:23,221 	src/services/pool/networker.rs:328 | _send_msg_to_one_node <<
2019-03-27 09:29:23,221 	src/services/pool/networker.rs:288 | send_request <<
2019-03-27 09:29:23,221 	src/services/pool/networker.rs:77 | send request in existing conn
2019-03-27 09:29:23,221 	src/services/pool/networker.rs:258 | send_request >> pe: Some(Resend(""1553668163213511759"", 20))
2019-03-27 09:29:23,222 	src/services/pool/networker.rs:322 | _send_msg_to_one_node >> idx 1, req_id 1553668163213511759, req {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""dest"":""V4SGRU86Z58d6TV7PBUe6f"",""type"":""105""},""protocolVersion"":2,""reqId"":1553668163213511759,""signature"":""4JATFeLU2AcSegG67v9jqtvyLh5vdZKFE4d8Z3o51aWUBbcBE9t3VDCfS34YP2BTezb87V981iWZmdSsZnxY9s6K""}
2019-03-27 09:29:23,222 	src/services/pool/networker.rs:334 | _get_socket: open new socket for node 1
2019-03-27 09:29:23,222 	src/services/pool/networker.rs:328 | _send_msg_to_one_node <<
2019-03-27 09:29:23,222 	src/services/pool/networker.rs:288 | send_request <<
{noformat}
;;;","07/Aug/19 10:15 PM;esplinr;Because the timeout is configurable, we will waive the requirement of making a configuration option for the number of nodes to be queried.;;;","07/Aug/19 11:04 PM;mgbailey;[~esplinr] I thought I heard in yesterday's meeting that the number of nodes queried is configurable. Is this incorrect? It is fixed at 2? Where is the configuration for the timeout documented, since the default of 20 seconds is completely ridiculous?;;;","30/May/20 8:57 AM;esplinr;The number of nodes and the timeout are configurable. See ""timeout"" and ""number_read_nodes"" here:

[https://github.com/hyperledger/indy-sdk/blob/master/docs/configuration.md];;;",,,,,,
ObjC libindy wrapper binaries for 1.6.8 stable,IS-1086,35458,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,19/Nov/18 10:32 PM,21/Mar/19 6:14 PM,28/Oct/23 2:49 AM,07/Dec/18 8:42 PM,,,,,,,,1.6.8,,,,,,,0,,,,"This binaries are missed on repo.sovrin.org
Should be built from appropriate tag and published",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvp3:",,,,Unset,Unset,EV 18.24,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,MichaelWang,sergey.minaev,,,,,,,,"05/Dec/18 9:20 PM;sergey.minaev;https://repo.sovrin.org/ios/libindy/stable/indy-objc/1.6.8/libindy-objc.zip is available and appropriate podspec is in master;;;","07/Dec/18 8:42 PM;sergey.minaev;Published artifacts pass installation (via CocoaPods) check ;;;","12/Mar/19 1:32 PM;MichaelWang;With this, the Indy-framework could be built just with `pod install`, right?

I have tried this. But not sure the difference between this method and previous xcode build method.;;;",,,,,,,,,
Investigate the reason of slow proof generation VCX,IS-1087,35459,,Task,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,,sergey.minaev,esplinr,19/Nov/18 10:46 PM,21/Nov/18 12:49 AM,28/Oct/23 2:49 AM,21/Nov/18 12:49 AM,,,,,,,,1.6.8,,,,,,,0,EV-CS,,,"Proof generation should take less than 2 seconds from the SDK.

Proof generation in applications built by the Evernym engineering team is taking much longer. We are seeing the problem in both Android and IOS environments using Evernym's Connect.Me.

We should test that the delays are not in the time necessary for the SDK to respond.

Acceptance Criteria
* Test proof generation in the following environment:
** A proof with 10 attributes
** Using 3 different credential definitions from 3 different trust anchors
** In Android environment (using the Android Wrapper)
** At the LibVCX layer
* Report the distribution of response times.

*Notes*
* We start with the Android layer because we have more reports of slowness from that layer. Investigating IOS would also be useful.
* If the problem is identified in IS-1066, then this issue can be closed unless the team thinks further investigation would be instructive.

Reference issues (internal to Evernym):
* CM-2070 - Connect.Me shouldn't be dependent on ledger connectivity for presenting proofs
* CM-2072 - Sending a proof should take less than 2 seconds",,,,,,,,,,,,,,,,,,,,,,,IS-1066,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1082,,,No,,Unset,No,,,"1|hzwvnb:",,,,Unset,Unset,EV 18.24,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"21/Nov/18 12:49 AM;esplinr;We found the problem in IS-1066, and so I will close this issue.;;;",,,,,,,,,,,
Rust Wrapper: Use Rust wrapper in dummy agent,IS-1088,35462,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,19/Nov/18 11:50 PM,26/Nov/18 5:47 PM,28/Oct/23 2:49 AM,26/Nov/18 5:47 PM,,,,,,,,1.7.0,,,,,,,0,,,,"Dummy cloud agent now use it's own rust wrapper implementation. 
I suggest:
Switch to Rust wrapper",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzya7:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"21/Nov/18 3:06 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1302;;;","26/Nov/18 5:47 PM;sergey.minaev;Available in master since https://github.com/hyperledger/indy-sdk/pull/1313 has been merged;;;",,,,,,,,,,
Wrong Function Wrapped in VCX Java Wrapper,IS-1089,35540,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,jjensenevernym,jjensenevernym,22/Nov/18 7:42 AM,18/Dec/18 9:07 PM,28/Oct/23 2:49 AM,04/Dec/18 6:20 PM,,,,,,,,1.7.0,,libvcx,,,,,0,,,,"In [https://github.com/hyperledger/indy-sdk/blob/master/vcx/wrappers/java/src/main/java/com/evernym/sdk/vcx/issuer/IssuerApi.java] line 106.

I believe this wrapper function should wrap LibVcx.api.vcx_connection_update_state instead of LibVcx.api.vcx_connection_get_state. The latter function is already wrapped by issuerCredntialGetState on line 121. This is causing the Java wrapper not to work correctly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzy9w:",,,,Unset,Unset,EV 18.24,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,jjensenevernym,,,,,,,,"30/Nov/18 4:35 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1327;;;","04/Dec/18 6:20 PM;gudkov;Look ok, merged to master;;;",,,,,,,,,,
Invalid JSON Error Due to Missing Translation Code,IS-1090,35541,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,jjensenevernym,jjensenevernym,22/Nov/18 7:49 AM,18/Dec/18 9:07 PM,28/Oct/23 2:49 AM,07/Dec/18 8:40 PM,,,,,,,,1.7.0,,libvcx,,,,,0,,,,"In [https://github.com/hyperledger/indy-sdk/blob/master/vcx/wrappers/java/src/main/java/com/evernym/sdk/vcx/issuer/IssuerApi.java]

in the issuerCreateCredential function, I believe JSON translation code is missing. If you call this function with a simple JSON data input such as \{""key1"":""value1""} an invalid JSON error is generated later when attempting to send the credential. If you look at the equivalent function in the NodeJS wrapper at [https://github.com/hyperledger/indy-sdk/blob/master/vcx/wrappers/node/src/api/issuer-credential.ts] lines 69 and 70 contain code that alters the input JSON before passing it to libvcx.

 

I think this same translation should be added to the Java wrapper here and my testing suggests that it would fix the problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0000m:",,,,Unset,Unset,EV 18.24,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,jjensenevernym,sergey.minaev,,,,,,,,"30/Nov/18 7:53 PM;Artemkaaas;Added temporary fix that provides the same mapping: https://github.com/hyperledger/indy-sdk/pull/1328
Actually, Libvcx works with wrong credential values format.;;;","07/Dec/18 8:40 PM;sergey.minaev;OK with temporary fix. Most probably will be updated in scope IS-1101;;;",,,,,,,,,,
Release Indy SDK 1.6.8,IS-1091,35558,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,23/Nov/18 12:21 AM,22/May/19 7:38 PM,28/Oct/23 2:49 AM,23/Nov/18 6:04 PM,,,,,,,,1.6.8,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzyaf:",,,,Unset,Unset,EV 18.23,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,sergey.minaev,,,,,,,,,"23/Nov/18 6:05 PM;gudkov;1.6.8 was released. See https://github.com/hyperledger/indy-sdk/releases/tag/v1.6.8;;;","23/Nov/18 8:29 PM;sergey.minaev;Approved RC build was 1.6.8 RC 45;;;",,,,,,,,,,
Knowledge Transfer: EV 18.24 Stub,IS-1092,35565,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,23/Nov/18 5:58 PM,07/Dec/18 8:40 PM,28/Oct/23 2:49 AM,07/Dec/18 8:40 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0000f:",,,,Unset,Unset,EV 18.24,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,,,,,,,,,,,,
AMCL cross-platform (x32 and x64bit) serialization,IS-1093,35569,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,KitHat,KitHat,23/Nov/18 9:43 PM,20/Dec/18 6:26 PM,28/Oct/23 2:49 AM,20/Dec/18 6:26 PM,,,,,,,,1.7.0,,,,,,,0,,,,"As a result of investigation we found out that hex serialization and deserialization was working incorrect.

If we serialize some data on 64-bit platform and then try to deserialize and serialize it on 32-bit the source and the result won't be equal.
The reason is that we serializing not the byte-representation of big number primitives but inner representation of AMCL (which is platform dependent).
We made a decision to change the (de)serialization to byte-representation instead of inner representation.

What should be done:
1) Change the serialization (`from_hex` and `to_hex`) of BIG in AMCL
2) Fix tests in indy-crypto (update constants to fit into new format)
3) IndySDK tests should be updated if needed",,,,,,,,,,,,,,,,,,,IS-1025,,,,,,,,,,,IS-1043,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvp9:i",,,,Unset,Unset,EV 18.24,EV 18.25,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,KitHat,,,,,,,,,"27/Nov/18 11:58 PM;esplinr;This bug is in the upstream of AMCL. We are currently using an older version, so we will patch it in our version. Upgrading will require significant changes in how we use the library including a change in the serialization format.

Fixing this issue will obsolete existing revocation primitives such as registries, definitions, and proofs. 

We are not aware of any application in production that currently uses revocation (though some are in development), and there are not any revocation registries on the live ledger.

We need to evaluate what it would take to migrate these revocation primitives for the user.
* It is likely that it will only be possible to migrate the primitives on 64 bit platforms;;;","20/Dec/18 5:45 PM;KitHat;Implemented in master #906;;;",,,,,,,,,,
refactor authenticated encrypt/decrypt to service layer,IS-1094,35573,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,kdenhartog,kdenhartog,kdenhartog,24/Nov/18 11:07 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,,,,,,,,0,,,,"Moving crypto functionality from command layer to crypto layer, so it can be used in pack and unpack functionality as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwsow:",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),kdenhartog,,,,,,,,,,,,,,,,,,,,,
Add support for predicates for vcx_disclosed_proof_generate_proof,IS-1095,35628,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,DouglasWightman,dkulic,dkulic,27/Nov/18 9:49 PM,08/Oct/19 10:16 PM,28/Oct/23 2:49 AM,08/Oct/19 10:16 PM,,,,,,,,,,libvcx,,,,,0,,,,TBD,,,,,,,,,,,,,,,,,,,,,,,,,IS-1174,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx28",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,,,,,,,,,,,,,,,,,,,,,
iOS wrapper test cases fails from start.,IS-1096,35629,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MattRaffel,MichaelWang,MichaelWang,27/Nov/18 10:37 PM,22/May/19 8:07 PM,28/Oct/23 2:49 AM,02/Mar/19 6:25 AM,,,,,,,,1.7.0,,libindy,,,,,0,,,,"I can not run the test cases from the start.

The command line in CI file is as: 

*xcodebuild test -workspace Indy.xcworkspace -scheme Indy-demo  -destination 'platform=iOS Simulator,name=iPhone X,OS=12.1'*

except, I changed the OS version. But I have to add 

*-UseModernBuildSystem=NO* to make it run.

 

After that I got error: 

*ld: library not found for -lPods-Indy-demo*

*Is this because of the version cocopods too new? Or something else?*

 

*xcode version: 10.1*

*MacOS: 10.14.1*

*pod: 1.5.3*",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:912i",,,,Unset,Unset,EV 18.25,Ev 19.01,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,MattRaffel,MichaelWang,sergey.minaev,,,,,,"05/Dec/18 8:17 PM;MichaelWang;when run against xcode 10.1, the 

-UseModernBuildSystem=NO should be specified.

And modify the universal_framework.sh of iOS simulator version.

After the compilation of indy-framework, this should work.;;;","20/Dec/18 11:11 PM;esplinr;We have merged a pull request adding this support, and it works for us. But we still have reports that it has problems for others. We will continue to look into the issue.;;;","29/Dec/18 7:47 PM;sergey.minaev;[~MattRaffel] please try to reproduce issues in your env 
* for master branch
* for https://github.com/hyperledger/indy-sdk/pull/1338

Also you can find some context in related tickets in the previous one sprint;;;","05/Jan/19 2:52 AM;MattRaffel;I am not able to reproduce the error.   But that doesn't mean it isn't happening.   The issue uses a workspace which isn't checked into the repo.  So I cannot create the problem using the command above.  It sounds like [~MichaelWang] created a new project consuming Indy-sdk.   We need those files, or the steps used to create those files so we can recreate the problem.;;;","05/Jan/19 6:52 PM;MichaelWang;[~MattRaffel] I did not create a new project, just the source code from sdk repo. I think this kind of error should be from the xcode compatibility issue.;;;","08/Jan/19 12:53 AM;MattRaffel;[~MichaelWang] how did you create the workspace file?  its not part of the repo.;;;","08/Jan/19 3:17 PM;MichaelWang;it is produced automatically in the process. I did produce it firstly, but later I found it is made by the system. I just use the later one.;;;","09/Jan/19 12:23 AM;MattRaffel;[~MichaelWang] . When I run the command, I get the error the workspace does not exist.   Please review your steps and provide additional details.

{{{quote}matt.raffel@mattraffel:~/src/work/indy-sdk/wrappers/ios$ xcodebuild test -workspace Indy.xcworkspace -scheme Indy-demo  -destination 'platform=iOS Simulator,name=iPhone X,OS=12.1'
xcodebuild: error: 'Indy.xcworkspace' does not exist.
{quote}}}
{{{quote}matt.raffel@mattraffel:~/src/work/indy-sdk/wrappers/ios$ xcodebuild test -workspace Indy.xcworkspace -scheme Indy-demo  -destination 'platform=iOS Simulator,name=iPhone X,OS=12.1' -UseModernBuildSystem=NO
User defaults from command line:
    UseModernBuildSystem = NO

xcodebuild: error: 'Indy.xcworkspace' does not exist.{quote}}};;;","18/Jan/19 9:13 AM;esplinr;This has turned into more work than we expected. We are seeing multiple problems with this wrapper, but we aren't able to reproduce what [~MichaelWang] is seeing.

We are going to need to put this task aside for a month and work on completing the agent compatibility work for the Sovrin connect-all-the-agents-a-thon. We plan to pick this back up in late February 2019.

If someone identifies the problem and submits a pull request, we will make evaluating that fix a high priority.;;;","18/Jan/19 9:19 AM;MichaelWang;[~MattRaffel]   Before the command, you need some preparations, like 'pod install'. Then this file will be reproduced. This test command is the last cmd. ;;;","31/Jan/19 5:30 AM;MattRaffel;I am able to run the command successfully
bq. 2019-01-30 13:16:26.755 xcodebuild[5176:249788] [MT] IDETestOperationsObserverDebug: 242.826 elapsed -- Testing started completed.
bq. 2019-01-30 13:16:26.755 xcodebuild[5176:249788] [MT] IDETestOperationsObserverDebug: 0.000 sec, +0.000 sec -- start
bq. 2019-01-30 13:16:26.755 xcodebuild[5176:249788] [MT] IDETestOperationsObserverDebug: 242.826 sec, +242.826 sec -- end
bq. ** TEST SUCCEEDED **
bq. ;;;","12/Feb/19 6:04 PM;sergey.minaev;I suggest to mark this ticket as resolved as for now we have multiple confirmation about supporting 10.1 xcode on master and there is no latest reports about inability to build project and run tests;;;"
Migration tool for revocations from older indy-crypto versions,IS-1097,35649,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,KitHat,KitHat,28/Nov/18 6:53 PM,10/Oct/19 8:54 PM,28/Oct/23 2:49 AM,10/Oct/19 8:54 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx2c",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,KitHat,,,,,,,,,"10/Oct/19 8:54 PM;esplinr;No one has requested this tool, so we don't think it needs to be created.;;;",,,,,,,,,,,
Wallet API should support credential delete,IS-1098,35746,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,smithbk,smithbk,30/Nov/18 6:32 PM,06/Aug/19 11:31 PM,28/Oct/23 2:49 AM,06/Aug/19 11:31 PM,,,,,,,,,,libindy,wallet,,,,0,help-wanted,,,"We are using indy to implement a cloud-based wallet.
In order to meet GDPR requirements, we need the ability to delete a credential from a wallet.  Logically marking the credential as deleted at the application layer is not sufficient.",,,,,,,,,,,,,,,,,,,,,,,,IS-1221,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:zo",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,gudkov,smithbk,,,,,,,"06/Dec/18 12:10 AM;esplinr;Thank you for the suggestion [~smithbk].

We have previously discussed allowing credentials to be deleted from the wallet, but hadn't previously considered the GDPR implications of the requirement. We'll reevaluate how the requirement fits into the Evernym team backlog.

Alternatively, we would be happy to provide your team with guidance should you decide to work on the feature.;;;","18/Dec/18 1:13 AM;esplinr;Indy wallets are currently append-only, because deleting a credential accidentally could cause a user significant problems requiring the wallet to be recovered from a backup.

We recognize that at a minimum, it needs to be possible to mark a credential as being outdated.

If a user decides to leave an Indy ecosystem, deleting the wallet is sufficient for being compliant with GDPR. We are still evaluating what other compliance is necessary.

We will continue discussing how best to meet the underlying user requirement.;;;","18/Dec/18 11:59 PM;gudkov;[~smithbk] Also it would be nice if you can describe your use case in more details.

- Do you allow your cloud app to read user wallet unencrypted data? 
- Do you store data of different users in one wallet?

Any information can help. For the moment it is possible to assign tags to credentials and you app can just add DELETED tag to credential and always use !DELETED filter. 

To be GDPR compatible i see 2 ways now:

- delete the whole wallet
- Don't allow cloud app to access any unencrypted data. 

Anyway to use credential you need to have access to MasterSecret. Allowing cloud agent to use such data seems really orthogonal to SSI.;;;","10/Apr/19 11:15 PM;esplinr;Credential delete is very important for the OrgBook (VON) use case.;;;","29/Jul/19 2:10 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1588;;;",,,,,,,
anoncreds.prover_get_credentials_for_proof_req should return per-credential timestamp,IS-1099,35758,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,smithbk,smithbk,30/Nov/18 11:05 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,,,libindy,wallet,,,,0,,,,"Suppose you have two credentials in your wallet that are from the same issuer.  The value of attribute 'foo' is the same.  The only difference between these two credentials with regard to attribute 'foo' is the issuance time.

Now suppose that you need to generate a proof with attribute 'foo' from one of these credentials and you want to prompt the user to ask which credential to use.  It would be helpful to have the issuance time in order to display to the user when choosing.

The following is a sample of a single entry that is returned by anoncreds.prover_get_credentials_for_proof_req

{code}
  {'cred_info': {
    'cred_rev_id': None, 
    'cred_def_id': 'EswsMMSMaGVrwj65CX8ExX:3:CL:31:TAG1', 
    'schema_id': '6QGRQ7kcdR3Yu31YLQaP2i:2:Transcript:1.0', 
    'attrs': {'degree': 'Bachelor of Science, Marketing', 'average': '5', 'status': 'graduated', 'first_name': 'Alice', 'last_name': 'Garcia', 'ssn': '123-45-6789', 'year': '2015'}, 
    'referent': '654d8436-0373-4c5c-8c48-f1c1b99e9188', 
    'rev_reg_id': None}, 
    'interval': None
  },
{code}

Can a timestamp be added to each of these returned elements?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvtc:3",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),KitHat,smithbk,,,,,,,,,"07/Dec/18 7:41 PM;KitHat;As for now, we are not expecting two credentials with the same attribute values, same issuer and cred_def_id.
Could you please give a more detailed use case how have you got this two credentials in your wallet?;;;","14/Jan/19 11:19 AM;smithbk;We simply go through the issuance flow twice (or more).  Both times, the issuer issues the credential with the same values and the holder stores the credentials.;;;",,,,,,,,,,
Credential revocation demo is failing.,IS-1100,35767,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,,ardagumusalan,ardagumusalan,01/Dec/18 3:57 AM,04/Dec/18 1:34 AM,28/Oct/23 2:49 AM,04/Dec/18 1:34 AM,,,,,,,,1.6.7,,,,,,,0,help-wanted,,,"Hi.

I am following the demo given in the following link to understand how credential revocation works [https://github.com/hyperledger/indy-sdk/blob/master/wrappers/python/tests/demo/test_anoncreds.py]

I was able to succeed with a multi process demo with single prover but ran into a problem with multiple provers. I was able to reproduce the problem with the aforementioned demo.

When I add a new prover to the demo and issue a credential to this new prover, the original prover's verification fails IF new prover is issued a credential first. Otherwise, it still passes. 

I attached passes and fails demos. Please have a look at it whether it is a bug with revocation or a bug with my logic or the demo that I am using is not comprehensive. 

Thanks,

-Arda ",indy 1.6.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Dec/18 3:57 AM;ardagumusalan;fails.txt;https://jira.hyperledger.org/secure/attachment/16334/fails.txt","01/Dec/18 3:57 AM;ardagumusalan;passes.txt;https://jira.hyperledger.org/secure/attachment/16333/passes.txt",,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00153:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ardagumusalan,sklump,,,,,,,,,"04/Dec/18 1:33 AM;ardagumusalan;The problem was with the demo. Assigning your own timestamps was the problem. I recommend everyone to refer to this demo instead: [https://github.com/hyperledger/indy-sdk/blob/master/wrappers/python/tests/interation/test_interaction.py]

It shows how to extract the timestamps from the ledger rather than assigning your own. ;;;",,,,,,,,,,,
VCX:  Credential Values format is outdated,IS-1101,35862,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MattRaffel,Artemkaaas,Artemkaaas,04/Dec/18 11:16 PM,20/Dec/18 11:09 PM,28/Oct/23 2:49 AM,20/Dec/18 11:09 PM,,,,,,,,1.7.0,,,,,,,0,,,,"Libvcx passes `credential_values` JSON to Libindy `issuer_create_credential` API function in outdated format: 
{code:java}
{""key"": [""val1"", ""val2""]}
{code}
https://github.com/hyperledger/indy-sdk/blob/master/vcx/libvcx/src/issuer_credential.rs#L183
It's just a luck that serde_json successfully deserialize them to the actual structure is used.  
{code:java}
{""key"": {""raw"": ""val1"", ""encoded"": ""val2""}}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvlo:",,,,Unset,Unset,EV 18.25,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,MattRaffel,,,,,,,,,"06/Dec/18 2:22 AM;MattRaffel;https://github.com/hyperledger/indy-sdk/pull/1370;;;",,,,,,,,,,,
Unknown libindy error while creating a credential definition,IS-1102,35716,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,slafranca,slafranca,30/Nov/18 12:55 AM,18/Dec/18 12:23 AM,28/Oct/23 2:49 AM,17/Dec/18 6:41 PM,,,,,,,,,,,,,,,0,,,,"# Create a schema with 1100 attributes (I used a VCX python wrapper script to create my schema, the script creates the schema and outputs the Schema ID)
# Using the schema ID in VerityUI, create a credential definition 
# I get an error that says ""unknown libindy error"" and the credential definition does not get created.

The error should be more informative and should help the user understand why the call to create the credential definition failed.","Using 
libindy             1.6.8
libsovtoken         0.9.6
libvcx              0.1.27328536-fb7b7b6
VUI 433",,,,,,,,,,,,,,,,,,,,,,,,,INDY-1914,,,,IS-1117,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00244:",,,,Unset,Unset,EV 18.25,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashcherbakov,KitHat,slafranca,,,,,,,,"30/Nov/18 12:57 AM;slafranca;Libvcx log can be found in:  https://drive.google.com/drive/u/0/folders/16z7PJftCejKR57nnGbIXLK7vP4G4CBqW;;;","07/Dec/18 7:24 PM;KitHat;
Looked through the logs in the archive. That's what I found out:
{code:java}
11778 WARN|2018-11-28T23:26:23.224+0000 | src/utils/libindy/error_codes.rs:24 | indy-sdk error code: 307 
11779 WARN|2018-11-28T23:26:23.224+0000 | src/api/credential_def.rs:86 | vcx_credential_def_create_cb(command_handle: 0, rc: 1035-Unknown libindy error, credentialdef_handle: 0), source_id: """"
11780 INFO|2018-11-28T23:26:23.224+0000 | src/api/vcx.rs:216 | vcx_error_message(error_code: 1035)
{code}
307 stands for ledger timeout. Seems like you got timed out for a big request. Could you please retry it ones again and if you have the same result send logs from node? That what is needed for investigation. And we need your indy-node version.;;;","10/Dec/18 10:12 PM;KitHat;Reproduced your case in clean libindy environment. Seems like the request was too big for node and it sent the reject without reqid. So it is sounds more like an issue for indy-node than indy-sdk. [~ashcherbakov] what will you say?;;;","11/Dec/18 4:59 PM;ashcherbakov;Let me proivide some context here:
1) There is a validation on the Ledger for a maximum size of a client request (transaction)
2) We do not parse JSON for txns not passing this validation, so can not get request id in a REJECT to the client.
But libiundy uses reqId to map rejects to requests, so libindy can not understand that reject was sent for this particualr txn, and it leads to timeout.
3) The biggest txn is CLAIM_DEF since it contains a public key which is big.
4) So, according to the current max txn size settings on the ledger, CLAIM_DEF for a SCHEMA with ~150 attributes pass validation.
5) SCHEMA txns are not so big, and we can creates SCHEMAs for thousands of attruibutes. However, the corresponding CLAIM_DEFs will not pass the validation, and it ay be surprising, especially if SCHEMA is sent by another organization.

*Possible Options on how to fix it*:
*O1: Fix in Ledger:*
Get reqId from requests not passing max size validation, and send Rejects with reqId
Pros:
- correct error handling on libindy size
Cons:
- we will have to somehow parse huge txns to get reqId. If the serialization format will be binary (MsgPack for example), it may be a problem, if we don't want to deserialize the whole huge msg,
- If we got such a REJECT for CLAIM_DEF, it means that a new SCHEMA needs to be created with less atrributes there. If SCHEMA was created by aniother organization it can be a problem.

*O2: Fix in libindy*
Do the same checks for max size as Node does before sending a txn
Pros:
- correct error handling on libindy size
- no need to parse huge txn on the Ledger side
Cons:
- The same problem with huge CLAIM_DEFs for already posted SCHEMAs

*O3: add validation for max number of attributes in SCHEMA*
In order to get rid of the Cons mentioned above, it may be better to not allow posting SCHEMAs for which we will have huge CLAIM_DEFS for sure.
It may also require changing max txn size.


We think that O3 is the options we should go with.
We just need to understand what is a reasonable number of attributes.;;;","17/Dec/18 6:41 PM;KitHat;We have chosen to set a limit on number of attributes in schema on indy-node side so we can count this as done.;;;",,,,,,,
Add dates to the release notes,IS-1103,35895,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,05/Dec/18 11:36 PM,20/Dec/18 5:40 PM,28/Oct/23 2:49 AM,20/Dec/18 5:40 PM,,,,,,,,1.7.0,,,,,,,0,,,,The release notes for Indy SDK should mention the date of each release so that people have that information in the code repository and don't have to go back to JIRA or GitHub to find it.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00246:w",,,,Unset,Unset,EV 18.25,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,gudkov,,,,,,,,"20/Dec/18 3:18 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1372;;;","20/Dec/18 5:40 PM;gudkov;Look ok, PR merged;;;",,,,,,,,,,
VCX logging API in mobile artifacts,IS-1104,35897,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,06/Dec/18 12:05 AM,20/Dec/18 6:27 PM,28/Oct/23 2:49 AM,20/Dec/18 6:27 PM,,,,,,,,1.8.0,,libvcx,,,,,0,,,,The new logging API should be exposed in the AAR and cocoapod  so that it can easily be consumed in mobile applications.,,,,,,,,,,,,IS-950,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00246:z",,,,Unset,Unset,EV 18.25,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,gudkov,,,,,,,,"13/Dec/18 3:34 PM;Artemkaaas;VCX Java wrapper already pipes logs from libvcx and libindy on library loading (use slf4j logging facade). 
It has been done in the scope of IS-952. 
As I know Android AAR artifacts builds based on Java wrapper. So, logs should be available on the last master build. The building of android artifact isn't part of our CD process. So, AAR should be built manually.;;;","14/Dec/18 7:20 PM;Artemkaaas;The following functions have been added in `libindy objective c` and `libvcx objective c` wrapper:
* setLogger - to pass a custom function that will be invoked on logging a record. 
* setDefaultLogger - to activate default libraries logger implementation.

PR: https://github.com/hyperledger/indy-sdk/pull/1353/files;;;","20/Dec/18 6:27 PM;gudkov;Looks ok;;;",,,,,,,,,
ItemNotFound error is not very informative,IS-1105,35931,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,pimotte,pimotte,pimotte,06/Dec/18 9:37 PM,01/Apr/19 4:06 PM,28/Oct/23 2:49 AM,01/Mar/19 3:05 PM,,,,,,,,1.8.2,,,,,,,0,,,,"I have repeatedly run into ItemNotFound errors when using indy-sdk. Most recently when accidently using a key which is not actually in the wallet. 

ItemNotFound is not very informative and investigating such bugs always starts with figuring out what type of item is actually being looked up.

My proposal is to add the type in the WalletError::ItemNotFound and add it on by mapping the error in the WalletService.

Perhaps it's also useful in case of ItemAlreadyExists.

I'd be happy to implement and contribute this, but I would like some feedback on whether this would be useful, or if there are any aspects that I'm missing.

More possibly unclear errors:
- CommonInvalidStructure: https://chat.hyperledger.org/channel/indy-sdk?msg=xop9z2ryG6smoazqi",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910uw",,,,Unset,Unset,EV 19.04,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,pimotte,,,,,,,,,"26/Feb/19 5:13 PM;Artemkaaas;Libindy provides additional function `indy_get_current_error` since 1.8.0 version.  
Here is the link on the [ticket|https://jira.hyperledger.org/browse/IS-511].
This function returns an additional error message and backtrace for last occurred error. 
In the scope of [the ticket|https://jira.hyperledger.org/browse/IS-1120] we have updated libindy wrappers to call new function internally and to fetch error details. 
So, error message and backtrace should be enough to understand what actually went wrong.
I'll check `ItemNotFound` and `AlreadyExist` error throws to confirm if message present.;;;","26/Feb/19 7:02 PM;Artemkaaas;I've added a mapping for wallet storage errors in a [PR|https://github.com/hyperledger/indy-sdk/pull/1494] to extend message.;;;","26/Feb/19 9:28 PM;pimotte;Awesome, this seems to be exactly what I was looking for!;;;","27/Feb/19 3:26 PM;Artemkaaas;build version: master-989;;;",,,,,,,,
Knowledge Transfer: EV 18.25 Stub,IS-1106,35974,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,sergey.minaev,sergey.minaev,07/Dec/18 6:57 PM,20/Dec/18 6:27 PM,28/Oct/23 2:49 AM,20/Dec/18 6:27 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0023z:",,,,Unset,Unset,EV 18.25,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Libraries (Indy and VCX) shutdown,IS-1107,36024,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,Artemkaaas,Artemkaaas,10/Dec/18 7:42 PM,08/Oct/19 10:19 PM,28/Oct/23 2:49 AM,08/Oct/19 10:19 PM,,,,,,,,,,,,,,,0,,,,"Libindy and Libvcx use `lazy-static` crate in many places.  
The most important usages are:
* CommandExecutor in Libindy
* ThreadPool in Libvcx

These structures spawn new threads for execution of commands.
For both of these structures is implemented `Drop` trait but according to this [issue|https://github.com/rust-lang-nursery/lazy-static.rs/issues/62] in lazy_static crate, `drop` function never will be called for them.  
It is an important issue for both libraries because they can have hang threads.

It's a reason of [an issue|https://jira.hyperledger.org/browse/IS-1060] in Python wrappers.

We have tried to bind destruction of these structures on any `const/static` variable but unsuccessfully.
The only solution for the current moment is adding of `shutdown` function in Libindy API. 
Libvx already has this function, so we just need to add shutdowning of ThreadPool.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1060,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx2i",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,,,,,,,,,"08/Oct/19 10:19 PM;esplinr;The Aries community has decided not to continue with LibVCX, and the shared libraries there are going to use a different threading model. Therefore, we don't plan on making improvements to the LibVCX architecture if they require significant changes.;;;",,,,,,,,,,,
In build_rev_states_json proover should be able to create multiple  revocation states,IS-1108,36032,,Improvement,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,dkulic,dkulic,10/Dec/18 11:32 PM,11/Oct/19 9:34 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libvcx,,,,,0,,,,TBD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1080,,,No,,Unset,No,,,"1|hzwrhj:910sx2o",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,DucaDellaForcoletta,esplinr,,,,,,,,"11/Oct/19 9:32 PM;esplinr;Though this functionality would be useful, we haven't had requests for creating multiple revocation states in a single call. The function can already be called multiple times if necessary. So we will close this as ""Won't Do"".;;;","11/Oct/19 9:34 PM;esplinr;There is still a TODO in the libVCX code with this ticket number, so we'll investigate it again.;;;",,,,,,,,,,
Windows CLI Payment Test,IS-1109,36068,,Bug,To Develop,IS,Indy SDK,software,resplin,,,Low,,,Artemkaaas,Artemkaaas,12/Dec/18 12:06 AM,27/Apr/19 12:19 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Indy-Cli CD pipeline often fails these [error|https://ci.evernym.com/job/Indy%20SDK%20CD/job/master/887/execution/node/2300/log/]
Seems loading of libnullpay.dll affect libindy or cli in some way.  
The next test which works with payment plugin fails.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0905",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,sergey.minaev,,,,,,,,"20/Dec/18 7:05 PM;gudkov;I tried to reproduce it locally without any success. Seems it some platform specific issue related to dll unloading that isn't used in production environment. We can't get any valuable traces on CI and can't use debugger.

Possible workarounds:
* Remove these 2 tests from windows CI (already done)
* Check during acceptance (already done)
* Make test as dedicated executable and avoid unloading

For the moment i suggest to mark it as low. May be we will get new information.;;;","09/Jan/19 9:05 PM;sergey.minaev;Debug PR (may be useful in future investigation): https://github.com/hyperledger/indy-sdk/pull/1364;;;",,,,,,,,,,
Golang Wrapper,IS-1110,36125,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,,sasiedu,sasiedu,13/Dec/18 5:59 PM,08/Oct/19 10:46 PM,28/Oct/23 2:49 AM,04/May/19 8:38 AM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-522,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-8,,GolangWrapper,Done,No,,Unset,No,,,"1|i002y7:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sasiedu,,,,,,,,,,,,,,,,,,,,,
Create wallet wrapper functions,IS-1111,36126,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,sasiedu,sasiedu,sasiedu,13/Dec/18 6:08 PM,04/May/19 8:41 AM,28/Oct/23 2:49 AM,04/May/19 8:38 AM,,,,,,,,,,,,,,,0,,,,"Create the following golang wallet wrapper functions
 # CreateWallet
 # OpenWallet
 # CloseWallet
 # DeleteWallet
 # ExportWallet
 # ImportWallet",,,,,,,,,,,,,,,,,,,,,,,,,IS-522,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1110,,,No,,Unset,No,,,"1|hzwsp0:i",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sasiedu,,,,,,,,,"15/Apr/19 11:35 PM;esplinr;PR is here:
https://github.com/hyperledger/indy-sdk/pull/1355;;;",,,,,,,,,,,
Create demo  for the revocations where ledger operations with registry definition and accumulators are highlighted,IS-1112,36128,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,olegwb,olegwb,olegwb,13/Dec/18 7:27 PM,06/Aug/19 11:30 PM,28/Oct/23 2:49 AM,06/Aug/19 11:30 PM,,,,,,,,,,libindy,,,,,0,,,,"Integration test suite of libindy features several tests and/or demonstrations of revocation functions.  All of them except one, interactions.rs , do not employ the externalization of revocation artefacts: the relevant objects exist in the memory of single process and they got exchanged between virtual Issuer/Prover/Verifier by sharing them. Real use cases involve objects shared throughout messaging and read-ledger transactions. Prover should be able to find and  obtain objects required for the creation of the revocation state and the proof from available credential(s) only.  Verifier should be acting similarly.  Another challenge is in dealing with accumulator deltas, where both prover and verifier should read the ledger state providing timestamps which make sense for the case.

Let's see what existing integration  test “[interactions.rs|http://interactions.rs/]” comprises: there are 4 tests there: issuance and revocation of one credential in default revocation registry mode, the same identical  test but with on demand revocation registry mode, the test where three credentials are issued for three different provers and the first is verified, and the same test but this time all three are verified.

The problems with ""interactions"" are the following:
#  Both test #3 and #4 do not use revocations. It makes good sense to revoke one of three credentials and to see if the verification of others is not broken.  
#  The test #4 subsumes test #3
# The test #1  has very subtle difference with test #2. 

Beside all,  It is quite difficult to read and understand the code due to flat architecture of test functions. It makes sense to factor out all operations with ledger. It also makes sense to dedicate separate functions with own lexical scope for prover and for verifier's activities. 

However there is bigger concern here regarding the usage of timestamps. All these tests seem to be bit short on showing correclty what timestamps must be used by Prover and by Verifier. Note that proper time stamping is critical for anoncred algorithms. Developers experience various sorts  of verification failures if timestamps are not used correctly. 

* The tests contain small mistakes, which diminish their usefulness as demos. For example, the timestamp used by Verifier in first test ( line 367 ) is obtained correctly from the proof, while the next test uses just a value of the variable initialised by the Prover earlier in the function( line 598). Same mistake is  presented in line 1219, test #3. Right after that Verifier shadows previous value of timestamp , and next Prover uses this new, presumably senseless value for building its proof. 

It is proposed in this ticket to add new test or to modify an existing one such as real  scenario is facilitated. The test case should be serving as integration test , as well as a good demonstration of interactions with the ledger for all parties. It would also be a bonus if  test case is able to connect to  the ledger in its non-genesis state. Such test  writes several NYM transactions to identify parties of the test on the basis of random DIDs.

Note that the author has previously implemented interaction test based upon the test from anaoncreds.rs  where revocation step has been added and few refactoring steps were applied for the clarity of test semantics. 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwsp2:",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,olegwb,,,,,,,,,"10/Jan/19 4:50 PM;Artemkaaas;Hello, [~olegwb].
Thank you for such detailed description you provided. 
I desperately agree with all the points you mentioned above. 
It really makes sense to provide a more helpful test suite demonstrated the revocation process.
Actually, these interaction.rs tests were mostly written to check base scenario and Ledger revocation related transactions work properly. 
It's why they are not user-friendly and not cover complete revocation scenario regarding users.)

I suggest to split your work into the following steps:
1) fixe mistakes you have found in the already existing interaction tests and introduce improvements you want. send a PR with these changes.
2) send a new one PR with new revocation tests on Libindy level or wrappers.
3) optionally add revocation demo into samples folder;;;","01/Feb/19 7:51 PM;olegwb;The small fix is in PR, the big change is next to go;;;","04/Feb/19 12:25 AM;olegwb;The refactoring is done, see 
[https://github.com/olegbou777/indy-sdk/blob/fix/is-1112/libindy/tests/interaction.rs]



The test suite uses new objects : Issuer, Prover and Verifier. Their implementations are self-containing: the corresponding objects hold attributes which are in the local scope of a party. The interface methods use minimum of parameters which are normally exchanged between parties in the network protocol.

The new version removes a lot of the code repetition from the current version of the test. It demonstrates the actions and responsibilities of the parties exactly as they are designed in anonymous credential algorithms. The clarity of the test algorithm is improved substantially, so the addition of new tests to the suite  should be easy.  

The small improvement has been added to the Prover's make_proof() algorithm. It adapts to whether the proof request contains predicates. That was hard-coded before.

It could make sense to extend this test suite with more revocation-related tests, e.g. issuing several credentials and revoking them out of order of issuance or something;;;",,,,,,,,,
Postgres Storage - code cleanup,IS-1113,36135,,Improvement,In Progress,IS,Indy SDK,software,resplin,,,Medium,,,ianco,ianco,13/Dec/18 9:26 PM,10/Oct/19 9:22 PM,28/Oct/23 2:49 AM,,,,,,,,,,,wallet,,,,,0,hygiene,,,"Copy/paste is much more deep than required. It makes code hard to understand and cause misleading. For example, storage don't need any cryptography and don't know anything about encoding, we don't need so deep error handling and etc...

Current code organization is also caused by copy/paste and can be simplified a lot",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1404,,,No,,Unset,No,,,"1|i002ys:",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,ianco,,,,,,,,,"17/Dec/18 5:45 PM;ianco;[~gudkov] [~sergey.minaev]  thanks for all your feedback and for taking the time to review my code.

I've reviewed the postgres_storage code:

- Removed unnecessary error codes
- Removed (duplicated) language.rs module

Other code is all required:

- utils.crypto.base64 = encoding and decoding of tags
- utils.crypto.chacha20poly1305_ietf = required for const ENCRYPTED_KEY_LEN, used by EncryptedValue, used to decode wallet storage parameters

Code organization is based on whether code is specific to postgres storage or copied from libindy:

- postgres_storage module is specific to postgres
- api, errors, utils and wallet_storage are all ""cut & paste"" copied from libindy

Please let me know if you have suggestions for how to re-organize the code.   My updates are in my repo (ianco/indy-sdk branch postgres_cleanup_1113) I haven't yet done a PR.
;;;","17/Dec/18 9:40 PM;gudkov;[~ianco] I will look to your branch ASAP. I don't understand why we need tags encoding? From storage point of view it isn't important to encode tags. All encoding should be performed by wallet and storage performs queries on plain values only. Could you explain? May be it is misunderstanding on my side. 

Also i suggest to make PR with [WIP] tag that will allow us for more efficient collaboration.;;;","19/Dec/18 2:02 AM;ianco;[~gudkov] added PR https://github.com/hyperledger/indy-sdk/pull/1371
;;;","20/Dec/18 3:46 PM;gudkov;[~ianco] Hi, Thanks for this. I added some guidance in comments to PR.;;;",,,,,,,,
Postgres Storage - Correct lazy loading and avoiding of mutex-es,IS-1114,36136,,Improvement,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,ianco,ianco,13/Dec/18 9:26 PM,10/Oct/19 9:22 PM,28/Oct/23 2:49 AM,,,,,,,,,,,wallet,,,,,0,hygiene,,,Correct lazy loading and avoiding of mutex-es,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1404,,,No,,Unset,No,,,"1|i002yt:",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ianco,,,,,,,,,,,,,,,,,,,,,
Should be able to import Python wrapper submodules,IS-1115,36150,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,14/Dec/18 7:41 AM,22/May/19 7:37 PM,28/Oct/23 2:49 AM,11/Jan/19 7:20 PM,,,,,,,,1.8.0,,python wrapper,,,,,0,,,,"I want to be able to
{code}
    import indy
{code}
Then reference the submodules from the indy namespace like:
{code}
    indy.did.<some call here>()
{code}
As it is currently, you have to pull the the submodules into your own namespace like:
{code}
    from indy import did
{code}
or
{code}
    import indy.did
{code}

Changes in the __init__.py can make this work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yu:",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dfarns,esplinr,sergey.minaev,VladimirWork,,,,,,,"08/Jan/19 7:48 AM;dfarns;I submitted PR for this btw: https://github.com/hyperledger/indy-sdk/pull/1389;;;","09/Jan/19 6:31 PM;sergey.minaev;Build with fix 1.7.0 master 918;;;","11/Jan/19 7:19 PM;VladimirWork;Build Info:
libindy 1.7.0~924
python3-indy 1.7.0.dev924

Steps to Validate:
1. Import `indy`.
2. Reference the submodules and their methods from the indy namespace:
{noformat}
indy.anoncreds.issuer_create_and_store_credential_def()
indy.did.create_and_store_my_did()
indy.pool.create_pool_ledger_config()
indy.wallet.create_wallet()
indy.ledger.build_get_ddo_request()
{noformat}

Actual Results:
Importing works as expected.;;;",,,,,,,,,
Improve error message with details ,IS-1116,36157,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,xnopre,xnopre,14/Dec/18 6:39 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,,,,,,,,0,,,,"For example, calling *createPoolLedgerConfig*, I have an error in {color:#172b4d}*poolConfig*{color}, the *genesis_txn* is missing. Running my script, I have this *CommonInvalidStructure* error not very explicit :

 
{code:java}
(node:26) UnhandledPromiseRejectionWarning: IndyError: CommonInvalidStructure
    at Object.callback (/home/indy/node_modules/indy-sdk/src/wrapIndyCallback.js:15:10)
{code}
 

If I activate logging (with *RUST_LOG=indy=trace* or with *setLogger* in last version), I have this traces which can much understand the problem with details *missing field 'genesis_txn'* :

 
{code:java}
TRACE|indy::api::pool               |                    src/api/pool.rs:36  | indy_create_pool_ledger_config: >>> config_name: 0x3f65820, config: 0x3fee560
TRACE|indy::api::pool               |                    src/api/pool.rs:39  | missing field `genesis_txn` at line 1 column 61
{code}
 

I suggest to add the details *missing field 'genesis_txn'* in the *CommonInvalidStructure* error .",,,,,,,,,,,,,,,,,,,,,,,,,IS-511,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0034n:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,xnopre,,,,,,,,,"17/Dec/18 9:44 PM;gudkov;[~xnopre] Hi, Thanks for reporting the issue. It looks like duplication for https://jira.hyperledger.org/browse/IS-511 that is already in our backlog. Could you re-check?;;;","17/Dec/18 10:40 PM;xnopre;Hi [~gudkov] . There is no description in IS-511 but yes, it seems to be duplication. But IS-511 was created one year ago... This point is very disadvantageous (painful) working all the day with the SDK... Is it possible to fix it soon ? ;;;","20/Dec/18 7:13 PM;gudkov;We will try to prioritize this.;;;",,,,,,,,,
Limit number of attributes in a schema definition,IS-1117,36215,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ozheregelya,esplinr,esplinr,18/Dec/18 12:23 AM,16/Jan/19 12:09 AM,28/Oct/23 2:49 AM,12/Jan/19 1:42 AM,,,,,,,,1.8.0,,,,,,,0,,,,"It will assist solution developers if Indy SDK validates transactions before sending them to the ledger.

*Acceptance Criteria*
* Implement a process for validating transactions.
* The SDK should limit the number of attributes at 125, and provide a clear error when that is exceeded
* Clearly document the limit",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1102,INDY-1914,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:4",,,,Unset,Unset,Ev 19.01,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,ozheregelya,,,,,,,,"09/Jan/19 6:44 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1390;;;","12/Jan/19 1:41 AM;ozheregelya;*Environment:*
indy-node 1.6.752
libindy 1.7.0~916
libindy 1.7.0~924

*Steps to Validate:*
1. Using old libindy send schema with 126 attributes.
=> Node replied with ""InvalidClientRequest(""validation error [SchemaField]: length should be at most 125 (attr_names=[...])"",""
2. Using new libindy and indy-cli send schema with 125 attributes with max length of attributes names.
=> Schema successfully written.
3. Using new libindy and indy-cli send schema with 126 attributes.
=> ""CommonInvalidStructure"" is returned by libindy.
=> ""Invalid format of command params. Please check format of posted JSONs, Keys, DIDs and etc..."" appear in indy-cli.

*Actual Results:*
Amount of attributes is limited by 125.
Restriction is documented on both of node and sdk sides. It's mentioned in indy-cli help as well.

*Additional Information:*
Libindy errors will be improved in scope of IS-511 and related tickets.;;;",,,,,,,,,,
Plan for migration to standard message formats,IS-1118,36216,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,18/Dec/18 12:48 AM,01/Feb/19 10:54 PM,28/Oct/23 2:49 AM,01/Feb/19 10:54 PM,,,,,,,,,,libindy,libvcx,,,,0,,,,"All components of the official Indy repositories should support the communication standards accepted as HIPEs.

**Acceptance Criteria**
* Review the HIPEs that document the new message formats.
* Review PRs for future HIPEs that we will need to support
* Review how these HIPEs are implemented in the indy-agent repository
* Recommend architectural changes to the Indy SDK
* Create issues to migrate the SDK from our current approach to a compatible one",,,,,,,,,,,,,,,,,,,IS-1125,,,,,,,,,,,IS-1142,IS-1144,IS-1143,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhg:",,,,Unset,Unset,Ev 19.01,EV 19.02,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"31/Jan/19 10:47 PM;sergey.minaev;HIPEs status:
 basic HIPEs already merged to master branch of the hipes repo and it's enough to start some experimental implementation. But some of them are not mature enough.
 Test suites is not implemented as there is no well defined message families.

I suggest to perform next steps for migration VCX on new A2A protocol
 1) merge PR related to Wire message HIPE (already available in master IndySDK)
 2) In current codebase of IndySDK (mostly in VCX) implement supporting new HIPEs in the next order
 * Message type, cross-domain messaging, agent message structure, attachements - IS-1144
 * Feature-discovery protocol - IS-1155
 * Message threading IS-1153
 * Test suite support - IS-1154

3)  Create HIPE about credential exchange message family IS-1125

Open questions:
 1) DIDDoc support IS-605 and related
 2) Backward compatibility problem. Current vision is reuse existing VCX API and switch behavior depending on initialization parameters.
 3) Generic A2A most probably is part of libindy itself, not VCX. I suggest to consider option to merge libindy and libvcx into single library and distinguish layers by prefixes or namespaces

Risks:
 1) there is some lack of details in HIPEs, other HIPEs don't merged yet or even not started
 2) Evrnym model of forwarding agent may be not fully compatible with new one;;;",,,,,,,,,,,
POA: DIDDoc support,IS-1119,36316,,Task,Code Review,IS,Indy SDK,software,resplin,,,Medium,,gudkov,esplinr,gudkov,20/Dec/18 6:59 PM,10/Oct/19 9:05 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libindy,libvcx,,,,0,,,,"*Acceptance Criteria*
* Review the HIPEs that document the new message formats.
* Review PRs for future HIPEs that we will need to support
* Review DIDDoc specification
* Align with Indy Node team
* Recommend architectural changes to the Indy SDK
* Create implementation issues for SDK",,,,,,,,,,,,,,,,,,,,,,,,,,IS-605,IS-451,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1403,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009fc",,,,Unset,Unset,EV 19.04,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,gudkov,,,,,,,,,"19/Feb/19 12:18 AM;gudkov;The PR https://github.com/hyperledger/indy-sdk/pull/1487 contain our vision of requirements, design and API proposal.

[~esplinr] Could you verify Requirements part in provided document?;;;","19/Feb/19 12:19 AM;gudkov;For now waiting for review form [~danielhardman] [~ashcherbakov] [~sergey.minaev];;;",,,,,,,,,,
Error handling: Libindy wrappers must return Message in addition to Error Code,IS-1120,36347,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,Artemkaaas,gudkov,20/Dec/18 10:10 PM,24/Jan/19 8:36 PM,28/Oct/23 2:49 AM,24/Jan/19 8:36 PM,,,,,,,,1.8.0,,,,,,,0,,,,"For the moment it is possible to see developer readable error information only in logs that complicates development. We need the way to return this information and ideally full error stack to developers.

*Acceptance criteria*
1. Libindy wrappers return main error description and error stack as part of IndyError exception
2. Changes are backward compatible

*POA*

See IS-511",,,,,,,,,,,,IS-511,,,,,,,IS-1121,IS-1122,IS-1122,,,,,,,,,,,,"24/Jan/19 8:35 PM;VladimirWork;IS-1120.PNG;https://jira.hyperledger.org/secure/attachment/16629/IS-1120.PNG",,,,,,,,,,,,,,,,,,,,,,,"1|hzwrhj:90s",,,,,,Ev 19.01,EV 19.02,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,ignisvulpis,SeanBohan_Sovrin,VladimirWork,xnopre,,,,,"17/Jan/19 5:21 PM;Artemkaaas;Changes:
 * Python - added `message` and `indy_backtrace` fields to `IndyError` object
 * Java - added `sdkBacktrace` message field to `IndyException`
                 set `message` from IndySdk
 * NodeJS - added `indyMessage` and `indyBacktrace` fields to `IndyError` object
 * Rust - changed return value from enum ErrorCode on structure IndyError with `error_code`, `message`, `indy_backtrace` fields.
 
Done in PR: https://github.com/hyperledger/indy-sdk/pull/1400;;;","22/Jan/19 10:51 PM;Artemkaaas;Build version: master-942;;;","24/Jan/19 8:36 PM;VladimirWork;Build Info:
libindy 1.7.0~942
python3-wrapper 1.7.0.dev942

Steps to Validate:
1. Run indy methods from all modules with RUST_BACKTRACE=full and incorrect parameters.

Actual Results:
`message` and `indy_backtrace` fields in `IndyError` objects exist and are filled with values.  !IS-1120.PNG|thumbnail! Errors became more readable:
{noformat}
/usr/lib/python3.5/asyncio/futures.py:274: indy.error.IndyError: (<ErrorCode.CommonInvalidStructure: 113>, 'Error: Invalid structure\n  Caused by: Invalid AttributeNames json has been passed\n  Caused by: invalid type: map, expected a string at line 1 column 1\n')
/usr/lib/python3.5/asyncio/futures.py:274: indy.error.IndyError: (<ErrorCode.CommonInvalidStructure: 113>, 'Error: Invalid structure\n  Caused by: Invalid bytes for ""PublicKey""\n')
/usr/lib/python3.5/asyncio/futures.py:274: indy.error.IndyError: (<ErrorCode.CommonInvalidStructure: 113>, 'Error: Invalid structure\n  Caused by: Trying to use did with unexpected len: 0\n')
/usr/lib/python3.5/asyncio/futures.py:274: indy.error.IndyError: (<ErrorCode.WalletItemNotFound: 212>, 'Error: Wallet item not found\n  Caused by: Walelt item not found\n')
/usr/lib/python3.5/asyncio/futures.py:274: indy.error.IndyError: (<ErrorCode.WalletInvalidHandle: 200>, 'Error: Invalid wallet handle was passed\n  Caused by: Unknown wallet handle\n')
/usr/lib/python3.5/asyncio/futures.py:274: indy.error.IndyError: (<ErrorCode.CommonInvalidParam3: 102>, 'Error: Invalid parameter 3\n  Caused by: Empty string has been passed\n')
/usr/lib/python3.5/asyncio/futures.py:274: indy.error.IndyError: (<ErrorCode.PoolLedgerConfigAlreadyExistsError: 306>, 'Error: Pool ledger config already exists\n  Caused by: Pool ledger config file with name ""docker"" already exists\n')
/usr/lib/python3.5/asyncio/futures.py:274: indy.error.IndyError: (<ErrorCode.CommonInvalidStructure: 113>, 'Error: Invalid structure\n  Caused by: Invalid Config json has been passed\n  Caused by: missing field `id` at line 1 column 2\n')
{noformat}
;;;",,,,,,,,,
Error handling: VCX must return Message in addition to Error Code,IS-1121,36348,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,Artemkaaas,gudkov,20/Dec/18 10:14 PM,01/Apr/19 4:04 PM,28/Oct/23 2:49 AM,15/Mar/19 11:29 PM,,,,,,,,1.8.2,,,,,,,0,,,,"For the moment it is possible to see developer readable error information only in logs that complicates development. We need the way to return this information and ideally full error stack to developers.

*Acceptance criteria*
1. VCX return main error description and error stack as part of IndyError exception
2. Changes are backward compatible

*POA*

See IS-511",,,,,,,,,,,,IS-948,IS-1120,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwrhj:910wf",,,,,,EV 19.04,EV 19.05,,,,,5.0,,,,,,,,,,,,Artemkaaas,gudkov,ignisvulpis,SeanBohan_Sovrin,xnopre,,,,,,"25/Feb/19 11:45 PM;Artemkaaas;DOne in PR: https://github.com/hyperledger/indy-sdk/pull/1492;;;","26/Feb/19 6:06 PM;Artemkaaas;Changes:
* update libvcx error handling to use `failure` rust crate for better error handling, messaging and backtracing.
* add `vcx_get_current_error` API function to fetch details for last occurred error.
* updated wrappers to fetch error details internally:
     * Java - added `sdkMessage`, `sdkFullMessage`, `sdkCause`, `sdkBacktrace` fields to exception.
     * Python - added `sdk_error_full_message`, `sdk_error_cause`, `sdk_error_backtrace` fields to error class.
     * ios - added `sdk_message`,  `sdk_full_message`, `sdk_cause`, `sdk_backtrace` fields to userInfo.
     * nodejs - current framework isn't compatible with error handling approch. Created separate ticket - https://jira.hyperledger.org/browse/IS-1197;;;","14/Mar/19 5:36 PM;Artemkaaas;Build version: master-1015;;;",,,,,,,,,
Error handling: CLI should return error message and error stack from libindy,IS-1122,36349,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,Artemkaaas,gudkov,20/Dec/18 10:16 PM,23/Jan/19 10:44 PM,28/Oct/23 2:49 AM,23/Jan/19 10:44 PM,,,,,,,,1.8.0,,,,,,,0,,,,"For the moment CLI return message based on error code only. As soon we get error messages from libindy we can provide additional error information that can be useful for stewards and Indy developers.

*Acceptance criteria*
1. CLI returns libindy main error description and error stack in addition to error code based message
2. Changes are backward compatible

*POA*

See IS-511",,,,,,,,,,,,IS-1120,,,,,,,,,,,IS-1120,,,,,,,,,,"23/Jan/19 10:43 PM;VladimirWork;IS-1122.PNG;https://jira.hyperledger.org/secure/attachment/16610/IS-1122.PNG",,,,,,,,,,,,,,,,,,,,,,,"1|hzwrhj:90w",,,,,,Ev 19.01,EV 19.02,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,ignisvulpis,SeanBohan_Sovrin,VladimirWork,xnopre,,,,,"22/Jan/19 10:51 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1400
Build version: master-942;;;","23/Jan/19 10:44 PM;VladimirWork;Build Info:
libindy 1.7.0~942

Steps to Validate:
1. Run commands for all txn types available in CLI that do not pass libindy-side validation.

Actual Results:
There are main error and error stack info in the CLI output. !IS-1122.PNG|thumbnail! ;;;",,,,,,,,,,
"""Network Monitor"" role in IndySDK for NYM",IS-1123,36367,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,sergey.minaev,sergey.minaev,21/Dec/18 6:39 PM,28/Jan/19 6:06 PM,28/Oct/23 2:49 AM,28/Jan/19 6:06 PM,,,,,,,,1.8.0,,,,,,,0,,,,Indy SDK should support new role for NYM transaction. More details in IndyNode ticket INDY-1916,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1916,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:",,,,Unset,Unset,Ev 19.01,EV 19.02,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,VladimirWork,,,,,,,,,"29/Dec/18 7:43 PM;sergey.minaev;If Indy Node implementation will be delayed - we can ignore appropriate integration tests for initial implementation. Unit test should works;;;","23/Jan/19 6:34 PM;sergey.minaev;build 1.7.0 master 948;;;","28/Jan/19 6:06 PM;VladimirWork;Build Info:
libindy 1.7.0~948

Steps to Validate:
https://github.com/VladimirWork/tests/blob/27b4dd1c37d6d500f369af637cc10d60bbb115fa/test_misc.py#L161-L235

Actual Results:
""NETWORK_MONITOR"" role is supported at libindy and indy-node side.;;;",,,,,,,,,
Test mode for write transactions,IS-1124,36368,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Deferred,,sergey.minaev,sergey.minaev,21/Dec/18 6:55 PM,10/Oct/19 9:36 PM,28/Oct/23 2:49 AM,10/Oct/19 9:36 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1281,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvtd:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"10/Oct/19 9:36 PM;esplinr;We are managing with this feature, so we will focus on other priorities.;;;",,,,,,,,,,,
Create HIPE to document credential exchange message families,IS-1125,36374,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,esplinr,esplinr,22/Dec/18 4:06 AM,12/Apr/19 10:21 PM,28/Oct/23 2:49 AM,15/Feb/19 7:15 PM,,,,,,,,2.0.0,,libvcx,,,,,0,,,,"The Indy HIPE process resulted in community standards for communicating between agents. But there are no current standards for credential exchange.

*Acceptance Criteria*
* Create an Indy HIPE for the credential exchange process currently used by LibVCX in the SDK, taking into account the work in IS-1118 to align it with previously accepted HIPEs.
* Get feedback on the HIPE from Evernym architects who have previously worked on LibVCX (cc [~DouglasWightman]
* Present the HIPE in the Indy Maintainers call.
* Create issues for bringing LibVCX inline with any changes to the HIPE requested by the community before it is presented in the Indy Maintainers call.

Excluded:
* The HIPE does not have to be accepted to complete this issue.
* The work to make LibVCX comply with any changes requested during the HIPE acceptance process does not have to be done to complete this issue.",,,,,,,,,,,,IS-1118,,,,,,,,,,,,,,,,,,IS-1182,IS-1235,,"10/Jan/19 10:49 PM;Artemkaaas;cred-offer.msg;https://jira.hyperledger.org/secure/attachment/16523/cred-offer.msg","10/Jan/19 10:49 PM;Artemkaaas;cred-request.msg;https://jira.hyperledger.org/secure/attachment/16526/cred-request.msg","10/Jan/19 10:50 PM;Artemkaaas;cred.msg;https://jira.hyperledger.org/secure/attachment/16527/cred.msg","10/Jan/19 10:49 PM;Artemkaaas;proof-request.msg;https://jira.hyperledger.org/secure/attachment/16525/proof-request.msg","10/Jan/19 10:49 PM;Artemkaaas;proof.msg;https://jira.hyperledger.org/secure/attachment/16524/proof.msg",,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1143,,,No,,Unset,No,,,"1|hzwrhj:910di",,,,Unset,Unset,Ev 19.03,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"10/Jan/19 10:52 PM;Artemkaaas;I have attached the message samples that VCX uses, today, to exchange credentials and proofs. These samples were obtained from Devin Fisher.;;;","12/Feb/19 6:07 PM;sergey.minaev;Link to created HIPE:
https://github.com/hyperledger/indy-hipe/pull/89;;;","15/Feb/19 7:15 PM;sergey.minaev;HIPE created and we processed first round of feedback. But we are going to continue collecting feedback before creating tickets for particular arch changes and implementation (IS--1182);;;",,,,,,,,,
VCX isn't matched with certain Libindy version,IS-1126,36396,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,zhigunenko.dsr,zhigunenko.dsr,25/Dec/18 6:03 PM,28/Jan/19 10:53 PM,28/Oct/23 2:49 AM,28/Jan/19 10:53 PM,,,,,,,,1.8.0,,libvcx,,,,,0,TShirt_S,,,,"libindy 1.7.0~46
libvcx                                0.2.0~46",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i006vs:",,,,Unset,Unset,EV 19.02,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),KitHat,sergey.minaev,VladimirWork,zhigunenko.dsr,,,,,,,"22/Jan/19 11:18 PM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/1411
;;;","23/Jan/19 6:33 PM;sergey.minaev;build 1.7.0 master 946;;;","28/Jan/19 10:53 PM;VladimirWork;Build Info:
libindy 1.7.0~953
libvcx 0.2.0~953

Actual Results:
libvcx is matched with certain libindy version.;;;",,,,,,,,,
Need to make libvcx tests portable to native Windows environment,IS-1127,36422,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,KitHat,andkononykhin,andkononykhin,28/Dec/18 5:58 PM,18/Jan/19 9:54 PM,28/Oct/23 2:49 AM,18/Jan/19 9:54 PM,,,,,,,,1.8.0,,libvcx,,,,,0,,,,"Currently libvcx tests use hard-coded unix/style paths for temporary files (e.g. [https://github.com/hyperledger/indy-sdk/blob/598bd15349f0dd110d75ddce355031c0454ec53c/vcx/libvcx/src/settings.rs#L325|https://github.com/hyperledger/indy-sdk/blob/598bd15349f0dd110d75ddce355031c0454ec53c/vcx/libvcx/src/settings.rs#L325,]). It breaks CI pipelines on native (no Cygwin) environment.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:90i",,,,Unset,Unset,Ev 19.01,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andkononykhin,KitHat,,,,,,,,,"16/Jan/19 5:08 PM;KitHat;available in master #930
PR: https://github.com/hyperledger/indy-sdk/pull/1401;;;",,,,,,,,,,,
LibVCX python wrapper contains methods which are incompatible with each other without additional conversion,IS-1128,36426,,Improvement,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,ozheregelya,ozheregelya,28/Dec/18 11:50 PM,18/Sep/19 10:34 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libvcx,,,,,0,,,,"LibVCX python wrapper contains methods which are incompatible with each other without additional conversion. For example, it's needed to convert newly created payment address to use it for sending tokens:
{code:java}
address = await Wallet.create_payment_address()
rec = await Wallet.send_tokens(0, 50000000000, address.decode('utf-8')){code}
 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1080,,,No,,Unset,No,,,"1|hzwvt0:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ozheregelya,,,,,,,,,,,,,,,,,,,,,
Postgres storage update error code handling,IS-1129,36451,,Improvement,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,ianco,ianco,03/Jan/19 1:26 AM,10/Oct/19 9:22 PM,28/Oct/23 2:49 AM,,,,,,,,,,,wallet,,,,,0,hygiene,,,"Keep one plain Error enum without suberrors or may be use failure library instead. Implement conversion to ErrorCode as a To trait.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1404,,,No,,Unset,No,,,"1|i002yt:i",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,ianco,,,,,,,,,"28/Feb/19 5:59 AM;esplinr;Is this something you will be working on [~ianco]? Do you need any assistance?;;;","01/Mar/19 8:21 AM;ianco;Hi [~esplinr] yes it's in my backlog, just a low priority right now.
;;;","02/Mar/19 6:30 AM;esplinr;Thanks for the update. We won't worry about it then.;;;",,,,,,,,,
Proof fails at verification when ZKP attribute and predicate value are both negative,IS-1130,36533,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,bdeva,bdeva,07/Jan/19 11:04 PM,31/Jan/19 5:22 PM,28/Oct/23 2:49 AM,31/Jan/19 5:22 PM,,,,,,,,1.8.0,,,,,,,0,TShirt_L,,,"Hi all, indy-sdk's ZKP keeps failing on me when verifying a proof with negative values for both attribute value and the predicate value, e.g. -1 >= -2 fails when verifying the proof. With positive values there is no issue whatsoever. Also 2 >= -2 works fine.

Asked to post this as a bug by [~sergey.minaev]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:90y",,,,Unset,Unset,Ev 19.01,EV 19.02,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bdeva,gudkov,KitHat,sergey.minaev,,,,,,,"16/Jan/19 5:09 PM;KitHat;PR: https://github.com/hyperledger/indy-crypto/pull/147;;;","18/Jan/19 10:50 PM;gudkov;Merged PR to crypto. Need update sdk to use new indy crypto version.;;;","23/Jan/19 6:34 PM;sergey.minaev;build 1.7.0 master 946;;;","28/Jan/19 6:34 PM;KitHat;[~bdeva] could you please check your case on a master build #946? It should work now.;;;","28/Jan/19 6:40 PM;bdeva;[~KitHat] we ran a couple of test cases that were failing earlier. It works now! Thanks for the quick fix. ;;;",,,,,,,
"Support new predicates for anoncreds (GT, LE, LT) in libindy as new version of proof exchange",IS-1131,36598,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MikeLodder,sergey.minaev,sergey.minaev,09/Jan/19 8:28 PM,11/Oct/19 9:08 PM,28/Oct/23 2:49 AM,11/Oct/19 9:07 PM,,,,,,,,1.10.0,,,,,,,0,,,,"h1. Goal
Add support of new set of predicates and provide backward-compatibility. Initially IndyCrypto and IndySDK supported only GE (greater or equal) predicate type. The math allows to support others: GT, LE, LT.

h1. Affected components
https://github.com/hyperledger/indy-sdk
https://github.com/hyperledger/indy-crypto (now is being moved to https://github.com/hyperledger/ursa) 
h1. Current state
IndyCrypto master has implementation of new predicates https://github.com/hyperledger/indy-crypto/pull/132

Unfortunately it’s contains breaking-change of data structures in API and this fact was not detected before merge to master. But this code isn’t released to RC / stable.

There is WIP PR for IndySDK https://github.com/hyperledger/indy-sdk/pull/1283 . For this PR the backward incompatibility has been detected and the PR is in hold now.
h2. Affected API (current breaking-change)
pub struct Proof {
    proofs: Vec<SubProof>,
    aggregated_proof: AggregatedProof,
}
pub struct SubProof {
    primary_proof: PrimaryProof,
    non_revoc_proof: Option<NonRevocProof>
}
pub struct PrimaryProof {
    eq_proof: PrimaryEqualProof,
    ge_proofs: Vec<PrimaryPredicateGEProof> now changed (backward incompatible) to
    ne_proofs: Vec<PrimaryPredicateInequalityProof>
}

h1. Versioning approach
From long-term perspective it seems like there should be version starting from ProofRequest.
Proposed behavior:
Verifier specify version in proof request
If verifier would like to use new predicates, new version >0 (1 for the moment) must be specified 
If verifier would like to be compatible with old version of software, the 0 version must be specified and new predicates must not be used
Proover’s LibIndy receive proof request, fetch version (no version == ver. 0) and use new builder’s method to pass this version to IndyCrypto (see next step)
If LibIndy detect unknown (newer) version - new error code (like unsupported proof exchange protocol version) should be returned.
IndyCrypto should provide the new method ProofRequestBuilder::set_version(int).  This call should be allowed only for fresh builder as first call after creation.  ProofRequestBuilder::add_predicate  should reject new predicates for 0 ver.
IndyCrypto must serialize:
0 version: ge_proofs 
1+ versions: predicates_proofs
ProofBuilder should verify consistency of versions in sub-proofs and serialize aggregated version.
New IndyCrypto should be able to deserialize both version of serialized Proof.
Old IndyCrypto will be able to deserialize 0 version and return InvalidStructure error for new format due to field renaming.
h2. LibIndy API changes
struct Proof {
    proof: IndyCrypto::Proof { …, ver: str, … },
    requested_proof: RequestedProof, // mapping of math to proof request
    identifiers: Vec<Identifier>, // metadata about cred_defs, schemas, revocation registries
    ver: str
}

Struct ProofRequest in LibIndy already has field “version”.

h2. Indy Crypto API changes

IndyCrypto::Proof becomes an enum:

enum Proof {
	ProofV0(ProofV0),
	ProofV1(ProofV1)
}

ProofV0 is an old structure that were used before the introduction of new predicates and ProofV1 is a new one.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqr9:i",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"09/Jan/19 8:41 PM;sergey.minaev;For internal team discussion please use [initial PoA document|https://docs.google.com/document/d/17BjDbvSY3BvkY7mz6LPOKa-Rt0nJUFEZ7-rf-rusfYU/] and share the conclusion in this ticket;;;","02/Mar/19 3:54 AM;sergey.minaev;I've assigned this task to [~MikeLodder] and moved to SF sprint as we discussed with Mike last week.
Mike please notify me and [~esplinr] if you will not have time for this task.

FYI [~nage] [~Artemkaaas] [~KitHat] [~MattRaffel];;;","11/Oct/19 9:08 PM;esplinr;These predicates were added in early 2019, but the tests were only added in September's release (1.12.0).;;;",,,,,,,,,
Indy CLI has intermittent tests,IS-1132,36602,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,sergey.minaev,sergey.minaev,09/Jan/19 9:16 PM,16/Jan/19 5:08 PM,28/Oct/23 2:49 AM,15/Jan/19 8:29 PM,,,,,,,,1.8.0,,,,,,,0,,,,"There are some intermittent tests currently in Indy CLI set. At least `rotate_resume_works_when_ledger_not_updated` fails time to time on Jenkins for master builds.

Suggested steps:
* check available build history and determine set of intermittent tests
* provide fixes and even hotfixes as short-term
   * create new separates tickets if some tests require significant refactoring",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:9",,,,Unset,Unset,Ev 19.01,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,KitHat,sergey.minaev,,,,,,,,"09/Jan/19 10:06 PM;KitHat;Example of a log with CLI failure:
https://ci.evernym.com/job/Indy%20SDK%20CD/job/master/917/execution/node/1395/log/?consoleFull;;;","10/Jan/19 8:07 PM;KitHat;Made in PR: https://github.com/hyperledger/indy-sdk/pull/1394;;;","15/Jan/19 8:29 PM;gudkov;PR merged, changes look fine;;;","16/Jan/19 5:08 PM;KitHat;available in master #930;;;",,,,,,,,
Indy SDK Documentation Part 1 -> Request Handler,IS-1133,36606,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,MattRaffel,MattRaffel,09/Jan/19 11:39 PM,10/Oct/19 8:45 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Comments in code, clean up code
State Diagram or other documentation 
explain why, when, known pitfalls and problem areas
etc...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-320,,,No,,Unset,No,,,"1|hzwrhj:910sx090c",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),MattRaffel,,,,,,,,,,,,,,,,,,,,,
"Introduce WalletHandle, CommandHandle, PoolHandle",IS-1134,36612,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,ignisvulpis,ignisvulpis,10/Jan/19 1:55 AM,25/Jun/19 12:30 AM,28/Oct/23 2:49 AM,25/Jun/19 12:30 AM,,,,,,,,1.8.2,,,,,,,0,,,,"Currently all variables holding handles are i32 which seems to be the obvious choice for a C-callable API. But this choice trickled through all levels of the implementation which makes the variables easy to confuse e.g. use a wallet handled where a pool handle is required.

Instead of using i32 everywhere the code should use the types WalletHandle, CommandHandle and PoolHandle.

 

In a first step this can be done by defining 
 pub type WalletHandle = i32;

pub type PoolHandle = i32;

pub type CommandHandle = i32;

and replacing i32 by them. The next step then would be to use Rust's new-type pattern to create type-safe types.
 {{[https://rust-lang-nursery.github.io/api-guidelines/type-safety.html#c-newtype]}}

 

Because the handles are used all over the code I suggest to do the changes over multiple PRs. Doing the replacement in one PR would require{{ a long review which is going to end in merge conflicts.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:w",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,ignisvulpis,,,,,,,,,"28/Feb/19 8:29 AM;esplinr;Thanks for the suggestion [~ignisvulpis].

We agree that this could make it easier to understand the Rust code, but most of the value will be hidden by the C-callable API and wrappers.

We will keep this architectural suggestion in mind as we evolve the architecture, and we would accept a series of pull requests to make this change if someone wanted to do the work.;;;","28/Feb/19 8:14 PM;ignisvulpis;Please see [https://github.com/hyperledger/indy-sdk/pull/1506]

 ;;;","25/Jun/19 12:30 AM;esplinr;PR is merged and the feature is released.;;;",,,,,,,,,
LibIndy tests are not threadsafe,IS-1135,36613,,Improvement,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,ignisvulpis,ignisvulpis,10/Jan/19 2:11 AM,07/Aug/19 10:29 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"libindy tests should be able  to be run in parallel in separate threads in Rust and this makes `cargo test` for libindy. New contributors do not know the need to run the tests in a single thread and might turn away because of the failing test.

The reason is that the tests use the same names for wallets, pools etc

Also e.g. the wallet tests use the same (default) directory to store the wallet and the test tear-down methods delete data of tests running in parallel. Tests for the inmem wallet do their clean-up by throwing away all inmem-wallet handles.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1347,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:y",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,ignisvulpis,,,,,,,,,"28/Feb/19 8:25 AM;esplinr;We agree that this is a problem, but fixing it can be complicated.

Tests need to be changed to either instantiate multiple wallets, or to only clean up the changes they make within a wallet rather than removing the wallet. Also, in order to speed up some tests, state that is the result of slow cryptographic operations may be shared.

Thanks for raising the concern. We'll continue to think about it as we look to improve our the test or wallet infrastructure. If anyone wants to tackle this sooner, let us know and we can discuss options.;;;","28/Feb/19 8:29 PM;ignisvulpis;Using global resources should be avoided in general.

Currently an application using libindy can only talk to one pool because the ledger version is global. Or all pools must have the same version.

Also genesis files at pool creation are stored in a common temporary file with a common name which might be overwritten if another pool is generated at the same in parallel.

The same is true for all indy api methods that use the OS environment. Another part of the app might have changed the environment of the process the app is running.

These are other issues though.

I agree that changing all tests is much work. Maybe switch to a test framework that allows setup and teardown of tests and while doing this change to test-specific names for currently global resources.;;;","05/Mar/19 8:50 PM;ignisvulpis;Could we establish a rule that new tests cleanup after themselves by deleting only what they created and not all wallets or all pools or whatever?

Like here:

[https://github.com/hyperledger/indy-sdk/blob/595f4bad3931cd2a59748f1ac6f9f5e49c1ad69e/wrappers/rust/tests/wallet.rs#L97]

This would be easier if there were a delete_wallet_by_handle method because most test have a handle but not the config.

Deleting exactly what was created would be a first step. Later we can cleanup the `cleanup` and `teardown` methods or remove them.

I don't agree that this task is complicated, it is 'just' a lot of boring work and it has to be done quickly (including review) because it changes a lot of code in a lot of files and that means that merge conflicts are likely the longer the process takes.

 

A subtask to this delete-only-what-you-created task could be returning the config as the fifth element of the returned tupel in [https://github.com/hyperledger/indy-sdk/blob/595f4bad3931cd2a59748f1ac6f9f5e49c1ad69e/libindy/tests/utils/anoncreds.rs#L457] and then use the config to delete the wallet.
Next step then is to think whether the name is correct: is it really a common wallet for the tests? I think it is not or at least for most of the tests except maybe one or two. So I suggest to extract the code inside the block here [https://github.com/hyperledger/indy-sdk/blob/595f4bad3931cd2a59748f1ac6f9f5e49c1ad69e/libindy/tests/utils/anoncreds.rs#L464] into a init_test_wallet method(wallet_name: &str) for init_test_wallet to put into the config which is returned then then used to delete this wallet.

Alternatively init_test_wallet(config: &str) to pass in the config and not return it because it is already there at the caller of init_test_wallet. Or alternatively use the sequence crate to create a unique wallet-name and delete that. YMMW

 ;;;","02/Aug/19 5:31 PM;ignisvulpis;Some of the work was done [https://github.com/hyperledger/indy-sdk/pull/1518]

 

Global resources not being thread-safe is a problem e.g. {color:#172b4d}indy_set_protocol_version{color}

{color:#172b4d}That API methods should be deprecated and the protocol version an option to all calls that build requests differently depending on protocol version. {color}

{color:#172b4d}(Or build two versions of libindy, one for version 1 and one for version 2 and remove support for version 1 later.){color}

 

{color:#172b4d}Some tests use a common wallet because of performance reasons, revocation tests and search tests would take to long.{color};;;",,,,,,,,
Wallet could use exists() or list() like pool has,IS-1136,36647,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Low,,,sklump,sklump,11/Jan/19 1:12 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,1.7.0,,,,,,,,,libindy,,,,,0,help-wanted,wallet,,"At present, there is no way to check whether a wallet exists on a given name. The only thing to do is to try to create a wallet and catch the exception when libindy discovers that it already exists, but this produces an ugly ERROR log.

Libinndy node pool code allows the caller to detect when a creation is necessary, via list_pools(). Node pools are always on disk where wallet operations depend on the wallet type, so is not as straightforward, but I think there should always be a way to tell if a wallet exists on a given name.",ubuntu 16.04,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvtc:y",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sklump,,,,,,,,,"28/Feb/19 8:19 AM;esplinr;Good idea. Thanks for raising the issue. We'll keep it in mind as we look to improve the wallet.

We would be happy to discuss strategies with anyone wanting to work on it before we get to it.;;;","02/Mar/19 6:17 AM;esplinr;We discussed this item again. It's rather tricky.

Because a wallet can exist at any location on the system, we can't really list all available wallets.

One can test if a wallet exists by doing a file system lookup on the path where the wallet is stored, but one would have to guess the format of the file name of the wallet or use a private-API.

The error is emitted to the log when the wallet creation fails, regardless of whether the exception is caught. One could override the logger, but that would be ugly.

We could potentially improve the situation by having APIs that:
* Test whether a wallet can be successfully created with the provided name
* Lists all wallets in a directory provided by the user (with the same default directory as the wallet creation API
* Provides a list of open wallets.;;;",,,,,,,,,,
Investigate -> state unaffected in request_handlers,IS-1137,36649,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,MattRaffel,MattRaffel,11/Jan/19 3:43 AM,01/Apr/19 4:05 PM,28/Oct/23 2:49 AM,06/Mar/19 8:42 PM,,,,,,,,1.8.2,,,,,,,0,,,,"Need to investigate cause.  

While writing unit test 'request_handler_process_reply_event_from_consensus_state_works_for_consensus_reached_with_mixed_msgs' (services/pool/request_handler.rs), we found that changing the f parameter to 0 from 1 had no change in outcome of the test.  This was unexpected.

See also:  request_handler_process_reply_event_from_consensus_state_works_for_consensus_reached_with_0_concensus.  This method should behave differently.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910x09",,,,Unset,Unset,EV 19.04,EV 19.05,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,MattRaffel,sergey.minaev,,,,,,,,"28/Feb/19 9:06 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1507;;;","06/Mar/19 8:42 PM;sergey.minaev;Provided solution covered by unit tests, no manual validation required;;;",,,,,,,,,,
Wrong redirect link on readme of Indy dotnet wrapper,IS-1138,36660,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,vikpande,vikpande,11/Jan/19 6:54 AM,14/Aug/19 6:13 PM,28/Oct/23 2:49 AM,14/Aug/19 6:13 PM,,,,,,,,,,,,,,,0,help-wanted,,,"was testing the dotnet wrapper for Indy and bumped into this bug.

 

the Readme points to this link which throws a 404 error ([https://github.com/hyperledger/indy-sdk/tree/master/wrappers/dotnet).] 

 

the link on the section needs to be updated: 

 

======excerpt from read me ========
h3. Documentation

Documentation for the .NET wrapper is available [here|http://hyperledger.github.io/indy-sdk/wrappers/dotnet/docs/index.html].

==============================",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:ztz",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,vikpande,,,,,,,,,"28/Feb/19 8:15 AM;esplinr;Thank you [~vikpande] for reporting this issue and for submitting a PR to address it.

https://github.com/hyperledger/indy-sdk/pull/1407

The Indy project has evolved to centralize all of its documentation at ReadTheDocs. The documentation for the .NET wrapper has not been updated to use the new structure, so it's complicated to accept the PR. We'll keep collaborating on it at GitHub.

A good place for real time collaboration on Indy documentation is #indy-outreach at http://chat.hyperledger.org.;;;",,,,,,,,,,,
Packages prevent installation of both indy-cli and libsovtoken,IS-1139,36703,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,mgbailey,mgbailey,12/Jan/19 4:20 AM,01/Apr/19 4:03 PM,28/Oct/23 2:49 AM,26/Mar/19 9:32 PM,,,,,,,,1.8.2,,,,,,,0,,,,"Apparently the currently deployed packages for indy-cli and libsovtoken have conflicting dependencies, as shown:
{code:java}
vagrant@sandbox:~$ sudo apt-get install -y indy-cli libsovtoken
Reading package lists... Done
Building dependency tree
Reading state information... Done
Some packages could not be installed. This may mean that you have
requested an impossible situation or if you are using the unstable
distribution that some required packages have not yet been created
or been moved out of Incoming.
The following information may help to resolve the situation:The following packages have unmet dependencies:
 libsovtoken : Depends: libindy (= 1.6.8) but 1.7.0 is to be installed
E: Unable to correct problems, you have held broken packages.

vagrant@sandbox:~$ sudo apt-get install -y indy-cli libsovtoken libindy=1.7.0
Reading package lists... Done
Building dependency tree
Reading state information... Done
Some packages could not be installed. This may mean that you have
requested an impossible situation or if you are using the unstable
distribution that some required packages have not yet been created
or been moved out of Incoming.
The following information may help to resolve the situation:The following packages have unmet dependencies:
 libsovtoken : Depends: libindy (= 1.6.8) but 1.7.0 is to be installed
E: Unable to correct problems, you have held broken packages.
{code}
Here are the package versions at the head of the repo:
{code:java}
libsovtoken:
  Installed: (none)
  Candidate: 0.9.6
  Version table:
     0.9.6 500
        500 https://repo.sovrin.org/deb xenial/stable amd64 Packages
...
vagrant@sandbox:~$ apt-cache policy indy-cli
indy-cli:
  Installed: (none)
  Candidate: 1.7.0
  Version table:
     1.7.0 500
        500 https://repo.sovrin.org/sdk/deb xenial/stable amd64 Packages
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1167,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910ss",,,,Unset,Unset,EV 19.06,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,dfarns,esplinr,KitHat,mgbailey,VladimirWork,,,,,"12/Jan/19 5:14 AM;dfarns;Dependencies of packages:
{code:java}
$ apt-cache show libsovtoken | grep -E '^Depends|^Version' | head -n 2
Version: 0.9.6
Depends: libindy(=1.6.8)
{code}
{code:java}
$ apt-cache show libindy | grep -E '^Depends|^Version' | head -n 2
Version: 1.7.0
Depends: libssl1.0.0, libsqlite0, libzmq5
{code}
{code:java}
$ apt-cache show indy-cli | grep -E '^Depends|^Version' | head -n 2
Version: 1.7.0
Depends: libindy
{code}
The crux if the issue is that {{apt}} always wants to install whatever is the latest version in the repository. So when it sees that {{libsovtoken}} required the specific version {{1.6.8}} of {{libindy}} but the latest is {{1.7.0}} apt will complain... thus forcing you to specify the explicit version {{1.6.8}} with {{libindy=1.6.8}} as the package name to install.

However... doing that then lets indy-cli 1.7.0 to with libindy 1.6.8 installed.

My recommendation is to not release components to {{stable}} until _*all*_ packages that depend on them have been updated accordingly, and work together. Following this, then {{libsovtoken}} should have been updated to support the new {{1.7.0}} version of {{libindy}} at the same time as {{indy-cli}} and {{libindy}}.

The only way to get it to install with the correct dependencies is an ugly manual installation of packages:
{code}
apt-get install libindy=1.6.8 indy-cli=1.6.8 libsovtoken
{code};;;","31/Jan/19 11:19 PM;esplinr;We currently require a strict dependency between all components of the system.

We will ensure  this is updated before the next release of the SDK that is intended to be suitable for working with the ledger plugins.

This issue needs to be reported in the issue tracker for the Sovrin Token.
https://sovrin.atlassian.net/browse/ST;;;","18/Feb/19 11:59 PM;KitHat;PoA: https://docs.google.com/document/d/1eQ69WwfACQpzHk_ETVo-4DtPVCr6J7Dp8Bm-zp_K2Ao/edit;;;","26/Mar/19 3:26 PM;Artemkaaas;Changes:
 Updated Indy-CLI to depend on a specific Libindy version

Done in PR: https://github.com/hyperledger/indy-sdk/pull/1553
;;;","26/Mar/19 9:32 PM;VladimirWork;Build Info:
indy-cli 1.8.2~64 rc

Steps to Validate:
1. Install indy-cli on machine with no libindy package or  libindy with inconsistent to indy-cli version.
2. Remove libindy on machine with indy-cli installed.

Actual Results:
1. Indy-cli installation also installs depending libindy version.
2. Libindy removal also removes depending indy-cli version.;;;",,,,,,,
echo relationship changes to peer as security measure,IS-1140,36708,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,danielhardman,danielhardman,12/Jan/19 9:06 AM,10/Oct/19 9:20 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,help-wanted,,,"In the evolving [relationship management HIPE|https://github.com/hyperledger/indy-hipe/pull/31] and in the [DID peer method spec|https://github.com/dhh1128/peer-did-method-spec], one of the security features that's desirable is for Bob to tell Alice any time Alice changes her authorizations. This could help in a case where Alice has several agents (phone, tablet, laptop, desktop, cloud, etc), and one of them is hacked; all other agents would find out if one of the agents attempted to update the DID Doc.

We need to implement this as we implement DID Doc support.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1403,,,No,,Unset,No,,,"1|hzwrhj:911i4",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),danielhardman,,,,,,,,,,,,,,,,,,,,,
pre-arrange key expiration in DID Doc,IS-1141,36709,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,danielhardman,danielhardman,12/Jan/19 9:12 AM,10/Oct/19 9:20 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"As we implement full DID Doc support, a feature I'd like to add is pre-emptive key expiration policies–basically, inform the other party that keys in the DID Doc should be considered expired unless a rotation occurs before a certain date.

This has security benefits, because if an attacker is struggling for control of a sovereign domain with the owner, and neither can fully take over, the attacker is eventually locked out.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1403,,,No,,Unset,No,,,"1|hzwrhj:911i9",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),danielhardman,,,,,,,,,,,,,,,,,,,,,
Review and merge pack/unpack for new A2A protocol,IS-1142,36782,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,sergey.minaev,sergey.minaev,15/Jan/19 10:06 PM,31/Jan/19 11:03 PM,28/Oct/23 2:49 AM,31/Jan/19 11:03 PM,,,,,,,,1.8.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1118,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1143,,,No,,Unset,No,,,"1|i006vb:",,,,Unset,Unset,EV 19.02,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"30/Jan/19 8:22 PM;sergey.minaev;Recommendation for validation:
 verify that new API is available in wrappers of libindy and marked everywhere as experimental;;;",,,,,,,,,,,
New A2A protocol is defined by community inside Indy HIPE repo,IS-1143,36783,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,sergey.minaev,sergey.minaev,15/Jan/19 10:08 PM,08/Oct/19 11:06 PM,28/Oct/23 2:49 AM,08/Oct/19 10:55 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1118,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-3,,A2A protocol,Done,No,,Unset,No,,,"1|hzzmos:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
A2A: change message structure in VCX and dummy-agent to new format,IS-1144,36784,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,15/Jan/19 10:12 PM,01/Mar/19 3:59 AM,28/Oct/23 2:49 AM,01/Mar/19 3:59 AM,,,,,,,,2.0.0,,,,,,,0,,,,"Add basic support of new A2A messages

https://github.com/hyperledger/indy-hipe/tree/master/text/0021-message-types
https://github.com/hyperledger/indy-hipe/tree/master/text/0022-cross-domain-messaging

https://github.com/hyperledger/indy-hipe/tree/master/text/0017-agent-message-structure

Goals
# Support field ""type"" according to [Message Types Hipe|https://github.com/hyperledger/indy-hipe/tree/master/text/0021-message-types]
# Eliminate bundles from the a2a message

POA
# Add `agency_protocol_version` field to VCX provisioning config with indicates a2a message format will be used.
    * `1.0` means the current protocol
    * `2.0` means new community protocol
# Save rest LibVCX API  functions without any changes.
# Update internal building and parsing of a2a messages based on `agency_protocol_version` field:
    * `1.0` leave as is
    * `2.0` use libindy pack/unpack functions
# Update `Dummy Agent` to support community protocol

Suggestions (next step):
Add flexible functions for preparation and sending generic a2a messages into Libindy API.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1118,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1143,,,No,,Unset,No,,,"1|hzwrhj:910d",,,,Unset,Unset,Ev 19.03,EV 19.04,,,,(Please add steps to reproduce),11.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Error handling: Indy-Crypto must return message in addition to ErrorCode,IS-1145,36785,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,15/Jan/19 10:35 PM,31/Jan/19 10:34 PM,28/Oct/23 2:49 AM,31/Jan/19 10:34 PM,,,,,,,,1.8.0,,,,,,,0,,,,"We need to provide a way of getting error message and error stack in addition to ErrorCode.
I suggest implementing of the same approach as it is done for Libindy IS-511.

Steps:
1. Migrate to *failure* crate for better error handling.
2. Add indy_crypto_get_current_error(error_json_p) method that will return description and  bactrace for last error. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i006vu:",,,,Unset,Unset,EV 19.02,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"20/Jan/19 6:35 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-crypto/pull/151;;;","22/Jan/19 11:11 PM;Artemkaaas;Build version: stable 0.5.1;;;","31/Jan/19 10:34 PM;sergey.minaev;Provided solution and integration into libindy looks good;;;",,,,,,,,,
Review VCX->Indy-Sdk API changes,IS-1146,36790,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Deferred,,MattRaffel,MattRaffel,15/Jan/19 11:54 PM,18/Sep/19 10:49 PM,28/Oct/23 2:49 AM,18/Sep/19 10:49 PM,,,,,,,,,,,,,,,0,,,,Ryan and Norm are needing to expose IndySDK to consumers of libvcx in iOS.  They are making changes to make this possible.   This story is to review their work and make sure it fits pattern and consistency of Indy-Sdk.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:913i",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,MattRaffel,,,,,,,,,"18/Sep/19 10:49 PM;esplinr;We have exposed the LibIndy calls that are currently needed by Evernym's usage of LibVCX. If other people need additional calls, we can reexamine a general solution.;;;",,,,,,,,,,,
Transaction Author Agreement API,IS-1147,36801,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,esplinr,esplinr,16/Jan/19 7:45 AM,09/Oct/19 12:18 AM,28/Oct/23 2:49 AM,08/May/19 10:10 PM,,,,,,,,1.9.0,,,,,,,0,,,,"*Story*
As a steward of an Indy network, I want transaction authors to agree that the information they submit to the ledger meets the requirements outlined by ledger governance for the current transaction to minimize the liability that stewards accept when storing the data on an immutable ledger.

*Acceptance Criteria*
* Before submitting a write to the public ledger, transaction authors must accept the author agreement.
* The author agreement is found on the destination ledger and is the most recent one for the current transaction type.
* A digital signature indicating the acceptance of the author agreement is included as part of the transaction signature.
* The transaction also records the time and date when the agreement was accepted.
* The transaction records an indication of how it was accepted pulled from a list of valid mechanisms that is stored on the ledger.
* API calls exist for pulling the list of valid mechanisms from the ledger.
* API calls exist for downstream applications to expose the agreement in an acceptable way to users receive their consent.
* An API call  exists for pulling the hash of the agreement so that downstream applications can detect when the agreement changes.",,,,,,,,,,,,,,,,,,,,,IS-1148,IS-1234,INDY-1942,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00lqw:",,,,Unset,Unset,Ev-SDK 19.09,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"30/Apr/19 9:25 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1602;;;","08/May/19 10:09 PM;sergey.minaev;Proposed solution seems correct, an integration validation will be done separately.;;;",,,,,,,,,,
CLI acceptance of Transaction Author Agreement,IS-1148,36802,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,16/Jan/19 7:54 AM,11/May/19 1:17 AM,28/Oct/23 2:49 AM,08/May/19 10:10 PM,,,,,,,,1.9.0,,cli,,,,,0,,,,"*Story*
As a developer on an Indy network, I want the CLI to show me the author agreement before submitting my transactions to the ledger so that I can proactively review and accept the terms.

*Acceptance Criteria*
* Before submitting a write to the public ledger, the CLI will display the current transaction agreement for that transaction type to the user.
* The user will be asked to agree before the write can be signed and submitted.
* The time and date when the user accepted is recorded as part of the transaction.
* The mechanism by which the user agreed is user configurable with a default mapping to ""Click Agreement"".

*Notes*
* The acceptance mechanism might be an enum / id value instead of a string.
* It is the CLI user's responsibility to ensure that the indicated acceptance mechanism matches the string being used on the ledger that will receive the transaction.",,,,,,,,,,,,,,,,,,,,,,,IS-1147,,,,,,,INDY-1942,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00lr0:",,,,Unset,Unset,Ev-SDK 19.09,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"01/May/19 11:21 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1606;;;","08/May/19 10:10 PM;sergey.minaev;Proposed solution seems correct, an integration validation will be done separately.;;;",,,,,,,,,,
Acceptance tests for Indy-SDK in CD,IS-1149,36852,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,VladimirWork,VladimirWork,17/Jan/19 4:48 PM,11/Oct/19 9:41 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"We should add acceptance test running to Indy-SDK CD pipeline the same way as system tests for Indy-node.

Test will be here: https://github.com/hyperledger/indy-test-automation/pull/7

Also we should discuss dynamic packages' versions substitution.

FYI [~andkononykhin]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-524,,,No,,Unset,No,,,"1|hzwrhj:910sx094",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),VladimirWork,,,,,,,,,,,,,,,,,,,,,
Release Indy SDK 1.8.0,IS-1150,36932,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,18/Jan/19 10:42 PM,11/Feb/19 11:33 PM,28/Oct/23 2:49 AM,01/Feb/19 10:52 PM,,,,,,,,1.8.0,,,,,,,0,,,,"*Task Overview*
 Perform all necessary tasks to have a release of LibIndy.

*Acceptance Criteria*
 * Code is tested
 * Release is tagged
 * Release notes are drafted
* Issues in JIRA are assigned to the correct fix version
 * Release notes are reviewed by Docs and Product Management
 * A new release of Indy-Crypto is part of this release

*Notes*
* Evernym maintained ledger plugins may also need to be released.",,,,,,,,,,,,,,,,,,,,,IS-1178,,IS-1025,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,"1|i006w0:",,,,,,EV 19.02,,,,,,8.0,,,,,,,,,,,,Artemkaaas,esplinr,gudkov,ozheregelya,zhigunenko.dsr,,,,,,"18/Jan/19 11:19 PM;esplinr;This Jira search can help identify issues that should be assigned to the 1.8.0 release:
{code}
project = ""IS"" AND status not in (""TO DO"", Review, ""In Progress"", ""Validate"") ORDER BY updated DESC
{code};;;","28/Jan/19 6:34 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1426;;;","31/Jan/19 2:23 PM;Artemkaaas;RC build version: 52;;;",,,,,,,,,
Issues with CI/CD pipelines for indy-crypto,IS-1151,36934,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,andkononykhin,andkononykhin,18/Jan/19 11:14 PM,21/Jan/19 8:00 PM,28/Oct/23 2:49 AM,21/Jan/19 8:00 PM,,,,,,,,1.8.0,,indycrypto,,,,,0,devops,TShirt_S,,"There have been found several issues:
 # windows artifacts for *rc* branch don't include indy crypto library itself [https://repo.sovrin.org/windows/libindy_crypto/rc/0.5.0-27/libindy_crypto_0.5.0.zip |https://repo.sovrin.org/windows/libindy_crypto/rc/0.5.0-27/libindy_crypto_0.5.0.zip]
 # latest *master* build fails during testing: [https://ci.evernym.com/job/Indy%20Crypto%20CD/job/master/73/execution/node/45/log/] I guess that it might cause problems for CI on *master* as well. Seems it might be fixed by switching to newer version of rust instead of 1.25.0.
 # also I've encountered incorrect syntax of specifying multiple expressions for stash statement in cd file in *master*: [https://github.com/hyperledger/indy-crypto/blob/9d1ffdd0699341e5fd5026756c78ea9aeb17ef66/Jenkinsfile.cd#L159] (comma should be used instead of semicolon)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i006vt:",,,,Unset,Unset,EV 19.02,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andkononykhin,Artemkaaas,,,,,,,,,"21/Jan/19 8:00 PM;Artemkaaas;Changes: Synchronized cd pipeline and building windows artifact building between master and rc branches 
Done in PR: https://github.com/hyperledger/indy-crypto/pull/150
Build version: RC 0.5.1-29;;;",,,,,,,,,,,
Need an API to get the latest timestamp across all validator nodes,IS-1152,36953,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,smithbk,smithbk,19/Jan/19 5:33 AM,22/Jan/19 4:28 AM,28/Oct/23 2:49 AM,22/Jan/19 4:28 AM,,,,,,,,,,libindy,,,,,0,,,,"I have a use case in which a prover must generate a *single* proof, share it with multiple verifiers, and all verifiers MUST get the same verification result (true or false).

However, I don't know of a reasonable way to do this with the current APIs.

For example, consider the following sequence of events:
1. Alice generates a single proof P and shares it with Bob and Eve.
2. Bob successfully verifies P (i.e. verify returns true).
3. The issuer revokes Alice's credential which was used to generate proof P.
4. Eve unsuccessfully verifies P (i.e. verify returns false because of the revocation in step 3.)

Bob and Eve get different verification results which violates the MUST requirement above.

The `build_get_revoc_reg_delta_request` function accepts a `to` parameter which I believe (IIUC) can be used to at least partially solve this problem.  For example,  consider the following changes to the previous steps.  Let LT be the latest timestamp from the ledger.
1. Alice gets LT, generates a single proof P, and shares both P and LT with Bob and Eve. 
2. Bob verifies P using LT as the ""to"" value to `build_get_revoc_reg_delta_request`.  It returns true.
3. The issuer revokes Alice's credential which was used to generate proof P.
4. Eve verifies P also using LT as the ""to"" value, so it also returns true.

However, there is still a problem if Bob and Eve query different validator nodes. 
Consider the following sequence of events:
1. Alice's credential is revoked and is committed to the ledger on validator node V1.
2. Alice gets LT from V1, generates proof P and shares P and LT with Bob and Eve.
3. Bob verifies P using LT against node V1, returning false because of the revocation in step 1.
4. Eve verifies P using LT against node V2, returning true because the revocation has not yet been committed to node V2 (violating the MUST).
5. Revocation transaction from step 1 is committed to node V2.

The only way I know to eliminate the problem above is for Alice to use an LT value which is known to be committed to ALL validator nodes.  Let's call it the GLT (Global Latest Timestamp).  However, getting GLT using the current APIs is not possible, at least I don't see a way.  According to a comment in ledger.py, `to reduce pool load libindy sends read requests to one random node in the pool.`  So there is no way to control routing or broadcast in order to calculate this value efficiently, or even to know which validator node the response is from.

One other thing I should note about my use case is that the accuracy/responsiveness of GLT is not very critical.  For example, even if Alice got the GLT associated with a particular transaction 10 minutes after it was actually committed to all validator nodes, that would be OK. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i007uf:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lovesh,smithbk,,,,,,,,,"21/Jan/19 10:34 PM;lovesh;[~smithbk] Even though this issue where validator node V1 has some data committed and validator node V2 does not is rare unless V2 is stuck or just started or disfunctional, a safer way  for Alice is to not just share the proof with Bob and Eve but also a state proof (different from proof over credentials) of the accumulator value with Bob and Eve. The state proof is merkle inclusion proof that asserts that certain entity does have a certain value in the merkle trie. The root in this merkle proof has an associated aggregate signature from a majority of nodes thus attesting that majority of nodes did agree to this state of the ledger (state trie to be precise). Additionally state proof also contains the timestamp when the mekrle root was created. The only data required to verify state proofs are BLS public keys of the validators and this public key set changes very gradually. Queries to the ledger usually return the data with such state proof with the exception of very recently written data (last 1-2 sec). Sequence of events for Alice, Bob and Eve 
 # Alice's credential is revoked and is committed to the ledger.
 # Alice queries the ledger (some node) for the accumulator value and expects a state proof. If it does not get a state proof, it repeats step 2 after waiting.
 # Alice now has the accumulator value A, with the state proof SP.
 # Alice now generates a proof P and shares P, accumulator value A and state proof SP with Bob.
 # Bob verifies that the state proof SP for accumulator value A and ensures that at the time mentioned in SP, the accumulator did have this value. Note that Bob does not need to communicate with any validator to verify the state proof as it will already have the validator's public keys (unless he is starting after very ling time).
 # Alice shares P, A and SP with Eve 
 # Eve also follows the same procedure Bob followed in step 5.;;;","22/Jan/19 12:48 AM;smithbk;Thank you Lovesh.  One follow up question just to be certain.  In your step #5 you say ""unless he is starting after very long time"".  What happens in this case?  Does this open/crack the door to the possibility that two verifiers get different results?

The reason I'm asking is that in my use case it would be catastrophic if two verifiers got different results, no matter how remote the possibility.;;;","22/Jan/19 1:16 AM;lovesh;Keith,

When a client starts up, it tries to connect to some validator nodes to make sure it knows about all validator nodes and their most recent keys. 

If the client starts after a long time and it does not (or cannot) connect to validator nodes to sync up to find out about all nodes, it might not be able to validate the aggregate signature of the state proof since it might not have required/correct keys. Hence the client won't trust the state proof but won't be fooled into believing that proof is correct.

However there is a very remote possibility of an attack where the client knows about very old state of the ledger and most of the node it knows about have been compromised. Now in the actual ledger these nodes might have been kicked out and no longer part of the network but the client won't know this. Then the compromised nodes can present a false state proof and the client will trust. However this kind of situation will even affect clients which try to connect to nodes to sync up since comromised nodes will lie. Hence the solution is to have a reasonably new copy of the client source code/package which is signed by the network maintainers.;;;","22/Jan/19 4:26 AM;smithbk;Thanks Lovesh, makes sense.;;;",,,,,,,,
A2A: support message threading,IS-1153,36994,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,sergey.minaev,sergey.minaev,21/Jan/19 11:54 PM,14/Mar/19 9:30 PM,28/Oct/23 2:49 AM,14/Mar/19 9:30 PM,,,,,,,,2.0.0,,,,,,,0,,,,"https://github.com/hyperledger/indy-hipe/tree/master/text/0027-message-id-and-threading

HIPE seems mature, but need to ensure it is compatible with VCX protocol.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/19 9:29 PM;VladimirWork;IS-1153.PNG;https://jira.hyperledger.org/secure/attachment/16931/IS-1153.PNG",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1143,,,No,,Unset,No,,,"1|hzwrhj:910w9",,,,Unset,Unset,Ev 19.03,EV 19.04,EV 19.05,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,VladimirWork,,,,,,,,"18/Feb/19 8:05 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1483;;;","11/Mar/19 9:27 PM;sergey.minaev;I suggest to perform manual validation of backward-compatibility. New master of VCX should be able to communicate with old version of agency. I think latest stable dummy-cloud-agent can be used for that purpose;;;","14/Mar/19 5:36 PM;Artemkaaas;Build version: master-1015;;;","14/Mar/19 9:29 PM;VladimirWork;Build Info:
libindy 1.8.1~1015
libvcx 0.2.2~1015

Steps to Validate:
1. Run stable (v1.8.1) dummy-cloud-agent.
2. Checkout to master vcx demo and run it against stable agent.

Actual Results:
Demo is run without any errors:  !IS-1153.PNG|thumbnail! ;;;",,,,,,,,
A2A: test suite for standard compatibility,IS-1154,36996,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,sergey.minaev,sergey.minaev,22/Jan/19 12:04 AM,23/Feb/19 7:14 AM,28/Oct/23 2:49 AM,23/Feb/19 7:14 AM,,,,,,,,2.0.0,,,,,,,0,,,,https://github.com/hyperledger/indy-hipe/tree/master/text/0016-agent-test-suite-v1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1143,,,No,,Unset,No,,,"1|hzwrhj:910xi",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
A2A: feature-discovery protocol,IS-1155,36997,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,22/Jan/19 12:05 AM,20/Dec/19 9:03 PM,28/Oct/23 2:49 AM,20/Dec/19 8:49 PM,,,,,,,,1.14.0,,,,,,,0,,,,"We need to support the Feature Discovery Protocol:

[https://github.com/hyperledger/aries-rfcs/tree/master/features/0031-discover-features]

*Acceptance Criteria*
 * Provide feedback on the Aries RFC
 * Implement the changes possible in the current code base.
 * Pass the tests of the agent test suite. Contribute missing tests to the agent test suite.
 * Provide feedback on the open questions that aren't resolved in the RFC PR.
 * Raise relevant issues for further improvements.
 * Contribute missing tests to the agent test suite.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|i015y2:",,,,Unset,Unset,Indy Aries 19.25,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"20/Dec/19 9:03 PM;Artemkaaas;Changes:
- Added `vcx_connection_send_discovery_features` function to send discovery features message to the specified connection to discover which features it supports, and to what extent.
- Updated connection state machine to respond on `Query` and `Disclose` messages after connection is established.
- Added new Vcx setting: `actors`. This setting specifies the set of protocols which application supports.
The following actors are implemented by default: [inviter, invitee, issuer, holder, prover, verifier, sender, receiver]. 
You need to edit this list in case application supports the less number of actors.

Flow:
Outbound:
- `vcx_connection_send_discovery_features` - send discovery query. 
- `download_message` - download messages from agency
- take message with `disclose` type
- `update_state_with_message` - to handle disclose message.

Inbound:
- `download_message` - download messages from agency
- take message with `query` type 
- `update_state_with_message` - to handle query message.;;;",,,,,,,,,,,
Trustee can not touch verkey of the DID owner,IS-1156,37029,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ashcherbakov,ashcherbakov,22/Jan/19 4:17 PM,25/May/19 1:32 AM,28/Oct/23 2:49 AM,28/Jan/19 4:52 PM,,,,,,,,1.8.0,,,,,,,0,,,,"Starting from Indy-node 1.6.746, Trustee can not touch verkey field of NYM txn if it's already set.

If a Trustee needs to change the role (demote/promote), he or she should send a txn with a role field only.

*Acceptance criteria*
 * Make sure that nothing is broken in CLI
 * Update all tests if necessary

 

Also please note, that error message will be fixed in the scope of INDY-1963",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i006w9:",,,,Unset,Unset,EV 19.02,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ashcherbakov,,,,,,,,,"22/Jan/19 11:18 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1429;;;",,,,,,,,,,,
python negotiate_proof.py ,IS-1157,37031,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,amActiveHello,amActiveHello,amActiveHello,22/Jan/19 6:40 PM,10/Oct/19 9:19 PM,28/Oct/23 2:49 AM,10/Oct/19 9:19 PM,,,,,,,,,,python wrapper,,,,,0,,,,"when i run python negotiate_proof.py  ,in the step 9 it promt:

do_call: Function indy_prover_get_credentials_for_proof_req returned error 113
Error occurred: (<ErrorCode.CommonInvalidStructure: 113>, 'Error: Invalid structure\n Caused by: Invalid ProofRequest json has been passed\n Caused by: missing field `name` at line 1 column 341\n')

but i  print requst:

{'name': 'proof_req_1',
 'nonce': '123432421212',
 'requested_attrs': {'attr1_referent': {'name': 'name',
 'restrictions': [\{'issuer_did': 'NcYxiDXkpYi6ov5FcYDi1e'}]}},
 'requested_predicates': {'predicate1_referent': {'attr_name': 'age',
 'p_type': '>=',
 'restrictions': [\{'issuer_did': 'NcYxiDXkpYi6ov5FcYDi1e'}],
 'value': 18}},
 'version': '0.1'}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:911c",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),amActiveHello,Artemkaaas,esplinr,,,,,,,,"26/Feb/19 8:04 PM;Artemkaaas;[~amActiveHello] what libindy version do you use?
I see that python how-tos in the master branch are significantly outdated.
They can't work with last libindy versions. 
Requested predicates have different format:
{code:java}
 {'name', 'p_type', 'p_value', 'restrictions', ''non_revoked'}
{code}
here is [link on proof request format|https://github.com/hyperledger/indy-sdk/blob/master/wrappers/python/indy/anoncreds.py#L834];;;","10/Oct/19 9:19 PM;esplinr;We will need to redesign the documentation after the python wrapper moves to the Aries project, so we won't be fixing it now.;;;",,,,,,,,,,
using hash as name for attribute causes errors,IS-1158,37051,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,MattRaffel,MattRaffel,23/Jan/19 2:39 AM,01/Apr/19 4:05 PM,28/Oct/23 2:49 AM,06/Mar/19 11:26 PM,,,,,,,,1.8.2,,,,,,,0,,,,"bq. sklump 6:39 AM   
bq. Hey indy-sdk fans!
bq. I am feeling magnanimous, so I bestow a trade secret onto all before this comment scrolls off the end.
bq. In a schema, do not call an attribute `hash`. It is reserved. The origin can write the schema to the ledger, but sending the cred def to the ledger returns a mysterious and otherwise un-troubleshoot-able
bq. ```
bq. von_anchor.error.BadLedgerTxn: (1012) Ledger rejected transaction request: client request invalid: InsufficientCorrectSignatures(0, 1)
bq. ```
bq. This lesson cost me 5 hours but is yours for the time it took to read this comment.


*We should either document which words are ""keywords"" or fix this it*.   I propose one of two possible solutions to fix it a) allow key words like hash so that nothing is broken or b) better logging so someone doesn't spend 5 hours trying to figure it out.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910wz",,,,Unset,Unset,EV 19.04,EV 19.05,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,MattRaffel,VladimirWork,,,,,,,,"27/Feb/19 7:52 PM;Artemkaaas;There was a discrepancy between libindy and indy-node signature preparation functions.
hash, enc, raw are fields of ATTRIB and GET_ATTRIB requests. They require additional hashing during request signature preparation.
There was a bug in Libindy that this hashing was applying for these fields even for no attrib related transactions.
Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1501;;;","01/Mar/19 2:57 PM;Artemkaaas;build version: master-996;;;","06/Mar/19 11:26 PM;VladimirWork;Build Info:
indy-node 1.6.839
libindy 1.8.1~997

Steps to Validate:
1. Create and send to the ledger schema with 'hash', 'enc' and 'raw' attributes.
2. Create and send to the ledger credential definition using this schema.
3. Create credential, offer and proof using this credential definition.

Actual Results:
All entities are created without any errors.;;;",,,,,,,,,
A2A: Support pack/unpack in wrappers,IS-1159,37115,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,sergey.minaev,sergey.minaev,25/Jan/19 1:16 AM,22/May/19 7:30 PM,28/Oct/23 2:49 AM,31/Jan/19 2:24 PM,,,,,,,,1.8.0,,,,,,,0,,,,"For each wrapper new API calls should be added and covered by tests.

It's nice to have how-tos, but it may be postponed for community contribution.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i006wc:",,,,Unset,Unset,EV 19.02,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Pack/unpack in Java,IS-1160,37116,37115,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MattRaffel,sergey.minaev,sergey.minaev,25/Jan/19 1:53 AM,22/May/19 7:30 PM,28/Oct/23 2:49 AM,31/Jan/19 2:23 PM,,,,,,,,1.8.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i008t3:",,,,Unset,Unset,EV 19.02,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"28/Jan/19 6:31 PM;Artemkaaas;Done in the scope of PRs
https://github.com/hyperledger/indy-sdk/pull/1435 https://github.com/hyperledger/indy-sdk/pull/1439;;;","31/Jan/19 2:23 PM;Artemkaaas;Build version: master-958;;;",,,,,,,,,,
Pack/unpack in Python,IS-1161,37117,37115,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,kdenhartog,sergey.minaev,sergey.minaev,25/Jan/19 1:54 AM,22/May/19 7:30 PM,28/Oct/23 2:49 AM,31/Jan/19 11:11 AM,,,,,,,,1.8.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i008tb:",,,,Unset,Unset,EV 19.02,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"28/Jan/19 6:32 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1438;;;","31/Jan/19 2:23 PM;Artemkaaas;Build version: master-958;;;",,,,,,,,,,
Pack/unpack in NodeJS,IS-1162,37118,37115,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,25/Jan/19 1:54 AM,22/May/19 7:30 PM,28/Oct/23 2:49 AM,31/Jan/19 2:23 PM,,,,,,,,1.8.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i008tj:",,,,Unset,Unset,EV 19.02,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"28/Jan/19 4:50 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1439;;;","31/Jan/19 2:23 PM;Artemkaaas;Build version: master-958;;;",,,,,,,,,,
Pack/unpack in iOS,IS-1163,37119,37115,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,25/Jan/19 1:57 AM,22/May/19 7:30 PM,28/Oct/23 2:49 AM,31/Jan/19 2:23 PM,,,,,,,,1.8.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i008tr:",,,,Unset,Unset,EV 19.02,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"28/Jan/19 4:50 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1439;;;","31/Jan/19 2:23 PM;Artemkaaas;Build version: master-958;;;",,,,,,,,,,
libnullpay broken for android,IS-1164,37200,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MattRaffel,MattRaffel,MattRaffel,29/Jan/19 4:49 AM,12/Feb/19 12:07 AM,28/Oct/23 2:49 AM,12/Feb/19 12:07 AM,,,,,,,,1.8.1,,,,,,,0,TShirt_M,,,"from rocketchat:
bq. AlexanderVtyurin 4:00 AM
bq. @MattRaffel I’m able to run `nullpay_init()` on android. Something wrong with nullpay logger, so if you’ll comment all logger-related code and pass this new lib to android - everything will be fine.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:9106",,,,Unset,Unset,Ev 19.03,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),KitHat,MattRaffel,,,,,,,,,"12/Feb/19 12:07 AM;KitHat;Hotfix implemented, further work is planned to find out what is wrong.;;;",,,,,,,,,,,
iOS build OpenSSL build error,IS-1165,37314,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MattRaffel,MattRaffel,MattRaffel,31/Jan/19 5:13 AM,01/Apr/19 4:06 PM,28/Oct/23 2:49 AM,01/Mar/19 10:49 PM,,,,,,,,1.8.2,,,,,,,0,,,,"Running this command ""ci/ios-build.sh libindy x86_64-apple-ios"" from indy-sdk root folder, I was able to recreate the openssl compile error:

{quote}Compiling openssl-sys v0.9.40
error: failed to run custom build command for `openssl-sys v0.9.40`
process didn't exit successfully: `/Users/matt.raffel/src/work/indy-sdk/libindy/target/debug/build/openssl-sys-96156c4f067969eb/build-script-main` (exit code: 101)
--- stdout
cargo:rerun-if-env-changed=X86_64_APPLE_IOS_OPENSSL_LIB_DIR
cargo:rerun-if-env-changed=OPENSSL_LIB_DIR
cargo:rerun-if-env-changed=X86_64_APPLE_IOS_OPENSSL_INCLUDE_DIR
cargo:rerun-if-env-changed=OPENSSL_INCLUDE_DIR
cargo:rerun-if-env-changed=X86_64_APPLE_IOS_OPENSSL_DIR
cargo:rerun-if-env-changed=OPENSSL_DIR

--- stderr
thread 'main' panicked at 'OpenSSL library directory does not exist: /usr/local/Cellar/openssl/1.0.2l/lib', /Users/matt.raffel/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.9.40/build/main.rs:60:9
note: Run with `RUST_BACKTRACE=1` for a backtrace.

warning: build failed, waiting for other jobs to finish...
error: build failed
Cargo exited unsuccessfully: exit code: 101{quote}

h2. when
OPENSSL_DIR=""/usr/local/Cellar/openssl/1.0.2q""

h2. Work around
copy /usr/local/Cellar/openssl/1.0.2q to /usr/local/Cellar/openssl/1.0.2l





",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910uzi",,,,Unset,Unset,EV 19.04,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,MattRaffel,sergey.minaev,,,,,,,,"26/Feb/19 12:36 PM;sergey.minaev;I suggest to update our scripts, pipelines and build machines to the latest version of openssl;;;","27/Feb/19 12:23 AM;MattRaffel;we should update our scripts.  I feel we should also make the scripts intelligent enough to use OPENSSL_DIR if its set.  ;;;","27/Feb/19 4:15 PM;Artemkaaas;Sergey suggestions are done in PR: https://github.com/hyperledger/indy-sdk/pull/1496
Matt suggestion is done in PR: https://github.com/hyperledger/indy-sdk/pull/1499;;;",,,,,,,,,
DID API should allow pairwise key rotation,IS-1166,37337,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sklump,sklump,01/Feb/19 12:13 AM,30/Jan/20 10:05 PM,28/Oct/23 2:49 AM,30/Jan/20 10:05 PM,1.8.0,,,,,,,1.14.2,,libindy,,,,,0,Documentation,hygiene,,"How do I update a pairwise did/verkey association in a wallet? I can call `did.store_their_did()` to set one in the first place. Now suppose the other party rekeys and I want to update the association in my wallet, or else I just fat-fingered it somehow. Calling it again with a new identify using the same DID but a new verkey raises a uniqueness exception as expected, but I don't see a way to delete or overwrite such an association.

The non_secrets API can handle all that pairwise can, plus updating/deleting and WQL searching by tags. My preference would be to get rid of pairwise, but that appears to be a minority opinion. Including functionality to update, replace, delete pairwise non_secrets via the pairwise API would suffice, while presenting (puzzling, to newcomers) redundancy with non_secrets.

For the moment, the non_secrets API offers a workaround.",,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,IS-1362,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q2:zzr",,,,Unset,Unset,Indy Aries 19.26,Indy Aries 20.01,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,sklump,,,,,,,"25/Feb/19 11:24 PM;sklump;I've changed my mind on retaining pairwise: in the interest of inter-implementation compatibility, having a single pairwise front-end to the non_secrets API could add significant value; this implementation would handle all values and metadata the same for everyone rather than allowing idiosyncracies to act as an incompatibility factory. For example, my own implementation repeats their_verkey and their_did into the tags, plus an epoch time, for potential WQL search.;;;","28/Feb/19 8:10 AM;esplinr;Thank you for the suggestion. We agree that this capability should exist.

We'll look for an opportunity to work on this and would be happy to discuss approaches with others who want to work on this issue.;;;","14/Jan/20 9:58 PM;Artemkaaas;Thank  [~sklump]  for the suggestion. This capability must exist.
Allow updating of  an existing `their DID` record on `indy_store_their_did` function looks reasonable and safe. I didn't find any important side effects and risks after codebase investigation.
I did changes in the PR: https://github.com/hyperledger/indy-sdk/pull/2035

 ;;;","30/Jan/20 9:59 PM;sergey.minaev;Available in master 1.14.1 1467
covered by integration tests;;;",,,,,,,,
Libsovtoken doesn't compile with Indy 1.8.0,IS-1167,37388,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,MattRaffel,MattRaffel,02/Feb/19 2:28 AM,28/Mar/19 8:32 PM,28/Oct/23 2:49 AM,28/Mar/19 8:32 PM,,,,,,,,,,,,,,,0,Libsovtoken,,,"Update libsovtoken Cargo.toml to use indy 1.8.0, like 
bq. indy = ""1.8.0""

Clean and compile libsovtoken and you get the following error
{quote}Compiling indy v1.8.0
error[E0463]: can't find crate for `indy`
  --> src/lib.rs:45:1
   |
45 | extern crate indy;                      // lib-sdk project
   | ^^^^^^^^^^^^^^^^^^ can't find crate

error: aborting due to previous error{quote}

FYI:  indy crate is the rust wrapper.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1139,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx",,,,Unset,Unset,EV 19.06,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,KitHat,MattRaffel,,,,,,,,"02/Feb/19 5:08 AM;MattRaffel;Im pretty sure libsovtoken was broken with 1.7.0 rust wrapper release.  I vaguely remember conversations about 1.7.0 changes.   1.70 added futures and changed the rust wrapper api.  Assuming, I am correct in that recollection, this will be a big change to go from 1.6.7 to 1.8.0 (or 1.7.0).;;;","18/Feb/19 11:59 PM;KitHat;PoA: https://docs.google.com/document/d/1eQ69WwfACQpzHk_ETVo-4DtPVCr6J7Dp8Bm-zp_K2Ao/edit;;;","22/Mar/19 7:19 PM;Artemkaaas;Done in PR: https://github.com/sovrin-foundation/libsovtoken/pull/350;;;","28/Mar/19 6:43 PM;Artemkaaas;Build version: master-0.9.6~2;;;",,,,,,,,
VCX: Error appears every minute during running python wrapper demo,IS-1168,37414,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ozheregelya,ozheregelya,ozheregelya,04/Feb/19 10:56 PM,01/Apr/19 4:06 PM,28/Oct/23 2:49 AM,28/Feb/19 9:48 PM,,,,,,,,1.8.2,,,,,,,0,,,,"*Environment:*
 libindy 1.8.0
 indy-node 1.6.82

*Steps to Reproduce:*
 1. Run python wrapper demo as described in [instruction|https://github.com/hyperledger/indy-sdk/blob/master/vcx/wrappers/python3/demo/README.txt].

*Actual Results:*
 Following error appears every second:
{code:java}
src/messages/mod.rs:123 | could not deserialize bundle with i8, will try u8
{code}
*Expected Results:*
 No errors should appear.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910uy",,,,Unset,Unset,EV 19.04,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ozheregelya,,,,,,,,,"26/Feb/19 11:57 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1498;;;","28/Feb/19 8:26 PM;Artemkaaas;build version: master-991;;;","28/Feb/19 9:48 PM;ozheregelya;*Environment:*
 libindy 1.8.1~991
 indy-node 1.6.836

*Steps to Validate:*
 1. Run python wrapper demo as described in [instruction|https://github.com/hyperledger/indy-sdk/blob/master/vcx/wrappers/python3/demo/README.txt] (original one).

*Actual Results:*
 The error named in description doesn't appear.;;;",,,,,,,,,
VCX: Instructions for installation on Windows should be added to documentation,IS-1169,37415,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ozheregelya,ozheregelya,ozheregelya,04/Feb/19 11:00 PM,01/Apr/19 4:06 PM,28/Oct/23 2:49 AM,01/Mar/19 12:52 AM,,,,,,,,1.8.2,,,,,,,0,,,,Instructions for installation on Windows should be added to documentation for VCX and for VCX wrappers.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910uzr",,,,Unset,Unset,EV 19.04,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ozheregelya,,,,,,,,,"27/Feb/19 12:04 AM;Artemkaaas;Updated Vcx readme to reflect windows installation: https://github.com/hyperledger/indy-sdk/pull/1497;;;","01/Mar/19 12:51 AM;ozheregelya;*Environment:*
libindy 1.8.1~991

Instruction is added and describes archive for Windows correctly.;;;",,,,,,,,,,
VCX: Expose inner objects,IS-1170,37435,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,AlexanderVtyurin,AlexanderVtyurin,05/Feb/19 5:23 PM,18/Sep/19 10:53 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libvcx,,,,,0,,,,"Let's suppose I have a system where some of the credential-related interactions a going through _libvcx_ and indy-agents and others are going directly through p2p connections with _libindy_.

Right now I'm unable to build such a system because: 
 * _libvcx_ is forcing me to use agents (that's not ok)
 * _libindy_ is just not suited for agents (that's ok)
 * there is no direct interoperability between these two

It would be nice to have access to _libvcx_ inner objects (e.g. *credential offer*) and have the ability to recreate reference objects from these inner objects.

Example: the Issuer creates *IssuerCredential* object, generates *a credential offer* using this object, serializes it and sends it through pigeon post to the Prover; the Prover receives this object, figures out it is *a credential offer* from Issuer, deserializes it in *ProverCredential* object and generates *a* *credential request* using this object, serializes it, sends back and so on.

This will not break the agent paradigm - all the work that needs to be done is to separate object generation form object sending in current _libvcx_ and also add (de)serialization.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Feb/19 5:22 PM;AlexanderVtyurin;libvcx-refactor.png;https://jira.hyperledger.org/secure/attachment/16718/libvcx-refactor.png",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1080,,,No,,Unset,No,,,"1|hzwvm0:i",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),AlexanderVtyurin,esplinr,,,,,,,,,"18/Sep/19 10:52 PM;esplinr;Thank you for the great feedback on the architecture of LibVCX.

We moved closer to this paradigm with the changes we made in July, but there is more work to do.;;;",,,,,,,,,,,
Unable to read from the single node,IS-1171,37459,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,KitHat,VladimirWork,VladimirWork,07/Feb/19 1:19 AM,12/Feb/19 12:06 AM,28/Oct/23 2:49 AM,12/Feb/19 12:06 AM,1.8.0,,,,,,,1.8.1,,libindy,,,,,0,TShirt_S,,,"Build Info:
indy-node 1.6.83 rc
libindy / indy-cli 1.8.0 rc

Steps to Reproduce:
1. Start pool of 4 nodes.
2. Send and get NYM.
3. Stop the 3 of 4 nodes.
4. Get NYM from Step2.

Actual Results:
System test:
{code:java}
indy.error.IndyError: (<ErrorCode.PoolLedgerTimeout: 307>, 'Error: Pool timeout\n  Caused by: Consensus is impossible\n')
{code}
CLI:
Freeze for 15+ minutes (see screenshot).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/19 1:23 AM;VladimirWork;1988.tar.gz;https://jira.hyperledger.org/secure/attachment/16730/1988.tar.gz","07/Feb/19 4:00 PM;VladimirWork;1988_2.tar.gz;https://jira.hyperledger.org/secure/attachment/16731/1988_2.tar.gz","07/Feb/19 4:20 PM;VladimirWork;1988_2_client.txt;https://jira.hyperledger.org/secure/attachment/16732/1988_2_client.txt","07/Feb/19 4:26 PM;VladimirWork;1988_client;https://jira.hyperledger.org/secure/attachment/16733/1988_client","07/Feb/19 5:26 PM;VladimirWork;1988_extended_log.txt;https://jira.hyperledger.org/secure/attachment/16734/1988_extended_log.txt","07/Feb/19 1:19 AM;VladimirWork;image (7).png;https://jira.hyperledger.org/secure/attachment/16728/image+%287%29.png",,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00832:",,,,Unset,Unset,Ev 19.03,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashcherbakov,VladimirWork,,,,,,,,,"07/Feb/19 1:21 AM;VladimirWork;FYI [~ashcherbakov] [~sergey.minaev];;;","07/Feb/19 3:59 PM;ashcherbakov;Reply received from Node4 didn't have BLS multi-sig and state proof there because of the following:
 # Node4 was started at 16:24:16, while all other nodes started at 16:14:12.
 # The write request was sent at 16:14:24, that is at the time when Node4 wasn't started at all
 # So, Nodes1-3 ordered request and updated BLS multi-sig, while Node4 just caught it up when it strted
 # We don't catch-up BLS multi-sig. So, Node4 didn't have it for the request. That's why reply to this node didn't have BLS multi-sig.

Next steps:
 # Make sure that all Nodes are started before sending write request.
 # Try stopping not the 4th Node
 # [SDK]Investigate why CLI was frozen;;;","07/Feb/19 4:01 PM;VladimirWork;Logs 1988_2 and 1988_2_client with greater pool uptime have been added.;;;","07/Feb/19 4:02 PM;ashcherbakov;In the second run everything looks fine from the Node side:
{code}
2019-02-07 06:57:10,629|DEBUG|node.py|Node4 received client request: SafeRequest: \{'operation': {'dest': 'AKXRt1uKKRAHyCWZjAcazN', 'type': '105'}, 'protocolVersion': 2, 'reqId': 1549522610579327074, 'signature': '4c7AsPLnLycGbpNJHPmdjM4PjuHdBxXkkzVFJPfmyAuBoUaYFKtRHDzJH451gzGPXC9dDR7kgPBfhTQytAWx1Zhb', 'identifier': 'V4SGRU86Z58d6TV7PBUe6f'} from b'bno/ozpI/W&W#n7.2UnhMbC[q3[dqY/b-i*HIKNn'
2019-02-07 06:57:10,629|TRACE|zstack.py|Node4C transmitting b'\{""reqId"":1549522610579327074,""op"":""REQACK"",""identifier"":""V4SGRU86Z58d6TV7PBUe6f""}' to b'bno/ozpI/W&W#n7.2UnhMbC[q3[dqY/b-i*HIKNn' through listener socket
2019-02-07 06:57:10,630|TRACE|zstack.py|Node4C transmitting b'\{""op"":""REPLY"",""result"":{""state_proof"":{""multi_signature"":{""participants"":[""Node2"",""Node4"",""Node3""],""value"":{""pool_state_root_hash"":""GHGNKae8zzhVv172zFHs6Xu9fMY4MrKxSrcH5kHzcqsm"",""timestamp"":1549522599,""txn_root_hash"":""DPpPLoKYGu5eWQAqFTwZYi9QoMKPUN5zyVM6Gy7QBaqU"",""ledger_id"":1,""state_root_hash"":""5cxVmryhP9e6Z6YG8R1ztiYFYkvpLPnqG91vnzSRqdUE""},""signature"":""RC8cJJFEKw86QsC23MMqL2Lzu4YdyZxFTHGTZ6zeoCaHkaYSjCF32WmmcoXZbaetk5xPePakGcBSD8cMGZuvAamxGq9oP9iCbwD2Xmz28UiEXdXFP6hKFQZoV6dFUi1QqewbJSikzrM5MmTfvYzvigitVh7gbcMgmR9ZRbkVhB8y51""},""proof_nodes"":""+QH++IigNKqhbEtJaEniqnVu5H9sPgu1ls\\/zNhHqlbXcKuLaygG4ZfhjuGF7ImlkZW50aWZpZXIiOiJWNFNHUlU4Nlo1OGQ2VFY3UEJVZTZmIiwicm9sZSI6bnVsbCwic2VxTm8iOjE2LCJ0eG5UaW1lIjoxNTQ5NTIyNTk5LCJ2ZXJrZXkiOm51bGx9+QFxoNPSP24JsVps7QufK62cHm4MLrVBpYu1VMlThcJrixajgICgmpq6PvRB\\/76zSDjdvXO+dATJAmHaV82rEVG2ZoAO+TCAoAIbx\\/TDY2y4OJtZiJtzVNjJICBQpJ4h68cXrBVl0wEvoEQAggmzS6f2NWpUQAFsJZORzSvJtNWsWBopTosPpyIZoGmlPIlNYCxG5AlWMDDBEymsT1Bg6xLuto2AaUBBlWf+gKCH+gPrgHzSpxbaHWKfXpkzmhFuCbdUKnPZJwwcJHHzf6AMGCF8JlMkFyhzFDNnVgcFG+s4mEd+p2N1c9BTn5vTi6AkcibehQ5iUOtCXD3lQORF05za0YiwT2DavXYCOkmJQoCgfSVcTjtW1SUW\\/CcILmuBjzvybpOl4RlMkgp3hJTFe2qgo7X9n6iDOVDg4bdR+xYhT1Ptv+6Un1mvS510nicvUuCgOzoZfFEvyKcPZvdFjW\\/+5+SwMc2p8UporYwQiM0hnBqA"",""root_hash"":""5cxVmryhP9e6Z6YG8R1ztiYFYkvpLPnqG91vnzSRqdUE""},""dest"":""AKXRt1uKKRAHyCWZjAcazN"",""type"":""105"",""reqId"":1549522610579327074,""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""seqNo"":16,""data"":""\{\\""dest\\"":\\""AKXRt1uKKRAHyCWZjAcazN\\"",\\""identifier\\"":\\""V4SGRU86Z58d6TV7PBUe6f\\"",\\""role\\"":null,\\""seqNo\\"":16,\\""txnTime\\"":1549522599,\\""verkey\\"":null}"",""txnTime"":1549522599}}' to b'bno/ozpI/W&W#n7.2UnhMbC[q3[dqY/b-i*HIKNn' through listener socket
{code};;;",,,,,,,,
A2A: change message structure in VCX,IS-1172,37483,36784,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,07/Feb/19 9:28 PM,22/May/19 7:36 PM,28/Oct/23 2:49 AM,01/Mar/19 3:59 AM,,,,,,,,1.8.2,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00atz:",,,,Unset,Unset,Ev 19.03,EV 19.04,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"09/Feb/19 12:22 AM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1464;;;",,,,,,,,,,,
A2A: change message structure in dummy-agent,IS-1173,37484,36784,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,07/Feb/19 9:29 PM,22/May/19 7:36 PM,28/Oct/23 2:49 AM,15/Feb/19 6:24 PM,,,,,,,,1.8.2,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00au7:",,,,Unset,Unset,Ev 19.03,EV 19.04,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"09/Feb/19 12:22 AM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1464;;;",,,,,,,,,,,
VCX: requested_predicates field ignored,IS-1174,37493,,Bug,To Develop,IS,Indy SDK,software,resplin,,,High,,esplinr,AlexanderVtyurin,AlexanderVtyurin,08/Feb/19 12:09 AM,08/Oct/19 10:16 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libvcx,,,,,1,,,,"To get credentials for a particular proof request from wallet:
 * _libindy_ calls *get_credentials_for_proof_req()* which works absolutely fine
 * _libvcx_ calls *libindy_prover_get_credentials_for_proof_req()* which ignores *requested_predicates* field

So, predicate ZKP actually doesn't work in _libvcx_",,,,,,,,,,,,,,,,,,,,,,,,IS-1095,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:r",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),AlexanderVtyurin,esplinr,ianco,sergey.minaev,,,,,,,"08/Feb/19 1:28 PM;ianco;I've done an initial set of updates to support ZKP in VCX here:  https://github.com/ianco/indy-sdk/commit/99df0824b41d90c33b5b4460d32e199bbc227442

I'll PR them soon.
;;;","08/Feb/19 8:21 PM;AlexanderVtyurin;[~ianco], amazing job, thanks!;;;","14/Aug/19 10:35 PM;esplinr;[~ianco] We saw your work in [PR 1469| https://github.com/hyperledger/indy-sdk/pull/1469], but you decided to take a different approach. Are you still working on this effort?;;;","15/Aug/19 2:59 AM;ianco;I'm no longer working on this, it was completed as far as I know, with the PR.
;;;","02/Sep/19 6:44 PM;sergey.minaev;[~esplinr] Artem has checked codebase and his resolution: ""VCX doesn't support predicates now"";;;",,,,,,,
Update Libsovtoken to use new logging pattern,IS-1175,37504,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,MattRaffel,MattRaffel,08/Feb/19 2:31 AM,30/Mar/19 6:35 AM,28/Oct/23 2:49 AM,30/Mar/19 6:35 AM,,,,,,,,,,,,,,,0,Libsovtoken,,,"Libsovtoken logging initialization is implemented using the ""old model"".  The new model involves calling indy_get_logger.    Update libsovtoken to use new pattern.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Mar/19 8:48 PM;Artemkaaas;indy_cli.log;https://jira.hyperledger.org/secure/attachment/17015/indy_cli.log",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910wyr",,,,Unset,Unset,EV 19.06,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,MattRaffel,,,,,,,,,"22/Mar/19 7:19 PM;Artemkaaas;Done in PR: https://github.com/sovrin-foundation/libsovtoken/pull/350;;;","28/Mar/19 6:43 PM;Artemkaaas;Build version: master-0.9.6~2;;;","28/Mar/19 8:48 PM;Artemkaaas;Build Info:
libsovtoken 0.9.6~2
libindy 1.8.2
indy-cli 1.8.2

Steps to Validate:
1. Open Indy-CLI
2. Initialize logger to write to file `init-logger /home/indy/cli/logger.yml`
3. Load sovtoken plugin `load-plugin library=libsovtoken.so initializer=sovtoken_init`
4. Create and open `wallet create w1 key=k1` and `wallet open w1 key=k1`
5. Create a payment address `payment-address create payment_method=sov`

Expected result:
The Log file contains log records from Indy-Cli, Liibndy, and Libsovtoken

Actual Results:
There are log records from all components as expected.  The log file is attached.;;;",,,,,,,,,
Need documentation for LibVCX iOS and Android build scripts,IS-1176,37505,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Deferred,,MattRaffel,MattRaffel,08/Feb/19 2:33 AM,18/Sep/19 10:42 PM,28/Oct/23 2:49 AM,18/Sep/19 10:42 PM,,,,,,,,,,,,,,,0,,,,Fix and or add documentation and scripts so that anyone can build and run VCX iOS and android.,,,,,,,,,,,,IS-875,IS-941,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:9112",,,,Unset,Unset,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,MattRaffel,,,,,,,,,"18/Sep/19 10:42 PM;esplinr;LibVCX is not likely to be part of the Aries architecture, so we won't worry about further documentation unless it is requested by people using the artifacts.;;;",,,,,,,,,,,
A2A: PoA for routing message family,IS-1177,37565,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,11/Feb/19 5:44 PM,25/Dec/19 7:43 PM,28/Oct/23 2:49 AM,19/Dec/19 8:38 PM,,,,,,,,1.13.0,,,,,,,0,,,,"Review these HIPEs:
* https://github.com/hyperledger/indy-hipe/tree/master/text/0022-cross-domain-messaging
* https://github.com/hyperledger/indy-hipe/pull/75

Provide feedback on the HIPEs

Provide a POA for reconciling the current implementation with the HIPEs.

Raise relevant issues.

Notes:
* Might need to create an additional message family for our current use case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo79",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"19/Dec/19 8:35 PM;sergey.minaev;In scope of Aries Interop Profile 1.0 this messages family seems good enough in RFCs. And it's supported by libVCX now.
Related topic is RFC about return route which may be helpful for libVCX without cloud Agency;;;",,,,,,,,,,,
Release Indy SDK 1.8.1,IS-1178,37581,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,KitHat,KitHat,11/Feb/19 11:33 PM,27/Feb/19 5:05 AM,28/Oct/23 2:49 AM,12/Feb/19 12:06 AM,,,,,,,,1.8.1,,,,,,,0,,,,"*Task Overview*
 Perform all necessary tasks to have a release of LibIndy.

*Acceptance Criteria*
 * Code is tested
 * Release is tagged
 * Release notes are drafted
* Issues in JIRA are assigned to the correct fix version
 * Release notes are reviewed by Docs and Product Management
 * A new release of Indy-Crypto is part of this release

*Notes*
* Evernym maintained ledger plugins may also need to be released.",,,,,,,,,,,,,,,,,,,,,IS-1199,,IS-1150,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,"1|i00832:i",,,,,,Ev 19.03,,,,,,8.0,,,,,,,,,,,,KitHat,,,,,,,,,,,,,,,,,,,,,
Evaluate Streetcred's Credential Exchange library,IS-1179,37584,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MattRaffel,esplinr,esplinr,11/Feb/19 11:58 PM,21/Feb/19 11:42 PM,28/Oct/23 2:49 AM,21/Feb/19 11:42 PM,,,,,,,,,,libvcx,,,,,0,,,,"Streetcred has produced a credential exchange library:
https://github.com/streetcred-id/agent-framework

Acceptance Criteria:
* Review the library
* Give feedback to the Streetcred team
* Determine how Indy SDK can improve based on the ideas in the library
* Raise associated tickets",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1143,,,No,,Unset,No,,,"1|hzwrhj:910k",,,,Unset,Unset,EV 19.04,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
LibVCX and Aries connection protocol,IS-1180,37654,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,13/Feb/19 11:33 PM,11/Nov/19 6:56 PM,28/Oct/23 2:49 AM,11/Nov/19 6:56 PM,,,,,,,,1.13.0,,,,,,,0,,,,"Current VCX flow

Inviter:
 1) vcx_connection_create -> creates `Connection` state object associated with handle -> state.Initialized = 1
 2) vcx_connection_connect -> prepares invite which already contains inviter pairwise keys -> move state.OfferSent = 2 -> share invite somehow with Invitee
 3) vcx_connection_update_state -> wait until get `invite response` -> store recived pairwise data -> move state.VcxStateAccepted = 4 -> assume that connection is establised.

Invitee:
 1) vcx_connection_create_with_invite -> creates `Connection` state object associated with handle -> store recived pairwise data -> state.VcxStateRequestReceived = 3
 2) vcx_connection_connect -> send invite response -> move state.VcxStateAccepted = 4 -> assume that connection is establised.

Aries flow: [https://github.com/hyperledger/aries-rfcs/tree/master/features/0023-did-exchange]

Inviter:
 1) vcx_connection_create -> creates `Connection` state object associated with handle -> state.Initialized = 1
 2) vcx_connection_connect -> prepares invite which contains minimal agent data necessary to reply on invite -> move state.Invited = 2 -> share invite somehow with Invitee
 3) vcx_connection_update_state -> asks agency for messages by sending `GetMessages` command with status code `Pending`? -> (decrypt)  wait until get `connection_request` message -> move state.Requested = 3 -> prepare `connection_request` message containing paiwise connection data -> send `connection_request` -> move state.Responded = 4 -> send UpdateMessageStatus`  command to agenct with status code `Accepted`? -> (decrypt) wait until get `ack` -> stores recived pairwise data -> move state.Accepted = 5 -> send UpdateMessageStatus`  command to agenct with status code `Accepted`? -> assume that connection is establised.

Invitee:
 1) vcx_connection_create_with_invite -> creates `Connection` state object associated with handle -> state.Invited = 2
 2) vcx_connection_connect -> prepare `connection_request` message containing paiwise connection data -> send `connection_request` -> move to state.Requested = 3
 3) vcx_connection_update_state -> asks agency for messages by sending `GetMessages` command with status code `Pending`? -> (decrypt)  until get `connection_response` -> stores recived pairwise data -> move state.Responded = 4 -> send `ack` -> move state.Accepted = 5  -> send UpdateMessageStatus`  command to agenct with status code `Accepted`? -> assume that connection is establised.

Already supported:
 - Message encryption/decryption: [https://github.com/hyperledger/aries-rfcs/tree/master/features/0019-encryption-envelope]
 - Message Id and Threading: [https://github.com/hyperledger/aries-rfcs/tree/master/concepts/0008-message-id-and-threading]

Difference:

Difference:
 1) The format of outgoing and incoming messages are absolutely different. 
 2) Vcx packs messages according to pairwise DIDDoc stored in the state and sends them to pairwise remote endoint directly. NOT to it's own Agency.
 3) Agency collects incoming messages in encoded view and with received status. Vcx gets them -> decodes them -> processes them -> sends updaes messages status command to Agency.
 4) The general idea and format of the Invite message differ:
 - In the current flow -> already contains all pairwise data need for other side connection establishment.
 - In the aries -> only minimal data of the user and associated agent necessary to reply to the invite.

5) Aries protocol implies more state - We can hide it under `vcx_connection_update_state` function for both Inviter and Invitee. There were some additional states before moving to `Accepted`.
 - Inviter should wait for `ack` message
 - Invitee should wait to `respond` message and send `ack`.

6) Support sending and handling of Error Messages as described here: [https://github.com/hyperledger/aries-rfcs/tree/master/features/0160-connection-protocol#errors]

7) Minimal DidDoc handling.

Old description:
 Review these HIPEs:
 [https://github.com/hyperledger/indy-hipe/pull/54]

Provide feedback on the HIPEs

Implement the changes possible in the current codebase.

Pass the connection protocol tests of the agent test suite.

Provide feedback on the open questions that aren't resolved in the HIPE PR.

Raise relevant issues for further improvements.

*Notes*
 * LibVCX currently expects that all connections are started by the issuer agent, not by the mobile agent. This could make it difficult to pass both directions of the connection test. It may be necessary to raise a separate issue for implementing the connections initiated by the mobile agent.",,,,,,,,,,,,IS-1392,,,,,,,IS-1393,IS-1394,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|hzwqmn:",,,,Unset,Unset,Indy Aries 19.21,Indy Aries 19.22,,,,(Please add steps to reproduce),13.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"11/Nov/19 6:56 PM;sergey.minaev;Implementation merged to shared branch https://github.com/hyperledger/indy-sdk/tree/vcx-aries-support ;;;",,,,,,,,,,,
Libindy proof documentation,IS-1181,37680,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,14/Feb/19 7:30 PM,01/Apr/19 4:07 PM,28/Oct/23 2:49 AM,26/Feb/19 7:24 AM,,,,,,,,1.8.2,,,,,,,0,,,,"There is a mistake in doc-string for `proof` object. 
We need to change `requested` on `requested_proof` like it has been  done in [PR|https://github.com/hyperledger/indy-sdk/pull/1462]
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910uk",,,,Unset,Unset,EV 19.04,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,,,,,,,,,,"25/Feb/19 2:52 PM;Artemkaaas;Dine in PR: https://github.com/hyperledger/indy-sdk/pull/1482;;;",,,,,,,,,,,
A2A: Process feedback on Credential Exchange MF HIPE,IS-1182,37701,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,sergey.minaev,sergey.minaev,15/Feb/19 6:52 PM,12/Apr/19 10:21 PM,28/Oct/23 2:49 AM,29/Mar/19 10:07 PM,,,,,,,,,,,,,,,0,,,,"Feedback that needs to be addressed:
* The credential attachment is too opaque. Some items need to be metadata and we need a detailed explanation of the contents of the credential attachment.
* We need to be specific about how are credential payments transferred.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1125,,,,IS-1235,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910ri",,,,Unset,Unset,EV 19.04,EV 19.06,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Compatibility/Dependency issuer for libindy 1.7.0,IS-1183,37704,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,SergeyBrazhnik,SergeyBrazhnik,15/Feb/19 9:07 PM,16/Feb/19 1:46 AM,28/Oct/23 2:49 AM,16/Feb/19 1:46 AM,,,,,,,,,,,,,,,0,,,,"The test project ( look attachment ) *correctly works* on Windows machine and not working on Mac OS machine

*Correctly works* means that indy function verifierVerifyProof returns true.**

*Windows*

libindy 1.7.0
ibsodium 1.0.14
libzmq 4.2.30
libeay32md 1.0.2.11

*MacOS*

libindy 1.7.0
ibsodium 1.0.14/1.0.16
libzmq 4.2.30
libeay32md 1.0.2l
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/19 9:11 PM;SergeyBrazhnik;indy_tests.zip;https://jira.hyperledger.org/secure/attachment/16820/indy_tests.zip",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00bxz:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),SergeyBrazhnik,,,,,,,,,,,,,,,,,,,,,
Error messages for demoted nodes are spammed in the console output ,IS-1184,37712,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,slafranca,slafranca,16/Feb/19 1:08 AM,01/Apr/19 4:05 PM,28/Oct/23 2:49 AM,11/Mar/19 3:48 PM,,,,,,,,1.8.2,,,,,,,0,,,,"Using Libvcx python wrapper, I am provisioning two connections.  Each time I call vcx_init or vcx_init_with_config, I see the following error message appear in my console output.  The error is repeated for each demoted node and each connection.  There are several demoted nodes in our pool, so I see dozens of these in my console. 

{code:java}
src/services/pool/merkle_tree_factory.rs:50 | Cache is invalid -- dropping it!
src/services/pool/pool.rs:675 | Error during retrieving nodes: IndyError { inner:

Node is not a validator

Invalid library state }
    src/services/pool/pool.rs:675 | Error during retrieving nodes: IndyError { inner:

Node is not a validator

Invalid library state }
{code}

Expected:
I do not need to see this output in the console.  This message should be an info not an error","libindy             1.8.1
libnullpay          1.8.1
libsovtoken         0.9.6~-1.126
libvcx              0.2.34516997-f3254f8
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910wzi",,,,Unset,Unset,EV 19.04,EV 19.05,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,,,,,,,,,,"27/Feb/19 12:18 AM;Artemkaaas;Will be fixed it the scope of https://github.com/hyperledger/indy-sdk/pull/1498

the setting of a minimal log level was skipped during libindy python logger initialization. so, a default was used(for python `logging` package it is `warn`).
The error above has `error` level because of this it has been appearing in the output by default. 
In the PR we set maximal log level by default, so all records will be skipped.
;;;","28/Feb/19 8:27 PM;Artemkaaas;build version: master-991;;;",,,,,,,,,,
"Rust how-to ""write-did-and-query-verkey"" does not compile",IS-1185,37765,,Bug,Complete,IS,Indy SDK,software,resplin,,,Lowest,Done,rasviitanen,rasviitanen,rasviitanen,18/Feb/19 7:48 PM,20/Feb/19 1:10 AM,28/Oct/23 2:49 AM,20/Feb/19 1:10 AM,,,,,,,,,,libindy,,,,,0,Documentation,,,"The how-to  tutorials does not compile and there are also some runtime issues.
 * The indy crate is called `indyrs` and not `indy`.
 * The 'use indy::' statements are incorrect.
 * Possiblity of SIGILL or other issues if wait() is not called on certain operations. For example: set_protocol_version(PROTOCOL_VERSION).unwrap() would need to be set_protocol_version(PROTOCOL_VERSION).wait().unwrap();

See code here:

 [https://github.com/hyperledger/indy-sdk/tree/master/docs/how-tos/write-did-and-query-verkey/rust]

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00caf:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rasviitanen,,,,,,,,,,,,,,,,,,,,,
Add public api to encrypt data,IS-1186,37778,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ryanmarsh,ryanmarsh,19/Feb/19 5:55 AM,01/Apr/19 4:07 PM,28/Oct/23 2:49 AM,01/Mar/19 4:03 AM,,,,,,,,1.8.2,,,,,,,0,,,,"Connect.me has a feature to send logs to team members for debug capabilities. We have a requirement to encrypt these logs but there is no public api in crypto.rs to do this. I spoke in person with  [~m.serg32] about this.

Acceptance Criteria:
* Provide an API endpoint to handle arbitrary encryption",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910v",,,,Unset,Unset,EV 19.04,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,ryanmarsh,sergey.minaev,,,,,,,"19/Feb/19 6:02 AM;sergey.minaev;we have anon_crypt but it was marked deprecated recently. Probably we have to change back and consider anoncrypt as part of actual API to cover usecases for simple encryption (outside A2A flow);;;","26/Feb/19 12:27 AM;esplinr;anon_crypt was deprecated because we didn't think it would be useful outside of the context of pack/unpack. Now that we have a valid use case, we should just remove the deprecation tag.;;;","27/Feb/19 8:52 PM;Artemkaaas;Removed *experimental* from anon crypt/decrypt functions. 
PR: https://github.com/hyperledger/indy-sdk/pull/1502;;;","01/Mar/19 4:03 AM;sergey.minaev;Implemented solution seems correct for current use case. In the future some functionality like file encryption may be required. Also we probably will rename  anon_crypt/decrypt functions when pack/unpack will completely replace anon/auth for A2A use cases ;;;",,,,,,,,
Android testing is not working for libindy,IS-1187,37846,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,KitHat,KitHat,21/Feb/19 2:16 AM,01/Apr/19 4:07 PM,28/Oct/23 2:49 AM,01/Mar/19 2:56 PM,,,,,,,,1.8.2,,,,,,,0,,,,Right now libindy is not built (and tested as well) for android inside the CI pipeline. We should fix this in pipeline and debug the script -- right now it freezes on the build for tests.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910ui",,,,Unset,Unset,EV 19.04,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,KitHat,,,,,,,,,"01/Mar/19 2:56 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1495
Build version: master 996;;;",,,,,,,,,,,
Update READMEs for new artifacts location,IS-1188,37897,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ozheregelya,sergey.minaev,sergey.minaev,22/Feb/19 4:45 AM,01/Apr/19 4:07 PM,28/Oct/23 2:49 AM,28/Feb/19 10:54 PM,,,,,,,,1.8.2,,,,,,,0,,,,New locations for *com.evernym.vcx* and *org.hypereldger.indy* java wrapper packages: [https://repo.sovrin.org/repository/maven-release] (might be referenced using[https://repo.sovrin.org/repository/maven-public] as well),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910ur",,,,Unset,Unset,EV 19.04,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ozheregelya,sergey.minaev,,,,,,,,"26/Feb/19 4:18 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1493;;;","28/Feb/19 11:03 PM;ozheregelya;*Environment:*
libindy 1.8.1~991
indy-node 1.6.836

*Steps to Validate:*
1. Add VCX java wrapper installation to .pom file of libindy wrapper demo.
2. Run java wrapper demo for libindy.

*Actual Results:*
Both wrappers successfully installed, demo run without any issues.;;;",,,,,,,,,,
Implement basic message protocol,IS-1189,37926,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,23/Feb/19 6:11 AM,20/Jan/20 10:10 PM,28/Oct/23 2:49 AM,20/Jan/20 10:10 PM,,,,,,,,1.14.2,,,,,,,0,,,,"Review these HIPEs:

Provide feedback on the HIPEs

Implement the changes possible in the current code base.

Pass the basic message tests of the agent test suite. Contribute missing tests to the agent test suite.

Provide feedback on the open questions that aren't resolved in the HIPE PR.

Raise relevant issues for further improvements.

Notes
 * LibVCX currently expects that all connections are started by the issuer agent, not by the mobile agent. This could make it difficult to pass both directions of the test. It may be necessary to raise a separate issue for implementing the connections initiated by the mobile agent.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1448,,,No,,Unset,No,,,"1|i016q2:zz",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"14/Jan/20 4:52 PM;Artemkaaas;Changes: added support for `basicmessage` message family.
PR: [https://github.com/hyperledger/indy-sdk/pull/2024];;;","20/Jan/20 10:10 PM;sergey.minaev;Available in master 1433 and covered by integration tests;;;",,,,,,,,,,
Implement trust ping,IS-1190,37927,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,esplinr,esplinr,23/Feb/19 6:11 AM,08/Oct/19 11:57 PM,28/Oct/23 2:49 AM,08/Oct/19 11:57 PM,,,,,,,,,,,,,,,0,,,,"Review these HIPEs:

Provide feedback on the HIPEs

Implement the changes possible in the current code base.

Pass the basic message tests of the agent test suite.

Provide feedback on the open questions that aren't resolved in the HIPE PR.

Raise relevant issues for further improvements.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910z",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"08/Oct/19 11:57 PM;esplinr;We decided that LibIndy should not support message protocols, but instead those should be handled by language libraries in Aries.;;;",,,,,,,,,,,
Investigate Aries protocol tests,IS-1192,37929,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,23/Feb/19 7:14 AM,25/Nov/19 11:04 PM,28/Oct/23 2:49 AM,22/Nov/19 10:03 PM,,,,,,,,1.13.0,,,,,,,0,,,,"*Story*
Aries is producing a protocol test suite that will be used to verify compatibility across all agents. LibVCX needs to pass this test suite for the core messages we want to support at this time (connecting, holding, proving). This will give us confidence that a message family will work work appropriately on all the platforms that are supported.

*Acceptance Criteria*
 * Review the current Aries protocol test suite.
 * Plan improvements required in the test suite.
 * Review the plan with an architect.
 * Create the necessary tickets.

*Notes*
 * Previous analysis in IS-946.
 * In the future, we will evaluate whether we need automated testing of protocols included in LibVCX.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-946,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaii6",,,,Unset,Unset,Indy Aries 19.22,Indy Aries 19.23,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"25/Nov/19 11:04 PM;sergey.minaev;libVCX is able to pass existing tests in Aries Test Suite. The lack of architecture in Test Suite is detected, more RFC discussions are required.;;;",,,,,,,,,,,
CI / CD for library containing fundamental message families,IS-1193,37930,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,esplinr,esplinr,23/Feb/19 7:16 AM,10/Oct/19 9:13 PM,28/Oct/23 2:49 AM,10/Oct/19 9:13 PM,,,,,,,,,,,,,,,0,,,,"DIDCOM Lib messages:
* Trust Ping
* Connections
* Basic message",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910xc",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"26/Feb/19 12:23 AM;esplinr;[~nage] proposed that this be a namespace within LibIndy instead of a separate message family, so CI / CD wouldn't be required.;;;","10/Oct/19 9:13 PM;esplinr;After consulting with the Aries community, we decided to keep message families in the Agent frameworks instead of in core libraries.;;;",,,,,,,,,,
LibIndy consumes a message library,IS-1194,37931,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,esplinr,esplinr,23/Feb/19 7:16 AM,08/Oct/19 11:56 PM,28/Oct/23 2:49 AM,08/Oct/19 11:56 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910xf",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"08/Oct/19 11:56 PM;esplinr;We decided that LibIndy should not support message protocols, but instead those should be handled by language libraries in Aries.;;;",,,,,,,,,,,
LibIndy consume a message state machine,IS-1195,37932,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,esplinr,esplinr,23/Feb/19 7:16 AM,08/Oct/19 11:56 PM,28/Oct/23 2:49 AM,08/Oct/19 11:56 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910xg",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"08/Oct/19 11:56 PM;esplinr;We decided that LibIndy should not support message protocols, but instead those should be handled by language libraries in Aries.;;;",,,,,,,,,,,
Document future architecture of LibIndy with message families,IS-1196,37933,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,23/Feb/19 7:16 AM,29/Mar/19 10:08 PM,28/Oct/23 2:49 AM,29/Mar/19 10:08 PM,,,,,,,,,,,,,,,0,,,,"Acceptance Criteria:
A MarkDown document exists in the SDK design doc folder that describes how the SDK will be structured after adding support for message protocols (message families and state machines). It should specifically address:
* number of artifacts
* how to add support for a message protocol
* organization of CI / CD
* pros / cons of this approach

Optional:
* A diagram of the layers of a full solution
* A diagram of the components of LibIndy

Overview of proposed architecture:

Indy SDK 2.0 consists of
* LibIndy which provides API helper functions to generate plain text messages, manage the wire message protocol, generate specific plaintext messages, and manage protocol transitions.
** LibIndy namespace
*** Wallets
*** Resolver
*** Ledger Comms
*** DID Comm Infrastructure
**** Pack / Unpack
**** Message family handler
**** Protocol transition handler
*** Payment plugin handler
** VCX namespace
*** Message family
*** Protocol transitions
** DIDComm namespace
*** Trust Ping
*** Connections
**** Protocol transitions
*** Basic message
* Ursa
* Basic protocol test harness
* Thin SDK wrappers

Consumed by:

Fat language idiomatic wrapper

or

Agent_Helpers (public and open source)
* Provides a C-callable interface similar to LibVCX today
* Wallet handles
* Transport
* Payment plugin instantiation
* Agent test suite
* Protocol state machine
* Fat language idiomatic wrappers (Android, IOS, NodeJS, Enterprise Java, Python)

Downstream applications can consume LibIndy through a fat wrapper or through the Agent Helpers. The downstream application needs to provide the business logic and the business logic state machine.

Note:
* Names like ""Agent Helpers"" are placeholders and can be improved
** It makes too many decisions to be a library, but doesn't take enough control to be a framework
* Here is a diagram showing Nathan's view of the large stack:
https://docs.google.com/drawings/d/14lVjP4UzteIqO2aJOy3JinjcGkKH-KYjIKqRgbXU2a0/edit",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1198,,,,IS-1204,IS-1205,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910q9",,,,Unset,Unset,EV 19.05,EV 19.06,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"07/Mar/19 7:47 PM;sergey.minaev;Document for internal team discussion [https://docs.google.com/document/d/1lYrauUiSpbXy-9JuAnFAZVORy0JBJWOzO7cXDDF1qBE]
Will be published for community discussion as PR to indy-sdk repo,;;;","22/Mar/19 1:09 AM;sergey.minaev;[https://github.com/hyperledger/indy-sdk/pull/1546];;;",,,,,,,,,,
NodeJS Vcx wrapper callbacks invocation,IS-1197,37961,,Bug,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,Artemkaaas,Artemkaaas,25/Feb/19 11:44 PM,17/Jul/20 9:49 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"NodeJS isn't compatible with an approach implemented in libindy and vcx for getting error details because nodejs always invoke a callback in the node.js main thread event loop.  So, we can't read a variable that was set in another library thread. 

We need to find about another way for getting error details for NodeJs wrappers.

Test that reproduces issue: https://github.com/Artemkaaas/indy-sdk/commit/c29406fd133c8a5e20c8e140f5116dfcf256de32",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1080,,,No,,Unset,No,,,"1|hzwrhj:910x89",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,smithbk,,,,,,,,,"17/Jul/20 9:49 PM;smithbk;Are there any options to make progress on this?  Our agency uses the node.js wrapper and this would help us a lot.  I'd be glad to help but would need to at least be pointed in the right direction.  Thanks.;;;",,,,,,,,,,,
Document how LibIndy will consume message protocols,IS-1198,37966,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,26/Feb/19 12:36 AM,29/Mar/19 10:08 PM,28/Oct/23 2:49 AM,29/Mar/19 10:08 PM,,,,,,,,,,,,,,,0,,,,"*Story*
As a developer extending LibIndy, I want to be able to insert my own helper API functions for a new protocol message family by using an existing protocol message family definition, modifying the implementation, and recompiling LibIndy. This will make it easy for me to make my protocol message family definition available to other users of the Indy ecosystem regardless of the language their agent is written in (through the C-callable API).

*Acceptance Criteria*
A MarkDown document exists in the SDK design doc folder that describes the architecture LibIndy will need to support for message protocols (message families and state machines). The document must contain the pros / cons of this approach, and other approaches we considered.

*Notes*
* It is expected that the protocol message family will consist of a set of APIs exposed through the C-callable interface. The API implementation will encode the messages in the family, and the transitions between them.
* Business logic is expected to exist in the agent, and not in LibIndy.",,,,,,,,,,,,,,,,,,,IS-1204,,,,,,,,,,,IS-1196,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910qc",,,,Unset,Unset,EV 19.05,EV 19.06,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"07/Mar/19 7:47 PM;sergey.minaev;Document for internal team discussion [https://docs.google.com/document/d/1lYrauUiSpbXy-9JuAnFAZVORy0JBJWOzO7cXDDF1qBE]
Will be published for community discussion as PR to indy-sdk repo,;;;","22/Mar/19 1:09 AM;sergey.minaev;[https://github.com/hyperledger/indy-sdk/pull/1546];;;",,,,,,,,,,
Release Indy SDK 1.8.2,IS-1199,38000,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,KitHat,esplinr,27/Feb/19 5:05 AM,23/Apr/19 11:34 PM,28/Oct/23 2:49 AM,28/Mar/19 9:45 PM,,,,,,,,1.8.2,,,,,,,0,,,,"*Task Overview*
 Perform all necessary tasks to have a release of LibIndy. We want to release everything that is ready.

*Acceptance Criteria*
 * Code is tested
 * Release is tagged
 * Release notes are drafted
* Issues in JIRA are assigned to the correct fix version
 * Release notes are reviewed by Docs and Product Management
 * A new release of Indy-Crypto is part of this release

*Notes*
* Evernym maintained ledger plugins may also need to be released.",,,,,,,,,,,,,,,,,,,,,IS-1246,,IS-1178,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,"1|hzwrhj:910qi",,,,,,EV 19.06,,,,,,8.0,,,,,,,,,,,,Artemkaaas,esplinr,KitHat,,,,,,,,"26/Mar/19 3:21 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1542;;;","26/Mar/19 5:31 PM;Artemkaaas;Build versions:
* indy - 1.8.2-rc-64
* vcx - 0.2.3-rc-64;;;","28/Mar/19 9:45 PM;Artemkaaas;New Indy SDK stable 1.8.2 has been published for
• libindy (ubuntu/windows/ios/android)
  • java, python, rust, nodejs wrappers.
• CLI (ubuntu/windows)
• libnullpay (ubuntu/windows/ios/android)
• VCX (ubuntu/windows) (ver 0.2.3)
  • java, python, nodejs wrappers

This release is mostly devoted to bugfixes.
This release also includes (IN PROGRESS) work on VCX support of community A2A protocol.
Current VCX version introduces new `protocol_type` in a backward compatible way.
Please note that some changes regarding new A2A message format are possible in the next months.

GitHub release: https://github.com/hyperledger/indy-sdk/releases/tag/1.8.2
Changelog: https://github.com/hyperledger/indy-sdk/blob/1.8.2/CHANGELOG.md

Migration guides:
• libindy https://github.com/hyperledger/indy-sdk/blob/1.8.2/docs/migration-guides/migration-guide-1.7.0-1.8.0.md
• vcx https://github.com/hyperledger/indy-sdk/blob/1.8.2/vcx/docs/migration-guide-0.1.x-0.2.0.md;;;",,,,,,,,,
Client can't connect pool using valid genesis file,IS-1200,38025,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,VladimirWork,VladimirWork,VladimirWork,27/Feb/19 5:03 PM,01/Apr/19 4:05 PM,28/Oct/23 2:49 AM,14/Mar/19 7:03 PM,,,,,,,,1.8.2,,,,,,,0,,,,"Build Info:
indy-cli 1.8.1
indy-node 1.6.833

Steps to Reproduce:
1. Setup pool of 9 nodes.
2. Create client pool connection using genesis file with only 4 (1,2,3,4) nodes of 9.
3. Connect pool and demote the last 5 (5,6,7,8,9) of 9 nodes.
4. Exit CLI.
5. Start CLI and try to connect using existing pool created in Step2 (it was created from 4 pool txn genesis file and actual pool now has the same 4 nodes that were in genesis file).

Actual Results:
`Pool has not been connected` error is appeared (see log ..9_minus_5).

Additional Info and Workaround:
1. The issue *is not reproduced* against 7 node pool with 3 nodes demoted (see log ..7_minus_3).


2. I was removing nodes to go from 16 down to my original 7 nodes. I was only operating on two at a time since I was also changing my instance type on the nodes that would be remaining. I had a CLI open and was verifying I could do writes all along the way. I killed my CLI session and started it again and then could not connect either. Everywhere we had libindy making a connection (VUI, Agencies, Automation) we had to delete the pool.btxn file and let it recreate off the same genesis file it used the first time.

FYI [~ashcherbakov] [~sergey.minaev] [~Artemkaaas] [~KitHat]
",,,,,,,,,,,,,,,,,,,,,,,,,,INDY-2015,,,,,,,"27/Feb/19 5:01 PM;VladimirWork;indy_cli_7_minus_3_success.log;https://jira.hyperledger.org/secure/attachment/16877/indy_cli_7_minus_3_success.log","27/Feb/19 5:01 PM;VladimirWork;indy_cli_9_minus_5_fail.log;https://jira.hyperledger.org/secure/attachment/16878/indy_cli_9_minus_5_fail.log",,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910x",,,,Unset,Unset,EV 19.04,EV 19.05,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ashcherbakov,esplinr,mgbailey,sergey.minaev,VladimirWork,,,,,"28/Feb/19 3:17 AM;mgbailey;We have need to remove nodes from TestNet, but fear to do so until this issue is understood. Please determine the cause, and report it as quickly as possible.

 ;;;","28/Feb/19 6:43 PM;Artemkaaas;Changes: delete cache and restart catchup in case of an outdated cache
Done in PR: https://github.com/hyperledger/indy-sdk/pull/1505;;;","01/Mar/19 12:18 AM;mgbailey;[~Artemkaaas], please let us know under what circumstances this issue occurs? We need to know so that we know how to avoid the issue before the PR is released to TestNet.;;;","01/Mar/19 12:31 AM;Artemkaaas;[~mgbailey], for real pool it can occur If somebody hasn't connected to the pool (for which significantly changed the list of nodes) for a long time and has a very outdated cache.;;;","01/Mar/19 3:51 AM;sergey.minaev;[~mgbailey] let me share some context:
 client trying to establish connection to pool based on 2 entities 
 1) genesis transactions
 2) local client cache - updated every time when client connecting to pool and see some new transactions

Let's assume 3 different states of the ledger
 1 == genesis transactions
 2 == intermediate with max count of nodes
 3 == latest, some nodes disabled against 2nd state or just replaced by others

If current libindy has cache == 2nd state it will results in inability to connect to pool. It happens because priority/trust of cache is greater then just genesis file. From one side available nodes are not enough to make catchup from 2 to 3 states. And from another side libindy will not drop cache to catchup from 1st state to the latest one even it's theoretically possible.

[~Artemkaaas] suggest to change the priority/trust between cache and genesis and drop cache if something is going wrong with connection. This new approach will resolve current ticket but may have some negative (from security point of view) side effect;;;","01/Mar/19 7:08 AM;esplinr;Using the cache for security against a malicious genesis file seems like a misuse of the cache.

But a solution for INDY-2015 could also be used to allow clients to update the pool information after a cache clear.

Workaround: individual clients can always delete the cache file on the filesystem to force a pool update.;;;","01/Mar/19 3:30 PM;ashcherbakov;[~sergey.minaev]
But the quorum (minimum number of nodes) for catchup is f+1, so if the client is in state 2, that is N=9, f=2, then even if the pool goes to state 3, the client must be able to catch-up, since at least f+1 nodes are still available (f+1=3, and there are 4 nodes in the pool).
Maybe the issue is that the client gets timeout when asking transactions from the 5 demoted nodes, and doesn't try to re-ask other nodes?;;;","01/Mar/19 3:42 PM;ashcherbakov;After discussion with [~Artemkaaas] it turned out that the quorum for ConsistencyProof on client is `n-f`, not `f+1` as on Node side.
I think we need to change this to `f+1` on the client side, and the issue will gone.;;;","01/Mar/19 11:30 PM;mgbailey;Why is any quorum at all needed for client catch-up? I would think that with BLS signatures, a single node would be sufficient.;;;","01/Mar/19 11:35 PM;ashcherbakov;[~mgbailey]
You are right, but usage of BLS signature for catch-up is not supported yet.;;;","14/Mar/19 7:02 PM;VladimirWork;Build Info:
indy-cli 1.8.1~1015
indy-node 1.6.855

Steps to Reproduce:
1. Setup pool of 9 (7) nodes.
2. Create client pool connection using genesis file with only 4 (1,2,3,4) nodes of 9 (7).
3. Connect pool and demote the last 5 (3) (5,6,7,8,9 (5,6,7)) of 9 (7) nodes.
4. Exit CLI.
5. Start CLI and try to connect using existing pool created in Step2 (it was created from 4 pool txn genesis file and actual pool now has the same 4 nodes that were in genesis file).

Actual Results:
Client connects pool successfully.;;;",
AUTH_RULE command support,IS-1201,38031,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,ashcherbakov,ashcherbakov,27/Feb/19 7:39 PM,01/Apr/19 4:05 PM,28/Oct/23 2:49 AM,15/Mar/19 6:29 PM,,,,,,,,1.8.2,,,,,,,0,,,,"See INDY-2003.

*Acceptance criteria*
 * Add AUTH_RULE command builder

 ** Think about a reasonable way to build/create CONSTRAINT field
 * Integrate into CLI
 * Cover by tests",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1202,INDY-2003,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910ww",,,,Unset,Unset,EV 19.05,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ashcherbakov,VladimirWork,,,,,,,,"05/Mar/19 9:27 PM;Artemkaaas;Changes: Added new `indy_build_auth_rule_request` API function to build AUTH_RULE transaction.

Done in PR: https://github.com/hyperledger/indy-sdk/pull/1512;;;","14/Mar/19 8:22 PM;Artemkaaas;Build version: master-1019;;;","15/Mar/19 6:29 PM;VladimirWork;Build Info:
libindy 1.8.1~1019

Steps to Validate:
1. Run valid / invalid add / edit auth rule txns using indy-cli.
2. Run valid / invalid add / edit auth rule txns using SDK python wrapper.
3. Check pool responces for all this txns.

Actual Results:
Valid txns return REPLYs and invlaid txns return REJECTs. All valid txns are written in the config ledger. Additional testing and system test implementation will be made in scope of INDY-2010.;;;",,,,,,,,,
GET_AUTH_RULE commands support,IS-1202,38032,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,ashcherbakov,ashcherbakov,27/Feb/19 7:41 PM,01/Apr/19 4:03 PM,28/Oct/23 2:49 AM,22/Mar/19 12:56 AM,,,,,,,,1.8.2,,,,,,,0,,,,"See INDY-2010.

*Acceptance criteria*
 * Implement GET_AUTH_RULE command
 * Implement GET_ALL_AUTH_RULES command
 * Integrate into CLI
 * Cover by tests",,,,,,,,,,,,INDY-2010,,,,,,,,,,,,,,IS-1201,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910r",,,,Unset,Unset,EV 19.05,EV 19.06,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ashcherbakov,VladimirWork,,,,,,,,"07/Mar/19 5:29 PM;Artemkaaas;Changes:  Added `indy_build_get_auth_rule_request` request function to build `GET_AUTH_RULE` request.
PR:  https://github.com/hyperledger/indy-sdk/pull/1513;;;","19/Mar/19 1:16 PM;Artemkaaas;Build version: master-1032;;;","22/Mar/19 12:56 AM;VladimirWork;Build Info:
libindy 1.8.1~1032

Steps to Validate:
1. Send get-auth-rule using indy-cli with valid and invalid params.
2. Send get-auth-rule using python wrapper with valid and invalid params.

Actual Results:
Command works as expected.;;;",,,,,,,,,
Review github security vulnerability notices,IS-1203,38053,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,MattRaffel,MattRaffel,28/Feb/19 2:50 AM,19/Aug/19 10:06 PM,28/Oct/23 2:49 AM,13/Aug/19 10:42 PM,,,,,,,,,,,,,,,0,,,,"Github is reporting some security vulnerabilities in indy-sdk repo.   We should review this and make a decision what to do.



{quote}We found a potential security vulnerability in a repository for which you have been granted security alert access.
@hyperledger     hyperledger/indy-sdk
Known low severity security vulnerability detected in just-extend < 4.0.0 defined in package-lock.json.
package-lock.json update suggested: just-extend ~> 4.0.0.
Always verify the validity and compatibility of suggestions with your codebase
{quote}

*Acceptance Criteria*
* Diagnose the problem
* Decide on the severity
* If we decide it is a real problem, fix it if it is small, or raise a new ticket


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upf:",,,,Unset,Unset,EV 19.05,Indy SDK 19.16,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,MattRaffel,sergey.minaev,,,,,,,,"18/Mar/19 10:23 PM;sergey.minaev;GH warnings now resolved

Changes: dependency updated

Alternative: remove lock file at all;;;","06/Aug/19 10:10 PM;Artemkaaas;The issue was reopened because of getting GH warning again.
I removed lock file at all in PR:  https://github.com/hyperledger/indy-sdk/pull/1789 ;;;",,,,,,,,,,
Create a sample API definition for a LibIndy message family,IS-1204,38056,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MattRaffel,esplinr,esplinr,28/Feb/19 5:47 AM,29/Mar/19 10:08 PM,28/Oct/23 2:49 AM,29/Mar/19 10:08 PM,,,,,,,,,,,,,,,0,,,,"We are currently proposing that SDK 2.0 includes default definitions of key Indy agent protocols. We should build a sample definition to better understand how these would look and communicate how they will relate to LibIndy.

The expected artifacts for this story is a:
* Rust definitions of function signatures for the message family.

*Deliverable*
We will spend 4 engineering days on this effort, and report back to the team for feedback on the usability of the solution. We will then decide if we should create further tickets.

*Notes*
A protocol definition consists of:
* The messages in the message family
* Protocol transitions between messages
But the protocol transitions are likely to be implemented within the implementation of the messages API. 
* protocol does not define the transport layer.  The transport layer is determined by end points.",,,,,,,,,,,,IS-1198,,,,,,,,,,,,,,IS-1196,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910qf",,,,Unset,Unset,EV 19.05,EV 19.06,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,MattRaffel,sergey.minaev,,,,,,,,"07/Mar/19 7:47 PM;sergey.minaev;Document for internal team discussion [https://docs.google.com/document/d/1lYrauUiSpbXy-9JuAnFAZVORy0JBJWOzO7cXDDF1qBE]
Will be published for community discussion as PR to indy-sdk repo,;;;","11/Mar/19 11:04 PM;MattRaffel;https://docs.google.com/document/d/10I8DZJLN8McycpF9E4ws11S1P0u-0hI5pDD55gvuVBw/edit;;;","22/Mar/19 1:09 AM;sergey.minaev;[https://github.com/hyperledger/indy-sdk/pull/1546];;;",,,,,,,,,
Review TODO / FIXME items,IS-1205,38057,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,28/Feb/19 6:07 AM,12/Apr/19 10:24 PM,28/Oct/23 2:49 AM,12/Apr/19 10:24 PM,,,,,,,,,,,,,,,0,,,,"There are a number of TODO / FIXME items in our code base (see attached).

We should review these items as we prepare a plan for SDK 2.0.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1196,,,,,,,"11/Apr/19 8:53 PM;Artemkaaas;todo.txt;https://jira.hyperledger.org/secure/attachment/17092/todo.txt","28/Feb/19 6:08 AM;esplinr;todo.txt;https://jira.hyperledger.org/secure/attachment/16880/todo.txt",,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910x6i",,,,Unset,Unset,Ev-SDK 19.07,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Credentials on the wire are too big,IS-1206,38139,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,DouglasWightman,esplinr,esplinr,02/Mar/19 7:53 AM,04/Apr/19 6:09 AM,28/Oct/23 2:49 AM,26/Mar/19 1:17 AM,,,,,,,,1.8.2,,,,,,,0,TShirt_M,,,"Steps to reproduce:
 * Create a credential that is 400K
 * Prepare it for sending on the wire using the new pack/unpack in Indy SDK.

Expected behavior:
 * Credential should be significantly less than .5 MB

Observed behavior:
 * Credential is 15 MB with the old LibVCX and 50 MB with in-progress agent to agent protocols.

Notes:
 * The new HIPE process suggest repeated rounds of embedding the credential in a JSON, encrypting it, base64 encoding it, and embedding it in a new JSON.

Acceptance Criteria:
* Identify the cause of the problem
* Submit a PR to amend the HIPE
* Raise tickets to address the problem",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Mar/19 4:42 PM;Artemkaaas;v2_demo.txt;https://jira.hyperledger.org/secure/attachment/16968/v2_demo.txt",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sc",,,,Unset,Unset,EV 19.06,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,DouglasWightman,esplinr,sergey.minaev,,,,,,,"19/Mar/19 4:41 PM;Artemkaaas;Cause:  json serialization of objects containing byte vectors increases size three times.
Changes:  Updated A2A message preparation for 2.0 protocol version to set the result of libindy `pack` function as serde Value type instead of Vec<u8> in case of inner message field preparation.
PR: https://github.com/hyperledger/indy-sdk/pull/1545;;;","19/Mar/19 4:44 PM;Artemkaaas;`v2_demo.txt` file contains messages and their sizes received by running `test_real_proof_for_protocol_type_v2` test.;;;","22/Mar/19 10:27 PM;sergey.minaev;There is minimal fix for representation in messages
[https://github.com/hyperledger/indy-hipe/pull/105]

btw there is more complicated topic: should we and how to avoid re-encryption and re-base64 in case of multiply levels of encryption and forwarding;;;","26/Mar/19 1:01 AM;DouglasWightman;I tested this and things look great. A 400kb credential is now less than 1.5mb.;;;",,,,,,,,
Getting Started jupyter notebook 'type' object not scriptable,IS-1207,38153,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Cannot Reproduce,,callahan,callahan,04/Mar/19 1:58 AM,09/Apr/19 11:29 PM,28/Oct/23 2:49 AM,09/Apr/19 11:29 PM,,,,,,,,,,libindy,,,,,0,,,,"Following instructions in docs/getting-started with ""docker-compose up"" from scratch leads to following error from getting-started container (jupyter notebook site):

{{Creating indy_pool ... }}
{{Creating indy_pool ... done}}
{{Creating getting_started ... }}
{{Creating getting_started ... done}}
{{Attaching to indy_pool, getting_started}}
{{indy_pool | 2019-03-03 15:30:18,878 CRIT Set uid to user 1000}}
{{getting_started | Traceback (most recent call last):}}
{{getting_started | File ""/usr/local/bin/jupyter-notebook"", line 7, in <module>}}
{{getting_started | from notebook.notebookapp import main}}
{{getting_started | File ""/usr/local/lib/python3.5/dist-packages/notebook/notebookapp.py"", line 47, in <module>}}
{{getting_started | from zmq.eventloop import ioloop}}
{{getting_started | File ""/usr/local/lib/python3.5/dist-packages/zmq/eventloop/__init__.py"", line 3, in <module>}}
{{getting_started | from zmq.eventloop.ioloop import IOLoop}}
{{getting_started | File ""/usr/local/lib/python3.5/dist-packages/zmq/eventloop/ioloop.py"", line 21, in <module>}}
{{getting_started | from tornado import ioloop}}
{{getting_started | File ""/usr/local/lib/python3.5/dist-packages/tornado/ioloop.py"", line 45, in <module>}}
{{getting_started | from tornado.concurrent import (}}
{{getting_started | File ""/usr/local/lib/python3.5/dist-packages/tornado/concurrent.py"", line 175, in <module>}}
{{getting_started | future: Union[""futures.Future[_T]"", ""Future[_T]""], value: _T}}
{{getting_started | File ""/usr/lib/python3.5/typing.py"", line 552, in __getitem__}}
{{getting_started | dict(self.__dict__), parameters, _root=True)}}
{{getting_started | File ""/usr/lib/python3.5/typing.py"", line 512, in __new__}}
{{getting_started | for t2 in all_params - \{t1} if not isinstance(t2, TypeVar)):}}
{{getting_started | File ""/usr/lib/python3.5/typing.py"", line 512, in <genexpr>}}
{{getting_started | for t2 in all_params - \{t1} if not isinstance(t2, TypeVar)):}}
{{getting_started | File ""/usr/lib/python3.5/typing.py"", line 190, in __subclasscheck__}}
{{getting_started | self._eval_type(globalns, localns)}}
{{getting_started | File ""/usr/lib/python3.5/typing.py"", line 177, in _eval_type}}
{{getting_started | eval(self.__forward_code__, globalns, localns),}}
{{getting_started | File ""<string>"", line 1, in <module>}}
{{getting_started | TypeError: 'type' object is not subscriptable}}
{{getting_started exited with code 1}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx4",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,callahan,esplinr,VladimirWork,,,,,,,"04/Mar/19 2:25 AM;callahan;Replicated (with docker) on Ubuntu 18.04 and Mac OS X hosts

 ;;;","25/Mar/19 4:42 PM;Artemkaaas;Everything (master branch) works for me on Ubuntu 16.04 and for [~sergey.minaev] on Ubuntu 18.04.
[~callahan] have you changed anything in the source?
[~VladimirWork] could you also try?;;;","25/Mar/19 7:52 PM;VladimirWork;It works for me. [~callahan] what tornado version do you use? I've faced some issues with jupiter and tornado 6 before (and this error looks like yours: https://github.com/jupyter/notebook/issues/4439) but there were no issues after I downgraded tornado to version 5.;;;","09/Apr/19 11:29 PM;esplinr;We can't replicate this, so we are going to close it. If someone is able to provide enough information to reproduce this problem or provide a pull request for a fix, then they should create a new issue and link to this one.;;;",,,,,,,,
Shorten the timeout from a node not responding,IS-1208,38247,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,esplinr,esplinr,06/Mar/19 11:36 PM,10/Oct/19 9:11 PM,28/Oct/23 2:49 AM,10/Oct/19 9:11 PM,,,,,,,,,,libindy,,,,,0,,,,"When a node in the pool is having trouble responding, users of the network report intermittent delays. We recognize this is due to the timeout from sending the initial request. It is already configurable in libindy.

The default timeout is currently 20 seconds. It should be 5 seconds.

The timeout is defined here:
https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/api/pool.rs#L71 ",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1085,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910x7i",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"10/Oct/19 9:11 PM;esplinr;The timeout is now configurable and documented here:

https://github.com/hyperledger/indy-sdk/blob/master/docs/configuration.md;;;",,,,,,,,,,,
Look up DID by public key,IS-1209,38249,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,07/Mar/19 12:28 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,,,wallet,,,,,0,,,,"*Story*
As a developer building an agent using the Indy SDK, I need an API to look up a DID by the public key so that I can connect an incoming message to a previous connection.

*Notes*
* You need to be able to look up the key in order to decrypt the message, but the DID is not in the message envelope.
* Workaround is to store extra meta-data: my verkey and their verkey in the pairwise connection.
* This use case should be considered with DID Doc support, as one DID may have multiple keys.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910t9",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
"""node-vcx-wrapper"" npm.org package is missing the dist directory.",IS-1210,38258,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,saholman,saholman,saholman,07/Mar/19 6:49 AM,01/Apr/19 4:05 PM,28/Oct/23 2:49 AM,15/Mar/19 11:23 AM,,,,,,,,1.8.2,,,,,,,0,TShirt_S,,,"When I run ""npm install --save node-vcx-wrapper"" it downloads a package.json file, README.md file and a ci directory from npm.org but the dist directory where the wrapper is actually located is not found. If I write a simple script containing only ""const vcx = require('node-vcx-wrapper') it results in a module not found error.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910x0c",,,,Unset,Unset,EV 19.05,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,saholman,,,,,,,,,"07/Mar/19 5:32 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1516;;;","13/Mar/19 1:33 AM;saholman;Any idea when will a new version be pushed out to npm?;;;","14/Mar/19 3:17 PM;Artemkaaas;Build version: master-1015
npm package version: 0.2.2-dev-1015;;;","15/Mar/19 11:22 AM;saholman;Thanks for fixing this! It is now correct.;;;",,,,,,,,
Documentaion: some links are broken on 'Indy Walkthrough',IS-1211,38265,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,nekia,nekia,07/Mar/19 4:08 PM,11/Apr/19 4:12 PM,28/Oct/23 2:49 AM,11/Apr/19 4:12 PM,,,,,,,,,,,,,,,0,Documentation,,,"While walking through [ Indy Walkthrough — Hyperledger Indy SDK documentation|https://hyperledger-indy.readthedocs.io/projects/sdk/en/latest/docs/getting-started/indy-walkthrough.html] to follow Alice's scenario step by step, I found some broken links in the content.
 * {{verkey}} (target verification key). See [Requests|https://github.com/hyperledger/indy-node/blob/master/docs/requests.md] to get more information about supported ledger transactions.
 * call a “trusted third party”; think of it more like a facilitator). See [Roles|https://github.com/hyperledger/indy-node/blob/master/docs/auth_rules.md] to get more information about roles.
 * -*Sovrin pool or the [local pool we started by ourselves|https://hyperledger-indy.readthedocs.io/README.html#how-to-start-local-nodes-pool-with-docker] as part of this tutorial, you’ll need to set up a pool configuration.*-",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910x7",,,,Unset,Unset,Ev-SDK 19.07,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,mdb,nekia,,,,,,,,"22/Mar/19 11:57 PM;Artemkaaas;[~mdb] Could you look at this?;;;","11/Apr/19 5:32 AM;mdb;Hi guys, 

The readthedocs.org build process had broken as a result of adding unicode chinese to our documentation. I reconfigured the settings, and the builds are working as planned. 


Sorry for the delay. These are now resolved.;;;",,,,,,,,,,
CI is broken for amazon linux,IS-1212,38266,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,sergey.minaev,Artemkaaas,Artemkaaas,07/Mar/19 6:03 PM,15/Aug/19 10:13 PM,28/Oct/23 2:49 AM,15/Aug/19 10:13 PM,,,,,,,,,,,,,,,0,TShirt_L,,,"Our CI often fail for amazon linux with the following error:
```
lib64/libc.so.6: version `GLIBC_2.18' not found
``` 
Here is the link on an example build: https://build.sovrin.org/job/indy-sdk/job/indy-sdk-ci/view/change-requests/job/PR-1505/28/

It started after updating rust on 1.31 version.   ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009di",,,,Unset,Unset,EV 19.05,Indy SDK 19.16,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,,,,,,,,,,"07/Mar/19 6:07 PM;Artemkaaas;Cause: found the same issue in rust-lang repo:  https://github.com/rust-lang/cargo/issues/6582
Changes: Incremented Rust version on 1.32.0
PR: https://github.com/hyperledger/indy-sdk/pull/1517;;;","13/Mar/19 6:48 PM;Artemkaaas;Changing of Rust version and using of workaround provided in issue from github didn't help. 
We disabled amazon testing for our CI and CD pipeline to save pipeline working capacity in PR: https://github.com/hyperledger/indy-sdk/pull/1524;;;","06/Aug/19 2:24 PM;Artemkaaas;Seem that updating Rust version on 1.36.0 solved the problem. CI works on amazon linux now.
Here is PR with enabling testing: https://github.com/hyperledger/indy-sdk/pull/1780;;;",,,,,,,,,
Chinese Translation of Indy Getting Started Guide,IS-1213,38297,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,mdb,mdb,mdb,08/Mar/19 3:26 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,#good-first-issue,,,We love Ry so much. He is the best community architect in the world.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00f5b:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mdb,,,,,,,,,,,,,,,,,,,,,
MacOS installer,IS-1214,38307,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,theoturner,theoturner,theoturner,09/Mar/19 1:25 AM,22/May/19 8:05 PM,28/Oct/23 2:49 AM,17/May/19 5:53 PM,,,,,,,,1.8.2,,libindy,,,,,0,,,,Bash script to install libindy. Minor readme updates to match.,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-60,,,No,,Unset,No,,,"1|hzwrhj:910sx0902",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,theoturner,,,,,,,,,"17/May/19 4:14 PM;Artemkaaas;[~theoturner]
Seems it has been done in PR: https://github.com/hyperledger/indy-sdk/pull/1521.
Can we close the ticket?;;;","17/May/19 5:53 PM;theoturner;[~Artemkaaas]
Yes;;;",,,,,,,,,,
wallet handle is no callback index,IS-1215,38321,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,ignisvulpis,ignisvulpis,ignisvulpis,09/Mar/19 4:42 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,,,libindy,,,,,0,,,,"Some libindy code uses the wallet handle as an index into the list of pending callbacks.

`self.pending_callbacks.borrow_mut().insert(wallet_handle, cb);`

[https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/commands/wallet.rs#L439]

 

This code will fail if there are two pending callbacks for the same wallet.

 

Update: this cannot happen because the wallet_handle is not returned to the outside world.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00faf:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ignisvulpis,sergey.minaev,,,,,,,,,"11/Mar/19 9:32 PM;sergey.minaev;[~ignisvulpis] my feeling (after brief review of codebase) is 
 In general code works correctly as this particular wallet_handle is smth reserved for new one so can be used for callback to. 
 But the naming here is not clear enough

Is it correct summary and we have to change names?;;;","12/Mar/19 3:15 AM;ignisvulpis;The problem is that there is one list of callbacks which is a list indexed with i32. Sometimes, when opening or creating this i32 is a wallet_handle but sometimes when a 'real' callback is created then that i32 is a cb_id (CallbackHandle). Both, wallet_handle and cb_id, are created by sequence:get_next_id.
Now to improve readability and type-safety I want to introduce the types WalletHandle and CallbackHandle, which are different and can't be mixed.

So I think that we always should create a new cb_id and pass the parameters of the callbacks as usual even when the parameter for the callback is the wallet_handle which could be used as the cb_id but should not.;;;",,,,,,,,,,
Improve performance for applications tracking the ledger,IS-1216,38369,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,12/Mar/19 10:03 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"*Story*
As an administrator monitoring a deployment of the Indy Ledger, I want my application to be able to download all ledger transactions without unnecessarily loading the network or slowing down my application so that I can have multiple ledger browsers tailored to my specific search needs.

*Notes*
* Currently a ledger browser uses GET_TXN for this, which is not optimized for this purpose.
* GET_TXN is not a good way to download the ledger because it doesn't have state proofs / BLS multi-sig support yet (INDY-1954 in 1.9 release), so it's sent to all the Nodes and waits for f+1 equal replies (unlike other GET requests with state proof support).
￼* Even if GET_TXN had state proofs/BLS multi-sig, it still would be not so efficient for download-all use case.
* One option is to add an SDK command to use already existent catch-up protocol for DOMAIN ledger (it uses it for POOL ledger only as of now)",,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1954,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvth:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
HIPE for payment transfer,IS-1217,38514,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,esplinr,esplinr,15/Mar/19 9:27 PM,12/Apr/19 8:17 AM,28/Oct/23 2:49 AM,12/Apr/19 8:17 AM,,,,,,,,,,,,,,,0,,,,"Need to create a HIPE for wallet-to-wallet payment transfer.

Notes:
* Some of the process might better be documented as a SIP in the Sovrin project.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910x69",,,,Unset,Unset,Ev-SDK 19.07,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"12/Apr/19 8:16 AM;esplinr;Thank you to [~brentzundel] who reminded me that we have a design document that is sufficient to document the payment transfer API in Indy:

https://github.com/hyperledger/indy-sdk/tree/master/docs/design/004-payment-interface;;;",,,,,,,,,,,
Use different pool names in tests,IS-1218,38703,36613,Sub-task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,ignisvulpis,ignisvulpis,24/Mar/19 11:17 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,,,libindy,,,,,0,,,,"[https://github.com/hyperledger/indy-sdk/pull/1518] creates different wallets for most tests and deletes them at the end of the test.

This subtask should remove the global constant POOL and make each test use a different pool which is deleted at the end of the test.

[https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/utils/constants.rs#L3]

 

I suggest to name pools after the tests they are created in but this might not be enough because the are tests with equal name in different modules.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00hh3:",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ignisvulpis,,,,,,,,,,,,,,,,,,,,,
Remove teardown from tests,IS-1219,38704,36613,Sub-task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,ignisvulpis,ignisvulpis,24/Mar/19 11:28 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"tear_down does too much. It deletes ALL wallets. In fact it deletes everything in INDY_HOME and all inmem_wallets.

 

If a test closed and deleted the wallet(s) and pools it created then remove tear_down from that test.

https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/utils/mod.rs#L54",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00hhb:",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ignisvulpis,,,,,,,,,,,,,,,,,,,,,
"Using forged DIDs to create Schemas, Cred-Defs and Revoc-Regs",IS-1220,38796,,Bug,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,JeromeK,JeromeK,27/Mar/19 8:00 PM,10/Oct/19 8:42 PM,28/Oct/23 2:49 AM,,1.8.0,1.8.1,,,,,,,,libindy,python wrapper,wallet,,,0,bug,help-wanted,,"Hey Guys,

We're working on a custom Python SDK (based on the python wrapper inside the Indy SDK repository) for Indy. While working on Ledger and Anoncreds implementation, we discovered that it is possible to create schemas, credential definitions and revocation registries using DIDs that are not stored inside the creator's wallet. It was even possible to use forged DIDs (e.g. ""AAAAAAAAAAAAAAAAAAAAAA"") that have not been generated by libindy at all. We could publish them as well, as long as the transaction signing key was stored in the wallet.

Is this a bug/oversight or was the DID validity check left out on purpose?","* Libindy-1.8.1
* Python 3.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiji",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,JeromeK,,,,,,,,,"09/Apr/19 11:24 PM;esplinr;Thank you for pointing out this use case [~JeromeK]. You are correct that we aren't validating that the DID exists in the wallet. We should consider both client and server side checks.;;;",,,,,,,,,,,
Need support for deleting a credential,IS-1221,38807,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,,smithbk,smithbk,28/Mar/19 3:11 AM,10/Apr/19 11:14 PM,28/Oct/23 2:49 AM,10/Apr/19 11:14 PM,,,,,,,,,,libindy,python wrapper,,,,0,,,,"I need support for deleting a credential from a holder's wallet.
",,,,,,,,,,,,,,,,,,,,,,,,,IS-1098,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:zu",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,smithbk,,,,,,,,,"10/Apr/19 11:14 PM;esplinr;This is a duplicate of IS-1098.;;;",,,,,,,,,,,
Improve error message when proof request uses attr name in both attrs and preds,IS-1222,38836,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,smithbk,smithbk,29/Mar/19 1:51 AM,17/Feb/20 6:06 PM,28/Oct/23 2:49 AM,17/Feb/20 6:06 PM,,,,,,,,,,libindy,,,,,0,EV-Triaged,,,"It is an error to have a proof request with the same attribute as both a requested attribute and a requested predicate.   The error is as follows:
```
  File ""/usr/local/lib/python3.6/dist-packages/indy/anoncreds.py"", line 1239, in prover_create_proof
    prover_create_proof.cb)
indy.error.IndyError: (<ErrorCode.CommonInvalidStructure: 113>, ""Error: Invalid structure\n  Caused by: IndyCryptoError: Value by key 'dob_timestamp' not found in eq_proof.mtilde\n"")
```

This is a cryptic error and should be improved so that it is understandable by the person who created the proof request.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q2:zzw",,,,Unset,Unset,Indy Aries 20.01,Indy Aries 20.02,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,smithbk,,,,,,,"10/Oct/19 8:47 PM;esplinr;Thanks for the report Keith. We agree that this is something that should be improved.;;;","24/Jan/20 7:59 PM;Artemkaaas;This error is raised from Ursa. I added this check in the PR: https://github.com/hyperledger/ursa/pull/92;;;","30/Jan/20 10:10 PM;sergey.minaev;[~MikeLodder] could you reassign this ticket back to me or Artem as soon as updated Ursa artifacts would be available;;;","06/Feb/20 6:47 AM;esplinr;Artem's PR is merged and was released with Ursa 0.3.1.;;;","06/Feb/20 2:52 PM;Artemkaaas;It is merged but it is not included into Ursa 0.3.1

Ursa  0.3.1 was released on January 23: [crate.io|[https://crates.io/crates/ursa/0.3.1]]
PR was merged on January 24 [PR|[https://github.com/hyperledger/ursa/pull/92]];;;","06/Feb/20 11:18 PM;esplinr;Thank you for the clarification Artem.

Mike said that there is not currently any CD for Ursa, so he has to run the build manually.

[~MikeLodder]: we are still blocked. Can you help?;;;","07/Feb/20 7:54 AM;esplinr;The PR will be included in 0.3.2, which will be released within a few days.;;;","13/Feb/20 10:06 PM;Artemkaaas;Libindy was updated to use Ursa 0.3.2.
PR: [https://github.com/hyperledger/indy-sdk/pull/2090];;;",,,,
Add support to the LibIndy for audit proofs in GET_TXN request,IS-1223,38849,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,RyanWest,esplinr,esplinr,29/Mar/19 10:20 PM,11/Oct/19 9:05 PM,28/Oct/23 2:49 AM,11/Oct/19 9:05 PM,,,,,,,,1.12.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqra:",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"11/Oct/19 9:05 PM;esplinr;This was done in the scope of the following ticket:
[https://sovrin.atlassian.net/browse/ST-623];;;",,,,,,,,,,,
"The prover create_cred_request function requires a ""prover_did"" that (likely) does not make sense",IS-1224,38891,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,,swcurran,swcurran,30/Mar/19 7:01 AM,20/Sep/19 11:38 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libindy,,,,,0,,,,"In working through the DIDComm Credential Exchange HIPE, we noticed that the process of creating a Credential Request includes a field ""did_prover"".  Based on our knowledge of how the Credential Exchange protocol works, the inclusion of a/the DID of the prover does not make sense.

 

I did some tracing through the indy-sdk code and other than being checked for being a valid DID in the [prover create_credential_request]([https://github.com/hyperledger/indy-sdk/blob/eb7ea544ae8616883c6011a57d40f1b14cd5afeb/libindy/src/commands/anoncreds/prover.rs#L252)] call, I doubt very much the field is ever used within the SDK.  From what I could tell, it's not used it all in the [issuer new_credential](https://github.com/hyperledger/indy-sdk/blob/16bb0666ede6750639b7a2c65294397b01155e0f/libindy/src/services/anoncreds/issuer.rs#L83) code, which makes sense.

 

If the field is being used, it would be very important to know how it is being used, to make sure that developers know what DID to put into the field.

 

If (as we suspect) the field is not being used, I'm not quite sure what is the best way to eliminate this from the code or at least to let developers know what should be used.  I've seen that it is confusing for a dev to figure out what DID to use when none make sense (at least on the surface). Presumably, they use the prover's pairwise DID for their relationship with the Issuer, but that could not be used for anything that a verifier might need to know.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx09006",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),swcurran,,,,,,,,,,,,,,,,,,,,,
Wrong behavior of cbBoolean callback in nodejs wrapper on Windows,IS-1225,38907,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,farskipper,uNmAnNeR,uNmAnNeR,01/Apr/19 11:20 PM,22/May/19 7:24 PM,28/Oct/23 2:49 AM,22/May/19 7:24 PM,1.8.1,,,,,,,1.8.3,,libindy,,,,,0,TShirt_M,,,"This leads to verifierVerifyProof always returns true.

line 783 in logs starts from ""_info anoncreds_service Verifier verify proof""_:

indy-crypto returns false
libindy returns false
but nodejs wrapper returns true

Added log here: [https://github.com/hyperledger/indy-sdk/blob/master/wrappers/nodejs/src/indy.cc#L808]

 
{code:java}
printf(""cbBoolean %i;%d\n"", xerr, arg0);{code}
 

and got:

 
{code:java}
cbBoolean 0;-1177542911
cbBoolean 0;-1177542912
{code}
But on Ubuntu:
{code:java}
cbBoolean 0;1
cbBoolean 0;0{code}
 ","Windows 10 x64

nodejs 10.15

indy-sdk 1.8.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Apr/19 11:13 PM;uNmAnNeR;anoncredsRevocation.js;https://jira.hyperledger.org/secure/attachment/17051/anoncredsRevocation.js","02/Apr/19 2:11 AM;uNmAnNeR;logs.txt;https://jira.hyperledger.org/secure/attachment/17052/logs.txt",,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:zi",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),farskipper,sergey.minaev,uNmAnNeR,,,,,,,,"05/Apr/19 6:58 AM;farskipper;I found the issue and submitted a pull-request. It’s not specific to the nodejs wrapper, but rather a cross platform issue in the indy header files.

See more in the PR: https://github.com/hyperledger/indy-sdk/pull/1576;;;","11/Apr/19 8:39 PM;sergey.minaev;there is related potential problem in other wrapper [https://github.com/hyperledger/indy-sdk/blob/595f4bad3931cd2a59748f1ac6f9f5e49c1ad69e/wrappers/rust/indy-sys/src/lib.rs#L24];;;",,,,,,,,,,
Windows build artifact is not correct,IS-1226,39008,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Cannot Reproduce,,MattRaffel,MattRaffel,03/Apr/19 2:30 AM,04/Apr/19 12:56 AM,28/Oct/23 2:49 AM,04/Apr/19 12:56 AM,,,,,,,,,,,,,,,0,,,,"Documentation per README (https://github.com/hyperledger/indy-sdk/blob/master/README.md) for windows says:

*After unzip you will get next structure of files:
Your working directory
include
...
lib
indy.dll
libeay32md.dll
libsodium.dll
libzmq.dll
ssleay32md.dll
include contains c-header files which contains all necessary declarations that may be need for your applications.

lib contains all necessary binaries which contains libindy and all it's dependencies. You must add to PATH environment variable path to lib. It's necessary for dynamic linkage your application with libindy.*

however, if you look at the zip file of what is produced by the build (eg: https://repo.sovrin.org/windows/libindy/master/1.8.2-1048/) the lib folder and include folder are missing.

*Expected behavior*:
the lib folder and include folder are included in the zip

*Actual results*:
the lib folder and include folder are missing.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Apr/19 12:34 AM;VladimirWork;IS-1226.PNG;https://jira.hyperledger.org/secure/attachment/17067/IS-1226.PNG",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx09",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),MattRaffel,VladimirWork,,,,,,,,,"04/Apr/19 12:34 AM;VladimirWork;I can't reproduce the issue - I have both folders and all expected items in them after unzip.  !IS-1226.PNG|thumbnail! ;;;","04/Apr/19 12:55 AM;MattRaffel;As of this morning, I cannot reproduce this either.  Yesterday I had a problem with another zip file as well.  I am going to close this defect and assume it was problem with my system.;;;",,,,,,,,,,
404 - Read the Getting Started Guide,IS-1227,39116,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,,yshurik,yshurik,06/Apr/19 5:19 AM,24/Apr/19 12:33 AM,28/Oct/23 2:49 AM,24/Apr/19 12:33 AM,,,,,,,,,,,,,,,0,,,,"Frontpage of the project - [https://www.hyperledger.org/projects/hyperledger-indy]

 

And the most important link ""Getting Started Guide"" leads to 404 on github ..........",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0r",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,yshurik,,,,,,,,,"12/Apr/19 8:20 AM;esplinr;Thank you for reporting this bad link. I put a request in with Hyperledger to have the page updated.;;;","24/Apr/19 12:33 AM;esplinr;The link now points to the getting started guide in the Indy SDK.;;;",,,,,,,,,,
Android. Can not execute issuerCreateAndStoreRevocReg,IS-1228,39149,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Invalid: Environment Issue,sergey.minaev,izashkalov,izashkalov,09/Apr/19 1:14 AM,01/Aug/19 4:44 PM,28/Oct/23 2:49 AM,01/Aug/19 4:44 PM,,,,,,,,1.11.0,,libindy,,,,,0,android,EV-Triaged,TShirt_S,"version: indy-1.7.0
Device: Samsung SM-A520F
OS: Android 8.0

Steps:

1) Get and parse schema: 
 *  Ledger.buildGetSchemaRequest(myDid, schemaId);
 *  Ledger.submitRequest(pool, schemaRequest);
 * Ledger.parseGetSchemaResponse(response);

2)Issuer create and store cred def:
 * Anoncreds.issuerCreateAndStoreCredentialDef(walletWrapper.getWallet()
 , myDid
 , schemaAsJson
 , tag
 , ""CL""
 , config);
 * Ledger.buildCredDefRequest(myDid, credDef);

3) Open blob storage writer (*show image - openWriter.png*):
 * BlobStorageWriter.openWriter(""default"", ""\{""base_dir"":""/storage/emulated/0/Android/data/com.ledgerleopard.cjib/files/GXnntrMWs5vBhWjJ1HvNEv_3_CL_10_tag"", ""uri_pattern"":"""" }"") 

4) Try create revocation state:
 * Anoncreds.issuerCreateAndStoreRevocReg (*show image - issuerCreateAndStoreRevocReg.png)*

Arguments:
issuerDid: GXnntrMWs5vBhWjJ1HvNEv;
tag: DPA_TAG;
maxCredNum: 1;
credDefId:GXnntrMWs5vBhWjJ1HvNEv:3:CL:10:tag;
blobStorageWriter;
config:""{""max_cred_num"":1};

Fact result:
Exception org.hyperledger.indy.sdk.IOException: An IO error occurred.
Error log: E/indy: src/errors/indy.rs:73 | Casting error to ErrorCode: Permission denied (os error 13)

Expect: no exception


Attached code as image and log as text file
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Apr/19 1:08 AM;izashkalov;AndroidManifest.png;https://jira.hyperledger.org/secure/attachment/17078/AndroidManifest.png","09/Apr/19 1:09 AM;izashkalov;android-log.text;https://jira.hyperledger.org/secure/attachment/17077/android-log.text","09/Apr/19 1:06 AM;izashkalov;issuerCreateAndStoreRevocReg.png;https://jira.hyperledger.org/secure/attachment/17079/issuerCreateAndStoreRevocReg.png","09/Apr/19 1:06 AM;izashkalov;openWriter.png;https://jira.hyperledger.org/secure/attachment/17080/openWriter.png",,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900006",,,,Unset,Unset,Indy SDK 19.15,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,izashkalov,sergey.minaev,SergeyBrazhnik,,,,,,,"14/May/19 4:56 PM;izashkalov;After installing ROOT rights on the emulator. I changed the write permissions in the root directory for all subfolders the emulator directories. 
""chmod -R 777 /""

I was able to get  ""revRegInfo"" without IO exception from *Anoncreds.issuerCreateAndStoreRevocReg*.;;;","14/May/19 5:00 PM;SergeyBrazhnik; 

It seems to me that I have found a trouble place. 

The .recursive(true) for android throws the PermissionExceptions

For Android you provides system API calls getCacheDir() or getFilesDir() which returns full path to application folder like 
*/storage/emulated/0/Android/data/com.package.name/files/*

Application has no rights to create all this chain of folders.

Possible solution is to exclude .recursive(true) for Android

 
{code:java}
impl Writer for DefaultWriterConfig {
    fn create(&self, id: i32) -> IndyResult<Box<WritableBlob>> {
        let path = PathBuf::from(&self.base_dir);

        fs::DirBuilder::new()
            .recursive(true) // need to be excluded for Android
            .create(tmp_storage_file(id).parent().unwrap())?;

        let file = File::create(tmp_storage_file(id))
            .map_err(map_err_trace!())?;

        Ok(Box::new(DefaultWriter {
            base_dir: path,
            uri_pattern: self.uri_pattern.clone(),
            file,
            id,
        }))
    }
}
{code}
 ;;;","16/May/19 8:01 PM;sergey.minaev;[~SergeyBrazhnik] [~izashkalov] 1) could you share libindy logs with TRACE level? 

2) I'm in doubt is it really problem with recursive creation of directories or with smth else.
IMO it should be smth different as recursive dir builder is largely used in codebase in different modules (wallet, pool, etc)

Also it may be helpful to extend trace in create of default writer config to
{code:java}
fs::DirBuilder::new()
 .recursive(true)
 .create(tmp_storage_file(id).parent().unwrap())
 .map_err(map_err_trace!())?;{code}
and rebuild of libindy.

3) Several months ago we faced with problem of permissions on Android and there was a problem with copying file while opening pool. It was resolved in
[https://github.com/hyperledger/indy-sdk/commit/8bbf38918abd5f8346a619bef1d0b1419e5ec98c]
And I can see the same potential problem in finalize of default writer 
[https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/services/blob_storage/default_writer.rs#L85];;;","16/May/19 8:12 PM;izashkalov;[~sergey.minaev] 
1) I attached file android-log.txt, can you check its? ;;;","16/May/19 8:41 PM;sergey.minaev;[~izashkalov] attached file contains only INFO logs, but I'm asking for TRACE level;;;","16/May/19 9:11 PM;izashkalov;[~sergey.minaev]
 How I can receive need logs? Now I use the next code
{code} 
LibIndy.api.indy_set_default_logger(""trace"");
{code};;;","16/May/19 11:57 PM;sergey.minaev;[~izashkalov] it should be enough if other layers (app config, ide settings or adb) will not filter out the trace.
Fill free to chat me at [https://chat.hyperledger.org/direct/sergey.minaev] about logging for more details;;;","04/Jun/19 5:33 PM;sergey.minaev;After discussion and debugging we have confirmed the reason of fault:
 Recursive creation of folder for Default Tails Writer in system-wide temporary directory may fail in some setup due to permissions.
 BTW no changes in codebase expected as temporary directory can be defined for the process by TMPDIR env variable to specific for application path.

To resolve this ticket I suggest to document this nuance in appropriate API functions.;;;","23/Jul/19 5:19 PM;Artemkaaas;Added `Note` to function: https://github.com/hyperledger/indy-sdk/pull/1757;;;",,,
1.8.2. SDK  - Android Crash upon ErrorDetails.class call (when exceptions are created),IS-1229,39172,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,majirosstefan,majirosstefan,majirosstefan,09/Apr/19 11:39 PM,04/Oct/19 6:41 AM,28/Oct/23 2:49 AM,02/Aug/19 11:32 PM,1.8.2,,,,,,,1.11.0,,libindy,libvcx,wallet,,,0,TShirt_L,,,"Hello guys, 

To quickly replicate error, I added simple test at my repo : [https://github.com/majirosstefan/indy-prototype] 

where you could run GetErrorInstrumentedTest to observe the error.

It is Android App, using Java 1.8, with instrumented test running on Emulator with API 28 and x86 architecture. Hugely inspired by test from official Indy repository: 

https://github.com/hyperledger/indy-sdk/blob/master/wrappers/java/src/test/java/org/hyperledger/indy/sdk/error/GetErrorTest.java .
 
Not sure if I am missing something or there should be another way of how I should use Indy, but I would be glad if you helped me to solve this problem in a way that do not 
 require downgrading to 1.7.0.

Thx,
 S.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1252,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900000r",,,,Unset,Unset,Indy SDK 19.14,Indy SDK 19.15,Indy SDK 19.16,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gokhankaraca,izashkalov,majirosstefan,nsivraj,sergey.minaev,,,,,"09/Jul/19 8:06 PM;sergey.minaev;Probably this issue is related to IS-1252;;;","18/Jul/19 2:58 PM;Artemkaaas;Android crashes on attempting to detach thread while still running code.
This appears for java tests also but as a warning and passes.
Here is [link|https://java-native-access.github.io/jna/4.2.1/com/sun/jna/Native.html#setCallbackThreadInitializer-com.sun.jna.Callback-com.sun.jna.CallbackThreadInitializer-] I found how to avoid detaching of a callback that is called frequently. 
I'm not sure that it is a definitely correct solution but it works.


Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1733

;;;","18/Jul/19 3:00 PM;Artemkaaas;There was the same issue in IS-1252 ;;;","19/Jul/19 1:59 PM;Artemkaaas;Build version: master-1188;;;","31/Jul/19 4:28 PM;Artemkaaas;[~majirosstefan] Could you validate fix?;;;","01/Oct/19 12:56 PM;nsivraj;Please see this issue that has an explanation of one effort/attempt to validate that this issue is fixed: https://jira.hyperledger.org/browse/IS-1252

I have updated my comments in the ticket https://jira.hyperledger.org/browse/IS-1252 to show that the logging is now working. I found out the reason our mobile app was crashing this time was due to an incorrectly configured {{RNFirebaseBackgroundMessagingService}} but that is now fixed and the logging works and it does not crash. Thank you.;;;",,,,,,
Unable to install indy-sdk on Windows 10,IS-1230,39187,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,pranav_kirtani,pranav_kirtani,pranav_kirtani,10/Apr/19 2:57 PM,08/Jul/19 9:10 PM,28/Oct/23 2:49 AM,08/Jul/19 6:16 PM,,,,,,,,1.10.0,,,,,,,0,,,,"Hi,

I tried following the steps in the guide to install indy-sdk but I get the below error:

D:\indy-sdk\indy-sdk\samples\nodejs>npm install indy-sdk

> indy-sdk@1.8.2 install D:\indy-sdk\indy-sdk\samples\nodejs\node_modules\indy-sdk
> node-gyp rebuild


D:\indy-sdk\indy-sdk\samples\nodejs\node_modules\indy-sdk>if not defined npm_config_node_gyp (node ""C:\Program Files\nodejs\node_modules\npm\node_modules\npm-lifecycle\node-gyp-bin\\..\..\node_modules\node-gyp\bin\node-gyp.js"" rebuild ) else (node ""C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\bin\node-gyp.js"" rebuild )
Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
 indy.cc
 win_delay_load_hook.cc
..\src\indy.cc(1133): error C3861: 'indy_pack_message': identifier not found [D:\indy-sdk\indy-sdk\samples\nodejs\node_
modules\indy-sdk\build\indynodejs.vcxproj]
..\src\indy.cc(1154): error C3861: 'indy_unpack_message': identifier not found [D:\indy-sdk\indy-sdk\samples\nodejs\nod
e_modules\indy-sdk\build\indynodejs.vcxproj]
..\src\indy.cc(2065): error C3861: 'indy_build_auth_rule_request': identifier not found [D:\indy-sdk\indy-sdk\samples\n
odejs\node_modules\indy-sdk\build\indynodejs.vcxproj]
..\src\indy.cc(2097): error C3861: 'indy_build_get_auth_rule_request': identifier not found [D:\indy-sdk\indy-sdk\sampl
es\nodejs\node_modules\indy-sdk\build\indynodejs.vcxproj]
..\src\indy.cc(2118): error C3861: 'indy_get_response_metadata': identifier not found [D:\indy-sdk\indy-sdk\samples\nod
ejs\node_modules\indy-sdk\build\indynodejs.vcxproj]
..\src\indy.cc(2979): error C3861: 'indy_generate_wallet_key': identifier not found [D:\indy-sdk\indy-sdk\samples\nodej
s\node_modules\indy-sdk\build\indynodejs.vcxproj]
..\src\indy.cc(2988): error C3861: 'indy_set_runtime_config': identifier not found [D:\indy-sdk\indy-sdk\samples\nodejs
\node_modules\indy-sdk\build\indynodejs.vcxproj]
..\src\indy.cc(2998): error C3861: 'indy_get_current_error': identifier not found [D:\indy-sdk\indy-sdk\samples\nodejs\
node_modules\indy-sdk\build\indynodejs.vcxproj]
..\src\indy.cc(3087): error C3861: 'indy_set_logger': identifier not found [D:\indy-sdk\indy-sdk\samples\nodejs\node_mo
dules\indy-sdk\build\indynodejs.vcxproj]
..\src\indy.cc(3095): error C3861: 'indy_set_default_logger': identifier not found [D:\indy-sdk\indy-sdk\samples\nodejs
\node_modules\indy-sdk\build\indynodejs.vcxproj]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00r83:i",,,,Unset,Unset,EV-SDK 19.13,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,pranav_kirtani,sergey.minaev,,,,,,,,"24/Jun/19 6:59 PM;Artemkaaas;[~pranav_kirtani] Have you  [installed Libindy|https://github.com/hyperledger/indy-sdk#windows]?
Windows section was missed in the read.me file.  I added it in the [PR|https://github.com/hyperledger/indy-sdk/pull/1685];;;","08/Jul/19 6:16 PM;sergey.minaev;Attached log seems like missed libindy in the OS. READme fixed by Artem so the ticket may be treated as done;;;",,,,,,,,,,
VCX should use get authrules request and appropriate helpers instead of get fees,IS-1231,39190,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,sergey.minaev,sergey.minaev,10/Apr/19 6:57 PM,08/Oct/19 10:14 PM,28/Oct/23 2:49 AM,08/Oct/19 10:14 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,IS-1232,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0i",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"08/Oct/19 10:14 PM;esplinr;LibVCX should use the same methods to get fees as everyone else, rather than interpreting the authrules directly. See ST-561 and ST-562.;;;",,,,,,,,,,,
Helper to determine prerequisites for particular write request to the ledger ,IS-1232,39191,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,10/Apr/19 7:01 PM,10/Oct/19 8:53 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"*Story*
As a developer of an Indy identity application, I need to query the ledger in order to discover how many signatures of each role is required to execute my intended transaction so that I can guide the user appropriately.

*Notes*
If application have information about auth rules and would like to send write request with update it may be non-trivial to understand requirements for this request as it may depends on current ledger state. If the ledger will provide helper request, libindy API should support it.",,,,,,,,,,,,,,,,,,,IS-1231,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0c",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"10/Oct/19 8:52 PM;esplinr;This is similar functionality to the Sovrin Token Ticket:
https://sovrin.atlassian.net/browse/ST-535#icft=ST-535

But the user is trying to figure out what permissions is required, rather than what fee is required.;;;",,,,,,,,,,,
POA: Transaction Author Agreement API,IS-1234,39276,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,12/Apr/19 10:10 PM,30/Apr/19 9:21 PM,28/Oct/23 2:49 AM,30/Apr/19 9:20 PM,,,,,,,,1.9.0,,,,,,,0,,,,"*Story*
As a steward of an Indy network, I want transaction authors to agree that the information they submit to the ledger meets the requirements outlined by ledger governance for the current transaction to minimize the liability that stewards accept when storing the data on an immutable ledger.

*Acceptance Criteria*
Design the API calls to:
* Pull the list of valid acceptance mechanisms from the ledger.
* Allow downstream applications to expose the agreement in an acceptable way to users receive their consent.
* Pulling the hash of the agreement so that downstream applications can detect when the agreement changes.

Show how existing calls can modified to:
* Require transaction author agreement  acceptance before submitting a write to the public ledger.
* Include as part of the transaction signature a digital signature indicating the acceptance of the author agreement. (To achieve this, it is sufficient to include the hash of the agreement in the existing signed transaction. A second signature is not required.)
* The transaction also records the time and date when the agreement was accepted.
* The transaction records an indication of how it was accepted pulled from a list of valid mechanisms that is stored on the ledger.

Questions:
* Should we store the agreement acceptance date and time in the wallet? (This would allow the acceptance to be backed up and restored with the wallet.)",,,,,,,,,,,,,,,,,,,,,,,IS-1147,,,,,,,INDY-1942,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sy",,,,Unset,Unset,Ev-SDK 19.08,Ev-SDK 19.09,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashcherbakov,esplinr,,,,,,,,,"30/Apr/19 9:21 PM;ashcherbakov;Design: https://github.com/hyperledger/indy-node/blob/master/design/txn_author_agreement.md;;;",,,,,,,,,,,
Credential Exchange HIPE improvements,IS-1235,39278,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,12/Apr/19 10:21 PM,21/Jun/19 10:13 PM,28/Oct/23 2:49 AM,21/Jun/19 10:13 PM,,,,,,,,,,libvcx,,,,,0,,,,"*Acceptance Criteria*
* Incorporate into the HIPE the improvements suggested by reviewers.
* Define how payments can be optionally included in credential exchange (might be a separate HIPE).",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1125,IS-1182,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx2z4",,,,Unset,Unset,Ev-SDK 19.08,Ev-SDK 19.09,Ev-SDK 19.10,Ev-SDK 19.11,Ev-SDK 19.12,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"07/Jun/19 9:49 PM;sergey.minaev;main HIPE is moved to Aries RFCs
https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential
and
https://github.com/hyperledger/aries-rfcs/tree/master/features/0037-present-proof;;;","08/Jun/19 12:27 AM;sergey.minaev;Payment reference suggested in the PR https://github.com/hyperledger/aries-rfcs/pull/71;;;",,,,,,,,,,
did rotate-key bug,IS-1236,39296,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,mattnorton,mattnorton,mattnorton,14/Apr/19 12:51 AM,19/Aug/19 7:16 PM,28/Oct/23 2:49 AM,09/Aug/19 6:23 AM,,,,,,,,1.11.1,,cli,wallet,,,,0,,,,"did rotate-key works on the ledger, but did not rotate inside the wallet",,,,,,,,,,,,,,,,,,,,,,,,,IS-1267,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009ei",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,mattnorton,mgbailey,sergey.minaev,,,,,,,"15/Apr/19 7:21 PM;sergey.minaev;[~mattnorton] please describe details: are you using CLI or libindy + something else, what exactly steps have you done?;;;","15/Apr/19 10:51 PM;mgbailey;[~sergey.minaev] He is attempting to use indy-cli with this command:
 * did rotate-key seed=<new_seed>

The key is changed on the ledger, but not in the local wallet. It should be changed in both places simultaneously. As it is, the DID is left unusable with the current wallet as a result of this command, since there is no other way in the cli to change the local key for a DID.;;;","23/Apr/19 6:37 AM;mgbailey;[~mattnorton], I have tried this with versions 1.8.1 and 1.8.2 and have been unable to duplicate the issue. From what I can tell, this is working fine. I am puzzled, because I saw it when you were having problems, but I see no problem.;;;","23/Apr/19 8:59 PM;Artemkaaas;[~mattnorton] have you tried to call `did rotate-key resume=true`?  
There is a chance that CLI didn't receive a reply from Node because of high load on the pool and didn't apply temporary key.
Here are a ticket IS-1036  that describe a problem you faced. 
;;;",,,,,,,,
Not all actions are covered by libindy txn builders for GET/SET_AUTHRULE,IS-1237,39310,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,sergey.minaev,sergey.minaev,15/Apr/19 7:26 PM,22/May/19 7:23 PM,28/Oct/23 2:49 AM,23/Apr/19 10:48 PM,,,,,,,,1.8.3,,,,,,,0,TShirt_M,,,"Problems:
* `new_value` can be empty string for `ADD` action
* `new_value` can be null for `EDIT` action
* skip `old_value` serialization for `ADD` action",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx6",,,,Unset,Unset,Ev-SDK 19.08,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,VladimirWork,,,,,,,,"15/Apr/19 11:02 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1586;;;","23/Apr/19 12:21 AM;Artemkaaas;Build version: master-1065;;;","23/Apr/19 10:48 PM;VladimirWork;Build Info:
libindy 1.8.2~1065

Steps to Validate:
1. Build ADD rule with '' as `new_value`.
2. Build EDIT rule with None as `new_value`.
3. Check ADD request for `old_value` absence for any value of this field put into builder.

Actual Results:
Auth rule request builder works as expected.;;;",,,,,,,,,
Usage of zmq 4.2 with vulnerability in Indy,IS-1238,39311,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,15/Apr/19 7:27 PM,10/May/19 12:19 AM,28/Oct/23 2:49 AM,10/May/19 12:19 AM,,,,,,,,,,,,,,,0,TShirt_S,,,"libzmq 4.2.* and 4.3.0 contains CVE-2019-6250 vulnerability, we have to check if we affected and should we update Indy dependencies.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00kzz:",,,,Unset,Unset,Ev-SDK 19.08,Ev-SDK 19.09,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),MikeLodder,sergey.minaev,,,,,,,,,"24/Apr/19 8:14 PM;sergey.minaev;Both IndySDK and Indy Node are built in Ubuntu 16.04 environment so Indy isn't affected on ubuntu platform as Ubuntu 16.04 provides libzmq 4.1.4.

BTW we use libzmq 4.2 on MacOS, Windows and Android env but it's only client side.

[~MikeLodder] could you provide your expertise here: is client side affected by this vulnerability?
If yes - we have to update our deps in client packages
If no - we can close this issue as we are not affected;;;","06/May/19 9:36 PM;MikeLodder;After further investigating, I firmly believe the client side is not affected by this. The issue occurs during the handshake phase when connecting to the server and the server not doing enough checks for the message size which allows the attacker to set it to whatever they want. Only an unauthenticated client can do this and I believe Indy is using CURVE authentication from what I can see.;;;","08/May/19 12:47 AM;sergey.minaev;Based on Mike's comment I'm going to close this ticket.

[~ignisvulpis] AFAIR you are original reporter of this ticket. Are you OK with Mike's conclusion above?;;;",,,,,,,,,
Wallet names must be unique even if paths differ,IS-1239,39354,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,danielhardman,danielhardman,17/Apr/19 2:50 AM,19/Aug/19 7:16 PM,28/Oct/23 2:49 AM,27/Jul/19 12:24 AM,,,,,,,,1.11.1,,,,,,,0,help-wanted,,,"Scenario:

In one process, I want to open a wallet named ""foo"" at /path/to/wallet/x/, and I at the same time I also want to open a wallet named ""foo"" at /path/to/wallet/y. These wallets have unique handles, and unique paths, so they should be open-able. However, today the SDK emits an error about ""wallet already open"", based purely on the fact that the wallet name is ""foo"" in both cases.

Expected behavior: as long as the combination of wallet name and path are unique, the SDK should allow such wallets to be opened.",,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009e",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,danielhardman,,,,,,,,,"13/May/19 4:10 PM;Artemkaaas;Changes: Opened wallets are identified by `id+path`.

Done in PR: https://github.com/hyperledger/indy-sdk/pull/1597

Build version: master-1076;;;","17/May/19 4:16 PM;Artemkaaas;[~danielhardman]
Can we close the ticket?;;;",,,,,,,,,,
Wrong error output when open a wallet with invalid credentials,IS-1240,39364,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,JeromeK,JeromeK,17/Apr/19 7:17 PM,22/May/19 8:06 PM,28/Oct/23 2:49 AM,13/May/19 4:12 PM,1.8.1,,,,,,,1.9.0,,libindy,python wrapper,,,,0,,,,"Hey Guys

If you open a wallet with invalid credentials you receive a 207-Error. Shouldn't it be a 208? 
Or maybe the comment is wrong

(See attachments)

Greets 
JeromeK 
","* Libindy-1.8.1
* Python 3.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Apr/19 7:15 PM;JeromeK;error_mismatch_1.PNG;https://jira.hyperledger.org/secure/attachment/17110/error_mismatch_1.PNG","17/Apr/19 7:16 PM;JeromeK;error_mismatch_2.PNG;https://jira.hyperledger.org/secure/attachment/17109/error_mismatch_2.PNG",,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx090i",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,JeromeK,,,,,,,,,"25/Apr/19 10:29 PM;Artemkaaas;ErrorCode is correct. There is a mistake in the documentation for Python.  Descriptions are confused for these two errors.
Here is a link for the base : [Libindy Error Codes|https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/api/mod.rs#L154]
Corrected in PR: https://github.com/hyperledger/indy-sdk/pull/1598;;;","13/May/19 4:12 PM;Artemkaaas;Build version: master-1086;;;",,,,,,,,,,
Update Objective C wrapper to use Swift 5.0 syntax,IS-1241,39379,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,kdenhartog,kdenhartog,18/Apr/19 10:39 AM,10/Oct/19 9:52 PM,28/Oct/23 2:49 AM,10/Oct/19 9:52 PM,,,,,,,,,,libindy,,,,,0,,,,"Currently when using the libindy Objective C wrapper to build an app on iOS there are issues that prevent the app for building. It throws ""dyld: Library not loaded: @rpath/libswiftCore.dylib"" which occurs because the compiler on the latest update of XCode (10.2) no longer can compile the syntax used in the Objective C wrapper. 

Solution: Update the swift code in the Objective C wrapper found [here|[https://github.com/hyperledger/indy-sdk/blob/9e32bf35ba8d053ec53562511da60899013a2541/wrappers/ios/libindy-pod/Indy/Utils/Exstensions/DictionaryExtension.swift]] and [here|[https://github.com/hyperledger/indy-sdk/blob/9e32bf35ba8d053ec53562511da60899013a2541/wrappers/ios/libindy-pod/Indy/Utils/Exstensions/StringExtensions.swift]] or remove the swift code.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzww06:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,kdenhartog,mcemkilinc,,,,,,,,"10/Oct/19 9:52 PM;esplinr;Comment on associated PR:
https://github.com/hyperledger/indy-sdk/pull/1611
{quote}
This PR has been stuck because the current Indy SDK maintainers aren't equipped to work in the  Objective C / Swift ecosystem.

During a recent Indy Contributors call, we discussed the future of the Indy SDK wrappers (https://wiki.hyperledger.org/display/indy/2019-09-23+Indy+Contributors+Call). We decided that these PRs should be closed, and we encourage you to create an Aries language library that meets your use case.

Thank you for your efforts to improve the Hyperledger Identity ecosystem.
{quote};;;",,,,,,,,,,,
Delete credentials from indy prover wallet,IS-1242,39390,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,sklump,sklump,18/Apr/19 10:03 PM,30/May/19 7:24 PM,28/Oct/23 2:49 AM,30/May/19 7:24 PM,,,,,,,,1.9.0,,libindy,,,,,0,quality,,,"https://github.com/hyperledger/indy-sdk/pull/1588

Expose API calls to allow for credential deletion from indy prover wallet.",,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,IS-1248,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:zr",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,sklump,,,,,,,,,"30/May/19 7:24 PM;sergey.minaev;PR merged and integration tests passed;;;",,,,,,,,,,,
Force update to list of active pool,IS-1243,39393,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,18/Apr/19 11:09 PM,11/Oct/19 9:41 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libindy,,,,,0,EV-CS,,,"*Story*
As a developer building an application for an Indy network that is expected to run continuously for a long time, I want to be able to force an update of the list of active nodes in the pool so that I keep valid connections without having to restart libindy.

Specific use cases include hosted services which could have  very long uptimes.

*Acceptance Criteria*
* LibIndy should automatically update the pool list on a configurable frequency.
* It should be possible to disable the automatic update.
* An API command exists which will cause libindy to re-synchronize the pool list.
* The process needs to be documented.

*Notes*
* Would client application developers prefer to manage the cron for automatic updates in their application instead of having libindy do it?",,,,,,,,,,,,,,,,,,,,,,,,,,IS-245,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1397,,,No,,Unset,No,,,"1|hzwrhj:910sx0901i",,,,Unset,Unset,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"29/Jul/19 11:10 PM;esplinr;An API exists to force a refresh of the pool state. To complete this story we need to:
* Document that API in the document for configuring libIndy
* Have an automatic refresh of the pool;;;","02/Aug/19 10:17 PM;esplinr;There is a question about how to deal with in-progress requests. Currently we drop in progress requests before updating the pool list, but that could be disruptive to high-performance use cases when automatically updating. We should probably buffer the in progress requests in some way.;;;",,,,,,,,,,
HTTP 501 error sovrin maven repository,IS-1244,39401,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,SteveGoob,lenis0012,lenis0012,19/Apr/19 3:28 PM,20/Apr/19 5:00 AM,28/Oct/23 2:49 AM,20/Apr/19 4:56 AM,,,,,,,,,,,,,,,0,,,,"The sovrin repository appears to be unavailable, and users are given a 501 error with the following error message:
h1. >Oops! Something went wrong

 

The following URL is affected, but I think the entire repo is down: https://repo.sovrin.org/repository/maven-public/org/hyperledger/indy/1.8.2/indy-1.8.2.pom",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00lhz:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lenis0012,SteveGoob,,,,,,,,,"20/Apr/19 5:00 AM;SteveGoob;repo.sovrin.org/repository/ is back up. We're sorry about the downtime, the database became corrupted after the disk filled up due to a misconfiguration issue. No data was lost.;;;",,,,,,,,,,,
CLI should provide the way to multisign any transaction,IS-1245,39447,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,23/Apr/19 9:01 PM,12/Jun/19 9:41 AM,28/Oct/23 2:49 AM,10/May/19 6:08 PM,,,,,,,,1.9.0,,,,,,,0,,,,"It needs to be possible to add signatures to an existing transaction without requiring cut-and-paste the text

*Acceptance Criteria*
The CLI needs to be able to:
* Generate a transaction without submitting it to the ledger.
* Allow the transaction to be saved as a text file.
* Import a transaction from a text file.
* Append a signature to an existing transaction.

*Notes*
I'm picturing a user interaction like:
{code}
   [bash]% indy-cli
   >>> wallet load
   >>> select did
   >>> load-transaction t.txt
   >>> . . . add our signature
   >>> save-transaction t2.txt
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1291,,,,IS-1260,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00lr1:",,,,Unset,Unset,Ev-SDK 19.09,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"02/May/19 9:44 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1600;;;","10/May/19 5:56 PM;sergey.minaev;Master build 1.8.3 1075;;;","10/May/19 6:07 PM;sergey.minaev;Validation steps
 - create 2 trustee DIDs in the wallet
 - change auth rule to add new schema to require 2 trustee signatures
 - use first trustee
 - create new schema request and try to send it
 `ledger schema attr_names=[""atr1""] name=s1 version=1.0` - failed as expected - not enough signatures
 - just create schema request, w/o sending:
 `ledger schema attr_names=[""atr1""] name=s1 version=1.0 send=false`
 - switch to another trustee
 - add second signature `ledger sign-multi`
 - send multisigned request via ledger custom command - successfully written to the ledger;;;","10/May/19 6:43 PM;sergey.minaev;Potential improvement IS-1260;;;",,,,,,,,
Release Indy SDK 1.8.3,IS-1246,39454,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,KitHat,esplinr,23/Apr/19 11:34 PM,22/May/19 7:22 PM,28/Oct/23 2:49 AM,30/Apr/19 9:26 PM,,,,,,,,1.8.3,,,,,,,0,,,,"*Task Overview*
 Perform all necessary tasks to have a release of LibIndy. We want to release everything that is ready.

*Acceptance Criteria*
 * Code is tested
 * Release is tagged
 * Release notes are drafted
* Issues in JIRA are assigned to the correct fix version
 * Release notes are reviewed by Docs and Product Management
 * A new release of Indy-Crypto is part of this release

*Notes*
* Evernym maintained ledger plugins may also need to be released.",,,,,,,,,,,,,,,,,,,,,IS-1247,,IS-1199,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,"1|i00lqs:",,,,,,Ev-SDK 19.09,,,,,,5.0,,,,,,,,,,,,Artemkaaas,esplinr,KitHat,,,,,,,,,,,,,,,,,,,
Release Indy SDK 1.9.0,IS-1247,39455,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,KitHat,esplinr,23/Apr/19 11:34 PM,12/Jun/19 3:00 AM,28/Oct/23 2:49 AM,01/Jun/19 7:01 PM,,,,,,,,1.9.0,,,,,,,0,,,,"*Task Overview*
 Perform all necessary tasks to have a release of LibIndy. We want to release everything that is ready.

*Acceptance Criteria*
 * Code is tested
 * Release is tagged
 * Release notes are drafted
* Issues in JIRA are assigned to the correct fix version
 * Release notes are reviewed by Docs and Product Management
 * A new release of Indy-Crypto is part of this release

*Notes*
* Evernym maintained ledger plugins may also need to be released.",,,,,,,,,,,,,,,,,,,,,IS-1290,,IS-1246,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,"1|hzwrhj:910sx3",,,,,,Ev-SDK 19.11,,,,,,8.0,,,,,,,,,,,,Artemkaaas,esplinr,KitHat,,,,,,,,"28/May/19 1:54 PM;Artemkaaas;Release preparation PR: https://github.com/hyperledger/indy-sdk/pull/1649;;;","30/May/19 2:33 PM;Artemkaaas;Build version: rc-74;;;",,,,,,,,,,
Allow user to modify claim_def,IS-1248,39501,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,Derashe,Derashe,25/Apr/19 4:34 PM,19/Aug/19 7:11 PM,28/Oct/23 2:49 AM,19/Aug/19 7:11 PM,,,,,,,,1.11.1,,,,,,,0,,,,"Implement functionality so that user could modify claim_def and revoc_reg_def (probably, need to be checked if this case needed)",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1242,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009dk",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,brentzundel,Derashe,esplinr,sergey.minaev,,,,,,"27/Jul/19 12:05 AM;sergey.minaev;There are at least 2 options here:
* allow to delete cred_def
* implement rotation like for DID;;;","05/Aug/19 8:01 PM;Artemkaaas;Changes:  Implemented the same approach as for DID rotation. 
-  `indy_issuer_rotate_credential_def_start` to generate temporary credential definitional keys for an existing cred def
- `indy_sign_and_submit_request` - to send new cred def
- `indy_issuer_rotate_credential_def_apply` - to apply temporary keys as the main for an existing Credential Definition in the wallet

Done in PR: https://github.com/hyperledger/indy-sdk/pull/1785;;;","06/Aug/19 6:30 AM;brentzundel;Won't ""rotation"" of the cred_def make it impossible to verify any of the credentials issued under the previous cred_def? 

I think introducing this functionality may have disastrous consequences, and am curious as to what use case this change is attempting to address.;;;","06/Aug/19 10:41 PM;esplinr;Indy Node has allowed rotation of the keys for credential definitions for some time, and we noticed that Indy SDK did not have equivalent capability. We thought it would be valuable to keep the two parts of the system aligned.

The use case where this would be desirable is if the keys for a credential are compromised. The attacker could be issuing fraudulent credentials, and the proper response is to invalidate all existing credentials. If the credentials were not issued in a revocable manner, this would only be possible by rotating the keys. We agree that this likely to be a rare use case.

We agree that this command should not be implemented in the CLI, but should only be available to people who are explicitly calling it through the API. We will add a comment in the API documentation about it being a dangerous command.

We expect that production auth_rules will disallow rotating keys for credential definitions. cc [~lbendixsen];;;","07/Aug/19 4:45 AM;brentzundel;Okay, that makes sense.

Is there a ticket for adding a comment to the API documentation about how dangerous this is, or will that be done as part of this ticket?;;;","14/Aug/19 10:09 PM;Artemkaaas;Build version: master-1258;;;","16/Aug/19 10:19 PM;esplinr;Warning added:

https://github.com/hyperledger/indy-sdk/pull/1785/files#diff-0fa039f899be2606fbc6b3efc4c3638a;;;","19/Aug/19 7:10 PM;sergey.minaev;Available in master and covered by integration tests. There is no analog in CLI so no manual testing required;;;",,,,
testAnoncredsRevocationInteractionIssuanceByDemand() failed at line 380 ,IS-1249,39526,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,xia.tian,xia.tian,26/Apr/19 3:57 PM,26/Apr/19 4:38 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"*1. Issue*: verifierVerifyProof return true after revocation. The expected result should be false.

The code as following:

 

{color:#172b4d}*2. Position*: Line 380 failed in function testAnoncredsRevocationInteractionIssuanceByDemand {color}

Line 373 valid = Anoncreds.verifierVerifyProof(proofRequest,
 proofJson,
 schemasJson,
 credDefsJson,
 revRegDefsJson,
 revRegsJson).get();
{color:#FF0000}Line380 Assert.assertFalse(valid);{color}

{color:#172b4d}*3. Console Log:*{color}

java.lang.AssertionErrorjava.lang.AssertionError at org.junit.Assert.fail(Assert.java:86) at org.junit.Assert.assertTrue(Assert.java:41) at org.junit.Assert.assertFalse(Assert.java:64) at org.junit.Assert.assertFalse(Assert.java:74) at org.hyperledger.indy.sdk.interaction.AnoncredsRevocationInteractionTest.testAnoncredsRevocationInteractionIssuanceByDemand({color:#FF0000}AnoncredsRevocationInteractionTest.java:380){color} at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292) at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) at java.util.concurrent.FutureTask.run(FutureTask.java) at java.lang.Thread.run(Thread.java:748)
Disconnected from the target VM, address: '127.0.0.1:55407', transport: 'socket'
Process finished with exit code -1

*4. Version* 

Both Env1 and Env2's proof verification failed after revocation at line 380 of test case function testAnoncredsRevocationInteractionIssuanceByDemand()

*Env1:* 

a.{color:#de350b} libindy_1.8.2  {color}

b. ..\indy-sdk\wrappers\java\pom.xml

<modelVersion>4.0.0</modelVersion> <modelVersion>4.0.0</modelVersion> <groupId>org.hyperledger</groupId> <artifactId>indy</artifactId> <packaging>jar</packaging> <version>{color:#de350b}1.8.2{color}</version> <name>indy</name>

c. ..\indy-sdk\wrappers\java\src\test\java\org\hyperledger\indy\sdk\interaction\AnoncredsRevocationInteractionTest.java

*Env 2:*

a. libindy_1.8.1 

b. ..\indy-sdk\wrappers\java\pom.xml

<modelVersion>4.0.0</modelVersion> <modelVersion>4.0.0</modelVersion> <groupId>org.hyperledger</groupId> <artifactId>indy</artifactId> <packaging>jar</packaging> <version>1.8.1</version> <name>indy</name>

c. ..\indy-sdk\wrappers\java\src\test\java\org\hyperledger\indy\sdk\interaction\AnoncredsRevocationInteractionTest.java",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Apr/19 4:25 PM;xia.tian;AfterRevocLine380BreakPoint.PNG;https://jira.hyperledger.org/secure/attachment/17173/AfterRevocLine380BreakPoint.PNG","26/Apr/19 4:24 PM;xia.tian;beforeRevocLine303BreakPoint.PNG;https://jira.hyperledger.org/secure/attachment/17172/beforeRevocLine303BreakPoint.PNG","26/Apr/19 4:11 PM;xia.tian;verify.PNG;https://jira.hyperledger.org/secure/attachment/17171/verify.PNG",,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00m3r:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),xia.tian,,,,,,,,,,"26/Apr/19 4:11 PM;xia.tian;!verify.PNG!;;;","26/Apr/19 4:38 PM;xia.tian;Some clues and I am not sure if it is helpful.

Set breakpoint at Line 303 and Line 380
 # When running at 303, please refer to beforeRevocLine303BreakPoint.PNG' {color:#de350b}red rectangle{color}. And Console log shows {color:#de350b}true in last 4 lines{color}
 # When running at 380, please refer to AfterRevocLine380BreakPoint.PNG' {color:#de350b}red rectangle{color}. And Console log shows {color:#de350b}flase in last 4 lines{color}{color:#de350b}!beforeRevocLine303BreakPoint.PNG|thumbnail!!AfterRevocLine380BreakPoint.PNG|thumbnail!{color}

 ;;;",,,,,,,,,,
Replace Indy-Crypto with Ursa,IS-1250,39534,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,esplinr,esplinr,27/Apr/19 12:18 AM,16/May/19 8:38 PM,28/Oct/23 2:49 AM,16/May/19 8:38 PM,,,,,,,,1.9.0,,indycrypto,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n8v:",,,,Unset,Unset,Ev-SDK 19.10,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Hardcoded key type in crypto service,IS-1251,39545,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,ignisvulpis,ignisvulpis,29/Apr/19 5:10 PM,29/Apr/19 5:13 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"The keys are fixed to be ed25519

[https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/services/crypto/mod.rs#L158]{{}}

 
{quote}{{let my_sk = ed25519_sign::SecretKey::from_slice(&base58::decode(my_key.signkey.as_str())?)?;}}
 {{let signature = crypto_type.sign(&my_sk, doc)?[..].to_vec();}}
{quote}
 

while the signing algorithm might be different depending on my_key.verkey which could be something other than ed25519.

Key type and signature type must match.

This is currently no problem because there is only ed25519 in indy-sdk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00m7r:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ignisvulpis,,,,,,,,,,,,,,,,,,,,,
Custom Android logging crashes if logger is called within a java Callback,IS-1252,39573,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,nsivraj,nsivraj,nsivraj,01/May/19 7:25 AM,04/Oct/19 2:34 PM,28/Oct/23 2:49 AM,04/Oct/19 6:36 AM,,,,,,,,1.11.0,,libindy,libvcx,,,,0,EV-Triaged,TShirt_L,,"Whenever a rust custom logger (LibvcxLogger or LibindyLogger) logging statement on android is invoked such as 
 trace!(""get_config_value >>> key: {}"", key); 
 and that logging statement is called INSIDE a previous java Callback then the android app will crash.
  
 Here is an real call sequence where we have seen it crash...
 1) vcx_wallet_add_record – with key 'dataKey' succeeds adding key with value to wallet
 2) vcx_wallet_add_record – with key 'dataKey' fails because key is already in wallet
 3) the vcxAddRecordWalletCB gets called for the second vcx_wallet_add_record
 4) the callback invokes checkCallback(future, err)
 5) checkCallback invokes VcxException.fromSdkError(err)
 6) the VcxException constructor invokes LibVcx.api.vcx_get_current_error(errorDetailsJson);
 7) vcx_get_current_error has a trace statement in it that invokes the custom LibvcxLogger
 8) the android app crashes!

There are many many many scenarios where this could happen in nested java Callbacks and we are seeing several reports of android app crashes. If we use the LibvcxDefaultLogger and LibindyDefaultLogger then it DOES NOT crash BUT we cannot collect log statements into a file so that the user can email us the log file. We really need a solution to this problem for Android as soon as possible.

I have a simple Android test that reproduces the crashing of the android app and it only takes 5 minutes to run it with the rust code build to see if a certain rust code change will fix the issue. Using this Android test we have tried several different scenarios to pin point which changes in the code would eliminate the crash. We can share some of the ideas that have come out of this. I will attach some of the log files that show the crashing of the app.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1229,,,,,,,"01/May/19 7:33 AM;nsivraj;logcat.debug.12.out;https://jira.hyperledger.org/secure/attachment/17184/logcat.debug.12.out","01/May/19 7:37 AM;nsivraj;logcat.tmp.1.out;https://jira.hyperledger.org/secure/attachment/17185/logcat.tmp.1.out",,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900l",,,,Unset,Unset,Ev-SDK 19.11,Indy SDK 19.15,Indy SDK 19.16,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,krw910,nsivraj,sergey.minaev,,,,,,,"02/May/19 2:49 AM;nsivraj;This is the PR with changes to show how to reproduce the crashing on an android x86 emulator – [https://github.com/evernym/indy-sdk/pull/87];;;","09/Jul/19 8:06 PM;sergey.minaev;Probably this issue is related to IS-1229;;;","23/Jul/19 3:58 PM;Artemkaaas;Here was the same problem as IS-1229
Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1733
Build-version: master-1188;;;","01/Oct/19 12:49 PM;nsivraj;I was finally able to spend time on Friday and today to check whether or not this was fixed and it is NOT fixed. As soon as I enable the logging code here – [https://github.com/hyperledger/indy-sdk/blob/master/vcx/libvcx/src/utils/logger.rs#L66] – for Android then the Connect.Me mobile app crashes over and over again on every hydration of the mobile apps state which uses the logging during an 1073 libvcx error which triggers the callback within a callback and subsequently the crash. You can see this behavior for your self by installing Connect.Me for Android from here – [https://rink.hockeyapp.net/manage/apps/867464/app_versions/324] (1.0.65-95312 for Android). After you install that version of Connect.Me for Android and attempt to add a connection and then a credential and then close down the app (or put the app in the background) and send a push notification then you will see the app crash.

The fix that was put into Libindy.java and Libvcx.java was to simply invoke 
com.sun.jna.Native.detach(false) just before logging to the logger. I am not sure how this was tested to verify that it might be a fix for this issue but my testing does not show that the issue is fixed.;;;","02/Oct/19 2:19 PM;Artemkaaas;I don't have access to  https://rink.hockeyapp.net/manage/apps/867464/app_versions/324
What Liibndy/wrapper version does Connect.me use?  last stable?

I was testing on the `indy-prototype ` project that is attached to IS-1229.
I also updated it to depend on vcx and added the test which does steps as in the description of this ticket.

Could you run `indy-prototype` also (with changed indy dependency) to check if we have the same problem for both projects or different?;;;","04/Oct/19 6:35 AM;nsivraj;[~Artemkaaas] I need to add further testing results to this ticket. I have spent the last few days working to reproduce the same conditions that were causing Android to crash previously. In working to reproduce the exact same test scenarios I was able to verify that the logging fix – com.sun.jna.Native.detach(false) just before logging to the logger – actually DOES fix the Android logging issue. It took me a while to discover that the reason our Android Connect.Me app was crashing this time was due to the incorrect configuration of the {{RNFirebaseBackgroundMessagingService}} that was in our AndroidManifest.xml file. After fixing this incorrect setting now our Android Connect.Me app does not crash and the logging is turned on and we get all of the detailed logs from the rust code (libvcx and libindy). I am marking the ticket back to complete.;;;","04/Oct/19 2:34 PM;Artemkaaas;Great. Good news! Thank you for validation.;;;",,,,,
Support Android NDK19,IS-1253,39625,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,ignisvulpis,ignisvulpis,05/May/19 6:15 PM,11/Oct/19 9:39 PM,28/Oct/23 2:49 AM,11/Oct/19 9:39 PM,,,,,,,,1.12.0,,,,,,,0,,,,"Currently Indy is using ndk16 and gnustl. This will lead to trouble for Android application that use libindy but need to use another library that already moved on away from gnustl.

[C++ Library Support|https://developer.android.com/ndk/guides/cpp-support]

 

This should be updated to ndk-19c and gnustl, which is deprecated, must be replaced.

 

Evernym's prebuilt libraries should stop using gnustl as well. I suggest to rename them from

{{ https://repo.sovrin.org/android/libindy/deps/openssl/openssl_$1.zip}}
{{ https://repo.sovrin.org/android/libindy/deps/sodium/libsodium_$1.zip}}
{{ https://repo.sovrin.org/android/libindy/deps/zmq/libzmq_$1.zip""}}

to

{{https://repo.sovrin.org/android/libindy/deps/openssl/openssl_ndk16c_gnustl_$1.zip}}
{{ https://repo.sovrin.org/android/libindy/deps/sodium/libsodium}}{{_ndk16c_gnustl}}{{_$1.zip}}
{{ https://repo.sovrin.org/android/libindy/deps/zmq/libzmq}}{{_ndk16c_gnustl}}{{_$1.zip""}}

 

{{Also current versions of openssl-sys and libsodium-sys can be built by just specifying the target system e.g.:}}

??{{PATH=/home/ignisvulpis/Android/NDK/arm64/bin:$PATH cargo build --target=aarch64-linux-android}}??

{{https://github.com/sodiumoxide/sodiumoxide/blob/master/libsodium-sys/build.rs}}

{{Maybe we can help the ZMQ project to work the same way?}}

 

 

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00mnr:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,ignisvulpis,,,,,,,,,"11/Oct/19 9:39 PM;esplinr;We have migrated to NDK20.;;;",,,,,,,,,,,
Update VCX to use the new AUTH_RULE-based approach for GET_FEES,IS-1254,39705,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ashcherbakov,ashcherbakov,08/May/19 4:49 PM,24/May/19 9:58 PM,28/Oct/23 2:49 AM,24/May/19 9:58 PM,,,,,,,,1.9.0,,,,,,,0,,,,"As of now, VCX sends GET_FEES before every SCHEMA or CLAIM_DEF request.

With the new AuthRules logic, VCX needs to do the following:
 * Send GET_AUTH_RULE for CLAIM_DEF/SCHEMA action (hardcode the action ID since it's not changed)
 * Parse the AuthConstraint and find fees aliases (if any)
 * Set GET_FEES(alias) to get how much SCHEMA/CLAIM_DEF costs.

Note: unlike fees, Auth Rules are changed rarely, so it may be fine to cache result of GET_AUTH_RULE.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1275,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n47:",,,,Unset,Unset,Ev-SDK 19.10,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ashcherbakov,esplinr,sergey.minaev,,,,,,,"13/May/19 11:34 PM;esplinr;See related work in the Sovrin Token:
https://sovrin.atlassian.net/browse/ST-562;;;","15/May/19 8:56 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1624;;;","24/May/19 9:48 PM;Artemkaaas;Build version: master-1109;;;","24/May/19 9:58 PM;sergey.minaev;Integration tests passed. New functionality temporary disable until new Node stable due to known issue on Node+Plugin setup
Follow up ticket IS-1275;;;",,,,,,,,
TAA acceptance mechanism should be configurable in CLI,IS-1255,39728,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Low,Done,Artemkaaas,sergey.minaev,sergey.minaev,09/May/19 6:05 PM,24/May/19 9:54 PM,28/Oct/23 2:49 AM,24/May/19 9:53 PM,,,,,,,,1.9.0,,,,,,,0,,,,"*Acceptance Criteria*

When accepting the Transaction Author Agreement, the string used to indicate the Acceptance Mechanism should be pulled from a configuration parameter.
 * The configuration parameter could be pulled from a text file or on the command line.
 * The configuration parameter should default to blank.
 * It has to be filled  to be filled with the string enforced by the ledger they are using, if that ledger requires acceptance of an agreement.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n4c:",,,,Unset,Unset,Ev-SDK 19.10,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"16/May/19 11:58 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1630;;;","23/May/19 10:34 PM;Artemkaaas;Build version: master-1109;;;","24/May/19 9:54 PM;sergey.minaev;New integration tests passed, functionality successfully used while complex demo.;;;",,,,,,,,,
TAA Integration with Node,IS-1256,39729,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,sergey.minaev,sergey.minaev,09/May/19 6:18 PM,29/May/19 12:23 AM,28/Oct/23 2:49 AM,24/May/19 9:53 PM,,,,,,,,1.9.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n48:",,,,Unset,Unset,Ev-SDK 19.10,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"21/May/19 4:35 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1638;;;","24/May/19 9:49 PM;Artemkaaas;Build version: master-1109;;;","24/May/19 9:54 PM;sergey.minaev;New integration tests passed, functionality successfully used while complex demo.;;;",,,,,,,,,
Process feedback on Aries vs IndySDK 2.0 proposal,IS-1257,39730,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,09/May/19 6:19 PM,11/Oct/19 9:49 PM,28/Oct/23 2:49 AM,11/Oct/19 9:49 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,IS-1285,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zkg:",,,,Unset,Unset,Indy SDK 19.19,Indy Aries 19.20,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Configurable Credential Attribute Tagging Policy for Prover,IS-1258,39733,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,sklump,sklump,09/May/19 8:39 PM,25/Jun/19 12:31 AM,28/Oct/23 2:49 AM,25/Jun/19 12:31 AM,,,,,,,,1.10.0,,libindy,,,,,0,EV-Triaged,quality,,"*OBJECTIVE*
Configure what tags to build on credential storage in prover wallet, tailoring data profile in storage to application search needs.

*APPROACH*
New named object, two new anoncreds::prover API calls, adjustments to credential storage.

_+New domain::anoncreds::CredentialAttrTagPolicy named object+_
* set of attribute names marked for tagging
* method to canonicalize and check input attribute name against set inclusion, returning true or false
* serialization/deserialization implementations to marshall to and from JSON list or vector of strings
* associated canonicalization function, mimics commands/schema helper common_attr_view()

_+New API calls for anoncreds: prover set (and prover get) credential attribute tagging policy+_
* set policy:
  - specify:
    > cred def id of for cred def of interest
    > null policy to clear back to default (tag-all), otherwise JSON list of attributes of interest
    > retroactive boolean flag
  - implement:
    > deserialize CredentialAttrTagPolicy (or None) for input specification
    > write/delete wallet record for CredentialAttrTagPolicy
    > if retroactive, find existing credentials on cred def id and rewrite their tags to comply
* get policy:
  - by credential definition identifier
  - return JSON list of attributes of interest, or JSON null for default policy (tag-all)

_+Adjustment to Credential Storage Service Implementation+_
* Instead of building attr::_a_::marker and attr::_a_:: value for each attribute _a_ in credential to store, fetch credential attribute tagging policy (by cred def id) first and abstain from building such for those attributes not included in such policy if it exists.

*IMPLEMENTATION*
See https://github.com/hyperledger/indy-sdk/pull/1661.

*PERFORMANCE ANXIETY*
The retroactive policy reset could be slow since it must rebuild tags for arbitrarily many credentials. However, on a 32 attribute cred def for 1000 credentials, on my Ubuntu VM, I get about 80 seconds to store all the credentials in the first place and 7.7 seconds to tag them retroactively on 2 attributes each.

Conclusion: performance is acceptable.",,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:zs",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sklump,,,,,,,,,"10/May/19 3:27 AM;sklump;Note that at present the prover-credential-attr-tag-policy unit tests in the PR add credentials to the common wallet, breaking the other prover unit tests. I think the most straightforward path is to wait for credential deletion and then I will reconstitute and resubmit the update.;;;","25/May/19 3:19 AM;sklump;Note new pull request #1648 (https://github.com/hyperledger/indy-sdk/pull/1648).

The pull request includes libindy implementation and tests, plus rust wrapper, python wrapper and python wrapper tests.

I've left off ios/Java/javascript/dotnet wrappers and unit tests.;;;","27/May/19 11:27 PM;sklump;Apparently a manual intervention stopped the CI build/test of PR-1648 en route to perfecting 1.9.0. The update is fine as far as I know. If a friendly operator in indy-sdk core group could take a look and advise if it needs any further changes, I would appreciate it.;;;","29/May/19 10:50 PM;esplinr;This missed the cut-off for new code in 1.9.0, but we will plan on getting it tested for the 1.9.1 release in June.;;;","06/Jun/19 1:20 AM;sklump;Note that the new PR is https://github.com/hyperledger/indy-sdk/pull/1661.;;;",,,,,,,
CLI should allow to send custom request from context,IS-1260,39770,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,10/May/19 6:42 PM,30/May/19 7:24 PM,28/Oct/23 2:49 AM,30/May/19 7:24 PM,,,,,,,,1.9.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1245,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00oa4:",,,,Unset,Unset,Ev-SDK 19.11,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"17/May/19 3:14 PM;Artemkaaas;`ledger custom` provide this functionality.
The keyword `context` must be specified instead of passing transaction json for sending transaction stored into CLI context. `ledger custom context`
An only thing we need to do is updating of help for this command to show an example for this case.;;;","30/May/19 7:23 PM;sergey.minaev;Examples in CLI are correct now;;;",,,,,,,,,,
iOS projects with bitcode enabled can't link with libindy,IS-1261,39792,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Deferred,,mccown,mccown,14/May/19 2:51 AM,17/Oct/19 1:54 PM,28/Oct/23 2:49 AM,18/Jun/19 5:03 AM,1.8.0,1.8.1,1.8.2,1.8.3,,,,,,libindy,,,,,0,ci-failure,,,"When iOS apps requiring that bitcode enabled attempt to link with the libindy Cocoapod, the following error is received:

'/Users/XXXXX/Documents/Anonyome/indy-sdk/wrappers/ios/libindy-pod/Pods/libindy/libindy.a(indy.i6r5owmqkyk7fd9.rcgu.o)' does not contain bitcode. You must rebuild it with bitcode enabled (Xcode setting ENABLE_BITCODE), obtain an updated library from the vendor, or disable bitcode for this target. for architecture arm64

After a bit of research, I discovered that the Rust compiler didn't support enabling bitcode until about March 2018.  However, a test of simply updating the rust compiler did not fix the link error.  

In one newsgroup, it was recommended to enable a compiler option (RUSTFLAGS=""-C llvm-args=\""-fembed-bitcode\"""") to enable bitcode compatibility.  I have not yet tested this option.

For iOS apps requiring bitcode functionality, it does not seem possible to link in the libindy Cocoapod.  If someone knows of process that is able to enable bitcode functionality for libindy, I would very much appreciate learning the sequence.",This error has been observed on iOS version 10 and later.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/May/19 2:54 AM;esplinr;rust-ios-example.zip;https://jira.hyperledger.org/secure/attachment/17247/rust-ios-example.zip",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00nm7:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,mccown,,,,,,,,,"22/May/19 2:46 AM;esplinr;Notes from our discussions on this issue:
{quote}
Contemporary versions of rustc are supposed to use bitcode by default.  I also found that the nightly builds enable the passing of parameters through to rustc / cargo / Xcode.  This command is supposed to enable bitcode using that method:

RUSTFLAGS=""-Z embed-bitcode"" cargo lipo --release

However, the error persists.

I did find that on macOS 10.15.5 that apple is using ""Apple LLVM version 10.0.1 (clang-1001.0.46.4)” while rust is using ""LLVM version: 8.0”
{quote}

{quote}
1) To test bitcode implementations, I have built libindy.a from scratch and also built my own tiny rust lib and iOS test app.  I get the same results from either.

2) I’m reading that bitcode is enabled by default in recent rust versions.  The RUSTFLAGS can also be used to enable bitcode explicitly, but only in the rust nightly builds.  I’ve tried both.

3) building libindy.a (or even my small rust test lib) shows that there are indeed bitcode sections when viewed with otool.

4) importing the ‘bitcode enabled’ lib into Xcode for an iOS app (with the app project's 'enable bitcode' set to ‘yes') causes an ld error stating that the library “does not contain bitcode”.  If the otool report (step 3) is correct, then my guess is that something between the rust LLVM and Xcode’s Apple LLVM is incompatible.  If I set “enable bitcode” within the Xcode project to “no”, then everything builds successfully.  LLVM incompatibilities regarding bitcode (incl how to stay compatible with Apple) have been discussed at length in the rust forums over the last few years.

5) building the bitcode enabled lib is done with “cargo lipo”, I went to the author’s site (https://github.com/TimNN/cargo-lipo) and his instructions explicitly state ""In your ""Build Settings"" change ""Enable Bitcode"" to No.”  I have read other comments from him where he describes bitcode a ‘experimental’ and tells people to disable it. I sent him a message to see if he has any recommendations, but have not heard back.

6) I have also read where some have gotten bitcode to work between rust and iOS.  However, I haven’t found source code that I can recompile and get a successful build.  My guess is that the toolchain versions that I have (most current) and those that they used are different, but I don’t know what the versions are.

7) Apple has different completeness standards for bitcode in iOS apps and Apple Watch apps, which said to be more strict.  That’s irrelevant for this task, but I found it noteworthy.
{quote};;;","22/May/19 2:47 AM;esplinr;A open rust issue that is for adding bitcode support to rust – [https://github.com/rust-lang/rust/issues/35968]

{quote}
I’ve attached the rust lib & iOS app that I’m using to test the bitcode issue.  It originated from a Mozilla article, btw.  The reason that I’m using this to test the bitcode issue is that it’s smaller than Libindy, which is many more moving parts.
 
When you open the .zip, the main dir “rust-ios-example” will contain 2 dirs “rust” and “hello-rust”.  “rust"" contains the rust lib source, which implements 2 functions.  The 1st receives a string, prepends “Hello ”, and returns it.  The 2nd frees the string memory.  The library can be compelled by running the install script in the main dir (the script requires all the standard rust / iOS tools).  In addition to compiling ‘librust.a’, the script also copies the lib into the iOS project.  For rust, I am using ver 1.34.1 with LLVM version: 8.0.
 
After building the librust.a  go into “hello-rust” and open hello-rust.xcodeproj.  I have set “enable bitcode” to “no”, so you can see the app run in either the simulator or on a device.  Once in the running app, type a name in the 1st field and then press “Call Rust Library”.  This will pass your entered string down to the rust library and display the returned result in the “Greeting” field.
 
Now, go in to Xcode and in to “Build Settings” and set “Enable Bitcode” to “Yes”.  Since lipo removes bitcode references in simulator targets, running in a simulator should just run as before.  The real test will be on a physical device.
 
Now, change the deployment target to a physical iOS device (I’m using my iPhone X) and execute.  Since bitcode is still on, but is apparently incompatible with Xcode tools, you should see the following error:
 
ld: '/Users/mccown/Development/rust/test/rust-ios-example/hello-rust/libs/librust.a(rust.1almsbpsxryokvrf.rcgu.o)' does not contain bitcode. You must rebuild it with bitcode enabled (Xcode setting ENABLE_BITCODE), obtain an updated library from the vendor, or disable bitcode for this target. for architecture arm64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
 
What that’s telling us is that Xcode doesn’t think that librust.a has bitcode enabled.  However, if you go to the terminal and into “rust-ios-example/hello-rust/libs”, you can verify that there is bitcode in the rustlib.a by typing:
 
otool -lv librust.a  | grep bitcode
 
This will show that the bitcode sections are present in the library.  In the terminal, type 'clang —version —verbose’, which should show something like:
 
Apple LLVM version 10.0.1 (clang-1001.0.46.4)
Target: x86_64-apple-darwin18.6.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
 
Since rustc is using ""LLVM 8.0"" and Xcode is using “Apple LLVM version 10.0.1”, I’m thinking that there must be a version incompatibility.  What I’m reading in various forums (incl the link you sent) is that Apple’s LLVM is a version or two behind rust’s (despite the numbering) and that the bitcode additions are not compatible and/or are ignored.
 
What this all means is that libindy.a is compiled by rustc with bitcode enabled, because rustc now does that by default.  However, due to the differences with Xcode and/or Apple LLVM, the importing iOS app cannot have the “Enable Bitcode” option set to “Yes”.  When that option is set to “No”, then all the bitcode elements in libindy.a are ignored and the iOS app builds machine code just fine — only without bitcode.
 
Apple currently allows apps to be submitted to the App Store with or without bitcode, so this isn’t a problem unless the apps are big and approach apple’s size limit. 
 

{quote};;;","22/May/19 2:48 AM;esplinr;Xcode to llvm version mappings: https://en.wikipedia.org/wiki/Xcode#Toolchain_versions.
Xcode 8.3  --> swift 3.1 --> llvm 3.9.0
Xcode 9.0  --> swift 4.0 --> llvm 4.0.0
Xcode 9.3  --> swift 4.1 --> llvm 5.0.2
Xcode 10.0 --> swift 4.2 --> llvm 6.0.1
Xcode 10.1 --> swift 4.2.1 --> llvm 6.0.1
Xcode 10.2 --> swift 5.0 --> llvm 7.0.0
Xcode 10.2.1 --> swift 5.0.1 --> llvm 7.0.0

I have not tried this out myself but here is the route I would pursue to get the rust-ios-example working with bitcode / app thinning enabled. Some of these ideas/thoughts are taken from here: https://github.com/rust-lang/rust/issues/35968.

# Build the rust-lang source yourself using Xcode 10.1 (we use xcode 10.1 because we are not yet ready for swift 5.0 on xcode 10.2)
** The way to build the rust-lang source yourself is to follow a similar process as the Dockerfile here -- https://github.com/rust-lang/rust/blob/706e67b0a0143d651eb03f2fa2c30645899e81ff/src/ci/docker/x86_64-gnu-llvm-6.0/Dockerfile
** Use steps from the given Dockerfile but do steps on a Mac using Xcode 10.1 and compile the rust-lang source. Ideas/instructions here may help -- https://github.com/rust-lang/rust/tree/706e67b0a0143d651eb03f2fa2c30645899e81ff/src/ci/docker
# Once you have rust-lang source code built using Xcode 10.1 then use the resultant build artifacts to build the rust code from the rust-ios-example into a library (librust.a) that has bitcode enabled.
# Use the resultant librust.a to build the hellorust swift mobile app with bitcode enabled -- smile big if/when it works.;;;","14/Jun/19 12:58 AM;mccown;I did some in-depth research on why Xcode doesn't recognize bitcode being present in libraries created by the rust compiler and converted to iOS Universal format by cargo-lipo. There are a lot of recommendations in technical chat forums, but none of those have worked. Below are a number of things that I learned that might be helpful for future researchers:

1) Indy is complex, so I used a very simple rust library and associated iOS app to demonstrate the problem (see rust-ios-example.zip above). This made compile times quicker and eliminated most other potential incompatibility sources.

2) ""Is bitcode present in the .a library?"" To test this, I used ""otool"", which is a great way to see if bitcode sections are present in a library. This is done by ""otool -lv librust.a | grep LLVM"" or also by ""otool -lv librust.a | grep bitcode"". From this, I observed that bitcode sections appear to be present in the library – even though they are not recognized by Xcode.

3) ""llvm-bcanalyzer"". Another great tool for checking on bitcode is llvm-bcanalyzer, which is run on the original bitcode output files.

4) ""Enable bitcode"". It was recommended to turn enable bitcode at the rust level using compiler flags that would pass through cargo to rustc using this command ""RUSTFLAGS=""-Z embed-bitcode"" cargo lipo --release"". Firstly, the ""-Z"" option only works with rust nightly builds. It had no effect. Reading some of the rust github comments, it looks like bitcode was set as the default compile option in ~2018 and appears to be the case at present.

5) ""Use an older LLVM version"". It has been noted that the current LLVM version is not the same used by Apple. This appears to be the case, because Apple is currently using ""Apple LLVM version 10.0.1 (clang-1001.0.46.4)” while rust is using ""LLVM version: 8.0"". I tried recompiling the test library from rust using 3 previous LLVM versions, but none of those were recognized by Xcode as having bitcode.

6) ""Rebuild rust"". Some recommendations referred to rebuilding the rustc compiler. I did this using both stable and nightly code, but it had no effect.

7) ""Cargo-lipo"". I walked through the cargo-lipo code to see if that was creating an issue. I played with adding various lipo options, but Xcode did not recognize any change.

At this point, I tried everything that I could thought would help and none of this resulted in a bitcode-enabled library that was acceptable to Xcode.

Upon further rust forum reading, I came across an issue where Mozilla Firefox developers found that clang is apparently not tagging the bitcode sections correctly (in a library created from rust code). They found a workaround that seemed to work, but it wasn't a good generalized solution. Here is a link to that discussion from Apr 2019, which is worth monitoring:

rustc LTO bitcode incompatible with clang LTO bitcode files by default on OS X #60235
[https://github.com/rust-lang/rust/issues/60235] 

At this point, there does not appear to be a fix that the Indy community can create independently. I think that the real fix is for the rust, LLVM, and Apple Xcode developers to achieve a consensus on how to standardize the bitcode tagging.

In the meantime, Apple has increased the allowable iOS app size by 33%, so that will ease the need for bitcode by providers of large apps. If I come across any new / good solutions, I will post them in the future.;;;","18/Jun/19 5:03 AM;esplinr;Thank you for reporting on your research [~mccown]. I expect it will be useful to others. I'll close this issue as ""deferred"".;;;",,,,,,,
Rename TRUST_ANCHOR to ENDORSER,IS-1262,39890,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,ashcherbakov,ashcherbakov,17/May/19 4:57 PM,04/Jun/19 12:58 AM,28/Oct/23 2:49 AM,04/Jun/19 12:58 AM,,,,,,,,1.9.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00p4s:",,,,Unset,Unset,Ev-SDK 19.11,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ashcherbakov,sergey.minaev,,,,,,,,"28/May/19 1:57 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1642;;;","28/May/19 1:57 PM;Artemkaaas;Build version: master-1114;;;","04/Jun/19 12:58 AM;sergey.minaev;Integration tests passed
 CLI behavior for NYM transaction manually tested;;;",,,,,,,,,
Can't make REVOC REG state proof reading if timestamp is older than REVOC REG DEF,IS-1263,39898,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,VladimirWork,VladimirWork,17/May/19 10:57 PM,03/Jun/19 11:17 PM,28/Oct/23 2:49 AM,03/Jun/19 11:17 PM,,,,,,,,1.9.0,,,,,,,0,,,,"Build Info:
libindy 1.8.3~1097

Steps to Reproduce:
1. Get current time timestamp.
2. Write REVOC REG DEF and REVOC REG ENTRY.
3. Try to read REVOC REG using state proof (from 1 alive node) and timestamp from Step 1.

Actual Results:
Consensus is impossible error. If we use timestamp that is newer than REVOC REG DEF than we read state proof successfully.

Expected Results:
We should make successfull state proof reading in both cases.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx2zr",,,,Unset,Unset,Ev-SDK 19.11,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,VladimirWork,,,,,,,,"21/May/19 11:01 PM;sergey.minaev;Most probably it's a problem for all request to the history, so it may affect getting TAA by timestamp. This is a reason to increase priority of this ticket.;;;","22/May/19 9:33 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1643;;;","28/May/19 1:59 PM;Artemkaaas;Build version: master-1105;;;","03/Jun/19 11:17 PM;sergey.minaev;Verification steps:
1) write txns to the ledger
2) try to read entity at the moment before writing
3) state proof received and verified successfully;;;",,,,,,,,
Can't make REVOC REG DELTA state proof reading with both FROM and TO timestamps,IS-1264,39899,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,VladimirWork,VladimirWork,17/May/19 10:58 PM,04/Jun/19 5:22 PM,28/Oct/23 2:49 AM,04/Jun/19 1:25 AM,,,,,,,,1.9.0,,,,,,,0,,,,"Build Info:
libindy 1.8.3~1097

Steps to Reproduce:
1. Get current time timestamp.
2. Write REVOC REG DEF and REVOC REG ENTRY.
3. Get another current time timestamp.
4. Try to read REVOC REG DELTA with both timestamps as FROM and TO parameters.

Actual Results:
Consensus is impossible error. If we use only Step 3 timestamp as TO parameter than we read state proof successfully.

Expected Results:
We should make successfull state proof reading in both cases.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1283,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00oa6:",,,,Unset,Unset,Ev-SDK 19.11,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,VladimirWork,,,,,,,,"28/May/19 1:55 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1647;;;","04/Jun/19 1:25 AM;sergey.minaev;Most of cases are covered now. The only one failed scenario will be referenced in separate ticket IS-1283;;;",,,,,,,,,,
Support Set AuthRules for multiply entries,IS-1265,39922,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,20/May/19 10:48 PM,07/Jun/19 7:19 PM,28/Oct/23 2:49 AM,07/Jun/19 7:19 PM,,,,,,,,1.10.0,,,,,,,0,,,,,,,,,,,,,,,,INDY-2087,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n96:",,,,Unset,Unset,Ev-SDK 19.10,Ev-SDK 19.11,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"22/May/19 4:02 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1640;;;","07/Jun/19 7:18 PM;sergey.minaev;and changes for CLI in https://github.com/hyperledger/indy-sdk/pull/1659;;;","07/Jun/19 7:19 PM;sergey.minaev;build 1.9.0 master 1125+

verified on master 1130 via CLI:
1) check current permissions
2) allow editing schema and forbid adding new
3) check update policy behavior;;;",,,,,,,,,
error message for unexpected length of did returns base58 converted length. ,IS-1266,40034,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,burdettadam,burdettadam,22/May/19 2:47 AM,19/Aug/19 7:19 PM,28/Oct/23 2:49 AM,11/Jul/19 10:10 PM,1.8.3,,,,,,,1.11.0,,,,,,,0,TShirt_S,,,"# _Environment_: 
 ## Ubuntu 16.04
 ## indy-cli built from tag v1.8.3 
 # _Steps to Reproduce_: open indy-cli, open wallet, and try to create a did of incorrect length.
 for example. 
 *did new did=LibindyDid1*
 # _Expected Behavior_: An error about the unexpected length of the provided did.
 ## for example:
 ### Error: Invalid structure Caused by: Trying to use did with unexpected len: *11*

 # _Observed Behavior_: An error about the unexpected length of the base58 decoded did. 
 ## for example:
 ### Error: Invalid structure Caused by: Trying to use did with unexpected len: *8*
 # _Notes_: the offending code is here, [https://github.com/hyperledger/indy-sdk/blob/v1.8.3/libindy/src/services/crypto/mod.rs#L412]. It would be nice to return the expected length as well, not just the unexpected length.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00tdw:",,,,Unset,Unset,Indy SDK 19.14,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,burdettadam,VladimirWork,,,,,,,,"09/Jul/19 3:32 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1707;;;","11/Jul/19 8:15 PM;VladimirWork;Build Info:
indy-cli 1.10.0~1167

Steps to Validate:
1. Open wallet and try to create `did new did=LibindyDid1`.

Actual Results:
{noformat}
wallet(docker):indy> did new did=LibindyDid1
Error: Invalid structure
  Caused by: Trying to use DID with unexpected length: 8. The 16- or 32-byte number upon which a DID is based should be 22/23 or 44/45 bytes when encoded as base58.
{noformat}
;;;",,,,,,,,,,
indy-cli allows accidental NYM verkey update.,IS-1267,40036,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,burdettadam,burdettadam,22/May/19 3:37 AM,09/Aug/19 6:23 AM,28/Oct/23 2:49 AM,24/Jul/19 9:36 PM,,,,,,,,1.11.0,,,,,,,0,TShirt_S,,,"# _Environment_: 
 ## Ubuntu 16.04
 ## indy-cli v1.8.3
 # _Steps to Reproduce_: After having indy-cli open, wallet open, using a did that is anchored as a nym, and connected to the pool with the nym. Issue a NYM command to update the current did being used with a new verkey. for example
*ledger nym did=pVBbBKqVkQDhuVm4r9qNqp verkey=~JapuLZRnHoWL8hz8cVwyYA role=*
 # _Expected Behavior_: warning or error, describing that the anchored did will have a verkey that the current wallet does not own. 
 # _Observed Behavior_: nym request has been sent to ledger. successfully changing the nym verkey to a verkey the wallet does not own, rendering that nym useless to the owner.  
 # _Notes_: this allows a steward or trustee an easy copy paste mistake when anchoring new dids, that can render their did useless to the ledger. ",,,,,,,,,,,,,,,,,,,,,,,,IS-1236,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upo:",,,,Unset,Unset,Ev-SDK 19.11,Indy SDK 19.15,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,burdettadam,esplinr,lbendixsen,sergey.minaev,VladimirWork,,,,,"24/May/19 10:26 PM;sergey.minaev;[~burdettadam] I think expected behavior in the description is incorrect.

Please take into account the next scenario:
*As a TRUST_ANCHOR (ENDORSER) I should be able to publish a DID with VerKey which is not in my wallet to introduce new user in the ledger without access to his private key*
[~esplinr] please correct me if I miss some requirements update for this topic;;;","25/May/19 7:23 AM;lbendixsen;I don't think the scenario [~sergey.minaev] mentioned relates to the issue presented in this ticket. Here is what happened to me:

With a TRUSTEE DID I needed to create a new TRUSTEE on the BuilderNet.  I opened my CLI, pool, and wallet.  I then did the following(this is an actual excerpt from when the error occurred):

pool(buildernet):wallet(testnet_wallet):indy> did list

+------------------------+-------------------------+----------+

| *Did*                                                 | *Verkey*                                        | *Metadata* |

 

+------------------------+-------------------------+----------+

| 5M3i1PbpvEQmTk25EmAY6N | ~7iwFwParUgTffA22Q5Tgvg | -        |

+------------------------+-------------------------+----------+

pool(buildernet):wallet(testnet_wallet):indy> did use 5M3i1PbpvEQmTk25EmAY6N

*Did ""5M3i1PbpvEQmTk25EmAY6N"" has been set as active*

pool(buildernet):wallet(testnet_wallet):did(5M3...Y6N):indy> ledger nym did=5M3i1PbpvEQmTk25EmAY6N verkey=~JapuLZRnHoWL8hz8cVwYya role=TRUSTEE

*Transaction has been rejected: client request invalid: InsufficientCorrectSignatures(0, 1)*

 

Despite the error that was returned, my Trustee DID has not worked since that command.  The ledger updated my trustee did with the new verkey:

pool(buildernet):wallet(testnet_wallet):indy> ledger get-nym did=5M3i1PbpvEQmTk25EmAY6N

*Following NYM has been received.*

 

*Data:*

+------------------------+-------------------------+---------+

| *Dest *                                            | *Verkey*                                         | *Role*    |

+------------------------+-------------------------+---------+

| 5M3i1PbpvEQmTk25EmAY6N | ~JapuLZRnHoWL8hz8cVwYya | TRUSTEE |

+------------------------+-------------------------+---------+

 

But my wallet still thinks it has the old verkey:

pool(buildernet):wallet(testnet_wallet):indy> did list

+------------------------+-------------------------+----------+

| *Did*                                                 | *Verkey*                                        | *Metadata* |

 

| 5M3i1PbpvEQmTk25EmAY6N | ~7iwFwParUgTffA22Q5Tgvg | -        |

+------------------------+-------------------------+----------+

 

Since the verkey that I accidentally updated on the ledger does not exist in my wallet, the command I sent should not have updated the ledger with that verkey. My TRUSTEE DID is now unusable. ;;;","28/May/19 7:58 PM;sergey.minaev;[~lbendixsen] the use case in my comment above is tied to the ticket as it results in the requirement: CLI must allow (in general) to send a NYM request with did/verkey pair regardless their present in the wallet. So we must not introduce check like ""nym should not be sent if there is no particular did in the wallet"".

[~burdettadam] could you be more explicit in ""expected behavior"": what do you mean by ""anchored""? present in current wallet? present in any wallet? active did? smth else?

I can see some ""improvements"" here, but some of them produce incorrect restrinctions, others will allow to user to make very similar mistake;;;","29/May/19 2:35 AM;burdettadam;I would like to point out another bug with Lynn's example. 
 *pool(buildernet):wallet(testnet_wallet):did(5M3...Y6N):indy> ledger nym did=5M3i1PbpvEQmTk25EmAY6N verkey=~JapuLZRnHoWL8hz8cVwYya role=TRUSTEE* 
 because the verkey is used with a ~ at the beginning, the seed used to create the original ""did"" will not generate the correct keys to gain back access to the nym.

*Expected behavior:* I believe the main purpose of the cli is for trustee's and stewards to maintain the permissions of the ledger. With that purpose in mind, I think the cli should check the ""did"" being used(did use.. or the did whos signature will be in the signature field of the txn) is not the same as the did in the nym command( did= ...) if there is a verkey listed (verkey=... ) that is not the same as the current verkey for the did in use, the cli should warn of accidental nym verkey change (a verkey that you don't have in your wallet(loss of nym ownership)).

I believe there is a command in the cli that is used to rotate a nym's keys. when the nym command(ledger nym) is used with an active did(did use ""did"") to update the nym's(the same active did in the wallet and on the ledger) verkey, an incomplete key rotation is initialized and never finished. with the functionality of rotate key command, *I believe the manual attempt to rotate a nym's keys with nym command should be discouraged or disabled*. If there is not a rotate nym keys command I would change this issue to an enhancement request. 

Sergey Minaev, yes, of course, I will explain my vocabulary: 
 * _""anchored""?_ Authorized did on the ledger (nym with a role that permits write actions). For example, when a cli is connected to a pool you can issue this comment,
 *ledger get-nym did=...* , and among the result will be a verkey for the nym(or anchored did).
 * _present in (the) current wallet?_ Reference to what secrets(seckey, link-key/master-key) and non-secrets(verkey..) are in my current (that was open with *wallet open* command, also indicated in the cli prompt wallet(ted)). The ability to show proof of ownership of public crypto primitive(did or cred_def or ...). For example. Did not present in the current wallet.  
 * _present in any wallet?_ Any wallet that is not your current wallet, that may exist in or outside your indy-sdk database. 
 * active did? The ""did"" that is used to sign the txn, activated with *did use* command. it is indicated in the cli prompt ""did(..)"". 
 *   _smth else?_ Not sure what this one is, Something else? ;;;","30/May/19 5:11 AM;esplinr;Talking with Lynn, the core of the problem is that the verkey on the ledger changed without the associated change in the wallet. The result is a non-functional Trustee.

The ""ledger nym"" command should not be able to rotate verkeys, rather the ""did rotate-key"" command should always be used.

Are there use cases where anyone would want to change the verkey with the ledger-nym command?;;;","30/May/19 7:56 PM;sergey.minaev;""ledger nym"" command is a mirror for NYM transaction. I don't like the idea to change this approach and make this command something different against others commands from ledger module.

Draft idea (not sure is it good in general):
 May be it's better to have separate command which will not be able to rotate keys and allow only new nym publishing?;;;","07/Jun/19 10:24 PM;esplinr;Use case:

It might be necessary for a trustee (or group of trustees) to rotate the nym of a third party in order to disable their nym.

Notes:
 * The CLI is designed for maximum flexibility in order to meet a wide range of use cases. Removing a capability from the CLI could close off use cases we haven't yet considered for a tool that is only now receiving widespread use. The number of use cases will actually increase as tools like this move from Indy to Aries.
 * Traditionally, it has not been designed to ensure the safety of the user. We should rethink the CLI design if that is a requirement. There are a variety of potentially dangerous commands that should be reconsidered.
 * The use case listed above could also be met with a custom transaction or a separate script, as the API would continue to allow this behavior.;;;","21/Jun/19 4:26 AM;esplinr;Discussing this issue with [~mgbailey], he agrees that there might be some reasons to want to rotate the verkey only the ledger, but he also agrees there should be a clear warning that this can be a dangerous action. But we need to ensure that such prompts don't break batch mode scripts.;;;","23/Jul/19 4:08 PM;Artemkaaas;I added an additional validation for `ledger nym` command:  CLI loads all DIDs stored in the wallet and then asks for user confirmation in case if
`verkey` received from the wallet doesn't match to `verkey` used within the CLI command.

Here is PR: https://github.com/hyperledger/indy-sdk/pull/1712/files
Build version: master-1195;;;","24/Jul/19 9:36 PM;VladimirWork;Build Info:
indy-cli 1.10.0~1198

Steps to Validate:
1. Try to change verkey for did that exists in wallet using ledger nym command.

Actual Results:
There is a warning:
{noformat}
There is the same `DID` stored in the wallet but with different Verkey: ""~6Rx3mNmxysETN7b5izeN3C""
Do you really want to change Verkey on the ledger? (y/n)
{noformat}
Did rotate command works the same way as before this fix.

;;;",,
Indy CLI about has incorrect copyright message,IS-1268,40051,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,22/May/19 7:25 AM,11/Jun/19 10:57 PM,28/Oct/23 2:49 AM,,1.8.3,,,,,,,,,cli,,,,,0,EV-Triaged,help-wanted,,"The copyright message in the CLI ""About"" is still 2017.

As of 2019, the Sovrin Foundation doesn't own all the copyrights (the system has had other contributors), so we should just remove the message.

!image-2019-05-21-16-25-17-965.png!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/May/19 7:25 AM;esplinr;image-2019-05-21-16-25-17-965.png;https://jira.hyperledger.org/secure/attachment/17248/image-2019-05-21-16-25-17-965.png",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00oog:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Postgres Storage - allow configuration of connection pool parameters,IS-1269,40068,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ianco,ianco,ianco,23/May/19 1:20 AM,10/Oct/19 9:24 PM,28/Oct/23 2:49 AM,10/Sep/19 1:30 AM,,,,,,,,1.10.0,,wallet,,,,,0,,,,"Add parameters to storage config to allow configuration of connection pool
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1404,,,No,,Unset,No,,,"1|i002yt:k",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ianco,,,,,,,,,,"10/Sep/19 1:30 AM;ianco;Fixed and committed in May/2019;;;",,,,,,,,,,,
Cargo clippy warnings Do it the rust way,IS-1270,40075,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,,MikeLodder,MikeLodder,23/May/19 3:45 AM,08/Oct/19 11:53 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"This is one of 5 cargo clippy tickets to clean up the warning generated from cargo clippy in Indy-SDK.

This ticket represents any warnings that are of the form:

warning: `if _ \{ .. } else \{ .. }` is an expression
 --> src/utils/environment.rs:9:5
 |
9 | / let mut indy_client_dir = "".indy_client"";
10 | | if cfg!(target_os = ""ios"") {
11 | | indy_client_dir = ""Documents/.indy_client"";
12 | | }
 | |_____^ help: it is more idiomatic to write: `let <mut> indy_client_dir = if cfg!(target_os = ""ios"") \{ ""Documents/.indy_client"" } else \{ "".indy_client"" };`
 |
 = note: #[warn(clippy::useless_let_if_seq)] on by default
 = note: you might not need `mut` at all
 = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_let_if_seq

 Where the warnings tell of a better more rusty way to do it.

Another example is

warning: use of `unwrap_or` followed by a function call
 --> src/utils/environment.rs:8:37
 |
8 | let mut path = dirs::home_dir().unwrap_or(PathBuf::from(""/home/indy""));
 | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| PathBuf::from(""/home/indy""))`
 |
 = note: #[warn(clippy::or_fun_call)] on by default
 = help: for further information visit [https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call]

 

When all warnings of this type are closed then this ticket can be closed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1401,,,No,,Unset,No,,,"1|i00otw:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),MikeLodder,,,,,,,,,,,,,,,,,,,,,
Cargo Clippy warnings too complex of types,IS-1271,40076,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,,MikeLodder,MikeLodder,23/May/19 3:48 AM,08/Oct/19 11:53 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"This is one of 5 cargo clippy tickets to clean up the warning generated from cargo clippy in Indy-SDK.

This ticket represents any warnings that are of the form:

warning: large size difference between variants
 --> src/commands/anoncreds/issuer.rs:77:5
 |
77 | / CreateAndStoreCredentialDefinitionContinue(
78 | | WalletHandle,
79 | | SchemaV1, // credentials
80 | | String,
... |
86 | | CredentialKeyCorrectnessProof)>,
87 | | i32),
 | |____________^
 |
 = note: #[warn(clippy::large_enum_variant)] on by default
help: consider boxing the large fields to reduce the total size of the enum
 --> src/commands/anoncreds/issuer.rs:77:5
 |
77 | / CreateAndStoreCredentialDefinitionContinue(
78 | | WalletHandle,
79 | | SchemaV1, // credentials
80 | | String,
... |
86 | | CredentialKeyCorrectnessProof)>,
87 | | i32),
 | |____________^
 = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant

warning: very complex type used. Consider factoring parts into `type` definitions
 --> src/commands/anoncreds/issuer.rs:63:9
 |
63 | Box<Fn(IndyResult<(String, String)>) + Send>),
 | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 |
 = note: #[warn(clippy::type_complexity)] on by default
 = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

warning: very complex type used. Consider factoring parts into `type` definitions
 --> src/commands/anoncreds/issuer.rs:71:9
 |
71 | Box<Fn(IndyResult<(String, String)>) + Send>),
 | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 |
 = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

warning: very complex type used. Consider factoring parts into `type` definitions
 --> src/commands/anoncreds/issuer.rs:74:32
 |
74 | / Box<Fn(IndyResult<(CredentialDefinitionData,
75 | | CredentialPrivateKey,
76 | | CredentialKeyCorrectnessProof)>) + Send>),
 | |__________________________________________________________________________________________^
 |
 = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

warning: very complex type used. Consider factoring parts into `type` definitions
 --> src/commands/anoncreds/issuer.rs:96:9
 |
96 | Box<Fn(IndyResult<(String, String, String)>) + Send>),
 | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 |
 = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

warning: very complex type used. Consider factoring parts into `type` definitions
 --> src/commands/anoncreds/issuer.rs:108:9
 |
108 | Box<Fn(IndyResult<(String, Option<String>, Option<String>)>) + Send>),
 | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 |
 = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

warning: very complex type used. Consider factoring parts into `type` definitions
 --> src/commands/anoncreds/issuer.rs:133:24
 |
133 | pending_callbacks: RefCell<HashMap<i32, Box<Fn(IndyResult<(String, String)>) + Send>>>,
 | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 |
 = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

warning: very complex type used. Consider factoring parts into `type` definitions
 --> src/commands/anoncreds/issuer.rs:244:51
 |
244 | cb: Box<Fn(IndyResult<(String, String)>) + Send>) {
 | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 |
 = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

 

 Where the warnings tell of a to deal with complex types

When all warnings of this type are closed then this ticket can be closed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1401,,,No,,Unset,No,,,"1|i00ou4:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ignisvulpis,MikeLodder,,,,,,,,,"20/Aug/19 4:36 PM;ignisvulpis;I addressed one of the complex type warnings. The type`Box<dyn Fn(IndyResult<(String, String)>) + Send>)` is now named BoxedCallbackStringStringSend.

This is part of this PR [https://github.com/hyperledger/indy-sdk/pull/1827]

I did not address the other warnings because this clippy issue is about readability which is not really an issue in general.

We would have to define a type for each callback, that is for every combination of results. This would reduce readability, I think.

We could address the  warning be adding `#[warn(clippy::type_complexity)]`

[https://github.com/rust-lang/rust-clippy#allowingdenying-lints]

 ;;;",,,,,,,,,,,
Cargo clippy warnings too many arguments,IS-1272,40077,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,,MikeLodder,MikeLodder,23/May/19 3:51 AM,08/Oct/19 11:53 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"This is one of 5 cargo clippy tickets to clean up the warning generated from cargo clippy in Indy-SDK.

This ticket represents any warnings that are of the form:

warning: this function has too many arguments (8/7)
--> src/commands/anoncreds/issuer.rs:380:5
|
380 | / fn create_and_store_revocation_registry(&self,
381 | | wallet_handle: WalletHandle,
382 | | issuer_did: &str,
383 | | type_: Option<&str>,
... |
466 | | Ok((rev_reg_id, revoc_reg_def_json, revoc_reg_json))
467 | | }
| |_____^
|
= help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

 

warning: this function has too many arguments (12/7)
--> src/commands/ledger.rs:775:5
|
775 | / fn build_pool_upgrade_request(&self,
776 | | submitter_did: &str,
777 | | name: &str,
778 | | version: &str,
... |
798 | | Ok(res)
799 | | }
| |_____^
|
= help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: this function has too many arguments (8/7)
--> src/commands/ledger.rs:924:5
|
924 | / fn build_auth_rule_request(&self,
925 | | submitter_did: &str,
926 | | txn_type: &str,
927 | | action: &str,
... |
941 | | Ok(res)
942 | | }
| |_____^
|
= help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

 

Where the warnings tell of a to deal with too many arguments.

When all warnings of this type are closed then this ticket can be closed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1401,,,No,,Unset,No,,,"1|i00ouc:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ignisvulpis,MikeLodder,,,,,,,,,"20/Aug/19 4:44 PM;ignisvulpis;There is no good general solution. We could stuff some or all parameters into structs but that does not really address readability.

There is a ton of boilerplate in getting from the api level through command-level and service-level to the method that actually does something. Maybe there could be macros that define the criticized function.
Or we add `#[allow(clippy::too_many_arguments)]`;;;",,,,,,,,,,,
Cargo clippy warning cyclomatic complexity,IS-1273,40078,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,,MikeLodder,MikeLodder,23/May/19 3:53 AM,08/Oct/19 11:53 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"This is one of 5 cargo clippy tickets to clean up the warning generated from cargo clippy in Indy-SDK.

This ticket represents any warnings that are of the form:

warning: the function has a cyclomatic complexity of 30
--> src/commands/payments.rs:149:5
|
149 | / pub fn execute(&self, command: PaymentsCommand) {
150 | | match command {
151 | | PaymentsCommand::RegisterMethod(type_, method_cbs, cb) => {
152 | | info!(target: ""payments_command_executor"", ""RegisterMethod command received"");
... |
263 | | }
264 | | }
| |_____^
|
= help: you could split it up into multiple smaller functions
= help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cyclomatic_complexity

 

warning: the function has a cyclomatic complexity of 45
--> src/services/pool/state_proof/mod.rs:127:1
|
127 | / fn _parse_reply_for_builtin_sp(json_msg: &SJsonValue, type_: &str) -> Option<Vec<ParsedSP>> {
128 | | trace!(""TransactionHandler::parse_reply_for_builtin_sp: >>> json_msg: \{:?}"", json_msg);
129 | |
130 | | assert!(REQUESTS_FOR_STATE_PROOFS.contains(&type_));
... |
320 | | }])
321 | | }
| |_^
|
= help: you could split it up into multiple smaller functions
= help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cyclomatic_complexity

 

Where the warnings tell of a to deal with cyclomatic complexity

When all warnings of this type are closed then this ticket can be closed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1401,,,No,,Unset,No,,,"1|i00ouk:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ignisvulpis,MikeLodder,,,,,,,,,"20/Aug/19 4:56 PM;ignisvulpis;I think this clippy warning is now renamed

[https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity]

I think there is not much we can do for the `execute` methods in commands like 
 [https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/commands/ledger.rs#L291]

Readability is not really a problem, I think. The structure of the execute methods is quite simple.

Another topic is LLVM optimization. Not sure how the compiler translates a big 'switch statement' into code and what we can do.

The number of items in the match-statement is the number of methods for one command executor. More executors?

 

or `#[allow(clippy::cognitive_complexity)]`

 

 ;;;",,,,,,,,,,,
Cargo clippy errors ,IS-1274,40079,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,ignisvulpis,MikeLodder,MikeLodder,23/May/19 3:55 AM,08/Oct/19 11:53 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"This is one of 5 cargo clippy tickets to clean up the errors generated from cargo clippy in Indy-SDK.

This ticket represents any errors that are of the form:

error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type
--> src/services/wallet/storage/default/mod.rs:306:53
|
306 | let type_ = if options.retrieve_type \{ Some(type_.clone()) } else \{ None };
| ^^^^^^^^^^^^^
|
= note: #[deny(clippy::clone_double_ref)] on by default
= help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_double_ref
help: try dereferencing it
|
306 | let type_ = if options.retrieve_type \{ Some(&(*type_).clone()) } else \{ None };
| ^^^^^^^^^^^^^^^^^
help: or try being explicit about what type to clone
|
306 | let type_ = if options.retrieve_type \{ Some(&[u8]::clone(type_)) } else \{ None };
| ^^^^^^^^^^^^^^^^^^^

 

When all errors are closed then this ticket can be closed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1401,,,No,,Unset,No,,,"1|i00ous:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ignisvulpis,MikeLodder,,,,,,,,,"20/Aug/19 5:52 PM;ignisvulpis;[https://github.com/hyperledger/indy-sdk/pull/1838] fixes this;;;",,,,,,,,,,,
Enable fees determining based on GET_AUTH_RULES in VCX,IS-1275,40126,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,24/May/19 9:57 PM,08/Jul/19 9:10 PM,28/Oct/23 2:49 AM,08/Jul/19 6:16 PM,,,,,,,,1.10.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1289,,IS-1254,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00r83:",,,,Unset,Unset,EV-SDK 19.13,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"27/Jun/19 8:34 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1692;;;","28/Jun/19 3:51 PM;Artemkaaas;Build version: master-1157;;;","08/Jul/19 6:16 PM;sergey.minaev;released in stable as well;;;",,,,,,,,,
Indy-cli payment example,IS-1276,40154,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid: Works as Expected,burdettadam,burdettadam,burdettadam,25/May/19 7:31 AM,19/Aug/19 7:20 PM,28/Oct/23 2:49 AM,11/Jul/19 10:31 PM,1.8.3,,,,,,,1.11.0,,,,,,,0,TShirt_S,,,"# _Environment_: cli version 1.8.3
 ## Ubuntu 16.04, indy-cli build from GitHub tag v1.8.3.
 # _Steps to Reproduce_: Open indy-cli and run: 
 ## *ledger payment help*
 # _Expected Behavior_: An example of a correct payment command with payment sources as inputs and payment addresses as outputs.

 ## *Example*: ledger payment inputs=txo:null:3x... outputs=(pay:null:27...,100)
 # _Observed Behavior_: An incorrect example of payment command with payment address as inputs and outputs.
 ## *Example:* ledger payment inputs=pay:null:1111... ouputs=(pay:null:FY...,100)
 # _Notes_: This example misleads new users of the payment command. More examples showing the sum of inputs equal the sum of outputs as well as an example showing when the input source address is needed to be listed with the outputs and its total would be very helpful. This link helped me [https://github.com/sovrin-foundation/token-plugin/tree/master/sovtoken/doc/Interface#xfer_public-transaction-request.|https://github.com/sovrin-foundation/token-plugin/tree/master/sovtoken/doc/Interface#xfer_public-transaction-request]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00tdo:",,,,Unset,Unset,Indy SDK 19.14,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,burdettadam,esplinr,sergey.minaev,,,,,,,"08/Jul/19 7:04 PM;Artemkaaas;Examples for `ledger payment` command are correct because these examples reflect usage of Nullpay library.
Nullpay has `pay` prefix for both: payment addresses and source inputs.
Sovtoken has `txo` for sources and `pay` for payment address.

If we look at example:
`ledger payment inputs=pay:null:111_rBuQo2A1sc9jrJg outputs=(pay:null:FYmoFw55GeQH7SRFa37dkx1d2dZ3zUF8ckg7wmL7ofN4,100)`

pay:null:111_rBuQo2A1sc9jrJg - utxo input 
pay:null:FYmoFw55GeQH7SRFa37dkx1d2dZ3zUF8ckg7wmL7ofN4 - target payment address

;;;","11/Jul/19 8:01 PM;sergey.minaev;Moreover Indy payment is not just about TXO it also may be used for account-based ecosystem, so null pay just show more general example;;;","11/Jul/19 10:31 PM;esplinr;We should be cautious about making the examples in Indy specific to the Sovrin network, given the effort in Aries to make things more general.

We'll close this issue and we can reopen it if there is consensus that we should take a different approach.;;;",,,,,,,,,
Incorrect error handling,IS-1277,40169,,Bug,New,IS,Indy SDK,software,resplin,,,Low,,,VladimirWork,VladimirWork,27/May/19 11:48 PM,27/May/19 11:48 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Build Info:
libindy 1.8.3~1116

Steps to Reproduce:
1. Build custom txn with incorrect type of  `type` parameter (int instead of str):
{noformat}
{""protocolVersion"": 2, ""operation"": {""version"": ""1"", ""aml"": {}, ""type"": 5}, ""identifier"": ""V4SGRU86Z58d6TV7PBUe6f"", ""reqId"": 1}
{noformat}
2. Sign and submit it to the ledger.

Actual Results:
{noformat}
self = <Future finished exception=IndyError(<ErrorCode.CommonInvalidStructure: 113>, {'message': 'Error: Invalid structure\n  Caused by: Request id not found\n', 'backtrace': ''})>
{noformat}

Expected Results:
There should be error about invalid parameter value or type (and there should be no `Request id not found` error text since reqId is correct).

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00pdo:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),VladimirWork,,,,,,,,,,,,,,,,,,,,,
Externalize strings in the CLI for l10n,IS-1278,40192,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,29/May/19 5:29 AM,09/Oct/19 12:17 AM,28/Oct/23 2:49 AM,,,,,,,,,,,cli,,,,,0,,,,"*Story*

As a contributor to the Indy CLI who speaks languages in addition to English, I want the strings in the Indy CLI to be in a separate file so that it is easy to localize those strings.

 

*Notes*
 * This story is not about providing end-to-end localization, but rather about establishing a minimum pattern for string management that allows future localization.
 * External strings should be consumable by GNU Gettext in order to be consumable by a wide range of translation tools.
 * This looks useful: [https://projectfluent.org/]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-273,,,No,,Unset,No,,,"1|i00pic:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Better document getCredDefResponse,IS-1279,40231,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,esplinr,esplinr,esplinr,31/May/19 8:18 AM,08/Jul/19 9:09 PM,28/Oct/23 2:49 AM,08/Jul/19 6:33 PM,,,,,,,,1.10.0,,,,,,,0,EV-CS,EV-Triaged,,"In the node.js libindy wrapper, parseGetCredDefResponse (getCredDefResponse ) isn't adequately documented. For example what do the values n, s, r, rctxt and z represent? Also what do the digits for each attribute represent - e.g age:“641...’?

Goal:

To get the necessary credential definition data from the ledger that would be needed to verify a proof relating to the credential definition.

Concerns:
 * Single letter variable names, with no comment explaining their purpose
 * No link to more information

Notes:
 * The variable names come from this paper: [https://github.com/hyperledger/ursa/blob/master/libursa/docs/AnonCred.pdf]
 * Validation is documented in this HIPE:
 [https://github.com/hyperledger/indy-hipe/blob/c761c583b1e01c1e9d3ceda2b03b35336fdc8cc1/text/anoncreds-protocol/README.md]

Action items:
 * A comment should be added that links to the HIPE and paper.
 * A comment should be added to briefly describe each variable that does not have a descriptive names.
 * If a higher level function is recommended for most purposes, there should be a comment that explains that.
 * Issues are created to add further documentation if necessary.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx2zk",,,,Unset,Unset,Ev-SDK 19.12,EV-SDK 19.13,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,,,,,,,,,"11/Jun/19 10:39 PM;esplinr;We will add to the code a comment similar to this:

{quote}
The code below implements the algorithm in this paper:
https://github.com/hyperledger/ursa/blob/master/libursa/docs/AnonCred.pdf
And is documented in this HIPE:
https://github.com/hyperledger/indy-hipe/blob/c761c583b1e01c1e9d3ceda2b03b35336fdc8cc1/text/anoncreds-protocol/README.md

In this version of the protocol, the following parameters are used to generate the public key. It is likely to change in future versions.

s: a random quadric residio
n: the dimension of the key space (p times q)
r: each item in a mapping of schema attribute names to random numbers
z: an intermediate result of calculation
rctxt: ""r context"" was used in the old version of the paper, but maps to the second item in the map of R (the first item is for the master, the second is for the context)

The output from these functions should not be parsed.
{quote}

We'll add comments to the code, but we don't think further documentation about the mathematical primitives are necessary.;;;","26/Jun/19 12:26 AM;esplinr;I misunderstood where the code that uses these parameters lives. These parameters are not manipulated in Indy, but instead are implemented in Indy-Crypto / Ursa. Further, only the JavaScript wrapper documents these functions in a top-level README.

We will update the API section of the README for the JavaScript wrapper to say:

{quote}
These functions wrap the Ursa algorithm as documented in this paper:
https://github.com/hyperledger/ursa/blob/master/libursa/docs/AnonCred.pdf
And is documented in this HIPE:
https://github.com/hyperledger/indy-hipe/blob/c761c583b1e01c1e9d3ceda2b03b35336fdc8cc1/text/anoncreds-protocol/README.md

Parameters such as value:primary are complex opaque types that contain data structures internal to Ursa. They should not be parsed and are likely to change in future versions.
{quote};;;","26/Jun/19 7:06 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1686;;;",,,,,,,,,
research credential fraud fix: POC of richly contextualized proofs,IS-1280,40258,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,sklump,danielhardman,danielhardman,01/Jun/19 4:40 AM,26/Jul/19 2:27 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"This is not a ticket for normal Indy SDK developers, but I am placing it in the Indy SDK backlog because that's the best home I could imagine for it.

Many people are asking for information about how the Indy/Sovrin approach to credentials can deal with various fraud scenarios. This is a very deep topic that cannot be explored fully in a single ticket. However, this ticket asks for a POC exploration of a single technique. When the ticket is complete, sample code will exist atop an SDK wrapper (e.g., in python or java) that demonstrates the technique; if any code needs to be contributed to libindy to make the technique work, the POC will also generate a PR for that code as well.

The technique is one that I've called ""richly contextualized proofs"". Here is a scenario where it is relevant. Suppose that Mallory wants to get a senior citizen discount when she signs up for educational classes online. The signup process asks her to prove her age > 65, but all other info is self-attested; it also includes payment by credit card. Mallory is younger than 65, so she goes out on the dark web and purchases an Indy/Sovrin-style credential+link secret from someone who is over 65, and intends to use it to commit fraud about her age.

The technique of richly contextualized proofs is to change the proof request such that it becomes far more troublesome and expensive for Mallory to commit fraud in this way. The proof request still requires proof of age > 65, and no additional disclosures. However, it is altered such that Mallory must now prove that the name and birthdate on her driver's license (which she's using to prove age) are the same as the name and birthdate on a passport and a social security card or Aadhaar card. In other words, she's now guaranteeing that there's a rich, interconnected context behind the single fact she's been asked to prove, *without* actually revealing that context.

I suggest that work on this ticket take place in two stages:

In step 1, we construct sample code to demonstrate context as described above, but we actually disclose the context (so, disclose the name and birthdate values on the credentials). In step 2, we turn the context into ZK proofs of equality that are non-disclosing. To do step 2, we probably need help from a crypto engineer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:zt9",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),danielhardman,swcurran,,,,,,,,,"26/Jul/19 2:27 AM;swcurran;Reviewing this and I think that such an indy-sdk based feature would be very valuable.

The proposed step one part seems to be trivial - we do that regularly in Indy/Aries apps, so I don't think that's contributing a lot.  

The second part of actually defining a viable feature that can be implemented in a presentation would be significant and would go a long way to preventing the ""proxied presentations"" fraud that is frequently discussed in relation to ZKPs. 

In a context where you need to disclose something significant (e.g. making a payment), being able to confirm that other required information (e.g. age greater than) is correlated-but-not-disclosed to the significant credential (e.g. name) without revealing the correlated data is powerful.

Even when there is no significant data, partial disclosure tied with a correlated-but-not-disclosed linkage would be useful. For example, disclosing your first name and that the rest of your full name is the same on different credentials would be non-correlating, but could be used to detect trivial fraudulent uses - e.g. a service selling the use of real credentials for use in scamming ZKP solutions.  If there was an unusual spike in the use of a one name presented by users to a service would lead to investigating if there was abuse occuring.

Is this something that needs to be researched/solved in Ursa and then used in Indy?  Any thoughts on how difficult it might be?;;;",,,,,,,,,,,
POC of images embedded in credentials,IS-1281,40259,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,sklump,danielhardman,danielhardman,01/Jun/19 5:35 AM,13/Jul/19 2:28 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Do a POC, using the new credential exchange protocol in [Aries RFC 0036|[https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential]] that shows a credential schema where one of the fields is a base64-encoded JPEG of at least 100k. Produce such a credential and disclose the image field in a proof.

Produce notes/an outline/a rough draft of an Aries RFC or an Indy HIPE that describes how to embed images in credentials, and that includes the POC code as a sample implementation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:zti",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),danielhardman,sklump,swcurran,,,,,,,,"13/Jul/19 2:28 AM;sklump;Submitted: https://github.com/hyperledger/indy-hipe/pull/142
referring to (draft) https://github.com/hyperledger/aries-cloudagent-python/pull/60;;;",,,,,,,,,,,
State Proof invalid verification for GET_REV_DELTA request in case of from and to are before first entry,IS-1283,40299,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,sergey.minaev,sergey.minaev,04/Jun/19 1:25 AM,19/Aug/19 7:20 PM,28/Oct/23 2:49 AM,16/Jul/19 9:58 PM,,,,,,,,1.11.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1264,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00te3:",,,,Unset,Unset,Indy SDK 19.14,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,VladimirWork,,,,,,,,"11/Jul/19 2:45 PM;Artemkaaas;The fix was provided in PR: https://github.com/hyperledger/indy-sdk/pull/1711
Build version: master-1167;;;","16/Jul/19 9:57 PM;VladimirWork;Build Info:
libindy 1.10.0~1171
indy-node 1.9.0~dev1028

Steps to Validate:
1. Check state proofs (using single alive node reading) for GET_REVOC_REG_DELTA with different timestamps (before + before, before+ after, after + after).

Actual Results:
GET_REVOC_REG_DELTA returns state proof in response in all cases.;;;",,,,,,,,,,
Add NYM (role=STEWARD) request from CLI returns an unusable error message,IS-1284,40256,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,VladimirWork,lbendixsen,lbendixsen,01/Jun/19 2:08 AM,20/Aug/19 11:27 PM,28/Oct/23 2:49 AM,20/Aug/19 11:27 PM,1.8.1,,,,,,,1.11.1,,cli,,,,,0,EV-CS,TShirt_M,,"_Environment_: indy-CLI version 1.8.1 connecting to the BuilderNet (indy-node version 1.7.1)

_Steps to Reproduce_:
 # Connect to pool, open wallet, use TRUSTEE DID
 # set Auth_rules to require trustee signature for adding a STEWARD NYM to the ledger (SUCCESS)
 # Use a STEWARD DID
 # Add a STEWARD NYM to the ledger (fail)-> ledger nym did=NSNGwB2MK7WVoG7CLmHhfy verkey=~PRDkZn9HMSL2MUWKFJLpi9 role=STEWARD

*Transaction response has not been received*

_Expected Behavior_: Error message should indicate what went wrong

_Observed Behavior_: Generic ""no response"" error message was received.

_Notes_: This isn't the only case that causes the ""generic"" failure message, I am seeing it more and more in recent builds. Excerpt from the logs on the BuilderNet FoundationBuilder node:

2019-05-31 13:19:03,435|INFO|last_sent_pp_store_helper.py|FoundationBuilder found stored lastSentPrePrepare value b'\{""1"":[6,44],""2"":[6,45],""3"":[6,44],""4"":[6,44]}'

2019-05-31 13:19:03,436|INFO|last_sent_pp_store_helper.py|FoundationBuilder found stored lastSentPrePrepare value b'\{""1"":[6,44],""2"":[6,46],""3"":[6,44],""4"":[6,44]}'

2019-05-31 13:19:03,488|WARNING|auth_request_validator.py|Request Request: \{'signature': '44GGGvgi1bTjZu7DhYYZ7aJCQQpThxgqvK5pV1jrYmcfcJEGdgd2gwQX7rmPt1gE8BikqnzUgCyusiBj8Ck4CE1q', 'reqId': 1559308742915656000, 'operation': {'dest': 'NSNGwB2MK7WVoG7CLmHhfy', 'verkey': '~PRDkZn9HMSL2MUWKFJLpi9', 'type': '1', 'role': '2'}, 'protocolVersion': 2, 'identifier': '4TMD8bT757JqBnmoCiNCc3'} cannot be authorized by reason: Not enough TRUSTEE signatures

2019-05-31 13:19:03,488|WARNING|replica.py|FoundationBuilder:0 encountered exception UnauthorizedClientRequest('Not enough TRUSTEE signatures',) while processing Request: \{'signature': '44GGGvgi1bTjZu7DhYYZ7aJCQQpThxgqvK5pV1jrYmcfcJEGdgd2gwQX7rmPt1gE8BikqnzUgCyusiBj8Ck4CE1q', 'reqId': 1559308742915656000, 'operation': {'dest': 'NSNGwB2MK7WVoG7CLmHhfy', 'verkey': '~PRDkZn9HMSL2MUWKFJLpi9', 'type': '1', 'role': '2'}, 'protocolVersion': 2, 'identifier': '4TMD8bT757JqBnmoCiNCc3'}, will reject

2019-05-31 13:19:03,509|INFO|last_sent_pp_store_helper.py|FoundationBuilder found stored lastSentPrePrepare value b'\{""1"":[6,44],""2"":[6,46],""3"":[6,44],""4"":[6,45]}'

2019-05-31 13:19:03,550|INFO|last_sent_pp_store_helper.py|FoundationBuilder found stored lastSentPrePrepare value b'\{""1"":[6,45],""2"":[6,46],""3"":[6,44],""4"":[6,45]}'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00x1o:",,,,Unset,Unset,Indy SDK 19.17,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lbendixsen,mgbailey,VladimirWork,,,,,,,,"11/Jul/19 3:43 PM;VladimirWork;[~lbendixsen] It's a known issue that was described in release notes for indy-node 1.9.0 and sovrin 1.1.50 (but it was in indy-node 1.7.1 too, it was just found during 1.9.0 acceptance testing). See INDY-2164 for more details.;;;","17/Jul/19 12:23 AM;mgbailey;I have confirmed that this problem persists in 1.10.0. ;;;","17/Jul/19 12:25 AM;mgbailey;I do not see the relationship between this issue ant INDY-2164. I believe that they are separate issues.;;;","23/Jul/19 9:43 PM;VladimirWork;INDY-2164 description is pretty general, in other words - we can receive not enough REJECTs from pool and throw PoolTimeoutError (""no response"" in CLI).
Anyway INDY-2164 issue is fixed (master) and we can wait for the next BuilderNet upgrade (stable with INDY-2164 fix) to validate this ticket.;;;","20/Aug/19 11:27 PM;VladimirWork;Checked against upgraded BuilderNet pool - I got consensus of REJECTs on client when I tried to add Steward by Identity Owner.;;;",,,,,,,
Indy SDK 2.0: Design for Aries vs Indy,IS-1285,40425,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,05/Jun/19 11:26 PM,30/Jul/19 1:44 PM,28/Oct/23 2:49 AM,08/Jul/19 6:19 PM,,,,,,,,,,,,,,,0,,,,"Key considerations:
 * What moves from LibIndy to LibAries. What stays.
** Indy: Ledger resolver
** Aries: Wallet, Pack / unpack, payment API
** CLI: move to Aries to be generic, or stay in Indy to focus on usability?
 * The future of LibVCX
** Which API calls should stay in Indy, move to Aries, or move to be Evernym specific
 * Threading model improvements.
 * Renaming ""Wallet""

*Acceptance Criteria*
* Close the current Indy SDK Architecture proposal design PR
* Create a new Indy SDK design PR with a revised architecture proposal
* Review this proposal with the Aries and Indy communities and decide on next steps",,,,,,,,,,,,,,,,,,,IS-1257,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx2z9",,,,Unset,Unset,Ev-SDK 19.12,EV-SDK 19.13,,,,(Please add steps to reproduce),13.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,jadhavajay,kdenhartog,sergey.minaev,,,,,,,"20/Jun/19 8:24 PM;sergey.minaev;h2. Goals

h3. IndySDK 2.0 Goals
 * Threading model
 * Language specific wrappers vs tiny bindings in various languages
 * Re-thinking modularization of the SDK
 ** Support HW secure enclaves
 * Support Agent2Agent flows?

h3. Aries Goals
* Agent-oriented API
* Pluggable resolver (instead of Indy network specific IndySDK 1.0)
* Avoid “wallet” term in the meaning of IndySDK glossary

h2. Overview
Combining goals of Indy SDK and Aries the next list may be considered as a target
* Main part of libindy codebase will be moved to the aries-sdk as libAries
* Some codebase may be moved from libvcx to libAries
* Language wrappers will be replaced by:
** Various aries language-specific libraries. They may provide more high-level API and be idiomatic with the language.
** Tiny bindings. Tier 1 binding (e.g. rust, python, java) will be part of the main aries-sdk repo and they may be based on current “wrappers” of libindy. It’s nice to have bindings auto generated.
* Indy-sdk repository will be devoted to pluggable resolver for Aries to operate with Indy networks
* Common pattern from language libraries may be built-in to the libAires in the future.

h2. Open questions
* Indy CLI vs Aries CLI
* How much libVCX codebase should be built-in into libAries
* Pluggable mechanism for network resolver
** Language of API
** Compile or run-time
* HW secure enclave seems like easy to implement for simple signatures but problematic for ZKP;;;","26/Jun/19 10:44 PM;esplinr;Google doc to discuss the Plan of Attack before submitting the GitHub design PR:
https://docs.google.com/document/d/1MYMi4NkixfoIJeC79WBOfX_QA3_9rG-iK3lZa86vIR0/edit#;;;","03/Jul/19 10:37 PM;sergey.minaev;There was a discussion about the PoA on Aries call and you can find the recording at the bottom of the wiki page for this call https://wiki.hyperledger.org/display/ARIES/2019-06-26+Aries+Working+Group+Call;;;","08/Jul/19 6:19 PM;sergey.minaev;Draft document has been proposed and discussed with community. Follow-up ticket is IS-1257;;;",,,,,,,,
Python wrapper test dependencies shouldn't be installed in production env,IS-1286,40427,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,andkononykhin,andkononykhin,06/Jun/19 12:56 AM,11/Oct/19 9:10 PM,28/Oct/23 2:49 AM,11/Oct/19 9:10 PM,,,,,,,,,,,,,,,0,,,,"indy-sdk python wrapper [declares|https://github.com/hyperledger/indy-sdk/blob/66e6718a4d3d046089e3eae5961335bfab4c2346/wrappers/python/setup.py#L15] `pytest` and `pytest-asyncio` as necessary requirements for installation. They are actually required only during self testing cases (e.g. in CI). Current configuration leads to their installation in production environments.

The better way is to use setuptools' [extras|https://setuptools.readthedocs.io/en/latest/setuptools.html#declaring-extras-optional-features-with-their-own-dependencies] supported by [pip|https://packaging.python.org/tutorials/installing-packages/#installing-setuptools-extras].",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:zty",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andkononykhin,dbluhm,,,,,,,,,"28/Jun/19 1:09 AM;dbluhm;Made the small changes for this in [#1693|https://github.com/hyperledger/indy-sdk/pull/1693];;;",,,,,,,,,,,
"In indy-cli batch mode, a user should be able to automatically exit upon completion of the script",IS-1287,40429,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Low,Done,VladimirWork,mgbailey,mgbailey,06/Jun/19 3:37 AM,08/Jul/19 9:09 PM,28/Oct/23 2:49 AM,25/Jun/19 7:37 PM,,,,,,,,1.10.0,,,,,,,0,EV-CS,EV-Triaged,,"*Desired:*

When an ""exit"" instruction is encountered in a batch script, the indy-cli shell should exit at that point.

*Current behavior:*

When running in batch mode, currently the user remains in the indy-cli shell when the script is completed. This is undesirable for users that wish to use indy-cli as part of a larger script. This is true even if the user puts ""exit"" as the final line of his script.

For example, for this batch script:

 
{code:java}
pool connect testnet
wallet open testnet_wallet key=xxxx
did use Mo9gRPFVhRhKPRZxdPeFxe
ledger get-nym did=Y7rsGLuFJKmFwvRJkrNQLm
exit
{code}
the current result is:

 

 
{code:java}
vagrant@indyCli2:~$ vim experiment.txt
vagrant@indyCli2:~$ indy-cli experiment.txt
pool connect testnet
Pool ""testnet"" has been connectedwallet open testnet_wallet key=xxxxx
Wallet ""testnet_wallet"" has been openeddid use Mo9gRPFVhRhKPRZxdPeFxe
Did ""Mo9gRPFVhRhKPRZxdPeFxe"" has been set as activeledger get-nym did=Y7rsGLuFJKmFwvRJkrNQLm
Following NYM has been received.
Metadata:
+------------------------+-----------------+---------------------+---------------------+
| Identifier             | Sequence Number | Request ID          | Transaction time    |
+------------------------+-----------------+---------------------+---------------------+
| Mo9gRPFVhRhKPRZxdPeFxe | 46756           | 1559758738621408979 | 2019-03-29 23:04:52 |
+------------------------+-----------------+---------------------+---------------------+
Data:
+------------------------+------------------------+----------------------------------------------+--------------+
| Identifier             | Dest                   | Verkey                                       | Role         |
+------------------------+------------------------+----------------------------------------------+--------------+
| Mo9gRPFVhRhKPRZxdPeFxe | Y7rsGLuFJKmFwvRJkrNQLm | HxiBB1dJUbyH72eecUVo2nRw7epbUd1XdZLnV9JCoXtv | TRUST_ANCHOR |
+------------------------+------------------------+----------------------------------------------+--------------+exitpool(testnet):wallet(testnet_wallet):did(Mo9...Fxe):indy>
{code}
 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00r80:",,,,Unset,Unset,EV-SDK 19.13,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,mgbailey,twshelton,VladimirWork,,,,,,"11/Jun/19 10:13 PM;esplinr;Thank you for reporting this issue. We thought this behavior was already there, but it seems that we overlooked it. We agree that this is a good idea and we'll schedule it into an upcoming sprint as we get the opportunity.;;;","25/Jun/19 3:44 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1684;;;","25/Jun/19 3:45 PM;Artemkaaas;Build version: master-1149;;;","25/Jun/19 7:37 PM;VladimirWork;Build Info:
libindy 1.9.0~1149

Steps to Validate:
1. Run batches with `exit` using indy-cli.

Actual Results:
CLI exits when `exit` is encountered.;;;",,,,,,,,
Indy SDK should support empty nodes in state proofs,IS-1288,40439,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.khoroshavin,sergey.khoroshavin,06/Jun/19 7:49 PM,13/Jun/19 6:34 PM,28/Oct/23 2:49 AM,10/Jun/19 6:47 PM,,,,,,,,1.10.0,,,,,,,0,TShirt_S,,,"*Expected behavior*
Indy SDK should accept reply for get transaction which contains state proof of key nonexistence in an empty state.

*Actual behavior*
When receiving reply for get transaction which contains state proof of key nonexistence in an empty state libindy logs following error and falls back to consensus mode:
{code}
Unexpected data while parsing Patricia Merkle Trie: Ok(Data(0)): UntrustedRlp
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx2zi",,,,Unset,Unset,Ev-SDK 19.12,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.khoroshavin,sergey.minaev,,,,,,,,,"10/Jun/19 6:45 PM;sergey.minaev;Fixed in PR [https://github.com/hyperledger/indy-sdk/pull/1665];;;","10/Jun/19 6:45 PM;sergey.minaev;Build version
1.9.0-1132;;;","10/Jun/19 6:46 PM;sergey.minaev;Validated by unit tests in SDK

Additional validation in scope of IndyNode integration tests: https://github.com/hyperledger/indy-plenum/pull/1228;;;",,,,,,,,,
LibVCX gets fees on startup,IS-1289,40464,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,,esplinr,esplinr,07/Jun/19 10:36 PM,25/Jun/19 12:11 AM,28/Oct/23 2:49 AM,25/Jun/19 12:11 AM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1275,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Release Indy SDK 1.10.0,IS-1290,40531,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,KitHat,esplinr,12/Jun/19 3:00 AM,19/Jul/19 10:19 PM,28/Oct/23 2:49 AM,04/Jul/19 10:38 PM,,,,,,,,1.10.0,,,,,,,0,,,,"*Release Goal*
Release everything that is ready. Especially:
* Flexible attribute tagging
* Improvements to offline signing

*Acceptance Criteria*
Regular instructions:
* Code is tested
* Review upstream releases to decide what should be included in this build
** Ursa
* Build is produced with automated CI / CD
** Official build is tagged as released in Git
** Official builds should be the only builds that are not marked in GitHub as ""pre-release""
* Prepare basic documentation on new features
* Prepare the Release Notes
** Link to the documentation on new features
** Stored as a CHANGELOG.md in the root of the repo
** Latest release at the top, above the release notes for all previous versions
* The release should be on GitHub “Releases” tab.
** Release notes should be in the “Description"" field of the GitHub release artifact
* The release is marked in JIRA
* Add the correct fixVersion to included issues
* Enable others to use the release:
** Email stakeholders with links to the artifacts and release notes",,,,,,,,,,,,,,,,,,,,,IS-1324,,IS-1247,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,"1|i00r7w:",,,,,,EV-SDK 19.13,,,,,,5.0,,,,,,,,,,,,Artemkaaas,esplinr,KitHat,,,,,,,,"02/Jul/19 2:39 PM;Artemkaaas;Release preparation was done in PR: https://github.com/hyperledger/indy-sdk/pull/1690;;;","02/Jul/19 2:40 PM;Artemkaaas;Build version: rc-77;;;",,,,,,,,,,
Indy-CLI ledger send=false requires a connected pool,IS-1291,40534,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,MikeLodder,MikeLodder,12/Jun/19 6:04 AM,21/Jun/19 1:22 AM,28/Oct/23 2:49 AM,21/Jun/19 1:22 AM,,,,,,,,1.10.0,,,,,,,0,TShirt_S,,,"In order to allow offline signing of transactions, send=false flag should not require a connected pool when using *ledger* commands. Recently the [PR|https://github.com/hyperledger/indy-sdk/pull/1670] fixed this and should be applied to more commands.

See related issue:
https://sovrin.atlassian.net/browse/ST-576",,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,IS-1245,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx2zo",,,,Unset,Unset,Ev-SDK 19.12,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),MikeLodder,sergey.minaev,VladimirWork,,,,,,,,"18/Jun/19 7:56 PM;sergey.minaev;Implemented in PR https://github.com/hyperledger/indy-sdk/pull/1678;;;","19/Jun/19 6:54 PM;sergey.minaev;build 1.9.0 master 1144;;;","21/Jun/19 1:21 AM;VladimirWork;It is checked during Indy-SDK demo preparation - flag works as expected.;;;",,,,,,,,,
Tab completion in the Indy CLI,IS-1292,40535,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,12/Jun/19 9:52 AM,24/Jul/19 12:14 AM,28/Oct/23 2:49 AM,23/Jul/19 11:35 PM,,,,,,,,1.11.0,,cli,,,,,0,,,,"*Story*
As a developer using the Indy CLI, I want tab to cycle through logic values to complete my current action so that it is easier to use the CLI.

*Acceptance Criteria*
Tab completion exists for:
* Wallet names
* DIDs
* Previously used payment addresses

Issues are created for further work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900001",,,,Unset,Unset,Indy SDK 19.14,Indy SDK 19.15,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,VladimirWork,,,,,,,,"04/Jul/19 6:41 PM;Artemkaaas;Dynamic param completion is done for:
* wallet names
* pool names
* did
* payment addresses

Problems: 
`ledger payment` command:
* `inputs` param is an array and its possible values are stored on the ledger.
* `outputs` param is a complex structure (pay_address, amount, extra )

PR: https://github.com/hyperledger/indy-sdk/pull/1699;;;","17/Jul/19 2:24 PM;Artemkaaas;Build version: master-1175;;;","17/Jul/19 10:48 PM;VladimirWork;Waiting for a build with new ledger payment command.;;;","19/Jul/19 5:36 AM;VladimirWork;Verified against local build, waiting for master with all fixes.;;;","24/Jul/19 12:14 AM;VladimirWork;Build Info:
libindy 1.10.0~1198

Actual Results:
Tab completion works as expected (including new ledger payment command parameters).;;;",,,,,,,
Return already existing DID,IS-1293,40536,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,12/Jun/19 10:01 AM,19/Aug/19 7:37 PM,28/Oct/23 2:49 AM,19/Aug/19 7:37 PM,,,,,,,,1.11.1,,wallet,,,,,0,,,,"*Story*
As a developer building an application that uses LibIndy, if I try to submit a DID to the wallet that already exists, I want the wallet to return a handle to the DID instead of issuing me an error.

Or at least give me a hint as to how to get the DID out of the wallet.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upf:y",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"13/Aug/19 7:43 PM;Artemkaaas;Changes:  Updated `create_and_store_my_did` function to handle `DID` duplication cases:
    1) created `DID` with the same verkey  as in wallet (seed was used) - return success
    2) created `DID` with verkey  that different from the stored in the wallet - throw DidAlreadyExists error
Done in PR: https://github.com/hyperledger/indy-sdk/pull/1810;;;","15/Aug/19 6:13 PM;Artemkaaas;Build version: master-1258;;;","19/Aug/19 7:36 PM;sergey.minaev;* Covered by integration tests
 * validated in CLI as well:
 ** double creation of DID with specified seed successful for both attempts
 ** double creation of DID without specified seed failed at the second try;;;",,,,,,,,,
zeroize all secrets,IS-1294,40575,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,ignisvulpis,ignisvulpis,14/Jun/19 2:07 AM,08/Aug/19 10:28 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"All secrets should be in memory as short as possible.

 

Some secrets are zeroized already but not all.

E.g.: [https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/domain/wallet/mod.rs#L15]

 


Also all secrets should be u8[] because String and Vec are hard to track down.

From the zeroize documentation [https://docs.rs/zeroize/0.9.1/zeroize/]

{quote} 
However, be aware several operations in Rust can unintentionally leave copies of data in memory. This includes but is not limited to:
 * Moves and {{Copy}}
 * Heap reallocation when using {{Vec}} and {{String}}
 * Borrowers of a reference making copies of the data

[{{Pin}}|https://doc.rust-lang.org/std/pin/struct.Pin.html] can be leveraged in conjunction with this crate to ensure data kept on the stack isn't moved.

The {{Zeroize}} impls for {{Vec}} and {{String}} zeroize the entire capacity of their backing buffer, but cannot guarantee copies of the data were not previously made by buffer reallocation. It's therefore important when attempting to zeroize such buffers to initialize them to the correct capacity, and take care to prevent subsequent reallocation.

The {{secrecy}} crate provides higher-level abstractions for eliminating usage patterns which can cause reallocations:

[https://crates.io/crates/secrecy]
h2.  
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00rf8:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,ignisvulpis,,,,,,,,,"08/Aug/19 10:28 PM;esplinr;[~MikeLodder]  did work on this in:
https://github.com/hyperledger/indy-sdk/pull/1428

And [~ignisvulpis] upgraded zeroize in:
https://github.com/hyperledger/indy-sdk/pull/1671

Who is the right person to finish the work?;;;",,,,,,,,,,,
gitignore Cargo.lock,IS-1295,40593,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,ignisvulpis,ignisvulpis,15/Jun/19 4:27 AM,19/Jun/19 10:07 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Please see the reasoning on why libraries like libindy should .gitignore Cargo.lock.

I suggest to .gitignore Cargo.lock in libindy and remove it from the repo.

[https://doc.rust-lang.org/cargo/faq.html#why-do-binaries-have-cargolock-in-version-control-but-not-libraries]
{quote} The purpose of a {{Cargo.lock}} is to describe the state of the world at the time of a successful build. It is then used to provide deterministic builds across whatever machine is building the package by ensuring that the exact same dependencies are being compiled.

This property is most desirable from applications and packages which are at the very end of the dependency chain (binaries). As a result, it is recommended that all binaries check in their {{Cargo.lock}}.

For libraries the situation is somewhat different. A library is not only used by the library developers, but also any downstream consumers of the library. Users dependent on the library will not inspect the library’s {{Cargo.lock}} (even if it exists). This is precisely because a library should *not* be deterministically recompiled for all users of the library.

If a library ends up being used transitively by several dependencies, it’s likely that just a single copy of the library is desired (based on semver compatibility). If Cargo used all of the dependencies' {{Cargo.lock}} files, then multiple copies of the library could be used, and perhaps even a version conflict.

In other words, libraries specify semver requirements for their dependencies but cannot see the full picture. Only end products like binaries have a full picture to decide what versions of dependencies should be used.
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00rik:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ignisvulpis,sergey.minaev,,,,,,,,,"17/Jun/19 11:31 PM;sergey.minaev;libindy is not a library from cargo artifact point of view. There is no public rust crate which can be consumed by another rust application/library.
Instead of that the output of libindy is binary library with C API only. So it more like final binary application artifact output rather rust library artifacts. It's why cargo.lock is included into VCS;;;","19/Jun/19 10:07 PM;ignisvulpis;So if libindy is considered a binary then he only relevant paragraph from the citation above is this one:
{quote}The purpose of a {{Cargo.lock}} is to describe the state of the world at the time of a successful build. It is then used to provide deterministic builds across whatever machine is building the package by ensuring that the exact same dependencies are being compiled.
{quote}
I assume when the Ubuntu `deb` is build and when the libindy.[dll,lib,dylib,so,a] are build by the core team and published that then this information might be useful if the builds are done on different machines. But, I think it is a good practice to do a `cargo update` before releasing a new version and then the information Cargo.lock provides is not so very important because the Carglo.lock files that are then created on the different machines are the same anyway.

This usefulness of having Cargo.lock is little and applies rarely while the merge conflicts regarding Cargo.lock happen much more often and could be avoided if Cargo.lock were not in the CVS.

 

 ;;;",,,,,,,,,,
Configure dependabot for Indy,IS-1296,40597,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,ignisvulpis,ignisvulpis,16/Jun/19 6:41 PM,06/Jul/19 1:15 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Dependabot was acquired by Github and is now free.

It looks at a repo's dependencies and creates PRs when there is a newer version of a dependencies.

The maximum number of PRs at one time is 5 so maintainers don't get overwhelmed.

To exclude a PR just comment `{{@dependabot ignore this dependency}}` on the relevant Dependabot PR.

 

Here is a valid .dependabot/config.yml

https://github.com/AxelNennker/indy-sdk/blob/master/.dependabot/config.yml

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00rjg:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ignisvulpis,sergey.minaev,,,,,,,,,"20/Jun/19 9:14 PM;ignisvulpis;[https://github.com/hyperledger/indy-sdk/network/dependencies]

does not currently display Rust dependencies.

Dependabot understands Cargo.toml;;;","06/Jul/19 1:15 AM;sergey.minaev;Auto PRs from dependabot may be too much load for current jenkins infrastructure.

But appropriate configuration of the bot which allows to see suggested by bot fixes (without auto PRing them) will be useful for our project.;;;",,,,,,,,,,
Does anyone konw how to use sdk to reverse the revocation? Thx,IS-1297,40733,,Task,Complete,IS,Indy SDK,software,resplin,,,Low,Invalid: Works as Expected,,zixian5,zixian5,21/Jun/19 3:04 PM,25/Jun/19 7:57 AM,28/Oct/23 2:49 AM,25/Jun/19 7:57 AM,,,,,,,,,,deployment,libindy,payments,wallet,,0,,,,why this method （indy_issuer_recover_credentia）is forbidden to use???,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00s90:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,zixian5,,,,,,,,,"25/Jun/19 7:56 AM;esplinr;This issue tracker is used by contributing teams to organize development, and so is not the right place for support requests. Stack Overflow (with tag #hyperledger-indy) is a better place. Alternatively, you can hire an Indy expert to help you find an answer.

If the documentation is not adequate, you can open an issue asking for it to be improved. Once you learn the answer to your question, we encourage you to submit a pull request improving the documentation.

Regarding your question, it is not intended for one to be able to undo a revocation. If an issuer is not happy that a credential has been revoked, it can always be reissued. There might be a way to reverse a revocation by republishing the previous tales file and updating the accumulator to an earlier value, but the feature was not designed with this in mind.;;;",,,,,,,,,,,
Only return the date (not time) for the TAA acceptance,IS-1298,40772,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,25/Jun/19 2:01 AM,16/Jul/19 7:01 PM,28/Oct/23 2:49 AM,16/Jul/19 7:01 PM,,,,,,,,1.11.0,,,,,,,0,,,,"If an application attempts to use a TAA timestamp with too much precision, it can be a privacy risk. LibIndy should discard the time portion and only provide to the ledger the date as part of the signed transaction.",,,,,,,,,,,,INDY-2157,,,,,,,,,,,,,,,,,,INDY-1942,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900000i",,,,Unset,Unset,Indy SDK 19.14,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,VladimirWork,,,,,,,,"05/Jul/19 8:12 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1703;;;","11/Jul/19 2:55 PM;Artemkaaas;Build version:  master-1166;;;","16/Jul/19 7:01 PM;VladimirWork;Build Info:
libindy 1.10.0~1171
indy-node 1.9.0~dev1028

Steps to Validate:
1. Run TestTAASuite and check TAA timestamps.
2. Set and accept TAA using CLI and check timestamps.

Actual Results:
TAA works as expected and is compatible to the latest pool.;;;",,,,,,,,,
libindy Java wraper depends on a beta release of slf4j,IS-1299,40774,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,devin-fisher,devin-fisher,25/Jun/19 3:16 AM,01/Jul/19 11:03 PM,28/Oct/23 2:49 AM,01/Jul/19 11:03 PM,,,,,,,,1.10.0,,,,,,,0,,,,"We shoud not be using a prerelease version of slf4j. This has the effect of forcing downstream applications to use a prereleased version slf4j and/or a prereleased version of a binder (ex. logback).

 

I doubt we are using any features that are new to 1.8.x and if we are, we should back them out until they stabliz. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00r83:r",,,,Unset,Unset,EV-SDK 19.13,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),devin-fisher,VladimirWork,,,,,,,,,"01/Jul/19 11:03 PM;VladimirWork;Checked in indy-sdk repo (pom.xml for java wrapper) and on java samples.;;;",,,,,,,,,,,
"Answering ""yes"" to prompts when using Indy CLI batch automation",IS-1300,40780,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,25/Jun/19 7:46 AM,29/Jun/19 12:10 AM,28/Oct/23 2:49 AM,29/Jun/19 12:10 AM,,,,,,,,1.10.0,,cli,,,,,0,EV-CS,,,"*Story*
As a network administrator using indy-cli to automate administration, I will call Indy CLI in ""batch mode"" and perform potentially dangerous actions that will prompt a warning requiring user acknowledgement. I want to be able to use a flag that tells indy-cli to always accept a ""yes"" when acknowledgement is required in this mode.

*Acceptance Criteria*
* A flag exists that similar to ""-y""
* When the flag is provided at the time indy-cli is called, any operation which would normally require user acknowledgement of ""yes or no"" proceeds as if the user entered ""yes"".
* A message is printed to the logs and console that is similar to ""Proceeding with response of 'yes' because of '-y' flag.""

*Note*
* As an example, see the Apt tool for Debian.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00r83:w",,,,Unset,Unset,EV-SDK 19.13,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,VladimirWork,,,,,,,,"25/Jun/19 5:42 PM;Artemkaaas;Changes:  Accepting all prompts by default for Indy CLI batch automation.
PR: https://github.com/hyperledger/indy-sdk/pull/1689

In my opinion, specifying '-y' is redundant here.
- batch mode implies accepting all prompts by default.
- interactive mode implies manual accepting every prompt. ;;;","25/Jun/19 11:01 PM;esplinr;I agree with this. Thank you.;;;","29/Jun/19 12:10 AM;VladimirWork;Build Info:
libindy 1.9.0~1157

Steps to Validate:
1. Run batches with all commands with user acknowledgement required.

Actual Results:
CLI works as expected.;;;",,,,,,,,,
Return the identifier of a cred def that already exists,IS-1301,40791,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,25/Jun/19 11:28 PM,19/Aug/19 7:38 PM,28/Oct/23 2:49 AM,19/Aug/19 7:38 PM,,,,,,,,1.11.1,,,,,,,0,,,,"*Story*
As a developer of an application for an Indy network, if I try to create a credential definition that is already in the wallet, I want the wallet to return the identifier for the cred def instead of giving me an error that it already exists so that it is easy for me to use the cred def.

After making the create call, the developer should be able to use the previously existing cred def the same as if it was newly created.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upf:z",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"13/Aug/19 10:31 PM;Artemkaaas;Changes: return credential definition instead an error in case it already exists in a wallet with the same id.
Done in PR: https://github.com/hyperledger/indy-sdk/pull/1812;;;","15/Aug/19 7:29 PM;Artemkaaas;Build-version: master-1260;;;","19/Aug/19 7:38 PM;sergey.minaev;Covered by integration tests. No changes in CLI and no manual testing required.;;;",,,,,,,,,
Enable agency independent Credential and Proof exchange API calls,IS-1302,40803,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,DouglasWightman,DouglasWightman,DouglasWightman,27/Jun/19 12:16 AM,02/Aug/19 11:30 PM,28/Oct/23 2:49 AM,02/Aug/19 11:30 PM,,,,,,,,1.11.0,,libvcx,,,,,0,,,,"Create a new set of APIs around credentials and proofs that returns the messages that should be exchanged without handling the transport of those messages. This removes the dependency on an agency/cloud-agent and allows the user of the SDK to transport those messages themselves.  The new APIs will be:

vcx_issuer_get_credential_offer_msg()

vcx_issuer_get_credential_msg()

vcx_credential_get_request_msg()

vcx_proof_get_request_msg()

vcx_disclosed_proof_get_proof_msg()",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:ztw",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),DouglasWightman,,,,,,,,,,,,,,,,,,,,,
upgrade vcx packages to improve security,IS-1303,40820,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,danielhardman,danielhardman,28/Jun/19 2:20 AM,24/Oct/19 11:18 PM,28/Oct/23 2:49 AM,24/Oct/19 9:04 PM,,,,,,,,1.12.0,,,,,,,0,security,,,Some of the rust crates that we use should be updated to eliminate security vulnerabilities. See attached graphic. !Screen Shot 2019-06-27 at 11.18.48 AM.png!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/19 2:19 AM;danielhardman;Screen Shot 2019-06-27 at 11.18.48 AM.png;https://jira.hyperledger.org/secure/attachment/17351/Screen+Shot+2019-06-27+at+11.18.48+AM.png",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zkn:y",,,,Unset,Unset,Indy Aries 19.21,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),danielhardman,ignisvulpis,sergey.minaev,,,,,,,,"02/Aug/19 9:56 PM;ignisvulpis;updating typedoc in vcx/wrappers/node/package.json to 0.15.0 might do the trick here.

https://www.npmjs.com/package/typedoc;;;","24/Oct/19 9:04 PM;sergey.minaev;We decided to remove package locks for JS wrappers and as result automatic security audit is passed now. It's up to application to pick appropriate versions and the wrappers should not force particular version of the dependency;;;",,,,,,,,,,
Wallet delete does not work,IS-1304,40825,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,smithbk,smithbk,smithbk,28/Jun/19 9:22 PM,19/Aug/19 7:16 PM,28/Oct/23 2:49 AM,15/Aug/19 2:03 PM,,,,,,,,1.11.1,,wallet,,,,,0,EV-Triaged,help-wanted,,"The delete_wallet call doesn't remove the entire directory
The default sqlite impl creates 3 files: sqlite.db, sqlite.db-shm, and sqlite.db-wal.
When I call delete_wallet, it doesn't delete sqlite.db though it deletes the others.
So when I create, delete, and recreate a wallet with the same name, the recreate fails
with a WalletAlreadyExistsError error.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009dr",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,ignisvulpis,smithbk,,,,,,,"06/Jul/19 12:31 AM;esplinr;Thank you for reporting this problem.

We have an integration test for this behavior, so if this is real then we have a bug in the test as well as in the code.

Because the impact of this issue is limited and there are clear workarounds and a manual remediation, we will postpone fixing this issue until after we have addressed some higher priority projects. In the mean time, this would be a good issue for others to look into.;;;","02/Aug/19 9:33 PM;ignisvulpis;[~smithbk] could you please add 'steps to reproduce' to this issue?

I added a test to libindy/tests/wallet.rs and it does not show this issue.

Maybe the new test is wrong.

Please have look here https://github.com/hyperledger/indy-sdk/pull/1781

Thanks,
 Axel

 ;;;","06/Aug/19 2:31 PM;Artemkaaas;There is already the [test|https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/wallet.rs#L135] test which covers this case.  And it always is run as a part of our CI testing.

;;;",,,,,,,,,
Document how to prefer specific validators,IS-1305,40833,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,29/Jun/19 1:29 AM,16/Aug/19 1:19 AM,28/Oct/23 2:49 AM,01/Aug/19 5:46 PM,,,,,,,,1.11.0,,libindy,,,,,1,EV-CS,,,"LibIndy allows clients to set the order in which they want to read from validator nodes. This can allow stewards to prefer querying their own node.

https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/api/pool.rs#L72

This needs to be documented.

The documentation should note that consistently querying a single node can open up a class of attacks against a user, but the BLS signature can help to detect if the node is malicious.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1085,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx09000009",,,,Unset,Unset,Indy SDK 19.14,Indy SDK 19.15,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,tharmon,,,,,,,,"11/Jul/19 11:07 PM;esplinr;I suggest creating a new document in:
https://github.com/hyperledger/indy-sdk/tree/master/docs/configuration.md

Additional topics that it would be good to document:
* Where is the LibIndy configuration file
* Where is the Indy CLI configuration file
* How to enable logging

I recognize that documentation could  take a significant amount of time. I think we should cap our effort at this time to a half-engineering day.;;;","23/Jul/19 3:53 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1744;;;",,,,,,,,,,
Android crash upon create proof,IS-1306,40847,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,DucaDellaForcoletta,DucaDellaForcoletta,01/Jul/19 9:35 PM,19/Aug/19 7:20 PM,28/Oct/23 2:49 AM,06/Aug/19 8:53 PM,1.8.1,1.9.0,,,,,,1.11.1,,libindy,,,,,0,TShirt_M,,,"A crash is obtained upon invocation of create proof api for a proof request without non_revoked tag. (Only primary proof is needed) The crash occurs on an android app written in flutter (dart). The last api called before crash is _Anoncreds.proverCreateProof._ 

In order to reproduce the problem the following step are needed:
 # Define a schema and a related revocable credential def
 # Issue a credential for the definition above
 # Present. proof request without revocable tag
 # Create a proof without pass the revocation state and without add the tag timestamp on the attributes presented
 # The lib will crash

 

The exception occurs both in 1.8.1 and 1.9.0.

In attach the log with the full stack trace.

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jul/19 6:52 AM;DucaDellaForcoletta;log.txt;https://jira.hyperledger.org/secure/attachment/17383/log.txt",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upc:",,,,Unset,Unset,Indy SDK 19.15,Indy SDK 19.16,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,DucaDellaForcoletta,esplinr,ignisvulpis,VladimirWork,,,,,,"06/Jul/19 12:25 AM;esplinr;Thank you for reporting this issue. We definitely want to fix problems that result in crashes, but this problem report does not contain enough information.

We would appreciate:
* A description of how you are using LibIndy, which API call were you accessing when you saw the crash.
* Your Indy logs containing the full stack trace of the crash.

Following this advice will help your issue report to be useful to the team:
https://wiki.hyperledger.org/display/indy/How+to+Contribute#HowtoContribute-ReportinganIssue;;;","18/Jul/19 6:09 PM;Artemkaaas;This issue doesn't relate directly to android. It fails on Libindy layer also.
I updated Libindy logic to create revocation proof based on the presence of timestamps in a proof request.
Here is PR:  https://github.com/hyperledger/indy-sdk/pull/1714;;;","26/Jul/19 2:22 PM;Artemkaaas;Build version: master-1211;;;","02/Aug/19 10:12 PM;ignisvulpis;I think creating the prool failed which led to an error which Java tried to retrieve using indy_get_current_error which crashed.

I think there was another issue regarding threads and getting the error but I can't find it just now.

 

Fixing proof generation does not fix the the underlying problem that error creation and error retrieval can occur on different threads which crashes.

 

Maybe the PR here [https://github.com/hyperledger/indy-sdk/pull/1733/files] is a way to fix this too?;;;","06/Aug/19 7:03 PM;VladimirWork;[~DucaDellaForcoletta] Could you check this case against the latest stable or master version?;;;","06/Aug/19 7:08 PM;VladimirWork;Build Info:
libindy 1.11.0 (stable)

Steps to Validate:
https://github.com/VladimirWork/indy-test-automation/blob/c8a9c80188dc011ebca346adecf81032d4fa36ae/system/draft/test_misc.py#L1343

Actual Results:
Verification of proof without timestamps and any revocation data works as expected.;;;","06/Aug/19 7:18 PM;DucaDellaForcoletta;[~VladimirWork] As soon as we update the library in our system (I think in september), I'll give a feedback. Looking to the test posted seems ok now for the verify_proof scenario. Thanks;;;","06/Aug/19 8:53 PM;VladimirWork;Ok, reopen this ticket or create another one if there will be any issues after the upgrade.;;;",,,,
Indy CLI command history should persist between sessions,IS-1307,40852,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,01/Jul/19 11:32 PM,18/Jul/19 11:18 PM,28/Oct/23 2:49 AM,18/Jul/19 9:41 PM,,,,,,,,1.11.0,,,,,,,0,,,,"*Acceptance Criteria*
* Sensitive data such as seeds and private keys should not be written to disk, even in encrypted form.

*Notes*
* We considered whether the history should be encrypted on the disk, and unlocked. We decided against it.
** That the CLI history is no more concerning than the Bash history.
** It would be odd to ask the user to retain a different password just for the history, and have to provide it before having to provide the password for opening a wallet.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1321,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00tdg:",,,,Unset,Unset,Indy SDK 19.14,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,VladimirWork,,,,,,,,"09/Jul/19 3:34 PM;Artemkaaas;Changes:  
- load commands history from a file on CLI initialization
- store commands history into the file on exit
 
Done in PR: https://github.com/hyperledger/indy-sdk/pull/1704;;;","16/Jul/19 8:21 PM;VladimirWork;Issues found:
- CTRL+D is not handled as `exit` command
- previous history is shuffled every time you open cli and just exit it without any other commands
- commands like `ledger nym did=1111111111111111 verkey=FqsGX2jwM8MfwogA8p8jKPtA5PMB4DRmL2p22DXvmQBo` are not saveed in history;;;","18/Jul/19 2:09 PM;Artemkaaas;Fixed in master-1182;;;","18/Jul/19 11:18 PM;VladimirWork;Build Info:
indy-cli 1.10.0~1182

Actual Results:
History persists between sessions as expected.

Additional Info:
CLI doesn't save unsuccessful commands (during session and persistently) but it will be very useful to save them so IS-1321 was reported.;;;",,,,,,,,
Indy SDK/CLI to have proof of possession,IS-1308,40876,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MikeLodder,MikeLodder,MikeLodder,02/Jul/19 11:14 PM,02/Aug/19 11:31 PM,28/Oct/23 2:49 AM,02/Aug/19 11:31 PM,,,,,,,,1.11.0,,,,,,,0,,,,"Most cyber coins offer the ability to prove ownership of a payment address. This is just a challenge/response using nonces and signatures.

Since Indy supports payment plugins, it should offer this feature and Indy is using libsodium so it will be easy to implement.",,,,57600,0,,0%,57600,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqra:i",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),MikeLodder,,,,,,,,,,,,,,,,,,,,,
Searching credentials for proofReq fails for certain nonces ,IS-1309,40926,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,lukasA,lukasA,04/Jul/19 11:31 PM,25/Dec/19 6:44 PM,28/Oct/23 2:49 AM,18/Jul/19 10:00 PM,1.9.0,,,,,,,1.11.0,,,,,,,0,,,,"Affected npm version: 1.9.0-dev-1124

Called function of NodeJS Indy Wrapper: proverSearchCredentialsForProofReq

IndyError:
{code:java}
{
  ""name"": ""IndyError"",
  ""message"": ""CommonInvalidStructure"",
  ""indyCode"": 113,
  ""indyName"": ""CommonInvalidStructure"",
  ""indyCurrentErrorJson"": ""{\""backtrace\"":\""\"",\""message\"":\""Error: Invalid structure\\n  Caused by: Invalid ProofRequest json has been passed\\n  Caused by: Error: Invalid library state\\nCaused by: Internal OpenSSL error\\nCaused by: OpenSSL error\\n at line 1 column 250\\n\""}"",
  ""indyMessage"": ""Error: Invalid structure\n  Caused by: Invalid ProofRequest json has been passed\n  Caused by: Error: Invalid library state\nCaused by: Internal OpenSSL error\nCaused by: OpenSSL error\n at line 1 column 250\n"",
  ""indyBacktrace"": """"
}
{code}
 

The error seems to be related to the nonce value in the proofReq since I can successfully reproduce broken/not broken calls with two nonces. Both nonces are valid uuids and were generated using the uuid/v1 npm package: nonce = uuidv1().

 

This is a working proofReq: 
{code:java}
{
  ""name"": ""Profile-Proof"",
  ""version"": ""1.0"",
  ""requested_attributes"": {
    ""attr1_referent"": {
      ""name"": ""firstname""
    },
    ""attr2_referent"": {
      ""name"": ""lastname""
    },
    ""attr3_referent"": {
      ""name"": ""birthdate""
    }
  },
  ""requested_predicates"": {},
  ""nonce"": ""8cbe2a40-9e61-11e9-8eb8-3be88a561bbf""
}
{code}
This is a not working proofReq:
{code:java}
{
  ""name"": ""Profile-Proof"",
  ""version"": ""1.0"",
  ""requested_attributes"": {
    ""attr1_referent"": {
      ""name"": ""firstname""
    },
    ""attr2_referent"": {
      ""name"": ""lastname""
    },
    ""attr3_referent"": {
      ""name"": ""birthdate""
    }
  },
  ""requested_predicates"": {},
  ""nonce"": ""c3a94ee0-9e61-11e9-816e-9d64a4577d91""
}
{code}",,,,,,,,,,,,,,,,,,,,,,,,IS-1452,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00te2:",,,,Unset,Unset,Indy SDK 19.14,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,lukasA,,,,,,,,,"10/Jul/19 7:23 PM;Artemkaaas;Libindy uses Ursa -> Ursa uses OpenSSL BigNum implementation. 
During deserialization, `from_dec`function is called. 
So, nonce should be a decimal digit represented as a string. 
I played a bit with deserialization and it looks like:
- works in case nonce start from a digit
- error in case nonce starts from a word.

We'll add a comment to functions documentation regarding the proper format of the `nonce` field.;;;","10/Jul/19 9:07 PM;Artemkaaas;Updated documentation and added function for a proper nonce generation.
PR: https://github.com/hyperledger/indy-sdk/pull/1710;;;","17/Jul/19 2:25 PM;Artemkaaas;Build version: master-1176;;;",,,,,,,,,
Allow usage payment address instead of explicit payment sources in CLI,IS-1310,40934,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,sergey.minaev,sergey.minaev,05/Jul/19 10:44 PM,19/Jul/19 5:28 AM,28/Oct/23 2:49 AM,18/Jul/19 9:40 PM,,,,,,,,1.11.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1322,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00td8:",,,,Unset,Unset,Indy SDK 19.14,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,VladimirWork,,,,,,,,"09/Jul/19 3:39 PM;Artemkaaas; Changes: updated Indy CLI commands to work with payment address:
- `ledger payment` command to accept payment address as a source and target.
-  the ability of request fee setting by using payment address of a sender

Done in PR: https://github.com/hyperledger/indy-sdk/pull/1702;;;","18/Jul/19 8:42 PM;VladimirWork;Issues found:
1. Incorrect error in case of amount=0:
pool(docker):wallet(docker):indy> ledger payment source_payment_address=pay:sov:22fb8fVBq3mxkZAUsz78mzesWw3zKP8xDGbPwmL8fUqSdKfHvT target_payment_address=pay:sov:24k7HrBU5qPYxLPRAXg4Am8yymtro1Nu83Lyg54tevLCWziAAj amount=0
{color:red}Error: Invalid structure
  Caused by: No inputs for transaction{color};;;",,,,,,,,,,
TAA mustn't be set for SET_FEES transaction,IS-1311,41004,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,Artemkaaas,Artemkaaas,11/Jul/19 6:55 PM,19/Aug/19 7:24 PM,28/Oct/23 2:49 AM,16/Jul/19 12:36 AM,,,,,,,,1.10.1,,,,,,,0,,,,"From a dialog with [~lbendixsen]

I tried set-fees-prepare and it added a taaAcceptance, but when I got it signed and submitted, the error said that TAA was not allowed for that txn type
```
ledger set-fees-prepare payment_method=sov fees=did:5000000000,cred_def:12500000000,schema:25000000000,reg_ref:10000000000,reg_ref_update:50000000,key_rotation:500000000,attrib:500000000,token_xfer:500000000
SET_FEES transaction has been created:
     {""reqId"":1562765905232674000,""identifier"":""4TMD8bT757JqBnmoCiNCc3"",""operation"":{""fees"":{""attrib"":500000000,""cred_def"":12500000000,""did"":5000000000,""key_rotation"":500000000,""reg_ref"":10000000000,""reg_ref_update"":50000000,""schema"":25000000000,""token_xfer"":500000000},""type"":""20000""},""protocolVersion"":2,""taaAcceptance"":{""mechanism"":""Click Agreement"",""taaDigest"":""920e68ff43bf157d657e35fca291baa00f8b14c395cddf6e4b4e156391baf7cd"",""time"":1562765254}}
```
This is on the BuilderNet which has the latest releases on it. 
```
ledger custom {""identifier"":""4TMD8bT757JqBnmoCiNCc3"",""operation"":{""fees"":{""attrib"":500000000,""cred_def"":12500000000,""did"":5000000000,""key_rotation"":500000000,""reg_ref"":10000000000,""reg_ref_update"":50000000,""schema"":25000000000,""token_xfer"":500000000},""type"":""20000""},""protocolVersion"":2,""reqId"":1562765905232674000,""signatures"":{""4TMD8bT757JqBnmoCiNCc3"":""4mSVm4fWiZoCNyq4VdteuDmCdyxrEJxGwJZBeJraeWXeCWpnoPMQbkJ4WMBuhHPJF6n92sXHMxbBYXz8udRgdbhc"",""UBAUw6a1wauQe7Q7TBZFPX"":""dEm5vrjgxnvcEtZMfEru1VF6QU7FTXLhWhvJJLV8xR1H89QMXj4oQYmg6ChD63RKba2A8X4h9HDnUnU5S3irdKg"",""YLCJ5wri6K8asJnHdJXzDP"":""wZ1RuCQyMvUowwycWFFBhrxLuAqeGVaroS5n8jzEpYKBncXZFW3UCT5wku1p4wYbb6UPjxFYwtXGsH4GAaBgCBV""},""taaAcceptance"":{""mechanism"":""Click Agreement"",""taaDigest"":""920e68ff43bf157d657e35fca291baa00f8b14c395cddf6e4b4e156391baf7cd"",""time"":1562765254}}
Transaction response has not been received

```
Log file contains:
```
2019-07-10 15:13:07,384|WARNING|replica.py|FoundationBuilder:0 encountered exception InvalidClientTaaAcceptanceError('Txn Author Agreement acceptance is not expected and not allowed in requests for ledger id 2',) while processing Request: {'signatures': {'4TMD8bT757JqBnmoCiNCc3': '4mSVm4fWiZoCNyq4VdteuDmCdyxrEJxGwJZBeJraeWXeCWpnoPMQbkJ4WMBuhHPJF6n92sXHMxbBYXz8udRgdbhc', 'YLCJ5wri6K8asJnHdJXzDP': 'wZ1RuCQyMvUowwycWFFBhrxLuAqeGVaroS5n8jzEpYKBncXZFW3UCT5wku1p4wYbb6UPjxFYwtXGsH4GAaBgCBV', 'UBAUw6a1wauQe7Q7TBZFPX': 'dEm5vrjgxnvcEtZMfEru1VF6QU7FTXLhWhvJJLV8xR1H89QMXj4oQYmg6ChD63RKba2A8X4h9HDnUnU5S3irdKg'}, 'protocolVersion': 2, 'taaAcceptance': {'taaDigest': '920e68ff43bf157d657e35fca291baa00f8b14c395cddf6e4b4e156391baf7cd', 'time': 1562765254, 'mechanism': 'Click Agreement'}, 'identifier': '4TMD8bT757JqBnmoCiNCc3', 'operation': {'type': '20000', 'fees': {'reg_ref': 10000000000, 'cred_def': 12500000000, 'did': 5000000000, 'reg_ref_update': 50000000, 'schema': 25000000000, 'key_rotation': 500000000, 'token_xfer': 500000000, 'attrib': 500000000}}, 'reqId': 1562765905232674000}, will reject
```",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00te3:r",,,,Unset,Unset,Indy SDK 19.14,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,VladimirWork,,,,,,,,,"11/Jul/19 6:57 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1713;;;","15/Jul/19 7:25 PM;Artemkaaas;Build version: rc 1.10.1~78;;;","16/Jul/19 12:36 AM;VladimirWork;Verified in scope of 1.10.1 RC acceptance testing.;;;",,,,,,,,,
Indy CLI `ledger get-fees` command is broken,IS-1312,41005,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,Artemkaaas,Artemkaaas,11/Jul/19 7:34 PM,19/Aug/19 7:24 PM,28/Oct/23 2:49 AM,16/Jul/19 12:37 AM,,,,,,,,1.10.1,,,,,,,0,,,,"From a dialog with [~lbendixsen]

```
I tried to set and then get fees on the buildernet and got the following. Any suggestions? (the log file on my buildernet server shows nothing, and I am not sure how to use the logger.yml to see logs on my client).
```pool(buildernet):wallet(testnet_wallet):did(4TM...Cc3):indy> ledger custom {""identifier"":""4TMD8bT757JqBnmoCiNCc3"",""operation"":{""fees"":{""attrib"":500000000,""cred_def"":12500000000,""did"":5000000000,""key_rotation"":500000000,""reg_ref"":10000000000,""reg_ref_update"":50000000,""schema"":25000000000,""token_xfer"":500000000},""type"":""20000""},""protocolVersion"":2,""reqId"":1562765905232674000,""signatures"":{""4TMD8bT757JqBnmoCiNCc3"":""4u4c5ArEMgeToL45ikNXN3z8q58F6X4Mpo5VQa165TDBhtCeCW9SuCbZhTYJArK4pubYVZYXtaUTxrLYYbDLspa"",""6feBTywcmJUriqqnGc1zSJ"":""4rSvR6aD488DVV34PeE1D1aagkqASnZUmxEDLLQSeQvNxmNFo17wk972M4GnLrFMtTzb1CE69zDsfA84exfEXc8C"",""UBAUw6a1wauQe7Q7TBZFPX"":""4bE9GEDH9XdXuLWJkUpGjfsTSCKpFXhCAUPPFRmtocchiFp4ZmvP5o5Tn6TUY8L5YpWSTLSUoDgAyXoTmgXVMAiN""}}
Response: 
{""result"":{""ver"":""1"",""txnMetadata"":{""txnTime"":1562773824,""seqNo"":374},""reqSignature"":{""type"":""ED25519"",""values"":[{""from"":""4TMD8bT757JqBnmoCiNCc3"",""value"":""4u4c5ArEMgeToL45ikNXN3z8q58F6X4Mpo5VQa165TDBhtCeCW9SuCbZhTYJArK4pubYVZYXtaUTxrLYYbDLspa""},{""from"":""6feBTywcmJUriqqnGc1zSJ"",""value"":""4rSvR6aD488DVV34PeE1D1aagkqASnZUmxEDLLQSeQvNxmNFo17wk972M4GnLrFMtTzb1CE69zDsfA84exfEXc8C""},{""from"":""UBAUw6a1wauQe7Q7TBZFPX"",""value"":""4bE9GEDH9XdXuLWJkUpGjfsTSCKpFXhCAUPPFRmtocchiFp4ZmvP5o5Tn6TUY8L5YpWSTLSUoDgAyXoTmgXVMAiN""}]},""auditPath"":[""BuermGqRsf96tXwqqFHL8YvRVC5M6QsDmGcufcQCU3QV"",""Ca8oHH5KSU5aUTieyGfrFP7H8sAst57tZTCC59XS8gMY"",""8RCXNmGQRzt6srvWyKBq4mdbSfbUGFXXdKv6KimU6igZ"",""Dzna3Sk4Z8iQqGTV8sZfiwoauRwiCwNnbbjkBGUV9m4o"",""Av7SjPRFnN9BnmKTALSn1JhShGBAr9Atk2dVLiCzPQQr"",""EktsCWeWsxjvTTeP35X6qaqxdEcDWnbdpAQbSeAdhQ6y""],""txn"":{""type"":""20000"",""protocolVersion"":2,""data"":{""fees"":{""schema"":25000000000,""reg_ref_update"":50000000,""cred_def"":12500000000,""reg_ref"":10000000000,""key_rotation"":500000000,""token_xfer"":500000000,""attrib"":500000000,""did"":5000000000}},""metadata"":{""payloadDigest"":""9d3d3b6f9b99afd3616f50c8b5f459eea228d62018f31dab0037630dd7dd9849"",""reqId"":1562765905232674000,""from"":""4TMD8bT757JqBnmoCiNCc3"",""digest"":""f22a87f553b7404065a2eceb9653f72bb63691dcb39c7841d87ce6433e491ea5""}},""rootHash"":""47QcTkreWqwYc6ies4MtVbhMYCZPDKiBTaEu7oC5Weum""},""op"":""REPLY""}
pool(buildernet):wallet(testnet_wallet):did(4TM...Cc3):indy> ledger get-fees payment_method=sov
Wrong data has been received
```",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00te3:i",,,,Unset,Unset,Indy SDK 19.14,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,VladimirWork,,,,,,,,,"11/Jul/19 7:34 PM;Artemkaaas;Fixed in https://github.com/hyperledger/indy-sdk/pull/1713/commits/ada045647db9a3048ec8e9294b94c4a3d9404d7b;;;","15/Jul/19 7:24 PM;Artemkaaas;Build version: rc 1.10.1~78;;;","16/Jul/19 12:37 AM;VladimirWork;Verified in scope of 1.10.1 RC acceptance testing.;;;",,,,,,,,,
Latest libindy-master doesn't worl with latest libsovtoken-master,IS-1313,41013,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,VladimirWork,VladimirWork,VladimirWork,11/Jul/19 11:34 PM,19/Aug/19 7:25 PM,28/Oct/23 2:49 AM,18/Jul/19 6:25 PM,,,,,,,,1.10.1,,,,,,,0,,,,"Build Info:
libindy 1.10.0~1167
python3-indy 1.10.0.dev1167
libsovtoken 0.10.0~74

Steps to Reproduce:
1. Register libsovtoken and initializer as usual.
2. Try to perform any operation with plugin functionality (e.g. create payment address).

Actual Results:
{noformat}
/usr/local/lib/python3.5/dist-packages/indy/payment.py:50: in create_payment_address
    create_payment_address.cb)
/usr/lib/python3.5/asyncio/futures.py:361: in __iter__
    yield self  # This tells Task to wait for completion.
/usr/lib/python3.5/asyncio/tasks.py:296: in _wakeup
    future.result()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Future finished exception=IndyError(<ErrorCode.PaymentUnknownMethodError: 700>, {'backtrace': '', 'message': 'Error: Unknown payment method type\n  Caused by: Unknown payment method sov\n'})>

    def result(self):
        """"""Return the result this future represents.
    
            If the future has been cancelled, raises CancelledError.  If the
            future's result isn't yet available, raises InvalidStateError.  If
            the future is done and has an exception set, this exception is raised.
            """"""
        if self._state == _CANCELLED:
            raise CancelledError
        if self._state != _FINISHED:
            raise InvalidStateError('Result is not ready.')
        self._log_traceback = False
        if self._tb_logger is not None:
            self._tb_logger.clear()
            self._tb_logger = None
        if self._exception is not None:
>           raise self._exception
E           indy.error.IndyError: (<ErrorCode.PaymentUnknownMethodError: 700>, {'backtrace': '', 'message': 'Error: Unknown payment method type\n  Caused by: Unknown payment method sov\n'})

/usr/lib/python3.5/asyncio/futures.py:274: IndyError
{noformat}

Expected Results:
All operation with tokens should be performed successfully after libsovtoken initialization.

Additional Info:
The same steps work without any errors against the latest stable packages.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00te3:w",,,,Unset,Unset,Indy SDK 19.14,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),VladimirWork,,,,,,,,,,"18/Jul/19 6:35 PM;VladimirWork;Build Info:
libindy 1.10.0~1176
libsovtoken 0.10.0~74

Actual Results:
Token operations work as expected.;;;",,,,,,,,,,,
 Compiling rusqlite v0.13.0 error[E0119] on macOS,IS-1314,41117,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,,smithsamuelm,smithsamuelm,13/Jul/19 1:04 AM,02/Aug/19 11:48 PM,28/Oct/23 2:49 AM,02/Aug/19 11:48 PM,,,,,,,,1.11.0,,,,,,,0,,,,"Following the instructions here

[https://github.com/hyperledger/indy-sdk/blob/master/docs/build-guides/mac-build.md]

for build indy-sdk on macOS I get the following error (see below).  All the other rust components build just fine but the rusqlite  has a problem.  I am not a rust developer so I don't really know how to fix it. 

 

$ cargo build

   Compiling rusqlite v0.13.0

error[E0119]: conflicting implementations of trait `std::convert::From<&_>` for type `types::to_sql::ToSqlOutput<'_>`:

  --> /Users/samuel/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.13.0/src/types/to_sql.rs:26:1

   |

18 | / impl<'a, T: ?Sized> From<&'a T> for ToSqlOutput<'a>

19 | |     where &'a T: Into<ValueRef<'a>>

20 | | {

21 | |     fn from(t: &'a T) -> Self {

22 | |         ToSqlOutput::Borrowed(t.into())

23 | |     }

24 | | }

   | |_- first implementation here

25 | 

26 |   impl<'a, T: Into<Value>> From<T> for ToSqlOutput<'a> {

   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `types::to_sql::ToSqlOutput<'_>`

   |

   = note: downstream crates may implement trait `std::convert::From<&_>` for type `types::value::Value`

 

error: aborting due to previous error

 

For more information about this error, try `rustc --explain E0119`.

error: Could not compile `rusqlite`.

 

To learn more, run the command again with --verbose.

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00tws:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,ignisvulpis,smithsamuelm,,,,,,,,"13/Jul/19 3:21 AM;smithsamuelm;Using rust 1.36

 ;;;","13/Jul/19 7:07 AM;smithsamuelm;I was able to get it to build without this error by using rust 1.34.  

I tried sqlite 3.26 but still had error.

 

The CLI builds but with the following warnings

 

Compiling indy v1.10.0 (/Data/Code/public/hyperledger/indy/indy-sdk/wrappers/rust)

warning: variable does not need to be mutable

    --> src/commands/ledger.rs:1026:21

     |

1026 |                 let mut sources: Vec<serde_json::Value> = serde_json::from_str(&sources_json)

     |                     ----^^^^^^^

     |                     |

     |                     help: remove this `mut`

     |

     = note: #[warn(unused_mut)] on by default

 

warning: variable does not need to be mutable

    --> src/commands/ledger.rs:1085:21

     |

1085 |                 let mut receipts: Vec<serde_json::Value> = serde_json::from_str(&receipts_json)

     |                     ----^^^^^^^^

     |                     |

     |                     help: remove this `mut`

 

warning: variable does not need to be mutable

    --> src/commands/ledger.rs:1130:21

     |

1130 |                 let mut fees: HashMap<String, u64> = serde_json::from_str(&fees_json)

     |                     ----^^^^

     |                     |

     |                     help: remove this `mut`

 

warning: variable does not need to be mutable

    --> src/commands/ledger.rs:1133:21

     |

1133 |                 let mut fees =

     |                     ----^^^^

     |                     |

     |                     help: remove this `mut`

 

warning: variable does not need to be mutable

  --> src/commands/payment_address.rs:70:21

   |

70 |                 let mut payment_addresses: Vec<String> = serde_json::from_str(&payment_addresses_json)

   |                     ----^^^^^^^^^^^^^^^^^

   |                     |

   |                     help: remove this `mut`

 

    Finished dev [unoptimized + debuginfo] target(s) in 45.29s;;;","31/Jul/19 4:23 AM;esplinr;It seems like we use an old version of rusqlite, and it's not compatible with the latest version of the Rust compiler.

Downgrading Rust to 1.34.0 appears to solve the problem. Long term, someone should upgrade the rusqlite version.

We tried to migrate to newer rusqlite this week (while trying to use latest Rust) but there are breaking changes in their API.;;;","31/Jul/19 6:41 PM;ignisvulpis;Isn't this fixed now with `rusqlite = ""0.19""` in Cargo.toml?
See https://github.com/hyperledger/indy-sdk/pull/1726;;;","02/Aug/19 11:48 PM;esplinr;Thank you [~ignisvulpis] for your fix, and for your help with keeping the issues up to date!;;;",,,,,,,
file permission changes,IS-1315,41223,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,,mattnorton,mattnorton,16/Jul/19 7:43 AM,10/Aug/19 2:14 AM,28/Oct/23 2:49 AM,10/Aug/19 2:14 AM,,,,,,,,,,,,,,,0,Security,,,"{quote}{quote}{quote}This came from one of our Stewards:
 
From time to time, the following files get their access permissions modified to have world-writable file permissions which is not ideal from a system security perspective:
/usr/local/lib/python3.5/dist-packages/sovtoken/metadata.json
/usr/local/lib/python3.5/dist-packages/sovtokenfees/metadata.json
 
When it happened the first time I set the permissions to read/write for the file's owner and read for group/world. This action was performed around December 17.
 
Could you find out what process would be changing the permissions on these files and/or why it's necessary?{quote}{quote}{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00u1g:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,mattnorton,,,,,,,,,"10/Aug/19 2:08 AM;esplinr;We will track this issue in the backlog for the Sovrin Token:

https://sovrin.atlassian.net/browse/ST-621;;;",,,,,,,,,,,
Support state proofs in GET_TXN,IS-1316,41259,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,esplinr,esplinr,17/Jul/19 10:42 PM,22/Aug/19 12:39 AM,28/Oct/23 2:49 AM,19/Aug/19 8:07 PM,,,,,,,,1.11.1,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1954,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upe:",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"19/Aug/19 8:06 PM;sergey.minaev;Integration and validation would be done in scope of INDY-1954;;;",,,,,,,,,,,
Evaluate Aries agents,IS-1317,41260,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,donqui,esplinr,esplinr,17/Jul/19 10:45 PM,06/Nov/19 12:19 AM,28/Oct/23 2:49 AM,11/Oct/19 9:49 PM,,,,,,,,,,aries,,,,,0,,,,"Evaluate the approaches to Aries agents taken in the following repositories:
 * Aries-CloudAgent-Python
 * Aries-StaticAgent-Python

What functionality should Aries SDK and Indy SDK provide in order to assist these agents?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaj",,,,Unset,Unset,Indy Aries 19.20,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"17/Aug/19 12:29 AM;esplinr;Architectural Deep Dive recording: https://wiki.hyperledger.org/download/attachments/16322546/GMT20190723-ACA_Deep_Dive_1920x1080.mp4?api=v2;;;",,,,,,,,,,,
Official RPMs for CentOS,IS-1318,41265,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,18/Jul/19 1:01 AM,09/Oct/19 12:20 AM,28/Oct/23 2:49 AM,30/Aug/19 6:36 PM,,,,,,,,1.11.1,,deployment,,,,,0,,,,"*Acceptance Criteria*
* RPMs that are analogous to the current DEB packages
* CentOS environments for builds
* Automated tests run

*Notes*
* This is only for Indy SDK. Indy Node work is tracked as the epic INDY-47
* Creating the Yum repository for distribution is tracked as INDY-1000",,,,,,,,,,,,,,,,,,,,,,,,IS-688,,INDY-47,INDY-1000,INDY-580,,IS-152,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00xa0:",,,,Unset,Unset,Indy SDK 19.17,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"28/Aug/19 1:59 PM;esplinr;Our builds for CentOS will replace the builds for Amazon Linux in our pipeline:
* Both distributions are intended to be binary compatible with Red Hat Enterprise Linux.
* CentOS appears to have broader usage.
* CI tests would be duplicative.
* This was approved on the Indy Maintainers call (August 26), and by the administrators of the Sovrin network.;;;","29/Aug/19 5:55 PM;Artemkaaas;Changes: done initial Centos support
- replaced amazon dockerfile on centos 
- added running tests and building .rmp files for Centos during CD pipleine 
- build .rpm artifact for libindy, libnullpay, libvcx, indy-cli
- added uploading .rpm artifact to https://repo.sovrin.org/rpm/

PR: https://github.com/hyperledger/indy-sdk/pull/1860;;;","29/Aug/19 6:33 PM;Artemkaaas;Build version: master-1302;;;","30/Aug/19 6:36 PM;sergey.minaev;New artifacts available at [https://repo.sovrin.org/rpm/];;;",,,,,,,,
Raw and encoded fields of proof ignored during verification,IS-1319,41293,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,lovesh,lovesh,18/Jul/19 5:40 PM,28/Aug/19 4:41 PM,28/Oct/23 2:49 AM,27/Aug/19 10:04 PM,,,,,,,,1.11.1,,,,,,,0,EV-Triaged,TShirt_M,,"The `raw` and `encoded` in the `requested_proof.revealed_attrs` section of proof are ignored during verification. This can lead to a malicious prover to ""forge a proof"" such that the cryptographic proof is over a different data than the non-cryptographic part. The failing tests can be seen [here|[https://github.com/lovesh/indy-sdk/commit/c1e7b5458ebbd9f8d67c18a940fca4e94b8285ec]]. There should be a check in `_get_revealed_attributes_for_credential` to ensure that `encoded` is correctly computed from `raw` and `encoded` matches the corresponding value in `primary_proof. eq_proof.revealed_attrs`.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00x1q:",,,,Unset,Unset,Indy SDK 19.17,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,lovesh,sergey.minaev,,,,,,,"08/Aug/19 10:24 PM;esplinr;Thank you for reporting this. We'll dig into it when we have the chance.;;;","17/Aug/19 6:24 AM;esplinr;Related discussion:
https://forum.sovrin.org/t/verifying-proof-results-in-true-even-if-proof-is-manipulated/1237;;;","20/Aug/19 3:28 PM;Artemkaaas;Problem reason: 
- Libindy didn't compare `encode` values from Proof [requested_proof][revealed_attrs] and CryptoProof.
- Libindy isn't aware of an algorithm used for encoding of attribute values.  So, we can do this check only on an application level.

Changes: 
- Libindy - added check that `encode` values LibindyProof match to values from CryptoProof
- Libvcx - added check that `raw` values match to `encoded` values

PR:
-https://github.com/hyperledger/indy-sdk/pull/1835;;;","27/Aug/19 10:01 PM;sergey.minaev;Build version 1.11.0 master 1295+;;;","27/Aug/19 10:03 PM;sergey.minaev;Functionality merged to master and covered by integration tests. No additional testing required;;;",,,,,,,
CLI: Allow building of transactions without signature,IS-1320,41298,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,Artemkaaas,Artemkaaas,18/Jul/19 9:51 PM,19/Aug/19 7:30 PM,28/Oct/23 2:49 AM,01/Aug/19 8:13 PM,,,,,,,,1.11.0,,,,,,,0,,,,Indy-CLI provides an optional `send` flag which allows building a transaction without sending to the ledger. It will be useful to add a flag which indicates it signing of a transaction is needed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-2170,IS-1341,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upg:",,,,Unset,Unset,Indy SDK 19.15,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,VladimirWork,,,,,,,,"20/Jul/19 12:18 AM;esplinr;https://github.com/hyperledger/indy-sdk/pull/1741;;;","26/Jul/19 2:21 PM;Artemkaaas;Build version: master-1213;;;","01/Aug/19 8:10 PM;VladimirWork;We can apply sign=false to payment txn (but it has no effect). separate ticket will be reported.;;;",,,,,,,,,
Save all CLI commands in history,IS-1321,41300,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,VladimirWork,VladimirWork,18/Jul/19 11:12 PM,08/Aug/19 10:22 PM,28/Oct/23 2:49 AM,08/Aug/19 10:22 PM,,,,,,,,1.11.0,,,,,,,0,,,,We should save not only successful but all commands that we perform in CLI history (it will be very useful for correcting mistakes in commands).,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1307,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00ugk:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,VladimirWork,,,,,,,,,"08/Aug/19 10:22 PM;esplinr;This should be working correctly now.;;;",,,,,,,,,,,
Incorrect error handling in CLI,IS-1322,41319,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,VladimirWork,VladimirWork,VladimirWork,19/Jul/19 5:28 AM,19/Aug/19 7:20 PM,28/Oct/23 2:49 AM,09/Aug/19 11:32 PM,,,,,,,,1.11.1,,,,,,,0,,,,"Build Info:
indy-cli 1.10.0~1182

Steps to Reprodcuce:
1.  Send payment txn using 2 addresses with amount=0.

Actual Results:
{noformat}
Error: Invalid structure
Caused by: No inputs for transaction
{noformat}

Expected Results:
Payment amount must be greater than 0.
",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1310,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upf:r",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),VladimirWork,,,,,,,,,,"09/Aug/19 11:32 PM;VladimirWork;Build Info:
indy-cli 1.11.0~1230

Actual Results:
There is a correct error now.;;;",,,,,,,,,,,
The CLI command 'did rotate-key' fails the first time it is run ,IS-1323,41320,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,lbendixsen,lbendixsen,19/Jul/19 9:24 AM,19/Aug/19 7:20 PM,28/Oct/23 2:49 AM,13/Aug/19 4:40 PM,1.10.0,,,,,,,1.11.1,,,,,,,0,,,,"_Environment_:  Indy CLI v1.10.1 running on a Mac (self built) against the Sovrin BuilderNet running Sovrin version 1.1.50 (indy-node version 1.9.0)

 

_Steps to Reproduce_: 
 # Using a Steward DID run from the CLI  >did rotate-key  (with or without fees, it fails)
 # The first time it runs it returns ""InsufficientCorrectSignatures""
 # run it again, (this time with resume=true)
 # Success occurs after the second time running it
 # see notes below for a ""screenshot"" of sequential commands.  Node logs seem to have no significant data to share. 
 # Using resume=true the first time you run the command also fails (as expected)

 

_Expected Behavior_: 

Should be successful the first time it is run

 

_Observed Behavior_: 

Takes 2 times to get it to work (essentially the same command each time, doing nothing in between)

_Notes_:

The first attempt below is with fees and the second was without fees.  Easy to replicate.

pool(buildernet):wallet(junk2):did(FvN...x1p):indy> did rotate-key fees_inputs=txo:sov:3x42qH8UkJac1BuorqjSEvuVjvYkVVLdWJM2CWsSaX5sCgpHJYLDpodZfpzBqpoeNd9APC8QxEQXPGxZrZDF6yhsVrEzAxESJVfdLxCSkv6NcrQBNcvvqT fees_outputs=(pay:sov:kg6EyqjTRqbaPZztLCBfgH9n5sm4A97LeFRrsxR2HChR69gzB,195000000000)

*Transaction has been rejected: client request invalid: InsufficientCorrectSignatures(0, 1)*

pool(buildernet):wallet(junk2):did(FvN...x1p):indy> did rotate-key fees_inputs=txo:sov:3x42qH8UkJac1BuorqjSEvuVjvYkVVLdWJM2CWsSaX5sCgpHJYLDpodZfpzBqpoeNd9APC8QxEQXPGxZrZDF6yhsVrEzAxESJVfdLxCSkv6NcrQBNcvvqT fees_outputs=(pay:sov:kg6EyqjTRqbaPZztLCBfgH9n5sm4A97LeFRrsxR2HChR69gzB,195000000000)

*Error: Wallet item already exists*

  *Caused by: Wallet item already exists with type: Indy::TemporaryDid, id: FvNxKSeAXgsYj6TEjsfx1p*

 

pool(buildernet):wallet(junk2):did(FvN...x1p):indy> did rotate-key fees_inputs=txo:sov:3x42qH8UkJac1BuorqjSEvuVjvYkVVLdWJM2CWsSaX5sCgpHJYLDpodZfpzBqpoeNd9APC8QxEQXPGxZrZDF6yhsVrEzAxESJVfdLxCSkv6NcrQBNcvvqT fees_outputs=(pay:sov:kg6EyqjTRqbaPZztLCBfgH9n5sm4A97LeFRrsxR2HChR69gzB,195000000000) resume=true

*Verkey on ledger: ycDDp4HyCgUqh9r7VqBJz95D3mi73XGX4shxiJXCtrd*

*Current verkey in wallet: 9kkJnwXRXjF6RJyuMRnHTDXJFHVhDyGdJtb88c4Qkcg6*

*Temp verkey in wallet: ycDDp4HyCgUqh9r7VqBJz95D3mi73XGX4shxiJXCtrd*

*Verkey for did ""FvNxKSeAXgsYj6TEjsfx1p"" has been updated*

*New verkey is ""ycDDp4HyCgUqh9r7VqBJz95D3mi73XGX4shxiJXCtrd""*

pool(buildernet):wallet(junk2):did(FvN...x1p):indy> did rotate-key

*Transaction has been rejected: client request invalid: InsufficientCorrectSignatures(0, 1)*

pool(buildernet):wallet(junk2):did(FvN...x1p):indy> did rotate-key resume=true

*Verkey on ledger: 99SsxyjTjZBch1pGbJBG4aTh3LrFZojJ2cVPPwhDFkrK*

*Current verkey in wallet: ycDDp4HyCgUqh9r7VqBJz95D3mi73XGX4shxiJXCtrd*

*Temp verkey in wallet: 99SsxyjTjZBch1pGbJBG4aTh3LrFZojJ2cVPPwhDFkrK*

*Verkey for did ""FvNxKSeAXgsYj6TEjsfx1p"" has been updated*

*New verkey is ""99SsxyjTjZBch1pGbJBG4aTh3LrFZojJ2cVPPwhDFkrK""*

 

And here is the rotate-key auth_rule on the BuilderNet (formatted to be more readable)*:*
|NYM               |EDIT  |verkey     | *            | *            |

{                             

""auth_constraints"": [      {   

      ""constraint_id"": ""ROLE"",   

      ""metadata"": {},            

      ""need_to_be_owner"": true,  

      ""role"": ""0"",               

      ""sig_count"": 1             

    },                           

    {                            

      ""constraint_id"": ""ROLE"",   

      ""metadata"": {},            

      ""need_to_be_owner"": true,  

      ""role"": ""2"",               

      ""sig_count"": 1             

    },                           

    {                            

      ""constraint_id"": ""ROLE"",   

      ""metadata"": {},            

      ""need_to_be_owner"": true,  

      ""role"": ""101"",             

       ""sig_count"": 1             

    },                           

    {                            

      ""constraint_id"": ""ROLE"",   

       ""metadata"":

{                        ""fees"": ""key_rotation""          }

,                         

     ""need_to_be_owner"": true,  

      ""role"": ""*"",               

      ""sig_count"": 1             

     }                            

  ],                             

  ""constraint_id"": ""OR""          

}                                

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Aug/19 1:10 AM;lbendixsen;indy_cli-07-18.log;https://jira.hyperledger.org/secure/attachment/17667/indy_cli-07-18.log",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upf:i",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,lbendixsen,Toktar,VladimirWork,,,,,,"08/Aug/19 10:08 PM;esplinr;Thank you for the report. This is interesting, because we have a test that explicitly checks key rotation. We will look into it when we have the opportunity.;;;","09/Aug/19 6:30 AM;esplinr;Could this somehow be related to the auth_rules on the Sovrin networks versus the default auth_rules?;;;","12/Aug/19 11:11 PM;Artemkaaas;I haven't managed to reproduce the issue on the local pool.
[~lbendixsen] Could you try to use fresh versions of CLI/Indy-Pool?
And share Indy-SDK logs, please.;;;","13/Aug/19 1:00 AM;lbendixsen;This is working great now with CLI version 1.11.0 and Sovrin version 1.1.52(indy-node 1.9.1) on BuilderNet. What was done to fix this?

In case you are also still curious about the original issue, I will attach CLI logs which start on the date I entered this ticket (not sure if thats what you meant by sdk logs...).;;;","13/Aug/19 1:12 AM;lbendixsen;I tested with and without fees and both are working fine now.;;;","13/Aug/19 4:38 PM;Toktar;We analyzed the logs. The following happened on the pool:
 * NodeA received a request with keys rotation, sent Propagate messages
 * The primary node sent Pre-prepare and all nodes changed their uncommitted state.
 * All nodes received the request, but could not validate it, since it was signed with old keys, which are not correct for the uncommitted state anymore. Therefore, with static validation, all nodes answered the REQNACK message.

This problem did not reproduce on the latest versions, as it was fixed in the scope of the task https://jira.hyperledger.org/browse/INDY-2164;;;","13/Aug/19 4:38 PM;VladimirWork;Looks like the same issue as INDY-2164 so it is fixed.;;;",,,,,
Release Indy SDK 1.11.0,IS-1324,41330,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,KitHat,sergey.minaev,19/Jul/19 10:19 PM,17/Dec/19 12:34 AM,28/Oct/23 2:49 AM,02/Aug/19 10:09 PM,,,,,,,,1.11.0,,,,,,,0,,,,"*Release Goal*
Release everything that is ready. Especially:
* Flexible attribute tagging
* Improvements to offline signing

*Acceptance Criteria*
Regular instructions:
* Code is tested
* Review upstream releases to decide what should be included in this build
** Ursa
* Build is produced with automated CI / CD
** Official build is tagged as released in Git
** Official builds should be the only builds that are not marked in GitHub as ""pre-release""
* Prepare basic documentation on new features
* Prepare the Release Notes
** Link to the documentation on new features
** Stored as a CHANGELOG.md in the root of the repo
** Latest release at the top, above the release notes for all previous versions
* The release should be on GitHub “Releases” tab.
** Release notes should be in the “Description"" field of the GitHub release artifact
* The release is marked in JIRA
* Add the correct fixVersion to included issues
* Enable others to use the release:
** Email stakeholders with links to the artifacts and release notes",,,,,,,,,,,,,,,,,,,,,IS-1454,,IS-1290,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,"1|hzwrhj:910sx09000004",,,,,,Indy SDK 19.15,,,,,,5.0,,,,,,,,,,,,Artemkaaas,esplinr,KitHat,sergey.minaev,VladimirWork,,,,,,"31/Jul/19 4:58 PM;Artemkaaas;Release preparation was done in PR: https://github.com/hyperledger/indy-sdk/pull/1772;;;","01/Aug/19 3:45 PM;Artemkaaas;Build version:  1.11.0 rc-81;;;","01/Aug/19 8:56 PM;VladimirWork;IS-1341 and IS-1342 were found during RC testing.;;;",,,,,,,,,
Transaction authors don't need to be endorsers,IS-1325,41333,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,19/Jul/19 11:14 PM,19/Aug/19 7:30 PM,28/Oct/23 2:49 AM,31/Jul/19 1:22 AM,,,,,,,,1.11.0,,,,,,,0,,,,"SDK side of the work to allow tracking authors separate from endorsers.

*Acceptance Criteria*
 * API changes as described in [https://github.com/hyperledger/indy-node/blob/master/design/transaction_endorder.md]
 * Make sure that `sign_request` and `multi_sign_request` can be called interchangeably",,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1999,IS-1339,IS-1337,,INDY-2173,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upu:",,,,Unset,Unset,Indy SDK 19.15,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,VladimirWork,,,,,,,,"29/Jul/19 9:18 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1768;;;","31/Jul/19 1:22 AM;VladimirWork;Build Info:
indy-node 1.9.1~dev1043
plugins 1.0.1~dev69
libindy 1.10.1~1218

Actual Results:
Feature works as expected, system test has been implemented https://github.com/VladimirWork/indy-test-automation/blob/be88d93f38e4c2310a950e5e05acac261e2d8f8a/system/draft/test_misc.py#L1202;;;",,,,,,,,,,
Client communication shouldn't use ZeroMQ,IS-1326,41334,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,20/Jul/19 12:02 AM,21/Jan/20 9:07 AM,28/Oct/23 2:49 AM,,,,,,,,,,,libindy,,,,,0,,,,"*Story*
As a user of an application designed for an Indy network, I want the application to be able to talk to the ledger without my having to get special ports opened on the firewall.

*Acceptance Criteria*
* Client communication should use a standard port such as 80 or 443
* Client communication should also be standard for the port is uses so that it passes deep packet inspection

*Notes*
* Because agent communication is encrypted by default, we might prefer to use port 80.",,,,,,,,,,,,INDY-1085,,,,,,,,,,,,,,IS-1471,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910x2",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"10/Oct/19 9:08 PM;esplinr;Some users of Indy prefer that we use ZeroMQ because it is a well known protocol such that system administrators expect to enable it across the firewall.

They also expressed that at this point ZeroMQ is well understood, tested, and reliable. They wouldn't want us moving to something less reliable.;;;",,,,,,,,,,,
Test failed,IS-1327,41345,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,MichaelWang,MichaelWang,22/Jul/19 12:18 PM,20/Aug/19 6:38 PM,28/Oct/23 2:49 AM,16/Aug/19 10:30 PM,,,,,,,,1.11.1,,,,,,,0,EV-Triaged,TShirt_S,,"After I built the indy sdk from source, I run the test cases as the doc of github.

But two cases failed. I enabled the backtrace and paste the log below:
{code:java}
failures:---- crypto_demo_works stdout ----
thread 'main' panicked at 'assertion failed: `(left == right)`
  left: `Success`,
 right: `WalletAlreadyExistsError`', tests/demo.rs:772:5
stack backtrace:
   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace
   1: std::sys_common::backtrace::print
   2: std::panicking::default_hook::{{closure}}
   3: std::panicking::default_hook
   4: std::panicking::rust_panic_with_hook
   5: std::panicking::continue_panic_fmt
   6: std::panicking::begin_panic_fmt
   7: demo::crypto_demo_works
             at tests/demo.rs:772
   8: demo::crypto_demo_works::{{closure}}
             at tests/demo.rs:749
   9: core::ops::function::FnOnce::call_once
             at /usr/src/rustc-1.35.0/src/libcore/ops/function.rs:231
  10: <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once
  11: __rust_maybe_catch_panic
  12: test::run_test::run_test_inner
  13: test::run_test
  14: test::run_tests_console
  15: test::test_main
  16: test::test_main_static
  17: demo::main
  18: std::rt::lang_start::{{closure}}
             at /usr/src/rustc-1.35.0/src/libstd/rt.rs:64
  19: std::panicking::try::do_call
  20: __rust_maybe_catch_panic
  21: std::rt::lang_start_internal
  22: std::rt::lang_start
             at /usr/src/rustc-1.35.0/src/libstd/rt.rs:64
  23: main
  24: __libc_start_main
  25: _start---- ledger_demo_works stdout ----
thread 'main' panicked at 'assertion failed: `(left == right)`
  left: `Success`,
 right: `WalletAlreadyExistsError`', tests/demo.rs:558:5
stack backtrace:
   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace
   1: std::sys_common::backtrace::print
   2: std::panicking::default_hook::{{closure}}
   3: std::panicking::default_hook
   4: std::panicking::rust_panic_with_hook
   5: std::panicking::continue_panic_fmt
   6: std::panicking::begin_panic_fmt
   7: demo::ledger_demo_works
             at tests/demo.rs:558
   8: demo::ledger_demo_works::{{closure}}
             at tests/demo.rs:483
   9: core::ops::function::FnOnce::call_once
             at /usr/src/rustc-1.35.0/src/libcore/ops/function.rs:231
  10: <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once
  11: __rust_maybe_catch_panic
  12: test::run_test::run_test_inner
  13: test::run_test
  14: test::run_tests_console
  15: test::test_main
  16: test::test_main_static
  17: demo::main
  18: std::rt::lang_start::{{closure}}
             at /usr/src/rustc-1.35.0/src/libstd/rt.rs:64
  19: std::panicking::try::do_call
  20: __rust_maybe_catch_panic
  21: std::rt::lang_start_internal
  22: std::rt::lang_start
             at /usr/src/rustc-1.35.0/src/libstd/rt.rs:64
  23: main
  24: __libc_start_main
  25: _start
failures:
    crypto_demo_works
    ledger_demo_workstest result: FAILED. 9 passed; 2 failed; 0 ignored; 0 measured; 0 filtered out
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00x1s:",,,,Unset,Unset,Indy SDK 19.17,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,MichaelWang,,,,,,,,"08/Aug/19 10:20 PM;esplinr;Thank you for reporting this problem. We will dig into it when we have the chance.;;;","12/Aug/19 11:43 PM;Artemkaaas;These tests are run on every time during our continuous integration process.
They work for me on my local machine also.
`WalletAlreadyExistsError` means that there are wallets with the same name at .indy_client folder. The cleaning of this folder should help.;;;","16/Aug/19 10:30 PM;esplinr;We think we have improved the reliability of this test as part of our work to improve the performance of tests in general: IS-1345;;;",,,,,,,,,
Create public apt repository for Ubuntu 18.04,IS-1328,41350,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,sergey.minaev,sergey.minaev,22/Jul/19 10:47 PM,19/Aug/19 7:30 PM,28/Oct/23 2:49 AM,01/Aug/19 4:39 PM,,,,,,,,1.11.1,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900r",,,,Unset,Unset,Indy SDK 19.15,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"01/Aug/19 4:39 PM;Artemkaaas;`upload_debs.py` support --distro flag.
Updated CD pipeline to specify either xenial or bionic release chanel;;;",,,,,,,,,,,
Support `need_to_be_on_ledger` flag for auth rules,IS-1329,41388,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,VladimirWork,VladimirWork,24/Jul/19 11:52 PM,19/Aug/19 7:30 PM,28/Oct/23 2:49 AM,30/Jul/19 4:00 PM,,,,,,,,1.11.0,,,,,,,0,,,,Libindy should support `need_to_be_on_ledger` flag for auth rules (INDY-2171).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00ups:",,,,Unset,Unset,Indy SDK 19.15,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,VladimirWork,,,,,,,,,"26/Jul/19 2:20 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1761;;;","26/Jul/19 2:20 PM;Artemkaaas;Build version: master-1213;;;","30/Jul/19 4:00 PM;VladimirWork;Verified in scope of INDY-2171.;;;",,,,,,,,,
POA: Fully qualified DID in Indy SDK,IS-1330,41448,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,,esplinr,esplinr,26/Jul/19 10:52 PM,30/Jul/19 12:00 AM,28/Oct/23 2:49 AM,30/Jul/19 12:00 AM,,,,,,,,,,,,,,,0,,,,"*Story*
As a developer building on top of Indy, I need to be able to use fully qualified DIDs in my code so that I can work with peer DIDs or DIDs from other ledgers.

*Goal*
* Minimize changes required to Indy Node
* A configuration parameter exists for the fully qualified DID prefix that is not required when communicating with an Indy ledger.
* If DIDs returned from the ledger do not contain the DID prefix, it should be added when communicating with applications through the APIs

*Acceptance Criteria*
* An architecture proposal is prepared
* The architecture proposal includes a plan for managing DIDs from multiple ledgers in the wallet
* Issues exist for the remaining work

*Notes*
* At some point in the future, Aries wallets will contain DIDs from different ledgers. Our current work should move us toward that goal.
** Options
*** Convert legacy DIDs in the wallet to include the prefix
*** Detect DIDs that do not start ""did:"" and treat these as legacy DIDs that need the prefix
*** Other?",,,,,,,,,,,,,,,,,,,,,,,,IS-451,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009d",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Static Peer DID,IS-1331,41449,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,26/Jul/19 10:52 PM,10/Oct/19 12:05 AM,28/Oct/23 2:49 AM,,,,,,,,,,,aries,,,,,0,,,,"*Story*
As a developer building applications in the Aries ecosystem, I want to be able to maintain a connection with a peer DID that does not require shared state.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009fr",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"10/Oct/19 12:05 AM;esplinr;Could start with Daniel's implementation in Python as a basis:
https://github.com/dhh1128/pypeerdid;;;",,,,,,,,,,,
POA Dynamic Peer DID,IS-1332,41450,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,26/Jul/19 10:52 PM,27/Aug/19 10:25 PM,28/Oct/23 2:49 AM,,,,,,,,,,,aries,,,,,0,,,,"*Story*
As a developer building applications in the Aries ecosystem, I want to be able to maintain a connection with a peer DID that requires shared state.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009g",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Document Generator Point,IS-1333,41451,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ignisvulpis,ignisvulpis,26/Jul/19 10:59 PM,30/Jan/20 10:01 PM,28/Oct/23 2:49 AM,22/Jan/20 8:23 PM,,,,,,,,1.14.2,,,,,,,0,EV-Triaged,help-wanted,,"Indy and Plenum are using a constant that is the generator point for keys used for the signatures.

`""3LHpUjiyFC2q2hD7MnwwNmVXiuaFbQx2XkAFJWzswCjgN1utjsCeLzHsKk1nJvFEaS4fcrUmVAkdhtPCYbrVyATZcmzwJReTcJqwqBCPTmTQ9uWPwz6rEncKb2pYYYFcdHa8N17HzVyTqKfgPi4X9pMetfT3A5xCHq54R2pDNYWVLDX""`

[https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/services/pool/request_handler.rs#L66]

[https://github.com/hyperledger/indy-plenum/blob/master/crypto/bls/indy_crypto/bls_crypto_indy_crypto.py#L19]

 

The documentation should explain the value of the constant and what properties it has.

Also why plenum and libindy _need_ to have the same constant and what happens when the values differ.

 

One outcome of the discussion and the documentation could be that libindy needs to get the value from the pool config or genesis file of the pool if a pool is using a different constant then the hardcoded one in Plenum.

 

I stumbled upon this in this PR [https://github.com/hyperledger/indy-sdk/pull/1739]

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzw",,,,Unset,Unset,Indy Aries 20.01,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,ignisvulpis,MikeLodder,sergey.minaev,,,,,,,"27/Jul/19 12:43 AM;MikeLodder;The reason the same generator is used is to correctly implement an aggregated BLS signature, the generators need to be the same otherwise signatures will not validate. The same is true for multi-signatures. Implementations normally use the base generator for the given curve. The current implementation is using BN254 and the base generator for that curve is Rbu3R4xPcZA3Kw4zAfQ4FX4TA92nXH3y8BaNNV9bY1bj5dz5Aws1Dw6ve8vapjT8zLzkeftpEGCeRuS5sX25So1FgUJxiwyM1wvhDdqUvfU9qBT7vDc7fhxekqTm7kiYRjMidEyxKrGHStEipBvWEvHjtN9YE5XE5onuPkvACj2jaw.

The code shows they multiply this base generator by a random field order element in order to calculate Indy's generator. So there isn't any specific structure going on here that I can see. They can document that they multiplied the base generator by a random scalar and that's it. I don't know the reasoning for this but I view it as a form of domain separation, meaning these BLS signatures are specific to the indy ledger and are not meant to be used anywhere else.

 ;;;","08/Aug/19 10:18 PM;esplinr;Thanks for asking the question [~ignisvulpis]. I wasn't previously aware of this requirement.

There isn't a good place in the documentation for this type of information, because it is really low level and not directly related to other parts of the architecture.

Maybe it should be a comment in the code?;;;","22/Jan/20 8:23 PM;sergey.minaev;Documented in https://github.com/hyperledger/indy-sdk/pull/2045 PR;;;",,,,,,,,,
Improve architecture documentation for Indy SDK,IS-1334,41480,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,29/Jul/19 11:20 PM,12/Aug/19 5:37 AM,28/Oct/23 2:49 AM,08/Aug/19 8:51 PM,,,,,,,,1.11.1,,,,,,,0,,,,"*Acceptance Criteria*
* Relevant architecture diagrams that already exist should be added to the design folder of the repository
* Key parts of the Indy SDK architecture should be documented
** Threading model
** Language bindings",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-320,,,No,,Unset,No,,,"1|hzwrhj:910sx09000092",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,KitHat,VladimirWork,,,,,,,,"08/Aug/19 6:22 PM;KitHat;https://github.com/hyperledger/indy-sdk/pull/1784
Added new documents:
* [How to add a new API call|https://github.com/hyperledger/indy-sdk/blob/master/docs/how-tos/how-to-add-a-new-API-call.md]
* [Language Bindings|https://github.com/hyperledger/indy-sdk/blob/master/docs/architecture/language-bindings.md]
* [Threading model|https://github.com/hyperledger/indy-sdk/blob/master/docs/architecture/threading-model.md]

Updated [Indy SDK components|https://github.com/hyperledger/indy-sdk/blob/master/docs/architecture/indy-sdk-components.svg] diagram;;;","08/Aug/19 8:50 PM;VladimirWork;Updated documentation looks good.;;;",,,,,,,,,,
Implement sign_with_address/verify_with_address calls in wrappers,IS-1335,41483,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,KitHat,KitHat,30/Jul/19 12:09 AM,19/Aug/19 7:29 PM,28/Oct/23 2:49 AM,01/Aug/19 6:01 PM,,,,,,,,1.11.0,,,,,,,0,,,,"Currently sign_with_address/verify_with_address are implemented only in Rust wrapper. We need this functionality in all wrappers.

*Acceptancce criteria*:
* Calls are implemented in Java, NodeJS, iOS and Python wrappers
* Tests in these wrappers also implemented",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1336,,,,IS-1342,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upv:",,,,Unset,Unset,Indy SDK 19.15,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,KitHat,VladimirWork,,,,,,,,"31/Jul/19 2:27 PM;Artemkaaas;Build version: master-1220;;;","01/Aug/19 6:01 PM;KitHat;All wrappers has mentioned functions and they work as expected ;;;","01/Aug/19 8:18 PM;VladimirWork;There is no autocompletion for sign and verify commands, separate ticket will be reported.;;;",,,,,,,,,
Implement sign_with_address/verify_with_address in LibVCX,IS-1336,41484,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,KitHat,KitHat,30/Jul/19 12:10 AM,30/Sep/19 11:55 PM,28/Oct/23 2:49 AM,15/Aug/19 7:03 PM,,,,,,,,1.11.1,,,,,,,0,,,,"Right now sign_with_address/verify_with_address functionality is not available to LibVCX.
Plan of Attack:
* Specify usecases for VCX and this functionality
* Design new calls
* Implement them and needed tests",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1335,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009ej",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,DouglasWightman,KitHat,sergey.minaev,,,,,,,"06/Aug/19 10:49 PM;KitHat;As far as we can see right now, the most proficient way to expose this functionality through two calls that will allow to use libindy straightforwardly
1. {{vcx_sign_with_payment_address}} allows to sign some info with payment address
{code:java}
pub extern fn vcx_sign_with_payment_address(command_handle: u32,
                                                                            payment_address: *const c_char,
                                                                            message_raw: *const u8,
                                                                            message_len: u32,
                                                                            cb: Option<extern fn(xcommand_handle: u32, err: u32, 
                                                                                                              signed_message: *const c_char)>)
{code}
2. {{vcx_verify_with_payment_address}} allows to verify some info with payment address
{code:java}
pub extern fn vcx_sign_with_payment_address(command_handle: u32,
                                                                            payment_address: *const c_char,
                                                                            message_raw: *const u8,
                                                                            message_len: u32,
                                                                            signature_raw: *const u8,
                                                                            signature_len: u32,
                                                                            cb: Option<extern fn(xcommand_handle: u32, err: u32, 
                                                                                                              result: bool)>)
{code}

They will also be implemented in wrappers.
If you wish some other experience from libvcx, please contact us.;;;","07/Aug/19 1:36 AM;DouglasWightman;I think the second example is mislabeled.

 

I wonder if there is a way to merge these APIs with the already existing ""vcx_connection_sign_data()"" and ""vcx_connection_verify_signature()"". Maybe the payment address is optional and if it is present then it will be used rather than the pairwise verkey.;;;","09/Aug/19 7:42 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1794;;;","14/Aug/19 10:08 PM;Artemkaaas;Build versions: master-1254;;;","15/Aug/19 7:04 PM;sergey.minaev;Feature available in master and covered by integration and unit tests.;;;",,,,,,,
Make Indy-CLI support endorser,IS-1337,41496,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,Artemkaaas,Artemkaaas,30/Jul/19 5:32 PM,09/Aug/19 4:59 PM,28/Oct/23 2:49 AM,09/Aug/19 4:59 PM,,,,,,,,1.11.1,,,,,,,0,,,,"Libindy provides `indy_append_request_endorser` that allows appending Endorser to an existing request.
It allows writing transactions to the ledger with preserving an original author but by different Endorser.

We need to update Indy-CLI to provide a way of adding endorser to request and sending them to the ledger. 
Also, we need to update CLI output in reading requests to print endorser if it presents.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1999,IS-1339,IS-1325,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eo",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,VladimirWork,,,,,,,,"05/Aug/19 8:19 PM;Artemkaaas;There are the following ways of setting `endorser` to request in CLI:
1) adding `endorser` parameter to a related ledger command. For example `ledger nym did=VsKV7grR1BUE29mG2Fm2kX endorser=NcYxiDXkpYi6ov5FcYDi1e`
In this case, CLI does the building of a request that an author has to transfers to an endorser. 
Note that some ledger commands have an optional `sign` and `send` parameters. I suggest throwing an error if their values contradict to `endorser` logic.
2) to add separate function `set-endorser` that append endorser field to the provided request.

Although CLI already provides `multi-sign` and `send custom transaction` commands that cover steps required to endorse the provided request, I suggest adding a separate `ledger endorse-request` command to do both actions.;;;","05/Aug/19 10:53 PM;esplinr;After discussion of the team, we think that option 1 fits in with the current CLI flow. Appending an endorser flag will imply send=false so the transaction is prepared to pass to the endorser.;;;","06/Aug/19 6:06 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1788;;;","08/Aug/19 6:16 PM;Artemkaaas;Changes:
* Added optional `endorser` parameter to domain related commands to set transaction endorser.
* Added new command `ledger endorse` to send prepared transaction by an endorser. 

Build version: master-1230
;;;","09/Aug/19 4:58 PM;VladimirWork;Build Info:
indy-cli 1.11.0~1230

Actual Results:
`endorser` parameter and `ledger endorse` works correctly.;;;","09/Aug/19 4:59 PM;VladimirWork;Available for NYM, ATTRIB, SCHEMA, CRED DEF.;;;",,,,,,
Testing for libindy on MacOS hangs indefinitely,IS-1338,41524,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,SteveGoob,SteveGoob,SteveGoob,31/Jul/19 2:42 AM,16/Sep/19 9:24 PM,28/Oct/23 2:49 AM,16/Sep/19 9:24 PM,,,,,,,,1.12.0,,libindy,,,,,0,EV-Triaged,help-wanted,TShirt_M,"Specifically, `medium_cases::open::open_pool_ledger_works_after_error` inside libindy's `pool` test module.

*Note:* We did not catch this regression because CI/CD does not actually run mac tests for anything other than libvcx right now. We should probably change that as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-192,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eo99",,,,Unset,Unset,Indy SDK 19.18,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,SteveGoob,,,,,,,,"08/Aug/19 10:15 PM;esplinr;Builds for OSX are being tracked in IS-192.;;;","04/Sep/19 1:52 PM;Artemkaaas;Changes: 
- We updated our CI/CD pipelines to run libindy tests with pool in the scope of IS-192.
CI launches only high cases of libindy tests. 
CD launches all tests.
All pool related tests passed during CD including `medium_cases::open::open_pool_ledger_works_after_error`.
So, there is no regression. Looks like you have an issue with the environment.
Here is the link to jenkins build: https://build.sovrin.org/job/indy-sdk/job/indy-sdk-cd/job/master/1313/execution/node/1035/log/?consoleFull

PR:
- https://github.com/hyperledger/indy-sdk/pull/1872


Version:
- master-1313;;;",,,,,,,,,,
POA: Make Libvcx support endorser,IS-1339,41533,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,Artemkaaas,Artemkaaas,31/Jul/19 4:26 PM,08/Aug/19 6:25 PM,28/Oct/23 2:49 AM,08/Aug/19 6:25 PM,,,,,,,,,,,,,,,0,,,,"Libindy provides `indy_append_request_endorser` that allows appending Endorser to an existing request.
 It allows writing transactions to the ledger with preserving an original author but by different Endorser.
 We need to update Libvcx to support endorser functionality.

*Goals*
 * See the story and goals in INDY-1999

*Acceptance Criteria*
* Analyze the work required.
* Raise issues for completing the work.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1337,,,,INDY-1999,IS-1325,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx09000094",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,DouglasWightman,,,,,,,,,"06/Aug/19 7:52 PM;Artemkaaas;In the current state, Libvcx provides functionality for the publishing of 2 types of entities that can ve endorsed:
* Schema
* Credential Definition 

There are similar functions for these entities `vcx_schema/credentialdef_create` which does building and sending of a transaction to the ledger at the same time.

I suggest:
1. adding of new functions  `vcx_schema/credentialdef_prepare_for_endorser` functions which only build correspondent request and sign by author.  
    
{code:java}
pub extern fn vcx_schema_prepare_for_endorser(command_handle: u32,
                                              source_id: *const c_char,
                                              schema_name: *const c_char,
                                              version: *const c_char,
                                              schema_data: *const c_char,
                                              endorser: *const c_char,
                                              cb: Option<extern fn(xcommand_handle: u32, err: u32, 
                                                                   schema_transaction: *const c_char)>)
{code}


There are two options regarding `endorser`:
    * endorser can be explicitly passed as the parameter (as at the example above)
    * endorser can be specified either (as part of a config) on VCX initialization or `vcx_set_endorser`(new function)  and next used all times implicitly.   (probable add function to unset `endorser`)
     
2. adding of new function `vcx_endorse_transaction` which sign and send request from endorser side.  

{code:java}
pub extern fn vcx_endorse_transaction(command_handle: u32,
                                      transaction: *const c_char,
                                      cb: Option<extern fn(xcommand_handle: u32, err: u32)>)
{code}


There is no support of NYM, Attrib, RevocReg transactions in the current state. 

[~esplinr] [~DouglasWightman] [~sergey.minaev] what do you think?;;;","07/Aug/19 1:25 AM;DouglasWightman;From the endorser side this all seems fine. The Schema is a pretty easy case and I think this will work well. However, if the endorser writes a cred_def to the ledger then there will be some bits of data needed by the other party (the non-endorser?) in order for them to have a valid VCX cred_def object for issuing credentials. In other words: How do these utilities translate to the non-endorser calling ""vcx_credentialdef_create()"" and getting back a valid cred_def handle that can be used when issuing/revoking?;;;","07/Aug/19 3:02 PM;Artemkaaas;Good point. I was thinking about the creation of the internal object state on `_prepare_for_endorser` and returning handle immediately. 
I guess non-endorser already has all information required for issuing (need to recheck).  
The question here if we need to introduce some `state` field that indicates that CredDef can be used for issuing (if it was published to the ledger) and `update_state` or 'check_is_published'  function to activete it. 

* vcx_schema_prepare_for_endorser - prepare transaction, store object, set state as Built - can't be used for credential issuing
* vcx_schema_update_state - check schema is published on the ledger, set state as Published
* vcx_schema_get_state - get current state;;;",,,,,,,,,
Mac installer fails when some brew formulas are already installed,IS-1340,41550,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,theoturner,theoturner,theoturner,01/Aug/19 2:18 AM,08/Aug/19 10:09 PM,28/Oct/23 2:49 AM,08/Aug/19 10:09 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00vqr:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,theoturner,,,,,,,,,"06/Aug/19 6:44 AM;esplinr;PR: https://github.com/hyperledger/indy-sdk/pull/1775;;;","08/Aug/19 10:09 PM;esplinr;Thanks for the contribution!;;;",,,,,,,,,,
Do not allow sign option for payment command,IS-1341,41561,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,VladimirWork,VladimirWork,VladimirWork,01/Aug/19 8:20 PM,19/Aug/19 7:17 PM,28/Oct/23 2:49 AM,07/Aug/19 7:53 PM,,,,,,,,1.11.1,,,,,,,0,TShirt_S,,,"Build Info:
indy-cli 1.11.0~81 (rc)

Actual Results:
We can pass sign={true/false} parameter to payment command (but it has no effect since txn will be signed anyway).

Expected Results:
We should not allow use this parameter for payment.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1320,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eic",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,VladimirWork,,,,,,,,,"05/Aug/19 8:04 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1778;;;","07/Aug/19 3:37 PM;Artemkaaas;Build version: master-1225;;;","07/Aug/19 7:53 PM;VladimirWork;Build Info:
indy-cli 1.11.0~1225

Actual Results:
There is no `sign` parameter for payment command.;;;",,,,,,,,,
Autocompletion for sign and verify CLI commands,IS-1342,41562,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,VladimirWork,VladimirWork,VladimirWork,01/Aug/19 8:23 PM,19/Aug/19 7:17 PM,28/Oct/23 2:49 AM,07/Aug/19 7:53 PM,,,,,,,,1.11.1,,,,,,,0,TShirt_S,,,"Build Info:
indy-cli 1.11.0~81 (rc)

Actual Results:
There is no autocompletion for parameters in new sign and verify commands in CLI.

Expected Results:
Parameters autocompletion should work for every command in CLI.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1335,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009ei9",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,VladimirWork,,,,,,,,,"05/Aug/19 8:03 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1778;;;","07/Aug/19 3:36 PM;Artemkaaas;Build version: master-1225;;;","07/Aug/19 7:53 PM;VladimirWork;Build Info:
indy-cli 1.11.0~1225

Actual Results:
Autocompletion works for `sign` and `verify` commands as expected.;;;",,,,,,,,,
Update Apache Milagro,IS-1343,41614,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,02/Aug/19 11:57 PM,10/Oct/19 8:43 PM,28/Oct/23 2:49 AM,,,,,,,,,,,indycrypto,,,,,0,,,,"*Acceptance Criteria*
* Switch dependency from the amcl crate maintained by Evernym to the official miracl-amcl crate through a PR to Ursa.
* Deprecate the amcl crate maintained by Evernym.

*Notes*
* The current crate:
https://crates.io/crates/amcl
* The official crate:
https://crates.io/crates/miracl_amcl

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx09009i",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"10/Oct/19 8:43 PM;esplinr;We are waiting on Ursa to prepare an updated AMCL crate.;;;",,,,,,,,,,,
Split the tests,IS-1344,41632,36613,Sub-task,New,IS,Indy SDK,software,resplin,,,Medium,,,ignisvulpis,ignisvulpis,05/Aug/19 2:50 PM,05/Aug/19 2:50 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Split the tests in two.

Those which can run in parallel and those which access global resources which need to run in one thread.

Change the CI scripts to run the first group in parallel and the second group as they are run now.

 

(remove global resources: protocol version, logger, common wallet and pools in tests)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00w6b:",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ignisvulpis,,,,,,,,,,,,,,,,,,,,,
Reduce load on CI pipeline for PRs (PoA + impl),IS-1345,41640,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,esplinr,esplinr,05/Aug/19 11:13 PM,28/Aug/19 4:41 PM,28/Oct/23 2:49 AM,28/Aug/19 4:41 PM,,,,,,,,1.11.1,,build-delivery-pipelines,,,,,0,,,,"The CI pipeline is not keeping pace with the PRs.

Example options:
* Increase resources
* Evaluate which tests are required to have confidence in a PR, and which tests can be run less frequently (such as a nightly build)

Acceptance Criteria
* Evaluate the concern
* Share findings on the Indy mailing list
* Present in an Indy Maintainers call
* Create issues for follow up work",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00x1k:",,,,Unset,Unset,Indy SDK 19.17,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"16/Aug/19 2:26 PM;Artemkaaas;Different builds have different levels of assurance:
* PR builds execute all tests on one platform (Ubuntu 18.04), and a reduced set of tests on other platforms (Ubuntu 16.04, CentOS, MacOS, Windows, iOS, Android).
* We have a separate set of builds that increases the level of testing on all platforms, to be run for releases. Derivative builds (Ubuntu 16.04) will still have a reduced set of tests. Android builds will also need a reduced set of tests (item 6). Wrapper builds will also have a reduced set of tests (item 1).

Options:
1) For all builds, we would run wrappers tests only for Ubuntu 18.04 (don't run on Ubuntu 16.04, Amazon, or CentOS)
    We don't expect issues between platforms for most wrappers, because they are platform independent languages.
    We can't think of examples of bugs in wrappers that impact only a single platform, so we see the additional test execution as redundant.

2) limit the number of Libindy integration tests run for PRs (for example run tests classified as medium and low priority only on Ubuntu 18.04).
    Configure a regular build that runs the full test suite on all platforms--each weekend and each release. The frequency of the full test build should be configurable.

3) to refactor libindy tests to avoid opening useless wallet/pool and performing other optional steps.

4) to reduce the number of tests for wrappers (leave only positive cases and cases related to specific error). Today there is a lot of duplication with tests that are executed at lower levels.
    Remove tests that are completely duplicative
    Tests that only provide a small additional level of assurance should be reserved for advanced test runs (releases) instead of regular runs (PRs).

6) android - run only interaction tests, and skip the unit tests.
    Currently executing the full set of Android tests takes more than 3 hours, for a single architecture, so we are already executing a reduced set. The current set of tests is the unit tests and interaction tests which take 1 hour to execute. We only test a single architecture: Arm7.
    Bottleneck is that our test environments do not support hardware emulation for Android devices, and software emulation is very slow.
    iOS device emulation is much faster.
    We should investigate AWS solutions for mobile testing.

7) to add an environment variable to return hardcoded `CredDef`.
     Decided against this: it's complicated and doesn't provide much benefit.

8) serialize parts of a single build by running wrappers tests on the same node to build container/ run pool/ close pool only once.
    This would cause the build to only block one CI node instead of four, allowing other builds to proceed, but build time for LibIndy wrappers will go from 6 minutes to 15 minutes, within the full pipeline that takes 90 minutes.
    *Feedback from Ken: Please evaluate going from 4 to 2, instead of 4 to 1.*

9) Don't run builds on pull requests that have [Skip CI] in the PR subject

10) Configure Jenkins to only allow a single active build per pull request; a new commit on the same PR will cancel the in-progress build and start a new one.

If in the future we find:
* The weekend builds block PR testing, then we can scale back the included tests more.
* The SDK builds block Indy Node development, we can reserve some CI nodes for Indy Node builds.
* If we see wrapper bugs that are specific to an OS, we will increase testing for all the OSs.;;;","21/Aug/19 12:01 AM;esplinr;Further discussion:
* We will not configure weekend builds immediately, but will only do the deep testing on release builds. We can re-evaluate if we see surprise bugs during release testing.
* Serializing the builds onto a single machine doesn't cost much in terms of the full pipeline, but has a lot of benefits in how the infrastructure is used. So we will keep it on a single node.;;;","27/Aug/19 12:24 AM;esplinr;Option 10 is not supported on our Jenkins configuration, so we will postpone it.;;;","28/Aug/19 4:31 PM;sergey.minaev;More about 8)
Count of parallel instances - distribution time - total time:
1 - 16m
2 - ~10 + ~6 = 16m
4 - 3.29 + 2.33 + 4.00 + 6.33 = 16,5m
So there is no big reason to take multiply instances and block other PRs;;;","28/Aug/19 4:40 PM;sergey.minaev;Status:

1, 2, 3, 4, 8 implemented and merged to master branch
6 postponed
7 rejected
9 suggestion for contribution, no straightforward way to do it automatically, but anyone with write permission on Jenkins will abort jobs for PRs with  [Skip CI] tag in the title
10 postponed not applicable for current Jenkins configuration

Follow-ups:
- implement regular (daily? weekly? monthly?) builds with full set of tests run on all platforms
- find a way for hardware emulation on Android
- configure CI/CD infrastructure to have only one active build;;;",,,,,,,
Make Libvcx support endorser,IS-1346,41674,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,Artemkaaas,Artemkaaas,07/Aug/19 3:32 PM,19/Aug/19 7:20 PM,28/Oct/23 2:49 AM,15/Aug/19 7:03 PM,,,,,,,,1.11.1,,,,,,,0,,,,"We need to update Libvcx to support endorser functionality according to PoA provided in the [ticket|IS-1339]

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1355,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upf:9",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"09/Aug/19 7:42 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1795;;;","14/Aug/19 10:09 PM;Artemkaaas;Build version: master-1254;;;","15/Aug/19 7:04 PM;sergey.minaev;Feature available in master and covered by integration and unit tests.
There is separate potential related task IS-1355;;;",,,,,,,,,
indy_set_protocol_version is not thread safe,IS-1347,41676,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,esplinr,esplinr,07/Aug/19 10:29 PM,07/Aug/19 10:31 PM,28/Oct/23 2:49 AM,07/Aug/19 10:31 PM,,,,,,,,,,,,,,,0,,,,"We currently use a global variable to handle protocol versioning, but this is not threadsafe. Specifically, it prevents tests from being run in parallel.

That API methods should be deprecated and the protocol version an option to all calls that build requests differently depending on protocol version.

(Or build two versions of libindy, one for version 1 and one for version 2 and remove support for version 1 later.)",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1135,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eo9",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"07/Aug/19 10:30 PM;esplinr;Thank you [~ignisvulpis] for improving this situation with your pull request. We think we should close this issue, and create new issues for remaining problems as they are identified.

We raised IS-1135 to document the problem with set_protocol_version.

In order for LibIndy to be threadsafe, one should use a wallet that supports concurrent access from multiple threads.;;;",,,,,,,,,,,
LibVCX initialize accepts pool config,IS-1348,41679,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,08/Aug/19 1:02 AM,19/Aug/19 7:20 PM,28/Oct/23 2:49 AM,15/Aug/19 12:36 AM,,,,,,,,1.11.1,,libvcx,,,,,0,EV-CS,EV-Triaged,,"libIndy accepts a configuration parameter for tuning pool connections.

https://github.com/hyperledger/indy-sdk/blob/master/docs/configuration.md#pool

Users of LibVCX should be able to set the same configuration, which would get forwarded to LibIndy.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1085,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upf:w",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,,,,,,,,,"13/Aug/19 6:20 PM;Artemkaaas;Changes:  extended `vcx` config to accept `pool_config` parameter.

Done in PR: https://github.com/hyperledger/indy-sdk/pull/1809;;;","14/Aug/19 10:09 PM;Artemkaaas;Build version: master-1254;;;",,,,,,,,,,
proverDeleteCredential API doesn't work,IS-1349,41730,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,MinjiHan,MinjiHan,MinjiHan,12/Aug/19 4:18 PM,20/Jan/20 10:21 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"I tried proverDeleteCredential API using Java wrapper. The following error occurs.

#
# A fatal error has been detected by the Java Runtime Environment:
#
# SIGSEGV (0xb) at pc=0x00007fff71cf5232, pid=2957, tid=27139
#
# JRE version: Java(TM) SE Runtime Environment (12.0.2+10) (build 12.0.2+10)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (12.0.2+10, mixed mode, sharing, tiered, compressed oops, g1 gc, bsd-amd64)
# Problematic frame:
# C [libsystem_c.dylib+0x1232] strlen+0x12
#
# No core dump will be written. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again
#

 

The iOS wrapper works fine. Please check what causes an error in Java.","* indy-sdk: stable 11 version
 * java: 12.0.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzji",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,MinjiHan,,,,,,,,"20/Nov/19 12:57 AM;esplinr;Thank you for the bug report. This appears to be in the libindy API.

The Java wrapper has started moving to Aries. We will investigate whether this is something we should fix in Indy or if it should be addressed in the Aries wrapper.

[https://github.com/hyperledger/aries-sdk-java];;;","10/Jan/20 3:23 PM;Artemkaaas;Hello, [~MinjiHan]

Is the problem still actual for the latest indy versions?
 The description doesn't contain enough information to understand what happened. Have you tried to enable core dump file writing? It should give more details.
What OS do you use?

I tried to reproduce the issue on my local machine (Uubntu 16.04) and inside docker (Ubuntu 18.04).
 I used libindy and java wrapper of 1.11.0 version. 
 But I had to use java 11 because java 12 version isn't supported anymore.

`proverDeleteCredential` worked fine for me.;;;",,,,,,,,,,
Ideas for upgrading the Python-Wrapper,IS-1350,41732,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Deferred,JeromeK,JeromeK,JeromeK,12/Aug/19 6:29 PM,11/Oct/19 9:10 PM,28/Oct/23 2:49 AM,11/Oct/19 9:10 PM,,,,,,,,,,python wrapper,,,,,0,python-SDK,,,"https://github.com/swisscom-blockchain/indy-sdk

This project is a custom python wrapper for Hyperledger's Libindy library that aims to optimize and remove redundant code of the existing wrapper.

We don't expect that our wrapper will replace the current one. But we hope that you guys can maybe take some points and merge/implement them into the current one.

If you have any questions, feel free to contact us.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:ztzr",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dbluhm,esplinr,JeromeK,,,,,,,,"23/Aug/19 4:56 AM;dbluhm;I think this architecture is fantastic. Especially as we find ourselves at an interesting place in the Indy/Aries lifecycle, I think we are unlikely to see this make it into the Indy SDK today; however, I think we should use this for the Aries SDK python wrapper.

Truly awesome work. Thanks for being willing to contribute it back to the community!;;;","11/Oct/19 9:10 PM;esplinr;This work has been moved to Aries-SDK-Python:

[https://github.com/hyperledger/aries-sdk-python/pull/5]

So I will close this ticket here.;;;",,,,,,,,,,
Append endorser action removes already appended fees from request,IS-1351,41754,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,VladimirWork,VladimirWork,VladimirWork,13/Aug/19 4:36 PM,19/Aug/19 7:53 PM,28/Oct/23 2:49 AM,19/Aug/19 7:53 PM,,,,,,,,1.11.1,,,,,,,0,,,,"Build Info:
libindy 1.11.0~1244
libsovtoken 1.0.1~80

Steps to Reproduce:
1. Build schema txn by identity owner.
2. Add fees to txn.
3. Append endorser to txn.

Actual Results:
There is an endorser and no fees in txn after Step 3 but if you append endorser first and then add fees txn will contain both fields.

Expected Results:
Client (libindy/CLI) should handle this situation and at least warn user about removing anything from request by another actions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upf:zi",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,VladimirWork,,,,,,,,"13/Aug/19 8:22 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1811;;;","15/Aug/19 6:58 PM;sergey.minaev;build version 1.11.0 master 1262;;;","19/Aug/19 7:53 PM;sergey.minaev;Covered by integration tests. No changes in CLI (already work as expected due to order of addition) and no manual testing required.;;;",,,,,,,,,
Pool: Configure the number of nodes to send read requests,IS-1352,41789,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,Artemkaaas,Artemkaaas,14/Aug/19 7:13 PM,19/Aug/19 11:12 PM,28/Oct/23 2:49 AM,19/Aug/19 11:10 PM,,,,,,,,1.11.1,,,,,,,0,,,,"As a developer building an application using the Indy SDK, I want to be able to configure the number of nodes Libindy sends read requests.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00upf:zw",,,,Unset,Unset,Indy SDK 19.16,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"14/Aug/19 10:07 PM;Artemkaaas;Changes:  Extended `config` parameter of `pool_open` API function to accept `number_read_nodes` value. This value set the number of nodes to send read requests
Done in PR: https://github.com/hyperledger/indy-sdk/pull/1816;;;","15/Aug/19 7:31 PM;Artemkaaas;Build version:  master-1262;;;","19/Aug/19 7:56 PM;sergey.minaev;appropriate parameter is missed in CLI;;;","19/Aug/19 8:06 PM;sergey.minaev;CLI fixed in [https://github.com/hyperledger/indy-sdk/pull/1816/files];;;","19/Aug/19 11:12 PM;sergey.minaev;build version: 1.11.0 master 1274
Steps to validate in CLI:
* pool open pool_name number-read-nodes=4
* send read txn
* check logs to track initial set of nodes received the request

Expected and actual behavior: all 4 nodes of local pool received the request at the about same time;;;",,,,,,,
Improve Indy SDK architecture overview,IS-1353,41795,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,14/Aug/19 9:41 PM,02/Sep/19 5:43 PM,28/Oct/23 2:49 AM,02/Sep/19 5:43 PM,,,,,,,,1.12.0,,,,,,,0,,,,"There is an architecture of Indy SDK overview in [https://github.com/hyperledger/indy-sdk/tree/master/docs/architecture]

 

The goal for this ticket is to collect notes and wishlist about improvements and detalization in these documents.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00x1n:",,,,Unset,Unset,Indy SDK 19.17,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"30/Aug/19 6:35 PM;sergey.minaev;Changes:
extend description of libindy layers, add diagram of modules interaction

PR with updated documentation:
https://github.com/hyperledger/indy-sdk/pull/1866/;;;","02/Sep/19 5:43 PM;sergey.minaev;Merged and available in master;;;",,,,,,,,,,
Study Peer DID RFC,IS-1354,41797,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,esplinr,esplinr,14/Aug/19 10:55 PM,30/Aug/19 10:10 PM,28/Oct/23 2:49 AM,30/Aug/19 10:10 PM,,,,,,,,,,,,,,,0,,,,"[https://github.com/hyperledger/aries-rfcs/tree/master/features/0030-sync-connection]

 

[https://openssi.github.io/peer-did-method-spec]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00xa1:",,,,Unset,Unset,Indy SDK 19.17,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Make Libvcx support payment by endorser,IS-1355,41809,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,KitHat,Artemkaaas,sergey.minaev,15/Aug/19 7:06 PM,10/Oct/19 8:54 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"We need to update Libvcx to support endorser functionality according to PoA provided in the [ticket|IS-1339]

This is needed to support use cases where 3rd parties can add a payment to a transaction, such as described in:
https://sovrin.atlassian.net/browse/ST-608
",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1346,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1080,,,No,,Unset,No,,,"1|hzwrhj:910sx26",,,,Unset,Unset,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,,,,,,,,,,,,
Pool refresh doesn't throw timeout error in CLI,IS-1356,41810,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,VladimirWork,VladimirWork,15/Aug/19 7:59 PM,26/Aug/19 9:56 PM,28/Oct/23 2:49 AM,26/Aug/19 9:56 PM,,,,,,,,1.11.1,,,,,,,0,TShirt_S,,,"Build Info:
libindy 1.11.0~1254
libsovtoken 1.0.1~80

Steps to Reproduce:
1. Connect pool.
2. Do some actions (open wallet, use did, etc).
3. Shutdown pool (stop services, kill containers, etc).
4. Do `pool refresh`.

Actual Results:
CLI freezes for more than pool timeout interval. There is `Pool timeout }) - appropriate callback not found!` error in CLI logs.

Expected Results:
Throw PoolTimeout error in CLI and disconnect from current pool after pool timeout interval.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Aug/19 8:01 PM;VladimirWork;IS-1356.PNG;https://jira.hyperledger.org/secure/attachment/17684/IS-1356.PNG","15/Aug/19 8:01 PM;VladimirWork;indy_cli.log;https://jira.hyperledger.org/secure/attachment/17683/indy_cli.log",,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00x1u:",,,,Unset,Unset,Indy SDK 19.17,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,VladimirWork,,,,,,,,,"20/Aug/19 5:20 PM;Artemkaaas;Problem reason: 
-  Libindy used to on `CatchupTargetNotFound` event in `GettingCatchupTarget` state always sends `OpenAck`.

Changes: 
- Send `RefreshAck` in case  GettingCatchupTarget.refresh field is true.

PR:
- https://github.com/hyperledger/indy-sdk/pull/1837;;;","22/Aug/19 3:40 PM;Artemkaaas;Build version: master-1282;;;","22/Aug/19 10:23 PM;VladimirWork;We should also disconnect current pool if we got `Transaction response has not been received` for pool refresh command.;;;","26/Aug/19 2:24 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1847
Build version: master-1289  ;;;","26/Aug/19 9:56 PM;VladimirWork;Build Info:
libindy 1.11.0~1289

Steps to Reproduce:
1. Connect pool.
2. Do some actions (open wallet, use did, etc).
3. Shutdown pool (stop services, kill containers, etc).
4. Do `pool refresh`.

Actual Results:
CLI throws error and disconnects from pool after timeout interval.;;;",,,,,,,
Release 1.11.1,IS-1357,41813,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,15/Aug/19 10:20 PM,02/Sep/19 3:46 PM,28/Oct/23 2:49 AM,02/Sep/19 3:46 PM,,,,,,,,1.11.1,,,,,,,0,,,,"*Release Goal*
Release everything that is ready. Mostly bug fixes.

*Acceptance Criteria*
Regular instructions:
* Code is tested
* Review upstream releases to decide what should be included in this build
** Ursa
* Build is produced with automated CI / CD
** Official build is tagged as released in Git
** Official builds should be the only builds that are not marked in GitHub as ""pre-release""
* Prepare basic documentation on new features
* Prepare the Release Notes
** Link to the documentation on new features
** Stored as a CHANGELOG.md in the root of the repo
** Latest release at the top, above the release notes for all previous versions
* The release should be on GitHub “Releases” tab.
** Release notes should be in the “Description"" field of the GitHub release artifact
* The release is marked in JIRA
* Add the correct fixVersion to included issues
* Enable others to use the release:
** Email stakeholders with links to the artifacts and release notes",,,,,,,,,,,,,,,,,,,,,IS-1361,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00x1u:r",,,,Unset,Unset,Indy SDK 19.17,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,,,,,,,,,"30/Aug/19 2:29 PM;Artemkaaas;PR: https://github.com/hyperledger/indy-sdk/pull/1868

Build version: 1.11.1-rc-85;;;",,,,,,,,,,,
Minimal support of full-qualified DID,IS-1358,41841,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,sergey.minaev,sergey.minaev,16/Aug/19 10:00 PM,26/Sep/19 4:05 AM,28/Oct/23 2:49 AM,16/Sep/19 9:25 PM,,,,,,,,1.12.0,,,,,,,0,,,,"See requirements in IS-451

h1. POA

h2. Option 1: Breaking Changes

* All DID-related output of libindy API is fully-qualified. The only exception is the JSONs for Client-Node communication.
* libindy may consume both full-qualified and short forms, but short form would be always extended by the configurable default prefix.
*  JSON output for Clinet-Node communication (e.g. build_nym_request) will depend on protocol version set in libindy. Current protocol version is 2, and it will always cut off the configured DID prefix. We will evaluate if a future version of Indy Node will keep full-qualified form in the JSONs as well.
* Wallets should be migrated before usage.

h3. Transactions Builders

Transaction builders API would allow to pass DID in both (full-qualified and short) forms. If the net prefix specified but it's default and configured to skip by settings - it should be removed while creating transaction JSON.

If the prefix is not defined, the short form of DID would be used in transaction JSON as well.

h3. DID in the wallet

DIDs always would be stored in full-qualified form. If short DID passed to the API, the configured prefix would be applied before storing to the wallet

See IS-1359 about wallet migration

h2. Option 2: Backwards Compatible: ""Configurable behavior""
* There would be a way to define behavior of libindy like protocol version for Client-Node communication.
* If an App setup new behavior then it follows the approach in ""breaking changes"".
* The App can chose the current deprecated behavior. In this case libindy will always return short form of DIDs.
* Optionally it may accept full-qualified form of DIDs but the prefix would be totally ignored (cut of right after the API layer, not stored in the wallet, etc)

h2. See Also
* https://jira.hyperledger.org/browse/INDY-51
* [https://github.com/hyperledger/indy-sdk/pull/1487]
* [https://openssi.github.io/peer-did-method-spec/index.html]
* [https://w3c-ccg.github.io/did-spec/]",,,,,,,,,,,,,,,,,,,,,,,,,,IS-451,,,,IS-1359,IS-1366,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eo9b",,,,Unset,Unset,Indy SDK 19.17,Indy SDK 19.18,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"19/Aug/19 10:28 PM;sergey.minaev;Initial proposal in description more like a breaking-changes from data output format from API. Like now some DIDs from API would be returned in full-qualified form. There is an alternative to configure general behavior but it would require more work and some duplication;;;","21/Aug/19 11:47 PM;esplinr;The current estimates from the team for preserving backwards compatibility are reasonable, so we're going to try it.;;;","16/Sep/19 9:25 PM;sergey.minaev;PR with changes https://github.com/hyperledger/indy-sdk/pull/1873

Will be finished and merged in scope of IS-1366;;;",,,,,,,,,
Wallet migration API for full-qualified DID,IS-1359,41842,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,16/Aug/19 10:02 PM,27/Sep/19 7:20 PM,28/Oct/23 2:49 AM,16/Sep/19 9:26 PM,,,,,,,,1.12.0,,,,,,,0,,,,"*Story*
As an application developer using the Indy wallet, I need a way to modify the prefix of a DID to make a legacy  DID fully qualified, or to do other DID maintenance.

*Acceptance Criteria*
* API(s) exists for editing the prefix of a DID
** If the DID has no prefix, we can add a prefix (prepend did:peer or did:sov to a legacy did)
** If the DID has a prefix, we can modify the prefix (migrate did:sov to did:sov-new)
* Documentation exists for helping an application developer use this API for migrating their wallet

*Notes*
* In addition to modifying a single DID, it would be nice to be able to also modify multiple DIDs (migrate all ""did:sov"" to ""did:sov-new"")
* We evaluated having a method for migrating the entire wallet from legacy DIDs (missing the network-specific prefix such as did:sov: ), to fully qualified DID's, but the wallet doesn't have the information necessary to distinguish between Indy DIDs and Peer DIDs. So instead, we want to provide the API necessary for the application to manage whatever migration it intends to do.
* If we were to migrate the entire wallet, we considered an API like:
** indy_wallet_migrate(wallet_config, credentials, migration_config) - will open the wallet by config and credential, check content version, check current version, apply migration logic (taking into account migration_config), close wallet and return status code
 ** migration config - optional JSON with optional parameters. For full-qualified DID migration (from None version to 1st version) only one parameter is expected: ""default_did_prefix""
** all existing DIDs would be re-placed by full-qualified form with defined by config prefix
** We would also need to version the wallet contents to distinguish between the legacy DIDs and the post-migration fully qualified DIDs.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-451,IS-1358,,,IS-1366,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eo9bi",,,,Unset,Unset,Indy SDK 19.17,Indy SDK 19.18,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"29/Aug/19 6:32 PM;Artemkaaas;Changes: added `indy_qualify_did` function to update DID stored in the wallet to make fully qualified.
PR: https://github.com/hyperledger/indy-sdk/pull/1862;;;","16/Sep/19 9:26 PM;sergey.minaev;Followed up by IS-1366 and 1358;;;",,,,,,,,,,
POA: DIDs resolution for multiple Indy ledgers,IS-1360,41847,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,17/Aug/19 1:03 AM,19/Sep/19 10:39 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,EV-CS,,,"*Story*
As a developer building applications for Indy networks, I want my wallet to be able to store DIDs from multiple networks: Sovrin Main, Sovrin Test, my development network, and my corporate network. This will make it easier to develop, test, and demo my applications.

*Notes*
* Need to be able to work with multiple Indy networks:
** Sovrin Builder
** Sovrin Staging
** Sovrin Main
** Internal dev networks
** Findy
* For each of these networks, we can identify associated DIDs and the connection information for the network.
* We should be able to prove verifiable credentials anchored on each network for which we have ledger connection information. Ledger connection information needs to include the DID prefix and genesis information for each ledger.
* A credential will be tied to a particular network: the schema definition and credential definition must be anchored on the same network.
* We should add this support to Indy (instead of waiting for Aries) because people will continue using Indy in their identity solutions for some time after Aries matures.
* Indy solutions should be able to deal with old style DIDs and Fully Qualified DIDs simultaneously.
* If the application is asked to deal with a Fully Qualified DID  for which it does not have ledger connection information, it should raise an exception for the application layer to resolve.

*Acceptance Criteria*
* Evaluate the current functionality of LibIndy, and the suggested application architecture for achieving this goal.
* Create issues for remaining work.",,,,,,,,,,,,,,,,,,,,,,,,,IS-1078,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoair",,,,Unset,Unset,Indy SDK 19.18,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Release 1.12.0,IS-1361,41872,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,19/Aug/19 10:41 PM,11/Oct/19 1:01 AM,28/Oct/23 2:49 AM,08/Oct/19 5:53 PM,,,,,,,,1.12.0,,,,,,,0,,,,"*Release Goal*
Release everything that is ready. Especially:
* Support for Fully Qualified DIDs

*Acceptance Criteria*
Regular instructions:
* Code is tested
* Review upstream releases to decide what should be included in this build
** Ursa
* Build is produced with automated CI / CD
** Official build is tagged as released in Git
** Official builds should be the only builds that are not marked in GitHub as ""pre-release""
* Prepare basic documentation on new features
* Prepare the Release Notes
** Link to the documentation on new features
** Stored as a CHANGELOG.md in the root of the repo
** Latest release at the top, above the release notes for all previous versions
* The release should be on GitHub “Releases” tab.
** Release notes should be in the “Description"" field of the GitHub release artifact
* The release is marked in JIRA
* Add the correct fixVersion to included issues
* Enable others to use the release:
** Email stakeholders with links to the artifacts and release notes",,,,,,,,,,,,,,,,,,,,,IS-1398,,IS-1357,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiy",,,,Unset,Unset,Indy SDK 19.19,Indy Aries 19.20,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,VladimirWork,,,,,,,,,"06/Oct/19 4:55 AM;VladimirWork;The issue with Getting Started on Windows was found. It will be investigated on Monday by [~Artemkaaas]. FYI [~sergey.minaev].;;;","08/Oct/19 12:30 AM;VladimirWork;We have the same issue with revocations against:
1.12.0 libindy + 1.10.0 indy-node
1.11.1 libindy + 1.9.2 indy-node
1.11.0 libindy + 1.9.1 indy-node
but during 1.11.1 and 1.11.0 acceptance testing there were no issues so it looks like something in environment or underlying libraries goes wrong.;;;","08/Oct/19 5:52 PM;VladimirWork;The issue was solved by adding timeout after submitting revocation to ledger so assertion failed because of absence some information in ledger during this assertion.;;;","08/Oct/19 5:53 PM;VladimirWork;Also we have a known issue: https://jira.hyperledger.org/browse/IS-1368;;;",,,,,,,,
Wallet supports rotation of peer DIDs,IS-1362,41874,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,,esplinr,esplinr,19/Aug/19 10:47 PM,28/Aug/19 6:48 PM,28/Oct/23 2:49 AM,28/Aug/19 6:48 PM,,,,,,,,,,aries,libindy,wallet,,,0,,,,"*Story*
As a developer building applications on top of LibIndy, I need to be able to rotate the keys for my Peer DID connections.

*Acceptance Criteria*
* An API exists for rotating the public key of the other party in a pairwise connection.

*Notes*
* Libindy provides the function to rotate my public and private key, but there is no way to rotate my copy of the public key for the other party in the pairwise connections (""their key""). We need to provide a way to rotate a pairwise key related to did.
* LibVCX doesn't provide any key rotation
* This story is for the API call, independent of the Aries Connection / Exchange protocol (https://github.com/hyperledger/aries-rfcs/tree/master/features/0023-did-exchange). That work will be in a future story.",,,,,,,,,,,,,,,,,,,,,,,,,IS-1166,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009fk",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
attr::<attribute_name>::value not supported in proof request restrictions,IS-1363,42006,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,nbrempel,nbrempel,nbrempel,24/Aug/19 6:25 AM,21/Sep/19 5:01 AM,28/Oct/23 2:49 AM,16/Sep/19 9:24 PM,,,,,,,,1.12.0,,libindy,,,,,0,TShirt_S,,,"Proof request restrictions do not support `attr::<attribute_name>::value` wql tag (or any custom tags) 

 

[https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/services/anoncreds/verifier.rs#L493]

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eo9g",,,,Unset,Unset,Indy SDK 19.18,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,nbrempel,sergey.minaev,swcurran,,,,,,"28/Aug/19 1:59 AM;swcurran;[~resplin] - could you have someone take a look at this and confirm if true?  Is there another way to do this?   Interestingly, we have this same question from one of our developers (Nick) and from Sam Smith who is using ACA-Py.

Thanks!;;;","31/Aug/19 1:25 AM;esplinr;[~sergey.minaev] Is this a confusion between proof restrictions and predicates? See the chat conversation in #indy-sdk from August 29 and 30.

Nick is willing to add any missing support, but needs some guidance on what is best to do.;;;","31/Aug/19 5:42 AM;swcurran;Here is the link to the thread on the indy-sdk rocketchat channel:

https://chat.hyperledger.org/channel/indy-sdk?msg=xJtsnxo6AQ9CFTMZ3;;;","02/Sep/19 5:15 PM;Artemkaaas;Problem reason:
 - Validation of restrictions for `proof request` on Verifier side didn't expect `attr::{}::value` and `attr::{}::marker` tags.

Changes:
 - return Ok in case restriction contain one of these tags.

PR:
 - [https://github.com/hyperledger/indy-sdk/pull/1870]

Risk:
 - Low

Covered with tests:
 - [https://github.com/hyperledger/indy-sdk/pull/1870/files#diff-4c8add5e7ff9e4066e3345a1d9fbe6d9R2765];;;","03/Sep/19 3:21 PM;Artemkaaas;Build version: master-1312;;;","17/Sep/19 11:18 AM;nbrempel;[~Artemkaaas] thank you, however it appears that this change only works for a single attr::<name>::value restriction. If you add multiple restrictions, it always seems to fail the same as before.

I've added a failing test case to illustrate the issue here: https://github.com/nrempel/indy-sdk/blob/master/libindy/tests/anoncreds_demos.rs#L2892

 ;;;","21/Sep/19 5:01 AM;nbrempel;I've added a new ticket for the issue here: https://jira.hyperledger.org/browse/IS-1381;;;",,,,,
Write an RFC for Aries Overview,IS-1364,42068,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,sergey.minaev,esplinr,esplinr,27/Aug/19 10:24 PM,20/Nov/19 11:07 PM,28/Oct/23 2:49 AM,,,,,,,,,,,aries,,,,,0,,,,"We need an Aries overview RFC to help pull all the parts together.

*Acceptance Criteria*
* It should be a concept RFC:
    https://github.com/hyperledger/aries-rfcs/tree/master/concepts
* Link to the other RFCs
* UML diagram describing the flow and how it touches each part of the stack

*Notes*
* Brevity is an important attribute of this document. It should be a compact overview. If the architecture does not allow a digestible overview, then we should re-examine the architecture.
* We need to time-box this effort.
* It should drive conversation and help people find consensus on the concepts. We can't be involved in many of those conversations, so if others don't find it valuable to finish the effort, we should rescind it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifrf",,,,Unset,Unset,Indy SDK 19.18,Indy SDK 19.19,Indy Aries 19.20,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),drummondreed,esplinr,,,,,,,,,"13/Sep/19 5:22 AM;esplinr;[~drummondreed] is working with John Jordon on a similar project. We need to get the HackMD link to see if it addresses the same need.;;;","13/Sep/19 11:19 AM;drummondreed;[~esplinr] is right—a group of us are writing an RFC on the Trust over IP (ToIP) stack (new name for what is often called the SSI stack). However I don't believe it's the same thing as the Aries overview architecture RFC being proposed here. It's actually the ""next step back"" in terms of overview, i.e., it shows the entire Internet trust layer architecture that Hyperledger Indy/Ursa/Aries fit into. So it would probably pair very nicely with this RFC. I think the ToIP RFC authors would love to collaborate with the authors of this RFC.;;;","16/Sep/19 11:13 PM;esplinr;[~drummondreed] Can you provide a link to a draft of your RFC? That would help us figure out what additional work is needed.;;;","25/Sep/19 7:29 AM;esplinr;From Drummond:
{quote}
My document won’t “give an overview of the Hyperledger Aries architecture”. Rather it is a document that should be referenced by such a document because it will explain the overall Trust Over IP stack into which the Hyperledger Aries project fits.
{quote};;;",,,,,,,,
Design Aries Resolver library,IS-1365,42134,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,30/Aug/19 10:12 PM,03/Feb/20 6:53 PM,28/Oct/23 2:49 AM,03/Feb/20 6:53 PM,,,,,,,,,,aries,,,,,0,,,,"The Indy ledger resolver needs to migrate from LibIndy to be used by Aries Frameworks. The end result is that we have libraries like:
* aries-shared-vdri that provides the interface that will be followed by specific ledgers
* indy-aries-vdr that instantiates that interface for Indy
* aries-shared-vdri-peer that instantes that interface for peer DIDs

This issue is only to migrate the LibIndy functions to indy-aries-vdr. The common interface will be designed in other issues, and indy-aries-vdr will be migrated to it.

*Acceptance Criteria*
* Create design document for this interface that can be followed by Peer DIDs and the Indy Resolver
* Create a plan of attack that can be followed by the various contributors
* Create related issues

*Notes*
* Prior Art
** Aries RFC: https://github.com/hyperledger/aries-rfcs/tree/master/features/0124-did-resolution-protocol
** The work from Markus: https://wiki.hyperledger.org/pages/viewpage.action?pageId=16320115
* This work must be coordinated with the in-progress work being done by [~cywolf]
* The work to build a generic Aries Verifiable Data Registry Interface will be tracked separately (probably in the Aries project).
* The work to build an Aries Peer VDRI will be tracked separately.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1396,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo8yo",,,,Unset,Unset,Indy Aries 20.01,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"13/Sep/19 5:28 AM;esplinr;We need to start by defining the duties required: resolve a DID (like Marcus defined), write a cred def, write a schema def, etc.

For each duty, we should define a proposed API. We can compare async and sync approaches to the API.;;;","03/Feb/20 6:53 PM;sergey.minaev;After learning the codebase and some discussions we can see 2 major next steps: 
* IS-1476: Document design of first version Indy VDR
* IS-1477: FFI API for Indy VDR;;;",,,,,,,,,,
Update credential exchange protocol to support fully qualified DIDs,IS-1366,42136,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,30/Aug/19 11:09 PM,30/Sep/19 11:56 PM,28/Oct/23 2:49 AM,30/Sep/19 11:56 PM,,,,,,,,1.12.0,,aries,libvcx,,,,0,,,,"*Acceptance Criteria*
* LibVCX supports fully qualified DIDs alongside the existing credential exchange protocol without fully qualified DIDs
* The support must be backwards compatible: issuer with a FQDID, verifier without, and vice-versa.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1358,IS-1359,IS-1384,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eo9a",,,,Unset,Unset,Indy SDK 19.18,Indy SDK 19.19,,,,(Please add steps to reproduce),13.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"02/Sep/19 11:09 PM;sergey.minaev;Optiions by [~KitHat] which was discussed while IS-1358

Right now in credentials we save credential definition and schema ids in unqualified form. As long as we introduce fully-qualified dids we need to support it in credential exchange somehow. 

 

*Option 1*: Credential exchange works WITHOUT fully-qualified prefixes

_Needed changes_: We need to cut off prefixes on every stage of credential exchange including proof request handling (in restrictions). In details -- we need to cut it off in 

_Problems_: Fully-qualified DID support has arguable value in that case. We can only create it in wallet and nothing else.

 

*Option 2:* Credential exchange can work with fully-qualified prefixes but it is enabled with a flag. 
_Needed Changes:_ 
 * We just need to introduce a flag and change some places where we operate with ids -- mostly proof request handling and credential storage.
 * We need to make credential definition id and schema id fully-qualified as well

_Problems:_ 
 * Credential from new and old version will be incompatible between each other -- we will need migration.
 * We will need to work out the version from internal data -- that may be tricky.

 

*Option 3:* Credential exchange use versioning that specifies how to treat that credential exchange message

_Needed Changes_: We introduce a new field “version” and work only if this field and libindy internal version is matching. Then we will work according to the version.

_Problems:_ 
 * The problem here is the same as in the previous version -- we will surely need migration of credentials. 
 * Applications will need to specify the version in some structures (like proof requests) by themselves -- we do not have any builders for them.;;;","02/Sep/19 11:10 PM;sergey.minaev;As VCX has some real adoption we have to implement the 3rd approach;;;","13/Sep/19 12:11 AM;Artemkaaas;Minimal Support of Fully-Qualified identifiers.
General format of fully-qualified identifier is `<prefix>:<method>:<value>`. 

Changes:
* Libindy
    * extended `did_info` parameter of `indy_create_and_store_my_did` function to accepts optional `method_name` filed. This field should be used to create fully qualified DID. If this field is skipped the usual unqualified form will be created.
   
    * all functions can work with fully-qualified identifiers (new way) as well as with unqualified.  
    Pay attention that all functions from Ledger API can accept fully-qualified identifiers but always return results in the unqualified form (requests/responses). 

    * added a new function -- `indy_to_unqualified` -- that gets unqualified form of a fully-qualified identifier. this function can accept the folowwing entities: Did, SchemaId, CredentialDefinitionId, RevocationRegistryId, CredentialOffer, ProofRequest.

    * proof requests now support versioning (`ver` field) -- now it specifies whether restrictions are full qualified or not. 
         - omit or set ""1.0"" to use unqualified identifiers. 
         - set ""2.0"" to use fully qualified identifiers. 
         
        Pay attention that the same format of identifiers will be used in generated proof and must be used for proof verification as keys of maps(`schemas_json`, `credential_defs_json`, `rev_reg_defs_json`, `rev_regs_json`).
    
             
    * added a new function -- `indy_qualify_did` -- that updates DID stored in the wallet to make it fully qualified, or to do other DID maintenance. This functions also updates all DID related entities stored in the wallet.
        * added correspondent `did qualify` command to Indy-CLI. 

* Indy-CLI - added `did qualify` command to Indy-CLI that updates DID stored in the wallet to make it fully qualified (corresponds to `indy_qualify_did`).

* Libvcx - Extended provisioning config to accept `did_method_name` filed.  This field specifies method name to create fully qualified DIDs. 


Anoncreds workflow

FQ - fully-qualified
U - unqualified

Credential Issuance Cases:
    Issuer (FQ) - Holder (U) 
        * Issuer creates DID in fully qualified way. Schema and CredentialDefinition created for this DID will be fullyqualified also.
        * Issuer creates CredentialOffer for Holder (U). 
        * Issuer should call `indy_to_unqualified` wit `cred_offer_json` to get unqualified form. Later Issuer must use this unqualified form for sending Prover and on credential issuance.
        * all next steps are exactly same as before.
    Issuer (FQ) - Holder (FQ)
        * usual flow. identifiers will be fully-qualified.
    Issuer (U) - Holder (U)
        * usual flow. identifiers will be unqualified.
    Issuer (U) - Holder (FQ) 
        * usual flow. identifiers will be unqualified. Holder can handle unqualified identifiers.

Proof Presentation Cases:
Proof requests now support versioning (`ver` field) -- it specifies whether restrictions are full qualified or not. 
    - omit or set ""1.0"" to use unqualified identifiers. 
    - set ""2.0"" to use fully qualified identifiers. 


    Verifier (FQ) - Prover (U) 
        * Verifier should set `ver` field as '1.0' or omit it into ProofRequest. 
        * Verifier -- if restrictions are fully-qualified -- `indy_to_unqualified` function with `proof_request_json` should be called to get unqualified form. 
        * Prover - no changes
        * Verifier -- proof verification -- must use *_id's (`schema_id`, `cred_def_id`, `rev_reg_id`) listed in `proof[identifiers]`  as the keys for corresponding `schemas_json`, `credential_defs_json`, `rev_reg_defs_json`, `rev_regs_json` objects.
    Verifier (FQ) - Prover (FQ) 
        * Verifier can create as fully-qualified as unqualified ProofRequest
    Verifier (U) - Prover (FQ) 
        * Verifier should set `ver` field as '1.0' or omit it into ProofRequest. 
        * Prover will create unqualified proof in this case. No additional steps are required.
    Verifier (U) - Prover (U) 
        * usual flow. identifiers will be unqualified.

Vcx: everything will be done automatically based on the type of remote DID.
How to test VCX: run python demo in two containers with different versions.;;;","16/Sep/19 9:27 PM;sergey.minaev;https://github.com/hyperledger/indy-sdk/pull/1862 should be finished in scope of this task as well;;;","27/Sep/19 3:22 PM;Artemkaaas;Build version: master-1336;;;","30/Sep/19 11:56 PM;sergey.minaev;Validation would be done in scope of IS-1384 ;;;",,,,,,
remove test open_pool_ledger_works_for_wrong_ips,IS-1367,42158,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,,ignisvulpis,ignisvulpis,02/Sep/19 5:25 PM,20/Nov/19 12:58 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"{color:#172b4d}Not sure what it is worth to test for a network timeout for wrong IP addresses in  {color}{color:#172b4d}open_pool_ledger_works_for_wrong_ips{color}

{color:#172b4d}[https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/pool.rs#L390]{color}

{color:#ffc66d}I think it is just a waste of time in the already too long CI run. The usual timeout of 60s is about 5% of the libindy test time{color}
 I suggest to remove open_pool_ledger_works_for_wrong_ips",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifr9i",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,ignisvulpis,,,,,,,,,"20/Nov/19 12:53 AM;esplinr;Thanks for the report Axel.

We will evaluate the best way to improved this call to speed up the test.;;;",,,,,,,,,,,
Verifying proof after credential revocation results in true,IS-1368,42164,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,VladimirWork,jsh4rk,jsh4rk,03/Sep/19 12:07 AM,12/Nov/19 12:53 AM,28/Oct/23 2:49 AM,24/Oct/19 11:09 PM,,,,,,,,1.13.0,,libindy,,,,,0,,,,"I noticed the following problem. Despite the revocation of a credential a proof gets verified to true. Here is a small project, with which the behavior can be traced:

[https://github.com/jSh4rk/IndyProofIssue2—Revocation|http://example.com]

I noticed that the DL does not return any revoked credentials in {{the Ledger.buildGetRevocRegDeltaRequest}}  response message. The behavior remains the same whether the time delta is 0 (from = to) or greater than 0 (from < to).

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zkm:",,,,Unset,Unset,Indy Aries 19.20,Indy Aries 19.21,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,jsh4rk,sergey.minaev,VladimirWork,,,,,,"27/Sep/19 10:22 PM;esplinr;Thanks for raising this issue. The sample code is helpful. We need to think about the right way to address this issue.;;;","03/Oct/19 4:11 PM;Artemkaaas;I ran your project on my machine and `verify` function returned false as is expected.
I added the test to our Java wrapper. This test is a copy of your example (I only skipped wallet and pool preparation and added assetFalse after verifying). 
Here is PR: https://github.com/hyperledger/indy-sdk/pull/1911
CI build was passed successfully.
[~jsh4rk] Could you share some details regarding your environment?;;;","08/Oct/19 5:57 PM;VladimirWork;The issue is reproducing against Windows and the latest rc Java wrapper, the assertion below fails but it looks like libindy returns correct result:
code:
{noformat}
        verifyResult = Anoncreds.verifierVerifyProof(proofRequest.toString(), proof, schemas.toString(),
                creds.toString(), revocRegDefs.toString(), revocRegs.toString()).get();

        assertFalse(verifyResult);
{noformat}
logs:
{noformat}
[Thread-1] DEBUG org.hyperledger.indy.sdk.LibIndy.native.indy.commands.anoncreds.verifier - src\commands\anoncreds\verifier.rs:72 | verify_proof <<< result: false
[Thread-1] TRACE org.hyperledger.indy.sdk.LibIndy.native.indy.api.anoncreds - src\api\anoncreds.rs:1947 | prepare_result_1: >>> Ok(false)
[Thread-1] TRACE org.hyperledger.indy.sdk.LibIndy.native.indy.api.anoncreds - src\api\anoncreds.rs:1948 | indy_verifier_verify_proof: valid: false
{noformat}

Java info:
java version ""1.8.0_181""
Java(TM) SE Runtime Environment (build 1.8.0_181-b13)
Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)

;;;","08/Oct/19 11:57 PM;Artemkaaas;Reason:  
   JNA considers boolean to be 4 bytes when the C99/Rust bool is 1 byte.
   When functions return false JNA considers it like some wrong value (for example `507892224`) that isn't equal to `0` (false expected). 
   This reason the result of functions that return boolean value always was true. 

Changes: added custom mapper of byte value to boolean.

PR: https://github.com/hyperledger/indy-sdk/pull/1928;;;","09/Oct/19 3:25 AM;jsh4rk;@[~Artemkaaas] I used docker and the published docker-image to run Indy on a windows 10 machine. Also I used the indy sdk 1.90. If the problem lies in the encoding of the booleans, shouldn't I nevertheless get an answer from the indy-network, that the credential has been revoked (value of revoked in the readRevocationDelta response message) ?
  
  ;;;","10/Oct/19 2:48 PM;Artemkaaas;- GetRevocDelta request returns aggregated value. 
After you did credential issuing delta will contain issued: [1], revoked []

- If you send GetRevocDelta request to Ledger before revocation it will also contain issued [1], revoked []

- After you did revocation delta will contain issued: [], revoked [1],

- But if you request delta from ledger after revocation it will be aggregated and will look like in the initial state issued: [], revoked [];;;","24/Oct/19 12:10 AM;sergey.minaev;PR with fix for bool representation is merged, ready to validation.
Fix version 1.12.0 master 1363;;;","24/Oct/19 11:09 PM;VladimirWork;Build Info:
libindy 1.12.0~1366

Steps to Validate:
1. Run SDK Java samples against Windows client.

Actual Results:
All samples pass successfully.;;;",,,,
VCX wallet handle is not opaque,IS-1369,42215,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,,ignisvulpis,ignisvulpis,06/Sep/19 11:14 PM,20/Jan/20 3:18 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,EV-Triaged,,,"vcx does not treat wallet handles as opaque.

vcx assumes that zero is an invalid wallet handle and that a value greater than zero is a valid wallet handle.

If libindy decides to e.g. start counting wallet handles at MIN_INT then the vcx code is wrong.

[https://github.com/hyperledger/indy-sdk/blob/master/vcx/libvcx/src/api/vcx.rs#L109]

 

vcx should use the type WalletHandle for all wallet handles and the constant INVALID_WALLET_HANDLE for a invalid value.

Currently a wallet handle in vcx is a u32 which makes some gymnastics necessary to convert it to i32 - that would be avoided as well when the type WalletHandle is used.

 

This PR handles this. Please review.

https://github.com/hyperledger/indy-sdk/pull/1877",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1080,,,No,,Unset,No,,,"1|i002yt:ztzxf",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ignisvulpis,,,,,,,,,,,,,,,,,,,,,
Fix authors in packages distributed for Indy SDK,IS-1370,42239,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,09/Sep/19 11:53 PM,30/Sep/19 10:33 PM,28/Oct/23 2:49 AM,26/Sep/19 5:50 PM,,,,,,,,1.12.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zk3:",,,,Unset,Unset,Indy SDK 19.19,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),KitHat,sergey.minaev,,,,,,,,,"21/Sep/19 7:59 PM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/1894;;;","26/Sep/19 5:50 PM;sergey.minaev;Artifacts metadata fixed since 1.11.1 master 1327;;;",,,,,,,,,,
PoC: Async/await Command Executor layer in libindy,IS-1371,42285,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,10/Sep/19 10:52 PM,21/May/20 12:58 AM,28/Oct/23 2:49 AM,12/Sep/19 8:10 PM,,,,,,,,,,,,,,,0,,,,"Libindy has 3 main layers of code organization and there are some concerns about code complexity of Command Executor Layer.

One of the factor is usage of manually written Commands (sometimes chain of multiply commands) for asynchronous logic like ""get data from the ledger"".

There is unstable async/await in nightly Rust, and it would be nice to re-implement the part of CE layer and compare the code complexity.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1479,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eo9br",,,,Unset,Unset,Indy SDK 19.18,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"10/Sep/19 10:55 PM;sergey.minaev;An example of Command Executor available in my fork in [feature/async_libindy_ce_on_nightly_rust branch|https://github.com/jovfer/indy-sdk/commits/feature/async_libindy_ce_on_nightly_rust];;;",,,,,,,,,,,
Add testing instructions to doc on HowToAddAPICall,IS-1372,42296,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,11/Sep/19 10:22 PM,30/Sep/19 10:34 PM,28/Oct/23 2:49 AM,26/Sep/19 5:34 PM,,,,,,,,1.12.0,,,,,,,0,,,,"The documentation on How to Add an API Call needs more guidance on how to test the APIs.

https://github.com/hyperledger/indy-sdk/blob/master/docs/how-tos/how-to-add-a-new-API-call.md",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zju:",,,,Unset,Unset,Indy SDK 19.19,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"21/Sep/19 12:25 AM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1889;;;",,,,,,,,,,,
Remove Android dependency on libgnustl and change to libc++,IS-1373,42312,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,nsivraj,nsivraj,12/Sep/19 5:19 AM,30/Sep/19 10:33 PM,28/Oct/23 2:49 AM,30/Sep/19 4:40 PM,,,,,,,,1.12.0,,libindy,,,,,0,,,,"We urgently need to get off of our dependency on libgnustl for building the Android libindy.so artifact. This means changing the indy-sdk/libindy/android.build.sh script and the indy-sdk/libindy/android.test.sh and the indy-sdk/libnullpay/android.test.sh scripts. We may also need to change the libsovtoken build to not depend on libgnustl as well.

Our iOS Xcode 10.1 dependency is forced on us by this because we cannot upgrade react native to 0.59.x because react native 0.59.x no longer supports libgnustl. Due to these blocking issues it is becoming more and more urgent that we remove our Android libgnustl dependency and upgrade the NDK to android-ndk-r20-linux-x86_64.zip or android-ndk-r20-darwin-x86_64.zip rather than using the current NDK 
android-ndk-r16b-darwin-x86_64.zip or android-ndk-r16b-linux-x86_64.zip.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zk8:",,,,Unset,Unset,Indy SDK 19.19,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,nsivraj,tylerq,,,,,,,,"12/Sep/19 5:22 AM;tylerq;[~esplinr] We can talk about this. ;;;","16/Sep/19 11:15 PM;esplinr;The team will investigate this issue as soon as possible.

Internal Evernym ticket: [KAIZ-59|https://evernym.atlassian.net/browse/KAIZ-59].;;;","18/Sep/19 11:53 PM;esplinr;Additional work:
* Remove this dependency from LibVCX.
* Check libnullpay and libsovtoken to see if they also need to be migrated.;;;",,,,,,,,,
Indy-sdk npm install fails.,IS-1374,42340,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Invalid: Works as Expected,,JSenya,JSenya,13/Sep/19 4:00 AM,19/Nov/19 8:54 PM,28/Oct/23 2:49 AM,19/Nov/19 8:54 PM,1.11.1,,,,,,,1.13.0,,libindy,,,,,0,,,,"Hi,

 

Could someone help me, for the past 2 days I've been trying to install the indy-sdk for nodejs using npm but it fails everytime node-gyp tries to rebuild the files. I've attached the logs.

I'd highly appreciate someone to help me point out where I'm going wrong. I have the libindy dll's installed correctly and the path to the cli folder added to the environment variables.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/19 4:00 AM;JSenya;2019-09-12T18_57_20_761Z-debug.log;https://jira.hyperledger.org/secure/attachment/17809/2019-09-12T18_57_20_761Z-debug.log","19/Sep/19 3:41 PM;JSenya;2019-09-19T06_38_57_429Z-debug.log;https://jira.hyperledger.org/secure/attachment/17830/2019-09-19T06_38_57_429Z-debug.log",,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0103f:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),,,,,,,,,,,"19/Sep/19 3:41 PM;JSenya;Hi, [~esplinr] I've just tried installing the latest update I'm still getting the same error. Could I be doing something wrong or have I missed a dependency. I've attached my logs here [^2019-09-19T06_38_57_429Z-debug.log];;;","19/Nov/19 8:53 PM;JSenya;Fixed;;;",,,,,,,,,,
Migrate the Indy Wallet to aries-wallet,IS-1376,42367,,Task,Code Review,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,16/Sep/19 11:24 PM,03/Feb/20 11:24 PM,28/Oct/23 2:49 AM,,,,,,,,,,,aries,wallet,,,,0,,,,"See details in the Epic description.

Git history does not need to be moved.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1400,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzij",,,,Unset,Unset,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"08/Oct/19 11:48 PM;esplinr;The Aries community wants to evaluate this work before it is moved to an Aries repository.;;;",,,,,,,,,,,
LibVCX support for Aries protocols,IS-1377,42383,,Epic,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,18/Sep/19 2:26 AM,24/Dec/19 8:04 PM,28/Oct/23 2:49 AM,,,,,,,,,,,aries,libvcx,,,,0,,,,"*Story*
As a developer of an application using LibVCX for credential exchange, I want my application to be interoperable with Aries agents.

Specifically, applications built on LibVCX should be able to hold credentials issued by ACA-py or by Evernym's Verity, and issue credentials to StreetCred / OSMA or Connect.Me.

*Acceptance Criteria*
* In addition to the current protocols it supports, LibVCX needs to support the following Aries protocols:
** connect (DID Exchange)
** issuance
** proving
* LibVCX needs to be tested for compatibility against the Aries Cloud Agent Python, and mobile agents such as StreetCred and OSMA.
* LibVCX should also past the Aries protocol test suite, in whatever state it is at the time this work is done.
* The LibVCX application API should change as little as possible so that client applications receive the benefits of the Aries protocols with minimal additional effort.

*Limitations*
* *LibVCX should use Dummy Cloud Agent (or proprietary implementation) as a mediator to have an endpoint*
** There will be custom protocol between VCX and mediator for initial implementation to support DID Exchange with Aries-compatible agent. 
* *To keep LibVCX API current public states of protocols would be kept. It means that libvcx would make some decisions to process more granular steps from community protocols*
* LibVCX currently expects that *all connections are started by the issuer agent, not by the mobile agent*. This could make it *difficult to pass both directions* of the connection test. It may be necessary to raise a separate issue for implementing the connections initiated by the mobile agent.

*Note*
* *IS-1392 IS-1180 IS-1393 and IS-1394 are required for MVP*
* The Evernym agency should be updated to be a mediator as well (similar to IS-1392) and for proprietary implementation more (against dummy) changes are expected
* This effort for LibVCX will make the transition to Aries easier, but will not need to be maintained long term because the Aries architecture will be significantly different. Completing the effort quickly is more important than a flexible architecture.
* Test coverage should be improved right after publishing the MVP version
* The Aries Interop Profile V1 shown in RFC 302 should include all the work needed for interoperability in Credential Exchange, but practical interop is more important than RFC compliance:
https://github.com/hyperledger/aries-rfcs/tree/master/concepts/0302-aries-interop-profile
** The following modifications are expected to RFC0302
*** Exclude: Basic Message, Timing, Transport Return Route, Trust Ping only needs to respond
*** Also might include: Please-ACK, Service Decorator (for the ephemeral proofs use case)
*** We will not support the deprecated v1 cred exchange in RFC0303",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,LibVCX Aries Interop 1,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaii",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"07/Nov/19 11:16 PM;sergey.minaev;Branch with current implementation https://github.com/hyperledger/indy-sdk/tree/vcx-aries-support;;;","19/Dec/19 8:40 PM;sergey.minaev;Minimal support of Connection, Issuance Credentials and Credential Presentation RFCs is available in IndySDK 1.13.0 (libVCX 0.5.0) stable release.;;;",,,,,,,,,,
POA: LibVCX and Aries protocols,IS-1378,42417,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,19/Sep/19 10:38 PM,07/Nov/19 11:38 PM,28/Oct/23 2:49 AM,11/Oct/19 9:50 PM,,,,,,,,,,,,,,,0,,,,"*Acceptance Criteria*
* Analyze the difference between the current Aries RFCs and the LibVCX protocol
** Connection
** Issuance
** Proving 
* Prepare issues
* Size the work",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|hzwqmf:",,,,Unset,Unset,Indy SDK 19.19,Indy Aries 19.20,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,,,,,,,,,"02/Oct/19 8:41 PM;Artemkaaas;*Issue*:   What transport to use? 
* Update Agency that it be able to collect messages on User associated Agent and add an endpoint/message_type for getting them. This way we can move pairwise connection establishing onto VCX level. We use agency only as an endpoint for collection incoming messages.
*  [Transports Return Route](https://github.com/hyperledger/aries-rfcs/tree/master/features/0092-transport-return-route)?

*Connection*:

Current VCX flow

Inviter:
1) vcx_connection_create -> state.Initialized = 1
2) vcx_connection_connect -> prepares invite (share somehow) and move state.OfferSent = 2
3) vcx_connection_update_state -> until get invite response and next move state.VcxStateAccepted = 4

Invitee:
1) vcx_connection_create_with_invite -> state.VcxStateRequestReceived = 3
2) vcx_connection_connect -> send invite response and move to state.VcxStateAccepted = 4

Aries flow

Inviter: 
1) vcx_connection_create -> state.Initialized = 1
2) vcx_connection_connect -> prepares invite (print and next share somehow) -> move state.Invited = 2
3) vcx_connection_update_state -> wait until get `connection_request` -> move state.Requested = 3 -> send `connection_request` -> move state.Responded = 4 -> wait until get `ack` -> move state.Accepted = 5

Invitee:
1) vcx_connection_create_with_invite -> state.Invited = 2
2) vcx_connection_connect -> send `connection_request` and move to state.Requested = 3
3) vcx_connection_update_state -> wait until get `connection_request` -> move state.Responded = 4 -> send `ack` -> move state.Accepted = 5 


Difference:
- different number of states but we can hide it under `vcx_connection_update_state` function for both Inviter and Invitee
    - Inviter should wait for ack
    - Invitee should wait to respond message and send ack
- sending and handling of Error Messages as described here: https://github.com/hyperledger/aries-rfcs/tree/master/features/0160-connection-protocol#errors 


*Credential Issuance*

Current VCX flow:

Issuer:
1) vcx_issuer_create_credential -> state.Initialized = 1
2) vcx_issuer_send_credential_offer -> send Offer and move state.OfferSent = 2
3) vcx_issuer_credential_update_state -> wait until get CredentialRequest -> move state.VcxStateRequestReceived = 3
4) vcx_issuer_send_credential -> send Credential -> move state.VcxStateAccepted = 4
5) vcx_issuer_credential_update_state -> wait until state.Accepted 


Holder:
1) vcx_credential_get_offers -> wait until get offer ----> offer json
2) vcx_credential_create_with_offer -> state.VcxStateRequestReceived = 3
3) vcx_credential_send_request -> send CredentialRequest -> move state.OfferSent = 2
4) vcx_credential_update_state -> wait until get Credential -> move state.VcxStateAccepted = 4


Aries flow: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential

Issuer:
1) vcx_issuer_create_credential -> state.Initialized = 1
2) vcx_issuer_send_credential_offer -> send Offer -> move state.OfferSent = 2
3) vcx_issuer_credential_update_state -> wait until get CredentialRequest -> move state.RequestReceived = 3
4) vcx_issuer_send_credential -> send Credential -> move state.CredentialSend = 4
5) vcx_issuer_credential_update_state -> wait until `ack` -> move state.Accepted = 5

Holder:
1) vcx_credential_get_offers -> wait until get offer ----> offer json
2) vcx_credential_create_with_offer -> state.OfferReceived = 3
3) vcx_credential_send_request -> send CredentialRequest -> move state.RequestSend = 2
4) vcx_credential_update_state -> wait until get Credential -> move state.CredentialReceived = 4 -> send ack -> move state.Accepted = 5


Difference:
- new functions for start with CredentialProposal: 
    Issuer: vcx_issuer_get_credential_proposols and vcx_issuer_create_credential_with_proposol
    Holder: vcx_credential_create_with_proposol and vcx_credential_send_proposol 
- Issuer start with CredentialRequest  -- new function vcx_issuer_create_credential_with_request will create object with state.RequestReceived = 3
- Issuer handle CredentialProposal from OfferSent state -- Reject or Continue
- Handle CredentialRejects on every state


*ProofPresentation*

Current VCX flow:

Verifier:
1) vcx_proof_create -> state.Initialized = 1
2) vcx_proof_send_request -> send ProofRequest -> move state.OfferSent = 2   
3) vcx_proof_update_state -> wait until get Proof -> move state.VcxStateAccepted = 4/ state.RequestReceived = 3

Prover:
1) vcx_disclosed_proof_get_requests ->  wait until get proof request ----> proof request json
2) vcx_disclosed_proof_create_with_request -> state.RequestReceived = 3
3) vcx_disclosed_proof_send_proof -> send Proof -> move state.VcxStateAccepted = 4

Aries flow:
Verifier:
1) vcx_proof_create -> state.Initialized = 1
2) vcx_proof_send_request -> send ProofRequest -> move state.ProofRequestSent = 2  
3) vcx_proof_update_state -> wait until get Proof -> move state.VcxStateAccepted = 4/ state.RequestReceived = 3 -> send ack or reject


Prover:
1) vcx_disclosed_proof_get_requests -> wait until get proof request ----> proof request json
2) vcx_disclosed_proof_create_with_request -> state.RequestReceived = 3
3) vcx_disclosed_proof_send_proof -> send Proof -> move state.ProofSent = 4  
4) vcx_disclosed_proof_update_state -> until get ack -> move state.Accepted = 5/ state.Rejected = 3


Difference:
- Verifier handle ProofProposal ??? create proof request or reject
- Handle ProofReject
- Prover should wait until ProofAccepted (call vcx_disclosed_proof_update_state)


*Message encoding*
Vcx already support [Encryption Envelope](https://github.com/hyperledger/aries-rfcs/tree/master/features/0019-encryption-envelope) RFC.


;;;",,,,,,,,,,,
Extra Param doesn't work on build_payment_req,IS-1379,42440,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,DucaDellaForcoletta,DucaDellaForcoletta,20/Sep/19 11:17 PM,23/Oct/19 6:25 PM,28/Oct/23 2:49 AM,23/Oct/19 6:25 PM,1.11.1,,,,,,,,,libindy,payments,,,,0,,,,"As reported in the python wrapper api docs, an optional extra parameter could be provided upon invocation of the build_payment_req method.

In the api docs is not explained if the extra params must be a simple string or a json string when provided.

 

Environment used:
 * local docker with
 ** indy_plenum_ver=1.9.2
 ** indy_node_ver=1.9.2
 ** python3_indy_crypto_ver=0.4.5
 ** indy_crypto_ver=0.4.5
 ** sovtoken_ver=1.0.2
 ** sovtokenfees_ver=1.0.2
 * unit python test with libindy 1.11.1

From my tests:
 * in case a simple (like ""AABBCC"") string is provided, the invocation will return the {color:#ff0000}error indy.error.CommonInvalidStructure.{color}
 * {color:#172b4d}in case a json string is provided, the invocation is executed with success, but after submission to the ledger, the extra params is not reported in the list of the payment sources and the invocation of the verify-payment-receipt function return an error {color:#de350b}Error: Invalid structure{color}{color}{color:#de350b}
 Caused by: Plugin returned error{color}

Expected:
 # {color:#172b4d}On the api docs should be explicited the right param type {color}
 # {color:#172b4d}The extra parameter should be accepted upon invocation and reported in the payment source list related to the payment transaction performed.{color}

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaw",,,,Unset,Unset,Indy Aries 19.20,Indy Aries 19.21,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,DucaDellaForcoletta,VladimirWork,,,,,,,,"03/Oct/19 4:02 PM;Artemkaaas;Extra can be any string.
There was a bug in libsovtoken. 
I did fix in PR: https://github.com/sovrin-foundation/libsovtoken/pull/412
;;;","21/Oct/19 9:58 PM;VladimirWork;We have an issue with numbers as strings:

Build:
{noformat}
    req, _ = await payment.build_payment_req(
        wallet_handler, trustee_did, json.dumps([source]), json.dumps(
            [
                {'recipient': address_to, 'amount': 100000},
                {'recipient': address_from, 'amount': amount - 100000}
            ]
        ), '0'
    )
{noformat}

Request:
{noformat}
{""operation"":{""type"":""10001"",""outputs"":[{""address"":""2jCAsUuVAnHZCrGHnQXg5oyB8hSLoZtx5EANzj7MQBw9xrHcRZ"",""amount"":100000},{""address"":""2W8REAHzS9fPkNK6w5vJGixknRSERtsjCHcqSem3X9MT514MRB"",""amount"":99900000}],""inputs"":[{""address"":""2W8REAHzS9fPkNK6w5vJGixknRSERtsjCHcqSem3X9MT514MRB"",""seqNo"":1}],""extra"":0,""signatures"":[""zx8PnWUZB8vnBZ8PZve8wS1UseSF8hNNg1Ld2Mi9ATXSjZtRim3Q6AGttaorP763W9NZDiwqSTEAsxJTZcKM7vF""]},""reqId"":1571661887530328447,""protocolVersion"":2,""identifier"":""V4SGRU86Z58d6TV7PBUe6f""}
{noformat}
;;;","21/Oct/19 10:37 PM;VladimirWork;ST-626 was reported due to inconsistent payment requests' validation with various extra fields.;;;","22/Oct/19 5:18 PM;VladimirWork;We have an issue with ""extra"":"""" case (it looks like pool doesn't accept client signature):
{noformat}
{""operation"":{""type"":""10001"",""outputs"":[{""address"":""2P2WXrfrnV9aTEaXRcS9ExqDZdt5frHw992Y59STjkRBePgVqz"",""amount"":100000},{""address"":""2W8REAHzS9fPkNK6w5vJGixknRSERtsjCHcqSem3X9MT514MRB"",""amount"":99900000}],""inputs"":[{""address"":""2W8REAHzS9fPkNK6w5vJGixknRSERtsjCHcqSem3X9MT514MRB"",""seqNo"":1}],""extra"":"""",""signatures"":[""5vFnyaAteP3mHs26E7Y4khnM5FBPDtn3tZaW6dzsXEj6WYWiKcYsr2eCtEatKJQR4Pi6sVwe3gyce3QoJokrFJsr""]},""reqId"":1571729025373290139,""protocolVersion"":2,""identifier"":""V4SGRU86Z58d6TV7PBUe6f""}

{'reqId': 1571729025373290139, 'reason': 'client request invalid: insufficient number of valid signatures, 1 is required but 0 valid and 1 invalid have been provided. The following signatures are invalid: did=2W8REAHzS9fPkNK6w5vJGixknRSERtsjCHcqSem3X9MT514MRB, signature=5vFnyaAteP3mHs26E7Y4khnM5FBPDtn3tZaW6dzsXEj6WYWiKcYsr2eCtEatKJQR4Pi6sVwe3gyce3QoJokrFJsr', 'identifier': 'V4SGRU86Z58d6TV7PBUe6f', 'op': 'REQNACK'}
{noformat}
It will be fixed in scope of ST-626.;;;","23/Oct/19 6:25 PM;VladimirWork;Build Info:
libindy 1.12.0~1365
libsovtoken 1.0.2~90

Actual Results:
Extra can be any string, all isues found will be fixed in scope of ST-626 at node side.;;;",,,,,,,
"Holder can submit proof that fails ""attr:<attr_name>::value"" restriction",IS-1380,42446,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,nbrempel,nbrempel,nbrempel,21/Sep/19 2:18 AM,30/Sep/19 10:34 PM,28/Oct/23 2:49 AM,30/Sep/19 10:34 PM,,,,,,,,1.12.0,,,,,,,0,,,,"The holder is able to construct a proof that fails the ""attr:<attr_name>::value"" restriction in the proof request and the verifier will still successfully verify it.

A pull request containing a failing unit test is open here: https://github.com/hyperledger/indy-sdk/pull/1892",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zko:",,,,Unset,Unset,Indy SDK 19.19,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nbrempel,sergey.minaev,,,,,,,,,"26/Sep/19 5:45 PM;sergey.minaev;The PR mentioned in the description is updated with a fix.;;;","26/Sep/19 5:46 PM;sergey.minaev;[~nbrempel] now the test is passed. Would you like to do some validation on your side?;;;","26/Sep/19 5:47 PM;sergey.minaev;Build info: 1.11.1 master 1329;;;",,,,,,,,,
"Multiple ""attr::<attr_name>::value"" restrictions always fails",IS-1381,42449,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,nbrempel,nbrempel,21/Sep/19 5:00 AM,04/Dec/19 1:39 AM,28/Oct/23 2:49 AM,04/Dec/19 1:28 AM,,,,,,,,1.13.0,,,,,,,0,TShirt_M,,,"When multiple ""attr::<attr_name>::value"" restrictions are sent in a proof request, the verification always fails.

 

Functionality for a single restriction works and was added in https://jira.hyperledger.org/browse/IS-1363

 

I added a pull request with a failing unit test here: https://github.com/hyperledger/indy-sdk/pull/1893",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiic",,,,Unset,Unset,Indy Aries 19.20,Indy Aries 19.21,Indy Aries 19.22,Indy Aries 19.23,Indy Aries 19.24,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),KitHat,nbrempel,sergey.minaev,VladimirWork,,,,,,,"24/Oct/19 9:01 PM;sergey.minaev;Right now we are discussing the requirements and use case. Potential option of the fix is appended to 1893 PR, but it's not so obvious decision  https://github.com/hyperledger/indy-sdk/pull/1893#issuecomment-545427942;;;","25/Nov/19 11:28 PM;KitHat;https://github.com/hyperledger/indy-sdk/pull/1958;;;","27/Nov/19 9:38 PM;KitHat;Problem reason: 
- Invalid generated proofs when you need two attrs from the same credential

Changes: 
- Added new attribute ""names"". It should be used instead of ""name"" for revealed attribute when you want to select several attributes from the same credential

PR:
- https://github.com/hyperledger/indy-sdk/pull/1958

Version:
- master #1377

Risk factors:
- Proof generation and verification.

Risk:
- Med

Covered with tests:
- https://github.com/hyperledger/indy-sdk/pull/1958/files#diff-ea95cf1ba77920bd6143b418120372bbR989

Recommendations for QA
- Proof generation and verification should be tested properly with different restrictions and etc.;;;","29/Nov/19 8:13 PM;VladimirWork;We still don't have 1377 master in repo.;;;","04/Dec/19 1:39 AM;VladimirWork;Build Info:
1.12.0~1382

Steps to Validate:
https://github.com/VladimirWork/indy-test-automation/blob/d7c4cf4ab5999b6c0d0f46fe6e97ec715ce48609/system/draft/test_misc.py#L2077

Actual Results:
We can create proof request using `names` parameter, get several attributes from proof and successfully verify it.
;;;",,,,,,,
Fail to build indy pool docker,IS-1382,42544,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,liormargalit,liormargalit,liormargalit,29/Sep/19 4:10 AM,08/Oct/19 11:21 PM,28/Oct/23 2:49 AM,08/Oct/19 11:21 PM,1.11.1,,,,,,,1.12.0,,libindy,,,,,0,,,,"Running:

sudo docker build -f ci/indy-pool.dockerfile -t indy_pool .

Result in the following error:

The following packages have unmet dependencies:
 indy-plenum : Depends: python3-pyzmq (= 17.0.0) but 18.1.0 is to be installed
E: Unable to correct problems, you have held broken packages.
The command '/bin/sh -c apt-get update -y && apt-get install -y indy-plenum=${indy_plenum_ver} indy-node=${indy_node_ver} python3-indy-crypto=${python3_indy_crypto_ver} libindy-crypto=${indy_crypto_ver} vim' returned a non-zero code: 100",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:ztzy",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),liormargalit,sergey.minaev,,,,,,,,,"02/Oct/19 12:14 AM;sergey.minaev;Fixed in PR https://github.com/hyperledger/indy-sdk/pull/1909;;;","02/Oct/19 12:17 AM;sergey.minaev;[~liormargalit] thank you for raising this ticket. The fix is merged to master, would you like to validate it on your side or we can close the ticket as done?;;;","02/Oct/19 12:57 AM;liormargalit;Verified, it works. Thank you for the quick help;;;",,,,,,,,,
GET_TXN doesn't work with old libindy,IS-1383,42549,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,VladimirWork,ashcherbakov,ashcherbakov,30/Sep/19 10:43 PM,03/Oct/19 10:42 PM,28/Oct/23 2:49 AM,03/Oct/19 10:42 PM,,,,,,,,1.12.0,,,,,,,0,TShirt_S,,,"*Issue:*
 * GET_TXN for old libindy which doesn't support audit proof for GET_TXN may return ""consensus is impossible"".
 * This is intermittent issue, and its probability depends on the pool size.

*Reason:*
 * The latest indy-node support introduces BLS multisig for GET_TXN
 * GET_TXN has a new field ""multi_sig"" which is a bls multi-sig (signature + list of participants)
 * List of participants can be different on nodes depending on the combination of commits they used for consensus.
 * So, client can not get F+1 equal replies because of difference in participant field.

*Proposed fix:*
 * Since libindy always removes ""stateProof"" field from any request, the fix is to move ""multi_sig"" field to ""stateProof""
 * Pros:
 ** Compatible with older version
 ** Audit Proof checks will work for the latest (September release) SDK
 * Cons:
 ** Audit Proof  will not work with the current (August) SDK with the latest (September) Node. May be OK since this is just temporarily and doesn't cause any issues (fallback to consensus will work well)
 ** Not so good from the clean API point of view (state proof means not state proof, but just multi-sigs)

*Test:*
 * Open connection to the pool
 * Rotate BLS keys (ideally on F+1 nodes)
 * Send a domain txn
 * Do GET_TXN

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,INDY-2233,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiw",,,,Unset,Unset,Indy Aries 19.20,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashcherbakov,KitHat,VladimirWork,,,,,,,,"03/Oct/19 5:18 PM;KitHat;Problem reason: 
- because the set of multi-signatures in request can differ consensus in old libindy versions was not collected

Changes: 
- moved `multi_signature` to `state_proof`

PR:
- https://github.com/hyperledger/indy-plenum/pull/1356


Version:
- indy-node master 1.10.0~dev1095
- indy-sdk master 1.11.1~1343

Risk factors:
- some state proof corner cases

Risk:
- Low

Covered with tests:
- https://github.com/hyperledger/indy-plenum/pull/1356/files#diff-25d6b0f795369aa431667e42226f8392R11

Recommendations for QA
- test state proof on old version, test that requests on the versions with old changes that they are collected properly.;;;","03/Oct/19 10:42 PM;VladimirWork;Validated in scope of INDY-2233.;;;",,,,,,,,,,
Validate credential exchange protocol supports fully qualified DIDs,IS-1384,42554,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,sergey.minaev,30/Sep/19 11:55 PM,04/Oct/19 1:18 AM,28/Oct/23 2:49 AM,04/Oct/19 1:18 AM,,,,,,,,1.12.0,,aries,libvcx,,,,0,,,,"*Acceptance Criteria*
* LibVCX supports fully qualified DIDs alongside the existing credential exchange protocol without fully qualified DIDs
* The support must be backwards compatible: issuer with a FQDID, verifier without, and vice-versa.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1366,IS-1386,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaix",,,,Unset,Unset,Indy Aries 19.20,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,VladimirWork,,,,,,,"02/Oct/19 12:03 AM;VladimirWork;There is an issue in 1.11.1~1338 with `anoncreds.to_unqualified(cred_offer_json)` if schema name has a space symbol. <<< Fixed in 1.11.1~1343;;;","04/Oct/19 1:11 AM;VladimirWork;Test suite has been implemented: https://github.com/hyperledger/indy-test-automation/blob/master/system/indy-sdk-tests/TestFQDIDSuite.py;;;","04/Oct/19 1:12 AM;VladimirWork;Libindy compatibility has been verified (last stable prover/issuer without FQDID against last master prover/issuer with FQDID) manually.;;;","04/Oct/19 1:13 AM;VladimirWork;Libvcx will be tested in scope of IS-1386.;;;",,,,,,,,
"OpenPoolLedger - ""preordered_nodes"" and ""number_read_nodes"" are ineffective",IS-1385,42617,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dunff2k,dunff2k,dunff2k,03/Oct/19 11:51 PM,17/Jan/20 10:39 PM,28/Oct/23 2:49 AM,17/Jan/20 10:39 PM,1.11.1,,,,,,,,,,,,,,0,,,," 

I have been experimenting with different parameters to OpenPoolLedger.

I have a ledger setup with 11 nodes and I'm connecting to the ledger using the below (node.js). 
{code:java}
async function connectToLedger(ledgerConf) {

   return new Promise(resolve => {
    var param = {""number_read_nodes"": 11, ""preordered_nodes"": [""Node1"",""Node2"",""Node3"",""Node4"", ""Node5"", ""Node6"", ""Node7"", ""Node8"",""Node9"",""Node10"",""Node11""]}
    indy.openPoolLedger(ledgerConf,param, function(err, result) {
      if (err)
        console.log(err)
      else {
        console.log(""Connected to ledger"")
        resolve(result)
      }
     })
    })


}
{code}
 

*Expectation:*

Transaction response is signed by all 11 nodes listed in response to the NYM read transaction

 

 

*Result:*

Only 8 nodes are listed in the participants array in the transaction response. 

 
{code:java}
""result"":{""seqNo"":null,""reqId"":1570100201911166500,""state_proof"":{""root_hash"":""8uKvNTefjWqzhkVv74AZVmuiaswcMzzm4Sojw1xeMT41"",""multi_signature"":{""participants"":[""Node3"",""Node5"",""Node8"",""Node2"",""Node11"",""Node9"",""Node10"",""Node1""],""signature"":""RbtHGZJhs8SoSQRn1Ehb4asmuyhqxRNLhFgLdZ3C6dT8PCBPVzENP3fZQSu57UVg3KuVtsC2wGsK8YnbRd7Tmkm5vddAH9Qs1vcP2jNyZeYxxGcjhuLxjqiQBAfQX9ZTmpuZPYqHwZ7i2xi7kfLHS6SQyaFLpFRoQwjY6SfXFKkSZd"",""value"":{""timestamp"":1570099950,""pool_state_root_hash"":""5ocqjFPaV1Rx84Z4YGgWqN3eQ8Rntz1ESWAkUZ9YfZ9H"",""txn_root_hash"":""CuhjLJhMnUtTssAzp6o61nthUNWMZLkHF5yQBydd424U"",""state_root_hash"":""8uKvNTefjWqzhkVv74AZVmuiaswcMzzm4Sojw1xeMT41"",""ledger_id"":1}},""proof_nodes"":""+QJH+HGgugyjpwUzFrTJGq0qjp7JKKodYlB5XK6KIxIGuKx0v5eAgKDad7pi/xM+oj45a1919g9exswZZSUbL84m8gd12I9FNICAgICAgICAoK4BynhznLYc87I81RdSDc2QtLhfZ9fFD9faI6LIRTRJgICAgPkB0aDT0j9uCbFabO0LnyutnB5uDC61QaWLtVTJU4XCa4sWo4CgTGLvEgGW5SYkMRDNbsru4+B7lODW6ztxvN9IvNvIFd+gey7C52NqsubvkZJ7Y0OBqjujrlTSduSYPS9lSBopg+mgX1CnJdlB7yrzURpxWgef4MDvUMQR2PUpYowCO33qQBmgDaRa9BBEjSENdPc/x8B6SiuBf7xQvaDBpy6VZEHIx7ugTCiaHi1XLcVCrii7Y9InlVbGWeRXK8V0bA69uf3vBaWgCC+glOPksCETzg8jHbVvDSmW+gjEcz0mJBuK4+FLa6yAoNJaeigCdwb8FF2VLozYJhamuuqF6/aCEb9gc8NergD9oMA6Qul4hnJlT2qHuRtogWTvzZumt308a+dGKfiZX1fIoHpItbmgiLdwKS/T9kDkM6cp9HJbp1ozbsyV1MsKW14moDbQNVnVSx6J7vZjZ5uEZsT6YUUfQLq6cmjv8n9XtzlboFwwh4nRBRuwNC2YoYocJCagJr6HHQPF87USFQCRJbMaoEp4DMqccITxKy3NFtg9FRuGCwEPnMwAvmSnXNHo+7auoDs6GXxRL8inD2b3RY1v/ufksDHNqfFKaK2MEIjNIZwagA==""},""data"":null,""dest"":""QNoBagWjtYx9djw449bXeL"",""txnTime"":null,""type"":""105"",""identifier"":""67X5e1dLpihyuFZtt1J2Dd""},""op"":""REPLY""}
{code}
 

What is the logic behind""preordered_nodes"" and ""number_read_nodes?

 

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q2:",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,dunff2k,esplinr,sergey.minaev,,,,,,,"20/Nov/19 12:51 AM;esplinr;Thanks you for reporting this odd behavior.

We don't think this is a bug, but we should improve the documentation to clarify what is going on.;;;","06/Dec/19 9:09 PM;dunff2k;Can you share what ""preordered_nodes"" and ""number_read_nodes"" are supposed to do, then?

 

 ;;;","30/Dec/19 5:15 PM;Artemkaaas;Hello, [~dunff2k]
 ""number_read_nodes"" - Libindy sends write transactions (like `NYM)` to all nodes in the ledger. In case of reading request (like `GET_NYM`) it's enough to receive a reply only from one node with valid `state proof`. So, by default Libindy sends a read request to 2 (number_read_nodes) nodes. If Reply wasn't received or response `state proof` is invalid Libindy sends the request again but to 2 (number_read_nodes) * 2 = 4 nodes and so far until getting valid `state proof` or required number of equal replies. 
 {{So using `number_read_nodes` parameter you can set the number of nodes to send read requests. It doesn't affect response data.}}

{{""preordered_nodes"" - names of nodes that will have priority during reading request sending. This can be useful if a user prefers querying specific nodes. Assume that you trust more to `Node1` and `Node2` nodes or they reply faster. if you pass them to `preordered_nodes` parameter Libindy always sends a read request to these nodes first and only then (if not enough) to others (in random order).}};;;","17/Jan/20 10:39 PM;sergey.minaev;[~dunff2k] I'm closing the ticket as the comment above seems reasonable and the parameters are described in API. Fill free to re-open the issue, if you have more questions. Also, if you have an idea how to re-state the API documentation to make it more clear - the PR with update is very appreciated.;;;",,,,,,,,
[VCX] Validate credential exchange protocol supports fully qualified DIDs,IS-1386,42618,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,VladimirWork,VladimirWork,04/Oct/19 12:33 AM,11/Oct/19 3:45 PM,28/Oct/23 2:49 AM,11/Oct/19 3:45 PM,,,,,,,,,,,,,,,0,,,,"*Acceptance Criteria*
* LibVCX supports fully qualified DIDs alongside the existing credential exchange protocol without fully qualified DIDs",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1384,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zkn:",,,,Unset,Unset,Indy Aries 19.20,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,VladimirWork,,,,,,,,,"10/Oct/19 2:21 PM;Artemkaaas;Did testing of Vcx FQ DID support based on `python/demo` scripts. 
I ran 4 different docker containers: Indy-Pool, Dummy-Agent, Faber, Alice to do proper testing.
There were checked the following cases:
1)
Dummy Agent - 1.12.0
Faber - Liibndy 1.12.0, Vcx 0.4.2 - unqualified
Alice - Liibndy 1.11.1, Vcx 0.4.1 - unqualified
Result - passed

2)
Dummy Agent - 1.12.0
Faber - Liibndy 1.12.0, Vcx 0.4.2 - fully-qualified qualified
Alice - Liibndy 1.11.1, Vcx 0.4.1 - unqualified
Result - passed

3) 
Dummy Agent - 1.11.0
Faber - Liibndy 1.12.0, Vcx 0.4.2 - unqualified
Alice - Liibndy 1.11.1, Vcx 0.4.1 - unqualified
Result - passed

4) 
Dummy Agent - 1.11.0
Faber - Liibndy 1.12.0, Vcx 0.4.2 - fully-qualified
Alice - Liibndy 1.11.1, Vcx 0.4.1 - unqualified
Result - failed as expected because Agent can't handle fully-qualified DIDs;;;",,,,,,,,,,,
Payment address not created with provided seed,IS-1387,42624,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid: Works as Expected,,DucaDellaForcoletta,DucaDellaForcoletta,04/Oct/19 5:30 PM,17/Feb/20 6:09 PM,28/Oct/23 2:49 AM,17/Feb/20 6:09 PM,1.11.1,,,,,,,,,libindy,payments,,,,0,EV-Triaged,,,"Environment used:
 * local docker with
 ** indy_plenum_ver=1.9.2
 ** indy_node_ver=1.9.2
 ** python3_indy_crypto_ver=0.4.5
 ** indy_crypto_ver=0.4.5
 ** sovtoken_ver=1.0.2
 ** sovtokenfees_ver=1.0.2
 * indy-cli test with libindy 1.11.1
 * libindypostgres-plugin for wallet storage

 

The command create-payment-address returns ""{color:#de350b}Payment address already exists{color}"" if the provided seed has been used also in a create and store did command.

 

In order to reproduce the problem
 # create a wallet
 # create and store did using a provided seed
 # create payment address (method sov:) using the same seed of the step 2
 # The payment address is not created and a wrong (already exist) error is returned.

 

The test has been executed through indy-cli console

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzi9",,,,Unset,Unset,Indy Aries 20.02,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),DucaDellaForcoletta,esplinr,sergey.minaev,,,,,,,,"10/Oct/19 8:40 PM;esplinr;Thank you for reporting this bug. We have reproduced it.

It is unexpected to use the same seed for different entities. We will look at whether this is a behavior that should be supported.;;;","17/Feb/20 6:09 PM;sergey.minaev;I suggest to keep current behavior as reusing seed sounds not secure for me. So I'm closing this ticket as ""works as expected"" until real strong motivation and usecase would be discovered for the re-using;;;",,,,,,,,,,
Extend configuration doc with VCX info,IS-1388,42627,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,05/Oct/19 12:08 AM,25/Nov/19 7:13 PM,28/Oct/23 2:49 AM,25/Nov/19 7:13 PM,,,,,,,,1.13.0,,,,,,,0,,,,"This document should also discuss LibVCX configuration:
https://github.com/hyperledger/indy-sdk/blob/master/docs/configuration.md

Questions that should be answered:
* What incantation is needed to get logs with libvcx?
* How to configure the Indy pool?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zkn:xw",,,,Unset,Unset,Indy Aries 19.23,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"25/Nov/19 7:13 PM;sergey.minaev;https://github.com/hyperledger/indy-sdk/pull/1957;;;",,,,,,,,,,,
Optimize deb publishing in CD pipeline,IS-1389,42628,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,05/Oct/19 12:08 AM,17/Jan/20 10:54 PM,28/Oct/23 2:49 AM,17/Jan/20 10:44 PM,,,,,,,,1.14.2,,,,,,,0,,,,Packaging pre-built debian packages takes an hour. We should improve it to go faster.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q2:zr",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"13/Jan/20 6:49 PM;Artemkaaas;Changes: 
 - added `--no-reset-cache` flag to `upload_debs.py` script.
 - publishing deb packages with passing this flag except for the latest one.
PR:  [https://github.com/hyperledger/indy-sdk/pull/2031];;;","17/Jan/20 10:44 PM;sergey.minaev;Publishing time for deb artifacts is reduced 2 times;;;",,,,,,,,,,
LibNullPay is missing the API for append TAA,IS-1390,42632,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Cannot Reproduce,,esplinr,esplinr,05/Oct/19 1:10 AM,11/Oct/19 3:38 AM,28/Oct/23 2:49 AM,11/Oct/19 3:38 AM,,,,,,,,,,payments,,,,,0,,,,"When using the Indy CLI to append-transaction-author-agreement-acceptance to a request, LibNullPay throws an error. This works correctly with LibSovToken.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i011j7:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,esplinr,,,,,,,,,"11/Oct/19 3:37 AM;burdettadam;I am not able to reproduce this.;;;",,,,,,,,,,,
Set Protocol Version in Indy CLI,IS-1391,42634,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,05/Oct/19 1:17 AM,17/Jan/20 10:57 PM,28/Oct/23 2:49 AM,17/Jan/20 10:42 PM,,,,,,,,1.14.2,,cli,,,,,0,,,,"If we update the protocol version between Indy Node and LibIndy, we need to be able to select which protocol we should use in Indy CLI so that it is possible to create offline transactions that will be valid when submitted to the ledger.

*Notes*
* Once a pool connection has been established, the CLI will already automatically use the correct protocol version for that pool.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q2:z",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,,,,,,,,,"09/Jan/20 6:04 PM;Artemkaaas;Changes: added `pool set-protocol-version` command to set a protocol version that will be used for ledger requests. Unless command is called the default protocol version is used.


PR: [https://github.com/hyperledger/indy-sdk/pull/2023];;;","15/Jan/20 3:40 PM;Artemkaaas;Build version: master-1432;;;",,,,,,,,,,
Dummy cloud agent connection protocol,IS-1392,42663,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,08/Oct/19 6:30 PM,07/Nov/19 11:37 PM,28/Oct/23 2:49 AM,24/Oct/19 9:24 PM,,,,,,,,1.13.0,,,,,,,0,,,,"LibVCX is initially designed to have a backend for mobile agent use case. In order to support Aries RFCs we have to update dummy agent to use them as [mediator|https://github.com/hyperledger/aries-rfcs/blob/master/concepts/0046-mediators-and-relays/README.md#scenario-2-a-gatekeeper] 
 Draft Idea for flow:
 * dummy cloud agent registers VCX-based agent (proprietary protocol is acceptable)
 * while connection (DID Exchange) protocol, VCX use the cloud agent as mediator and list it in route keys

So from 3rd party Aries-compatible agent point of view, the pair of VCX-based mobile agent and Dummy cloud agent would look like Aries-compatible, but internally we can follow old protocol (introduced by Evernym) to deliver messages from the backend to mobile.

Agency side:
    We can keep the common workflow as is.
    We still can create Pairwise Agents on the initiation of connection or accepting an invitation but use it as a mediator only.
 
In the current state Pairwise Agents are already able
 - collect incoming messages
 - return collected messages
 - update status of received messages

The key difference is that we will not use Agency anymore for sending messages to another connection side,
 so we don't need to keep other side keys on the Agency.
Vcx will do the message preparation and sending itself.

There is a problem with message forwarding:
     Now DIDs must be used as target (`to` filed) according to Cross-Domain Messaging HIPE.

This problem is reflected in the issue: https://github.com/hyperledger/aries-rfcs/issues/255.
Lovesh's suggestion sounds acceptable to us.
 

So, we need to change on Agency is making support of messages forwarding based on Verkey's (in addition to DID's based).
It should be easy to distinguish because fully-qualified DID's must be used for a new protocol version.

 

Each message sent to our Pairwise Connection should be wrapper into 2 Forward messages and  Anonymously encrypted.
{code:java}
forward_message = {   
  ""@type"": ""did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/routing/1.0/forward"",   
  ""to"" : ""Alice Pairwise Agent Verkey"",   
  ""msg"" : encrypted_forward_inner_message
}{code}
{code:java}
forward_inner_message = {   
  ""@type"": ""did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/routing/1.0/forward"",   
  ""to"" : ""Alice Pairwise Verkey"",   
  ""msg"" : encrypted_response 
} {code}
{code:java}
response =
{   .... }
{code}
 ",,,,,,,,,,,,,,,,,,,IS-1180,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|hzwqmv:",,,,Unset,Unset,Indy Aries 19.21,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"09/Oct/19 9:33 PM;Artemkaaas;Current state:
 - Agency
 - User Agent
 - Pairwise Connection Agent -  now all incoming messages collect here.

We need:
 - Agency
 - User Agent - collect all incoming messages here. It's good to be able to query them by pairwise DID. 
 - Pairwise Connection Agent  - we will not create it anymore.;;;","24/Oct/19 9:24 PM;sergey.minaev;Done in PR https://github.com/hyperledger/indy-sdk/pull/1936;;;",,,,,,,,,,
LibVCX Aries: Implement Credential Issuance RFC,IS-1393,42664,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,sergey.minaev,sergey.minaev,08/Oct/19 6:36 PM,11/Nov/19 6:57 PM,28/Oct/23 2:49 AM,11/Nov/19 6:57 PM,,,,,,,,1.13.0,,,,,,,0,,,,"Current VCX flow:

Issuer:
 1) vcx_issuer_create_credential -> creates `IssuerCredential` state object associated with handle -> state.Initialized = 1
 2) vcx_issuer_send_credential_offer -> generates `offer` message -> send `offer` to pairwise -> move state.OfferSent = 2
 3) vcx_issuer_credential_update_state -> wait until get `credential_request` message -> processes received data -> move state.VcxStateRequestReceived = 3
 4) vcx_issuer_send_credential -> generates `credential` message -> send `credential` message -> move state.VcxStateAccepted = 4 -> assume that credential is issued
 5) Python Demo does `vcx_issuer_credential_update_state` in the loop to wait until the state is equal to state.Accepted but it is already true..

Holder:
 1) vcx_credential_get_offers -> asks agency for messages -> wait until get `offer` message ----> offer json
 2) vcx_credential_create_with_offer -> creates `Credential` state object associated with handle -> state.VcxStateRequestReceived = 3
 3) vcx_credential_send_request -> prepares and send `redential_request` message -> move state.OfferSent = 2
 4) vcx_credential_update_state -> wait until get `credential` message -> processes data -> move state.VcxStateAccepted = 4 -> assume that the process is finished

Aries flow: [https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential]

Issuer:
 1) vcx_issuer_create_credential -> creates `IssuerCredential` state object associated with handle -> state.Initialized = 1
 2) vcx_issuer_send_credential_offer -> generates `offer` message -> send `offer` to pairwise -> move state.OfferSent = 2
 3) vcx_issuer_credential_update_state -> asks agency for messages by sending `GetMessages` command with status code `Pending`? -> (decrypt) until get `credential_request` message -> processes received data -> move state.RequestReceived = 3
 4) vcx_issuer_send_credential -> generates `credential` message -> send `credential` message -> move state.CredentialSend = 4 -> send UpdateMessageStatus`  command to agenct with status code `Accepted`?
 5) vcx_issuer_credential_update_state -> asks agency for messages by sending `GetMessages` command with status code `Pending`? -> (decrypt) wait until `ack` -> move state.Accepted = 5 -> send UpdateMessageStatus`  command to agenct with status code `Accepted`? -> assume that credential is issued

Holder:
 1) vcx_credential_get_offers -> asks agency for messages by sending `GetMessages` command with status code `Pending`? -> (decrypt) wait until get `offer` message ----> offer json
 2) vcx_credential_create_with_offer -> creates `Credential` state object associated with handle -> state.OfferReceived = 3 -> send UpdateMessageStatus`  command to agenct with status code `Accepted`?
 3) vcx_credential_send_request -> prepares and send `redential_request` message -> move state.RequestSend = 2
 4) vcx_credential_update_state -> asks agency for messages by sending `GetMessages` command with status code `Pending`? -> (decrypt) until get `credential` message -> processes data -> move state.CredentialReceived = 4 -> send `ack` message -> send UpdateMessageStatus`  command to agenct with status code `Accepted`? -> move state.Accepted = 5 -> assume that the process is finished

Already supported:
 - Message encryption/decryption: [https://github.com/hyperledger/aries-rfcs/tree/master/features/0019-encryption-envelope]
 - Message Id and Threading: [https://github.com/hyperledger/aries-rfcs/tree/master/concepts/0008-message-id-and-threading]

Difference:
 1) The format of outgoing and incoming messages are absolutely different. 
 2) Vcx packs messages according to pairwise DIDDoc stored in the state and sends them to pairwise remote endoint directly. NOT to it's own Agency.
 3) Agency collects incoming messages in encoded view and with received status. Vcx gets them -> decodes them -> processes them -> sends updaes messages status command to Agency.
 4) The general flow from VCX side is almost the same but only to complete the process:
 - Holder has to send `ack` message.
 - The issuer has to wait for `ack` message.
 2) New functions to start the process with `credential_proposal` message:
 - Issuer: `vcx_issuer_get_credential_proposals` which acks agency for new messages and `vcx_issuer_create_credential_with_proposal` to create initial state.
 We need to decide either Issuer always accepts `credential_proposal` or reject in the initial implementation.

 - Holder: `vcx_credential_create_with_proposal` to create initial state and `vcx_credential_send_proposal` to send it to pairwise connection.

5) New functions to start the process with `credential_request` message: 
 – Issuer `vcx_issuer_create_credential_with_request` create internal state object with state.RequestReceived = 3
 - Holder ?

6) Handle `credential_reject` messages on every state.",,,,,,,,,,,,IS-1180,,,,,,,IS-1395,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|hzwqnb:",,,,Unset,Unset,Indy Aries 19.21,Indy Aries 19.22,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"11/Nov/19 6:57 PM;sergey.minaev;Implementation merged to shared branch https://github.com/hyperledger/indy-sdk/tree/vcx-aries-support ;;;",,,,,,,,,,,
LibVCX Aries: Implement Credential Presentation RFC,IS-1394,42665,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,08/Oct/19 6:37 PM,13/Nov/19 11:04 PM,28/Oct/23 2:49 AM,11/Nov/19 6:56 PM,,,,,,,,1.13.0,,,,,,,0,,,,"Current VCX flow:

Verifier:
 1) vcx_proof_create -> creates `Proof` state object associated with handle -> state.Initialized = 1
 2) vcx_proof_send_request -> generates `proof request` message -> send `proof request` -> move state.OfferSent = 2
 3) vcx_proof_update_state -> wait until get `proof` message -> move state.VcxStateAccepted = 4/ state.RequestReceived = 3 -> accumed that proccess is finished.

Prover:
 1) vcx_disclosed_proof_get_requests -> asks agency for messages -> wait until get `proof request` ----> proof request json
 2) vcx_disclosed_proof_create_with_request -> creates `DisclosedProof` state object associated with handle -> state.RequestReceived = 3
 3) vcx_disclosed_proof_send_proof -> generates `proof` message -> send `proof` message -> move state.VcxStateAccepted = 4 -> accumed that proccess is finished. successfully???

Aries flow: [https://github.com/hyperledger/aries-rfcs/tree/master/features/0037-present-proof]

Verifier:
 1) vcx_proof_create -> creates `Proof` state object associated with handle -> state.Initialized = 1
 2) vcx_proof_send_request -> generates `proof request` message -> send `proof request` -> move state.ProofRequestSent = 2
 3) vcx_proof_update_state --> asks agency for messages by sending `GetMessages` command with status code `Pending`? -> (decrypt)  wait until get `proof` message -> move state.VcxStateAccepted = 4/ state.RequestReceived = 3 -> send `ack` or `reject` -->  send UpdateMessageStatus`  command to agenct with status code `Accepted`? -> accumed that proccess is finished.

Prover:
 1) vcx_disclosed_proof_get_requests -> asks agency for messages by sending `GetMessages` command with status code `Pending`? -> (decrypt)  wait until get `proof request` ----> proof request json
 2) vcx_disclosed_proof_create_with_request -> creates `DisclosedProof` state object associated with handle -> state.RequestReceived = 3
 3) vcx_disclosed_proof_send_proof -> generates `proof` message -> send `proof` message -> move state.ProofSent = 4 -> send UpdateMessageStatus`  command to agenct with status code `Accepted`?
 4) vcx_disclosed_proof_update_state ->asks agency for messages by sending `GetMessages` command with status code `Pending`? -> (decrypt)  wait until get ack -> move state.Accepted = 5/ state.Rejected = 3 -> send UpdateMessageStatus`  command to agenct with status code `Accepted`? -> accumed that proccess is finished. -> accumed that proccess is finished.

Already supported:
 - Message encryption/decryption: [https://github.com/hyperledger/aries-rfcs/tree/master/features/0019-encryption-envelope]
 - Message Id and Threading: [https://github.com/hyperledger/aries-rfcs/tree/master/concepts/0008-message-id-and-threading]

Difference:
 1) The format of outgoing and incoming messages are absolutely different. 
 2) Vcx packs messages according to pairwise DIDDoc stored in the state and sends them to pairwise remote endoint directly. NOT to it's own Agency.
 3) Agency collects incoming messages in encoded view and with received status. Vcx gets them -> decodes them -> processes them -> sends updaes messages status command to Agency.
 4) The genera VCXl flow is almost the same but only to complete the process:
 - Verifier has to send `ack` or `reject` message.
 - Prover has to wait for `ack` or `reject` message and set the final status based on the response type.

5) Verifier handles `proof_proposal` message. We need to decide either he should accept it and create proof request or reject.
 6) Both sides can handle `proof_reject` message on every step.",,,,,,,,,,,,IS-1180,,,,,,,IS-1395,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|hzwqn3:",,,,Unset,Unset,Indy Aries 19.22,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"11/Nov/19 6:56 PM;sergey.minaev;Implementation is merged to shared branch https://github.com/hyperledger/indy-sdk/tree/vcx-aries-support ;;;",,,,,,,,,,,
LibVCX Aries: Integration and system tests improvements,IS-1395,42666,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,08/Oct/19 9:15 PM,25/Nov/19 11:06 PM,28/Oct/23 2:49 AM,25/Nov/19 11:06 PM,,,,,,,,1.13.0,,,,,,,0,,,,"* add more integration tests for new flow (vcx + dummy)
* run VCX python demo as system test manually
* try to run VCX + dummy against ACA-Py",,,,,,,,,,,,IS-1393,IS-1394,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifj",,,,Unset,Unset,Indy Aries 19.23,,,,,(Please add steps to reproduce),13.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"25/Nov/19 11:06 PM;sergey.minaev;integration tests are extended.  System tests are adopted to new flow

review and merge would be done in scope of  IS-1429;;;",,,,,,,,,,,
Indy Resolver for Aries,IS-1396,42673,,Epic,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,08/Oct/19 10:41 PM,03/Feb/20 11:15 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"An interface for Aries frameworks to communicate with the Indy ledger.

Including improvements that we have wanted for LibIndy.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-6,,Indy Resolver Aries,To Do,No,,Unset,No,,,"1|i011r7:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Indy resolver improvements,IS-1397,42674,,Epic,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,08/Oct/19 10:42 PM,11/Oct/19 9:41 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-8,,Resolver Improvements,To Do,No,,Unset,No,,,"1|i011rf:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Release 1.12.1,IS-1398,42675,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,VladimirWork,esplinr,esplinr,08/Oct/19 11:28 PM,12/Nov/19 12:53 AM,28/Oct/23 2:49 AM,12/Nov/19 12:52 AM,,,,,,,,1.13.0,,,,,,,0,,,,"*Release Goal*
Release everything that is ready. Especially:
* Support for Fully Qualified DIDs

*Acceptance Criteria*
Regular instructions:
* Code is tested
* Review upstream releases to decide what should be included in this build
** Ursa
* Build is produced with automated CI / CD
** Official build is tagged as released in Git
** Official builds should be the only builds that are not marked in GitHub as ""pre-release""
* Prepare basic documentation on new features
* Prepare the Release Notes
** Link to the documentation on new features
** Stored as a CHANGELOG.md in the root of the repo
** Latest release at the top, above the release notes for all previous versions
* The release should be on GitHub “Releases” tab.
** Release notes should be in the “Description"" field of the GitHub release artifact
* The release is marked in JIRA
* Add the correct fixVersion to included issues
* Enable others to use the release:
** Email stakeholders with links to the artifacts and release notes",,,,,,,,,,,,,,,,,,,,,IS-1399,,IS-1361,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zkn:xr",,,,Unset,Unset,Indy Aries 19.23,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,VladimirWork,,,,,,,,,"12/Nov/19 12:52 AM;esplinr;The work in 1.13.0 should be ready in November, and BC.gov said they are willing to wait until the end of the month for the fix in IS-1381. So we can skip this release.;;;",,,,,,,,,,,
Release 1.13.0,IS-1399,42676,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,08/Oct/19 11:29 PM,04/Dec/19 8:39 PM,28/Oct/23 2:49 AM,04/Dec/19 8:39 PM,,,,,,,,1.13.0,,,,,,,0,,,,"*Release Goal*
Release everything that is ready. Especially:
* Improvements to LibVCX to support Aries protocols

*Acceptance Criteria*
Regular instructions:
* Code is tested
* Review upstream releases to decide what should be included in this build
** Ursa
* Build is produced with automated CI / CD
** Official build is tagged as released in Git
** Official builds should be the only builds that are not marked in GitHub as ""pre-release""
* Prepare basic documentation on new features
* Prepare the Release Notes
** Link to the documentation on new features
** Stored as a CHANGELOG.md in the root of the repo
** Latest release at the top, above the release notes for all previous versions
* The release should be on GitHub “Releases” tab.
** Release notes should be in the “Description"" field of the GitHub release artifact
* The release is marked in JIRA
* Add the correct fixVersion to included issues
* Enable others to use the release:
** Email stakeholders with links to the artifacts and release notes
Special instructions:
* Documentation should note that ""The Indy SDK wrappers are moving to Aries. Python, JavaScript, DotNet, and Go have already moved. In future releases of the Indy SDK, these wrappers will be marked as deprecated and then removed. However, people are welcome to submit pull requests against the wrappers in Indy SDK so long as they continue to be included in releases.""",,,,,,,,,,,,,,,,,,,,,,,IS-1398,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifn",,,,Unset,Unset,Indy Aries 19.24,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,VladimirWork,,,,,,,,,,,,,,,,,,,,
Indy wallet migration to Aries Agent Managed Storage,IS-1400,42677,,Epic,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,08/Oct/19 11:41 PM,15/Jan/20 12:08 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"*Acceptance Criteria*
* The Indy wallet exists as an Aries repository.
* The wallet can be installed separately from libIndy or other Indy components.
* The wallet interface includes two plugins: SQLite and PostgreSQL
* The PostgreSQL wallet is not marked as experimental

*Notes*
* The threading model of the Indy wallet is expected to change after migration to be Aries Agent Managed Storage
* Migration of code will be tracked in a separate issue. We won't worry about moving the Git history, as it is available in the Indy-SDK repo.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-10,,Aries KMS,To Do,No,,Unset,No,,,"1|i011s3:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Reduce the warnings from static analysis,IS-1401,42678,,Epic,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,08/Oct/19 11:53 PM,08/Oct/19 11:54 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-12,,Static Analysis Warnings,To Do,No,,Unset,No,,,"1|i011sb:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Rich Schemas and W3C Verifiable Credentials,IS-1402,42706,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,,esplinr,esplinr,10/Oct/19 9:01 PM,01/Apr/20 11:49 PM,28/Oct/23 2:49 AM,01/Apr/20 11:48 PM,,,,,,,,,,,,,,,0,,,,"Implement the W3C VC specification, including support for rich schemas.

https://github.com/w3c/vc-data-model
https://github.com/w3c/vc-test-suite

https://github.com/hyperledger/aries-rfcs/pull/249
https://github.com/hyperledger/aries-rfcs/pull/250",,,,,,,,,,,,,,,,,,,,,,,,IS-1545,,,,,,INDY-2327,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-2,,Rich Schemas Duplicate,Done,No,,Unset,No,,,"1|i011xn:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),DucaDellaForcoletta,esplinr,,,,,,,,,,,,,,,,,,,,
Support for DID Documents,IS-1403,42707,,Epic,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,10/Oct/19 9:04 PM,10/Oct/19 9:20 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-4,,DID Doc,To Do,No,,Unset,No,,,"1|i011xv:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Wallet storage should be backed by PostgreSQL,IS-1404,42708,,Epic,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,10/Oct/19 9:22 PM,10/Oct/19 9:24 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-6,,Postgres Wallet,To Do,No,,Unset,No,,,"1|i011y3:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Remove the Indy SDK how tos,IS-1405,42709,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,10/Oct/19 9:42 PM,10/Oct/19 9:42 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Once the Aries project has documentation for getting started, we should get rid of the out of date Indy How To documents.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwvuk:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Modularize the Indy Wallet,IS-1406,42726,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,11/Oct/19 9:46 PM,24/Oct/19 9:05 PM,28/Oct/23 2:49 AM,24/Oct/19 9:05 PM,,,,,,,,,,,,,,,0,,,,Make the Indy Wallet a separate crate.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1400,,,No,,Unset,No,,,"1|i00zkn:i",,,,Unset,Unset,Indy Aries 19.20,Indy Aries 19.21,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"21/Oct/19 11:49 PM;sergey.minaev;PR https://github.com/hyperledger/indy-sdk/pull/1927;;;",,,,,,,,,,,
Payment api improvement,IS-1407,42772,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,,DucaDellaForcoletta,DucaDellaForcoletta,16/Oct/19 10:53 PM,13/Jan/20 10:42 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libindy,payments,,,,0,,,,"In the payment api, actually in order to make a payment an input source list with the payment source must be specified.

After a payment, for the subsequent payment operation, the source list changes.

This is a limitation in case of multiple concurrent request since it's mandatory to wait the result of the previous payment before start a new one.

It could be useful on the payment api to provide the source address without the load to calculate the source and the amount of utxo.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzr",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),DucaDellaForcoletta,esplinr,,,,,,,,,"20/Nov/19 12:48 AM;esplinr;Thank you for your feedback on the payment API.

Whether the output source list changes, depends on the behavior of the specific payment plugin being used.

What payment plugin are you using?;;;","20/Nov/19 12:55 AM;DucaDellaForcoletta;I did a spike using the ""sov"" plugin to manage the fee payments using sovrin tokens.

 ;;;",,,,,,,,,,
Support optional attributes in proof request,IS-1408,42812,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,18/Oct/19 9:03 PM,17/Jan/20 11:24 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,EV-CS,,,"As a Verifier I should be able to request optional attributes in Proof Request and it's up to Holder decision to fill those or not

While verification libindy should process this flag appropriately and doesn't affect that part of Verifier App.

*Notes*

* This is about the verifier requesting to know if information exists in a signed credential, but not rejecting the proof if the holder refuses to share that information. Attributes that are empty are handled in IS-1421.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1421,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzy13o:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),DucaDellaForcoletta,esplinr,mgbailey,sergey.minaev,,,,,,,"07/Dec/19 12:55 AM;mgbailey;2 customers have requested this

 ;;;","17/Jan/20 11:24 PM;esplinr;The customer requests were solved with IS-1421. We will hold this issue until we understand real world use cases for it.;;;",,,,,,,,,,
Unclosed Threads / Mutex Lock in CommandExecutor,IS-1410,42929,,Bug,To Develop,IS,Indy SDK,software,resplin,,,Medium,,sergey.minaev,magicindustries,magicindustries,22/Oct/19 12:49 PM,31/Mar/20 10:19 PM,28/Oct/23 2:49 AM,,1.12.0,,,,,,,,,libindy,,,,,0,EV-CS,,,"Test Repository: [https://github.com/MagicIndustries/IndyThreadErrors]

 

I am calling libindy from Unity3D (C#) using the dotnet wrapper. We had problems where everything would work fine the first time we hit ""play"" in Unity, then we stop, hit play again and Unity freezes, and has to be forcibly shut down.

It turns out that for every command we tried, the same thing occurred - a thread is left hanging that the debugger knows nothing about - one started inside libindy. 

If you comment out the execution of callbacks like on line 50 of api/pool.rs (""cb(command_handle, err)"") then the error doesn't occur - it only happens when there are callbacks executed. But test methods with the same callback signatures added to the library did work.

The problem is actually the Mutex on line 91 of commands/mod.rs:

pub fn instance<'mutex>() -> MutexGuard<'mutex, CommandExecutor> \{    COMMAND_EXECUTOR.lock().unwrap()}

I found if I changed the call on line 43 from this

    let result = CommandExecutor::instance()   

to this:

    let result = CommandExecutor::new()

And added the lock command on line 102 of commands/mod.rs like so:

    COMMAND_EXECUTOR.lock().unwrap();

This fixes my problem, and stops the freeze - no more hanging threads. I am a rust noob and specifically I don't understand the reasons behind the way the instance method for CommandExecutor is setup, so I need some help to write a more permanent fix.

One other note - I tried assigning the mutex guard to a variable within the loop and dropping it manually at the end but it didn't seem to have an effect on the freezing issue.

In the attached code I reverted back to direct interaction with libindy rather than via the wrapper to eliminate possibilities while I tracked down the bug.

TestScript.cs is a C# file used in Unity, simply attached to a gameobject. It manually loads and unloads the DLLs (dylib) but apart from that it creates data, delegates and pointers for the indy_create_pool_ledger_config() function then executes the function passing it a callback.

It all works, the libindy library executes the command and passes the appropriate response, finally executing the callback in C#.

To Replicate:
 1) Load the test repo project in Unity 2019.2.6f1 (free personal copy is fine)

2) Once loaded, click the play button to start the program.The console should look like this:

    1. Rust Command Called

    2. Callback Executed

3) Press the play button again to stop execution.

4) Press the play button a third time, and the Unity editor should become unresponsive.

If you control execution from a debugger (Visual Studio or Rider) and put a breakpoint during the OnApplicationQuit at line 80 of TestScript.cs, you can see the dangling thread.

 

Happy to help with a fix, get me at [toby@magicindustries.net|mailto:toby@magicindustries.net] or as lyricist1 on Skype.

 ","I ran these tests on a Macbook Pro 2018 running macOS High Sierra 10.13.6 with Unity 2019.6.2f1, Mono 6.0, Rustc 1.38.0, .Net 2.2.106 / 3.0.


I've also tested the same problem on a current gen Windows laptop running Windows 10 Home and everything else the same specs",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06o",,,,Unset,Unset,Indy Aries 20.01,Indy Aries 20.02,Indy Aries 20.03,Indy Aries 20.04,Indy Aries 20.05,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,magicindustries,sergey.minaev,,,,,,,,"12/Nov/19 11:58 PM;esplinr;[~tmarkovski] said on Rocket Chat that he believes this is a problem with libindy and not with the dotnet wrapper. We'll investigate it more when we have the opportunity.;;;","18/Nov/19 7:48 PM;magicindustries;I've investigated this further and it looks like the lazy static was a red herring, probably from an earlier debugging attempt.

I can confirm the freeze in Unity only occurs when the callbacks are executed from the inner thread (the one spawned for the CommandExecutor worker). It seems the problem is caused by communicating back to the external app from a thread it didn't start itself.

When I have a moment I'm going to try the following, would love any feedback:

1) Have the api commands store callbacks in an array indexed by the commandHandle

2) Establish a channel for the API so the CommandExecutor can just pass back the commandHandle when it's finished

3) On receipt of the command handle, grab the relevant stored callback from the array using the commandHandle and execute it, removing it from the array.

This moves callback execution to the original library thread and doesn't cause the hung thread issue.;;;","21/Jan/20 7:42 AM;sergey.minaev;[~magicindustries] thank you for the research and shared details. I'm going to re-read our previous discussion in rocketchat and compare with your proposal here.;;;","14/Feb/20 10:59 PM;sergey.minaev;More samples to reproduce
https://github.com/MagicIndustries/IndyErrorDemo
has the three separate scenes in it and the test rust library
the test rust library is here: https://github.com/MagicIndustries/TestRustThreads.git;;;",,,,,,,,
Audit a need for manual reconnection checks in ZMQ,IS-1411,42958,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,ashcherbakov,ashcherbakov,23/Oct/19 9:13 PM,23/Oct/19 9:13 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"It looks like ZMQ should be able to recover disconnections by its own, so need for manual socket re connections and ping/pongs are needed.

*Acceptance Criteria*
Either prove that we still need the current logic, or get rid of ping/pongs and socket reconnection
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,INDY-1032,,,No,,Unset,No,,,"1|hzwvif:00001yw969w49i4",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashcherbakov,,,,,,,,,,,,,,,,,,,,,
Test harness for LibVCX / Dummy Cloud Agent and Aries Test Suite,IS-1412,43014,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,28/Oct/19 11:29 PM,20/Dec/19 10:18 PM,28/Oct/23 2:49 AM,20/Dec/19 10:18 PM,,,,,,,,,,libvcx,,,,,0,,,,"*Acceptance Criteria*
 * Be able to run LibVCX against the Aries Test Suite using the Dummy Cloud Agent.
 * Collect a report on success or failure.

*Notes*
 * Automating the running of this test will be considered in a separate issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifi",,,,Unset,Unset,Indy Aries 19.23,Indy Aries 19.24,Indy Aries 19.25,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,,,,,,,,,"20/Dec/19 12:19 AM;Artemkaaas;Current state: 
* aries-protocol-test-suite provides the set of manual tests for connection protocol.
* vcx can be tested against them with usage of python demo scripts (faber.py and alice.py https://github.com/hyperledger/indy-sdk/tree/master/vcx/wrappers/python3/demo)  
* The vcx of 0.5.0 version passes all tests successfully.

Open questions:  How to implement backchannels to be able to set an agent under the testing into a some specific state and to get the current state of the agent.

I've created this PR to reflect an alternative way using Backchannel as the opposite of keeping static HTTP connection over DIDDoc.  
[https://github.com/hyperledger/aries-protocol-test-suite/pull/20]
Using this backchannel with a defined set of commands we are able to run connection tests without user interaction, get the status of the agent under the testing.
For VCX testing against Test Suite, we did a simple HTTP server above python wrapper which performs requested actions.
[https://github.com/hyperledger/indy-sdk/tree/master/vcx/wrappers/python3/aries-test-server]

Vcx is not the Agent in the complete meaning of this term. It's library that uses an agent as an endpoint to collect messages(Mediator) and handles inbound messages by request.
So, we needed an application above Vcx to run the test suite.;;;",,,,,,,,,,,
Improve documentation for LibVCX send-message,IS-1413,43035,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,30/Oct/19 3:26 AM,03/Feb/20 6:54 PM,28/Oct/23 2:49 AM,30/Jan/20 10:11 PM,1.12.0,,,,,,,1.14.2,,libvcx,,,,,0,EV-CS,,,"The API documentation for vcx_connection_send_message does not answer these questions:
 * What are the appropriate values for each of the parameters?
 * What are the valid options for msg_type?

[https://github.com/hyperledger/indy-sdk/blob/master/vcx/libvcx/src/api/connection.rs#L506-L533]

This is similarly a problem with the docstring for the Python wrapper:
 [https://gitlab.corp.evernym.com/dev/vcx/indy-sdk/blob/master/vcx/wrappers/python3/vcx/api/connection.py]

Within the scope of this ticket, we will also look at other in-line API documentation to ensure that the appropriate input and output values are documented. We will limit that effort to 2 engineering days. If there are lots of additional problems, we will raise another ticket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifoh",,,,Unset,Unset,Indy Aries 20.01,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"21/Jan/20 4:28 PM;Artemkaaas;The VCX library documentation was improved in the PR: [https://github.com/hyperledger/indy-sdk/pull/2038];;;","30/Jan/20 10:11 PM;sergey.minaev;available in master;;;",,,,,,,,,,
Open wallet should cache handle,IS-1414,43051,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,sauveergoel,mattatkiva,mattatkiva,31/Oct/19 3:27 AM,13/Nov/19 12:13 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Opening wallet is very expensive process.   Inside the indy wallet, if the wallet is already open (ie a handle exists) and another process tries to open it, and the password matches, then return the handle instead of throwing an error. This would fix all our issues and make it essentially ""cached"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:ztzx",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),DucaDellaForcoletta,esplinr,ianco,mattatkiva,,,,,,,"13/Nov/19 12:01 AM;esplinr;This is a good idea, but could be dangerous if the storage implementation does not allow parallel access. We could make this an explicit property when the wallet handle is initialized.;;;","13/Nov/19 12:03 AM;mattatkiva;[~esplinr] We like that idea...make it part of the config input as to wether or not the wallet is cached;;;","13/Nov/19 1:10 AM;ianco;Also need to be careful about closing wallets - if you open a wallet, then someone else tries to open it (and gets the handle), and then closes it, then it will invalidate the handle of the original opener.
;;;","13/Nov/19 1:13 AM;mattatkiva;[~ianco] . Im feeling that should be on the caller.  They should get an indy error ""wallet not open"" if its been closed.  Good to keep in mind and make sure.

An alternative is when wallets are cached a count is maintained and close reduces the cached count.  The wallet is only actually closed when the count is 0.  I feel this is over kill and the above will be sufficient.  ;;;",,,,,,,,
Lack of CLI consistency between creation of Payment Addresses and DIDs,IS-1415,43064,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,01/Nov/19 1:19 AM,30/Jan/20 10:05 PM,28/Oct/23 2:49 AM,30/Jan/20 10:05 PM,1.12.0,,,,,,,1.14.2,,cli,,,,,0,,,,"*Description*

There is an inconsistency between how the CLI is used to make a new DID versus how to make a new Payment Address.
 * Creating a DID uses the syntax: ""did new""
 * Creating a Payment Address uses the syntax: ""payment-address create""
 [https://github.com/hyperledger/indy-sdk/tree/master/docs/design/007-cli-payments]

*Suggested Remediation*

It would be easier for users to remember if they both use the same syntax. Given that payment-addresses are newer, and not widely used, I suggest changing that to match DID creation.

At this time, payment-addresses are not widely used in any deployment of Indy. So we can drop the legacy syntax of ""payment-address create"" when we change it to ""payment-address new"".

*Notes*
 * We discussed the trade-offs between the term ""new"" and ""create"". ""Create"" suggests that work will be done outside the wallet, on the ledger. Whereas ""New"" suggests that all the work to define the object will be done locally and not impact external systems.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q2:zy",,,,Unset,Unset,Indy Aries 19.26,Indy Aries 20.01,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"13/Jan/20 8:27 PM;Artemkaaas;Changes: added `payment-address new` command to match naming.
We temporary kept `payment-address create` command with a notice that this command will be removed in future releases.
 

PR: [https://github.com/hyperledger/indy-sdk/pull/2032];;;","20/Jan/20 10:08 PM;sergey.minaev;we should do few more UI improvements for this ticket: clean-up examples and make group help more straightforward;;;","21/Jan/20 5:15 PM;Artemkaaas;Fixed in PR: [https://github.com/hyperledger/indy-sdk/pull/2044];;;","30/Jan/20 9:58 PM;sergey.minaev;Available in master 1.14.1 1467;;;","30/Jan/20 10:05 PM;sergey.minaev;Steps to validate:
* install IndyCLI master 1467
* check actual help in
  * payment-address new help
  * payment-address create help
  * payment-address help;;;",,,,,,,
Mark LibVCX in Indy SDK as Deprecated,IS-1416,43065,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,01/Nov/19 1:22 AM,14/Nov/19 12:58 AM,28/Oct/23 2:49 AM,,,,,,,,,,,libvcx,,,,,0,,,,"The Aries community has decided that they want credential exchange to be handled within the language libraries, and not by a C-callable library like LibVCX. As such, LibVCX will not be moving to Aries, and maintenance will not keep pace with the evolution of the Aries protocols. We need to communicate this information to users of the Indy SDK.

*Acceptance Criteria*
 * User documentation is updated.
 * Release notes include a note.
 * API documentation is marked.
 * Jira issues related to LibVCX are closed.
 * An task exists in Jira to remove LibVCX from a future version.",,,,,,,,,,,,,,,,,,,,,IS-1423,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009fri",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Unable to challenge for possession of credential only,IS-1417,43068,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,aaronr,aaronr,aaronr,01/Nov/19 6:25 AM,12/Feb/20 2:00 PM,28/Oct/23 2:49 AM,14/Jan/20 4:53 PM,1.11.1,,,,,,,,,libindy,,,,,0,,,,"Since v1.11.1, with this commit (https://github.com/hyperledger/indy-sdk/commit/0dd775e4dbd98a4e419567c8f068ad245ce0cb50) for this bug -> https://jira.hyperledger.org/browse/IS-912 we are no longer able to call proverGetCredentialsForProofReq in the nodejs wrapper if the proof request has no request_attributes or request_predicates.

We believe that this is a valid proof request and allows a verifier to see that a prover holds a credential without divulging any information.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q2:zw",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),aaronr,Artemkaaas,smithbk,,,,,,,,"10/Jan/20 11:19 PM;Artemkaaas;Hello, [~aaronr]
 What do you mean under `allows a verifier to see that a prover holds a credential without divulging any information`?
 Can you share a test?
 If you pass empty `proof_request` you pass empty `requested_credentials` on a proof building.
 In this case the result `proof` will look like:
{code:java}
{""proof"":{""proofs"":[],""aggregated_proof"":{""c_hash"":""random generated number"",""c_list"":[]}},""requested_proof"":{""revealed_attrs"":{},""self_attested_attrs"":{},""unrevealed_attrs"":{},""predicates"":{}},""identifiers"":[]}
{code}
It will pass verification but it will not prove anything. It is totally useless for a verifier.

We can remove the check that proof request isn't empty but this case is useless from our point of view.;;;","13/Jan/20 11:52 PM;aaronr;Hi Artem,

Sorry that it took me so long to get back to you. This is the proof request that we are using in our tests:
{noformat}
{'name': 'Nothing', 'properties': {}, 'requested_attributes': {}, 'requested_predicates': {}, 'nonce': '958544744559', 'version': '1.0'}{noformat}
I believe it was just a way for a verifier to prompt the user for something. Anything. And the verifier can show that it can respond. Perhaps a tool for problem determination? If you don't feel that this should be a supported scenario, then I can't say that it would cause us any kind of hardship. It was just a test of ours that used to succeed and now doesn't.;;;","14/Jan/20 2:34 PM;Artemkaaas;Hi, Aaron,
We are moving forward to [Aries|https://github.com/hyperledger/aries-rfcs] support as a standard of agent-to-agent communication. 
It introduces messages like `trust_ping`, `basicmessage` and `problem_report`. They can be used to share any information.

Thank you for raising the issue but I think it is better to forbid empty ProofRequests and Proofs to eliminate false evidence.;;;","14/Jan/20 11:51 PM;smithbk;Artem [~Artemkaaas], the intent here is something different than trust_ping, basicmessage, and problem_report.  How can a prover prove that they possess a specific credential without revealing any additional information (i.e. no attributes or predicates).  For example, suppose that I need to prove that I have a valid passport issued by a particular country, but I don't want to reveal any additional information in the proof.  How would I do this?;;;","15/Jan/20 1:43 PM;Artemkaaas;[~smithbk] empty ProofRequest doesn't help you in this case. 
There is no opportunity to prove credential possession only.
Verifier has to append at least `requested_attribute` and set `cred_def_id` restriction on it (if he want a specific credential). 
Prover can set `revealed: false` for this attribute (if he don't want reveal this value).
 By this Prover proves that possess requested credential but don't reveale any personal information.;;;",,,,,,,
Inefficient choice of group for accumulator and witness in revocation,IS-1418,43101,,Task,New,IS,Indy SDK,software,resplin,,,Low,,,lovesh,lovesh,05/Nov/19 4:54 AM,14/Nov/19 12:52 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,EV-Triaged,performance,,"_The fix for this should be made in Ursa first but Indy-sdk will also be affected and the ledger will probably be as the structure of some elements will change._

Currently, the accumulator and witness are created in group G2 but if these were chosen to be in group G1, updating the accumulator as well the witness will be much faster and the accumulator and witness will be shorter (by 50%) in size. This will require swapping of groups at a few places in the revocation scheme. This is only applicable for anoncreds 1.0.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i013gz:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,lovesh,,,,,,,,,"14/Nov/19 12:51 AM;esplinr;This is a breaking change in the API, and would likely be superseded by adoption of Anoncreds 2.0. We will wait to schedule this work until we better understand the schedule for Anoncreds 2.0.;;;",,,,,,,,,,,
Evaluate aries-framework-go,IS-1420,43112,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,esplinr,esplinr,06/Nov/19 12:21 AM,04/Feb/20 12:04 AM,28/Oct/23 2:49 AM,04/Feb/20 12:04 AM,,,,,,,,,,aries,,,,,0,,,,"Evaluate the approaches to Aries taken by the aries-framework-go.
 * What good ideas are represented by the implementation?
 * In what ways would be propose to improve the implementation?
 * What changes would be required to support anoncreds?
 * How does it compare with LibIndy as the starting point for Aries-Core libraries.

Timebox the effort to 3 engineering days.

*Notes*

* Current RFC support:
[https://github.com/hyperledger/aries-framework-go/issues/920]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015xl:",,,,Unset,Unset,Indy Aries 19.25,Indy Aries 19.26,Indy Aries 20.01,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,KitHat,,,,,,,,,"13/Dec/19 10:59 PM;KitHat;Here is the overview:
https://hackmd.io/3lDKx8nZT8OV6pXQiwT4Tw?view;;;",,,,,,,,,,,
Support for empty attributes in credentials,IS-1421,43116,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,esplinr,esplinr,esplinr,06/Nov/19 12:54 AM,20/Dec/19 10:18 PM,28/Oct/23 2:49 AM,20/Dec/19 10:18 PM,,,,,,,,1.14.0,,libindy,libvcx,,,,0,EV-CS,,,"*Story*

As a developer building a solution that uses Indy and Aries, I sometimes need to include an empty attribute in my proof because the data is present but empty. This allows me to model things like the second line of a U.S. address, which is often blank.

*Acceptance Criteria*

If a credential attribute contains no information, it should still be properly encoded so that it can be presented as part of a proof.

Guidance should be included in the documentation on how best to model credentials:
 * empty information (empty string)
 * information not present (NULL)
 * a placeholder such as ""None"" or ""0 (Zero)""
 * optional information (see IS-1408)

*Examples*
 * Second line of an address
 * U.S. middle name / Russian patronymic

*Notes*
 * Once Rich Schemas are implemented (IS-1402), there will be a way  for the encoding to specify the null value.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1408,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015xk:",,,,Unset,Unset,Indy Aries 19.25,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),DucaDellaForcoletta,esplinr,KitHat,mgbailey,VladimirWork,,,,,,"12/Dec/19 6:40 PM;KitHat;Problem reason: 
- need to proof that empty values are working fine

Changes: no changes, only tests for empty attribute support
- no changes in code, only tests provided
- defined way to represent an empty value is just an empty string """"

PR: 
- https://github.com/hyperledger/indy-sdk/pull/1977

Version: 
- master #1390

Risk factors:
- risks are only in requirements -- if some people will use ""null"" or something else to represent 

Risk:
- Low

Covered with tests:
- https://github.com/KitHat/indy-sdk/blob/fcaf2c8f668634fee7874887a797ad7aa2b12db2/vcx/libvcx/src/v3/mod.rs#L444

Recommendations for QA
- Test credentials with empty values and value restrictions on them.;;;","14/Dec/19 2:11 AM;VladimirWork;Build Info:
libindy 1.13.0~111

Steps to Validate:
1. Create and verify credentials with empty attributes.

Actual Results:
Credentials and restrictions work the same as for non-empty attributes.;;;","18/Dec/19 12:51 AM;esplinr;Is there any new documentation to help people use empty attributes in their credentials?

I'll reopen this issue so that we don't forget to add a link here.;;;","19/Dec/19 12:05 AM;KitHat;There are links to mentions in documentation for libindy and libvcx:
https://github.com/hyperledger/indy-sdk/blob/de5a37852eaa7415f6576c3cbde1c2415f52fb1f/libindy/src/api/anoncreds.rs#L558
https://github.com/hyperledger/indy-sdk/blob/de5a37852eaa7415f6576c3cbde1c2415f52fb1f/vcx/libvcx/src/api/issuer_credential.rs#L36;;;",,,,,,,,
Node Wrapper for libvcx throws error as invalid structure,IS-1422,43245,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Cannot Reproduce,bansatya,bansatya,bansatya,10/Nov/19 1:35 AM,29/Jan/20 5:48 AM,28/Oct/23 2:49 AM,29/Jan/20 5:48 AM,,,,,,,,,,libvcx,,,,,0,,,,"Libvcx Nodejs wrapper throws error while creating schema. The error shows as invalid structure even though the input given as correct json structure.

*However, using the python wrapper, I am able to create schema successfully.*

 *Note:* Used latest version of code and build in local machine.

Error shows(Plz refer screenshots for details): 

(node:32273) UnhandledPromiseRejectionWarning: Error: Object (json, config, key, credential and etc...) passed to libindy has invalid structure
 at Function.<anonymous> (/home/satya/indy/education/docs/vcx-web-app/resources/node_modules/node-vcx-wrapper/dist/src/api/schema.js:71:23)
 at Generator.throw (<anonymous>)
 at rejected (/home/satya/indy/education/docs/vcx-web-app/resources/node_modules/node-vcx-wrapper/dist/src/api/schema.js:6:65)
 at <anonymous>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Nov/19 1:34 AM;bansatya;Screenshot from 2019-11-09 19-10-38.png;https://jira.hyperledger.org/secure/attachment/17925/Screenshot+from+2019-11-09+19-10-38.png",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,bansatya,esplinr,,,,,,,,"14/Nov/19 12:50 AM;esplinr;This does look like a problem specific to the Node.js wrapper. We should fix it here, and also in [aries-sdk-javascript|[https://github.com/hyperledger/aries-sdk-javascript]].

We won't get to this for a while, but we can quickly review a pull request with the fix if someone makes the contribution.;;;","14/Jan/20 7:17 PM;Artemkaaas;Hello, [~bansatya]
I tried to reproduce this and didn't see.
Could you enable loggin? (call `defaultLogger('trace')` in the begining)
I've tried schema data from screenshot and it worked for me. 
Is there schema with the same version and name on the ledger? (Maybe you get duplication error as one of possible causes;;;","29/Jan/20 5:48 AM;esplinr;We will close this issue as ""cannot reproduce"". If you still see the problem, you can reopen the issue and attach additional information so that we can reproduce it. Or you can create a new issue with the new information and link to this issue.;;;",,,,,,,,,
Mark LibIndy wrappers as deprecated (round 1),IS-1423,43304,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,14/Nov/19 12:53 AM,18/Dec/19 12:27 AM,28/Oct/23 2:49 AM,,,,,,,,,,,libvcx,,,,,0,,,,"People building on top of Indy are encouraged to start with the Aries agents and language libraries instead of the Indy SDK wrappers. Most of the development has shifted there, and some Aries language libraries are already mature enough to use in favor of the Indy wrappers. As a result, the Indy wrappers will not keep pace with the evolution of the Aries protocols. We need to communicate this information to users of the Indy SDK.

*Wrappers in Round 1*
 * DotNet

*Acceptance Criteria*
 * User documentation is updated.
 * Release notes include a note.
 * API documentation is marked.
 * Jira issues related to these wrappers are closed.
 * A task exists in Jira to remove these wrappers from a future version.",,,,,,,,,,,,,,,,,,,,,IS-1424,,IS-1416,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaip",,,,Unset,Unset,Indy Aries 19.24,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,tmarkovski,,,,,,,,"06/Dec/19 9:46 PM;sergey.minaev;After additional checks we decide to postpone this deprecation at least for one sprint.;;;",,,,,,,,,,,
Mark LibIndy wrappers as deprecated (round 2),IS-1424,43305,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,14/Nov/19 12:59 AM,17/Dec/19 10:21 AM,28/Oct/23 2:49 AM,,,,,,,,,,,libvcx,,,,,0,,,,"People building on top of Indy are encouraged to start with the Aries agents and language libraries instead of the Indy SDK wrappers. Most of the development has shifted there, and some Aries language libraries are already mature enough to use in favor of the Indy wrappers. As a result, the Indy wrappers will not keep pace with the evolution of the Aries protocols. We need to communicate this information to users of the Indy SDK.

*Wrappers in Round 2*
 * Java
 * iOS
 * NodeJS
 * Python

*Acceptance Criteria*
 * User documentation is updated.
 * Release notes include a note.
 * API documentation is marked.
 * Jira issues related to these wrappers are closed.
 * A task exists in Jira to remove these wrappers from a future version.

*Notes*
 * We need to keep the Rust wrapper as long as we keep LibIndy in order to support the CI pipeline.
 * The Python wrapper is used by Indy Node and Indy Plenum, and cannot be deprecated until we have a plan for testing those packages.",,,,,,,,,,,,,,,,,,,,,,,IS-1423,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009fr9",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Mark Indy SDK Getting Started docs as deprecated,IS-1425,43307,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,14/Nov/19 1:02 AM,20/Jan/20 10:02 PM,28/Oct/23 2:49 AM,20/Jan/20 10:02 PM,,,,,,,,,,,,,,,0,,,,"Most new developers building on Indy should start with Aries Agents and Aries language libraries. As a result, the documentation for Aries will be more helpful than the legacy documentation in Indy SDK.

*Acceptance Criteria*
 * Review the documentation to decide what is directly applicable to users of LibIndy, versus what is superseded by the Aries documentation.
 * Mark the appropriate documentation as deprecated, pointing people to the Aries documentation.
 * An issue exists to delete the deprecated  documentation in a future version.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo6i",,,,Unset,Unset,Indy Aries 19.24,Indy Aries 19.26,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,DucaDellaForcoletta,esplinr,,,,,,,,"15/Jan/20 3:44 PM;Artemkaaas;Changes:  Removed onboarding and peer-to-peer interaction parts of guide in favor of Aries project
PR: [https://github.com/hyperledger/indy-sdk/pull/2037] ;;;",,,,,,,,,,,
Fixes to TAA documentation,IS-1426,43386,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,20/Nov/19 7:52 AM,03/Dec/19 12:10 AM,28/Oct/23 2:49 AM,03/Dec/19 12:10 AM,,,,,,,,1.13.0,,,,,,,0,,,,"[https://github.com/hyperledger/indy-sdk/blob/master/docs/how-tos/transaction-author-agreement.md]

#1 Typo: liibndy

#2 There should be a note clarifying that the hash can be provided instead of the full text, and what hash algorithm should be used.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifji",,,,Unset,Unset,Indy Aries 19.24,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"25/Nov/19 6:44 PM;sergey.minaev;https://github.com/hyperledger/indy-sdk/pull/1970;;;",,,,,,,,,,,
Support updates to TAA txn,IS-1427,43427,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,22/Nov/19 9:51 PM,22/Jan/20 7:44 PM,28/Oct/23 2:49 AM,21/Dec/19 2:53 AM,,,,,,,,1.14.0,,,,,,,0,,,,"INDY-2302 defines a transaction for ""retiring"" a Transaction Author Agreement. This needs to be supported by the SDK.

INDY-2313 adds the ratified date to the TAA object.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-2302,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo",,,,Unset,Unset,Indy Aries 19.24,Indy Aries 19.25,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),DucaDellaForcoletta,sergey.minaev,,,,,,,,,"09/Dec/19 7:14 PM;sergey.minaev;Draft implementation is available at https://github.com/hyperledger/indy-sdk/pull/1976
But the work is paused to to requirements clarification on Indy Node side;;;","19/Dec/19 10:15 PM;sergey.minaev;after requirements update the PR is extended and merge to master
build version 1.13.0 master 1396;;;","21/Dec/19 1:38 AM;sergey.minaev;documentation updated in master build 1404;;;","21/Dec/19 2:53 AM;sergey.minaev;partially validated in scope of system tests of Indy Node.

More validation and follow-up would be done in IS-1457;;;","22/Jan/20 7:44 PM;DucaDellaForcoletta;As [~esplinr] said in the sprint demo video, this IS should be applied in the mainnet on February. Is still confirmed the date?;;;",,,,,,,
Ubuntu 18.04 CI libindy linkage is broken,IS-1428,43428,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,22/Nov/19 9:52 PM,02/Dec/19 8:26 PM,28/Oct/23 2:49 AM,02/Dec/19 8:26 PM,,,,,,,,1.13.0,,,,,,,0,TShirt_L,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaii8",,,,Unset,Unset,Indy Aries 19.23,Indy Aries 19.24,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"29/Nov/19 10:30 PM;sergey.minaev;Problem reason:
Data in workspace after static validation for Ubuntu 16.04 may results in failed build on Ubuntu 18.04.
Fix:
cleanup workspace after static validation stage. Redundant cleanup at the beginning of every stage
PR:
https://github.com/hyperledger/indy-sdk/pull/1965;;;",,,,,,,,,,,
"Review, clean-up and merge Aries Protocol in libVCX to master",IS-1429,43446,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,sergey.minaev,sergey.minaev,25/Nov/19 11:03 PM,02/Dec/19 8:26 PM,28/Oct/23 2:49 AM,02/Dec/19 8:25 PM,,,,,,,,1.13.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifii",,,,Unset,Unset,Indy Aries 19.24,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"02/Dec/19 8:26 PM;sergey.minaev;Critical issues are fixed, list of minor findings is in the latest review comments https://github.com/hyperledger/indy-sdk/pull/1960;;;",,,,,,,,,,,
Credential created with user defined schema may have different version than stated in json.,IS-1430,43449,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,KitHat,KitHat,26/Nov/19 2:21 AM,17/Jan/20 10:58 PM,28/Oct/23 2:49 AM,14/Jan/20 6:28 PM,,,,,,,,1.14.2,,,,,,,0,,,,"If you are creating a credential using a schema created by user, search will find that credential by version fetched from schema id, not from json value.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo8yc",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,KitHat,,,,,,,,,"27/Dec/19 12:13 AM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/2014;;;","11/Jan/20 2:22 AM;KitHat;Problem reason:
- No validation for matches of schema id and schema fields

Changes:
- added validation

PR:
- https://github.com/hyperledger/indy-sdk/pull/2014

Version:
- master #1428

Risk factors:
- some clients may use custom schemas that will be no longer valid -- libindy-generated schemas will never be invalid

Risk:
- Low

Covered with tests:
- https://github.com/hyperledger/indy-sdk/pull/2014/files#diff-db96c10ba092d2018178fbea47851579R296

Recommendations for QA
- put some valid and invalid schemas for cred def creation in anoncred module;;;","14/Jan/20 6:27 PM;Artemkaaas;Build Info:
1.14.1~1428(master)

Steps to Validate:
1. Create CredentialDefinition with schema containing name or version which are not matched schema id. 
Actual Results:  Invalid structure error received.

2. Create CredentialDefinition with schema containing name or version which are matched schema id. 
Actual Results: CredentialDefinition created successfully;;;",,,,,,,,,
deb artifacts should append source list,IS-1431,43479,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,27/Nov/19 8:06 PM,17/Feb/20 6:44 PM,28/Oct/23 2:49 AM,17/Feb/20 6:44 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q2:i",,,,Unset,Unset,Indy Aries 19.26,Indy Aries 20.01,Indy Aries 20.02,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,KitHat,sergey.minaev,,,,,,,,"11/Jan/20 1:13 AM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/2026;;;","17/Feb/20 6:06 PM;sergey.minaev;available in master 1498;;;","17/Feb/20 6:43 PM;Artemkaaas;Validation steps:
1. remove repo.sovrin.org from the source list. 
2.  download `libindy_1.14.2~1498_amd64.deb ` and  install  with `dpkg -i`
3. update libindy with `apt-get --only-upgrade install libindy`
4, check `libindy_1.14.2~1499` is installed.

Resolution:  works as expected.;;;",,,,,,,,,
libVCX demo documentation improvements,IS-1432,43480,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,sergey.minaev,sergey.minaev,27/Nov/19 8:33 PM,17/Jan/20 10:58 PM,28/Oct/23 2:49 AM,28/Dec/19 1:12 AM,,,,,,,,1.14.1,,,,,,,0,,,,"* cross-links to other parts of docs (like building the deps, running pool, agency, etc)
* python deps",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo8y6",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),KitHat,sergey.minaev,VladimirWork,,,,,,,,"26/Dec/19 5:59 PM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/2013;;;","27/Dec/19 12:13 AM;KitHat;Problem reason:
- VCX Python demo documentation was really unclear in terms of launch

Changes:
- Added links to other parts of documentation, added requirements for python demo

PR:
- https://github.com/hyperledger/indy-sdk/pull/2014

Version:
- no changes in sources

Risk factors:
- no risk factors.

Risk:
- Low

Covered with tests:
- no tests

Recommendations for QA
- go through the docs and verify that links lead to correct locations of installation;;;","28/Dec/19 1:12 AM;VladimirWork;Docs look good.;;;",,,,,,,,,
"Need to stop using packages like ""devscripts"" in CI/CD pipeline",IS-1433,43502,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,KitHat,KitHat,02/Dec/19 7:45 PM,02/Dec/19 7:45 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015jv:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),KitHat,,,,,,,,,,,,,,,,,,,,,
"Android Library >= 1.12.0 fails to load for ""x86"" architecture due to text relocations",IS-1434,43535,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,tmarkovski,tmarkovski,04/Dec/19 8:18 AM,25/Dec/19 11:02 PM,28/Oct/23 2:49 AM,25/Dec/19 11:02 PM,,,,,,,,1.14.0,,build-delivery-pipelines,libindy,,,,0,,,,"Android fails to load ""libindy.so"" version 1.12.0 or later for ""x86"" architecture only with the Java native exception:

*dlopen failed: ""/data/app/myapp.mobile-89R5E9k7Byb33fbmMwPY1g==/lib/x86/libindy.so"" has text relocations ([https://android.googlesource.com/platform/bionic/+/master/android-changes-for-ndk-developers.md#Text-Relocations-Enforced-for-API-level-23)]*

 

The reason for this seems to be related to the link in the exceptions - text relocations used in the build process of the static library.

Running the commands on the link above, shows that TEXTREL is present in 1.12.0 or later, while it is not present in 1.11.1 or earlier versions.

 

For 1.11.1 - no TEXTREL found using scanelf and readelf
{code:java}
╔═ :) ═══ blacklite@streetcred:~/Documents/work/streetcred/libindy/1.11.1/libindy_x86/lib
╚══> readelf --dynamic libindy.so | grep TEXTREL
╔═ :( ═══ blacklite@streetcred:~/Documents/work/streetcred/libindy/1.11.1/libindy_x86/lib
╚══> scanelf -qT libindy.so
╔═ :) ═══ blacklite@streetcred:~/Documents/work/streetcred/libindy/1.11.1/libindy_x86/lib
╚══>
{code}
For 1.12.0 the output clearly shows text relocations used in DidCommandExecutor. The trace may not be the most accurate, I am not an expert on this.
{code:java}
╔═ :) ═══ blacklite@streetcred:~/Documents/work/streetcred/libindy/1.12.0/libindy_x86/lib
╚══> readelf --dynamic libindy.so | grep TEXTREL
 0x00000016 (TEXTREL)                    0x0
 0x0000001e (FLAGS)                      TEXTREL BIND_NOW
╔═ :) ═══ blacklite@streetcred:~/Documents/work/streetcred/libindy/1.12.0/libindy_x86/lib
╚══> scanelf -qT libindy.so
  libindy.so: _ZN4indy8commands3did18DidCommandExecutor14_defer_command17hbafeb7b6743341acE [0x1644301] in (optimized out: previous memcpy) [0x1644300]
  libindy.so: _ZN4indy8commands3did18DidCommandExecutor14_defer_command17hbafeb7b6743341acE [0x1644311] in (optimized out: previous memmove) [0x1644310]
  libindy.so: 1l4xn0ek5tpo7wq7 [0x1644351] in (optimized out: previous strcmp) [0x1644350]
  libindy.so: GCC_except_table62 [0x16443A1] in (optimized out: previous strncat) [0x16443A0]
  libindy.so: GCC_except_table50 [0x16442D1] in (optimized out: previous memcmp) [0x16442D0]
  libindy.so: _ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h3410e7f544bfe516E [0x16443C1] in (optimized out: previous strlcpy) [0x16443C0]
  libindy.so: _ZN4core3ptr18real_drop_in_place17h85760756f8dac10cE [0x1644361] in (optimized out: previous strncmp) [0x1644360]
  libindy.so: _ZN4core3ptr18real_drop_in_place17h3a46473de4a0231dE [0x1644391] in (optimized out: previous wcscat) [0x1644390]
  libindy.so: GCC_except_table47 [0x1644321] in (optimized out: previous strcpy) [0x1644320]
  libindy.so: GCC_except_table61 [0x1644331] in (optimized out: previous strncpy) [0x1644330]
  libindy.so: .L41 [0x16443D1] in (optimized out: previous wcscpy) [0x16443D0]
  libindy.so: DHvparams_seq_tt [0x1644341] in (optimized out: previous strlen) [0x1644340]
  libindy.so: .L544 [0x16442F1] in (optimized out: previous __memset_chk) [0x16442F0]
  libindy.so: GCC_except_table47 [0x1691CDD] in (optimized out: previous __memset_chk_generic) [0x1691CD0]
  libindy.so: GCC_except_table4 [0x16443B1] in (optimized out: previous strlcat) [0x16443B0]
  libindy.so: resolveSelectStep [0x16442E1] in (optimized out: previous memset) [0x16442E0]
  libindy.so: rtreeFreeCallback [0x1644371] in (optimized out: previous strcat) [0x1644370]
  libindy.so: vdbeMemAddTerminator [0x1644381] in (optimized out: previous wmemcmp) [0x1644380]
  libindy.so
╔═ :) ═══ blacklite@streetcred:~/Documents/work/streetcred/libindy/1.12.0/libindy_x86/lib
╚══>
{code}
I don't know what a potential fix would be, we can explore and identify what changed between 1.11 and 1.12 that would affect this.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/19 5:02 AM;tmarkovski;image-2019-12-11-15-02-56-994.png;https://jira.hyperledger.org/secure/attachment/18033/image-2019-12-11-15-02-56-994.png",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo8y7",,,,Unset,Unset,Indy Aries 19.25,Indy Aries 19.26,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,tmarkovski,,,,,,,,,"11/Dec/19 11:30 PM;sergey.minaev;[~tmarkovski] I can see the TEXTREL in official builds starting from 1.12.0 as you described in the ticket. But in my local env - Ubuntu 18.04 and v1.12.0 tag - the result of android.build.sh for x86 doesn't contains TEXTREL in my env. I will continue investigation why my local build is different. Could you check in your env as well?;;;","12/Dec/19 5:03 AM;tmarkovski;[~sergey.minaev] I am not able to compile an android build locally. After running `android.build.sh -d x86` I get the following error at the end.

I haven't run this previously, so I'm not sure what could be causing it. Any thoughts?

!image-2019-12-11-15-02-56-994.png|width=1001,height=223!;;;","24/Dec/19 10:18 PM;sergey.minaev;Potential fix in PR https://github.com/hyperledger/indy-sdk/pull/2002

available as master 1.13.0 1414;;;","25/Dec/19 7:52 PM;sergey.minaev;offtop: compilation error in the comment above may be caused by missed realpath utility in OS;;;",,,,,,,,
LibVCX Aries: Implement Trust Ping protocol,IS-1435,43536,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,04/Dec/19 8:43 PM,20/Dec/19 8:56 PM,28/Oct/23 2:49 AM,20/Dec/19 8:49 PM,,,,,,,,1.14.0,,libvcx,,,,,0,,,,In libVCX 0.5.0 there is a basic trust ping functionality like answering ACK to ping in some states. The library should have full support of the protocol and provide required API,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|i016pf:",,,,Unset,Unset,Indy Aries 19.25,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"13/Dec/19 7:53 PM;Artemkaaas;Done in PR: [https://github.com/hyperledger/indy-sdk/pull/1980];;;","20/Dec/19 8:56 PM;Artemkaaas;Changes:
 - Added `vcx_connection_send_ping` function to send `Ping` message on remote connection. 
 - Updated connection state machine to respond on `Ping` message after connection is established.

Flow:
  Outbound Ping:
- `vcx_connection_send_ping` - send ping 
- `download_message` - download messages from agency
- check that message with `ping_response` type is received

Inbound Ping:
- `download_message` - download messages from agency
- take message with `ping` type 
- `update_state_with_message` - to handle received message.


Version:  master-1397;;;",,,,,,,,,,
API for the canonical serialization,IS-1436,43551,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,05/Dec/19 3:51 AM,13/Jan/20 10:41 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libindy,,,,,0,,,,"*Story*

 As a researcher interested in the reliability of an Indy Network, I need an API that gives me the canonical transaction serialization so that I can verify that the signatures match the transactions on the ledger.

*Notes*
 * Transactions are stored on the ledger as JSON, but JSON does not guarantee the ordering of the contents. We need to consistently serialize the JSON before signing it so that our signatures are valid.
 * The system uses a custom serialization routine which isn't currently available as a public API. Plenum's implementation  can be found here:
[https://github.com/hyperledger/indy-plenum/blob/master/common/serializers/signing_serializer.py]
 * There is a matching implementation in libindy that should be available to interested developers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1451,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015rv:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
InvalidClientTaaAcceptanceError errors/exceptions from the ledger must include a reason_code or similar,IS-1437,43558,,Bug,New,IS,Indy SDK,software,resplin,,,High,,,ckochenower,ckochenower,05/Dec/19 9:18 AM,07/Dec/19 3:46 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,1,,,,"This is likely a bug in all wrappers. 

For the sake of illustration, the Java wrapper will be used to describe steps to reproduce observed behavior.

Steps to reproduce:

1. Setup a ledger configured with a TAA
2. Using the Java wrapper, try writing something (DID, attribute, NYM) to the ledger without ""appending"" the TAA (version + text OR digest) to the request. The expected behavior will be to experience some sort of error (failure to write to the ledger).
3. Futures are used to make asynchronous calls to LibIndy.api.*. Note that the futures complete w/o error/exception. The status code is 0 and status is Success, but the response (msg) from the ledger looks like the following:

{code}
Right(Map(identifier -> Th7MpTaRZVRYnPiabds81Y, op -> REJECT, reason -> client request invalid: InvalidClientTaaAcceptanceError('Txn Author Agreement acceptance is required for ledger with id 1',), reqId -> -654241882))
{code}

Note that ""op"" is ""REJECT"" and ""reason"" is ""client request invalid: InvalidClientTaaAcceptanceError('Txn Author Agreement acceptance is required for ledger with id 1',)""

Clearly the write was ""REJECT""-ed, but  with a status code of 0 and status of Success?

There are a large number of error code to exception mappings  found in each wrapper:

dotnet > indy-sdk-dotnet > ErrorCode.cs
ios > libindy-pod > indy > Wrapper > IndyErrors.h
java > src > main > java > org > hyperledger > indy > sdk > ErrorCode.java
nodejs > src > IndyError.js
python > indy > error.py

Should there be specific codes/statuses for TAA errors/exceptions?

*Observed behavior when using Java wrapper by Evernym in Verity (CAS/EAS/VAS):*

A NYM is written to the ledger by calling buildNymRequest followed by appendTxnAuthorAgreementAcceptanceToRequest and/or signRequest, if and only if needed, and finally submitRequest to write the NYM/DID to the ledger as part of Verity Server's setup flow.
submitRequest calls LibIndy.api.indy_submit_request immediately followed by checkResult. checkResult appears to detect/handle failures, map the error to an IndyException and call future.completeExceptionally, which returns a new CompletableFuture containing the exception. When the TAA is required, but not ""appended"" to the request, wouldn't we expect submitRequest to fail with an exception (future.completeExceptionally)?
When intentionally writing to a ledger with TAA enabled using a request that does NOT have the TAA ""appended"", we are getting the following upon completion of the CompletableFuture. ""Right"" indicates that the future completed ""normally"" instead of ""exceptionally"" (with an exception).

{code}
Right(Map(identifier -> Th7MpTaRZVRYnPiabds81Y, op -> REJECT, reason -> client request invalid: InvalidClientTaaAcceptanceError('Txn Author Agreement acceptance is required for ledger with id 1',), reqId -> -654241882))
{code}

We would have expected submitRequest to fail with an exception.

""InvalidClientTaaAcceptanceError"", included in the ""reason"" text, is found nowhere in the indy-sdk Java Wrapper code. It is, however, found in indy-plenum:

https://github.com/hyperledger/indy-plenum/blob/master/plenum/common/exceptions.py#L241

Perhaps LibIndy.api.indy_submit_request needs to return an SDK error code that can be used to complete the future ""exceptionally"" instead of ""normally""?

Here is a couple of screenshots from a debug session that shows the call stack, the request (intentionally does NOT contain the TAA), and the result after calling submitRequest. Note that the result is ""Success"" (err = 0), even though the attempted write to the ledger is rejected (""op = REJECT"")

!submitRequestWithoutTAAToLedgerWithTAA.png|thumbnail! !submitRequestWithoutTAAToLedgerWithTAACheckResults.png|thumbnail! 

This illustrates that the future ""Completed normally"" instead of ""exceptionally"".
!submitRequestWithoutTAAToLedgerWithTAAAfterCheckResults.png|thumbnail! 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Dec/19 9:16 AM;ckochenower;submitRequestWithoutTAAToLedgerWithTAA.png;https://jira.hyperledger.org/secure/attachment/17988/submitRequestWithoutTAAToLedgerWithTAA.png","05/Dec/19 9:16 AM;ckochenower;submitRequestWithoutTAAToLedgerWithTAAAfterCheckResults.png;https://jira.hyperledger.org/secure/attachment/17986/submitRequestWithoutTAAToLedgerWithTAAAfterCheckResults.png","05/Dec/19 9:16 AM;ckochenower;submitRequestWithoutTAAToLedgerWithTAACheckResults.png;https://jira.hyperledger.org/secure/attachment/17987/submitRequestWithoutTAAToLedgerWithTAACheckResults.png",,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifoi",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ckochenower,,,,,,,,,,"06/Dec/19 2:04 AM;ckochenower;For my records:

Slack discussion with [~sergey.minaev] and [~sergey.khoroshavin]
{panel}
Also sent to the channel

Sergey Minaev  7 hours ago
@corin.kochenower thank you for detailed tickets!
I think we can include IS-1438 (CLI) in December release
IS-1437 - The behavior for success error code / no exception while Reject or ReckNack is expected behavior. It means that response from the ledger is received under consensus.
@Richard Esplin @jonathan.rayback FYI

@Sergey Minaev -
*Even if it is by design, it seems a bit awkward.
I could check to see if there is an ""op"" attribute, and if its value is ""REJECT"", but that doesn't clearly tell me why it was rejected unless I look at the ""reason"" attribute. The ""reason"" is text, which is not machine friendly. Status codes, and exceptions, however, are machine friendly.*
Can we get a status code in the response along with ""op = REJECT"" and ""reason = <text>""? Parsing text from ""reason"" doesn't seem like best practice.

Sergey Minaev  2 hours ago
@corin.kochenower it's interesting idea.
@alexander.shcherbakov @Sergey Khoroshavin is it possible to add status code on Indy Node level in reasonable time? (edited) 

corin.kochenower  2 hours ago
The text in the ""reason"" ...
client request invalid: InvalidClientTaaAcceptanceError('Txn Author Agreement acceptance is required for ledger with id 1'

corin.kochenower  2 hours ago
The fact is that a request can be ""REJECT""-ed for more reasons than the TAA, right? It isn't reasonable to expect client software to make decisions based on scraping data from text. Status /Reason codes are best practice.

Sergey Minaev  2 hours ago
yep, afaik Node has several error classes like InvalidClientTaaAcceptanceError and the replay has reason as combination of class name and the clarification message. I think it should be possible to provide status code as well and map the class to the code

Sergey Khoroshavin  2 hours ago
@Sergey Minaev it possible to add status codes, however:
there will be lots of codes
these codes needs to be documented
these codes will become part of protocol, so cannot be changed at whim - so should be added very carefully
Also, as far as I understand (but I might be wrong!) current ""reasons"" were designed to be showed to human, not machine, and as for machine success/failure distinction was considered enough. So, all in all - we can add status codes, but this needs discussion (probably with @daniel.hardman), and it's worth separate ticket in JIRA, so it can be tracked, and @Richard Esplin is aware of this as well. (edited) 

Sergey Minaev  1 hour ago
@corin.kochenower I'll prepare the list of options (hopefully this week)
:+1:
1

@Sergey Khoroshavin - Success/Failure distinction in the case of TAA will not be sufficient for an ""on_file"" acceptance mechanism.
@dfisher and I discussed this with @Richard Esplin and Richard recommended that we manage a version change to the TAA in the following manner:
When a new version of the TAA is announced, the Sovrin Foundation will give a minimum of 30 day notice.
During this 30 day window, clients that use an ""on_file"" acceptance mechanism (like Evernym/Verity) must do the following:
Accept (sha256(<version><text>)) the new TAA and store the digest ""on_file"" (in server configuration).
Programmatically handle the change when the Sovrin Foundation (ledger) begins requiring the new version of the TAA. 
To programmatically handle the change when the Sovrin Foundation adds the new TAA version to the ledger, clients must do the following to detect and handle the change:
Submit write request with what is last known to be the current TAA.
When/If a write fails because of the TAA:
Log the failure at whatever log level seems appropriate.
Get the current TAA version and text from the ledger.
Check if the version is ""on_file"" (i.e. in a config file).
If the version currently required by the ledger is not ""on_file"", log an ERROR and fail with the assumption ERRORs of this sort result in a emergent response from Technical Enablement/Support.
  -OR-
If on file, retry once with the ""on_file"" digest for the version currently required by the ledger.
There had been discussion about accepting two versions of the TAA for a period of time, but legal council doesn't seem happy with that. (edited)
 {panel}
;;;","07/Dec/19 3:46 AM;ckochenower;I updated the title of the ticket based on the fact that the solution will likely continue to respond with an ""op"" of ""REJECT"", a ""reason"" with a human readable explanation for the rejection, AND and additional field/attribute that will contain a code that can be used by SDK users to programmatic-ly handle rejections based on a reason code instead of searching for words in the reason text.;;;",,,,,,,,,,
"Indy CLI documentation mentions get_acceptance_mechanisms, but does not support it",IS-1438,43559,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ckochenower,ckochenower,05/Dec/19 9:27 AM,21/Dec/19 1:45 AM,28/Oct/23 2:49 AM,21/Dec/19 1:36 AM,,,,,,,,1.14.0,,cli,,,,,0,,,,"Steps to reproduce:

1. Install indy-cli 1.13.0.
2. Stand up a ledger or get appropriate rights to setup TAA on an existing ledger.
3. Setup a TAA on a ledger. This includes configuring acceptance mechanisms.

Acceptance mechanisms can be given any arbitrary name and description, which means they MUST be discover-able so users of indy-cli can configure which to use in a config file.

The documentation found here: https://github.com/hyperledger/indy-sdk/blob/master/docs/how-tos/transaction-author-agreement.md
The ""TAA acceptance workflow"" says:
The list of available acceptance mechanisms can be received by sending get_acceptance_mechanisms request to ledger.
However, there is no such get_acceptance_mechanisms request option under ledger help or pool help output. Trying ledger get_acceptance_mechanisms and pool get_acceptance_mechanisms both fail with ""Unknown command ...""

 !image-2019-12-04-17-25-47-124.png|thumbnail! 

A nym can be written to the ledger if you create a file containing the following and start indy-cli with --config <file> as stated in the documentation.
{
  ""taaAcceptanceMechanism"": ""<a valid acceptance mechanism>""
}
Where ""<a valid acceptance mechanism>"" is one of the acceptance mechanisms configured when you setup the TAA on the ledger.

Anyone using the ledger could not discover what the list of valid acceptance mechanisms is by using indy-cli, because the advertised get_acceptance_mechanisms request option appears to not be supported by indy-cli.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Dec/19 9:25 AM;ckochenower;image-2019-12-04-17-25-47-124.png;https://jira.hyperledger.org/secure/attachment/17989/image-2019-12-04-17-25-47-124.png",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015xv:",,,,Unset,Unset,Indy Aries 19.25,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ckochenower,sergey.minaev,,,,,,,,"19/Dec/19 3:03 PM;Artemkaaas;Changes: added `ledger get-acceptance-mechanisms` command into CLI to get a list of acceptance mechanisms set on the ledger.
 
PR: [https://github.com/hyperledger/indy-sdk/pulls];;;","21/Dec/19 1:36 AM;sergey.minaev;Validated against master build 1.13.0~1402

Steps to validate:
1. install indy-cli
2. connect to Sovrin builder net
3. successfully read available AMLs
;;;",,,,,,,,,,
Dockerized Android CI,IS-1440,43625,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,sergey.minaev,sergey.minaev,06/Dec/19 10:55 PM,24/Dec/19 6:43 PM,28/Oct/23 2:49 AM,21/Dec/19 2:45 AM,,,,,,,,1.14.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015xf:",,,,Unset,Unset,Indy Aries 19.25,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"21/Dec/19 2:18 AM;sergey.minaev;Merged to master, would be tested as 1405 build;;;",,,,,,,,,,,
Indy CLI: support multiple active TAA on the ledger,IS-1441,43627,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,sergey.minaev,sergey.minaev,06/Dec/19 11:16 PM,19/Dec/19 10:19 PM,28/Oct/23 2:49 AM,19/Dec/19 10:19 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015xn:",,,,Unset,Unset,Indy Aries 19.25,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"19/Dec/19 10:19 PM;sergey.minaev;Requirements are updated for Indy Node and this functionality is not required anymore;;;",,,,,,,,,,,
Incorrect license in file.,IS-1442,43654,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ryjones,ryjones,10/Dec/19 4:08 AM,25/Dec/19 9:47 PM,28/Oct/23 2:49 AM,25/Dec/19 9:18 PM,,,,,,,,1.14.0,,,,,,,0,,,,"package.json says:

  ""license"": ""ISC""

 

The correct license is Apache 2.
 * indy-sdk/vcx/wrappers/node/package.json",,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo8w",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ryjones,,,,,,,,,"20/Dec/19 10:59 PM;Artemkaaas;Fixed in PR: [https://github.com/hyperledger/indy-sdk/pull/1997];;;",,,,,,,,,,,
Postgres wallet should allow DB name specification,IS-1443,43658,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,,aaronr,aaronr,10/Dec/19 6:41 AM,31/Jan/20 2:07 PM,28/Oct/23 2:49 AM,,,,,,,,,,,wallet,,,,,0,,,,"I believe that it is a perfectly valid scenario to have multiple agencies pointing at the same Postgres server. For example, I'd like to run a test version, a scaling version and a stable version of our agency at the same time, all pointing to the same postgres cloud server.

To this end, I'd like to be able to specify the database name that will be used by the postgres wallet when it is running as MultiWalletSingleTable. Currently the default name is 'wallet'. I believe that it would make sense for this to be specified on the PostgresConfig object.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:ztzxh",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),aaronr,DucaDellaForcoletta,,,,,,,,,,,,,,,,,,,,
Indy SDK users need access to the sdkMessage in an IndyException,IS-1444,43659,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ckochenower,ckochenower,ckochenower,10/Dec/19 6:52 AM,08/Jan/20 10:01 PM,28/Oct/23 2:49 AM,08/Jan/20 10:01 PM,,,,,,,,1.14.0,,,,,,,0,,,,"For users of Indy SDK, private data member sdkMessage is needed in order to log sufficient details about the exception. The message returned by Throwable.getMessage is too generic.

 !screenshot-1.png|thumbnail! 

There is no public member function provided to get the sdkMessage. The closest is private member function setSdkMessage, which is returning sdkMessage instead of setting it as the function name would suggest.

 !image-2019-12-09-14-45-25-451.png|thumbnail! 

I recommend changing setSdkMessage to getSdkMessage and making it public.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Dec/19 6:45 AM;ckochenower;image-2019-12-09-14-45-25-451.png;https://jira.hyperledger.org/secure/attachment/18020/image-2019-12-09-14-45-25-451.png","10/Dec/19 7:14 AM;ckochenower;screenshot-1.png;https://jira.hyperledger.org/secure/attachment/18021/screenshot-1.png",,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q1:",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ckochenower,sergey.minaev,,,,,,,,"11/Dec/19 1:53 AM;ckochenower;[~esplinr] - This issue isn't a high priority (probably medium). However, without access to the sdkMessage (private data member), Indy SDK users must use a visual debugger to get access to it when performing root-cause analysis, which likely means that Technical Enablement / Operations will have to escalate to Engineering.
The getMessage result ""A value being processed is not valid"" is not sufficient to reveal root cause, but the getSdkMessage result ""Error: Invalid Structure\n Caused by: Invalid combination of params: 'text' and 'version' should be passed or skipped together"" would be sufficient.;;;","28/Dec/19 9:41 PM;Artemkaaas; Fixed in PR: [https://github.com/hyperledger/indy-sdk/pull/1989]
 Build version: libindy: 1.14.0;;;","08/Jan/20 10:01 PM;sergey.minaev;[~ckochenower] I'm closing this ticket as the fix looks good. Please let us know if you will find some issues;;;",,,,,,,,,
Invalid error message in the libindy logs in case of demoted nodes are on ledger,IS-1445,43662,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,10/Dec/19 9:12 PM,17/Jan/20 10:57 PM,28/Oct/23 2:49 AM,17/Jan/20 10:54 PM,,,,,,,,1.14.2,,,,,,,0,EV-CS,TShirt_S,,"Since all real networks have demoted nodes on their ledgers, We see a lot of messages like this. Even at INFO level, we don’t need to see this. Can they be moved to DEBUG?
    ERROR:vcx.logging.native.indy.services.pool.pool:
	src/services/pool/pool.rs:689 | Error during retrieving nodes: IndyError { inner: 
    Node is not a validator
    Invalid library state }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q2:r",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"30/Dec/19 11:16 PM;Artemkaaas;Message log level  was downgraded in PR: [https://github.com/hyperledger/indy-sdk/pull/2017];;;","17/Jan/20 10:54 PM;sergey.minaev;Available in master 1427;;;",,,,,,,,,,
Portable version of libindy,IS-1446,43664,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,10/Dec/19 9:51 PM,10/Dec/19 9:52 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"We should be able to build libindy without system dependencies.
WASM is one of the goals as well",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0163n:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Proof made using two credentials from same cred def do not verify,IS-1447,43674,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,fabienpe,fabienpe,fabienpe,11/Dec/19 9:36 PM,03/Feb/20 6:16 PM,28/Oct/23 2:49 AM,03/Feb/20 6:16 PM,,,,,,,,1.14.2,,libindy,,,,,0,,,,"{color:#444444}When trying to verify a proof built with two different credentials from the same institution and with the same credential schema and same credential definition (so the only difference between the two credentials is the time and serial number), then verification fails.{color}

{color:#444444}I've created a modified version of the getting_started Python code at:{color}

{color:#444444}[https://github.com/fabienpe/indy-sdk/blob/master/samples/python/src/getting_started_2.py]{color}

In this code, at line 312 you can choose issuing 1 or more Transcripts from Faber. If one is issued, then all goes well. If two are issued, then proof with Acme fails. The trace says:

{{{color:#444444}{\{TRACE:indy.libindy.native.ursa.cl.verifier: xxxx\.cargo\registry\src\github.com-1ecc6299db9ec823\ursa-0.2.0\src\cl\verifier.rs:317 | ProofVerifier::verify: <<< valid: false}}{color}}}

The issue only occurs when revocation is enabled.

{color:#444444}Related discussion here:{color}

[https://chat.hyperledger.org/channel/ursa?msg=HPkYohCHdMzo9y3cx]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo8r",,,,Unset,Unset,Indy Aries 19.26,Indy Aries 20.01,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,fabienpe,sergey.minaev,,,,,,,,"20/Dec/19 6:17 PM;Artemkaaas;Hello, [~fabienpe]

The revocation works well but there is a limitation connected to the preparation data for proof building in you case.

If you want to use two credentials with the same cred_def and revocation_registry_id you must use different timestamps within the proof for these credentials.

Why:

 - you create revocation state ( `anoncreds.create_revocation_state` ) for each credential
  - put them into a common map (`revoc_states_for_job_application`)
  - this map has the following structure 
{code:java}
rev_states_json = { 'rev_reg_def_id' : {'timestamp' : 'rev_state1' }, .... }{code}
 - in your case `rev_reg_def_id` and `timestamp` are the same for both credentials. So, the second revocation state overwrites the first. This value will be used for both credentials but actually revocation states are different. 
  - as the result the invalid proof is built and verification failed as expected.;;;","17/Jan/20 10:36 PM;sergey.minaev;I think we can change the referencing model in rev reg states from rev_reg_id + ts to cred_id + ts;;;","17/Jan/20 11:57 PM;Artemkaaas;Changes:  Did support of two formats for rev_state_json:
{code:java}
1) 
{
  rev_reg_id: {
    timestamp: rev_reg_state,
    ..
  },
  ...
}
2)
{ 
  credential_id: {
    timestamp: rev_reg_state,
    ...
  },
 ...
}
{code}

You need to use the second format to pass your case.


PR: https://github.com/hyperledger/indy-sdk/pull/2042

 ;;;","28/Jan/20 2:57 PM;Artemkaaas;[~fabienpe] Could you validate it?;;;","30/Jan/20 9:58 PM;sergey.minaev;Available in master 1.14.1 1467;;;","03/Feb/20 6:16 PM;sergey.minaev;Covered by integration tests. [~fabienpe] i'm closing the issue now, fill free to re-open it or create new on if you see any followups  ;;;",,,,,,
Additional support for Aries protocols in LibVCX,IS-1448,43713,,Epic,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,14/Dec/19 12:29 AM,14/Dec/19 12:31 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-3,,LibVCX Aries Interop 2,To Do,No,,Unset,No,,,"1|i016cz:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Service Decorator,IS-1449,43714,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,14/Dec/19 12:37 AM,27/Dec/19 5:54 PM,28/Oct/23 2:49 AM,25/Dec/19 11:03 PM,,,,,,,,1.14.0,,,,,,,0,,,,"https://github.com/hyperledger/aries-rfcs/tree/master/features/0056-service-decorator

In terms of practical interoperability, this is important for the ""ephemeral proof request"" use case.",,,,,,,,,,,,,,,,,,,IS-1453,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo8y8",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"23/Dec/19 7:59 PM;Artemkaaas;Done in PR: [https://github.com/hyperledger/indy-sdk/pull/1988];;;","25/Dec/19 7:02 PM;Artemkaaas;Changes:
    If a message contains `~service` field reply we do not require established connection. Send a reply directly to the provided service info.;;;","25/Dec/19 11:03 PM;sergey.minaev;available in master 1.13.0 1415;;;",,,,,,,,,
Confirm our implementations against the RFCs,IS-1450,43715,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,esplinr,esplinr,14/Dec/19 12:38 AM,04/Feb/20 4:52 AM,28/Oct/23 2:49 AM,03/Feb/20 11:51 PM,,,,,,,,,,,,,,,0,,,,"Confirm that our implementations match the latest approved versions of the Aries RFCs.

Especially:
* Error Report
* ACK",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|i016pn:",,,,Unset,Unset,Indy Aries 19.26,Indy Aries 20.01,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"03/Feb/20 9:46 PM;Artemkaaas;We did testing of Libvcx 0.6.2 against Aca-py and Aries-test-suite. 
Vcx still needs to be updated [here|https://github.com/hyperledger/indy-sdk/blob/master/vcx/libvcx/src/utils/httpclient.rs#L36]  to use correct `content-type`.
Results:
* Aca-py:  both sides passed after changes connected to connection acknowledgment. PR must be merged: https://github.com/hyperledger/indy-sdk/pull/2070
* Aries-test-suite:  Manual testing passed. But it requires new Libvcx functions and test-suite updates. Related Libvcx PR: https://github.com/hyperledger/indy-sdk/pull/2069/files;;;","03/Feb/20 11:51 PM;sergey.minaev;IS-1485 is follow-up for content type problem;;;",,,,,,,,,,
API calls for verifying a signature,IS-1451,43716,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,14/Dec/19 12:48 AM,13/Jan/20 10:41 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,EV-Triaged,help-wanted,,"*Story*
As a researcher examining an Indy network, I want to verify that the signatures of ledger transactions are valid so that I can have confidence in the network's integrity.

*Acceptance Criteria*
It should be programmatically possible to recreate the signature from the transaction and compare.

This is complicated because the transaction format is JSON, which does not enforce ordering. There should be a public API to access the system's custom serialization routine so that a consistent ordering is always used.

*Notes*
* Indy Plenum's implementation is here: https://github.com/hyperledger/indy-plenum/blob/master/common/serializers/signing_serializer.py 
* Indy SDK's implementation is behind a private API",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1436,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016h4:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Verify function fails on Ubuntu 16.04,IS-1452,43734,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,KitHat,tmarkovski,tmarkovski,16/Dec/19 10:24 PM,26/Dec/19 11:50 PM,28/Oct/23 2:49 AM,25/Dec/19 7:17 PM,,,,,,,,1.14.0,,libindy,,,,,0,,,,"[~esplinr] reminded me to post about this bug. We noticed that calling `indy_verifier_verify` would always return `false` under certain environments.

We noticed this behavior when running a container based on Ubuntu 16.04. Upgrading to Ubuntu 18.04 and running the same function with the same parameters, worked fine.

Environment setup
 * Ubuntu 16.04
 * Libindy 1.12.0
 * We use docker images [https://github.com/streetcred-id/docker] - anything earlier than the 1.12.2 is based on Ubuntu 16.04 can reproduce this bug
 * Libindy called through .NET wrapper running netcore 2.1, 2.2 or 3.0

Below are some exact values I was able to extract from logs that consistently fail. When running the function in a different runtime (MacOS, iOS, Windows), the function works fine. It's only the 16.04 that fails.

Strangely, the unit tests on Aries Framework .NET run in the same docker container version, and the function succeeds.

Again, updating from 16.04 to 18.04 fixed this issue.

 

Here are the parameters of `indy_verifier_verify` in order (unstringified). Note, the example below uses Unicode characters, this is not the reason for the fail, the same happens with plain ASCII values, this is just the example I had saved.

 
{code:java}
{""name"":""proof-of-address-verification"",""version"":""1.0"",""nonce"":""06e7c19613b8d4fb1b1f325f1167a1c94"",""requested_attributes"":{""address-requirement"":{""name"":""imeto""}},""requested_predicates"":{}}


{""proof"":{""proofs"":[{""primary_proof"":{""eq_proof"":{""revealed_attrs"":{""imeto"":""1234567890""},""a_prime"":""6892116109804214682762415286217751337053715081218726738442961561093754568268172692377901998609378382843975428532957086712758183213713130166523084562772994353315496789678963980545579196900375649713076216874113263396417922653280415783028963554350587929909722035239488200681022806586171231113605921871811825693949645721703731399073298281939234621358452818584347221278759990102143659387107700178082158228352052417788475216371843712491022984426829333307770942551924078517906879109449855827741067721897039644674436710590114402450913543938911784112575123199794896334117353269970257885304893731164638378245465053960679526937"",""e"":""120370666894420000846364774236883130401717360110017793637515943451358508667696306120887262328639223153410613587100490593068998319235897647"",""v"":""4775171920831867645255743276170298016195849060921699451863971295030762068500494845734608227943465433836180197079035012757568859953119687968582413554806562924870103734910947856219638611913891217591962698733557293411749526133000676083561181365625511316961325623100332227116110744366061788886940176352079009659041439807510716037041733040279166353300165340076674133988885867320635608152326526326286979201631224841271245605955354218251154413673615385529078485127576877562900392451379145348468599987168843382786546098143865175704642305845656319354826500190580504902336393027914709241754350942640666454641256100362719826357639004886325160914626827179874187613001910021001353395471606624685084487553669366675158225707463926225929205410442705251107229807232722285332899726555723753060810459346177521950607466557885288018549917030361026896167703522478207522495821721142382999601289886997641591729283755538393263678867319994053120"",""m"":{""master_secret"":""13589545062413297503927252204481027233940391387867278254888771522887782568126989301235740204603904812237568293850737437527891015864511602589054018466904372556774996927605777365119""},""m2"":""13426579965254519552108591971885220375891323001733141598264562856237872089539984716364172569455122163549390097632479649100309750690056458483205886102962418477291221534266344256100""},""ge_proofs"":[]},""non_revoc_proof"":null}],""aggregated_proof"":{""c_hash"":""65394802395379345731273773207647738046886732507377356932266592995516160575242"",""c_list"":[[54,152,152,114,42,97,144,192,24,146,240,82,250,46,0,54,213,96,161,54,211,19,129,143,85,107,19,96,163,41,172,250,99,205,38,106,3,149,254,130,155,144,150,167,156,96,121,52,240,6,172,139,230,81,90,24,215,89,112,18,197,254,213,76,209,123,60,50,10,151,95,42,81,138,19,184,48,117,177,111,101,93,133,73,145,15,236,170,47,174,84,8,168,89,53,0,158,242,79,104,65,14,105,173,255,251,79,239,28,167,209,55,111,177,66,172,163,170,242,241,131,44,122,253,146,32,49,120,211,31,129,148,33,246,158,29,208,208,188,73,131,233,107,198,199,171,20,81,98,221,143,199,2,102,60,178,48,126,14,97,192,123,202,193,102,122,16,163,243,51,100,143,100,126,122,58,64,216,209,37,23,190,237,204,223,254,68,61,247,145,92,112,213,40,226,10,163,251,182,57,184,98,50,206,11,118,86,10,88,50,69,182,200,216,28,234,64,36,252,20,251,240,58,24,221,32,231,197,239,81,178,143,2,55,168,39,112,55,254,79,182,97,83,60,44,83,128,195,69,38,128,185,136,165,18,25]]}},""requested_proof"":{""revealed_attrs"":{""address-requirement"":{""sub_proof_index"":0,""raw"":""Томислав Марковски"",""encoded"":""1234567890""}},""self_attested_attrs"":{},""unrevealed_attrs"":{},""predicates"":{}},""identifiers"":[{""schema_id"":""8er2ZR8pUavM6LVwYoSZ4t:2:test-staging:1.1.1"",""cred_def_id"":""8er2ZR8pUavM6LVwYoSZ4t:3:CL:311:default"",""rev_reg_id"":null,""timestamp"":null}]}


{""8er2ZR8pUavM6LVwYoSZ4t:2:test-staging:1.1.1"":{""ver"":""1.0"",""id"":""8er2ZR8pUavM6LVwYoSZ4t:2:test-staging:1.1.1"",""name"":""test-staging"",""version"":""1.1.1"",""attrNames"":[""imeto""],""seqNo"":311}}


{""8er2ZR8pUavM6LVwYoSZ4t:3:CL:311:default"":{""ver"":""1.0"",""id"":""8er2ZR8pUavM6LVwYoSZ4t:3:CL:311:default"",""schemaId"":""311"",""type"":""CL"",""tag"":""default"",""value"":{""primary"":{""n"":""126959486232208969041883204784567086051615700838705883383708478059793961378579389397240550264377363624325939732252246177788865717966820820393092527019295988100089342432155232865833729622525140091270310301575849909179445166924827361836215887274370596341657668597746838936396886005666003532025034141430848149694265585328744805247913163761206880570708749488034129228637170578076478495469279189727241063887811883169890097046758662350447647041777025329605543737569306346288128766796580624589448314770756167263890013654818987261526562421344107260774364471217507799814831381412136347238736870441157724000217531099235515131353"",""s"":""117684122558622039265804770637448762940860483252294464732268973028074145801968200301139495160553496455594584857131883798389747996800305870317766564397177555848202000075815177461331502580852315732992750457192479465276394439312498354495562070887121997602034062030188068035661621216234743359382035244692379057222739930239070032139960901166692597866757360870072169533990724347345984178109446709967371060970608211996703921702388455306949471898415543733565343227184123773305900312454080117408467227515676232242224838023704443501056953674755934040840508655813997533646425259740023490736404883009992391182690767243031230089222"",""r"":{""master_secret"":""97757285165913811614511779091377965764077396651332187752892076607844943563362949171631910469210911198754689538712082216414687859972726456980996079644413395912014777812657227072963515319108790774638121871637557799491978810040320741780293586802807416843088353322307799569078942895075227569744408983695952370389465523234506420266568379311310702374682272401949265118954696242101208251979150165063342313357761927798857876365749104347462845208416111295862222499518468895717017746744134423466279195549633295387989904545510011140498154982699492619886021264234825019791086845705987579754489644054194909516091560021308706514681"",""imeto"":""24430185584556229437015678485428772894028144937616774982607234263330548834483245344581038975062832956709903285759868610482893187450285717653984723580696516013961270742983574417745227922178991492608195823592029091279089700265776346211934940862001148423800775606513806740643944768997625738052401528662181621261898504238078400878972887915051568468935590878973570979207818817405085459347644445969079102343933384309220820547101595112243243542660000041008739695953797471267556508327095965393337509885204566427516342520362655879430703266869822576194109053534744312498383937768837804238717252067847509222658882173712055403551""},""rctxt"":""3344022408804515805236103755140596245648443339928525627589254286703706176843926579992842136229857147872955764280773664402612021601456135015180050471052310075992684493065576182608158029282329645769112319050901454352225220392007361131816261296975998034782600964546142539464973431710322525562553348622667344708747348714248171511802655816078139812489160111767459894530961668257257710487286438582586094462610241491806454466422911147880551354280721598413707362082592991270635099684061916403540925955338157971875072309535689995340005462145382285429236843525031063655961633102317032090955375418309408444122323672062943456095"",""z"":""62979258004051596901604469001010404561617853785107809515423567220629741232025620655686885598503955011325057532555342027831477193872131372765175339645768036351464520470271222120652522367191309916679748497411447488706986833187847752192469129322464334552537996825571062256896792678799129386980993243925271863881482649319601775373727921008170780118293031036436770012098868899980348531916053186478010342927756990576943643292194428978854544822613130427689414434845496148572390068516784095385898980608103642393950270036258513349903775036302957468451249561978853982915401647734491663650897513374390904062710128288795713721899""}}}}


{}


{}
{code}
 

 ",,,,,,,,,,,,,,,,,,,,,,,,,IS-1309,IS-1460,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo7",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),KitHat,tmarkovski,,,,,,,,,"25/Dec/19 6:56 PM;KitHat;[~tmarkovski] we have researched the problem and found out that hexadecimal nonce is not supported by current Ursa. So I strongly recommend not to use hexadecimal nonces as long as Ursa do not support hexadecimal nonces correctly and generate nonces using function `indy_generate_nonce`.
The reason why this test failed is change in (de)serialization of BigNum in OpenSSL between version 1.0.2h and 1.0.2i (the container you have provided has version 1.0.2g). So the proof was generated using the higher version and checked on a lower version and then failed because of different nonce deserialization.
And we already have the issue for this problem and it is completed - IS-1309;;;","26/Dec/19 11:50 PM;tmarkovski;Thank you for researching this [~KitHat]. I wouldn't have guessed that's the problem. I believe these was part of a codebase before `indy_generate_nonce` was added.

Cheers;;;",,,,,,,,,,
Support VC-Authn-OIDC,IS-1453,43736,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,16/Dec/19 11:20 PM,17/Jan/20 10:57 PM,28/Oct/23 2:49 AM,17/Jan/20 10:51 PM,,,,,,,,1.14.2,,libvcx,,,,,0,,,,"*Story*
As a developer of an application using LibVCX for credential exchange, I want to be able to fulfill a proof request without first creating a connection so that I can complete the VC-Authn-OIDC flow implemented in ACA-Py and get access to services provided by BC.gov to citizens.

*Notes*
* The VC-Authn-OIDC flow implemented in ACA-Py needs to be supported in LibVCX so that users of Evernym's Connect.Me can fulfill proof requests without making connections (the ephemeral credential flow).
* See:
https://github.com/bcgov/vc-authn-oidc/blob/master/docs/DemoInstructions.md",,,,,,,,,,,,IS-1449,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|i016p7:",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,"30/Dec/19 3:58 PM;Artemkaaas;Prepare a script that shows how VCX can be used to pass [VC-Authn-OIDC demo|#a-quick-demo]].

This script contains steps directly related to oidc demo only. So it requires performing multiple environment and actor preparation steps. Read.me guides on how to run the demo and how to implement logic on the application side.

PR: [https://github.com/hyperledger/indy-sdk/pull/2016];;;","17/Jan/20 10:51 PM;sergey.minaev;The demo script is available in master and the demo is recorded as regular end-of-sprint demo;;;",,,,,,,,,,
Release Indy SDK 1.14.0,IS-1454,43738,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,KitHat,esplinr,17/Dec/19 12:34 AM,31/Dec/19 12:07 AM,28/Oct/23 2:49 AM,28/Dec/19 8:11 PM,,,,,,,,1.14.0,,,,,,,0,,,,"*Release Goal*
Release everything that is ready. Especially:
* Flexible attribute tagging
* Improvements to offline signing

*Acceptance Criteria*
Regular instructions:
* Code is tested
* Review upstream releases to decide what should be included in this build
** Ursa
* Build is produced with automated CI / CD
** Official build is tagged as released in Git
** Official builds should be the only builds that are not marked in GitHub as ""pre-release""
* Prepare basic documentation on new features
* Prepare the Release Notes
** Link to the documentation on new features
** Stored as a CHANGELOG.md in the root of the repo
** Latest release at the top, above the release notes for all previous versions
* The release should be on GitHub “Releases” tab.
** Release notes should be in the “Description"" field of the GitHub release artifact
* The release is marked in JIRA
* Add the correct fixVersion to included issues
* Enable others to use the release:
** Email stakeholders with links to the artifacts and release notes",,,,,,,,,,,,,,,,,,,,,,,IS-1324,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwrhj:910sx0900009eoaiifo8y9",,,,,,Indy Aries 19.26,,,,,,5.0,,,,,,,,,,,,Artemkaaas,esplinr,KitHat,sergey.minaev,VladimirWork,,,,,,"23/Dec/19 9:22 PM;Artemkaaas;Release preparation done in PR: [https://github.com/hyperledger/indy-sdk/pull/1999];;;","28/Dec/19 7:14 PM;VladimirWork;We should merge python TAA sample updates to master and 1.14.0 rc/stable branches.;;;",,,,,,,,,,
Aries compatible issuing from LibVCX,IS-1455,43741,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,17/Dec/19 7:31 AM,30/Jan/20 10:15 PM,28/Oct/23 2:49 AM,30/Jan/20 10:15 PM,,,,,,,,1.14.2,,libvcx,,,,,0,,,,"*Story*
As an application developer building solutions on LibVCX, I want the credentials I issue to work with any Aries compatible mobile applications so that my customers have a choice about what identity wallet they use.

*Acceptance Criteria*
* Set up a test environment.
* Test interop
* Fix any bugs we find

*Notes*
* We have already done a very basic test of LibVCX issuing to ACA-Py as a holder.
* Examples of Aries compatible mobile applications include StreetCred's mobile wallet and the Open Source Mobile Agent (OSMA) from Mattr Global.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|i016pv:",,,,Unset,Unset,Indy Aries 19.26,Indy Aries 20.01,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,"30/Jan/20 10:15 PM;sergey.minaev;Initial updates are merged to master. Follow-up testing would be done as soon as .Net framework would have updated edge agent implementation. This can be track in scope of IS-1450;;;",,,,,,,,,,,
dotnet wrapper unit tests failing,IS-1456,43766,,Bug,New,IS,Indy SDK,software,resplin,,,Low,,tmarkovski,jrallen,jrallen,18/Dec/19 8:02 PM,14/Jan/20 11:26 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"There are currently 20 unit tests failing (304 passing). This is on MacOS with code checked out from commit e7bbfdcb20c.

I noticed that the dotnet wrappers are not tested in Jenkins (this might be why).

I also saw IS-1423 saying the dotnet wrapper would be marked deprecated, but that doesn't make sense because the Hyperledger.Aries package depends on Hyperledger.Indy.Sdk.

I'm reporting this because I'm trying to work on Aries-framework-dotnet to bring it up to date, and it is hard to know if problems I see there are due to problems in Hyperledger.Indy.Sdk or not.

The failing tests are:
 * TestExportWalletWorks
 * TestBuildCredDefRequestWorks
 * TestBuildGetRevocRegDefRequestWorks
 * TestGetTxnRequestWorks (mentioned in the source code, but not ignored)
 * TestGetTxnRequestWorksForInvalidSeqNo
 * TestBuildNymRequestWorksForOnlyRequiredFields
 * TestBuildNymRequestWorksForEmptyRole
 * TestBuildNymRequestWorksForOnlyOptionalFields
 * TestSubmitRequestWorks
 * TestBuildGetRevocRegRequestWorks
 * TestBuildRevocRegDefRequestWorks
 * TestBuildRevocRegEntryRequestWorks
 * TestBuildSchemaRequestWorks
 * TestBuildSchemaRequestWorksWithoutSignature
 * TestReplaceKeysDemoWorks
 * TestReplaceKeysWithoutNymTransaction
 * TestPackMessageErrorsWithNoReceivers
 * TestUnpackMessageErrorsWithInvalidStructure
 * TestIssuerCreateAndStoreCredentialDefWorksForDuplicate
 * TestProverGetCredentialsForProofRequestWorksForEmptyRequest",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:ztzx9",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jrallen,tmarkovski,,,,,,,,,"14/Jan/20 11:26 PM;tmarkovski;This may be a good time to move the wrapper out of indy-sdk repo and into aries. We can run the unit tests in the existing CI. [~esplinr] should we proceed with this?;;;",,,,,,,,,,,
Integrate TAA changes with latest Indy Node,IS-1457,43787,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,sergey.minaev,sergey.minaev,21/Dec/19 2:52 AM,28/Dec/19 12:31 AM,28/Oct/23 2:49 AM,28/Dec/19 12:31 AM,,,,,,,,1.14.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo3",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,DucaDellaForcoletta,sergey.minaev,VladimirWork,,,,,,,"25/Dec/19 6:58 PM;Artemkaaas;Done in PR: [https://github.com/hyperledger/indy-sdk/pull/2007];;;","28/Dec/19 12:31 AM;VladimirWork;Load and system tests run well against the libindy and indy-node with the latest TAA changes.;;;",,,,,,,,,,
Broken url and typo in docs/getting-started/index.rst,IS-1458,43794,,Bug,Complete,IS,Indy SDK,software,resplin,,,Lowest,Done,jragard,jragard,jragard,24/Dec/19 7:55 AM,13/Jan/20 10:25 PM,28/Oct/23 2:49 AM,13/Jan/20 10:25 PM,,,,,,,,1.14.0,,,,,,,0,Documentation,,,"The url for Hyperledger Indy Wiki points to `[https://wiki.hyperledger.org/projects/indy]` which displays a 'Page Not Found', when it should point to `[https://wiki.hyperledger.org/display/indy]`.  Also, there is a small typo in the next bullet point on line 29 in the sentence ""The next page contains an extended tutorial introduces Indy..."" – This should be ""The next page contains an extended tutorial +that+ introduces Indy...""

 

PR is here [https://github.com/hyperledger/indy-sdk/pull/2003]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:ztzxi",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jragard,,,,,,,,,,,,,,,,,,,,,
Aries LibVCX: API to decline proof request,IS-1459,43796,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,24/Dec/19 8:01 PM,08/Jan/20 9:36 PM,28/Oct/23 2:49 AM,28/Dec/19 9:20 PM,,,,,,,,1.14.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1377,,,No,,Unset,No,,,"1|i016q0:",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"25/Dec/19 7:06 PM;Artemkaaas;Changes:
 - Added `vcx_disclosed_proof_decline_presentation_request` function to decline presentation requet. 
There are two options:
1) Prover wants to propose using a different presentation - pass `proposal` parameter.
2) Prover doesn't want to continue interaction - pass `reason` parameter to send reject.
Note that this function is useful in case `aries` communication method is used. In other cases, it returns ActionNotSupported error.

PR: [https://github.com/hyperledger/indy-sdk/pull/2008|https://github.com/hyperledger/indy-sdk/pull/2008/files];;;",,,,,,,,,,,
Additional validation for CL Nonce in libindy,IS-1460,43798,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,sergey.minaev,sergey.minaev,25/Dec/19 7:37 PM,28/Dec/19 9:13 PM,28/Oct/23 2:49 AM,28/Dec/19 9:13 PM,,,,,,,,1.14.0,,,,,,,0,,,,In default configuration Ursa doesn't provide enough check for Nonce deserialization in CL anoncreds flow. libindy should do this check until Ursa would be fixed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1452,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo8y4",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),KitHat,sergey.minaev,VladimirWork,,,,,,,,"26/Dec/19 6:35 PM;KitHat;Problem reason:
- Nonce has been parsed without any validation of its value, so the results were unpredictable

Changes:
- Added validation of nonce using Ursa serialization

PR:
- https://github.com/hyperledger/indy-sdk/pull/2010

Version:
- master #1420

Risk factors:
- No risk factors, just validation enforcement

Risk:
- Low

Covered with tests:
- https://github.com/hyperledger/indy-sdk/pull/2010/files#diff-0f30a584fc3ba7a8cee1d1d1efb54a01R339

Recommendations for QA
- try to use invalid nonces (like hex nonces, random strings);;;","28/Dec/19 8:55 PM;VladimirWork;Build Info:
1.14.0~117 (rc)

Steps to Validate:
1. Create proof requests with hex and random string nonces.
2. Try to get credentials for these proof requests.

Actual Results:
CommonInvalidStructure returns.;;;",,,,,,,,,,
TLS support postgres plugin,IS-1461,43801,,Improvement,New,IS,Indy SDK,software,resplin,,,High,,ianco,DucaDellaForcoletta,DucaDellaForcoletta,27/Dec/19 7:20 PM,13/Jan/20 10:34 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libindy,wallet,,,,2,,,,"The TLS support in the postgres plugin is requested in order to deploy an indy based solution on environment where only tls connection are allowed.

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:ztzxc",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),aaronr,DucaDellaForcoletta,pmccabensds,,,,,,,,,,,,,,,,,,,
Release Indy SDK 1.14.1,IS-1462,43810,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,KitHat,sergey.minaev,31/Dec/19 12:06 AM,15/Jan/20 12:32 AM,28/Oct/23 2:49 AM,09/Jan/20 11:00 PM,,,,,,,,1.14.1,,,,,,,0,,,,"*Release Goal*
Release everything that is ready. Especially:
* Flexible attribute tagging
* Improvements to offline signing

*Acceptance Criteria*
Regular instructions:
* Code is tested
* Review upstream releases to decide what should be included in this build
** Ursa
* Build is produced with automated CI / CD
** Official build is tagged as released in Git
** Official builds should be the only builds that are not marked in GitHub as ""pre-release""
* Prepare basic documentation on new features
* Prepare the Release Notes
** Link to the documentation on new features
** Stored as a CHANGELOG.md in the root of the repo
** Latest release at the top, above the release notes for all previous versions
* The release should be on GitHub “Releases” tab.
** Release notes should be in the “Description"" field of the GitHub release artifact
* The release is marked in JIRA
* Add the correct fixVersion to included issues
* Enable others to use the release:
** Email stakeholders with links to the artifacts and release notes",,,,,,,,,,,,,,,,,,,,,IS-1468,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|i016q2:w",,,,,,Indy Aries 19.26,,,,,,3.0,,,,,,,,,,,,Artemkaaas,esplinr,KitHat,sergey.minaev,VladimirWork,,,,,,"09/Jan/20 11:00 PM;Artemkaaas;Release preparation done in PR: [https://github.com/hyperledger/indy-sdk/pull/2019];;;",,,,,,,,,,,
Indy-CLI doesn't suggest accepting TAA on pool connect,IS-1463,43811,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,Artemkaaas,Artemkaaas,31/Dec/19 12:10 AM,31/Dec/19 12:12 AM,28/Oct/23 2:49 AM,31/Dec/19 12:12 AM,,,,,,,,1.14.1,,,,,,,0,,,,"When I connect to Sovrin BuilderNet using Indy-CLI 1.13.0 I get a suggestion to accept an active TAA.  
After updating Indy-CLI onto 1.14.0 version there is no this suggestion.
When I try to send NYM transaction I get an error which tells that I need to accept TAA.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q2:y",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,,,,,,,,,,"31/Dec/19 12:11 AM;Artemkaaas;Fixed in PR: [https://github.com/hyperledger/indy-sdk/pull/2019]
Build version: 1.14.1-rc~120;;;",,,,,,,,,,,
verifierVerifyProof function always returns true irrespective of value of requested predicates,IS-1464,43820,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Cannot Reproduce,debumonty,debumonty,debumonty,04/Jan/20 7:44 PM,30/Jan/20 10:13 PM,28/Oct/23 2:49 AM,30/Jan/20 10:13 PM,,,,,,,,,,,,,,,0,node-SDK,,,"As per [https://docs.info.verify-creds.com/develop/verify_proofs/] the verifierVerifyProof function should return true or false on the basis of compared value of requested predicates. However on calling sdk.verifierVerifyProof(proof.request, proof, schemas, credDefs, revRegDefs, revRegs) on nodeJS, the value of result in indyResponse always returns true irrespective of the >= value compared in request proof.

""{""indyResponse"":\{""result"":true,""messageType"":Success,""messageDesc"":,""msgCode"":INDY_MSG_PROOF_VALID_SUCCESS}}""

If we change any data in the proof, only in that case it returns false as shown below.

""{""indyResponse"":\{""result"":false,""messageType"":Fail,""messageDesc"":,""msgCode"":INDY_MSG_PROOF_VALID_FAIL}}""

Does this mean the value of ""result"" has nothing to do with the compared values in predicates? Does it only validate the data integrity (whether tampered) of the proof? ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzz",,,,Unset,Unset,Indy Aries 20.01,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,debumonty,DucaDellaForcoletta,sergey.minaev,,,,,,,"21/Jan/20 7:41 PM;Artemkaaas;Hello, [~debumonty] 
I'm not familiar with this portal. So I don't know it's the environment is used and what is going under the hood.
For the case, you described: `AnoncredsProofRejected` error will be thrown by Libindy. 
I updated Indy NodeJs anoncreds demo test to cover this case.
It works as expected. (I use Ubuntu 16.04)
It also passed on Ubuntu 18.04 during CI build.
Here is PR: [https://github.com/hyperledger/indy-sdk/pull/2046];;;","30/Jan/20 10:13 PM;sergey.minaev;[~debumonty] we can not reproduce the issue by the description. The extra test was added to check the behavior while CI. Fill free to re-open the issue and share more details;;;",,,,,,,,,,
Migrate to Ursa 0.3.0,IS-1465,43958,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,13/Jan/20 10:39 PM,17/Jan/20 10:54 PM,28/Oct/23 2:49 AM,17/Jan/20 10:40 PM,,,,,,,,1.14.2,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q2:zzi",,,,Unset,Unset,Indy Aries 19.26,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"14/Jan/20 11:05 PM;Artemkaaas;Done in PR: [https://github.com/hyperledger/indy-sdk/pull/2034];;;","17/Jan/20 10:40 PM;sergey.minaev;Available in master build 1432;;;",,,,,,,,,,
Migrate LibIndy functions to Aries Utility Library,IS-1466,43975,,Epic,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,15/Jan/20 12:20 AM,03/Feb/20 11:23 PM,28/Oct/23 2:49 AM,,,,,,,,,,,aries,,,,,0,,,,"LibIndy functions need to be available to Aries Shared Libraries as C-Callable APIs. Some functions don't have a clear mapping to a current Aries Shared Library (KMS, VDRI). These should live in aries-shared-util.

Examples:
* pack / unpack
* DID Doc parsing

*Acceptance Criteria*
* C-Callable APIs exist in an Aries Utility library that meets the same use cases as are currently met by LibIndy
* The API design can be improved during this migration. Client applications will need to adjust their API when they migrate from LibIndy.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-13,,Indy to Aries Util,To Do,No,,Unset,No,,,"1|i017nn:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),DucaDellaForcoletta,esplinr,,,,,,,,,,,,,,,,,,,,
LibIndy Pack/Unpack moves to Aries,IS-1467,43976,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,15/Jan/20 12:21 AM,03/Feb/20 11:24 PM,28/Oct/23 2:49 AM,,,,,,,,,,,aries,,,,,0,,,,"*Acceptance Criteria*
* A c-callable library exists for Aries utility functions: aries-shared-util
* It contains the current functions for pack  and unpack
* -FFI API-
* -Should be accepted as hl repo-",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1466,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzio",,,,Unset,Unset,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Release Indy SDK 1.14.2,IS-1468,43979,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,KitHat,esplinr,15/Jan/20 12:32 AM,11/Feb/20 11:45 PM,28/Oct/23 2:49 AM,03/Feb/20 8:13 PM,,,,,,,,1.14.2,,,,,,,0,,,,"*Release Goal*
Release everything that is ready. 

*Acceptance Criteria*
Regular instructions:
* Code is tested
* Review upstream releases to decide what should be included in this build
** Ursa
* Build is produced with automated CI / CD
** Official build is tagged as released in Git
** Official builds should be the only builds that are not marked in GitHub as ""pre-release""
* Prepare basic documentation on new features
* Prepare the Release Notes
** Link to the documentation on new features
** Stored as a CHANGELOG.md in the root of the repo
** Latest release at the top, above the release notes for all previous versions
* The release should be on GitHub “Releases” tab.
** Release notes should be in the “Description"" field of the GitHub release artifact
* The release is marked in JIRA
* Add the correct fixVersion to included issues
* Enable others to use the release:
** Email stakeholders with links to the artifacts and release notes",,,,,,,,,,,,,,,,,,,,,IS-1495,,IS-1462,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwrhj:910sx0900009eoaiifohzzi",,,,,,Indy Aries 20.01,,,,,,3.0,,,,,,,,,,,,Artemkaaas,esplinr,KitHat,sergey.minaev,VladimirWork,,,,,,"28/Jan/20 2:46 PM;Artemkaaas;Release preparation was done in PR: https://github.com/hyperledger/indy-sdk/pull/2059;;;",,,,,,,,,,,
Slow performance of anoncred-generated WQL for proof request,IS-1470,44008,,Improvement,In Progress,IS,Indy SDK,software,resplin,,,High,Done,ianco,ianco,ianco,17/Jan/20 7:41 AM,22/Jan/20 8:39 PM,28/Oct/23 2:49 AM,17/Jan/20 7:43 AM,,,,,,,,,,libindy,,,,,0,,,,"The WQL generated by anoncreds for a proof request generates a very poorly performing SQL on a wallet with a large number of credentials (> 100k creds), and the query slows linearly with the number of credentials, so as the wallet grows, the query slows.  With the BC Gov VON database (> 2 million credentials) this makes the proof request unusable.

The generated WQL checks for attribute existence first, and then filters on equality operators.  Reversing the order of these subqueries (equality first, then attribute existence) solves the performance issue.  

The ""attribute existence"" check results in a large number of records (basically every credential of the requested type) which is then filtered using the equality operators (filters on values of specific attributes).  When reversing the order the query does the equality check first (value of specific attributes) which results in a much smaller number of records (ideally 1) which is then filtered by the ""attribute existence"".

Options to improve query performance:

Database indexes - I was able to gain marginal improvements by tuning the database indexes, but the ""root cause"" is the number of records selected in the initial part of the query, so this still suffered slow performance with large numbers of credentials.

WQL-to-SQL translation - this is done within the storage plug-in, and is a straightforward conversion.  The WQL structure determines the SQL structure exactly.  Since the storage plug-in only deals with low-level queries, the plug-in does not have any information about the nature of the query in order to do any optimization.  I have added sample WQL and SQL in comments (before and after optimizing).

Database structure - the database structure is restricted base on the requirements of indy-sdk: item content is encrypted, as are tag values.  The plug-in deals only with encrypted values and does not have information on the nature of the query.  There are only 2 tables involved in this query - item and tag_encrypted - so I don't think there's any optimization possible in the plug-in based on the information that's available.

",,,"To fix, change the order the WQL sub-sueries are appended to the internal Vec() structure in the anoncreds extend_proof_request_restrictions() method
;17/Jan/20 7:43 AM;ianco;28800",28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,"22/Jan/20 8:39 PM;Artemkaaas;restrictions-testing-results.txt;https://jira.hyperledger.org/secure/attachment/18058/restrictions-testing-results.txt",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:ztzxg",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ianco,sergey.minaev,,,,,,,,"17/Jan/20 7:43 AM;ianco;To fix, change the order the WQL sub-sueries are appended to the internal Vec() structure in the anoncreds extend_proof_request_restrictions() method
;;;","18/Jan/20 4:05 AM;ianco;Existing WQL and query: 70-80 msec

Sample for an OrgBook proof request:

wql_to_sql() => 
{code}
WQL: And([Eq(EncryptedTagName([171, 119, 38, 199, 192, 233, 195, 39, 187, 111, 236, 134, 246, 11, 189, 89, 199, 11, 80, 0, 148, 18, 14, 76, 25, 244, 24, 233, 0, 221, 105, 98, 93, 96, 104, 199, 44, 170, 15, 124, 58, 95, 240, 82, 177, 118, 27, 219, 90, 82, 110, 196, 162, 106, 51, 41, 188, 100, 180, 131, 17, 133, 28, 30, 34, 89, 219, 82, 220, 110, 207, 6]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([180, 97, 53, 224, 109, 166, 135, 240, 202, 6, 177, 57, 162, 149, 173, 30, 253, 20, 220, 113, 66, 145, 105, 167, 20, 127, 150, 65, 31, 208, 209, 80, 126, 136, 124, 102, 10, 176, 29, 145, 131, 220, 86, 218, 192, 91, 175, 88, 71, 178, 203, 196, 198, 157, 225, 226, 4, 218, 227]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([230, 16, 157, 170, 134, 168, 35, 223, 159, 251, 1, 32, 33, 202, 82, 101, 197, 69, 37, 250, 205, 78, 184, 119, 206, 247, 101, 214, 147, 225, 126, 2, 250, 37, 161, 124, 97, 65, 108, 62, 238, 229, 13, 216, 152, 62, 108, 157, 162, 160, 251, 204, 98, 170, 95]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([39, 0, 198, 57, 155, 90, 129, 45, 18, 88, 218, 238, 40, 102, 83, 190, 187, 53, 71, 17, 97, 238, 77, 36, 170, 90, 136, 106, 162, 207, 25, 5, 202, 19, 36, 188, 176, 192, 124, 175, 222, 150, 46, 34, 153, 124, 20, 153, 223, 25, 159, 114, 253, 20, 55, 2, 242, 55, 196]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([46, 241, 187, 55, 159, 194, 211, 226, 174, 88, 139, 64, 126, 16, 65, 81, 80, 175, 239, 94, 174, 118, 148, 137, 244, 203, 91, 13, 210, 162, 147, 124, 72, 77, 80, 169, 222, 112, 55, 254, 44, 166, 23, 207, 208, 3, 238, 179, 45, 164, 62, 171, 213]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([227, 43, 123, 136, 94, 191, 231, 123, 227, 151, 60, 128, 209, 81, 143, 105, 146, 179, 212, 230, 97, 232, 33, 41, 119, 79, 34, 84, 216, 226, 187, 166, 216, 215, 79, 70, 67, 102, 52, 90, 68, 45, 95, 102, 59, 155, 161, 9, 21, 167, 77, 105, 194, 145, 102, 78, 189, 131, 86, 227, 141]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([50, 30, 138, 4, 251, 169, 194, 163, 2, 51, 97, 130, 235, 6, 123, 242, 184, 84, 177, 198, 223, 43, 121, 31, 36, 211, 127, 253, 165, 100, 173, 163, 201, 196, 222, 193, 31, 115, 240, 37, 221, 210, 159, 231, 77, 57, 206, 107, 218, 180, 255, 116, 60, 54, 149, 152, 9, 113, 197, 148, 238, 29, 84, 178, 240, 45, 92, 78, 90]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([150, 165, 99, 176, 6, 184, 59, 151, 65, 25, 224, 86, 229, 40, 189, 206, 59, 91, 205, 211, 110, 46, 98, 160, 230, 9, 208, 141, 132, 83, 236, 37, 56, 217, 162, 212, 224, 149, 99, 169, 231, 89, 17, 186, 6, 182, 82, 97, 17, 65, 128, 249, 36, 201, 150, 17, 165, 75, 205, 166, 71, 81, 4, 166, 163]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([49, 170, 247, 88, 135, 35, 71, 65, 188, 19, 125, 109, 236, 250, 145, 51, 177, 241, 160, 168, 102, 80, 235, 160, 42, 184, 213, 17, 89, 205, 71, 47, 157, 213, 240, 153, 151, 105, 40, 126, 80, 56, 100, 85, 222, 166, 92, 52, 89, 137, 159, 244, 205, 136, 200, 40, 169, 58, 184, 66, 199, 184, 225]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([65, 73, 175, 64, 124, 2, 120, 42, 234, 131, 220, 201, 32, 245, 124, 190, 126, 3, 254, 165, 144, 155, 152, 28, 118, 2, 166, 57, 51, 113, 206, 19, 143, 143, 238, 61, 53, 94, 195, 179, 61, 56, 220, 251, 119, 47, 138, 45, 33, 116, 38, 2, 199, 183, 107, 159, 122, 52, 231, 181, 112, 8, 133, 142, 247, 175, 101, 109, 52, 125, 125, 82, 112, 137, 133]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([237, 106, 205, 251, 20, 52, 138, 32, 165, 131, 43, 16, 251, 92, 196, 37, 106, 29, 4, 235, 209, 133, 186, 249, 222, 191, 100, 242, 206, 66, 49, 109, 253, 158, 91, 236, 97, 65, 168, 12, 94, 79, 225, 249, 127, 29, 98, 92, 15, 51, 94, 238, 68, 248, 155, 118, 72, 115, 155, 30, 186, 223, 29, 67, 27, 46, 131, 161, 132, 205, 161]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([158, 91, 124, 205, 133, 162, 116, 183, 157, 29, 26, 16, 69, 212, 13, 123, 252, 192, 158, 198, 15, 248, 59, 55, 39, 152, 230, 222, 193, 199, 150, 65, 76, 78, 167, 108, 34, 212, 255, 229, 244, 253, 96, 188, 239, 200, 95, 41, 27, 133, 255, 159, 88]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([246, 190, 246, 202, 223, 19, 146, 3, 42, 207, 100, 179, 156, 182, 169, 169, 82, 166, 170, 47, 220, 73, 58, 243, 136, 135, 77, 158, 77, 231, 142, 3, 123, 102, 29, 106, 0, 69, 204, 9, 254, 163, 33, 148, 65, 243, 106, 159, 101, 67, 200, 157, 33]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([104, 149, 182, 30, 196, 38, 247, 82, 21, 73, 6, 170, 38, 140, 69, 13, 152, 146, 126, 212, 251, 41, 42, 224, 190, 253, 213, 73, 131, 229, 72, 216, 161, 216, 249, 99, 207, 178, 183, 30, 250, 66, 81, 238, 29, 225, 63, 21, 126, 91, 110, 35, 8, 186, 29, 172, 171, 57, 183, 15, 242, 48, 220, 179, 208, 198]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([243, 203, 231, 101, 198, 34, 193, 207, 177, 157, 251, 211, 40, 180, 43, 228, 244, 231, 52, 20, 235, 191, 165, 173, 140, 225, 214, 26, 179, 151, 153, 56, 59, 94, 9, 102, 228, 61, 210, 254, 228, 124, 133, 221, 191, 165, 133, 209, 81, 225, 36, 54, 112, 118, 161, 200, 114]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([61, 23, 211, 240, 205, 43, 245, 140, 210, 236, 110, 162, 207, 208, 9, 116, 133, 3, 210, 58, 162, 9, 20, 157, 238, 253, 18, 60, 167, 84, 72, 217, 226, 27, 187, 28, 239, 61, 205, 198, 232, 215, 128, 143, 60, 66, 79, 4, 148, 168, 142, 120, 175, 165, 105, 254, 188, 146, 67, 195]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([115, 219, 92, 204, 169, 66, 183, 88, 49, 212, 106, 179, 156, 193, 91, 100, 209, 207, 215, 235, 173, 182, 108, 35, 175, 225, 8, 247, 67, 170, 45, 24, 195, 120, 15, 10, 4, 68, 147, 49, 120, 48, 92, 113, 182, 68, 2, 89, 48, 251, 190, 101, 80, 201, 151, 117, 177, 137, 78, 66, 254, 31, 79, 77, 154]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([142, 64, 253, 173, 29, 4, 232, 70, 158, 62, 215, 228, 67, 93, 21, 107, 43, 174, 223, 43, 204, 90, 138, 217, 63, 4, 223, 31, 212, 252, 252, 28, 112, 56, 143, 137, 227, 252, 25, 95, 91, 153, 253, 41, 62, 63, 161, 111, 32, 64, 174, 151, 19, 247, 112, 9]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
          Eq(EncryptedTagName([245, 226, 195, 83, 181, 69, 145, 22, 67, 59, 48, 222, 42, 101, 71, 14, 236, 146, 70, 248, 90, 200, 201, 68, 153, 221, 207, 228, 118, 64, 163, 20, 96, 40, 0, 87, 85, 206, 173, 181, 194, 240, 247, 96, 202, 37, 23, 50, 117, 170, 3, 88, 177, 147, 189, 20, 53, 129, 96]), Encrypted([253, 42, 9, 220, 99, 14, 252, 67, 186, 231, 231, 73, 148, 185, 2, 152, 177, 110, 85, 225, 39, 73, 210, 200, 16, 4, 154, 189, 150])), 
     Or([And([Eq(EncryptedTagName([87, 198, 124, 63, 62, 106, 105, 238, 167, 147, 72, 87, 107, 208, 134, 100, 75, 226, 210, 119, 135, 196, 2, 10, 209, 68, 187, 18, 20, 51, 156, 221, 121, 181, 53, 227, 114, 3, 16, 234, 239, 220, 78, 122, 223, 29, 79, 41, 133, 223, 68, 231, 114, 99, 55]), Encrypted([227, 166, 86, 195, 245, 54, 126, 120, 105, 98, 104, 117, 58, 80, 210, 154, 105, 92, 111, 253, 135, 19, 49, 224, 31, 135, 152, 101, 204, 188, 173, 169, 66, 115, 142, 13, 204, 65, 242, 114, 249, 174, 186, 235, 149, 89, 127, 198, 249, 48, 107, 59, 248])), 
              Eq(EncryptedTagName([239, 190, 224, 130, 210, 169, 148, 12, 50, 224, 246, 65, 138, 255, 139, 228, 215, 160, 97, 161, 15, 196, 190, 216, 177, 46, 96, 109, 65, 30, 194, 83, 3, 191, 253, 24, 108, 197, 108, 110, 133, 107, 194, 102, 177, 145, 39, 89, 10, 58, 234, 51, 224, 67, 37, 142]), Encrypted([129, 46, 177, 30, 126, 22, 97, 193, 171, 169, 170, 235, 106, 176, 167, 159, 36, 44, 53, 176, 228, 36, 224, 178, 85, 20, 40, 224, 227, 223, 57, 80, 78, 52, 17, 96, 217]))])])]); 
{code}
{code}
SQL: ""SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 
         AND ((i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $4 AND value = $5)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $6 AND value = $7)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $8 AND value = $9)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $10 AND value = $11)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $12 AND value = $13)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $14 AND value = $15)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $16 AND value = $17)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $18 AND value = $19)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $20 AND value = $21)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $22 AND value = $23)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $24 AND value = $25)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $26 AND value = $27)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $28 AND value = $29)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $30 AND value = $31)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $32 AND value = $33)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $34 AND value = $35)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $36 AND value = $37)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $38 AND value = $39)) 
         AND (((i.id in (SELECT item_id FROM tags_encrypted WHERE name = $40 AND value = $41)) 
            AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $42 AND value = $43)))))""
{code}
;;;","18/Jan/20 4:08 AM;ianco;Updated WQL and query: 0.35 msec

 wql_to_sql() => 
{code}
 WQL: And([Or([And([Eq(EncryptedTagName([34, 229, 80, 83, 13, 55, 33, 199, 126, 223, 244, 165, 89, 20, 255, 124, 255, 64, 236, 105, 157, 226, 242, 144, 18, 182, 75, 5, 65, 129, 217, 213, 116, 237, 195, 6, 164, 145, 197, 105, 183, 46, 171, 51, 192, 128, 81, 200, 118, 99, 206, 32, 14, 88, 196]), Encrypted([210, 46, 47, 88, 97, 150, 244, 175, 61, 45, 164, 69, 75, 47, 75, 100, 151, 114, 91, 117, 188, 17, 22, 151, 9, 202, 58, 193, 128, 225, 213, 63, 49, 213, 26, 51, 164, 123, 141, 233, 145, 173, 254, 144, 124, 241, 127, 232, 238, 77, 121, 26, 191])), 
                    Eq(EncryptedTagName([32, 224, 208, 253, 97, 70, 224, 143, 16, 144, 178, 204, 40, 77, 46, 8, 183, 124, 179, 161, 199, 230, 240, 79, 176, 164, 19, 116, 173, 21, 195, 40, 187, 234, 211, 92, 45, 58, 157, 12, 128, 251, 58, 219, 187, 169, 83, 33, 209, 180, 159, 33, 193, 0, 211, 244]), Encrypted([103, 145, 139, 249, 171, 126, 33, 29, 11, 94, 81, 47, 122, 69, 74, 55, 112, 249, 41, 202, 23, 21, 116, 200, 55, 117, 86, 14, 39, 91, 109, 47, 142, 214, 153, 8, 195]))])]), 
         Eq(EncryptedTagName([220, 232, 201, 69, 47, 36, 75, 225, 80, 31, 21, 10, 90, 96, 196, 116, 133, 108, 240, 1, 73, 98, 27, 12, 230, 138, 116, 224, 242, 74, 128, 81, 117, 251, 65, 10, 55, 91, 8, 142, 187, 255, 179, 135, 101, 188, 180, 53, 198, 232, 249, 240, 14]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([241, 128, 133, 3, 17, 0, 219, 15, 96, 45, 12, 162, 205, 241, 73, 85, 119, 228, 17, 121, 186, 100, 65, 162, 221, 30, 68, 107, 61, 209, 204, 196, 108, 159, 74, 118, 84, 17, 109, 27, 113, 14, 121, 31, 236, 203, 235, 86, 64, 218, 128, 46, 188, 193, 158, 117, 119, 154, 168, 189, 189, 133, 11, 207, 234, 128, 21, 55, 126, 205, 213]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([90, 148, 229, 179, 200, 145, 182, 161, 62, 126, 107, 236, 104, 107, 75, 99, 104, 252, 100, 204, 2, 141, 210, 206, 152, 224, 165, 215, 26, 25, 234, 116, 32, 182, 80, 241, 43, 0, 202, 137, 219, 132, 126, 21, 141, 60, 227, 166, 122, 226, 119, 87, 139, 68, 156, 127, 208, 95, 129]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([15, 228, 184, 12, 203, 61, 153, 186, 229, 99, 192, 57, 147, 112, 230, 100, 170, 223, 156, 64, 230, 115, 224, 90, 72, 219, 250, 188, 199, 115, 159, 202, 13, 97, 41, 255, 166, 71, 186, 101, 53, 240, 98, 7, 161, 208, 236, 139, 127, 214, 225, 18, 185, 134, 62, 234, 13, 242, 105, 225]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([47, 200, 133, 69, 37, 91, 106, 181, 153, 200, 45, 183, 32, 136, 204, 159, 18, 43, 89, 38, 30, 156, 52, 34, 239, 225, 184, 42, 98, 136, 228, 229, 68, 80, 205, 12, 124, 81, 84, 70, 79, 44, 36, 82, 66, 3, 47, 187, 216, 200, 16, 19, 28]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([86, 60, 49, 4, 86, 197, 32, 167, 5, 162, 124, 55, 44, 168, 1, 176, 186, 250, 205, 181, 124, 183, 106, 96, 136, 74, 8, 168, 160, 195, 29, 75, 126, 123, 170, 24, 171, 204, 120, 110, 87, 159, 193, 58, 156, 75, 235, 106, 101, 71, 173, 110, 178, 110, 141]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([240, 164, 135, 122, 93, 87, 236, 28, 119, 155, 191, 96, 195, 5, 19, 199, 149, 167, 150, 214, 150, 1, 179, 70, 191, 147, 47, 214, 189, 32, 114, 192, 168, 134, 165, 72, 214, 253, 162, 184, 23, 43, 173, 139, 216, 221, 123, 9, 212, 145, 151, 235, 184, 198, 238, 137]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([5, 174, 243, 83, 224, 163, 130, 87, 53, 39, 253, 215, 31, 47, 91, 154, 111, 189, 245, 88, 175, 165, 163, 70, 177, 234, 21, 41, 199, 53, 89, 191, 47, 61, 254, 222, 240, 154, 76, 193, 233, 76, 76, 239, 66, 37, 33, 161, 207, 77, 249, 4, 154, 147, 9, 45, 213, 226, 175]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([165, 25, 68, 6, 183, 183, 185, 165, 183, 33, 3, 107, 164, 169, 96, 140, 99, 24, 161, 37, 146, 246, 108, 218, 130, 177, 141, 170, 129, 128, 231, 0, 222, 43, 21, 215, 69, 81, 53, 98, 148, 87, 104, 193, 147, 169, 237, 174, 169, 63, 43, 155, 15, 94, 180, 249, 66, 53, 45, 252, 209, 44, 144, 41, 66, 172]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([190, 245, 198, 216, 157, 19, 87, 5, 26, 78, 8, 110, 39, 237, 9, 111, 61, 25, 125, 24, 215, 239, 115, 115, 25, 232, 109, 189, 119, 188, 230, 87, 108, 17, 105, 207, 200, 138, 87, 162, 21, 224, 90, 252, 196, 108, 126, 167, 140, 24, 136, 139, 116]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([129, 54, 236, 19, 184, 179, 32, 26, 59, 34, 183, 180, 52, 19, 175, 221, 151, 148, 11, 121, 202, 174, 99, 46, 99, 4, 13, 25, 143, 214, 65, 18, 251, 0, 87, 31, 168, 50, 151, 101, 86, 90, 94, 16, 28, 238, 245, 121, 212, 212, 248, 191, 112, 2, 23, 190, 48, 159, 195, 192, 74, 129, 163, 86, 11]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([150, 228, 250, 252, 243, 161, 142, 140, 196, 251, 107, 31, 254, 0, 119, 104, 230, 195, 171, 60, 211, 63, 96, 102, 248, 58, 95, 186, 95, 108, 55, 72, 105, 18, 118, 200, 169, 5, 252, 245, 176, 218, 182, 120, 156, 245, 179, 152, 251, 164, 52, 178, 35, 9, 42, 240, 79, 167, 184]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([43, 210, 111, 122, 23, 163, 114, 243, 110, 54, 180, 54, 104, 121, 65, 11, 248, 18, 168, 230, 162, 73, 78, 240, 0, 53, 254, 218, 20, 37, 165, 57, 185, 21, 241, 67, 255, 27, 204, 144, 176, 69, 186, 10, 36, 201, 42, 123, 146, 106, 62, 175, 50, 62, 130, 82, 108, 21, 114, 149, 153, 197, 5, 117, 121, 0, 25, 84, 211, 234, 235, 89, 251, 76, 68]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([58, 141, 171, 239, 17, 245, 55, 9, 159, 167, 250, 16, 183, 118, 25, 235, 119, 77, 64, 115, 35, 49, 255, 199, 217, 253, 252, 4, 19, 135, 33, 134, 140, 158, 8, 153, 21, 21, 238, 207, 29, 121, 238, 182, 174, 250, 154, 126, 11, 195, 187, 203, 23, 191, 27, 126, 83]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([225, 234, 217, 45, 219, 5, 19, 111, 102, 211, 41, 53, 131, 184, 184, 39, 51, 67, 28, 127, 58, 200, 10, 31, 45, 136, 249, 156, 106, 253, 156, 255, 200, 85, 71, 209, 167, 200, 74, 45, 217, 172, 58, 90, 35, 59, 127, 245, 28, 236, 82, 150, 238, 253, 54, 113, 151, 247, 108, 247, 205, 66, 193, 133, 73, 219, 162, 137, 188, 130, 120, 86]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([122, 248, 126, 180, 251, 251, 34, 209, 139, 176, 18, 100, 93, 93, 14, 152, 189, 61, 246, 42, 175, 149, 138, 30, 150, 38, 190, 65, 200, 194, 98, 216, 186, 41, 206, 248, 37, 245, 146, 248, 17, 153, 247, 33, 177, 18, 178, 235, 243, 25, 7, 139, 124, 5, 147, 152, 29, 182, 69, 44, 211, 11, 150]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([246, 239, 253, 233, 140, 228, 207, 10, 143, 2, 235, 5, 109, 237, 209, 225, 123, 85, 238, 30, 229, 165, 86, 140, 146, 249, 175, 86, 252, 242, 104, 28, 67, 52, 53, 22, 201, 19, 237, 134, 39, 246, 94, 59, 162, 179, 9, 29, 106, 80, 150, 22, 38, 55, 52, 229, 255, 176, 40, 61, 123, 49, 50, 37, 158]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([164, 211, 233, 162, 196, 80, 196, 155, 178, 54, 7, 243, 164, 107, 211, 188, 10, 250, 222, 116, 205, 67, 161, 49, 196, 5, 161, 123, 5, 195, 105, 80, 155, 69, 139, 167, 241, 0, 29, 209, 9, 186, 67, 126, 131, 2, 122, 6, 164, 183, 246, 142, 238, 183, 119, 70, 209, 113, 106, 109, 120]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254])), 
         Eq(EncryptedTagName([218, 36, 86, 42, 163, 137, 71, 50, 170, 217, 16, 133, 194, 154, 171, 24, 72, 12, 120, 8, 135, 19, 195, 94, 207, 132, 246, 119, 30, 147, 126, 44, 103, 146, 223, 16, 11, 115, 70, 201, 5, 41, 159, 5, 114, 123, 194, 42, 208, 245, 189, 184, 183, 210, 43, 114, 63, 97, 117, 148, 46, 239, 216, 192, 126, 252, 61, 149, 65]), Encrypted([95, 72, 106, 30, 239, 146, 213, 111, 106, 29, 101, 129, 189, 94, 57, 193, 243, 111, 37, 36, 98, 5, 236, 120, 180, 197, 96, 56, 254]))]); 
{code}
{code}
 SQL: ""SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 
         AND ((((i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) 
             AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $4 AND value = $5)))) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $6 AND value = $7)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $8 AND value = $9)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $10 AND value = $11)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $12 AND value = $13)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $14 AND value = $15)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $16 AND value = $17)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $18 AND value = $19)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $20 AND value = $21)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $22 AND value = $23)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $24 AND value = $25)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $26 AND value = $27)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $28 AND value = $29)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $30 AND value = $31)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $32 AND value = $33)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $34 AND value = $35)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $36 AND value = $37)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $38 AND value = $39)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $40 AND value = $41)) 
         AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $42 AND value = $43)))""
{code}
;;;","20/Jan/20 7:44 PM;sergey.minaev;[~ianco] thanks for details. Seems like a translator is very similar to default one. I have one more question: Have you considered an option to replace subqueries and ""in"" by JOINs? I've asked Artem to do some testing around that, but may be you already have some results;;;","21/Jan/20 2:26 AM;ianco;Hi [~sergey.minaev] thanks for the suggestion re using JOINs.  I haven't tested this yet but I will.  I was worried about making significant changes to the parser since it is used generally for all queries to the wallet.

Yes I used the default WQL parser as the initial code for the postgres plug-in.;;;","21/Jan/20 12:19 PM;ianco;I took a quick look at the query using JOINs.  It has the same issue as the existing IN with subqueries, in that it needs to JOIN first on the subquery with the smallest set of records, and the only way to pass this ""hint"" into the SQL parser is to order the WQL with the most restrictive subquery first.  Unfortunately with the design of the storage plug-in, the only ""hints"" we can pass in are with how we order the WQL that we pass in.
;;;","22/Jan/20 7:25 PM;Artemkaaas;Hi, [~ianco]
Thank you for work.
I also did some testing regarding the issue you reported. I'd like to share the results I got.
I used this [script|[https://github.com/hyperledger/indy-sdk/blob/master/experimental/plugins/postgres_storage/start_postgres.sh]] to run Postgres in docker (without any additional configuration).
I used python wrapper to issue 300_000 credentials which all relate to the same Schema and CredentialDefinition but the requested value is unique.
Here are restrictions I used for the reqesuted attribute:
{code:java}
""attr::age::value"": ""1568"", 
""cred_def_id"": cred_def_id, 
""schema_id"": schema_id, 
""schema_name"": GVT_SCHEMA_NAME, 
""issuer_did"": ISSUER_DID 
{code}

I tried the following cases:
* Old `marker` Order + In operator for restrictions
* New `marker` Order + In operator for restrictions
* Old `marker` Order + JOIN operator for restrictions
* New `marker` Order + JOIN operator for restrictions

I didn't get any difference in changing restrictions order but I got 2 times speedup of using JOIN instead. 
I attached the file with detailed results.
Maybe I missed something but it likely matters the actual DB configuration/structure/data types/amount of data...lots of factors.

It is really good that the order changing helped you. And I see the sensible explanation of why it helped.

One more note:  To do testing of Join I just prepared the required SQL and replaced it in the plugin. I didn't update wql_to_sql anyhow. But it seems real to do it.
 (maybe I miss something)

 ;;;",,,,,
Initialize LibVCX without accessing the ledger,IS-1471,44038,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,21/Jan/20 8:59 AM,17/Feb/20 11:38 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libvcx,,,,,0,EV-CS,,,"*Story*
As a developer using LibVCX to create an application for peer-to-peer use cases, I should be able to initialize LibVCX without it needing a network connection to the ledger so that my firewall does not need to allow ZMQ traffic.

*Proposed Approach*
* Create a new function ""libvcx_init_minimal"" that initializes the non-ledger objects
* Create a new function ""libvcx_init_ledger"" that initializes the ledger object
* Call those functions from libvcx_init
* They would then be available for people to call separately

*Notes*
* The function libvcx_init currently sets up everything needed for credential exchange use cases: wallet, ledger, etc. This was a design decision to simplify using LibVCX for the most common scenarios.
* Experimentation will be needed to determine exactly which initialization steps could be postponed.
* Removing ZMQ for client communications (IS-1326) would reduce the need for this effort.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1085,IS-1326,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1080,,,No,,Unset,No,,,"1|hzzyo4:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"21/Jan/20 9:01 AM;esplinr;LibVCX is intended to simplify credential exchange solutions. Peer-to-peer use cases are normally addressed by calling LibIndy directly, or using one of the new Aries libraries.

This work won't be a priority until we understand who would be using LibVCX once the Aries libraries have matured. But we would be happy to accept a pull request if someone wants to make this change to meet their needs.;;;",,,,,,,,,,,
Proof of non-Revocation returning false except when credential is the only non-revoked credential,IS-1472,44101,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,swcurran,swcurran,swcurran,23/Jan/20 2:31 AM,06/Feb/20 10:16 PM,28/Oct/23 2:49 AM,03/Feb/20 6:30 PM,,,,,,,,1.14.2,,libindy,,,,,0,,,,"Original issue from [~CHempel] of eSatus:
{quote}I'm facing some issues with proofing credentials issued on cred defs with revocation support.

When there's only one credential issued for the corresponding revoc reg everything is fine.

But if I issue another credential, every following proof is verified as false.

Thanks, Christopher
{quote}
[~sklump] has provided an example of the problem in a relatively small python program found [here|https://drive.google.com/file/d/1HY20iVK0Aah2U2dVHUqnN7nM0_jVMSCU/view].

We're getting close to the point where we need to use revocation in production so this is pretty high priority for us and other members of the community.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1475,,,"04/Feb/20 11:14 PM;CHempel;code.txt;https://jira.hyperledger.org/secure/attachment/18124/code.txt","05/Feb/20 11:31 PM;CHempel;updated_code.txt;https://jira.hyperledger.org/secure/attachment/18126/updated_code.txt",,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q2:zzy",,,,Unset,Unset,Indy Aries 20.01,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,CHempel,sergey.minaev,sklump,swcurran,,,,,,"28/Jan/20 10:43 PM;Artemkaaas;[~swcurran] [~sklump] 

Thank you for the report and the provided test. It's extremely useful.

I updated the test and created PR to indy.

There is a tricky moment related to the preparation of a `revocation state`. 
We definitely need to document it somewhere.


In your original test:

* proving before revocation: you get revocation delta from '0' to 'now' and create 'revocation_state' for this delta ---- that is correct.

* proving after revocation: you get revocation delta from 'revoke time' to 'now' and create revocation state for this delta ----- that is wrong.

There are two possible ways of proper preparation revocation state after revocation:
* get revocation delta from '0 ' to 'now' and create revocation state from scratch. (as you did for the first proving)

* save 'revocation_state' and 'timestamp' prepared for first proving (before the revocation loop) -> get revocation delta from this 'timestamp' to 'now' ---> use update_revocation_state function. (so you update previously create revocation state by applying a new delta generated since that time). It's faster than the second option.;;;","29/Jan/20 2:54 PM;Artemkaaas;PR: [https://github.com/hyperledger/indy-sdk/pull/2060];;;","30/Jan/20 10:00 PM;sergey.minaev;Improved documentation is in master 1.14.1 1467;;;","31/Jan/20 11:59 PM;sklump;I was timing the two approaches, plus a third (
    1: update state since last timestamp,
    2: create state from timestamp=0
    3: merge deltas since last timestamp, then create state
).

Imagine my surprise when consistently, the 2nd approach (create state from timestamp=0) came out consistently fastest (the idea is to time the actions after parsing the revocation registry delta response - so it's not too surprising that #3 comes in slowest, since it repeats two calls: merge deltas, then create state).

This is certainly no longer urgent, but when someone has the time and inclination, feel free to look over the sample at
https://drive.google.com/open?id=1g_EhrTtB0NAvAM8F5dsMovPl30Ctmlgs
for wonder and speculation.
;;;","03/Feb/20 6:30 PM;sergey.minaev;Thanks for details [~swcurran]. I've created IS-1475 to track unexpected  performance issue;;;","04/Feb/20 11:17 PM;CHempel;I'm not sure if this really solves the problem.
In my tests, I used the entire time span.

[^code.txt];;;","05/Feb/20 3:12 PM;Artemkaaas;[~CHempel] 

`CreateRevocationStateAsync` must be called on the whole revocationRegistryDelta.

In your test,  you use `revocationRegistryDelta` which is the result of `IssuerCreateCredentialAsync` to Prover createRevocationState.
The first time you create proof after first issuing it's acceptable. 
But the second – it's wrong because the first delta isn't applied.

You need to get the whole delta every time before calling `createRevocationState`. 
like you do: `delta = await _ledgerService.LookupRevocationRegistryDeltaAsync(await agentContext.Pool, revRegId, -1, timestamp);`

Additional note: for Verifier: you can use `getRevocationRegistry` request instead of `getRevocationDelta`.;;;","05/Feb/20 11:32 PM;CHempel;[~Artemkaaas]

Thank you very much for your reply.

I have updated my code, but have encountered some other problems.

The proofs happen to be either true or false.

I tested it in a loop, and if it is false once, it stays false, and vice versa.

It would be great if someone could help me solve the problem.

[^updated_code.txt]

 ;;;","06/Feb/20 2:46 PM;Artemkaaas;[~CHempel]  

You have two credentials matching ProofRequest.
When you get `credentialsForAttribute1` — you don't check which one you received (first or second)
Next on `createRevocationState` you always use `credRevId` which corresponds to the second credential.
So if `credentialsForAttribute1` is the second credential — valid proof will be generated else wrong.

`ProverFetchCredentialsForProofRequestAsync` returns credential info that looks like:

 
{code:java}
{
    ""referent"": string, 
    ""attrs"": {""key1"":""raw_value1"", ""key2"":""raw_value2""},
    ""schema_id"": string, 
    ""cred_def_id"": string, 
    ""rev_reg_id"": Optional<string>, 
    ""cred_rev_id"": Optional<string> 
}
{code}
You should take `cred_rev_id` here to create the correct revocation state.;;;","06/Feb/20 10:16 PM;sklump;Thanks a million, Artem, good catch.;;;",,
CLI should return the TAA digest,IS-1473,44163,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,esplinr,esplinr,esplinr,29/Jan/20 8:28 AM,03/Feb/20 6:31 PM,28/Oct/23 2:49 AM,03/Feb/20 6:31 PM,,,,,,,,,,cli,,,,,0,,,,"*Story*
As a administrator of an application designed for an Indy Network that enforces a Transaction Author Agreement, I want to use the Indy CLI to view the hash of the TAA on the ledger so that I can put it in the configuration of my application to demonstrate TAA acceptance by my organization.",,,,,,,,,,,,,,,,,,,,,,,,,,INDY-2297,,,,,,,"29/Jan/20 6:24 PM;Artemkaaas;image-2020-01-29-12-24-35-598.png;https://jira.hyperledger.org/secure/attachment/18116/image-2020-01-29-12-24-35-598.png",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016q2:zzz",,,,Unset,Unset,Indy Aries 20.01,,,,,(Please add steps to reproduce),0.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,,,,,,,,,"29/Jan/20 6:27 PM;Artemkaaas;Indy-CLI of version 1.14.1 and later already shows `digest` on `pool connect` and `pool show-taa` commands as `text` and `version`.;;;","30/Jan/20 11:11 PM;esplinr;To show the Digest, you have to be connected to a pool running Indy Node 1.12.1 or newer.;;;",,,,,,,,,,
VCX APIs - missed implementtion,IS-1474,44165,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,Artemkaaas,Artemkaaas,29/Jan/20 6:51 PM,03/Feb/20 11:52 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Libvcx C-api contains a lot of functions with missed implementation. We need to decide either we want to implement them or to remove.
 Here is the list:
 * `vcx_issuer_terminate_credential`
 * `vcx_issuer_accept_credential`
 * `vcx_issuer_get_credential_request`
 * `vcx_proof_accepted`
 * `vcx_wallet_validate_payment_address`
 * `vcx_wallet_close_search`
 * `vcx_wallet_search_next_records`
 * `vcx_wallet_open_search`
 * `vcx_wallet_delete_record_tags`
 * `vcx_wallet_add_record_tags`
 * `vcx_wallet_update_record_tags`",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzziii",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,,,,,,,,,,,,,,,,,,,,,
Update existing revocation state is sometimes slower rather creating new one,IS-1475,44215,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,sklump,swcurran,sergey.minaev,03/Feb/20 6:29 PM,14/Feb/20 3:59 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Stephen Klump added a comment - 31/Jan/20 7:59 AM - edited
I was timing the two approaches, plus a third (
1: update state since last timestamp,
2: create state from timestamp=0
3: merge deltas since last timestamp, then create state
).

Imagine my surprise when consistently, the 2nd approach (create state from timestamp=0) came out consistently fastest (the idea is to time the actions after parsing the revocation registry delta response - so it's not too surprising that #3 comes in slowest, since it repeats two calls: merge deltas, then create state).

This is certainly no longer urgent, but when someone has the time and inclination, feel free to look over the sample at
https://drive.google.com/open?id=1g_EhrTtB0NAvAM8F5dsMovPl30Ctmlgs
for wonder and speculation.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1472,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002yt:ztzxhi",,,,Unset,Unset,CommunityContribution,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,sklump,,,,,,,,"03/Feb/20 8:36 PM;Artemkaaas;I think It isn't correct to compare create/update state function only on 4 credentials. 
I think you get update operation slower just because of additional deserialization of `revocation_state` json.

The state updation should be faster in the scenario like:
 - Issuer issued Alex credentials.
 - Issuer issued 50_000 credentials
 - Alex created revocation_state
 - Issuer issued 500 credentials

- updating of the previous revocation_state should be faster than creating it from scratch;;;","14/Feb/20 3:59 AM;sklump;[~Artemkaaas] You are correct. On more credentials, the update method of #1 emerges as clearly fastest.

On 500 credentials, revoking 5, I got: (5.06, 61.44, 64.6) seconds per 1000 iterations.
On 5000 credentials, revoking 50, I got: (7.65, 582.83, 576.27) seconds per 1000 iterations.

Note that the issue time per credential increases more or less linearly with the size of the tails file, which depends linearly on its maximum number of credentials. Running such a test with any larger becomes untenable, as the issue time increases with the square of the number of credentials (if they are all in one revocation registry). This could make credential issue onerous for installations with large tails files. The approach to take until revocation-2.0 emerges is to profile credential issue and see what the issuer can countenance as reasonable service turnaround time. For example, on a 100000-credential tails file, it was taking over 5 seconds to issue a credential. Issue time is about a 0.5 sec per credential with a 10000-credential tails file. A design tension remains: smaller tails files are less secure.;;;",,,,,,,,,,
Document design of first version Indy VDR,IS-1476,44216,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,03/Feb/20 6:51 PM,03/Feb/20 8:34 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"There is a proposal for Indy VDR by [~cywolf] https://github.com/andrewwhitehead/indy-vdr . The design documentation is required and should cover the API (including approach for FFI), threading and arch overview topics.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1396,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzj",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jrallen,sergey.minaev,,,,,,,,,,,,,,,,,,,,
FFI API for Indy VDR,IS-1477,44217,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,03/Feb/20 6:51 PM,03/Feb/20 8:18 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1396,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzir",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Cleanup warnings in libvcx/libindy shown by lgtm,IS-1478,44219,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,03/Feb/20 8:12 PM,14/Feb/20 6:40 PM,28/Oct/23 2:49 AM,14/Feb/20 6:40 PM,,,,,,,,,,,,,,,0,,,,"There are some findings at
https://lgtm.com/projects/g/hyperledger/indy-sdk?mode=list&severity=warning
https://lgtm.com/projects/g/hyperledger/indy-sdk?mode=list&severity=error

1. They should be fixed
2. We need to decided: may be it worth adding as a part of CI
3. Check similar for rust codebase",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i018nv:",,,,Unset,Unset,Indy Aries 20.02,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"10/Feb/20 10:08 PM;Artemkaaas;Fixed in PR: [https://github.com/hyperledger/indy-sdk/pull/2072];;;","11/Feb/20 8:16 PM;sergey.minaev;update for cargo https://github.com/hyperledger/indy-sdk/pull/2082;;;","14/Feb/20 6:40 PM;sergey.minaev;available in master, no more valuable warnings are detected;;;",,,,,,,,,
Apply PoC of async libindy internals to master codebase,IS-1479,44220,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,03/Feb/20 8:19 PM,21/May/20 12:58 AM,28/Oct/23 2:49 AM,16/Mar/20 10:05 PM,,,,,,,,,,,,,,,0,,,,"There was a PoC to use async/await in libindy itself
https://github.com/jovfer/indy-sdk/tree/feature/async_libindy_ce_on_nightly_rust

It should be improved to have appropriate quality and be merged to master",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1371,IS-1481,IS-1029,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i018ob:",,,,Unset,Unset,Indy Aries 20.02,Indy Aries 20.03,Indy Aries 20.04,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"16/Mar/20 10:05 PM;sergey.minaev;The update is used in the scope of VDR work so it will be tracked there. The basis is done, probably more stability testing is required as sometimes MacOS pipeline fails for IndyCLI;;;",,,,,,,,,,,
Refactor libVCX integration and unit tests,IS-1480,44221,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,03/Feb/20 8:56 PM,28/Feb/20 11:01 PM,28/Oct/23 2:49 AM,28/Feb/20 11:01 PM,,,,,,,,,,,,,,,0,,,,"LibVCX unit tests are sharing environments, which results in false negatives and reduces our confidence in the tests.

The wallet is the major example.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i018oj:",,,,Unset,Unset,Indy Aries 20.02,Indy Aries 20.03,,,,(Please add steps to reproduce),13.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"25/Feb/20 4:32 PM;Artemkaaas;Done in PR: [https://github.com/hyperledger/indy-sdk/pull/2091];;;","28/Feb/20 11:01 PM;sergey.minaev;Available in master and new version of integration tests successfully passes CI/CD pipelines;;;",,,,,,,,,,
Async libVCX internals,IS-1481,44222,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,03/Feb/20 8:57 PM,21/May/20 12:58 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Apply Rust async / io patterns, to match the approach used in the new indy-aries-vdr.

Will make the code base easier to understand and maintain.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1479,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifqi",,,,Unset,Unset,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Integrate Indy VDR into libindy,IS-1482,44223,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,03/Feb/20 11:12 PM,03/Feb/20 11:24 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1396,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifp",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jrallen,sergey.minaev,,,,,,,,,,,,,,,,,,,,
Refactor libindy tests which were moved to Aries VDR,IS-1483,44224,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,03/Feb/20 11:15 PM,03/Feb/20 11:24 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1396,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifq",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Design Aries Util,IS-1484,44225,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,03/Feb/20 11:23 PM,03/Feb/20 11:23 PM,28/Oct/23 2:49 AM,,,,,,,,,,,aries,libindy,,,,0,,,,"*Acceptance Criteria*
* Create the repo: aries-shared-util
** Readme describing the goals of the project
** Design / Docs folder
** Scaffolding: contributing, license, etc
* Contains:
**  pack / unpack methods
** rich schemas encode / decode
* There is at least one design document describing how the project will be structured
** The library is intended to work within the context of the existing Indy wallet, and will need to be refactored in the future when there is an abstract Aries wallet interface.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1466,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzik",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Fix content type for outgoing messages in libVCX for Aries scope,IS-1485,44226,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,sergey.minaev,sergey.minaev,03/Feb/20 11:50 PM,17/Feb/20 6:58 PM,28/Oct/23 2:49 AM,17/Feb/20 6:58 PM,,,,,,,,,,,,,,,0,,,,HTTP headers in libVCX should be aligned to RFC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzia",,,,Unset,Unset,Indy Aries 20.02,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"14/Feb/20 10:01 PM;sergey.minaev;Implemented in https://github.com/hyperledger/indy-sdk/pull/2092;;;","17/Feb/20 6:58 PM;sergey.minaev;Steps to validate:
* install libvcx from the latest master (1499)
* run faber demo at aries-cloud-agent-python (requires correct content type)
* run alice demo based on libvcx
* the agents are able to setup a conneciton;;;",,,,,,,,,,
Switch libs to libssl 1.1 on Ubuntu 18.04,IS-1486,44228,,Task,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,VladimirWork,sergey.minaev,sergey.minaev,04/Feb/20 12:12 AM,10/Mar/20 7:41 PM,28/Oct/23 2:49 AM,04/Mar/20 9:23 PM,,,,,,,,,,,,,,,0,blocked,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1512,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo8yx",,,,Unset,Unset,Indy Aries 20.02,Indy Aries 20.03,Indy Aries 20.04,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,VladimirWork,,,,,,,,,"14/Feb/20 10:01 PM;sergey.minaev;appended at https://github.com/hyperledger/indy-sdk/pull/2021/files

the ffi-napi for NodeJS 12 has critical bug for us and we are waiting to fix. Otherwise we would have to rewrire libVCX nodejs wrapper to another ffi library;;;","04/Mar/20 8:35 PM;sergey.minaev;NodeJS 10 works well with libssl1.1 so the ticket is not blocked by ffi-napi.

Fixed in scope of PR https://github.com/hyperledger/indy-sdk/pull/2116 for IS-1512

Available in 1.14.3 RC 127

Recommendation for testing: download artifact for bionic. Make sure that it depends on libssl1.1, not 1.0;;;","04/Mar/20 9:23 PM;VladimirWork;Build Info:
libindy 1.14.3~127-bionic

Actual Results:
{noformat}
Package: libindy
Version: 1.14.3~127-bionic
Status: install ok installed
Priority: optional
Section: devel
Maintainer: Hyperledger Indy Contributors <hyperledger-indy@lists.hyperledger.org>
Installed-Size: 11.0 MB
Provides: libindy (= 1.14.3~127)
Depends: libsodium23, libzmq5, libssl1.1

root@a3304dca6838:/# apt remove libssl1.1:amd64
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following packages were automatically installed and are no longer required:
  distro-info-data gir1.2-glib-2.0 gpg iso-codes libapt-inst2.0 libc-dev-bin libc6-dev libdbus-1-3 libexpat1 libgirepository-1.0-1 libglib2.0-0 libmpdec2 libncursesw5-dev libnghttp2-14 libnorm1
  libpgm-5.2-0 libpsl5 librtmp1 libsodium23 libtinfo-dev libzmq5 linux-libc-dev manpages manpages-dev mime-support python-apt-common vim-common vim-runtime xxd
Use 'apt autoremove' to remove them.
The following packages will be REMOVED:
  ca-certificates curl indy-cli libcurl4 libindy libnullpay libpython3-stdlib libpython3.6 libpython3.6-minimal libpython3.6-stdlib libssl1.1 libvcx lsb-release openssl python3 python3-apt python3-dbus
  python3-gi python3-minimal python3-software-properties python3.6 python3.6-minimal software-properties-common vim wget
0 upgraded, 0 newly installed, 25 to remove and 0 not upgraded.
After this operation, 67.8 MB disk space will be freed.
{noformat};;;",,,,,,,,,
LibVCX: UnknownLibindyError on genesis.txn failure,IS-1487,44268,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,06/Feb/20 12:35 AM,04/Mar/20 11:18 PM,28/Oct/23 2:49 AM,04/Mar/20 11:18 PM,,,,,,,,,,libvcx,,,,,0,,,,"If vcx-config.json points to an outdated, incorrect, or inaccessible genesis.txt file, LibVCX returns an unhelpful error:

{code}vcx.error.VcxError: ErrorCode.UnknownLibindyError{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i019mh:",,,,Unset,Unset,Indy Aries 20.03,Indy Aries 20.04,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,VladimirWork,,,,,,,,"03/Mar/20 2:16 PM;Artemkaaas;Changes: LIBvcx: improved error handling for indy wallet and pool-related functions. 
In the described case the `INVALID_GENESIS_TXN_PATH` error will be thrown.
PR: [https://github.com/hyperledger/indy-sdk/pull/2108/files]
Build: master-1522;;;","04/Mar/20 11:18 PM;VladimirWork;Build Info:
libindy 1.14.3~127
libvcx 0.7.0~127

Actual Results:
{noformat}
 (<ErrorCode.InvalidGenesisTxnPath: 1024>, {'backtrace': '', 'message': ""Error: Invalid genesis transactions path.\n  Caused by: Can not create Pool Ledger Config\n  Caused by: \nindyrs::IndyError: Pool genesis file is invalid or does not exist\n  Caused by: Error: IO error\n  Caused by: Can't open genesis txn file\n  Caused by: No such file or directory (os error 2)\n\n\n"", 'error': 'Invalid genesis transactions path.', 'cause': ""Error: IO error\n  Caused by: Can't open genesis txn file\n  Caused by: No such file or directory (os error 2)\n\n""})
{noformat}
;;;",,,,,,,,,,
vcx-config.json doesn't take relative paths,IS-1488,44269,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Cannot Reproduce,esplinr,esplinr,esplinr,06/Feb/20 12:36 AM,02/Mar/20 1:47 AM,28/Oct/23 2:49 AM,02/Mar/20 1:47 AM,,,,,,,,,,libvcx,,,,,0,,,,"In vcx-config.json, this path to the genesis file returns a 1035 error, even if the file is correct and in that directory:

""./config/genesis.txn""

Whereas this path works:

""/vagrant/config/genesis.txn""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01942:zy",,,,Unset,Unset,Indy Aries 20.03,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,,,,,,,,,"27/Feb/20 2:30 PM;Artemkaaas;[~esplinr] I did testing based on vcx/python/demo/faber.py.  Run `python3 faber.py` from `demo` folder. Versions of VCX and Python wrapper: stable 0.6.2
 Steps:
 1. Created subfolder `txn` inside `demo` and moved `docker.txn` file there
 2. Updated `faber.py` line 49 to use different paths to genesis transactions file.
 * config['genesis_path'] = '/home/artem/indy-sdk/vcx/wrappers/python3/demo/txn/docker.txn' -  works as expected.
 * config['genesis_path'] = './txn/docker.txn' - works opposite to tickets description
 * config['genesis_path'] = '../../txn/docker.txn' - fails as expected

Resolution: A relative path is acceptable as an absolute path.;;;",,,,,,,,,,,
libvcx error is unhelpful when writing schema with unregistered DID,IS-1489,44270,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,06/Feb/20 12:41 AM,27/Feb/20 6:24 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libvcx,,,,,0,,,,"When using LibVCX to write a schema or credential definition to the ledger, if a DID is used that is not yet registered on the ledger, the following error is returned:

{code}
{ Error: Invalid JSON string
at Function.<anonymous> (/vagrant/node_modules/node-vcx-wrapper/dist/api/schema.js:64:23)
at Generator.throw (<anonymous>)
at rejected (/vagrant/node_modules/node-vcx-wrapper/dist/api/schema.js:5:65)
at <anonymous> inheritedStackTraces: [], vcxCode: 1016 }
{code}

This error doesn't give me any hints about the cause of the problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii7",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,,,,,,,,,,,,,,,,,,,,
libvcx error when writing a duplicate schema is unhelpful,IS-1490,44271,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Cannot Reproduce,esplinr,esplinr,esplinr,06/Feb/20 12:42 AM,02/Mar/20 1:47 AM,28/Oct/23 2:49 AM,02/Mar/20 1:47 AM,,,,,,,,,,libvcx,,,,,0,,,,"If I use LibVCX to write a schema to the ledger that is identical to a schema that was already written with the same DID using the same name and version number, the following error is returned:

{code}
{ Error: Unknown Error
at Function.<anonymous> (/vagrant/node_modules/node-vcx-wrapper/dist/api/schema.js:64:23)
at Generator.throw (<anonymous>)
at rejected (/vagrant/node_modules/node-vcx-wrapper/dist/api/schema.js:5:65)
at <anonymous> inheritedStackTraces: [], vcxCode: 8888 }
{code}

This error doesn't give me any hints about the cause of the problem.

Compare with the error returned by a duplicate credential definition:
""Error: Can't create, Credential Def already on ledger""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01942:zz",,,,Unset,Unset,Indy Aries 20.03,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,,,,,,,,,"27/Feb/20 6:24 PM;Artemkaaas;[~esplinr] I did testing regarding the issue
 Versions:  Vcx and Vcx NodeJS wrapper:  stable - 0.6.2
 Testing: Updated [VCX NodeJS Faber demo script|[https://github.com/hyperledger/indy-sdk/blob/master/vcx/wrappers/node/demo/faber.js]] to create and send the same schema on the ledger twice (step #3).
 Result: error is clear and differs from provided in the description:
{code:java}
VCX Node demo: [info]: Created schema with id V4SGRU86Z58d6TV7PBUe6f:2:FaberVcx:88.85.10
(node:10319) UnhandledPromiseRejectionWarning: Error: Duplicate Schema: Ledger Already Contains Schema For Given DID, Version, and Name Combination
    at Function.<anonymous> (/home/artem/indy-sdk/vcx/wrappers/node/dist/src/api/schema.js:71:23)
    at Generator.throw (<anonymous>)
    at rejected (/home/artem/indy-sdk/vcx/wrappers/node/dist/src/api/schema.js:6:65)
    at <anonymous>
(node:10319) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)
(node:10319) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
{code}
 ;;;",,,,,,,,,,,
Encoded value of attribute with leading zeros results in verification failure,IS-1491,44298,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,sergey.minaev,sergey.minaev,07/Feb/20 8:29 PM,12/Mar/20 12:31 AM,28/Oct/23 2:49 AM,14/Feb/20 10:56 PM,1.11.1,1.12.0,1.13.0,1.14.0,1.14.1,1.14.2,1.14.3,1.14.3,1.14.4,libindy,,,,,0,,,,"Steps to reproduce:
issue credential with some attribute value encoded with leading zeros
create a proof based on the credential and reveal the attr
verify proof

Expected result
Error at issuance like ""Invalid encoding""
Or Successful validation

Actual result: proof validation failed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1492,IS-1521,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i019uj:",,,,Unset,Unset,Indy Aries 20.02,Indy Aries 20.04,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,VladimirWork,,,,,,,,"07/Feb/20 8:34 PM;sergey.minaev;Root reason:
* encoded value is stored as is (with leading zeros)
* validation is checking the string representations: the value from presented proof (string as is, includes leading zeros) and serialized to string BigInteger from crypto part

Chosen solution:
* change validation: compare integers in string representation without leading zeros

Long-term proposal:
* reject encoding with leading zeros (kind of breaking changes)

PR:
https://github.com/hyperledger/indy-sdk/pull/2077;;;","14/Feb/20 9:20 PM;sergey.minaev;Available in master 1496;;;","14/Feb/20 10:55 PM;Artemkaaas;Testing Results:
attribute: `""name"": \{""raw"": ""Alex"", ""encoded"": ""000001139481716457488690172217916278103335""}`
 indy version:
   * master 1.14.2~1496  - verification passed
   * stable 1.14.2 - verification failed

attribute:  ``""name"": \{""raw"": ""Alex"", ""encoded"": ""1139480000000000000001716456278103335""}``
 indy version:
   * master 1496  - verification passed
   * stable 1.14.2 - verification passed

attribute:  ``""name"": \{""raw"": ""Alex"", ""encoded"": ""48171645748869017221791620000000""}``
 indy version:
   * master 1496  - verification passed
   * stable 1.14.2 - verification passed

Resolution: Issue is solved;;;","09/Mar/20 7:32 PM;sergey.minaev;One more edge-case is found by [~sklump] https://github.com/hyperledger/indy-sdk/pull/2077#discussion_r387824195;;;","11/Mar/20 8:08 PM;sergey.minaev;Fix for the edge-case in PR https://github.com/hyperledger/indy-sdk/pull/2125
Avaiable in 1.14.4 RC 131
Suggested test to validation: check that attributes with zero(s) as encoded values can be issued, used in proof which can be validated;;;","12/Mar/20 12:31 AM;VladimirWork;Attributes with zero(s) as encoded values look good except IS-1521 issue.;;;",,,,,,
LibVCX attributes in credential encoding should support identifiers with leading zeros,IS-1492,44300,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,08/Feb/20 1:07 AM,08/Feb/20 1:14 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Right now libVCX API accepts key-value JSON for attributes values. And the type of value in input is always a string. As soon as this string can be parsed to integer, libVCX applies integer-specific encoding.
So { ""attr1"": ""123"", ""attr2"": ""0456""} would be passed to internal math as 123 and 456.

As a result there is no way to have math proof to distinguish  0456 and 456 by using libVCX API.

As soon as real usecase will appears to distinguish such values we should re-design the API parameters.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1491,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0190j:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,"08/Feb/20 1:14 AM;sergey.minaev;Hopefully it would be solved by Rich Schema approach;;;",,,,,,,,,,,
save-transaction does not quote JSON output correctly,IS-1493,44307,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,jrallen,jrallen,10/Feb/20 5:52 PM,02/Mar/20 2:21 AM,28/Oct/23 2:49 AM,02/Mar/20 2:21 AM,,,,,,,,,,cli,,,,,0,,,,"I did ""save-transaction"", and by chance the signature had a double-quote in it:

{""identifier"":""FmMiJnJuqtDzuxoxpXDGb5"",""operation"":{""dest"":""FmMiJnJuqtDzuxoxpXDGb5"",""role"":""0"",""alias"":""jra"",""type"":""1""},""protocolVersion"":2,""reqId"":1581324532419953000,""signature"":""4sfkNC7uYcJiqzxPMKYRBvHEyojnfp6JcjksYiTrxAw2xCcf7eLKCMN7W22mBjsseHEdw3KLHZWPXqhxNpWgDAAB""}itrjxbsaBTGwphNzZj1z3eACz6guQEnY5joAS4ZQMdocGhE6kRonroyRJXQ""}

I did load transaction and it failed with ""File contains invalid transaction: Error(""trailing characters"", line: 1, column: 273)"".

I could fix it by manually quoting the double quote.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01942:w",,,,Unset,Unset,Indy Aries 20.03,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,jrallen,sergey.minaev,,,,,,,,"19/Feb/20 6:53 PM;Artemkaaas;Changes: truncate the file before writing.
PR: [https://github.com/hyperledger/indy-sdk/pull/2099];;;","02/Mar/20 1:46 AM;sergey.minaev;Available in master 1507;;;","02/Mar/20 2:21 AM;sergey.minaev;Steps to validate (tested on 1507 master):
* prepare transaction in CLI for get-cred-def
* save the txn
* prepare txn in CLI for get-did (which is shorter rather get-cred-def)
* save the txn to the same file
* make sure that the file contains only the latest txn, without trailing symbols from the first one;;;",,,,,,,,,
invalid library state,IS-1494,44308,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,jrallen,jrallen,10/Feb/20 8:01 PM,02/Mar/20 2:05 AM,28/Oct/23 2:49 AM,02/Mar/20 2:05 AM,,,,,,,,,,,,,,,0,,,,"I did this, and got into an ""invalid library state"":

pool(docker):wallet(name=mine):indy> did new method=what metadata=jra
Did ""did:what:FpG77WNV5v3vYHK6bp9Mq8"" has been created with ""95Kv9fNjrwSCWuy7y1kzJARy95ntTWNtunjcfxHv5i8w"" verkey
Metadata has been saved for DID ""did:what:FpG77WNV5v3vYHK6bp9Mq8""
pool(docker):wallet(name=mine):indy> did list
Error: Invalid library state
  Caused by: You can abbreviate fully-qualified did only with `sov` method

I tried to use ""did qualify"" to fix the did:what method, but can't make it work either. In the end I needed to delete the wallet to get going again.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01942:r",,,,Unset,Unset,Indy Aries 20.03,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,jrallen,sergey.minaev,,,,,,,,"19/Feb/20 3:44 PM;Artemkaaas;Fixed in PR: [https://github.com/hyperledger/indy-sdk/pull/2098];;;","02/Mar/20 1:46 AM;sergey.minaev;Available in master 1507;;;","02/Mar/20 2:05 AM;sergey.minaev;Steps to validate:
* install master 1507+ (1510 in my case)
* create did with non-sov prefix like mentioned in the description
* did list successfully now;;;",,,,,,,,,
Release Indy SDK 1.14.3,IS-1495,44323,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,KitHat,esplinr,11/Feb/20 11:45 PM,10/Mar/20 8:04 PM,28/Oct/23 2:49 AM,05/Mar/20 1:59 AM,,,,,,,,1.14.3,,,,,,,0,,,,"*Release Goal*
Release everything that is ready. 

*Acceptance Criteria*
Regular instructions:
* Code is tested
* Review upstream releases to decide what should be included in this build
** Ursa
* Build is produced with automated CI / CD
** Official build is tagged as released in Git
** Official builds should be the only builds that are not marked in GitHub as ""pre-release""
* Prepare basic documentation on new features
* Prepare the Release Notes
** Link to the documentation on new features
** Stored as a CHANGELOG.md in the root of the repo
** Latest release at the top, above the release notes for all previous versions
* The release should be on GitHub “Releases” tab.
** Release notes should be in the “Description"" field of the GitHub release artifact
* The release is marked in JIRA
* Add the correct fixVersion to included issues
* Enable others to use the release:
** Email stakeholders with links to the artifacts and release notes",,,,,,,,,,,,IS-1512,,,,,,,,,IS-1520,,IS-1468,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwrhj:910sx0900009eoaiifo8yy",,,,,,Indy Aries 20.03,Indy Aries 20.04,,,,,3.0,,,,,,,,,,,,Artemkaaas,esplinr,KitHat,sergey.minaev,VladimirWork,,,,,,"02/Mar/20 2:06 AM;sergey.minaev;We've found some issue around publishing Ubuntu artifacts and paused the release;;;",,,,,,,,,,,
Investigate GitHub Actions,IS-1496,44330,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anikitinDSR,esplinr,esplinr,12/Feb/20 11:44 PM,03/Apr/20 10:02 AM,28/Oct/23 2:49 AM,27/Feb/20 10:12 PM,,,,,,,,,,build-delivery-pipelines,,,,,0,,,,"We should evaluate if GitHub Actions can meet the CI / CD needs of Indy SDK.

Questions to answer:
* Easy of use
* Platform and environment support
* Difficulty of launching an Indy Pool for CI testing",,,,,,,,,,,,,,,,,,,,,IS-1497,IS-1503,,,,INDY-2168,IS-1497,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1546,,,No,,Unset,No,,,"1|i01940:i",,,,Unset,Unset,Indy Aries 20.03,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),anikitinDSR,esplinr,sergey.minaev,,,,,,,,"18/Feb/20 10:54 PM;anikitinDSR;h1. PoA.
h2. Main goals:
 * Ability to create dockerized indy pool and running test using this pool.
 * What the possibilities of androids machines? Does it have hardware support?
 * Costs of using Github Actions.
 * What the actions are allowed, like `on push, on pull request`
 * Are there any possibilities for running in parallel?
 * Cache for docker images.;;;","20/Feb/20 11:22 PM;anikitinDSR;Doc with findings can be found in:

https://docs.google.com/document/d/1ZIFTa3Gj80DbVLp08r0XEPk8O3QUD17sVgGMaFYqqIk/edit?usp=sharing;;;","26/Feb/20 10:28 PM;anikitinDSR;Maybe it would be helpful. Example of workflow, which build target artifacts for tests, upload and use them in other job for run tests:

{code}
name: CI

on: [push]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build client image
      run: docker build -f libindy/ci/ubuntu.dockerfile -t test_client ci
    - name: Create container for test
      run: docker run -di -v $(realpath .):/home/indy/test_dir --rm --privileged --name indy_client --env RUST_TEST_THREADS=1 --env RUST_LOG=trace --env TEST_POOL_IP=10.0.0.2 test_client
    - name: Check disk space
      run: docker exec -i indy_client df -h
    - name: Chmod
      run: chmod -R 777 libindy
    - name: Cargo build
      run: docker exec -i --workdir /home/indy/test_dir/libindy indy_client cargo build
#     - name: Cargo test
#       run: docker exec -i --workdir /home/indy/test_dir/libindy indy_client cargo test --test pool high_cases::open::open_pool_ledger_works -- --exact
    - name: ZIP artifacts
      run: docker exec -i --workdir /home/indy/test_dir/libindy indy_client zip -r artifacts.zip target
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: cargo_builds
        path: libindy/artifacts.zip
      
  RunTests:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - uses: actions/checkout@v1
      - run: mkdir artifacts
      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: cargo_builds
          path: ./artifacts
      - name: LS
        run: ls -la .
      - name: PWD
        run: pwd
      - name: Unpack artifacts
        run: unzip artifacts/artifacts.zip
      - name: Build docker image with indy pool inside
        run: docker build -f ci/indy-pool.dockerfile -t test_pool --build-arg pool_ip=10.0.0.2 ci
      - name: Create network
        run: docker network create --subnet=10.0.0.0/8 indy-sdk-network
      - name: Run IndyPool
        run: docker run -d --name indy_pool -p 9701-9708:9701-9708 --net=indy-sdk-network test_pool
      - name: Chmod
        run: chmod -R 777 libindy
      - name: Build client image
        run: docker build -f libindy/ci/ubuntu.dockerfile -t test_client ci
      - name : Create container for tests
        run: docker run -di -v $(realpath .):/home/indy/test_dir --rm --privileged --name indy_client --net=indy-sdk-network --env RUST_TEST_THREADS=1 --env RUST_LOG=trace --env TEST_POOL_IP=10.0.0.2 test_client
      - name: Run tests
        run: docker exec -i --workdir /home/indy/test_dir/libindy indy_client cargo test --test pool high_cases::open::open_pool_ledger_works -- --exact
{code};;;","27/Feb/20 10:12 PM;sergey.minaev;Current vision is to use GitHub Actions and keep in the mind the option to migrate Azure Pipelines or Circle CI if needed;;;",,,,,,,,
Investigate GitLab CI again,IS-1497,44331,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.khoroshavin,esplinr,esplinr,12/Feb/20 11:44 PM,03/Apr/20 10:02 AM,28/Oct/23 2:49 AM,27/Feb/20 10:12 PM,,,,,,,,,,build-delivery-pipelines,,,,,0,,,,"Has GitLab CI fixed the problems identified during our last investigation (INDY-2168)?

Questions to answer:
* Easy of use
* Platform and environment support
* Triggering builds from GitHub PRs sent from forks
* Difficulty of launching an Indy Pool for CI testing",,,,,,,,,,,,,,,,,,,,,,,IS-1496,,,INDY-2168,,,,IS-1496,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1546,,,No,,Unset,No,,,"1|i01940:",,,,Unset,Unset,Indy Aries 20.03,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.khoroshavin,sergey.minaev,,,,,,,,"20/Feb/20 11:24 PM;sergey.khoroshavin;*Ease of use*
Generally GitLab CI is easy to configure and use, given all required features are there (more on that later)

*Platform and environment support*
GitLab runners can be run on Linux, MacOS and Windows. However preferred way of configuring runners is docker, which is obviously limited to Linux.  Using shell runners is considered insecure, so you need to somewhat trust project contributors.

*Triggering builds from GitHub PRs sent from forks*
Short answer - this doesn't work. We've tried it on a test GitHub repository integrated with GitLab CI, and when trying to create PR from fork GitLab webhook returned response 400 with body 
{code:json}
{""message"":{""base"":[""Pull requests from fork are not supported""]}}
{code}
There is an open ticket on this issue, and it doesn't seem it is going to be resolved soon:
https://gitlab.com/gitlab-org/gitlab/issues/5667

There is a bot that can help overcome this issue (LabHub), however we didn't test it yet:
https://github.com/brndnmtthws/labhub
The main problem is that from its description it looks like most probably CD needs to be handled by something else:
{quote}If you're not concerned with leaking secrets, then LabHub may be for you! LabHub listens for webhooks from GitHub to notify for new pull requests. If the PR is from a forked repo, it will push a branch to GitLab (for the corresponding PR) to test the build.{quote}
Also this bot needs to be deployed somewhere to run.

Another thing to note - for GitHub integration Gitlab CI relies on auto-pull from remote repository:
* This feature is available for free to GitLab.com users until March 22nd, 2020.
* It looks like after that it will require bronze subscription (however it shouldn't affect open source projects, as far as I know they default to Gold for free)
* More info on https://gitlab.com/gitlab-org/gitlab/issues/10361

*Difficulty of launching an Indy Pool for CI testing*
When running in docker (which should be default option) there is a feature called service which allows running several sidecar containers with services required for tests. However it doesn't seem to be possible to know their IPs in advance, which is required for generating Indy pool genesis transactions. Probably this can be overcome with some dirty hacks.
Possible alternative is to use shell runner, but as already said it doesn't seem to be secure enough. It would be great if GitLab CI could spawn on demand one-time virtual machines from some cloud provider and run jobs directly on them, but this is not implemented (they have autoscaling based on docker-machine or kubernetes , but in this case jobs are still confined to docker).;;;","27/Feb/20 10:12 PM;sergey.minaev;Current vision is to use GitHub Actions and keep in the mind the option to migrate Azure Pipelines or Circle CI if needed;;;",,,,,,,,,,
name_type crate is now deprecated,IS-1498,44337,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,ignisvulpis,ignisvulpis,13/Feb/20 7:38 PM,02/Mar/20 2:03 AM,28/Oct/23 2:49 AM,02/Mar/20 2:03 AM,,,,,,,,,,,,,,,0,,,," 

The crate [https://crates.io/crates/named_type] is now deprecated and won't receive updates.

[https://github.com/cjoftheweb/named_type]

It already is depending on crates that are not up-to-date anymore which leads to libindy using multiple versions of the crates. So libindy's build time is longer than needed.

 

There are several options to tackle the deprecation.
 # The author of the named_type crate suggests to move to [https://doc.rust-lang.org/std/any/fn.type_name.html] which is now in standard Rust.
 Since 1.38, I think.
 # Clone name_type and republish as indy_named_type
 # Clone name_type into libindy/named_type, keep it updated and use it from local path

 

Problems with approach 1 are that the new standard is not 100% the same as named_type. Especially the method
{code:java}
let type_ = T::short_type_name();
{code}
or similar does not exist to my knowledge.

 

Migrating libindy to the Rust standard leads to all wallets becoming incompatible.

So there either needs to be a tool to migrate them or libindy can do that automatically which leaves us with dead code after all wallets have been migrated.

 

 

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01942:i",,,,Unset,Unset,Indy Aries 20.03,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ignisvulpis,sergey.minaev,,,,,,,,"20/Feb/20 12:03 AM;Artemkaaas;Changes: 
- Liibndy was updated to use standard Rust `type_name` function and to cut struct prefix manually to keep wallet keys backward compatibility.

PR: [https://github.com/hyperledger/indy-sdk/pull/2100];;;","02/Mar/20 1:45 AM;sergey.minaev;Available in master 1510;;;","02/Mar/20 2:03 AM;sergey.minaev;named_type crate is excluded from deps now.
Extra steps to validate wallet backward-compatibility by data:
1 install libindy and cli 1507
2 create wallet and store did there
3 upgrade libindy to 1510
4 open wallet and make sure that walelt dataa like did is readable by new codebase;;;",,,,,,,,,
Replace ledger lookup of LibIndy with Indy VDR,IS-1499,44339,,Epic,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,13/Feb/20 11:20 PM,27/Mar/20 10:46 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"We need to integrate the indy-vdr from [~cywolf] into LibIndy:

*Acceptance Criteria*
* Move the repo to Hyperledger
* Setup CI / CD
* Deprecate the ledger lookup code in LibIndy
* Test

*Notes*
* Current location of the code: https://github.com/andrewwhitehead/indy-ledger-client",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-2,,VDR inside libindy,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaii3",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,jrallen,,,,,,,,,,,,,,,,,,,,
Segmentation Fault on libindy,IS-1500,44344,,Bug,In Progress,IS,Indy SDK,software,resplin,,,Highest,,Artemkaaas,Tecnalia,Tecnalia,14/Feb/20 5:53 PM,25/Mar/20 5:57 PM,28/Oct/23 2:49 AM,,1.14.3,,,,,,,,,,,,,,0,,,,"After following tutorial guidelines for setting up indy-pool node in order to run the examples of the repo, we are facing a segmentation fault caused when callin CAPI operation to create a new pool ledger connection.

 

We are running nodejs 8.9.0 and libindy installed from stable release channel via apt.

Is there any way we can figure out the reason behind this segfault?","nodejs 8.9.0

libindy for xenial from stable channel (apt)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii15",,,,Unset,Unset,Indy Aries 20.03,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,Tecnalia,,,,,,,,,"19/Feb/20 6:14 PM;Artemkaaas;[~Tecnalia]
 What OS do you use?
 Could you provide core.dump file?

I tried `samples/nodejs` on my local machine and they worked well.
 Environment is  Ubuntu 16.04 /   nodejs 8.17.0 /   libindy 14.2.0 /  samples from the master branch;;;","18/Mar/20 10:40 PM;Tecnalia;Hi [~Artemkaaas], we finally have a crash dump information:

PID 1256 received SIGSEGV for address: 0x0
 /opt/agent/test/node_modules/segfault-handler/build/Release/segfault-handler.node(+0x30bf)[0x7fafa390d0bf]
 /lib/x86_64-linux-gnu/libpthread.so.0(+0x12890)[0x7fafa5f16890]
 /lib/x86_64-linux-gnu/libc.so.6(+0xa9e8a)[0x7fafa5bbce8a]
 node(lh_insert+0x14a)[0x124238a]
 node(OBJ_NAME_add+0x71)[0x124d871]
 /usr/lib/x86_64-linux-gnu/libssl.so.1.1(+0x33e5e)[0x7fafa13a2e5e]
 /lib/x86_64-linux-gnu/libpthread.so.0(+0xf827)[0x7fafa5f13827]
 /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1(CRYPTO_THREAD_run_once+0x9)[0x7fafa10838f9]
 /usr/lib/x86_64-linux-gnu/libssl.so.1.1(OPENSSL_init_ssl+0x8b)[0x7fafa13a307b]
 /usr/lib/libindy.so(+0x161d1af)[0x7fafa2eb31af]
 /usr/lib/libindy.so(+0x161d83e)[0x7fafa2eb383e]
 /usr/lib/libindy.so(+0x16f4818)[0x7fafa2f8a818]
 /usr/lib/libindy.so(+0x161d7b9)[0x7fafa2eb37b9]
 /usr/lib/libindy.so(+0x161d181)[0x7fafa2eb3181]
 /usr/lib/libindy.so(+0x161879f)[0x7fafa2eae79f]
 /usr/lib/libindy.so(+0xfccaf0)[0x7fafa2862af0]
 /usr/lib/libindy.so(+0x96c13a)[0x7fafa220213a]
 /usr/lib/libindy.so(+0x3296d2)[0x7fafa1bbf6d2]
 /usr/lib/libindy.so(+0x220f3d)[0x7fafa1ab6f3d]
 /usr/lib/libindy.so(+0x4774bc)[0x7fafa1d0d4bc]
 /usr/lib/libindy.so(+0x47a7ef)[0x7fafa1d107ef]
 /usr/lib/libindy.so(+0xb8fa1e)[0x7fafa2425a1e]
 /usr/lib/libindy.so(+0xa4a78c)[0x7fafa22e078c]
 /usr/lib/libindy.so(+0xa4726f)[0x7fafa22dd26f]
 /usr/lib/libindy.so(+0x9b5780)[0x7fafa224b780]
 /usr/lib/libindy.so(+0xb5337b)[0x7fafa23e937b]
 /usr/lib/libindy.so(+0x217e5e)[0x7fafa1aade5e]
 /usr/lib/libindy.so(+0x8635ce)[0x7fafa20f95ce]
 /usr/lib/libindy.so(+0x9ad005)[0x7fafa2243005]
 /usr/lib/libindy.so(+0x16fb5ea)[0x7fafa2f915ea]
 /usr/lib/libindy.so(+0x9ace19)[0x7fafa2242e19]
 /usr/lib/libindy.so(+0x86365e)[0x7fafa20f965e]
 Segmentation fault (core dumped)

 

It was tested Linux server with nodejs 8.17.0, indy-sdk 1.14.3 and libindy installed from ppa with version 1.14.3-bionic;;;","25/Mar/20 5:57 PM;Tecnalia;We detected it works well on 1.14.2 but if you run maintenance task that automatically upgrade your packages and if they upgrade libindy package to version 1.14.3 if fails with previous error. Should we remove the 1.14.3 version from PPA while is not released (accoding to jira)?;;;",,,,,,,,,
PoC usage of Indy VDR inside of libindy,IS-1501,44364,,New Feature,Code Review,IS,Indy SDK,software,resplin,,,Medium,,sergey.minaev,sergey.minaev,sergey.minaev,17/Feb/20 10:54 PM,31/Mar/20 10:19 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1499,,,No,,Unset,No,,,"1|i018og:",,,,Unset,Unset,Indy Aries 20.03,Indy Aries 20.04,Indy Aries 20.05,Indy Aries 20.06,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"06/Mar/20 2:58 PM;Artemkaaas;Updated Libindy to use Vdr instead of Pool Service and for building requests.
PR: [https://github.com/hyperledger/indy-sdk/pull/2120]

 ;;;",,,,,,,,,,,
"result of get_txn does not verify, returned anyway",IS-1502,44377,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid: Works as Expected,,jrallen,jrallen,20/Feb/20 5:22 PM,25/Feb/20 7:23 AM,28/Oct/23 2:49 AM,25/Feb/20 7:23 AM,,,,,,,,,,,,,,,1,,,,"Using ""ledger custom"", I can send a get_txn to the BuildNet nodes for the first txn on the audit ledger:

 
{noformat}
pool(builder):indy> ledger load-transaction file=/tmp/foo
Transaction has been loaded: {""reqId"":1582185610631377000,""identifier"":""LibindyDid111111111111"",""operation"":{""type"":""3"",""ledgerId"":3,""data"":1,""dest"":""Th7MpTaRZVRYnPiabds81Y""},""protocolVersion"":2}
 
pool(builder):indy> ledger custom context
Transaction stored into context: ""{\""reqId\"":1582185610631377000,\""identifier\"":\""LibindyDid111111111111\"",\""operation\"":{\""type\"":\""3\"",\""ledgerId\"":3,\""data\"":1,\""dest\"":\""Th7MpTaRZVRYnPiabds81Y\""},\""protocolVersion\"":2}\n"".
Would you like to send it? (y/n)
y
Response: 
{""op"":""REPLY"",""result"":{""reqId"":1582185610631377000,""data"":{""auditPath"":[""4CEFbbuaB3Ja4eXFV87zjvdG5Jzg5uGggDb7mZtCWPJn"",""2yLRnjspTYSc4SwuE4PUc9gmuLwRy3WWjBLNHtzNk9oz"",""4oyAYZJ8pe4CtjryotedsBchASJXiDt1hfe14BCiScf6"",""3S2bkSrX628yuD8Qj2iEaFSD7X9SrWL5NRdy7WeG9Drc"",""2KiTUVp4bfCqECpPxrMVr17MpdCoH5ZZT9xScGg8845a"",""EYCJAiG3pJiXqfvXHWvW62eZTuCeKSd9M1NS4KePqh4J"",""3cCXsxeqRbYuDvAqZfBmNVBAv9JVuXyvCsPBxfVA32wT"",""3m2i14owMpgerV9hyFpuqtByeadFaakwb6XdPwcsvgVC"",""51pc49aMq4p215oVLzbqDwT187h3E9bRabALgtUqA8jn"",""2ByBJcRmuST4UBagLzvW342emy5Gn3916wivytR36Dya"",""DaVWC21tD3ruDaC3UJPWuM7mkfbcwjy9kC8VsRskK3kG"",""DxmeAHoxt3uXb6CLqTYEm2HZ1BLgwdbY8mRa5XoHZh8Z"",""EaZ2ZZJPDqmvRqg2tw14W5WJJFcA4EprjneCXo2akUU8"",""DGhsWuTyhDmsqMj9aDZniZw6R6gPyp8ewEbfVaeSCQcQ"",""5BshzdDFSP7CBT1i6kmDeZGcrCZJ79zxfWcXYtcWmWar"",""2ok3hBdHoGdgZBZcjmTdf8dXVwGB5kByYUohvo4tVhhi"",""7DTCoCLsJFrmcUYmDBZjD6rjYr79acwxbeSmhr3uhUh3"",""ExRrrKVc6tUMba2GdhbDSAqFbj2K9UuytipfanZhk8YS""],""txn"":{""type"":""2"",""protocolVersion"":2,""data"":{""ppSeqNo"":1,""primaries"":[""FoundationBuilder"",""vnode1""],""ledgerRoot"":{""0"":""2hFs9RoBzAN2D1keLD8SbVBUEYByf55YjxUHcxDwu4Nf"",""1"":""EN3dyDFRuV5Du2DTja1e7xqZy12XLisErLefcaP4GzHf""},""ver"":""1"",""viewNo"":0,""stateRoot"":{""0"":""2VNAcq8b6Bg7ePF4FBRUe6duUBytP35eYduGzSyMwFuz"",""1"":""4RbC2qVepj1kn2jdmvemxtwpYKfrsA9XowGGAUs7m79Y""},""ledgerSize"":{""0"":4,""1"":12,""2"":0,""1001"":0}},""metadata"":{}},""txnMetadata"":{""seqNo"":1,""txnTime"":1568291557},""ver"":""1"",""ledgerSize"":184644,""rootHash"":""5ftrXMypHRiCPFExMedWusVWrGqvCxU3Ev4vrPbQA6hb"",""reqSignature"":{}},""seqNo"":1,""type"":""3"",""identifier"":""LibindyDid111111111111""}}
 
{noformat}
All of the nodes return a result that cannot be verified by Libindy (see attached log). Eventually a response from one of the nodes is returned without an error and is printed by indy-cli.

(I first saw this same behaviour with indy-vdr, and then managed to reproduce it also with indy-sdk)

Actually, I just noticed that not even the final verification succeeded:
{noformat}
icsil1noteb238:indy-sdk jallen$ grep ""Try to verify"" log/indy_cli.log 
2020-02-20T09:09:19.382898+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature >>
2020-02-20T09:09:19.766357+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature << true
2020-02-20T09:10:54.964611+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature >>
2020-02-20T09:10:54.966919+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature << false
2020-02-20T09:10:55.426202+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature >>
2020-02-20T09:10:55.428421+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature << false
2020-02-20T09:11:04.569612+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature >>
2020-02-20T09:11:04.572226+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature << false
2020-02-20T09:11:05.191960+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature >>
2020-02-20T09:11:05.194957+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature << false
2020-02-20T09:11:08.617332+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature >>
2020-02-20T09:11:08.620700+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature << false
2020-02-20T09:11:14.251522+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature >>
2020-02-20T09:11:14.254399+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature << false
2020-02-20T09:11:17.567716+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature >>
2020-02-20T09:11:17.570439+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature << false
2020-02-20T09:11:18.213430+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature >>
2020-02-20T09:11:18.216414+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature << false
2020-02-20T09:11:18.584214+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature >>
2020-02-20T09:11:18.586148+01:00 [indy::services::pool::request_handler] DEBUG indy::services::pool::request_handler:TransactionHandler::process_reply: Try to verify proof and signature << false
{noformat}

So this is a bit more serious, that Libindy seems to be returning data it knows did not verify correctly without an error message. (Updated the title to reflect this.)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Feb/20 5:23 PM;jrallen;indy_cli.log;https://jira.hyperledger.org/secure/attachment/18134/indy_cli.log",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i019bv:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jrallen,KitHat,VladimirWork,,,,,,,,"20/Feb/20 6:59 PM;VladimirWork;Actually we have an error message: *ERROR:indy.libindy.native.indy.services.pool.state_proof:	src/services/pool/state_proof/mod.rs:86 | Given signature is not for current root hash, aborting* but it looks like we shouldn't return REPLY and seqNo in this case.;;;","20/Feb/20 10:07 PM;jrallen;The problem could come from request_handler.rs line 409, where _send_ok_replies is called both for the case where cnt > f (true in this case, i.e. too many retries) or in the case where _check_state_proof returns true (false in this case, because the proof is incorrect).

Do you want me to file a second bug about the fact that the proof is incorrect for audit ledger? Because that's the actual problem that lead me to find this other problem.;;;","25/Feb/20 7:22 AM;KitHat;Hi [~jrallen], I have investigated the issue, logs and libindy code. The behaviour you have observed is correct and it is intended by design. It is more of a question to Indy Plenum design. You are querying Audit Ledger -- the ledger that is used by all nodes to remain consistent with each other and make catch-ups. The error you observed is saying that there are no signature to verify in proof for this request -- and this is ok for an audit ledger, nodes are not making BLS signatures for it.

So if there no signature in this proof or something else is wrong with the proof libindy will just collect consensus of responses and return it to you -- that is what happened in your logs.

Maybe in the future we might support BLS signatures for Audit Ledger and short path will start working for it -- but it is not on our priorities in a foreseeable future.

TL;DR: everything is ok and works as expected. We might fix it but not in the nearest time and the probability of it is quite small.;;;",,,,,,,,,
Investigate Azure Pipelines,IS-1503,44379,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anikitinDSR,esplinr,esplinr,20/Feb/20 11:50 PM,03/Apr/20 10:02 AM,28/Oct/23 2:49 AM,27/Feb/20 10:12 PM,,,,,,,,,,build-delivery-pipelines,,,,,0,,,,"We should evaluate if Azure Pipelines can meet the CI / CD needs of Indy SDK.

Questions to answer:
* Easy of use
* Platform and environment support
* Difficulty of launching an Indy Pool for CI testing",,,,,,,,,,,,,,,,,,,,,,,IS-1496,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1546,,,No,,Unset,No,,,"1|i01942:z",,,,Unset,Unset,Indy Aries 20.03,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),anikitinDSR,esplinr,sergey.minaev,,,,,,,,"26/Feb/20 11:56 PM;anikitinDSR;Results of small researches can be found 
https://docs.google.com/document/d/1uYVmVH-ZRul58bGIWbR3jOCd9qksPyKw9ONE_mcj38M/edit?usp=sharing
;;;","27/Feb/20 10:12 PM;sergey.minaev;Current vision is to use GitHub Actions and keep in the mind the option to migrate Azure Pipelines or Circle CI if needed;;;",,,,,,,,,,
Investigate Circle CI,IS-1504,44386,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.khoroshavin,sergey.khoroshavin,sergey.khoroshavin,21/Feb/20 10:11 PM,03/Apr/20 10:03 AM,28/Oct/23 2:49 AM,27/Feb/20 10:13 PM,,,,,,,,,,,,,,,0,,,,"We should evaluate if CircleCI can meet the CI / CD needs of Indy SDK.

Questions to answer:
 * Easy of use
 * Platform and environment support
 * Difficulty of launching an Indy Pool for CI testing",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1546,,,No,,Unset,No,,,"1|i01942:zi",,,,Unset,Unset,Indy Aries 20.03,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.khoroshavin,sergey.minaev,,,,,,,,,"22/Feb/20 2:04 AM;sergey.khoroshavin;In general CircleCI has same featureset as GitHub Actions, so answers to main questions will mostly refer to GitHub Actions research results. They even have a pretty straightforward migration guide, which also highlights some advantages of CircleCI over GitHub Actions: [https://circleci.com/docs/2.0/migrating-from-github]

*Easy of use*
 Generally as easy as GitHub Actions.

*Platform and environment support*
 All required platforms are supported on commercial plans, however on free plan MacOS is absent (but it looks like they do have plans to support it).
 Also it is possible to run on more powerful hardware if needed, for example linux vm runners can have up to 64 Gb RAM and 16 CPUs (GitHub Actions doesn't have this feature)

*Difficulty of launching an Indy Pool for CI testing*
 Generally same as with GitHub Actions - it is possible to run jobs on virtual machines with docker installed, so docker configurations of any complexity can be created.
 Also CircleCI allows caching docker layers between runs (GitHub doesn't allow this directly), which can significantly speed up build, however this feature is paid.

*Cost*
 When comparing open-source plans GitHub Actions seem to win hands down, as they are totally free (at least their [website|https://github.com/features/actions] says so). However it isn't clear what are limitations in this case. Also, when looking at commercial plans CircleCI is actually cheaper, especially for MacOS builds:
 [https://circleci.com/pricing/]
 [https://help.github.com/en/github/setting-up-and-managing-billing-and-payments-on-github/about-billing-for-github-actions]

 

*A bit more details on cost*

Circle CI billing is a bit more obscure due to ""credits"", so a little bit explanation here: according to pricing link 25000 credits cost $15, and one minute of cheapest linux, windows and macos vms cost 10, 40 and 50 credits respectively, and it is possible to run inside docker container for as little as 5 credits per minute. With that in mind *one minute of CircleCI machines cost*:
* Linux: $0.006, or $0.003 when run in Docker
* Windows: $0.024
* MacOS: $0.03

Compare that with *GitHub Action prices per minute*:

* Linux: $0.008
* Windows: $0.016
* MacOS: $0.08;;;","27/Feb/20 10:13 PM;sergey.minaev;Current vision is to use GitHub Actions and keep in the mind the option to migrate Azure Pipelines or Circle CI if needed;;;",,,,,,,,,,
Support submitting of Rich Schema txns in indy-vdr,IS-1505,44413,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anikitinDSR,ashcherbakov,ashcherbakov,26/Feb/20 1:21 PM,28/Apr/20 7:14 PM,28/Oct/23 2:49 AM,28/Apr/20 7:14 PM,,,,,,,,,,,,,,,0,,,,"Support `indy_build_rich_schema_object_request` as defined in https://github.com/hyperledger/indy-hipe/tree/master/text/0120-rich-schemas-common

*Acceptance criteria:*
* Implement `indy_build_rich_schema_object_request` in indy-vdr
* Cover by unit and integration tests (node implementation is already in master)

Note: we may need to substitute and resolve a Rich Schema (to have all the attributes from all the referenced and parent schemas) in order to create a Mapping object.
So, it makes sense to create a helper method for this",,,,,,,,,,,,,,,,,,,IS-1524,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1545,,,No,,Unset,No,,,"1|i018oh:i",,,,Unset,Unset,Indy Aries 20.04,Indy Aries 20.05,Indy Aries 20.06,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),anikitinDSR,ashcherbakov,sergey.minaev,,,,,,,,"27/Feb/20 6:30 PM;anikitinDSR;h1. PoA.
h3. What's need to implement.

According to description we need to realize Rich Schema client's logic on indy-vdr side.

Steps to implementation:
 * build_rich_schema_object_request method in libindy_vdr
 * cover it by unit tests
 * implement corresponding methods in wrappers (only python now exists);;;","30/Mar/20 3:29 PM;anikitinDSR;Link to PR:
[https://github.com/hyperledger/indy-vdr/pull/28]

 ;;;","28/Apr/20 7:13 PM;sergey.minaev;Merged and available in VDR master;;;",,,,,,,,,
Support getting Rich Schema txns in indy-vdr,IS-1506,44414,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,danielhardman,ashcherbakov,ashcherbakov,26/Feb/20 1:22 PM,22/May/20 3:33 AM,28/Oct/23 2:49 AM,22/May/20 3:33 AM,,,,,,,,,,,,,,,0,,,,"Support `indy_build_get_schema_object_by_id_request` and `indy_build_get_schema_object_by_metadata_request` as described in https://github.com/hyperledger/indy-hipe/tree/master/text/0120-rich-schemas-common


*Acceptance criteria:*
* Implement `indy_build_get_schema_object_by_id_request` in indy-vdr
* Implement `indy_build_get_schema_object_by_metadata_request` in indy-vdr
* Cover by unit and integration tests (node implementation is already in master)",,,,,,,,,,,,,,,,,,,IS-1524,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1545,,,No,,Unset,No,,,"1|i018oi:",,,,Unset,Unset,Indy Aries 20.04,Indy Aries 20.05,Indy Aries 20.06,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),anikitinDSR,ashcherbakov,danielhardman,,,,,,,,"30/Mar/20 3:29 PM;anikitinDSR;Link to PR:
[https://github.com/hyperledger/indy-vdr/pull/28];;;","22/May/20 3:33 AM;danielhardman;I saw that this was at Code Review status, but the PR had already been merged. It had already been code reviewed, but I went and did a new code review; this gave me some good opportunities to learn as well as a second set of eyes on the code.

Now moving to Done.;;;",,,,,,,,,,
Support issuance of W3C credentils in indy-credx ,IS-1507,44415,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,anikitinDSR,ashcherbakov,ashcherbakov,26/Feb/20 1:27 PM,31/Mar/20 10:21 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"*Acceptance criteria*
- Implement methods for issuance of W3C credentials with Rich Schema support
- Implementation should live in indy-credx (we consider options to do it in aries-credx as well)
- This can be a new set of methods (not overriding existing ones)
- aries-credx has a set of methods for encodings to be used
- output of new credentials issuance methods should we W3C compatible credentials (see https://www.w3.org/TR/vc-data-model/#zero-knowledge-proofs)
- If we do JSON-LD processing/substitution, then for MVP we may assume that we resolve the contexts (substitute the fields belonging to a context) belonging to the current ledger only. We are not going to resolve other Indy ledger's context, other blockchain's contexts, and Internet contexts.

*HIPEs/RFCs to use*
- https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential (to be updated)
- https://github.com/hyperledger/aries-rfcs/tree/master/concepts/0250-rich-schemas, https://github.com/hyperledger/indy-hipe/tree/master/text/0119-rich-schemas
- https://github.com/hyperledger/aries-rfcs/tree/master/concepts/0420-rich-schemas-common, https://github.com/hyperledger/indy-hipe/tree/master/text/0120-rich-schemas-common
- https://github.com/hyperledger/aries-rfcs/tree/master/features/0249-rich-schema-contexts, https://github.com/hyperledger/indy-hipe/tree/master/text/0138-rich-schema-context (to be updated)
- https://github.com/hyperledger/aries-rfcs/tree/master/features/0281-rich-schemas, https://github.com/hyperledger/indy-hipe/tree/master/text/0149-rich-schema-schema (to be updated)
- https://github.com/hyperledger/aries-rfcs/tree/master/features/0418-rich-schema-encoding (to be updated)
- Credentials format (TBD)

*Tips*
- It looks like no JSON-LD processing/substitution is needed for issuance
- Issuance protocol should be the same as for old schema, but use rich schema objects as inputs and output w3c compatible credentials
- For ZKP signing of credentials the following can be done:
  - sort attributes according to the 'rank' in mapping
  - encode value according to the specified encoding(s) in mappings (the same attribute can be encoded twice)
  - attributes can be identified by ranks in ZKP signature object

*Example of objects*
*Rich Schema*
{code}
{
""@id"" = ""id111"",
""@type"" = ""type111"",
""@context"" = <....>,
""attr1"": {
   ""attr2"": {
        ""attr3"" : <...>,
        ""attr4"" : <...>,
   },
   ""attr5"": <...>,   
   ""attr6"": <...>,
},
""attr7"": <...>,
""attr8"": <....>
}
{code} 

*Mapping*
It follows the same pattern, but can exclude some attributes.
It specifies a list of encodings and ranks (to define the order of how attributes should be signed). 
{code}
{
""@id"" = ""id111"",
""@type"" = ""type111"",
""@context"" = <....>,
""attr1"": {
   ""attr2"": {
        ""attr3"" : [
           {""enc"": <...>,
            ""rank"": 1}
        ],
   },
   ""attr6"":  [
           {""enc"": <...>,
            ""rank"": 2}
        ],
},
""attr8"":  [
           {""enc"": <...>,
            ""rank"": 3}
        ],
}
{code} 


*W3C credential*
Follows the same pattern of attributes (as in Mapping):
{code}
{
""@id"" = ""id111"",
""@type"" = ""type111"",
""@context"" = <....>,
""credentialSubject"": {
""attr1"": {
   ""attr2"": {
        ""attr3"" :<...>,
   },
   ""attr6"": :<...>,
},
""attr8"": :<...>,
}
}
{code} ",,,,,,,,,,,,,,,,,,,IS-1524,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1545,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06c",,,,Unset,Unset,Indy Aries 20.06,,,,,(Please add steps to reproduce),13.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashcherbakov,,,,,,,,,,,,,,,,,,,,,
Support presentation of W3C credentials in indy-credx,IS-1508,44416,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,danielhardman,ashcherbakov,ashcherbakov,26/Feb/20 1:27 PM,22/May/20 8:31 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"*Acceptance criteria*
- Implement methods for presentation workflow for W3C credentials with Rich Schema support
- Implementation should live in indy-credx (we consider options to do it in aries-credx as well)
- This can be a new set of methods (not overriding existing ones)
- presentation needs to be in W3C compatible format (see https://www.w3.org/TR/vc-data-model/#zero-knowledge-proofs)
- builders for presentation definition are not required (pres def can be passed as a JSON the same way proof request is passed now)
- we are going to support Presentation Definition version 0.5 which will have feature parity with existing proof request. Pres Def is going to be evolved, so that needs to be taken into account in implementation (different strategies?)
- If we do JSON-LD processing/substitution, then for MVP we may assume that we resolve the contexts (substitute the fields belonging to a context) belonging to the current ledger only. We are not going to resolve other Indy ledger's context, other blockchain's contexts, and Internet contexts.

*HIPEs/RFCs to use*
- https://github.com/hyperledger/aries-rfcs/tree/master/features/0037-present-proof (to be updated)
- https://github.com/hyperledger/aries-rfcs/tree/master/concepts/0250-rich-schemas, https://github.com/hyperledger/indy-hipe/tree/master/text/0119-rich-schemas
- https://github.com/hyperledger/aries-rfcs/tree/master/concepts/0420-rich-schemas-common, https://github.com/hyperledger/indy-hipe/tree/master/text/0120-rich-schemas-common
- https://github.com/hyperledger/aries-rfcs/tree/master/features/0249-rich-schema-contexts, https://github.com/hyperledger/indy-hipe/tree/master/text/0138-rich-schema-context (to be updated)
- https://github.com/hyperledger/aries-rfcs/tree/master/features/0281-rich-schemas, https://github.com/hyperledger/indy-hipe/tree/master/text/0149-rich-schema-schema (to be updated)
- https://github.com/hyperledger/aries-rfcs/tree/master/features/0418-rich-schema-encoding (to be updated)
- Mapping (TBD)
- CredDef (TBD)
- PresDef (TBD)
- Credentials format (TBD)
- Presentation format (TBD)

",,,,,,,,,,,,,,,,,,,IS-1524,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1545,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06vs",,,,Unset,Unset,,,,,,(Please add steps to reproduce),13.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashcherbakov,,,,,,,,,,,,,,,,,,,,,
Use URSA instead of sodiumoxide,IS-1509,44458,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,28/Feb/20 10:57 PM,26/Mar/20 4:08 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,Will help with Indy-VDR dependency problems.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzl",,,,Unset,Unset,Indy Aries 20.04,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"23/Mar/20 9:07 PM;Artemkaaas;In the current state, URSA doesn't provide the functions required for switching from`sodiumoxide`.
Here is part of missing encryption:
* `crypto_box_seal` and `crypto_box_easy`  - are used for `indy_pack`

* `pwhash_argon2i13` - is used for wallet keys generation
* `ed25519` key derivitation from seed
...;;;",,,,,,,,,,,
Create an RFC for Structured Message,IS-1510,44459,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,28/Feb/20 11:19 PM,27/Mar/20 10:51 PM,28/Oct/23 2:49 AM,,,,,,,,,,,aries,,,,,0,,,,"The implementation LibVCX needs to be documented as an Aries standard, or needs to be migrated to an Aries standard.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06vu",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"01/Mar/20 3:22 PM;esplinr;The Aries Approach is the Question  Answer protocol:

https://github.com/hyperledger/aries-rfcs/tree/master/features/0113-question-answer

This is currently supported in Evernym Verity. ;;;",,,,,,,,,,,
Create an RFC for Connection Redirect,IS-1511,44460,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,echo.harker,esplinr,esplinr,28/Feb/20 11:22 PM,28/Mar/20 12:39 AM,28/Oct/23 2:49 AM,,,,,,,,,,,aries,,,,,0,,,,"The implementation of Connection Redirect from LibVCX needs to be documented as an RFC, or issues should be created to migrate it to the approach taken by RFCs.

We need to incorporate our thinking with [~swcurran]'s work on Out-of-Band messages:
https://github.com/hyperledger/aries-rfcs/pull/434

Discussion in Aries WG  recording 2020-02-26-B:
https://wiki.hyperledger.org/pages/viewpage.action?pageId=29035452",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06i",,,,Unset,Unset,Indy Aries 20.06,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Ubuntu 18.04 artifacts may be overridden by 16.04 artifacts,IS-1512,44468,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,VladimirWork,sergey.minaev,sergey.minaev,02/Mar/20 2:07 AM,04/Mar/20 9:58 PM,28/Oct/23 2:49 AM,04/Mar/20 9:54 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,IS-1495,,,,,,,IS-1486,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo8yu",,,,Unset,Unset,Indy Aries 20.04,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,VladimirWork,,,,,,,,,"04/Mar/20 8:34 PM;sergey.minaev;Available at 1.14.3 RC 127

Recommendation for testing: 
* download artifacts of the same version for xenial and bionic
* unpack deb files
* make sure that content is different;;;","04/Mar/20 9:58 PM;VladimirWork;They are different and depend on different packages (libzmq5, libsodium18, libssl1.0.0 vs libsodium23, libzmq5, libssl1.1).;;;",,,,,,,,,,
Create PoA for Anoncreds/Revocation 2.0 support,IS-1513,44473,,Task,Code Review,IS,Indy SDK,software,resplin,,,Medium,,sergey.minaev,sergey.minaev,sergey.minaev,02/Mar/20 7:51 PM,01/Apr/20 11:13 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1531,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo8yz",,,,Unset,Unset,Indy Aries 20.04,Indy Aries 20.05,Indy Aries 20.06,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Minimal CI/CD pipelines for Indy VDR,IS-1514,44474,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,02/Mar/20 7:58 PM,30/Mar/20 5:49 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,Use GitHub Actions,,,,,,,,,,,,,,,,,,,IS-1524,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06f",,,,Unset,Unset,Indy Aries 20.06,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Port back ATTRIB fix from Indy VDR to libindy,IS-1515,44475,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,sergey.minaev,sergey.minaev,02/Mar/20 7:59 PM,27/Mar/20 10:44 PM,28/Oct/23 2:49 AM,24/Mar/20 1:22 AM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1499,,,No,,Unset,No,,,"1|i018og:r",,,,Unset,Unset,Indy Aries 20.04,Indy Aries 20.05,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,VladimirWork,,,,,,,,"11/Mar/20 9:10 PM;Artemkaaas;Changes: Updated `_parse_reply_for_proof_value`  function for case of GET_TXN of ATTRIB transaction. encode `raw` and `enc` values.

Done in PR: [https://github.com/hyperledger/indy-sdk/pull/2129];;;","17/Mar/20 9:34 PM;VladimirWork;Waiting for build with fix.;;;","23/Mar/20 9:29 PM;sergey.minaev;Available in master 1524;;;","24/Mar/20 1:22 AM;VladimirWork;Build Info:
libindy 1.14.2~1524

Steps to Validate:
https://github.com/VladimirWork/indy-test-automation/blob/0b9b5b1de4c84c08626bddaf3bb947d399181020/system/draft/test_misc.py#L3117

Actual Results:
We can perform ATTRIB state proof reading using GET_TXN for hash, raw and enc values.;;;",,,,,,,,
Pluggable State proofs for Indy VDR,IS-1516,44476,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,02/Mar/20 8:00 PM,30/Mar/20 3:26 PM,28/Oct/23 2:49 AM,30/Mar/20 3:26 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1499,,,No,,Unset,No,,,"1|i018og:w",,,,Unset,Unset,Indy Aries 20.04,Indy Aries 20.05,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"16/Mar/20 2:15 PM;Artemkaaas;Indy-Vdr changes: accept optional boxed Rust function to parse custom state proof on handle request functions.
Indy-Vdr PR: [https://github.com/hyperledger/indy-vdr/pull/20]

Indy changes: defined and passed custom function for a registered callback.
Libindy PR:  [https://github.com/hyperledger/indy-sdk/pull/2120];;;","30/Mar/20 3:25 PM;sergey.minaev;Available in master VDR, covered by minimal tests. Would be tested manually in addition in scope of global IS-1499 validation;;;",,,,,,,,,,
Integration tests for Indy VDR,IS-1517,44477,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,02/Mar/20 8:13 PM,31/Mar/20 10:17 PM,28/Oct/23 2:49 AM,31/Mar/20 10:17 PM,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,IS-1524,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1499,,,No,,Unset,No,,,"1|i019uq:",,,,Unset,Unset,Indy Aries 20.05,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"31/Mar/20 10:07 PM;Artemkaaas;Added the set of integration tests into Indy-VDR: https://github.com/hyperledger/indy-vdr/pull/32;;;",,,,,,,,,,,
"Aries: support protocol types defined at HTTPS, not did:sov",IS-1518,44478,,Task,Code Review,IS,Indy SDK,software,resplin,,,Medium,,Artemkaaas,sergey.minaev,sergey.minaev,02/Mar/20 8:36 PM,31/Mar/20 10:19 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"RFC:
https://github.com/hyperledger/aries-rfcs/tree/master/features/0348-transition-msg-type-to-https

AC:
* be able to parse both variants
* send did:sov types
* update status section in the RFC doc ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06",,,,Unset,Unset,Indy Aries 20.05,Indy Aries 20.06,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"17/Mar/20 11:57 PM;Artemkaaas;Changes: Updated MessageType deserializer to handle both variants.
PR: [https://github.com/hyperledger/indy-sdk/pull/2136]

Aries RFC PR: [https://github.com/hyperledger/aries-rfcs/pull/447];;;",,,,,,,,,,,
VCX protocols compatibility ,IS-1519,44514,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,06/Mar/20 5:07 PM,29/Mar/20 8:03 PM,28/Oct/23 2:49 AM,29/Mar/20 8:03 PM,,,,,,,,,,,,,,,0,,,,"There is a lack of compatibility between Aries protocol and Proprietary.
We need to update library to make them compatible. 

Here is a document describing the problem in more details:  [https://docs.google.com/document/d/1feASxDPDpbRYm9G2bq0RdMj8oz0iZz-bgf5-18KyWIk/edit?usp=sharing]

It was decided to choose option 3 to provide the fix:
{code:java}
create Credential and Proof objects in `pending` state. Redirect to the `Proprietary` or `Aries` objects on received connection handle.

{code}
 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i019mi:",,,,Unset,Unset,Indy Aries 20.04,Indy Aries 20.05,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"10/Mar/20 11:48 PM;Artemkaaas;Changes:  
   Added a new enum variant `Pending` for IssuerCredentials/Credentials/Proofs/DisclosedProofs objects. 
   Initially create  Pending objects and cast them to V1/V3 on received connection handle.

PR: [https://github.com/hyperledger/indy-sdk/pull/2127];;;","29/Mar/20 8:03 PM;sergey.minaev;Available in 1.15.0 stable;;;",,,,,,,,,,
Release Indy SDK 1.15.0,IS-1520,44532,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,KitHat,sergey.minaev,10/Mar/20 8:04 PM,27/Mar/20 10:04 PM,28/Oct/23 2:49 AM,27/Mar/20 10:04 PM,,,,,,,,1.14.4,,,,,,,0,,,,"*Release Goal*
Release everything that is ready. 

*Acceptance Criteria*
Regular instructions:
* Code is tested
* Review upstream releases to decide what should be included in this build
** Ursa
* Build is produced with automated CI / CD
** Official build is tagged as released in Git
** Official builds should be the only builds that are not marked in GitHub as ""pre-release""
* Prepare basic documentation on new features
* Prepare the Release Notes
** Link to the documentation on new features
** Stored as a CHANGELOG.md in the root of the repo
** Latest release at the top, above the release notes for all previous versions
* The release should be on GitHub “Releases” tab.
** Release notes should be in the “Description"" field of the GitHub release artifact
* The release is marked in JIRA
* Add the correct fixVersion to included issues
* Enable others to use the release:
** Email stakeholders with links to the artifacts and release notes",,,,,,,,,,,,,,,,,,,,,,,IS-1495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|i019ub:",,,,,,Indy Aries 20.03,Indy Aries 20.04,Indy Aries 20.05,,,,3.0,,,,,,,,,,,,Artemkaaas,esplinr,KitHat,sergey.minaev,VladimirWork,,,,,,"26/Mar/20 5:55 PM;VladimirWork;RC 1.15.0~144 passes acceptance testing.;;;",,,,,,,,,,,
Encoded value causes ParseIntError: Overflow,IS-1521,44537,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,VladimirWork,VladimirWork,11/Mar/20 10:58 PM,08/Aug/20 11:20 AM,28/Oct/23 2:49 AM,08/Aug/20 11:20 AM,,,,,,,,1.15.0,,,,,,,0,,,,"Build Info:
libindy 1.14.4~131-xenial

Steps to Reproduce:
https://github.com/VladimirWork/indy-test-automation/blob/caed7ac001aaa563c29742ee0473e6ed8d70df2d/system/draft/test_misc.py#L2078

Actual Results:
{noformat}
2020-03-11 16:46:19,677 	src/services/anoncreds/prover.rs:322 | attribute_satisfy_predicate >>> predicate: PredicateInfo { name: ""age"", p_type: GE, p_value: 18, restrictions: None, non_revoked: None }, attribute_value: ""100000000000000000000000000000000000000000000000000000009""
2020-03-11 16:46:19,678 	src/api/anoncreds.rs:1613 | prepare_result_1: >>> Err(IndyError { inner: ParseIntError { kind: Overflow }

Credential attribute value """"100000000000000000000000000000000000000000000000000000009"""" is invalid

Invalid structure })
2020-03-11 16:46:19,678 	src/api/anoncreds.rs:1613 | indy_prover_get_credentials_for_proof_req: result: """"
2020-03-11 16:46:19,678 _get_error_details: >>>
2020-03-11 16:46:19,678 	src/api/mod.rs:73 | indy_get_current_error >>> error_json_p: 0x7f2f32b094d8
2020-03-11 16:46:19,678 	src/api/mod.rs:78 | indy_get_current_error: <<<
2020-03-11 16:46:19,678 _get_error_details: <<< error_details: {'backtrace': '', 'message': 'Error: Invalid structure\n  Caused by: Credential attribute value """"100000000000000000000000000000000000000000000000000000009"""" is invalid\n  Caused by: number too large to fit in target type\n'}
{noformat}

Expected Results:
There should be no errors.",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1491,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii0i",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sklump,VladimirWork,,,,,,,,,"01/Apr/20 11:09 PM;sklump;In addition, indy-sdk does not verify proofs with revealed zero-valued attributes:
Indy-sdk 1.15.0 still has a problem with zero-valued credentials. Apply
```
--- a/wrappers/python/tests/interation/test_interaction.py
+++ b/wrappers/python/tests/interation/test_interaction.py
@@ -17,6 +17,7 @@ async def test_anoncreds_revocation_interaction_test_issuance_by_demand(pool_nam
     issuer_wallet_handle = wallet_handle

     prover_did, _ = identity_my1
+    ZERO = '0'

     #  Prover Creates Wallet and Get Wallet Handle
     prover_wallet_config = '{""id"":""prover_wallet""}'
@@ -94,7 +95,7 @@ async def test_anoncreds_revocation_interaction_test_issuance_by_demand(pool_nam
     cred_values_json = json.dumps({
         ""sex"": {
             ""raw"": ""male"", ""encoded"": ""5944657099558967239210949258394887428692050081607692519917050011144233115103""},
-        ""name"": {""raw"": ""Alex"", ""encoded"": ""1139481716457488690172217916278103335""},
+        ""name"": {""raw"": ZERO, ""encoded"": ZERO},
         ""height"": {""raw"": ""175"", ""encoded"": ""175""},
         ""age"": {""raw"": ""28"", ""encoded"": ""28""}
     })
@@ -217,7 +218,7 @@ async def test_anoncreds_revocation_interaction_test_issuance_by_demand(pool_nam
     (rev_reg_id, rev_reg_json, identifier) = await ledger.parse_get_revoc_reg_response(get_revoc_reg_response)

     # Verifier verify proof
-    assert 'Alex' == proof['requested_proof']['revealed_attrs']['attr1_referent']['raw']
+    assert ZERO == proof['requested_proof']['revealed_attrs']['attr1_referent']['raw']

     schemas_json = json.dumps({schema_id: json.loads(schema_json)})
     credential_defs_json = json.dumps({cred_def_id: json.loads(cred_def_json)})
```
to `wrappers/python/tests/test_interation/test_interaction.py` and observe. In particular,
```
E       indy.error.AnoncredsProofRejected

../../indy/anoncreds.py:1756: AnoncredsProofRejected
```

Wow, what a mess that formatting makes. The gist is to replace Alex's name with raw and encoded ""0"" strings.;;;","03/Apr/20 7:01 PM;sklump;Kindly ignore the above comment. It is wrong. Indy-sdk 1.15.0 fixes this bug.;;;",,,,,,,,,,
Libindy fails in case ProofRequest contains restrictions as empty array,IS-1522,44543,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,VladimirWork,Artemkaaas,Artemkaaas,12/Mar/20 2:21 PM,17/Mar/20 9:34 PM,28/Oct/23 2:49 AM,17/Mar/20 9:34 PM,,,,,,,,,,,,,,,0,,,,"From Kelly in the incident channel:


{code:java}
I had mentioned how things seem to always work from VUI and @mike.bailey mentioned how VUI does not create proof requests with restrictions so I tried the following:
I have a script that when run against C.Me 1.1.3.1019 it does not return the proof to the verifier. The proof request looks like this:
proof_attrs = [{ ""name"": ""First Name"", ""restrictions"": [] }]
If I remove the restrictions it works. The proof is returned to the verifier.
proof_attrs = [{ ""name"": ""First Name""}]
{code}
 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i019uo:",,,,Unset,Unset,Indy Aries 20.04,Indy Aries 20.05,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,VladimirWork,,,,,,,,,"12/Mar/20 5:26 PM;Artemkaaas;Changes:  Updated wql `optimize` function to remove empty or/and queries/subqueries. Added wql `optimize` calling before passing to wallet storage.
Fixed in PR: [https://github.com/hyperledger/indy-sdk/pull/2130];;;","17/Mar/20 2:22 PM;Artemkaaas;Build version: rc 1.14.4~137;;;","17/Mar/20 9:34 PM;VladimirWork;Build Info:
1.14.4~137-xenial

Steps to Validate:
https://github.com/VladimirWork/indy-test-automation/blob/01e17c17ba3d8dac58a232535d0a5449bf920c73/system/draft/test_misc.py#L2078

Actual Results:
Test with empty list as restrictions passes.;;;",,,,,,,,,
indy-vdr needs to have a helper method to resolve a Rich Schema for creation of a Mapping object,IS-1523,44556,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,ashcherbakov,ashcherbakov,13/Mar/20 6:47 PM,27/Mar/20 10:54 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"A Rich Schema may use contexts (as namespaces) and reference and/or extend other schemas. 
A Mapping object needs to define the order for all the attributes including parent and referenced ones. 
So, it makes sense to create a helper method that can resolve a Schema by adding all parent and referenced attributes. Context substitution is not required, but may be convenient as well.

*Acceptance criteria:*
- indy-vdr needs to have a helper method to resolve a Rich Schema
- it takes a Rich Schema as an input and outputs a resolved Schema containing all the attributes from all parent and referenced Schemas

Note: this helper method looks quite generic, so it may belong to the aries shared library. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1545,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06wy",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashcherbakov,,,,,,,,,,,,,,,,,,,,,
Support Rich Schema calls in libindy,IS-1524,44557,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,ashcherbakov,ashcherbakov,13/Mar/20 6:52 PM,27/Mar/20 10:54 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"IS-1505, IS-1506, IS-1507 and IS-1508 add support of Rich Schema objects in indy-vdr and indy-credx.
We need to be able to call Rich Schema and W3C credential API from libindy.

*Acceptance criteria*:
- Add API calls for Rich Schema and W3C credential functionality in libindy 
- Support this API in libindy wrappers",,,,,,,,,,,,IS-1505,IS-1506,IS-1507,IS-1508,IS-1525,IS-1514,IS-1517,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1545,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06ww",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashcherbakov,,,,,,,,,,,,,,,,,,,,,
PoC usage of indy-credx in libindy,IS-1525,44558,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,ashcherbakov,ashcherbakov,13/Mar/20 6:53 PM,27/Mar/20 10:54 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,IS-1524,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1545,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06wu",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashcherbakov,,,,,,,,,,,,,,,,,,,,,
Test Aries support in libvcx against Aries Test Suite,IS-1526,44562,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ashcherbakov,ashcherbakov,13/Mar/20 10:59 PM,29/Mar/20 8:07 PM,28/Oct/23 2:49 AM,29/Mar/20 8:07 PM,,,,,,,,,,,,,,,0,,,,"Here is the Indy branch we can do testing: [https://github.com/Artemkaaas/indy-sdk/tree/is-1450-vcx-against-test-suite]
 This branch contains a function that allows creating test connections by skipping protocol steps.

I used a local pool network: [https://github.com/hyperledger/indy-sdk#how-to-start-local-nodes-pool-with-docker]

I used Dummy-cloud-agent: [https://github.com/hyperledger/indy-sdk/tree/master/vcx/dummy-cloud-agent]

The Corresponding Aries-Test-Suite branch containing compatibility fixes: [https://github.com/Artemkaaas/aries-protocol-test-suite/tree/vcx-against-test-suite]
 It should use the same pool ledger as vcx.

Vcx Steps:
 * install the last stable Libndy and Libnullpay: [https://github.com/hyperledger/indy-sdk#ubuntu-based-distributions-ubuntu-1604-and-1804]
 * build LibVCX from the source. `cd vcx/libvcx && cargo build` — copy target/debug/libvcx.so to /usr/lib or /usr/local/lib
 * Run agent with `cd vcx/dummy-cloud-agent && cargo run config/sample-config.json`.
 * go to vcx/wrappers/python3/demo – update `provisionConfig` agency related parameters to point on dummy agent address.
 * run faber or alice script depending on the running aries-test-suite test. `python3 faber.py` `python3 alice.py`.

Aries testsuite:
 * Edit config.toml `tests` section to select running tests.
 * Run with `protocoltest -s`",,,,,,,,,,,,,,,,,,,,,,,,,,IS-1527,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii04",,,,Unset,Unset,Indy Aries 20.05,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ashcherbakov,,,,,,,,,"24/Mar/20 12:06 AM;Artemkaaas;Indy-sdk/Libvcx branch: [https://github.com/Artemkaaas/indy-sdk/tree/is-1450-vcx-against-test-suite]
 Aries-test-suite branch: [https://github.com/Artemkaaas/aries-protocol-test-suite/tree/vcx-against-test-suite]
 Agent: Dummy-cloud-agent
 Pool: local pool ledger
Backchannel: manual 
Note: aries-static-agent-python uses `return_route` concept which isn't Aries Interop V1 and can be a big issue for other agents. 

Tests:
{code:java}
tests = [
     ""trust_ping*"",
     ""present-proof*"",
     ""issue-credential*"",
     ""discover-features.*"",
     ""connections*"",
]
{code}
Testing Result:
{code:java}
========================================================================================================================== Interop Profile =========================================================================================================================={
  ""@type"": ""Aries Test Suite Interop Profile v1"",
  ""suite_version"": ""0.1.0"",
  ""under_test_name"": ""MyAgent"",
  ""under_test_version"": ""1.0.0"",
  ""test_time"": ""2020-03-23T13:05:42"",
  ""results"": [
    {
      ""name"": ""connections,1.0,inviter,can-be-inviter"",
      ""description"": ""Test a connection as started by the agent under test."",
      ""pass"": true
    },
    {
      ""name"": ""connections,1.0,inviter,response-pre-sig-verify-valid"",
      ""description"": ""Response before signature verification is valid."",
      ""pass"": true
    },
    {
      ""name"": ""connections,1.0,inviter,response-post-sig-verify-valid"",
      ""description"": ""Response after signature verification is valid."",
      ""pass"": true
    },
    {
      ""name"": ""connections,1.0,inviter,response-thid-matches-request"",
      ""description"": ""Response's thread has thid matching id of request."",
      ""pass"": true
    },
    {
      ""name"": ""connections,1.0,inviter,responds-to-ping"",
      ""description"": ""Inviter responds to trust ping after connection protocol completion."",
      ""pass"": true
    },
    {
      ""name"": ""connections,1.0,invitee,can-be-invitee"",
      ""description"": ""Test a connection as started by the suite."",
      ""pass"": true
    },
    {
      ""name"": ""discover-features,1.0,requester,query-all"",
      ""description"": ""The agent under test queries all features of the test suite."",
      ""pass"": true
    },
    {
      ""name"": ""discover-features,1.0,requester,query-some"",
      ""description"": ""The agent under test queries all features of the test suite."",
      ""pass"": true
    },
    {
      ""name"": ""discover-features,1.0,responder,disclose-all"",
      ""description"": ""Query all features of the agent under test."",
      ""pass"": true
    },
    {
      ""name"": ""discover-features,1.0,responder,disclose-some"",
      ""description"": ""Query some features of the agent under test."",
      ""pass"": true
    },
    {
      ""name"": ""issue-credential,1.0,issuer,as-issuer"",
      ""description"": ""The agent under test initiates the issuance flow with an offer."",
      ""pass"": true
    },
    {
      ""name"": ""issue-credential,1.0,holder,as-holder"",
      ""description"": ""The test suite initiates the issuance flow wth an offer."",
      ""pass"": true
    },
    {
      ""name"": ""present-proof,1.0,prover,as-prover"",
      ""description"": ""The test suite begins the present-proof flow by sending a request-presentation message to the agent-under-test."",
      ""pass"": true
    },
    {
      ""name"": ""present-proof,1.0,verifier,as-verifier"",
      ""description"": ""The agent-under-test begins the present-proof flow by sending a request-presentation message to the agent-under-test."",
      ""pass"": true
    },
    {
      ""name"": ""trust_ping,0.1,receiver,responds-to-trust-ping"",
      ""description"": ""Test that subject responds to trust pings."",
      ""pass"": true
    },
    {
      ""name"": ""trust_ping,0.1,sender,can-send-trust-ping"",
      ""description"": ""Test that subject sends a trust ping."",
      ""pass"": true
    }
  ]
}
{code};;;",,,,,,,,,,,
LibVCX should be tested against the latest StreetCred app and verify that it stores credentials that LibVCX issues,IS-1527,44563,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ashcherbakov,ashcherbakov,13/Mar/20 11:01 PM,27/Mar/20 10:05 PM,28/Oct/23 2:49 AM,27/Mar/20 10:05 PM,,,,,,,,,,,,,,,0,,,,"Here is the branch we can do testing: [https://github.com/Artemkaaas/indy-sdk/tree/feature/streetcred-compatibilkity]

I used BuilderNet pool network.

I used Dummy-cloud-agent: [https://github.com/Artemkaaas/indy-sdk/tree/feature/streetcred-compatibilkity/vcx/dummy-cloud-agent]

Streetcred Mobile app is available in app store. `Streetcred Identity Wallet`.

Dummy  Agent Mobile app must be at the same WiFi network as PC to be reachable.

Steps:
 * install the last stable Libndy and Libnullpay: [https://github.com/hyperledger/indy-sdk#ubuntu-based-distributions-ubuntu-1604-and-1804]
 * build LibVCX from the source.  The branch contains some changes regarding DIDDoc preparation/validation (they need to establish connection).
 `cd vcx/libvcx && cargo build` — copy target/debug/libvcx.so to /usr/lib or /usr/local/lib

 * run dummy-agency: cd vcx/dummy-cloud-agent.
 Update config/sample-config.json to use IP instead of the localhost.  use ngrok to make it public available.
 Run agent with `cargo run config/sample-config.json`.
 * go to vcx/wrappers/python3/demo – update `provisionConfig`  agency related parameters to point on dummy agent address.

 * run faber with python3 faber.py.
 It will print invite json. 
 You need to base64 encode invite -> put encoded string into [http://192.168.54.174:8080?c_i=|http://192.168.54.174:8080/?c_i=]<HERE> -> convert result to QR code. it Scan with Streetcred app.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1526,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i019up:",,,,Unset,Unset,Indy Aries 20.05,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ashcherbakov,,,,,,,,,"24/Mar/20 9:11 PM;Artemkaaas;Results:  Libvcx can be used as Inviter/Issuer/Verifier against StreetCred mobile app. 
We were been able to pass vcx/python3/demo/faber.py demo against the app but we had to implement some adaptations that are listed in IS-1539 should be revised later.
PR: [https://github.com/hyperledger/indy-sdk/pull/2140];;;",,,,,,,,,,,
Update installation guide document for Android,IS-1528,44586,,Improvement,Code Review,IS,Indy SDK,software,resplin,,,Low,,sergey.minaev,thomas_kim,thomas_kim,16/Mar/20 6:53 PM,22/Apr/20 5:12 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,documentation,,,"There are broken hyperlinks and outdated descriptions for installing libraries (the libindy and the libvcx) on android platform. 

Also, it needs to address some required libraries (libc++_shared.so and libjnidispatch.so) in order to run an android application. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01a0z:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),thomas_kim,,,,,,,,,,"22/Apr/20 5:12 PM;thomas_kim;[https://github.com/hyperledger/indy-sdk/pull/2132]

I think I can close the issue because the PR is merged into master branch already.

However, I don't know the process of this project, so I just assign it to you. 

Thanks.

 ;;;",,,,,,,,,,,
"NodeJS wrapper for libVCX fails for ""names"" restriction",IS-1529,44588,,Bug,To Test,IS,Indy SDK,software,resplin,,,Medium,,Artemkaaas,sergey.minaev,sergey.minaev,16/Mar/20 11:19 PM,02/Oct/20 6:11 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifo8yyi",,,,Unset,Unset,Indy Aries 20.05,Indy Aries 20.06,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,,,,,,,,,"17/Mar/20 3:50 PM;Artemkaaas;Changes: Vcx Nodejs wrapper defines types/structure for the most parameters. Updated definition of  `IProofAttr` structure to contain `names` field.
PR: [https://github.com/hyperledger/indy-sdk/pull/2133];;;",,,,,,,,,,,
Update Aries RFC to mention libindy/libvcx implementation of Aries protocols,IS-1530,44621,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,ashcherbakov,ashcherbakov,20/Mar/20 5:04 PM,20/Mar/20 5:04 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"*Acceptance criteria:*
Every Aries RFC which is implemented in libindy/libvcx needs to be updated to mention this implementation in `Implementations` section. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii16",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashcherbakov,,,,,,,,,,,,,,,,,,,,,
"Support Anoncreds 2.0 in indy-credx, libindy and libvcx",IS-1531,44627,,Epic,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,23/Mar/20 4:01 AM,23/Mar/20 4:08 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-3,,Anoncreds 2.0,To Do,No,,Unset,No,,,"1|i01a63:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
PoC demo test flows for Anoncreds 2.0 at the top of URSA,IS-1532,44628,,New Feature,Code Review,IS,Indy SDK,software,resplin,,,Medium,,brentzundel,sergey.minaev,sergey.minaev,23/Mar/20 4:02 AM,27/Oct/20 9:56 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,Implement full-functional demo for 3 roles (Issure Holder Verifier) at the top of URSA without revocation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1531,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii064",,,,Unset,Unset,Indy Aries 20.06,,,,,(Please add steps to reproduce),13.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),brentzundel,montasser,sergey.minaev,,,,,,,,"10/Apr/20 6:28 AM;brentzundel;The BBS+ signatures as currently implemented in Ursa are not defined according to the roles of Issuer, Holder, and Verifier, but the API is at a rather lower level.

 

To do this correctly, the first step should be to introduce that framing, and then a demo that uses that framing would actually be beneficial. 

I will work with Mike Lodder to implement the framing around BBS+ signatures and then write the demo code.;;;",,,,,,,,,,,
PoC demo test flows for Revocation 2.0 at the top of URSA,IS-1533,44629,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,23/Mar/20 4:03 AM,27/Mar/20 10:54 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,Implement full-functional demo for 3 roles (Issure Holder Verifier) at the top of URSA with Revocation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1531,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06v6",,,,Unset,Unset,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Implement medium-level helpers for Anonreds 2.0 in IndyCredX,IS-1534,44630,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,23/Mar/20 4:04 AM,27/Mar/20 10:49 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"For Anoncreds 1.0 there are helpers methods in libindy which are map high-level flow (issue credential, provide complex proof, verify complex proof) to low-level math (create proof from particular credential for particular disclosed attrs).
The same bridge should be provided by IndyCredX",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1531,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06vo",,,,Unset,Unset,,,,,,(Please add steps to reproduce),13.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Integrate Anoncreds 2.0 IndyCredX into libindy,IS-1535,44631,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,23/Mar/20 4:04 AM,27/Mar/20 10:49 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1531,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06w",,,,Unset,Unset,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Support Anoncreds 2.0 in libvcx,IS-1536,44632,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,23/Mar/20 4:05 AM,27/Mar/20 10:49 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1531,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06wc",,,,Unset,Unset,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Tails-free optimization of Anoncreds 2.0 in libvcx,IS-1537,44633,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,23/Mar/20 4:05 AM,21/Apr/20 1:15 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"There is no Tails in revocation 2.0 but there are Merkle Tree. While they are sparse by default, the size may be significant.

Some optimization is required to have a right balance between performance and size to store",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1531,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06wo",,,,Unset,Unset,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
IndyNode txn for Anoncreds 2.0,IS-1538,44634,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,23/Mar/20 4:07 AM,27/Mar/20 10:49 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1531,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06vc",,,,Unset,Unset,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,,,,,,,,,,,,,,,,,,,,,
Libvcx: revise changes needed for Streetcred compatibility,IS-1539,44643,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,Artemkaaas,Artemkaaas,24/Mar/20 9:07 PM,24/Mar/20 9:08 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"* Use fixed constants as id for attachment instead of UUID: 
{code:java}
{
    libindy-cred-offer-0,
    libindy-cred-request-0
    libindy-cred-0,
    libindy-request-presentation-0
    libindy-presentation-0
}
{code}

 * Allowed to omit `id` field in DIDDoc:  [https://github.com/hyperledger/indy-sdk/pull/2140/files#diff-c5e1def3fd62630ebd531c701f06f252R150]

 * Used`routingKeys` inplace instead of references: [https://github.com/hyperledger/indy-sdk/pull/2140/files#diff-c5e1def3fd62630ebd531c701f06f252R124]

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01a7f:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,,,,,,,,,,,,,,,,,,,,,
Libvcx non agency mode for `aries` protocol,IS-1540,44649,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,Artemkaaas,Artemkaaas,25/Mar/20 2:20 PM,25/Mar/20 2:20 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Libvcx provides the set API that allows working in an agency independent way. 
They return messages in every state and accept the next message as a parameter on the `update_state` function.
The current implementation of  `aries` `protocol_version: 3.0` returns and accepts messages in the proprietary (old) format (to save backward compatibility). That is why non-agency mode is not allowed for `aries` protocol now.

We can implement `prtocol_version: 4.0` that will represent a strict `aries` protocol. If this version is set all functions return and accept `aries` style message. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06x",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,,,,,,,,,,,,,,,,,,,,,
Migrate to new BLS in Ursa 0.4.0,IS-1541,44691,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,27/Mar/20 10:21 PM,27/Mar/20 10:23 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"*Acceptance Criteria*
* Confirm the correctness of the algorithm in Ursa
* Support both the old and new hashing algorithm in Indy-VDR

*Notes*
* Once most of the clients have upgraded to a version of LibIndy that supports both algorithms, we can deprecate the old algorithm in Indy Node.",,,,,,,,,,,,,,,,,,,,,,,INDY-2361,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06v",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Complete integration of Indy-VDR inside of LibIndy,IS-1542,44692,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,Artemkaaas,esplinr,esplinr,27/Mar/20 10:46 PM,31/Mar/20 10:20 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libindy,,,,,0,,,,"*Acceptance Criteria*
* Integration with Indy Node CI tests",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1499,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06a",,,,Unset,Unset,Indy Aries 20.06,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),danielhardman,esplinr,,,,,,,,,,,,,,,,,,,,
Migrate LibIndy pipeline from Jenkins to GitHub Actions,IS-1543,44693,,Task,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,27/Mar/20 10:48 PM,27/Mar/20 10:55 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06vx",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Rich Shema / W3C demo in indy-credx,IS-1544,44694,,Task,In Progress,IS,Indy SDK,software,resplin,,,Medium,,anikitinDSR,ashcherbakov,ashcherbakov,27/Mar/20 10:52 PM,30/Mar/20 7:49 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1545,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06b",,,,Unset,Unset,Indy Aries 20.06,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),anikitinDSR,ashcherbakov,,,,,,,,,"30/Mar/20 7:49 PM;anikitinDSR;h1. PoA.

The next steps should be done:
 # Investigate current demos about issuing credentials for Faber college and Acme.
 # Create plan for RichSchema demo.
 # Create a list of absent items in indy-vdr or indy-credx sides.
 # Implement needed methods on indy-credx side
 # Implement the whole demo.;;;",,,,,,,,,,,
W3C Verifiable Credentials in Indy SDK,IS-1545,44695,,Epic,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,27/Mar/20 10:53 PM,01/Apr/20 11:48 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Implement the W3C VC specification, including support for rich schemas, based on the work already done in Indy Node.

https://github.com/w3c/vc-data-model
https://github.com/w3c/vc-test-suite

https://github.com/hyperledger/aries-rfcs/pull/249
https://github.com/hyperledger/aries-rfcs/pull/250",,,,,,,,,,,,,,,,,,,,,,,,,IS-1402,,,,,INDY-2327,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-5,,Rich Schemas in Indy SDK,To Do,No,,Unset,No,,,"1|i01af7:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Investigate Options for CI / CD,IS-1546,44729,,Epic,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,03/Apr/20 10:01 AM,04/Apr/20 12:22 PM,28/Oct/23 2:49 AM,,,,,,,,,,,build-delivery-pipelines,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-2363,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-9,,CI / CD Investigation,To Do,No,,Unset,No,,,"1|i01aln:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,"04/Apr/20 12:22 PM;esplinr;From chat.hyperledger.com, April 2, 2020
{quote}
I'll start by introducing myself, I'm Brett Logan, I'm part of the Fabric team at IBM. Together Ry and I migrated everything that sits on Azure Pipelines today. I also manage the day-to-day DevOp's operations of all of Fabric repos with regards to AZP, Artifcatory, GitHub Actions, and general GitHub. I'm going to spew some information here on AZP and GHA on the why you might choose one over the other, and some of the stuff we have in the pipeline with AZP (we have a pretty good relationship with the AZP product management team, so we get to Beta test a lot of features and know they are coming long before most of the general public does)

The benefit of GitHub actions is that it is integrated directly into the repository, and you can generally perform operations on the repository that you can’t perform on it using Azure Pipelines, for example you add triggers for specific comments to trigger certain GitHub actions. Actions have a wealth of easily accessible information about the PR that you don’t easily have access to in AZP.

The downside to GitHub actions is that on their open source (free) tier, you are limited to 15 jobs running in parallel at once. The size of the VM’s is also limited to 2vCPU/4GB, which is extraordinarily small for most of our compute and memory intensive use cases (though they do get recycled after each job, so you always start with a fresh VM). They do have the option of bringing your own VM’s, but unlike Jenkin’s, you cannot have dynamic slaves (ones that are created at the start of a job and destroyed at the end of the job) so you have to manage the clean up of your systems after every test run. We spoke with the GHA team at the All Thing’s Open conference last April, and their enterprise play for dynamic build agents will be entirely kubernetes. They have no intention of bringing dynamic VM-based build agents, only bring your own k8s cluster and they will mangage the pod lifecycle.

AZP has many of the same initial limitations on their open source (free) tier. For open source projects, they limit you 10 parallel jobs per organization (though they are giving us 40 for free). The VM’s are the same size, 2vCPU/4GB. and are recycled after each job. You can also bring your own static build agents, but again you have to manage cleaning them up after each job. AZP’s enterprise play is going to be both Kubernetes and VM-based dynamic build agents. We are currently performing beta tests for the AZP team on their VM-based dynamic build agents. With this you can select any VM size and image (or create your own image) in the Azure cloud, and they will manage the lifecycle of these VM’s for you (recycling them after each job so you have a fresh VM). With this you can get access to GPU-enabled VM’s as well as specialized hardware Azure has, like Intel SGX-enabled hardware. While we do have to pay for these resources, we can use Azure spot instances to get ridculously cheap hardware (a 4vCPU/16GB spot instance costs $39/mo as opposed to its reserved instance pricing of $213/mo, and since they are dynamically managed, i.e., not running 24/7 the costs are incredibly small, a fleet of 10 VM’s would likely cost less than $100/mo).

Enterprise Artifactory supports pretty much any package type you can image (and also a generic type for storing any generic artifact, like a tarball), and is much easier to manage than Nexus. We have an enterprise account under “hyperledger.jfrog.io” and things like docker repos get really nice dns entries automatically when you create new repos, such as, “hyperledger-fabric.jrog.io/fabric-peer:latest” making it much easier to manage URL endpoints.

BinTray is the enterprise release distribution. It differs from Artifactory in that it is a worldwide CDN for business critical applications. Artifactory is hosted out of a single multi-zone datacenter. So for items you need located as close to the source as possible, BinTray is the choice. For artifacts that can handle small amounts of latency, Artifactory is the way to go. We do pay by the GB for both BinTray and Artifactory, though we are working on getting an opensource exemption for Artifactory which will gives us unlimited storage and bandwidth for free. BinTray will always cost money.
I'll also add, you can use GHA and AZP in conjuction, i.e., we use GHA to perform repo level checks, like verifying DCO and comment on PR's with instructions on how to fix PR's missing a DCO signoff, or adding labels to issues and having them automatically merged.
My opinion is, AZP is the best bet for your application if you need agents larger than 2vCPU/4GB
We also get enterprise support with AZP (with 24/7 support and less than 4 hour initial contact), and have direct lines of contact with the Product Management team. We don't have any of that with GHA.
You also have access to MacOS, Windows, Linux, iOS and Android build in AZP
But the MacOS builds are limited to their 2vCPU/4GB size, but they are on the 40 agent free tier, so there is no cost to use them
Though you can add your own static MacOS agents
￼{quote};;;",,,,,,,,,,,
libindy.dylib fails to verify on MacOS,IS-1547,44758,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,conanoc,conanoc,09/Apr/20 1:03 PM,09/Apr/20 1:03 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libindy,,,,,0,,,,"MacOS Catalina blocks loading libindy.dylib. I attached a screenshot.

I tried to run WebAgent sample of aries-framework-dotnet on MacOS.","OS version: macOS Catalina 10.15.4

libindy version: 1.15.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Apr/20 12:55 PM;conanoc;Screen Shot 2020-04-09 at 12.49.49 PM.png;https://jira.hyperledger.org/secure/attachment/18212/Screen+Shot+2020-04-09+at+12.49.49+PM.png",,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01arn:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),conanoc,,,,,,,,,,,,,,,,,,,,,
Verify function returns incorrect result on Windows,IS-1548,44788,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,tmarkovski,tmarkovski,10/Apr/20 9:54 PM,10/Apr/20 9:54 PM,28/Oct/23 2:49 AM,,1.14.2,,,,,,,,,libindy,,,,,0,,,,"Running the *anoncreds.verifier_verify* under Windows returns incorrect result.

Expected result: *false*

Actual result: *true*

 

I ran the same parameters under Mac and Linux, and they return expected result *false*

 

Parameters

https://pastebin.com/8tNVepJi",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01awz:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tmarkovski,,,,,,,,,,,,,,,,,,,,,
LibVCX does not respect Thread ID,IS-1549,44846,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,21/Apr/20 12:15 AM,21/Apr/20 1:47 AM,28/Oct/23 2:49 AM,,1.14.2,,,,,,,,,libvcx,,,,,0,,,,"From [Aries RFC 0008: Message ID and Threading|https://github.com/hyperledger/aries-rfcs/tree/64e5e55c123b2efaf38f4b0911a71a1c40a7f29d/concepts/0008-message-id-and-threading#thread-id-thid]:
{quote}The Thread ID is the Message ID (@id) of the first message in the thread. The first message may or may not declare the ~thread attribute block; it does not, but carries an implicit thid of its own @id.
{quote}
LibVCX seems to pull the Thread ID from the Message ID even when the `~thread` decorator block is present.

*Notes*
 * The Aries Interop Test Suite should also be extended with a test for this behavior.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzii06l",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,
Update Vcx Java Wrapper to handle vcx_connection_send_message and vcx_connection_verify_signature,IS-1550,44852,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,twshelton,twshelton,twshelton,22/Apr/20 3:05 AM,22/Apr/20 3:05 AM,28/Oct/23 2:49 AM,,1.12.0,,,,,,,1.12.0,,libvcx,,,,,0,,,,"Update Vcx Java Wrapper to handle:
 * vcx_connection_send_message
 * vcx_connection_verify_signature",,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b6r:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),twshelton,,,,,,,,,,,,,,,,,,,,,
LibVCX Java wrapper fixes,IS-1551,44901,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,thomas_kim,thomas_kim,thomas_kim,22/Apr/20 5:35 PM,22/Apr/20 5:35 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libvcx,,,,,0,,,,"*Bug* (need to fix)
* The API connectionGetTheirPwDid returns pw_did not their_pw_did

*Missing APIs*(need to implement)
 * vcx_disclosed_proof_update_state_with_message
 * vcx_update_institution_info

*Obsolete API* (need to remove)
* vcx_reset
* DisclosedProofApi.proofCreate",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b7v:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),thomas_kim,,,,,,,,,,,,,,,,,,,,,
retreive cred_json from a wallet ,IS-1552,44913,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,nikosft,nikosft,23/Apr/20 10:31 AM,23/Apr/20 10:31 AM,28/Oct/23 2:49 AM,,,,,,,,,,,python wrapper,,,,,0,,,,"When a credential is added in a prover's wallet the following function is called: 
{code:python}
async def prover_store_credential(wallet_handle: int,
                                  cred_id: Optional[str],
                                  cred_req_metadata_json: str,
                                  cred_json: str,
                                  cred_def_json: str,
                                  rev_reg_def_json: Optional[str])

{code}
 The fourth argument (i.e., cred_json) is provided by the issuer and it is used when constructing proofs (i.e., in prover_create_proof). However, it seems that it is impossible to extract if from the wallet. In all provided examples and tests cred_json is stored as a public variable. However this is cumbersome for real deployments.  

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b9f:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nikosft,,,,,,,,,,,,,,,,,,,,,
Edit local DID metadata in Indy CLI wallet,IS-1553,44922,,New Feature,New,IS,Indy SDK,software,resplin,,,Medium,,,brentzundel,brentzundel,24/Apr/20 12:14 AM,20/Nov/20 8:09 PM,28/Oct/23 2:49 AM,,,,,,,,,,,cli,,,,,0,,,,"As a user, I want to be able to add metadata to an existing DID in my wallet.

As a user, I want to be able to edit metadata for an existing DID in my wallet.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01bar:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),brentzundel,montasser.bored,,,,,,,,,"20/Nov/20 8:09 PM;montasser.bored;Is there anyone who can point me to externally reading indy data like DIDs ? I want to use an external script to read from the ledger;;;",,,,,,,,,,,
LibVCX Android Demo for the Alice,IS-1554,44939,,Improvement,New,IS,Indy SDK,software,resplin,,,Medium,,thomas_kim,thomas_kim,thomas_kim,24/Apr/20 7:41 PM,24/Apr/20 7:41 PM,28/Oct/23 2:49 AM,,,,,,,,,,,libvcx,,,,,0,,,,"Many newcomers are struggling with running Android application using LibVCX, and it would be nice if the project provides the sample Android demo application like different wrappers. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01bej:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),thomas_kim,,,,,,,,,,,,,,,,,,,,,
libindy.so cannot open shared object file: No such file or directory,IS-1555,45042,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,asishsingh,asishsingh,12/May/20 6:46 AM,12/May/20 6:46 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Using ubuntu 16.04 , when i am trying to run sample apps, i am getting

libindy.so cannot open shared object file: No such file or directory.

but i can see the .so file when i go to that path, also path is set correctly.

I tried searching online, but couldn't find any solution. Please help.

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01bw3:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),asishsingh,,,,,,,,,,,,,,,,,,,,,
"npm i --save indy-sdk is getting failed in Mac OS. The Installation is getting failed while ""node-gyp rebuild"". The detailed log of the error is attached below.",IS-1556,45125,,Bug,New,IS,Indy SDK,software,resplin,,,High,,,jaswanth03,jaswanth03,22/May/20 1:28 PM,22/May/20 1:28 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,indy-sdk,node-gyp,,"YEBELOMACs-MacBook-Air:indy-angular-sample yebelo$ LD_LIBRARY_PATH=/Users/yebelo/Documents/yebelo/Hyperledger/indy-angular-sample/libindy_1.9.0/lib/ npm i --save indy-sdk

> indy-sdk@1.15.0-dev-1533 install /Users/yebelo/Documents/yebelo/Hyperledger/indy-angular-sample/node_modules/indy-sdk
> node-gyp rebuild

CXX(target) Release/obj.target/indynodejs/src/indy.o
 SOLINK_MODULE(target) Release/indynodejs.node
ld: library not found for -lindy
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [Release/indynodejs.node] Error 1
gyp ERR! build error 
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack at ChildProcess.onExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:262:23)
gyp ERR! stack at ChildProcess.emit (events.js:182:13)
gyp ERR! stack at Process.ChildProcess._handle.onexit (internal/child_process.js:240:12)
gyp ERR! System Darwin 19.2.0
gyp ERR! command ""/usr/local/bin/node"" ""/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"" ""rebuild""
gyp ERR! cwd /Users/yebelo/Documents/yebelo/Hyperledger/indy-angular-sample/node_modules/indy-sdk
gyp ERR! node -v v10.13.0
gyp ERR! node-gyp -v v3.8.0
gyp ERR! not ok 
npm WARN ngx-spinner@9.0.2 requires a peer of @angular/common@^9.0.0 but none is installed. You must install peer dependencies yourself.
npm WARN ngx-spinner@9.0.2 requires a peer of @angular/core@^9.0.0 but none is installed. You must install peer dependencies yourself.

npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! indy-sdk@1.15.0-dev-1533 install: `node-gyp rebuild`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the indy-sdk@1.15.0-dev-1533 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR! /Users/yebelo/.npm/_logs/2020-05-21T14_47_34_522Z-debug.log
YEBELOMACs-MacBook-Air:indy-angular-sample yebelo$ LD_LIBRARY_PATH=/Users/yebelo/Documents/yebelo/Hyperledger/indy-angular-sample/libindy_1.9.0 npm i --save indy-sdk

> indy-sdk@1.15.0-dev-1533 install /Users/yebelo/Documents/yebelo/Hyperledger/indy-angular-sample/node_modules/indy-sdk
> node-gyp rebuild

CXX(target) Release/obj.target/indynodejs/src/indy.o
 SOLINK_MODULE(target) Release/indynodejs.node
ld: library not found for -lindy
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [Release/indynodejs.node] Error 1
gyp ERR! build error 
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack at ChildProcess.onExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:262:23)
gyp ERR! stack at ChildProcess.emit (events.js:182:13)
gyp ERR! stack at Process.ChildProcess._handle.onexit (internal/child_process.js:240:12)
gyp ERR! System Darwin 19.2.0
gyp ERR! command ""/usr/local/bin/node"" ""/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"" ""rebuild""
gyp ERR! cwd /Users/yebelo/Documents/yebelo/Hyperledger/indy-angular-sample/node_modules/indy-sdk
gyp ERR! node -v v10.13.0
gyp ERR! node-gyp -v v3.8.0
gyp ERR! not ok 
npm WARN ngx-spinner@9.0.2 requires a peer of @angular/common@^9.0.0 but none is installed. You must install peer dependencies yourself.
npm WARN ngx-spinner@9.0.2 requires a peer of @angular/core@^9.0.0 but none is installed. You must install peer dependencies yourself.

npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! indy-sdk@1.15.0-dev-1533 install: `node-gyp rebuild`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the indy-sdk@1.15.0-dev-1533 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR! /Users/yebelo/.npm/_logs/2020-05-21T14_50_25_534Z-debug.log
YEBELOMACs-MacBook-Air:indy-angular-sample yebelo$",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ccj:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jaswanth03,,,,,,,,,,,,,,,,,,,,,
Attribute restrictions are not working for proof predicates,IS-1557,45136,,Bug,In Progress,IS,Indy SDK,software,resplin,,,High,,ianco,ianco,ianco,27/May/20 2:26 AM,30/May/20 12:57 AM,28/Oct/23 2:49 AM,,,,,,,,,,,libindy,,,,,0,,,,"Restrictions of the following format are not working for predicates in Indy proofs:

""restrictions"": [{ ..., ""attr::name::value"": ""Alex"" }]

This is illustrated in the following 2 unit tests, which create 2 credentials and then requests proofs using the above restriction on the requested attributes and predicates:

1. With the attribute restriction on the attribute (works):  https://github.com/ianco/indy-sdk/blob/predicate_attr_restrictions/libindy/tests/anoncreds_demos.rs#L498

2. Additionally, with the same restriction on the predicate (fails):  https://github.com/ianco/indy-sdk/blob/predicate_attr_restrictions/libindy/tests/anoncreds_demos.rs#L607

The expectation is that these restrictions can be used on both requested attributes and predicates.
","Running against indy-sdk master branch
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01cez:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ianco,,,,,,,,,,,,,,,,,,,,,
Proof Presentation validation fails with empty non_revoc_interval,IS-1558,45719,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,,ryanmarsh,ryanmarsh,30/Jul/20 12:54 AM,30/Jul/20 6:31 AM,28/Oct/23 2:49 AM,30/Jul/20 6:30 AM,,,,,,,,,,,,,,,0,,,,"When indy_verifier_verify_proof is called with an empty json string (""{}"") as the revocation interval, the validation fails because it checks the interval and can't find it. I would expect verification to skip the interval if the value is null or {}. 

 

Here is a test to show the failure I see (put it in *libindy/src/services/anoncreds/verifier.rs*): 


{code:java}
 #[test]
fn test_empty_non_revoc_interval() {
    let req: ProofRequestPayload = serde_json::from_str(r#""{""nonce"":""350088117388834113550940"",""name"":"""",""version"":""1.0"",""requested_attributes"":{""c"":{""name"":""c"",""self_attest_allowed"":false}},""requested_predicates"":{},""non_revoked"":{},""ver"":""1.0""}""#).unwrap();
    let proof: Proof = serde_json::from_str(r#""{""proof"":{""proofs"":[{""primary_proof"":{""eq_proof"":{""revealed_attrs"":{""c"":""21027550693477535543327579570081618952892630736730429980018215117041635618758""},""a_prime"":""50388520465356767417155078132030364828017082181937472057908950883185050795637638521491388022180158096759232455736729261978731637595596549484937975342410151565026856449579187408834016491818336678384318635829996844370239148877256608389597012804517879711463995894364211890879328570767112882081259647215261169380817621943175013397600182171422667024541604800127259870349821935302913920399265872658916941791487376754251806405022052841456989599520941866630864402059993498429340012748885964230763777867696791164977533357096580962063739663676920288158021876789561157406722334879653981433905074563263686820665755735941850393511"",""e"":""3718252388493220772864850593185990486135588489586438191852057691994557460042151039739352906654425489071229420043584597583873303387892223"",""v"":""104640528163077132809792479674713277838244565048693549308340760186318981362337779355633304005425234273822804109722544797277985695549991316279763495266300729281061157372981253110523240081016421445239006840238133538749388746702160521905800492207456762246574543682763121153299505947499924773003208950905019356780627958242742692116587293954021084445817233197192748937381218872493995710613051335755003619837718060183564330338304363793977418067994819375112798429676406003204697931185427433641122048516176160127110000771649047444572825666070065159533366557725976635979829699967134168074789619670201114793084666975282740956550669322787762871238486492698983311622912661482195047592809308438881684271009272299491341075496882870805853135019732764728282598384361962265009133066725402781677996257080500889204479458351603004601880071221922297408377583195187139021070874000837495039932763863398129908581530563333100942188144602123787677"",""m"":{""a"":""4102297283094307290070770953943747038183410804299116114299791883760019597647346702211117588763089727351195631823886410052637465380736732353976328309032323428299014078787101226568"",""b"":""11997686085288782554771339082926619203863597953919130241562055492237714615117568559401642079900460111445298407658208048722258427615792706143750355705939032320754588549379013958815"",""master_secret"":""7403368031144039226544488947490391020647450887020280303878603763599271583741034875603370919905207018690229154315040064338060768194187934216018446695234924266613830660197632191538""},""m2"":""2760732335130882579050846046090122927882682127404914937843020411814103100916300452069994839423297306091507968691632756648481949369278627609217256945492808886926235206847576613769""},""ge_proofs"":[]},""non_revoc_proof"":null}],""aggregated_proof"":{""c_hash"":""84983350747251740997636647643875390715825568809832255503441787009241108371023"",""c_list"":[[1,143,39,106,130,242,130,124,217,142,142,7,16,79,228,0,94,107,83,200,99,25,75,124,93,96,250,10,165,162,53,107,29,157,224,211,100,100,228,37,105,64,202,38,212,234,48,143,210,67,85,42,73,210,122,16,21,240,75,197,79,216,72,160,19,114,114,134,36,5,237,230,81,108,7,250,174,166,53,161,84,47,243,37,168,123,53,197,244,147,218,18,28,164,112,165,2,193,72,159,159,229,199,94,201,123,30,171,108,95,242,214,213,107,13,75,165,199,145,194,76,62,246,251,244,139,101,233,49,195,130,248,197,210,49,252,201,123,61,164,200,90,37,166,25,83,91,19,239,85,237,45,82,175,0,130,132,93,62,59,1,34,140,127,28,64,45,66,154,22,122,94,181,107,98,79,156,228,72,20,69,132,251,250,2,220,225,169,83,83,253,22,152,203,244,113,102,91,227,12,46,32,142,209,191,211,85,183,251,80,105,247,49,130,136,140,155,22,154,163,156,110,189,204,3,186,231,155,21,26,114,212,224,229,150,44,196,248,199,189,166,221,141,113,43,40,98,147,196,147,5,0,199,55,64,235,167]]}},""requested_proof"":{""revealed_attrs"":{""c"":{""sub_proof_index"":0,""raw"":""c"",""encoded"":""21027550693477535543327579570081618952892630736730429980018215117041635618758""}},""self_attested_attrs"":{},""unrevealed_attrs"":{},""predicates"":{}},""identifiers"":[{""schema_id"":""WpoQirzsNJK2MUZh3NtbF2:2:r-test6:0.0.6"",""cred_def_id"":""WpoQirzsNJK2MUZh3NtbF2:3:CL:13054:latest"",""rev_reg_id"":null,""timestamp"":null}]}""#).unwrap();
    let schema: HashMap<SchemaId, SchemaV1> = serde_json::from_str(r#""{""WpoQirzsNJK2MUZh3NtbF2:2:r-test6:0.0.6"": {""id"":""WpoQirzsNJK2MUZh3NtbF2:2:r-test6:0.0.6"",""name"":""r-test6"",""version"":""0.0.6"",""attrNames"":[""c"",""b"",""a""],""seqNo"":13054,""ver"":""1.0""} }""#).unwrap();
    let creds: HashMap<CredentialDefinitionId, CredentialDefinitionV1> = serde_json::from_str(r#""{ ""WpoQirzsNJK2MUZh3NtbF2:3:CL:13054:latest"": {""id"":""WpoQirzsNJK2MUZh3NtbF2:3:CL:13054:latest"",""type"":""CL"",""schemaId"":""13054"",""tag"":""latest"",""ver"":""1.0"",""value"":{""primary"":{""s"":""96281451931856950071247732301145128947395610493013790310955990632633196885524793845334092537818922462264233022335361183133303852252721080285326870125311415851097177488432178086983471524491310364473905754976792959714458623277090581761856030582322555208165314932987606825708270123900987672643134498105957346390925811566016857855277893601189551576344965811905485514252943025045995878374350226086530516844678113271693623547902253153800561152360320953531905567988013083052780868065774395923270627658499493102580743356089788769148151557400535173723073517353217325789939958934630352069511258016506202345767783345525080514474"",""rctxt"":""96998451572271599792505515998905404313822535725743659333009620972024474419165225006658994968652665129982368129141430714029514712803791540302463754426686263475178479390493338285067758304533650260622668304644944662586345358384128327350458464071515504566507909265959846213397477648229035068852561101255935668747499429993060499833043824211261563456704613189698846135769826705989673705929539984289006474553594930706936326055032186119654958987858469763606042213078013130548232666993520473193450697524811754936832672642999087232999664717919255976658569052776471889054382630343081737911995800323308162658118020148187375859346"",""n"":""113909196105256369298794250761803707037872974702162648916132271040126036520095478143959818528541457730199089909158389355847613025323021961254681263253018494381662582562386791440595165294379567145823122114055133246595774750219255157013053637028070800432740286027834262091355949659551244384233091515975531556158112365859372417503487250115030463589910881694542256734795571839713753795964719045885959330186901174862010728157608340363095920921222819146956958351183432894842099559181519425881567672609297067126008424449576376885625476556442018005482629148358509413392075152511721848631280738309309273110686347955436921141757"",""r"":{""a"":""110128981229894217289000041492471646607231091138474619889388522059639243576977359609128317744176147865322251874732765979876056559192698976435215588402978276349860053066456685802166597798564986869248643522975662590517463296807944008918364822611990860724233744628049818938587483522671136037026664206423191661796143287688851027306901871002493315458325648804809247015099876745919397691362034719825864663730316054871526119042379859903809496822148282667019008992890737310457009323390133530255483685575574384062379768728734890648785178109304235097836968585258825571207614703459189373282519835379577958865751055495452861262377"",""master_secret"":""106210598528633765713867548127123931325839222644113518212169901407494857424926435983985511935195880774339068703651163413794635973372563730936558585629753445688835127043954705644990189643521094565675572094879712761794052268208353323672847703575087498806334277298785542119933885848841906239832071565222367429603886205681745154729634647870198651779369569163613206282806992627703520325290910425080530088629190524240264697380132804569005664543143336614708036312973679572122060258024361868915466817853822901184163639414792187579917996881662528096890770892985619580735441167183082237286207513931691214829540248663398414463093"",""c"":""90884019650334942009676982498450127388588482189207541064219041184166116776398138572870544845682439237083052793877086793078204513573121904761365373246291878444483913042824450193890151529157446723610487668049209816394449193515809338690982666650214928414865522410883305856438137961463195613461552315441241462285268915919255573022049026932180805578256042928592633468606981240952285958657029154733433737948884509351613422628434650291829099433872466002096126279765016230751650409357221364497623030797134194317844080450753610659950999775313853360404266023181884700329393766428537041381211155080204899325330817022052038122520"",""b"":""25289224731620891580745406001804170586383137910854270930230203111536358416558534310576699292130038318363697156167208450553087573274410767259244474717715942957096724588072671951751311699376714345997045259622206358703957664488885354464994708867328975356632764943968211064353967776351128358106331951860772501655778558010162368989946304061517995631431740306419762877205897691736164562835459313211044176809993807366088031862883674460100427138170570261806168011698838759587962016689773768947556607754099087791412406559221306023952805465006012539382740099965546259533910152697046157505609036464837442617964329051465643410334""},""z"":""13448999734459810526894396672497725000152968672330433365643675850410852172788604372585908366969611286220921877457227714468366054783073419906923567316811894875571027354406236017467282592343920751798636633194686898311360231186164162309744544125989143104238467399330171200792094494850155591502329487845456246958013783767154602668852911245845750519409966502420160094016840289569846303357769716921617338174843486004045930151446328223906479952073328637045335041738711974320925607713462228774461301805619085790123472704544756026055470449420564951716493811825626469751081429719777219768204597043609857510514835736157982993912""}}} }""#).unwrap();
    let rev_reg_defs: HashMap<RevocationRegistryId, RevocationRegistryDefinitionV1> = HashMap::new();
    let rev_regs: HashMap<RevocationRegistryId, HashMap<u64, RevocationRegistryV1>> = HashMap::new();
    let rc = Verifier::new().verify(
        &proof, &req, &schema, &creds, &rev_reg_defs, &rev_regs
    ).unwrap();

}{code}
 

Here is the proposed fix (*libindy/src/services/anoncreds/helpers.rs*): 
{code:java}
pub fn get_non_revoc_interval(global_interval: &Option<NonRevocedInterval>, local_interval: &Option<NonRevocedInterval>) -> Option<NonRevocedInterval> {
    trace!(""get_non_revoc_interval >>> global_interval: {:?}, local_interval: {:?}"", global_interval, local_interval);

    let interval = local_interval.clone().or_else(|| global_interval.clone().or(None));

    trace!(""get_non_revoc_interval <<< interval: {:?}"", interval);

    match interval {
        Some(x) => if x.to.is_none() && x.from.is_none() { None } else { Some(x) },
        None => None
    }
} {code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01f0b:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ryanmarsh,shimizut,,,,,,,,,"30/Jul/20 6:31 AM;ryanmarsh;I created a github issue instead. 

https://github.com/hyperledger/indy-sdk/issues/2221;;;",,,,,,,,,,,
Unable to install indy-sdk for windows ,IS-1559,45840,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,thearhaam,thearhaam,18/Aug/20 6:02 PM,18/Aug/20 7:09 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,help-wanted,,,"I'm facing an error while installing indy sdk using ""npm install --save indy-sdk""

I have the prerequisites installed : C++ build tools, Python 2.7, libindy  

 

indy.obj : error LNK2001: unresolved external symbol indy_append_request_endorser [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
indy.obj : error LNK2001: unresolved external symbol indy_to_unqualified [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
indy.obj : error LNK2001: unresolved external symbol indy_build_disable_all_txn_author_agreements_request [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
indy.obj : error LNK2001: unresolved external symbol indy_issuer_rotate_credential_def_start [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
indy.obj : error LNK2001: unresolved external symbol indy_build_get_payment_sources_with_from_request [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
indy.obj : error LNK2001: unresolved external symbol indy_parse_get_payment_sources_with_from_response [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
indy.obj : error LNK2001: unresolved external symbol indy_qualify_did [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
indy.obj : error LNK2001: unresolved external symbol indy_build_auth_rules_request [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
indy.obj : error LNK2001: unresolved external symbol indy_sign_with_address [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
indy.obj : error LNK2001: unresolved external symbol indy_verify_with_address [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
indy.obj : error LNK2001: unresolved external symbol indy_issuer_rotate_credential_def_apply [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
indy.obj : error LNK2001: unresolved external symbol indy_parse_get_nym_response [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
indy.obj : error LNK2001: unresolved external symbol indy_generate_nonce [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
indy.obj : error LNK2001: unresolved external symbol indy_get_request_info [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcxproj]
C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\Release\indynodejs.node : fatal error LNK1120: 14 unresolved externals [C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk\build\indynodejs.vcx
proj]
gyp ERR! build error
gyp ERR! stack Error: `C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin\MSBuild.exe` failed with exit code: 1
gyp ERR! stack at ChildProcess.onExit (C:\Users\thear\AppData\Roaming\nvm\v8.17.0\node_modules\npm\node_modules\node-gyp\lib\build.js:194:23)
gyp ERR! stack at emitTwo (events.js:126:13)
gyp ERR! stack at ChildProcess.emit (events.js:214:7)
gyp ERR! stack at Process.ChildProcess._handle.onexit (internal/child_process.js:198:12)
gyp ERR! System Windows_NT 10.0.19041
gyp ERR! command ""C:\\Program Files\\nodejs\\node.exe"" ""C:\\Users\\thear\\AppData\\Roaming\\nvm\\v8.17.0\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js"" ""rebuild""
gyp ERR! cwd C:\Users\thear\HyperledgerProjects\test\node_modules\indy-sdk
gyp ERR! node -v v8.17.0
gyp ERR! node-gyp -v v5.0.5
gyp ERR! not ok
npm WARN test@1.0.0 No repository field.

npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! indy-sdk@1.15.0-dev-1565 install: `node-gyp rebuild`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the indy-sdk@1.15.0-dev-1565 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR! C:\Users\thear\AppData\Roaming\npm-cache\_logs\2020-08-18T09_12_52_252Z-debug.log

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fmz:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),thearhaam,,,,,,,,,,"18/Aug/20 7:09 PM;thearhaam;Using the latest version of libindy seemed to solve the problem ""[https://repo.sovrin.org/windows/libindy/master/]"";;;",,,,,,,,,,,
install indy-sdk (npm i indy-sdk) on MacOS Failed ,IS-1560,46128,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,wshbair,wshbair,18/Sep/20 9:24 AM,18/Sep/20 9:24 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142
npm WARN deprecated har-validator@5.1.5: this library is no longer supported

> indy-sdk@1.15.0-dev-1568 install /..../node_modules/indy-sdk
> node-gyp rebuild

CXX(target) Release/obj.target/indynodejs/src/indy.o
../src/indy.cc:234:24: error: no matching member function for call to 'Set'
 tuple->Set(0, Nan::New<v8::Number>(icb->handle0));
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
../src/indy.cc:235:24: error: no matching member function for call to 'Set'
 tuple->Set(1, Nan::New<v8::Number>(icb->u32int0));
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
../src/indy.cc:243:24: error: no matching member function for call to 'Set'
 tuple->Set(0, toJSString(icb->str0));
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
../src/indy.cc:244:24: error: no matching member function for call to 'Set'
 tuple->Set(1, Nan::New<v8::Number>(icb->i64int0));
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
../src/indy.cc:252:24: error: no matching member function for call to 'Set'
 tuple->Set(0, toJSString(icb->str0));
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
../src/indy.cc:253:24: error: no matching member function for call to 'Set'
 tuple->Set(1, Nan::NewBuffer(icb->buffer0data, icb->buff...
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
../src/indy.cc:258:24: error: no matching member function for call to 'Set'
 tuple->Set(0, toJSString(icb->str0));
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
../src/indy.cc:259:24: error: no matching member function for call to 'Set'
 tuple->Set(1, toJSString(icb->str1));
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
../src/indy.cc:264:24: error: no matching member function for call to 'Set'
 tuple->Set(0, toJSString(icb->str0));
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
../src/indy.cc:265:24: error: no matching member function for call to 'Set'
 tuple->Set(1, toJSString(icb->str1));
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
../src/indy.cc:266:24: error: no matching member function for call to 'Set'
 tuple->Set(2, Nan::New<v8::Number>(icb->timestamp0));
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
../src/indy.cc:271:24: error: no matching member function for call to 'Set'
 tuple->Set(0, toJSString(icb->str0));
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
../src/indy.cc:272:24: error: no matching member function for call to 'Set'
 tuple->Set(1, toJSString(icb->str1));
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
../src/indy.cc:273:24: error: no matching member function for call to 'Set'
 tuple->Set(2, toJSString(icb->str2));
 ~~~~~~~^~~
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3670:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context,
 ^
/Users/wazenshbair/Library/Caches/node-gyp/14.8.0/include/node/v8.h:3673:37: note:
 candidate function not viable: requires 3 arguments, but 2 were provided
 V8_WARN_UNUSED_RESULT Maybe<bool> Set(Local<Context> context, uint32_t index,
 ^
14 errors generated.
make: *** [Release/obj.target/indynodejs/src/indy.o] Error 1
gyp ERR! build error
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack at ChildProcess.onExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:194:23)
gyp ERR! stack at ChildProcess.emit (events.js:314:20)
gyp ERR! stack at Process.ChildProcess._handle.onexit (internal/child_process.js:276:12)
gyp ERR! System Darwin 19.6.0
gyp ERR! command ""/usr/local/bin/node"" ""/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"" ""rebuild""
gyp ERR! cwd /----/node_modules/indy-sdk
gyp ERR! node -v v14.8.0
gyp ERR! node-gyp -v v5.1.0
gyp ERR! not ok
npm WARN enoent ENOENT: no such file or directory, open '/Users/wazenshbair/SnT/PayID/sovrin/tt/package.json'
npm WARN tt No description
npm WARN tt No repository field.
npm WARN tt No README data
npm WARN tt No license field.

npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! indy-sdk@1.15.0-dev-1568 install: `node-gyp rebuild`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the indy-sdk@1.15.0-dev-1568 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR! /Users/wazenshbair/.npm/_logs/2020-09-18T00_06_12_076Z-debug.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gff:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wshbair,,,,,,,,,,,,,,,,,,,,,
performance improvement of listMyDidsWithMeta,IS-1561,46182,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,shimizut,shimizut,shimizut,05/Oct/20 1:38 PM,13/Oct/20 3:34 PM,28/Oct/23 2:49 AM,13/Oct/20 3:34 PM,,,,,,,,,,,,,,,0,,,,"listMyDidsWithMeta API executes SQLs internally; they are executed in a loop of list_my_dids_with_meta() in src/commands/did.rs, a loop which traverses DIDs. Then the number of SQLs is mainly proportional to the number of DIDs stored in the specified wallet; actually twice as much as the number of DIDs.

The current program can execute many SQLs and can cause a performance problem especially when using Postgres Plug-In; it's response time is greater than that of SQLite.

You can improve the performance by executing the SQL outside of the loop and make mappings corresponding to the current SQLs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gp7:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,shimizut,,,,,,,,,"08/Oct/20 2:04 PM;esplinr;https://github.com/hyperledger/indy-sdk/pull/2238;;;",,,,,,,,,,,
 Anoncreds.createRevocationState  An IO error occurred,IS-1562,46329,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,bslee,bslee,18/Nov/20 8:43 AM,18/Nov/20 8:43 AM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"An IO error occured when using Anoncreds.createRevocationState on Android.
[#1757|https://github.com/hyperledger/indy-sdk/pull/1757] refer to and take action, but it still happens.

2020-11-17 10:49:48.678 24673-24813/com.iitp.iitp_demo E/TEST: logMessage = src/api/anoncreds.rs:2321 | prepare_result_1: >>> Err(IndyError \{ inner: Os { code: 2, kind: NotFound, message: ""No such file or directory"" }",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hab:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bslee,,,,,,,,,,,,,,,,,,,,,
Error while trying to use node.js sdk of indy on windows,IS-1563,46362,,Bug,New,IS,Indy SDK,software,resplin,,,Highest,,,pranavkirtani,pranavkirtani,30/Nov/20 9:45 PM,30/Nov/20 9:46 PM,28/Oct/23 2:49 AM,,,,,,,,,,,,,,,,0,,,,"Hi,

I installed indy-sdk (version 14.1.1) on windows 10 using npm install by giving path of the dll files in LD_LIBRARY_PATH . The npm install worked correctly.

 

but when i ran simple code

var indy=require(""indy-sdk"");

 

I got the following error:

Error: The specified procedure could not be found. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hg3:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),pranavkirtani,,,,,,,,,,,,,,,,,,,,,
Building revocation states from 0 fails proof for any cred in rev reg if one is revoked,IS-1564,46367,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,sklump,sklump,02/Dec/20 5:02 AM,02/Dec/20 5:06 AM,28/Oct/23 2:49 AM,,1.15.0,,,,,,,1.15.0,,libindy,,,,,0,quality,,,"I've come across something I can't explain but can reproduce. Can anyone investigate and tell me what goes wrong in `indy-sdk/wrappers/python/test/interation/tests_interaction_several_credentials.py` here?

*PROCEDURE* - apply the following delta:

{{--- a/wrappers/python/tests/interation/test_interaction_several_credentials.py}}
 +++ b/wrappers/python/tests/interation/test_interaction_several_credentials.py
 @@ -507,6 +507,7 @@ async def test_anoncreds_revocation_interaction_test_issuance_by_demand_4_creds(
 # {{Prover Gets RevocationRegistryDelta from Ledger}}
 # {{from: when last prover revocation state were created}}
 # {{to: to}}
 + '''
 get_revoc_reg_delta_request = await ledger.build_get_revoc_reg_delta_request(
 prover_did,
 rev_reg_def_id,
 @@ -532,6 +533,7 @@ async def test_anoncreds_revocation_interaction_test_issuance_by_demand_4_creds(
 timestamp,
 cred_rev_id[0 if proof_name == 'Alex' else 3] # Alex, then Olga
 )
 + '''

 # {{Prover creates revocation state from scratch}}
 # {{from: 0 or time of credential issuance}}
 @@ -564,7 +566,8 @@ async def test_anoncreds_revocation_interaction_test_issuance_by_demand_4_creds(

{{rev_states[proof_name] =}}

{color:#172b4d}{{{}}{color}

{color:#172b4d}{{  'timestamp': timestamp,}}{color}

{color:#172b4d}{{ - 'value': rev_state_from_timestamp_to_now_json # rev_state_from_0_to_now_json must also work}}{color}

{color:#172b4d}{{+ 'value': rev_state_from_0_to_now_json}}{color}

{color:#172b4d}{{+ # 'value': rev_state_from_timestamp_to_now_json # rev_state_from_0_to_now_json must also work }}}{color}

{color:#172b4d}{{}}}{color}

{color:#172b4d}{{{{revoc_states_json = json.dumps({rev_reg_id: {timestamp: json.loads(rev_states[proof_name]['value'])}}}}{color}

and run the test.

1 - WEIRD: It fails to prove Olga's presentation after Alex is revoked. I.e., prover creates revocation state from scratch: no proof can verify from a credential in a revocation registry having revoked (distinct) credentials.
 2 - WEIRDER: Uncomment the triple-quotes at lines 510 and 536 and run it again: it passes! Updating the revocation state r from prior states, then creating revocation state s from scratch and throwing the updated revocation state r away and using s, fixes the problem.

I'm totally at a loss here. Can anyone shed some light?",ubuntu 18.04,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hh7:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sklump,,,,,,,,,,,,,,,,,,,,,
An error occurs when using Anoncreds.proverDeleteCredential on Android.,IS-1565,46407,,Bug,New,IS,Indy SDK,software,resplin,,,High,,,bslee,bslee,09/Dec/20 9:41 AM,09/Dec/20 1:20 PM,28/Oct/23 2:49 AM,,,,,,,,,1.15.0,,,,,,,0,,,,"Crash occurs on libindy.so when using proverDeleteCredential on Android 10.
 Android 11 and Android 8 work fine.

 

2020-12-09 10:29:12.386 3607-17571/com.iitp.iitp_demo E/[Indy::deleteCredential()-304]: storeid = 6d3a0f13-d5a2-45c9-8596-5476211ed428
2020-12-09 10:29:12.386 3607-17571/com.iitp.iitp_demo E/INDY_LOG: src/api/anoncreds.rs:1260 | indy_prover_delete_credential: >>> wallet_handle: WalletHandle(3), cred_id: 0x7a7ddc2700
2020-12-09 10:29:12.386 3607-17571/com.iitp.iitp_demo E/INDY_LOG: src/api/anoncreds.rs:1278 | prepare_result: >>> Ok(())
2020-12-09 10:29:12.386 3607-17571/com.iitp.iitp_demo E/INDY_LOG: src/api/anoncreds.rs:1280 | indy_prover_delete_credential: <<< res: Success
2020-12-09 10:29:12.386 3607-10573/com.iitp.iitp_demo E/INDY_LOG: src/commands/mod.rs:126 | AnoncredsCommand command received
2020-12-09 10:29:12.387 3607-10573/com.iitp.iitp_demo E/INDY_LOG: src/commands/anoncreds/mod.rs:60 | Prover command received
2020-12-09 10:29:12.387 3607-10573/com.iitp.iitp_demo E/INDY_LOG: src/commands/anoncreds/prover.rs:210 | DeleteCredential command received
2020-12-09 10:29:12.387 3607-10573/com.iitp.iitp_demo E/INDY_LOG: src/commands/anoncreds/prover.rs:663 | delete_credential >>> wallet_handle: WalletHandle(3), cred_id: ""6d3a0f13-d5a2-45c9-8596-5476211ed428""
2020-12-09 10:29:12.390 3607-10573/com.iitp.iitp_demo E/INDY_LOG: src/api/anoncreds.rs:1272 | prepare_result: >>> Ok(())
2020-12-09 10:29:12.391 3607-10573/com.iitp.iitp_demo E/INDY_LOG: src/api/anoncreds.rs:1273 | indy_prover_delete_credential: 
2020-12-09 10:29:12.391 3607-10573/com.iitp.iitp_demo W/.iitp.iitp_dem: 0xebadde09 skipped times: 0
2020-12-09 10:29:12.543 17572-17572/? E/chromium: [1209/102912.543201:ERROR:elf_dynamic_array_reader.h(61)] tag not found
2020-12-09 10:29:12.543 17572-17572/? E/chromium: [1209/102912.543803:ERROR:elf_dynamic_array_reader.h(61)] tag not found
2020-12-09 10:29:12.551 3607-10573/com.iitp.iitp_demo W/.iitp.iitp_dem: 0xebadde09 skipped times: 0
 
 --------- beginning of crash
2020-12-09 10:29:12.551 3607-10573/com.iitp.iitp_demo A/libc: Fatal signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x1 in tid 10573 (Thread-9), pid 3607 (.iitp.iitp_demo)
2020-12-09 10:29:12.554 13496-17101/? W/System.err: java.io.IOException: Try again
2020-12-09 10:29:12.555 13496-17101/? W/System.err: at android.net.LocalSocketImpl.readba_native(Native Method)
2020-12-09 10:29:12.555 13496-17101/? W/System.err: at android.net.LocalSocketImpl.access$300(LocalSocketImpl.java:37)
2020-12-09 10:29:12.555 13496-17101/? W/System.err: at android.net.LocalSocketImpl$SocketInputStream.read(LocalSocketImpl.java:113)
2020-12-09 10:29:12.555 13496-17101/? W/System.err: at com.sec.android.app.dexonpc.service.ConnDaemonHandler$3.run(ConnDaemonHandler.java:266)
2020-12-09 10:29:12.555 13496-17101/? W/System.err: at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
2020-12-09 10:29:12.555 13496-17101/? W/System.err: at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
2020-12-09 10:29:12.555 13496-17101/? W/System.err: at java.lang.Thread.run(Thread.java:919)
2020-12-09 10:29:12.555 13496-17101/? D/[DOP]ConnDaemonHandler: [263:run] App start indication listening...
2020-12-09 10:29:12.583 17575-17575/? E/crash_dump64: unknown process state: t
2020-12-09 10:29:12.610 17575-17575/? I/crash_dump64: obtaining output fd from tombstoned, type: kDebuggerdTombstone
2020-12-09 10:29:12.611 1132-1132/? I//system/bin/tombstoned: received crash request for pid 10573
2020-12-09 10:29:12.612 17575-17575/? I/crash_dump64: performing dump of process 3607 (target tid = 10573)
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: Build fingerprint: 'samsung/x1qksx/x1q:10/QP1A.190711.020/G981NKSU1BTK2:user/release-keys'
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: Revision: '14'
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: ABI: 'arm64'
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: Timestamp: 2020-12-09 10:29:12+0900
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: pid: 3607, tid: 10573, name: Thread-9 >>> com.iitp.iitp_demo <<<
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: uid: 10620
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x1
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: Cause: null pointer dereference
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: x0 0000000000000001 x1 0000007a83a73c94 x2 0000007a83a73c98 x3 0000000000000001
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: x4 0000000000000001 x5 0000000000000000 x6 0000000000000000 x7 0000000000000001
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: x8 0101010101010101 x9 81ca4305a123dbe9 x10 0000000000430000 x11 0000000000000003
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: x12 0000007a83a73c18 x13 0000007a83a73c88 x14 0000000000000001 x15 0000000000000000
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: x16 0000007ae70e8f38 x17 0000007b80f0aa60 x18 00000000bf8833e9 x19 0000007a942f86c0
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: x20 0000000000000000 x21 00000000736c3b00 x22 0000000012fa06b8 x23 0000000000000000
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: x24 0000000000000001 x25 0000000014eca4e0 x26 0000000000000002 x27 0000000012fa06e0
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: x28 0000007a83a73ca0 x29 0000007a83a73c30
2020-12-09 10:29:12.617 17575-17575/? A/DEBUG: sp 0000007a83a73c30 lr 0000007ae70cb07c pc 0000007b80f0aa70
2020-12-09 10:29:12.706 17575-17575/? A/DEBUG: backtrace:
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #00 pc 000000000007fa70 /apex/com.android.runtime/lib64/bionic/libc.so (strlen+16) (BuildId: 27147c78d1670fec7bce21c48e84eb70)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #01 pc 0000000000008078 /data/app/com.iitp.iitp_demo-dHroFPNqbP-kNbOtj3VKpQ==/lib/arm64/libjnidispatch.so (Java_com_sun_jna_Native_getStringBytes+32)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #02 pc 0000000000140350 /apex/com.android.runtime/lib64/libart.so (art_quick_generic_jni_trampoline+144) (BuildId: f4ae470075bacbf42f0097d74fdcc5cf)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #03 pc 00000000020e640c /memfd:/jit-cache (deleted) (com.sun.jna.Native.getString+76)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #04 pc 00000000020e7920 /memfd:/jit-cache (deleted) (com.sun.jna.Pointer.getString+48)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #05 pc 00000000020e6e7c /memfd:/jit-cache (deleted) (com.sun.jna.CallbackReference$DefaultCallbackProxy.convertArgument+332)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #06 pc 00000000020e5b44 /memfd:/jit-cache (deleted) (com.sun.jna.CallbackReference$DefaultCallbackProxy.invokeCallback+452)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #07 pc 00000000020f0a04 /memfd:/jit-cache (deleted) (com.sun.jna.CallbackReference$DefaultCallbackProxy.callback+52)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #08 pc 0000000000137334 /apex/com.android.runtime/lib64/libart.so (art_quick_invoke_stub+548) (BuildId: f4ae470075bacbf42f0097d74fdcc5cf)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #09 pc 0000000000145fec /apex/com.android.runtime/lib64/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+244) (BuildId: f4ae470075bacbf42f0097d74fdcc5cf)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #10 pc 00000000004b04c8 /apex/com.android.runtime/lib64/libart.so (art::(anonymous namespace)::InvokeWithArgArray(art::ScopedObjectAccessAlreadyRunnable const&, art::ArtMethod*, art::(anonymous namespace)::ArgArray*, art::JValue*, char const*)+104) (BuildId: f4ae470075bacbf42f0097d74fdcc5cf)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #11 pc 00000000004b1914 /apex/com.android.runtime/lib64/libart.so (art::InvokeVirtualOrInterfaceWithVarArgs(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*, _jmethodID*, std::__va_list)+424) (BuildId: f4ae470075bacbf42f0097d74fdcc5cf)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #12 pc 000000000038ac1c /apex/com.android.runtime/lib64/libart.so (art::JNI::CallObjectMethodV(_JNIEnv*, _jobject*, _jmethodID*, std::__va_list)+628) (BuildId: f4ae470075bacbf42f0097d74fdcc5cf)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #13 pc 000000000036bdf8 /apex/com.android.runtime/lib64/libart.so (art::(anonymous namespace)::CheckJNI::CallMethodV(char const*, _JNIEnv*, _jobject*, _jclass*, _jmethodID*, std::__va_list, art::Primitive::Type, art::InvokeType)+1408) (BuildId: f4ae470075bacbf42f0097d74fdcc5cf)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #14 pc 00000000003597c8 /apex/com.android.runtime/lib64/libart.so (art::(anonymous namespace)::CheckJNI::CallObjectMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)+144) (BuildId: f4ae470075bacbf42f0097d74fdcc5cf)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #15 pc 000000000000b118 /data/app/com.iitp.iitp_demo-dHroFPNqbP-kNbOtj3VKpQ==/lib/arm64/libjnidispatch.so
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #16 pc 000000000000b8b4 /data/app/com.iitp.iitp_demo-dHroFPNqbP-kNbOtj3VKpQ==/lib/arm64/libjnidispatch.so
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #17 pc 000000000000fbac /data/app/com.iitp.iitp_demo-dHroFPNqbP-kNbOtj3VKpQ==/lib/arm64/libjnidispatch.so
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #18 pc 000000000000fefc /data/app/com.iitp.iitp_demo-dHroFPNqbP-kNbOtj3VKpQ==/lib/arm64/libjnidispatch.so
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #19 pc 00000000005f7420 /data/app/com.iitp.iitp_demo-dHroFPNqbP-kNbOtj3VKpQ==/lib/arm64/libindy.so
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #20 pc 000000000068c534 /data/app/com.iitp.iitp_demo-dHroFPNqbP-kNbOtj3VKpQ==/lib/arm64/libindy.so
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #21 pc 000000000057f5d4 /data/app/com.iitp.iitp_demo-dHroFPNqbP-kNbOtj3VKpQ==/lib/arm64/libindy.so
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #22 pc 00000000007829e8 /data/app/com.iitp.iitp_demo-dHroFPNqbP-kNbOtj3VKpQ==/lib/arm64/libindy.so
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #23 pc 000000000120e628 /data/app/com.iitp.iitp_demo-dHroFPNqbP-kNbOtj3VKpQ==/lib/arm64/libindy.so (__rust_maybe_catch_panic+32)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #24 pc 00000000004df8a0 /data/app/com.iitp.iitp_demo-dHroFPNqbP-kNbOtj3VKpQ==/lib/arm64/libindy.so
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #25 pc 00000000011e7334 /data/app/com.iitp.iitp_demo-dHroFPNqbP-kNbOtj3VKpQ==/lib/arm64/libindy.so
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #26 pc 000000000120d928 /data/app/com.iitp.iitp_demo-dHroFPNqbP-kNbOtj3VKpQ==/lib/arm64/libindy.so
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #27 pc 00000000000e6f20 /apex/com.android.runtime/lib64/bionic/libc.so (__pthread_start(void*)+36) (BuildId: 27147c78d1670fec7bce21c48e84eb70)
2020-12-09 10:29:12.707 17575-17575/? A/DEBUG: #28 pc 00000000000850c8 /apex/com.android.runtime/lib64/bionic/libc.so (__start_thread+64) (BuildId: 27147c78d1670fec7bce21c48e84eb70)
2020-12-09 10:29:12.874 1096-9247/? D/SensorService: Calling batch handle==7 flags=0 rate=200000000 timeout== 0
2020-12-09 10:29:12.874 862-917/? I/sensors-hal: batch:270, com.samsung.sensor.light_cct/7, period=200000000, max_latency=0 request completed
2020-12-09 10:29:12.874 862-917/? I/sensors-hal: activate:178, com.samsung.sensor.light_cct/7 en=1
2020-12-09 10:29:12.875 862-917/? I/sensors-hal: get_qmi_debug_flag:230, support_qmi_debug : false
2020-12-09 10:29:12.881 862-917/? I/sensors-hal: activate:196, com.samsung.sensor.light_cct/7 en=1 completed
2020-12-09 10:29:12.881 1096-9247/? D/SensorManager: registerListener :: 7, TMD4907 Light CCT Non-wakeup, 200000, 0, 
2020-12-09 10:29:12.943 1132-1132/? E//system/bin/tombstoned: Tombstone written to: /data/tombstones/tombstone_02
2020-12-09 10:29:12.946 1096-17581/? W/ActivityManager: crash : com.iitp.iitp_demo,0
2020-12-09 10:29:12.946 1096-17582/? I/DropBoxManagerService: add tag=data_app_native_crash isTagEnabled=true flags=0x2
2020-12-09 10:29:12.947 1096-1420/? I/BootReceiver: Copying /data/tombstones/tombstone_02 to DropBox (SYSTEM_TOMBSTONE)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hmz:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bslee,,,,,,,,,,"09/Dec/20 1:19 PM;bslee;https://github.com/hyperledger/indy-sdk/commit/bad761804828aa286d5140645dc8648ab5a2abf6;;;",,,,,,,,,,,
InvalidStructureException : A value being processed is not valid error 113 ,IS-1566,46438,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,,stpm01,stpm01,19/Dec/20 3:07 AM,14/Jan/21 10:20 PM,28/Oct/23 2:49 AM,,,,,,,,,,,aries,libindy,,,,0,,,,"When i call indy_prover_create_proof via ARIES framework .net that call indy SDK .net that call libindy.dll (Windows 10), i get InvalidStructureException : A value being processed is not valid. The SDK internal code is 113 but i don't know why?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hs3:",,,,Unset,Unset,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),stpm01,,,,,,,,,,"12/Jan/21 1:27 AM;pankajn;When I use the Java wrapper ( <version>1.15.0</version> ), I get the same error on Ubuntu 20.04 when I call proverCreateProof . This always happens when I use the schemaId, schemaJson and CredDefId, credDefJson from the ledger (i.e. Ledger.signAndSubmitRequest and then do get request and subsequently do a ""parseGetSchemaResponse"" and do a get request and do a ""parseGetCredDefResponse"").

org.hyperledger.indy.sdk.InvalidStructureException: A value being processed is not valid

One observation I had was that in the credDef Json the ""schemaId"" has the schema ""seqNo"" and not the actual ""schemaId"" (if this info. helps)

 ;;;","12/Jan/21 9:54 PM;stpm01;I had indeed noticed the presence of the NoSeq in the Json credDef. I tried to replace it just before the call to  indy_prover_create_proof with the right schemaId to do a test but without success. Personally, I was wondering if the bug was present just when checking a connectionless proof (this is my case). But I don't know if this is also the test you did? Will this bug be looked at by someone?;;;","13/Jan/21 8:44 PM;pankajn;I too tried the same but without success. I guess we will have to wait for someone from the development team to comment if they would be looking at it.;;;","14/Jan/21 10:20 PM;stpm01;I discovered that I could activate the logging of the libindy. Here are the last traces just before the crash:

...

TRACE|indy::services::anoncreds::prover| src\services\anoncreds\prover.rs:212 | _prepare_credentials_for_proving >>> requested_credentials: RequestedCredentials \{ self_attested_attributes: {}, requested_attributes: \{""email"": RequestedAttribute { cred_id: ""d3ca7e99-0ff8-4d72-967a-821dd0e14d7e"", timestamp: None, revealed: true }, ""first_name"": RequestedAttribute \{ cred_id: ""d3ca7e99-0ff8-4d72-967a-821dd0e14d7e"", timestamp: None, revealed: true }, ""username"": RequestedAttribute \{ cred_id: ""d3ca7e99-0ff8-4d72-967a-821dd0e14d7e"", timestamp: None, revealed: true }, ""last_name"": RequestedAttribute \{ cred_id: ""d3ca7e99-0ff8-4d72-967a-821dd0e14d7e"", timestamp: None, revealed: true }}, requested_predicates: {} }, proof_req: ProofRequestPayload \{ nonce: BigNumber { openssl_bn: 960840690959336350186628 }, name: ""Basic Proof"", version: ""1.0"", requested_attributes: \{""a7ef4839-04f7-4525-92e0-79354cb30eee"": AttributeInfo { name: Some(""last_name""), names: None, restrictions: Some(Or([Eq(""cred_def_id"", ""XpHQgyg7Dd4WerGtGCL3KN:3:CL:1614:vc-authn-oidc"")])), non_revoked: None }, ""a67d9ec5-c421-414e-8129-fdf09befb61d"": AttributeInfo \{ name: Some(""first_name""), names: None, restrictions: Some(Or([Eq(""cred_def_id"", ""XpHQgyg7Dd4WerGtGCL3KN:3:CL:1614:vc-authn-oidc"")])), non_revoked: None }, ""f1c2c233-1785-410e-96b3-6c826df1ce94"": AttributeInfo \{ name: Some(""email""), names: None, restrictions: Some(Or([Eq(""cred_def_id"", ""XpHQgyg7Dd4WerGtGCL3KN:3:CL:1614:vc-authn-oidc"")])), non_revoked: None }, ""aed1e027-67dd-466a-85ef-d8fdf1b2fa93"": AttributeInfo \{ name: Some(""username""), names: None, restrictions: Some(Or([Eq(""cred_def_id"", ""XpHQgyg7Dd4WerGtGCL3KN:3:CL:1614:vc-authn-oidc"")])), non_revoked: None }}, requested_predicates: {}, non_revoked: None }

TRACE|indy::api::anoncreds | src\api\anoncreds.rs:2056| prepare_result_1: >>> Err(IndyError \{ inner:AttributeInfo not found in ProofRequest for referent ""email"" Invalid structure })


TRACE|indy::api::anoncreds | src\api\anoncreds.rs:2056| indy_prover_create_proof: result: """"

 

In the libindy source code, prover.rs:

pub fn _prepare_credentials_for_proving(requested_credentials: &RequestedCredentials,
proof_req: &ProofRequestPayload) -> IndyResult<HashMap<ProvingCredentialKey, (Vec<RequestedAttributeInfo>, Vec<RequestedPredicateInfo>)>> {
trace!(""_prepare_credentials_for_proving >>> requested_credentials: \{:?}, proof_req: \{:?}"", requested_credentials, proof_req);

let mut credentials_for_proving: HashMap<ProvingCredentialKey, (Vec<RequestedAttributeInfo>, Vec<RequestedPredicateInfo>)> = HashMap::new();

for (attr_referent, requested_attr) in requested_credentials.requested_attributes.iter() {
let attr_info = proof_req.requested_attributes
.get(attr_referent.as_str())
.ok_or_else(|| err_msg(IndyErrorKind::InvalidStructure, format!(""AttributeInfo not found in ProofRequest for referent \""{}\"""", attr_referent.as_str())))?;;;;",,,,,,,,
