Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Description,Environment,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Inward issue link (Cloners),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Duplicate),Inward issue link (Duplicate),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Business Value),Custom field (Commit Levels),Custom field (Current Status),Custom field (Design),Custom field (Design Status),Custom field (Documentation Impact),Custom field (Documentation Status),Custom field (Epic Color),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (Executed),Custom field (Flagged),Custom field (Found in Commit),Custom field (Function Test Status),Custom field (Must Fix),Custom field (Original story points),Custom field (Parent Link),Custom field (Rank),Custom field (Release Note),Custom field (Release Note Required),Custom field (Root Cause Analysis),Custom field (SDK Impact),Custom field (Sample/Tutorial),Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Custom field (Steps to Reproduce),Custom field (Story Points),Custom field (System Test Impact),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Team),Custom field (Test Plan),Custom field (Test Result),Custom field (Test Result Details),Custom field (Test Type),Custom field (Triaged),Custom field (Usage),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Workaround),Custom field (gitCommitsReferenced),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Technical debt: Test logs in xunit format,IS-1,18145,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,08/Oct/19 11:38 PM,28/Oct/23 2:49 AM,08/Oct/19 11:38 PM,,,,,,,,0,5Months,,,,"Tool that we use for parsing tests output and convert to xunit.xml can't handle some cases that we have now and it was temporarily disabled on CI. Also with this test tool, we have no any stdout output.
 * Add support of our cases to cargo-xunit
 * Add support of loging to stdout to cargo-xunit
 * Enable fixed cargo-xunit on CI",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzy3ov:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,esplinr,,,,,,,,,,"08/Oct/19 11:38 PM;esplinr;We haven't needed this over the last two years, so we don't plan on doing it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging: Libindy should provide API for logger configuration that can be integrated with application logging approach.,IS-2,18146,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,31/Aug/18 1:08 AM,28/Oct/23 2:49 AM,31/Aug/18 1:08 AM,,,1.7.0,,,,,0,6Months,,,,"For the current moment libindy is linked with simple logger that outputs logs to stdout/stderr, but best practice for libraries is to use logger that will be provided by application to re-use application logging facilities. 

We suggest the following:

- Libindy should provide indy_set_logger call that will allow application to register logging callbacks
- Libindy should provide indy_get_logger call that will allow plugins (payments, storages) to re-use logger from libindy
- For development purposes libindy should also provide set_default_logger call that will allow to register simple logger bundled with libindy. We can keep the same logger behaviour as we have for now. I only suggest to disable logging by default.

Acceptance criteria:

- Design is performed and documented
- API is implemented with TDD aprroach
- Good integration tests coverage is provided
- Documentation is provided
- Migration guide is updated
- Dependent teams (vcx, libsovtoken) are notified about expected changes

 

I also suggest to review thread in [https://github.com/hyperledger/indy-sdk/issues/19] for some ideas.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-644,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-896,,,,,,,,,,"1|hzwv27:",,,,,,LibINDY Sprint 6,18.05,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,avkrishnan,gudkov,tharmon,,,,,,,,"31/Mar/18 6:26 AM;tharmon;See discussion in: https://evernym.atlassian.net/browse/EN-483;;;","22/Aug/18 9:06 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1069;;;","31/Aug/18 1:08 AM;gudkov;API implemented and tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Errors refactoring,IS-3,18147,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,03/Jul/17 10:14 PM,28/Oct/23 2:49 AM,03/Jul/17 10:14 PM,,,,,,,,0,,,,,"* Amount of error codes must be reduced. Similar error codes will be grouped if the recovery procedure is the same.
 * Better messages for each error case with the propagation of history.
 * Avoid implicit error propagation based on low-level messages. Better analisys of each case to determine precondition or invariant case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzy3tb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"03/Jul/17 10:14 PM;gudkov;This refactoring was finished;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds API: Interoperability with libsovrin,IS-4,18148,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,03/Jul/17 11:43 PM,28/Oct/23 2:49 AM,03/Jul/17 11:43 PM,,,,,,,,0,,,,,"* Understand and document differences between pysovrin and libsovrin that cause interoperability breaking* Create plan how to resolve them* Implement required changes in libsovrin
 * Implement required changes in pysovrinSee [https://evernym.atlassian.net/browse/SOV-1114]

Changes: 
* *Schema - done*
* *Claim Definition - done*
* Claim Request
* Claim
* Proof Request
* Proof
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-175,,,,,,,,,,"1|hzy3gf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,MRJCrunch,,,,,,,,,,"03/Jul/17 11:43 PM;MRJCrunch;This ticket was divided into several tasks.
Epic Link: https://jira.hyperledger.org/browse/IS-175;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt,IS-5,18149,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,08/Oct/19 11:52 PM,28/Oct/23 2:49 AM,08/Oct/19 11:52 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Technical debt,Done,,,,,,,,"1|hzy40n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MacOS Support: CD and Packages,IS-6,18150,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,24/May/19 10:48 PM,28/Oct/23 2:49 AM,24/May/19 10:48 PM,,,1.9.0,,,,,0,6Months,devops,,,* Automate artifacts creation and publishing,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-60,,,,,,,,,,"1|i00n94:",,,,,,Ev-SDK 19.10,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,avkrishnan,sergey.minaev,,,,,,,,,"24/May/19 2:11 PM;Artemkaaas;Build version: master-1114;;;","24/May/19 10:48 PM;sergey.minaev;New artifacts are available at https://repo.sovrin.org/macos/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
MacOS Support: Build libsovrin for MacOS,IS-7,18151,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,cybermag,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,21/Jul/17 11:31 PM,28/Oct/23 2:49 AM,21/Jul/17 9:55 PM,,,,,,,,0,,,,,"* Try to build
 * Solve all issues in 3d party dependencies
 * Solve all issues in libsovrin
 * Provide instruction",,,,,,,,,,,,,,,,,,,,,IS-43,,,,,,,,,,,,,,,,,"19/Jul/17 5:43 PM;farooq_m_khan;Indy-Sdk-Mac-BuildFailure.log;https://jira.hyperledger.org/secure/attachment/11703/Indy-Sdk-Mac-BuildFailure.log","19/Jul/17 8:02 PM;farooq_m_khan;Indy-Sdk-Mac-BuildFailure_WithVerbose.log;https://jira.hyperledger.org/secure/attachment/11712/Indy-Sdk-Mac-BuildFailure_WithVerbose.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-60,,,,,,,,,,"1|hzy8qv:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,cybermag,farooq_m_khan,gudkov,,,,,,,,"28/Jun/17 1:01 AM;gudkov;The documentation about building on MacOS was already created, but it seems a bit outdated. We need to re-check it.;;;","19/Jul/17 6:33 PM;farooq_m_khan;[^Indy-Sdk-Mac-BuildFailure.log]Attached log file which has the Failure Log of my build attempt on Mac.

I am running MacOS Sierra 10.12.15

libsodium: stable 1.0.13
zeromq: stable 4.2.2
cmake: stable 3.8.2
openssl: stable 1.0.2l (bottled)


 
 ;;;","19/Jul/17 8:02 PM;farooq_m_khan;[^Indy-Sdk-Mac-BuildFailure_WithVerbose.log] Log with verbose enabled ;;;","20/Jul/17 9:39 PM;farooq_m_khan;Looks like the compilation issue on Mac is due to libzmq-pw, the symptoms are similar to those reported in the following issue

https://github.com/zeromq/czmq/issues/396
 ;;;","21/Jul/17 5:19 PM;cybermag;The issue is fixed. The reason of the issue was conflict between libc++ and libstdc++ libraries. The solution is to use libc++ library for rust-zmq-pw crate. I have changed the build.rs file to use libstdc++ for linux build and to use libc++ for mac. After that I libsovrin builds without any problem on macos and linux.
The changes commited into evernym/rust-zmq-pw, branch fix_macos_build.;;;","21/Jul/17 5:56 PM;cybermag;current status: 
 - checked build for MacOS - all OK
 - checked build for Linux - all OK

I have not run the tests, but I believe that it must be done.;;;","21/Jul/17 11:31 PM;farooq_m_khan;Thanks It does work now.;;;",,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Packages,IS-8,18152,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,01/Aug/17 12:25 AM,28/Oct/23 2:49 AM,01/Aug/17 12:25 AM,,,,,,,,0,,,,,"Provide:
 * Automated build
 * Scripts for packages creation and publishing",,,,,,,,,,,,,,,,,,IS-190,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzx21b:",,,,,,LibINDY Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Signus API integration tests (High cases),IS-9,18153,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,27/Jul/17 5:13 PM,28/Oct/23 2:49 AM,27/Jul/17 5:13 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzx213:",,,,,,LibINDY Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Wallet API integration tests (High cases),IS-10,18154,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,27/Jul/17 5:13 PM,28/Oct/23 2:49 AM,27/Jul/17 5:13 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzx20n:",,,,,,LibINDY Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Agent API integration tests (High cases),IS-11,18155,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,25/Jul/17 6:48 PM,28/Oct/23 2:49 AM,25/Jul/17 6:48 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzy41r:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Ledger API integration tests (High cases),IS-12,18156,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jul/17 5:58 PM,28/Oct/23 2:49 AM,20/Jul/17 5:58 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzy41j:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Pool API integration tests (High cases),IS-13,18157,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,01/Aug/17 5:21 PM,28/Oct/23 2:49 AM,01/Aug/17 5:21 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzx20f:",,,,,,LibINDY Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Port demo tests,IS-14,18158,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,27/Jul/17 5:13 PM,28/Oct/23 2:49 AM,27/Jul/17 5:13 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzx207:",,,,,,LibINDY Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Signus API,IS-15,18159,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,17/Jul/17 9:01 PM,28/Oct/23 2:49 AM,17/Jul/17 9:01 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzy7o7:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Wallet API,IS-16,18160,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,17/Jul/17 10:44 PM,28/Oct/23 2:49 AM,17/Jul/17 6:32 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzy7nz:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Agent API,IS-17,18161,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,24/Jul/17 7:17 PM,28/Oct/23 2:49 AM,24/Jul/17 7:17 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzx21z:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Ledger API,IS-18,18162,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,19/Jul/17 7:45 PM,28/Oct/23 2:49 AM,19/Jul/17 7:45 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzx21r:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Pool API,IS-19,18163,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,18/Jul/17 7:37 PM,28/Oct/23 2:49 AM,18/Jul/17 7:37 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzy7nr:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: API definition,IS-20,18164,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,p5n,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:51 AM,28/Oct/23 2:49 AM,20/Jun/17 12:51 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzy44f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet API: Integration testing (High cases),IS-21,18165,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,03/Jul/17 9:25 PM,28/Oct/23 2:49 AM,03/Jul/17 9:25 PM,,,,,,,,0,,,,,"Implement High test cases for Wallet API:
 * *sovrin_register_wallet_type*
 * *sovrin_create_wallet*
 * *sovrin_open_wallet*
 * *sovrin_close_wallet*
 * *sovrin_delete_wallet*
 * *sovrin_wallet_set_seq_no_for_value*

High cases (alpha version):
 * Normal cases. Note that there can be multiple execution branches. We need to cover at each branch. Branches examples:
 ** Entity cached in the wallet
 ** Entity should be taken from the ledger
 * Error cases that require an explicit recovering procedure. Examples:
 ** Invalid wallet credentials
 ** No entity found in the wallet
 ** No entity found in the ledger
 ** Transaction doesn't allow for current identity
 ** Unknown crypto
 ** Claim doesn't correspond to scheme, proof request doesn't correspond to claim and etc...
 ** Revocation registry is full and etc...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-45,,,,,,,,,,"1|hzy44n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DID API: Integration tests (Low cases),IS-22,18166,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,6Months,,,,"Implement Low test cases for DID API.

Low level cases (production version):
 * Cases that hard to test: Io errors, timeouts and etc...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-69,,,,,,,,,,"1|hzy6qf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,esplinr,,,,,,,,,,"27/Aug/18 11:34 PM;esplinr;We are comfortable that our current tests are sufficient, so we won't plan on doing these tests.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Signus API: Integration tests (Medium cases),IS-23,18167,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,03/Jul/17 9:22 PM,28/Oct/23 2:49 AM,03/Jul/17 9:22 PM,,,,,,,,0,,,,,"Implement High test cases for Signus API:
 * *sovrin_create_and_store_my_did*
 * *sovrin_replace_keys*
 * *sovrin_store_their_did*
 * *sovrin_sign*
 * *sovrin_verify_signature*

Medium level cases (beta version):
 * Precondition checking:
 ** Invalid handle
 ** Wallet doesn't correspond to pool
 ** Invalid json format
 ** Invalid json structure (missed fields and etc...)
 ** Invalid base58
 ** Invalid crypto keys lenght and format
 ** Invalid crypto primitives (bigints, points)
 ** Invalid complex crypto structures (anoncreds structures mostly)
 ** Invalid responses from 3d parties (Ledger, Agent)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-69,,,,,,,,,,"1|hzy45b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"03/Jul/17 9:22 PM;gudkov;Tests were implemented except encrypt/decrypt method. encrypt/decrypt will be handled by IS-165;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Signus API: Integration tests (High Level cases),IS-24,18168,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,03/Jul/17 9:02 PM,28/Oct/23 2:49 AM,03/Jul/17 9:02 PM,,,,,,,,0,,,,,"Implement High test cases for Signus API:
 * *sovrin_create_and_store_my_did*
 * *sovrin_replace_keys*
 * *sovrin_store_their_did*
 * *sovrin_sign*
 * *sovrin_verify_signature*

High cases (alpha version):
 * Normal cases. Note that there can be multiple execution branches. We need to cover at each branch. Branches examples:
 ** Entity cached in the wallet
 **  Entity should be taken from the ledger
 * Error cases that require an explicit recovering procedure. Examples:
 ** Invalid wallet credentials
 ** No entity found in the wallet
 ** No entity found in the ledger
 ** Transaction doesn't allow for current identity
 ** Unknown crypto
 ** Claim doesn't correspond to scheme, proof request doesn't correspond to claim and etc...
 ** Revocation registry is full and etc...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-69,,,,,,,,,,"1|hzy453:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"03/Jul/17 9:01 PM;gudkov;Tests were implemented. Encode/decode tests will be covered with IS-164;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Wallet API demo tests,IS-25,18169,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,19/Jun/17 11:44 PM,28/Oct/23 2:49 AM,19/Jun/17 11:44 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy45j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"19/Jun/17 11:44 PM;gudkov;Done as dupplicate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Anoncreds API demo tests,IS-26,18170,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,19/Jun/17 11:44 PM,28/Oct/23 2:49 AM,19/Jun/17 11:44 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy45r:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"19/Jun/17 11:44 PM;gudkov;Done as dupplicate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Signus API demo tests,IS-27,18171,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,19/Jun/17 11:48 PM,28/Oct/23 2:49 AM,19/Jun/17 11:48 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy45z:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"19/Jun/17 11:48 PM;gudkov;Done as dupplicate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Ledger API demo tests,IS-28,18172,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,19/Jun/17 11:48 PM,28/Oct/23 2:49 AM,19/Jun/17 11:48 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy46f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"19/Jun/17 11:48 PM;gudkov;Done as dupplicate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Port Demo tests,IS-29,18173,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,19/Jun/17 11:51 PM,28/Oct/23 2:49 AM,19/Jun/17 11:51 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,IS-25,IS-26,IS-27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy467:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Signus API medium level cases,IS-30,18174,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,19/Jun/17 11:08 PM,28/Oct/23 2:49 AM,19/Jun/17 11:08 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy46n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Ledger API medium level cases,IS-31,18175,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,19/Jun/17 11:52 PM,28/Oct/23 2:49 AM,19/Jun/17 11:52 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy46v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"19/Jun/17 11:52 PM;gudkov;Only high cases tests are planned for wrapper. Closed as invalid.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Wallet API medium level cases,IS-32,18176,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,19/Jun/17 11:52 PM,28/Oct/23 2:49 AM,19/Jun/17 11:52 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy473:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"19/Jun/17 11:52 PM;gudkov;Only high cases tests are planned for wrapper. Closed as invalid.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Anoncreds API Revocation integration tests (High cases),IS-33,18177,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,01/Jul/17 12:12 AM,28/Oct/23 2:49 AM,01/Jul/17 12:12 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy493:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Anoncreds API Primary Claims Integration tests (High cases),IS-34,18178,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,03/Jul/17 10:02 PM,28/Oct/23 2:49 AM,03/Jul/17 10:02 PM,,,,,,,,0,,,,,"Need to implement high cases tests for the functions:
 - *issuerCreateAndStoreClaimDef* *- done**
 - *issuerCreateClaim* *- done**
 - *proverStoreClaimOffer* *- done**
 - *proverGetClaimOffers* *- done**
 - *proverCreateMasterSecret* *- done**
 - *proverCreateAndStoreClaimReq* *- done**
 - *proverStoreClaim* *- done**
 - *proverGetClaims* *- done**
 - *proverGetClaimsForProofReq* *- done**
 - *proverCreateProof* *- done**
 - *verifierVerifyProof* *- done**",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy48f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"03/Jul/17 10:02 PM;gudkov;Tests were ported;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Signus API integration tests (High cases),IS-35,18179,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,03/Jul/17 10:01 PM,28/Oct/23 2:49 AM,03/Jul/17 10:01 PM,,,,,,,,0,,,,,"Need to implement high cases tests for the functions:
 - *createAndStoreMyDid* *- done**
 - *replaceKeys* *- done**
 - *storeTheirDid* *- done**
 - *sign* *- done**
 - *verifySignature -* *done**",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy47z:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"03/Jul/17 9:45 PM;gudkov;Tests were ported;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Wallet API integration tests (High cases),IS-36,18180,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,01/Jul/17 12:11 AM,28/Oct/23 2:49 AM,01/Jul/17 12:11 AM,,,,,,,,0,,,,,"Need to implement high cases tests for the functions:
 - *createWallet - done*
 - *openWallet* *- done*
 - *closeWallet* *- done*
 - *deleteWallet* *- done*
 - *walletSetSeqNo* *- done*",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy47r:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Ledger API integration tests (High cases),IS-37,18181,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,cybermag,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,03/Jul/17 10:02 PM,28/Oct/23 2:49 AM,03/Jul/17 10:02 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy487:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"03/Jul/17 10:01 PM;gudkov;Tests were ported;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Pool API medium level cases,IS-38,18182,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,19/Jun/17 11:54 PM,28/Oct/23 2:49 AM,19/Jun/17 11:54 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy48n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"19/Jun/17 11:53 PM;gudkov;Only high cases tests are planned for wrapper. Closed as invalid.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Pool API integration tests (High cases),IS-39,18183,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,01/Jul/17 12:11 AM,28/Oct/23 2:49 AM,01/Jul/17 12:10 AM,,,,,,,,0,,,,,"Need to implement high cases tests the functions:
 - *createPoolWithName* *- done*
 - *openPoolWithName* *- done*
 - *refreshPoolWithHandle - done*
 - *closePoolWithHandle - done*
 - *deletePoolWithName - done*",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy47j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Agent API medium level cases,IS-40,18184,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:01 AM,28/Oct/23 2:49 AM,20/Jun/17 12:01 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy48v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"20/Jun/17 12:01 AM;gudkov;Only high cases tests are planned for wrapper. Closed as invalid.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Agent API integration tests (High cases),IS-41,18185,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,07/Jul/17 10:16 PM,28/Oct/23 2:49 AM,07/Jul/17 10:16 PM,,,,,,,,0,,,,,"Need to implement the high cases tests for functions:
 * agentConnect
 * agentListen
 * agentSend
 * agentCloseConnection
 * agentCloseListener",,,,,,,,,,,,,,,,,,IS-188,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy3l3:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MacOS support: create the .md file with build instruction,IS-42,18186,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,cybermag,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 1:07 AM,28/Oct/23 2:49 AM,20/Jun/17 1:07 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-60,,,,,,,,,,"1|hzy49b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"20/Jun/17 1:07 AM;gudkov;Dupplicate;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"MacOS support: Build libsovrin for mac, run the tests",IS-43,18187,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,cybermag,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 1:07 AM,28/Oct/23 2:49 AM,20/Jun/17 1:07 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-60,,,,,,,,,,"1|hzy41b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"20/Jun/17 1:06 AM;gudkov;Dupplicate;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Agent API,IS-44,18188,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,cybermag,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:43 AM,28/Oct/23 2:49 AM,20/Jun/17 12:43 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy49j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet API,IS-45,18189,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,08/Oct/19 11:06 PM,28/Oct/23 2:49 AM,05/Sep/18 9:55 PM,,,1.5,1.6.4,wallet,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Wallet API,Done,,,,,,,,"1|hzy49r:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet API: Add security to wallet,IS-46,18190,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,nage,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-45,,,,,,,,,,"1|hzzc67:",,,,,,LibINDY 17.21,LibINDY 17.22,LibINDY 17.23,LibINDY 17.24,LibINDY 17.25,LibINDY 18.01,LibINDY 18.02 CLI +,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,18.06,18.07,EV 18.10 Stability and VC,18.08 Wallets+,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,0.0,,,,,,,,,,,,avkrishnan,farooq_m_khan,krw910,,,,,,,,,"14/Oct/17 5:46 AM;krw910;This work is covered by IS-373, IS-376 and IS-377;;;","08/Nov/17 7:07 AM;krw910;[~gudkov] Can we close out this ticket since it is covered by the other 3 in my previous comment?

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: PairwiseCurveCP,IS-47,18191,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,29/Jun/17 11:28 PM,28/Oct/23 2:49 AM,29/Jun/17 11:28 PM,,,,,,,,0,,,,,"* *Create ZMQ fork with PairwiseCurveCP support*
 * *Fork zmq-sys rust wrapper and add PairwiseCurveCP support*
 * *Fork zqm rust wrapper and add PairwiseCurveCP support*
 * *Integrate forks to libsovrin build and CI. See [https://evernym.atlassian.net/browse/SOV-1113]*",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-95,,,,,,,,,,"1|hzy4bb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,sergey.minaev,,,,,,,,,,"26/Jun/17 8:20 PM;sergey.minaev;Forked to evernym:
 [https://github.com/evernym/rust-zmq-pw]
 [https://github.com/evernym/libzmq-pw];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto API: Integration testing (Low cases),IS-48,18192,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,6Months,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6q7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,krw910,,,,,,,,,,"14/Oct/17 5:54 AM;krw910;[~avkrishnan] Please provide information on what this ticket is about.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: Integration testing (Medium cases),IS-49,18193,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,11/Aug/17 4:12 PM,28/Oct/23 2:49 AM,11/Aug/17 4:12 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-95,,,,,,,,,,"1|hzx1zb:",,,,,,LibINDY Sprint 5,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: Integration testing (High cases),IS-50,18194,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,30/Jun/17 12:26 AM,28/Oct/23 2:49 AM,30/Jun/17 12:26 AM,,,,,,,,0,,,,,"* *sovrin_agent_connect*
 ** *local data for connect*
 ** *remote data for connect*
 * *sovrin_agent_listen*
 ** *single server key*
 ** *multiply server key*
 * *sovrin_agent_send*
 * *sovrin_agent_close_connection*
 * *sovrin_agent_close_listener*",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-95,,,,,,,,,,"1|hzy4bj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: Service implementation,IS-51,18195,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,29/Jun/17 11:30 PM,28/Oct/23 2:49 AM,29/Jun/17 11:30 PM,,,,,,,,0,,,,,"* *sovrin_agent_connect*
 * *sovrin_agent_listen*
 * *sovrin_agent_send*
 * *sovrin_agent_close_connection*
 * *sovrin_agent_close_listener*",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-95,,,,,,,,,,"1|hzy4bz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: Commands implementation,IS-52,18196,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,29/Jun/17 11:30 PM,28/Oct/23 2:49 AM,29/Jun/17 11:30 PM,,,,,,,,0,,,,,"* *sovrin_agent_connect*
 * *sovrin_agent_listen*
 * *sovrin_agent_send*
 * *sovrin_agent_close_connection*
 * *sovrin_agent_close_listener*
 * *implement logic for receiving endpoint information from ledger*",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-95,,,,,,,,,,"1|hzy4br:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
API Demo,IS-53,18197,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,29/Aug/17 5:56 PM,28/Oct/23 2:49 AM,20/Jun/17 12:55 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,API Demo,Done,,,,,,,,"1|hzy3tz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger API: Integration tests (Low cases),IS-54,18198,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,6Months,,,,"Implement Low test cases for Ledger API:
 * SignAndSubmitRequest
 * SubmitRequest
 * BuildGetDdoRequest
 * BuildNymRequest
 * BuildAttribRequest
 * BuildGetAttribRequest
 * BuildGetNymRequest
 * BuildSchemaRequest
 * BuildGetSchemaRequest
 * BuildClaimDefRequest
 * BuildGetClaimDefRequest
 * BuildNodeRequest

Low level cases (production version):
 * Cases that hard to test: Io errors, timeouts and etc...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-57,,,,,,,,,,"1|hzy6qv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger API: Integration tests (Medium cases),IS-55,18199,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,03/Jul/17 8:44 PM,28/Oct/23 2:49 AM,03/Jul/17 8:44 PM,,,,,,,,0,,,,,"Implement Medium test cases for Ledger API:
 * *SignAndSubmitRequest*
 * *SubmitRequest*
 * *BuildNymRequest*
 * *BuildAttribRequest*
 * *BuildGetAttribRequest*
 * *BuildGetNymRequest*
 * *BuildSchemaRequest*
 * *BuildGetSchemaRequest*
 * *BuildClaimDefRequest*
 * *BuildGetClaimDefRequest*
 * *BuildNodeRequest*

Medium level cases (beta version):
 * Precondition checking:
 ** Invalid handle
 ** Wallet doesn't correspond to pool
 ** Invalid json format
 ** Invalid json structure (missed fields and etc...)
 ** Invalid base58
 ** Invalid crypto keys lenght and format
 ** Invalid crypto primitives (bigints, points)
 ** Invalid complex crypto structures (anoncreds structures mostly)
 ** Invalid responses from 3d parties (Ledger, Agent)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-57,,,,,,,,,,"1|hzy4cf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"03/Jul/17 8:43 PM;gudkov;Tests were implemented, but require some refactoring in scope of IS-163;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger API: Integration tests (High cases),IS-56,18200,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,03/Jul/17 8:43 PM,28/Oct/23 2:49 AM,03/Jul/17 8:43 PM,,,,,,,,0,,,,,"Implement High test cases for Ledger API:
 * *SignAndSubmitRequest*
 * *SubmitRequest*
 * *BuildNymRequest*
 * *BuildAttribRequest*
 * *BuildGetAttribRequest*
 * *BuildGetNymRequest*
 * *BuildSchemaRequest*
 * *BuildGetSchemaRequest*
 * *BuildClaimDefRequest*
 * *BuildGetClaimDefRequest*
 * *BuildNodeRequest*

High cases (alpha version):
 * Normal cases. Note that there can be multiple execution branches. We need to cover at each branch. Branches examples:
 ** Entity cached in the wallet
 ** Entity should be taken from the ledger
 * Error cases that require an explicit recovering procedure. Examples:
 ** Invalid wallet credentials
 ** No entity found in the wallet
 ** No entity found in the ledger
 ** Transaction doesn't allow for current identity
 ** Unknown crypto
 ** Claim doesn't correspond to scheme, proof request doesn't correspond to claim and etc...
 ** Revocation registry is full and etc...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-57,,,,,,,,,,"1|hzy4c7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"03/Jul/17 8:43 PM;gudkov;Tests were implemented, but require some refactoring in scope of IS-163;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger API,IS-57,18201,,Epic,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,11/Oct/19 9:41 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Ledger API,,,,,,,,,"1|hzy3xz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Trace helpers and rules,IS-58,18202,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,08/Oct/19 11:39 PM,28/Oct/23 2:49 AM,08/Oct/19 11:39 PM,,,,,,,,0,6Months,,,,"* implement trace helpers for errors to throw
 * determine format of trace and add macros if default is not enough
 * code refactoring to use this helpers in all places",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzy3p3:",,,,,,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,avkrishnan,esplinr,,,,,,,,,,"23/Oct/17 11:57 PM;sklump;This would be a tremendous upgrade. I would love to see it.;;;","08/Oct/19 11:39 PM;esplinr;People seem happy with how tracing is handled in the current code base.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI: Nodes Pool,IS-59,18203,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 1:04 AM,28/Oct/23 2:49 AM,20/Jun/17 1:04 AM,,,,,,,,0,,,,,"Use nodes pool in CI, activate pool-depended tests.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4cn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MacOS Support,IS-60,18204,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,08/Oct/19 11:01 PM,28/Oct/23 2:49 AM,08/Oct/19 11:00 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,IS-678,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MacOS Support,Done,,,,,,,,"1|hzy3y7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,farooq_m_khan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ubuntu Support: Packages,IS-61,18205,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,24/Jul/17 4:11 PM,28/Oct/23 2:49 AM,24/Jul/17 4:11 PM,,,,,,,,0,,,,,"* Provide script for debs creation
 * Integrate this script with CI",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-62,,,,,,,,,,"1|hzx1zz:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ubuntu Support,IS-62,18206,,Epic,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Ubuntu Support,Done,,,,,,,,"1|hzy4db:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows Support: CI pipeline,IS-63,18207,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,11/Aug/17 12:37 AM,28/Oct/23 2:49 AM,11/Aug/17 12:37 AM,,,,,,,,0,,,,,* Provide CI pipeline for Windows,,,,,,,,,,,,,,,,,,IS-191,,,IS-150,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-65,,,,,,,,,,"1|hzx1vz:",,,,,,LibINDY Sprint 3,LibINDY Sprint 4,LibINDY Sprint 5,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows Support: Build libsovrin on Windows,IS-64,18208,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,p5n,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,28/Jun/17 12:55 AM,28/Oct/23 2:49 AM,28/Jun/17 12:55 AM,,,,,,,,0,,,,,"* *Try to build - done*
 * *Solve all issues in 3d party dependencies- done*
 * *Solve all issues in libsovrin - done*
 * *Provide instruction*",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-136,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-65,,,,,,,,,,"1|hzy4cv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"28/Jun/17 12:55 AM;gudkov;Documentation for windows build was updated and it seems good enough now to close this ticket. See docs/windows-buid.md file for windows build instruction.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows Support,IS-65,18209,,Epic,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Windows Support,Done,,,,,,,,"1|hzy4d3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper,IS-66,18210,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,08/Oct/19 11:02 PM,28/Oct/23 2:49 AM,08/Oct/19 11:02 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Python Wrapper,Done,,,,,,,,"1|hzy3zj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger API: Nodes emulator for unit tests,IS-67,18211,,Task,Complete,IS,Indy SDK,software,resplin,,,Lowest,Done,sergey.minaev,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,26/Jul/18 6:18 PM,28/Oct/23 2:49 AM,26/Jul/18 6:18 PM,,,,,,,,0,6Months,,,,"* *simple emulator with one node - done*
 * multi-node emulator",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-705,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-57,,,,,,,,,,"1|hzy6pz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,sergey.minaev,,,,,,,,,,"26/Jul/18 6:18 PM;sergey.minaev;Done in scope IS-705;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper,IS-68,18212,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,08/Oct/19 10:59 PM,28/Oct/23 2:49 AM,08/Oct/19 10:59 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iOS Wrapper,Done,,,,,,,,"1|hzy3xj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Signus API,IS-69,18213,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,08/Oct/19 10:58 PM,28/Oct/23 2:49 AM,27/Aug/18 11:36 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Crypto API,Done,,,,,,,,"1|hzy3vj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger API: Implement commands,IS-70,18214,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 4:54 PM,28/Oct/23 2:49 AM,20/Jun/17 12:43 AM,,,,,,,,0,,,,,"* *SignAndSubmitRequest - done**
 * *SubmitRequest - done**
 * *BuildGetDdoRequest - done**
 * *BuildNymRequest - done**
 * *BuildAttribRequest - done**
 * *BuildGetAttribRequest - done**
 * *BuildGetNymRequest - done**
 * *BuildSchemaRequest - done**
 * *BuildGetSchemaRequest - done**
 * *BuildClaimDefRequest - done**
 * *BuildGetClaimDefRequest - done**
 * *BuildNodeRequest - done**",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4dr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
API: Signus API,IS-71,18215,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:42 AM,28/Oct/23 2:49 AM,20/Jun/17 12:42 AM,,,,,,,,0,,,,,Implementation for Signus part of API and corresponded commands stubs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4dj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
API: Ledger API,IS-72,18216,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:58 AM,28/Oct/23 2:49 AM,20/Jun/17 12:58 AM,,,,,,,,0,,,,,Implementation for Ledger part of API and corresponded commands stubs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4dz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
API: Anoncreds API,IS-73,18217,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:59 AM,28/Oct/23 2:49 AM,20/Jun/17 12:59 AM,,,,,,,,0,,,,,Implementation for anoncreds part of API and corresponded commands stubs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4e7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
API: Pool API,IS-74,18218,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:59 AM,28/Oct/23 2:49 AM,20/Jun/17 12:59 AM,,,,,,,,0,,,,,Implementation for Pool part of API and corresponded commands stubs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4ef:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
API: Wallet API,IS-75,18219,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:59 AM,28/Oct/23 2:49 AM,20/Jun/17 12:59 AM,,,,,,,,0,,,,,Implementation for Wallet part of API and corresponded commands stubs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4en:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds: Create wrapper for Milagro,IS-76,18220,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,p5n,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,21/Jun/17 12:51 AM,28/Oct/23 2:49 AM,21/Jun/17 12:51 AM,,,,,,,,0,,,,,We need Rust wrapper for Milagro crypto library https://github.com/miracl/milagro-crypto-cThe following methods are required for PoC:* FF_random* FF_mul* FF_add* FF_sub* FF_mod* FF_sqr* FF_pow* FF_prime,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4f3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HLD: Document Catch Up process,IS-77,18221,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,cybermag,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:39 AM,28/Oct/23 2:49 AM,20/Jun/17 12:39 AM,,,,,,,,0,,,,,Document Sovrin Catch Up process on level that will allow us to start implementation of transaction handling.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4fb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HLD: Document messages level Sovrin API,IS-78,18222,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,cybermag,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:39 AM,28/Oct/23 2:49 AM,20/Jun/17 12:39 AM,,,,,,,,0,,,,,Document Sovrin messages workflow on level that will allow us to start implementation of transaction handling.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4fj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HLD: Versioning approach,IS-79,18223,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:39 AM,28/Oct/23 2:49 AM,20/Jun/17 12:39 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4fr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HLD: Testing Approach,IS-80,18224,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:40 AM,28/Oct/23 2:49 AM,20/Jun/17 12:40 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4fz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"HLD: Infrastructure (Configuration, Logging, Error Handling, Storage, Build)",IS-81,18225,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:40 AM,28/Oct/23 2:49 AM,20/Jun/17 12:40 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4g7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HLD: C API,IS-82,18226,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,cybermag,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:40 AM,28/Oct/23 2:49 AM,20/Jun/17 12:40 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4gf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HLD: Rust API,IS-83,18227,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:40 AM,28/Oct/23 2:49 AM,20/Jun/17 12:40 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4gn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HLD: Code layout and DI,IS-84,18228,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:41 AM,28/Oct/23 2:49 AM,20/Jun/17 12:41 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4gv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HLD: Repositories,IS-85,18229,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:41 AM,28/Oct/23 2:49 AM,20/Jun/17 12:41 AM,,,,,,,,0,,,,,"Fill section ""Repositories and high level code organization"" in HLD document",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4h3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HLD: Main approach to computing organization,IS-86,18230,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:41 AM,28/Oct/23 2:49 AM,20/Jun/17 12:41 AM,,,,,,,,0,,,,,"Fill ""System components and computing organization"" section in HLD document.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4hb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Beta Release,IS-87,18231,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:42 AM,28/Oct/23 2:49 AM,20/Jun/17 12:42 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4ev:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"20/Jun/17 12:41 AM;gudkov;Invalid;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Alpha Release,IS-88,18232,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:42 AM,28/Oct/23 2:49 AM,20/Jun/17 12:42 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4hj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"20/Jun/17 12:42 AM;gudkov;Invalid;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds,IS-89,18233,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,08/Oct/19 10:58 PM,28/Oct/23 2:49 AM,27/Aug/18 11:38 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Anoncreds API,Done,,,,,,,,"1|hzy3un:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool Ledger,IS-90,18234,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,08/Oct/19 11:04 PM,28/Oct/23 2:49 AM,20/Sep/19 11:45 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Pool API,Done,,,,,,,,"1|hzy3z3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
API Demo,IS-91,18235,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,20/Jun/17 12:42 AM,28/Oct/23 2:49 AM,20/Jun/17 12:42 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4hr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sean to write all the stories,IS-92,18236,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,avkrishnan,avkrishnan,avkrishnan,16/Jun/17 11:06 PM,19/Jun/17 1:41 PM,28/Oct/23 2:49 AM,19/Jun/17 1:41 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4hz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet API: Integration testing (Medium cases),IS-93,18314,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,19/Jun/17 10:51 PM,03/Jul/17 9:25 PM,28/Oct/23 2:49 AM,03/Jul/17 9:25 PM,,,,,,,,0,,,,,"Implement High test cases for Wallet API:
 * *sovrin_register_wallet_type*
 * *sovrin_create_wallet*
 * *sovrin_open_wallet*
 * *sovrin_close_wallet*
 * *sovrin_delete_wallet*
 * *sovrin_wallet_set_seq_no_for_value*

Medium level cases (beta version):
 * Precondition checking:
 ** Invalid handle
 ** Wallet doesn't correspond to pool
 ** Invalid json format
 ** Invalid json structure (missed fields and etc...)
 ** Invalid base58
 ** Invalid crypto keys lenght and format
 ** Invalid crypto primitives (bigints, points)
 ** Invalid complex crypto structures (anoncreds structures mostly)
 ** Invalid responses from 3d parties (Ledger, Agent)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-45,,,,,,,,,,"1|hzy44v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet API: Integration testing (Low cases),IS-94,18315,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,Artemkaaas,gudkov,gudkov,19/Jun/17 10:52 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,6Months,,,,"Implement High test cases for Wallet API:
 * sovrin_register_wallet_type
 * sovrin_create_wallet
 * sovrin_open_wallet
 * *sovrin_close_wallet*
 * *sovrin_delete_wallet*
 * *sovrin_wallet_set_seq_no_for_value*

Low level cases (production version):
 * Cases that hard to test: Io errors, timeouts and etc...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-45,,,,,,,,,,"1|hzy6r3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,gudkov,,,,,,,,,,"27/Aug/18 11:25 PM;esplinr;We took a different approach to testing, and we no longer believe that these specific test cases are necessary.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API,IS-95,18316,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,19/Jun/17 10:54 PM,08/Oct/19 10:58 PM,28/Oct/23 2:49 AM,27/Aug/18 11:39 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-6,,Agent API,Done,,,,,,,,"1|hzy3u7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interoperability with libsovrin: Claim Request,IS-96,18318,18148,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,MRJCrunch,MRJCrunch,19/Jun/17 11:09 PM,03/Jul/17 11:19 PM,28/Oct/23 2:49 AM,03/Jul/17 11:19 PM,,,,,,,,0,,,,,Implement required changes for Claim Request,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4pr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MRJCrunch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interoperability with libsovrin: Claim,IS-97,18319,18148,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,MRJCrunch,MRJCrunch,19/Jun/17 11:09 PM,03/Jul/17 11:27 PM,28/Oct/23 2:49 AM,03/Jul/17 11:27 PM,,,,,,,,0,,,,,Implement required changes for Claim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4pz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MRJCrunch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interoperability with libsovrin: Proof Request,IS-98,18320,18148,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,MRJCrunch,MRJCrunch,19/Jun/17 11:10 PM,03/Jul/17 11:27 PM,28/Oct/23 2:49 AM,03/Jul/17 11:27 PM,,,,,,,,0,,,,,Implement required changes for Proof Request,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4q7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MRJCrunch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interoperability with libsovrin: Proof,IS-99,18321,18148,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,MRJCrunch,MRJCrunch,19/Jun/17 11:10 PM,03/Jul/17 11:27 PM,28/Oct/23 2:49 AM,03/Jul/17 11:27 PM,,,,,,,,0,,,,,Implement required changes for Proof,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4qf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MRJCrunch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper: CD and Packaging,IS-100,18329,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,20/Jun/17 12:37 AM,03/Aug/18 11:56 AM,28/Oct/23 2:49 AM,02/Aug/18 11:23 PM,,,1.6.2,,,,,0,6Months,,,,"Provide:
 * Automated build
 * Scripts for packages creation and publishing -(pods)- as binaries artifcats",,,,,,,,,,,,,,,,,,IS-189,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzzjkv:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"02/Aug/18 8:40 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1004;;;","02/Aug/18 8:45 PM;Artemkaaas;Changes: 
    Implemented publishing of two Libindy artifacts to https://repo.sovrin.org/ios/:
         *  universal binary that contains all 5 architectures. (aarch64-apple-ios armv7-apple-ios armv7s-apple-ios i386-apple-ios x86_64-apple-ios)
         *  binary that contents 2 architectures (aarch64-apple-ios and armv7-apple-ios)
    Implemented publishing the same artifacts as for Libindy for Libnullpay.
Build version: master-667;;;","02/Aug/18 11:23 PM;zhigunenko.dsr;*Steps to Validate:*
Check content of artifacts in repository (master folder)

*Actual results:*
""Binary that contents 2 architectures"" - contain folders for arm-9 and arm64
""Universal binary"" - contain folders for arm-9, arm-11, arm64, x64 and x86;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds API: Interoperability with libsovrin,IS-101,18374,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:46 PM,28/Oct/23 2:49 AM,20/Jun/17 8:46 PM,,,,,,,,0,,,,,* Understand and document differences between pysovrin and libsovrin that cause interoperability breaking* Create plan how to resolve them* Implement required changes in libsovrin * Implement required changes in pysovrinSee https://evernym.atlassian.net/browse/SOV-1114,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4tz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"20/Jun/17 8:45 PM;gudkov;Dupplicate for IS-4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds API: Revocation integration testing (Low cases),IS-102,18375,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,6Months,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy6pr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,esplinr,,,,,,,,,,"27/Aug/18 11:37 PM;esplinr;We are happy with our current tests and don't believe this work is necessary.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds API: Revocation integration testing (Medium cases),IS-103,18376,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,01/Aug/18 4:32 PM,28/Oct/23 2:49 AM,01/Aug/18 4:32 PM,,,,,,,,0,6Months,,,,"Implement Medium test cases for Anoncreds API:
 * sovrin_issuer_create_and_store_revoc_reg
 *  sovrin_issuer_revoke_claim

Medium level cases (beta version):
 * Precondition checking:
 ** Invalid handle
 ** Wallet doesn't correspond to pool
 ** Invalid json format
 ** Invalid json structure (missed fields and etc...)
 ** Invalid base58
 ** Invalid crypto keys lenght and format
 ** Invalid crypto primitives (bigints, points)
 ** Invalid complex crypto structures (anoncreds structures mostly)
 ** Invalid responses from 3d parties (Ledger)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy3pz:",,,,,,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,avkrishnan,sergey.minaev,,,,,,,,,,"01/Aug/18 4:31 PM;sergey.minaev;Outdated ticket: this scope of error-scenarios is covered by indy-crypto unit tests.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds API: Prime claims integration testing (Low cases),IS-104,18377,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,6Months,,,,"Implement High test cases for Anoncreds API:
 * sovrin_issuer_create_and_store_claim_def
 * sovrin_issuer_create_claim
 * sovrin_prover_store_claim_offer
 * sovrin_prover_get_claim_offers
 * sovrin_prover_create_master_secret
 * sovrin_prover_create_and_store_claim_req
 * sovrin_prover_store_claim
 * sovrin_prover_get_claims
 * sovrin_prover_get_claims_for_proof_req
 * sovrin_prover_create_proof
 * sovrin_verifier_verify_proof

Cases that hard to test: Io errors, timeouts and etc...

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy6rb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,esplinr,,,,,,,,,,"27/Aug/18 11:38 PM;esplinr;We are happy with our current tests and don't believe this work is necessary.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds API: Prime claims integration testing (Medium cases),IS-105,18378,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,30/Jun/17 4:13 PM,28/Oct/23 2:49 AM,30/Jun/17 4:13 PM,,,,,,,,0,,,,,"Implement Medium test cases for Anoncreds API:
 * *sovrin_issuer_create_and_store_claim_def*
 * *sovrin_issuer_create_claim*
 * *sovrin_prover_store_claim_offer*
 * *sovrin_prover_get_claim_offers*
 * *sovrin_prover_create_master_secret*
 * *sovrin_prover_create_and_store_claim_req*
 * *sovrin_prover_store_claim*
 * *sovrin_prover_get_claims*
 * *sovrin_prover_get_claims_for_proof_req*
 * *sovrin_prover_create_proof*
 * *sovrin_verifier_verify_proof*

Medium level cases (beta version):
 * Precondition checking:
 ** Invalid handle
 ** Wallet doesn't correspond to pool
 ** Invalid json format
 ** Invalid json structure (missed fields and etc...)
 ** Invalid base58
 ** Invalid crypto keys lenght and format
 ** Invalid crypto primitives (bigints, points)
 ** Invalid complex crypto structures (anoncreds structures mostly)
 ** Invalid responses from 3d parties (Ledger)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy3tr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds API: Prime claims integration testing (High cases),IS-106,18379,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,30/Jun/17 4:13 PM,28/Oct/23 2:49 AM,30/Jun/17 4:13 PM,,,,,,,,0,,,,,"Implement High test cases for Anoncreds API:
 * *sovrin_issuer_create_and_store_claim_def*
 * *sovrin_issuer_create_claim*
 * *sovrin_prover_store_claim_offer*
 * *sovrin_prover_get_claim_offers*
 * *sovrin_prover_create_master_secret*
 * *sovrin_prover_create_and_store_claim_req*
 * *sovrin_prover_store_claim*
 * *sovrin_prover_get_claims*
 * *sovrin_prover_get_claims_for_proof_req*
 * *sovrin_prover_create_proof*
 * *sovrin_verifier_verify_proof*

High cases (alpha version):
 * Normal cases. Note that there can be multiple execution branches. We need to cover at each branch. Branches examples:
 ** Entity cached in the wallet
 **  Entity should be taken from the ledger
 * Error cases that require an explicit recovering procedure. Examples:
 ** Invalid wallet credentials
 ** No entity found in the wallet
 ** No entity found in the ledger
 ** Unknown crypto
 ** Claim doesn't correspond to scheme, proof request doesn't correspond to claim and etc...
 ** Revocation registry is full and etc...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy3tj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Anoncreds API: Pairing Wrapper (amcl, rust version)",IS-107,18380,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:46 PM,28/Oct/23 2:49 AM,20/Jun/17 8:46 PM,,,,,,,,0,,,,,"* Define Pairing wrapper interface
 * Implement this interface over amcl
 * Implement interface for group_order_elements
 * Implement interface for elements from G1 group
 * Implement interface for elements from G2 group
 * Implement interface for pairing",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4u7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds API: Type-3 pairing based revocation,IS-108,18381,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,23/Aug/17 2:15 PM,28/Oct/23 2:49 AM,23/Aug/17 2:15 PM,,,,,,,,0,,,,,Implement type-3 pairing based revocation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzwzdz:",,,,,,LibINDY Sprint 4,LibINDY Sprint 5,LibINDY Sprint 6,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds API: Revocation integration testing (High cases),IS-109,18382,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,26/Jul/18 6:33 PM,28/Oct/23 2:49 AM,26/Jul/18 6:33 PM,,,,,,,,0,6Months,,,,"Implement High test cases for Anoncreds API:
 * sovrin_issuer_create_and_store_revoc_reg
 *  sovrin_issuer_revoke_claim

High cases (alpha version):
 * Normal cases. Note that there can be multiple execution branches. We need to cover at each branch. Branches examples:
 ** Entity cached in the wallet
 ** Entity should be taken from the ledger
 * Error cases that require an explicit recovering procedure. Examples:
 ** Invalid wallet credentials
 ** No entity found in the wallet
 ** No entity found in the ledger
 ** Unknown crypto
 ** Claim doesn't correspond to scheme, proof request doesn't correspond to claim and etc...
 ** Revocation registry is full and etc...",,,,,,,,,,,,,,,IS-170,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy3pr:",,,,,,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,avkrishnan,sergey.minaev,,,,,,,,,,"26/Jul/18 6:33 PM;sergey.minaev;Deprecated ticket, actually done;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds Commands: Verifier,IS-110,18383,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:47 PM,28/Oct/23 2:49 AM,20/Jun/17 8:47 PM,,,,,,,,0,,,,,Implement commands for Verifier part of Anoncreds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4uf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds Commands: Prover,IS-111,18384,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:47 PM,28/Oct/23 2:49 AM,20/Jun/17 8:47 PM,,,,,,,,0,,,,,Implement commands for Prover part of Anoncreds*StoreClaimOffer - done**GetClaimOffers - done**CreateMasterSecret - done**CreateAndStoreClaimRequest - done**StoreClaim - done**GetClaims - done**GetClaimsForProofReq - done**CreateProof - done*,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4un:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds Commands: Issuer,IS-112,18385,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:47 PM,28/Oct/23 2:49 AM,20/Jun/17 8:47 PM,,,,,,,,0,,,,,"Implement commands for Issuer part of Anoncreds*

*CreateAndStoreClaimDefinition - done**

*CreateAndStoreRevocationRegistry - done**

*CreateClaim - done**

*RevokeClaim - done*",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4uv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto Service: Anoncreds Utils,IS-113,18386,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:47 PM,28/Oct/23 2:49 AM,20/Jun/17 8:47 PM,,,,,,,,0,,,,,Implement utils functions of Anoncreds:* get_hash_as_int - 1* serializeToStr - 1* deserializeFromStr -1* get_prime_in_range - 2 - done* splitRevealedAttrs - 1 - done* fourSquares - 1.5 - done* strToInt - 1.5* encodeAttributes - 3 - done,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4v3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto Service: Verifier,IS-114,18387,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:47 PM,28/Oct/23 2:49 AM,20/Jun/17 8:47 PM,,,,,,,,0,,,,,Implement Verifier interface of Crypto Service:* generateNonce - 0.1* verify - 1.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4vb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds API: Pairing Wrapper (milagro-crypto-c),IS-115,18388,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:49 PM,28/Oct/23 2:49 AM,20/Jun/17 8:49 PM,,,,,,,,0,,,,,"* *Define Pairing wrapper interface*
 * *Implement this interface over* milagro*-crypto-c*
 * *Implement interface for group_order_elements - done*
 * *Implement interface for elements from G1 group - done*
 * *Implement interface for elements from G2 group*
 * Implement interface for pairing - almost done, except pair function",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4vj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto Service: BN Wrapper,IS-116,18389,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:49 PM,28/Oct/23 2:49 AM,20/Jun/17 8:49 PM,,,,,,,,0,,,,,* Define BN wrapper interface* Implement this interface over OpenSSL,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4vr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto Service: Prover,IS-117,18390,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:49 PM,28/Oct/23 2:49 AM,20/Jun/17 8:49 PM,,,,,,,,0,,,,,Implement Prover interface of Crypto Service:* createClaimRequest - 1* createClaimRequests - 0.5* processClaim - 1* processClaims - 0.5* presentProof 0.5* _genMasterSecret - done* _genU - none* _genUr - none* _initPrimaryClaim - none* _initNonRevocationClaim - none* _findClaims 3* _prepareProof 4* _getCList - 0.5* _getTauList - 0.5* _get_hash - 0.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4vz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto Service: Issuer,IS-118,18391,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:49 PM,28/Oct/23 2:49 AM,20/Jun/17 8:49 PM,,,,,,,,0,,,,,Implement Issuer interface of Crypto Service:* genSchema - none* genKeys - 0.5* issueAccumulator - none* revoke - none* issueClaim - 0.5* issueClaims - 0.5* _genContxt - 1* _issuePrimaryClaim - none* _issueNonRevocationClaim - none,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4w7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Service: Interface and SQLite based implementation,IS-119,18392,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:49 PM,28/Oct/23 2:49 AM,20/Jun/17 8:49 PM,,,,,,,,0,,,,,* Provide WalletService interface that will allow plugging different implementations* Provide simple SQLLite based implementation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4wf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto Service: Anoncreds Revocation,IS-120,18393,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:49 PM,28/Oct/23 2:49 AM,20/Jun/17 8:49 PM,,,,,,,,0,,,,,Implement revocation functions of Anoncreds:* claim_issuer:** *genRevocationKeys 1.5 - done*** *issueAccumulator 2 - done*** *issueNonRevocationClaim 4 - done*** *revoke 1 - done** common:** *createTauListExpectedValues-2 - done*** *createTauListValues 2 - done** proof_builder:** *genClaimInitData 1 - done*** *initNonRevocationClaim 1 - done*** *_testWitnessCredential 2 - done*** *updateNonRevocationClaim 3 - done*** *initProof 2 - done*** *finalizeProof 1 - done*** *_genCListParams 1.5  - done*** *_createCListValues 1.5 - done*** *_genTauListParams 0.5 - done*** testProof 1* proof_verifier:** *verifyNonRevocation 1 - done*,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4wn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto Service: Anoncreds Primary,IS-121,18394,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:50 PM,28/Oct/23 2:49 AM,20/Jun/17 8:50 PM,,,,,,,,0,,,,,Implement primary functions of Anoncreds:* claim_issuer:** genKeys - done** _genX - done** _genPrime - done**  issuePrimaryClaim - 2 - done** _sign - 4 - done* proof_builder:** genClaimInitData - done** preparePrimaryClaim 0.5 done** initProof 1.5 - done** finalizeProof 1 - done** _initEqProof 3 - done** _initGeProof 3 - done** _finalizeEqProof 2.5 - done** _finalizeGeProof 2.5 - done** _getMTilde 1 - done* proof_common:** calcTeq - done** calcTge - done* proof_verify:** verify -done** _verifyEquality - done** _verifyGEPredicate - done,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4wv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto Service: Backends Integration,IS-122,18395,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,20/Jun/17 1:57 PM,20/Jun/17 8:50 PM,28/Oct/23 2:49 AM,20/Jun/17 8:50 PM,,,,,,,,0,,,,,We need generic crypto layer based on some 3d party libraries. It can be:* OpenSSL* AMCL/Milagro* Libsodium* GMP/PBC (low priority option due LGPL license),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy4x3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Timeout for outgoing message,IS-123,18396,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,avkrishnan,avkrishnan,20/Jun/17 2:11 PM,22/Jan/18 10:00 PM,28/Oct/23 2:49 AM,20/Dec/17 10:34 PM,,,,,,,,0,,,,,Implement timeout logic for outgoing message.,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-457,IS-408,IS-407,IS-518,IS-519,IS-392,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzyq0v:",,,,,,LibINDY Sprint 5,LibINDY Sprint 6,LibINDY Sprint 7,LibINDY Sprint 8,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,sergey.minaev,,,,,,,,,,"29/Dec/17 11:47 PM;sergey.minaev;[PR|https://github.com/hyperledger/indy-sdk/pull/433];;;","19/Jan/18 1:01 AM;sergey.minaev;Build version is 1.1.1 master 282;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Integration tests (Low cases),IS-124,18397,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Deferred,,avkrishnan,avkrishnan,20/Jun/17 2:11 PM,20/Sep/19 11:45 PM,28/Oct/23 2:49 AM,20/Sep/19 11:45 PM,,,,,,,,0,6Months,KEEP,,,"Implement Low test cases for Pool API:
 * Create
 * Open
 * Refresh
 * Close
 * Delete

Low level cases (production version): Cases that hard to test: Io errors, timeouts and etc...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzy6qn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,esplinr,gudkov,,,,,,,,,"23/Dec/17 12:50 AM;gudkov;The cases are hard to automate, but we still need to cover them if we want good quality.;;;","20/Sep/19 11:45 PM;esplinr;We are currently happy with our integration tests. We haven't seen significant bugs in this part of the system, so we don't believe this work is necessary.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Integration tests (Medium cases),IS-125,18398,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,avkrishnan,avkrishnan,20/Jun/17 2:11 PM,07/Aug/17 7:50 PM,28/Oct/23 2:49 AM,07/Aug/17 7:50 PM,,,,,,,,0,,,,,"Implement Medium test cases for Pool API:
 * *Create*
 * *Open*
 * Refresh
 * Close
 * Delete

Medium level cases (beta version):
 * Precondition checking:
 ** Invalid handle
 ** Invalid name
 ** Invaid file path
 ** Wallet doesn't correspond to pool
 ** Invalid json format
 ** Invalid json structure (missed fields and etc...)
 ** Invalid base58
 ** Invalid crypto keys lenght and format
 ** Invalid crypto primitives (bigints, points)
 ** Invalid complex crypto structures (anoncreds structures mostly)
 ** Invalid responses from 3d parties (Ledger, Agent)",,,43200,43200,,0%,43200,43200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzx1yn:",,,,,,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Integration tests (High cases),IS-126,18399,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,avkrishnan,avkrishnan,20/Jun/17 2:11 PM,22/Jun/17 6:11 PM,28/Oct/23 2:49 AM,22/Jun/17 6:11 PM,,,,,,,,0,,,,,"Implement High test cases for Pool API:
 * *Create*
 * *Open*
 * *Refresh*
 * *Close*
 * *Delete*

High cases (alpha version):
 * Normal cases. Note that there can be multiple execution branches. We need to cover at each branch. Branches examples:
 ** Entity cached in the wallet
 ** Entity should be taken from the ledger*
 * Error cases that require an explicit recovering procedure. Examples:
 ** Invalid wallet credentials
 ** No entity found in the wallet
 ** No entity found in the ledger
 ** Transaction doesn't allow for current identity
 ** Unknown crypto
 ** Claim doesn't correspond to scheme, proof request doesn't correspond to claim and etc...
 ** Revocation registry is full and etc...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzy4xr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,sergey.minaev,,,,,,,,,,"21/Jun/17 9:59 PM;sergey.minaev;Common high cases is done. Please check and add more if needed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Fix Consistency Proofs tests for Merkle Tree,IS-127,18400,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,avkrishnan,avkrishnan,20/Jun/17 2:11 PM,03/Jul/17 9:07 PM,28/Oct/23 2:49 AM,03/Jul/17 9:07 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,IS-128,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzy4xz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,ccastroiragorri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Consistency Proofs in Catch Up,IS-128,18401,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,avkrishnan,avkrishnan,20/Jun/17 2:11 PM,08/Jul/17 4:53 AM,28/Oct/23 2:49 AM,08/Jul/17 4:53 AM,,,,,,,,0,,,,,"Implement check for consistency proofs in catch up

Note: ledger status messages also should be handled properly.",,,36000,36000,,0%,36000,36000,,,IS-127,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzy3in:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger Service: Request builders,IS-129,18402,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,avkrishnan,avkrishnan,20/Jun/17 2:11 PM,21/Jun/17 12:05 AM,28/Oct/23 2:49 AM,21/Jun/17 12:05 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzy4y7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Commands implementation,IS-130,18403,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,avkrishnan,avkrishnan,20/Jun/17 2:11 PM,22/Jun/17 6:11 PM,28/Oct/23 2:49 AM,22/Jun/17 6:11 PM,,,,,,,,0,,,,,"* *Create - done*
 * *Open - done*
 * *Refresh*
 * *Close*
 * *Delete*",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzy4xj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger Service: Requests,IS-131,18404,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,20/Jun/17 2:11 PM,21/Jun/17 12:05 AM,28/Oct/23 2:49 AM,21/Jun/17 12:05 AM,,,,,,,,0,,,,,* service logic for SubmitRequest command* service logic for SignAndSubmitRequest command,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzy4yf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Service implementation,IS-132,18405,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,avkrishnan,avkrishnan,20/Jun/17 2:11 PM,22/Jun/17 6:11 PM,28/Oct/23 2:49 AM,22/Jun/17 6:11 PM,,,,,,,,0,,,,,"* *create - done*
 * *open - done*
 * *close*
 * *refresh*
 * *delete* ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzy4xb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger Service: ZMQ communication layer,IS-133,18406,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,20/Jun/17 2:11 PM,21/Jun/17 12:16 AM,28/Oct/23 2:49 AM,21/Jun/17 12:16 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzy4yn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger Service: Catch Up,IS-134,18407,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,20/Jun/17 2:11 PM,21/Jun/17 12:16 AM,28/Oct/23 2:49 AM,21/Jun/17 12:16 AM,,,,,,,,0,,,,,* Normal case implementation* Additional unit tests for normal cases* Check proofs* Error cases clarification* Implement errors handling,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzy4yv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger Service: Merkle tree,IS-135,18408,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,p5n,avkrishnan,avkrishnan,20/Jun/17 2:11 PM,21/Jun/17 12:16 AM,28/Oct/23 2:49 AM,21/Jun/17 12:16 AM,,,,,,,,0,,,,,* *Base implementation - done** *Proof verification - done** Testing in catch-up,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzy4z3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows build instructions need a few updates,IS-136,18411,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,avkrishnan,avkrishnan,20/Jun/17 3:11 PM,28/Jun/17 12:56 AM,28/Oct/23 2:49 AM,28/Jun/17 12:56 AM,,,,,,,,0,,,,,"The instructions at [https://github.com/hyperledger/indy-sdk/blob/master/README.md] need a few updates:

1) Get binary dependencies (libamcl*, openssl, libsodium, libzmq, sqlite3): Need a location to store these dependencies, then the link should be published here.

2) execute ""C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat""

Depending on the version of Visual Studio installed this could be different. Also, the exact syntax would be:

""C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC 
\bin\amd64\""vcvars64.bat

3) For dlls to be found, the current folder location may need to be added with:

set PATH=C:\BIN\x64;%PATH%

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-65,,,,,,,,,,"1|hzy47b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,gudkov,,,,,,,,,,"21/Jun/17 12:37 AM;gudkov;> 1) Get binary dependencies (libamcl*, openssl, libsodium, libzmq, sqlite3): Need a location to store these dependencies, then the link should be published here.

We spent a lot of time to build some dependencies as there is no native MSVC support for some. So i suggest not only provide the link to binaries, but also document how to build each dependency or get it from public source.

Actually it is part of IS-64 ticket. I will link this issues.;;;","28/Jun/17 12:55 AM;gudkov;Documentation for windows build was updated and it seems good enough now to close this ticket. See docs/windows-buid.md file for windows build instruction.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Remove compilation settings allow unused_variables and dead_code,IS-137,18420,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,sergey.minaev,sergey.minaev,20/Jun/17 10:53 PM,10/Aug/18 6:06 PM,28/Oct/23 2:49 AM,10/Aug/18 6:06 PM,,,,,,,,0,6Months,help-wanted,KEEP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzzjhz:",,,,,,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,sergey.minaev,zhigunenko.dsr,,,,,,,,,"06/Aug/18 8:43 PM;Artemkaaas;Removed part of `allow_*` compilation setting. 
PR: https://github.com/hyperledger/indy-sdk/pull/1040;;;","09/Aug/18 8:15 PM;sergey.minaev;Recommendation for QA:
please check codebase: that there is no high-level `allow` and appropriate FIXME is specified;;;","10/Aug/18 6:05 PM;zhigunenko.dsr;*Actual results:*
There are no #allow atributes and #FIXME for warnings hiding;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet API: Implement sovrin_register_wallet_type API call,IS-138,18422,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,gudkov,sergey.minaev,sergey.minaev,20/Jun/17 11:12 PM,08/Jul/17 4:53 AM,28/Oct/23 2:49 AM,08/Jul/17 4:53 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-45,,,,,,,,,,"1|hzy3iv:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"20/Jun/17 11:14 PM;gudkov;Note that it is low priority feature.;;;","27/Jun/17 7:36 PM;gudkov;We discussed to increase priority of this call.;;;","06/Jul/17 4:25 PM;gudkov;Corresponded call and unit tests were implemented, waiting for review and merge.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Define releasing workflow for libsovrin and wrappers,IS-139,18423,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,gudkov,sergey.minaev,sergey.minaev,20/Jun/17 11:16 PM,21/Dec/17 6:50 AM,28/Oct/23 2:49 AM,21/Dec/17 12:10 AM,,,,,,,,0,RELEASE_TARGET,,,,"Design, align and document the following points:
 * Define release workflow (most probable resuse workflow from core team)
 * Define exact list of artifacts we plan to release now and in the future
 * Define naming and versioning approach for all articacts
 * Define how to sync releases between node, libindy and wrappers
 * Define release notes creation process

I expect release-workflow.md document to be created",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzypzr:",,,,,,LibINDY Sprint 3,LibINDY Sprint 4,LibINDY Sprint 5,LibINDY Sprint 6,LibINDY Sprint 7,LibINDY Sprint 8,LibINDY 17.25,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"23/Nov/17 10:06 PM;gudkov;For current moment we already have some process on all points. The thing that we miss is documentation of this process.

I suggest to move this to the next sprint as documentation requires to be enhanced.;;;","20/Dec/17 10:26 PM;gudkov;I documented our release workflow and added few additional fixes do READMEs in this PR: https://github.com/hyperledger/indy-sdk/pull/443;;;","21/Dec/17 12:10 AM;gudkov;PR was reviewed and merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Fake f=N/2 for unstable pool,IS-140,18424,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,sergey.minaev,sergey.minaev,20/Jun/17 11:24 PM,25/Jan/18 12:44 AM,28/Oct/23 2:49 AM,24/Jan/18 11:32 PM,,,,,,,,0,BUGFIXES_TARGET,,,,Currently indy-sdk count RBFT f = N/2. It allow works with unstable pool. Should be fixed.,,,,,,,,,,,INDY-761,,,,,,,,,,,,,,,,,,,,,IS-392,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrlr:",,,,,,LibINDY Sprint 7,LibINDY Sprint 8,LibINDY Sprint 9,LibINDY Sprint 10,LibINDY 17.21,LibINDY 17.22,LibINDY 17.23,LibINDY 17.24,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,"18/Jan/18 6:28 PM;sergey.minaev;[PR|https://github.com/hyperledger/indy-sdk/pull/481]

Changes:
* remove temporary stubs for f := n/2.
* rewrite tests to resend get request after write in case of error

Risks:
* missed retries in some tests, can be detected on CI failures and fixed separately ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Refactor CommandExecutor::send,IS-141,18429,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,gudkov,sergey.minaev,sergey.minaev,20/Jun/17 11:58 PM,08/Oct/19 11:43 PM,28/Oct/23 2:49 AM,08/Oct/19 11:43 PM,,,,,,,,0,6Months,KEEP,,,"May be split into
 * send(cmd) -> () , trace on error
 * try_send(cmd) -> Result<(), CommonError>, return error ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzy51z:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,sergey.minaev,,,,,,,,,,"08/Oct/19 11:43 PM;esplinr;As code from the Indy SDK moves to Aries, the threading model is expected to change. So we don't plan to make this improvement in the current code base.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Integration test for sending Node transaction currently ignored,IS-142,18430,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Deferred,gudkov,sergey.minaev,sergey.minaev,21/Jun/17 12:01 AM,08/Oct/19 11:37 PM,28/Oct/23 2:49 AM,08/Oct/19 11:37 PM,,,,,,,,0,6Months,,,,"Currently pool behavior after sending Node transaction is unstable, so appropriate integration test is ignored.

Possible solutions:
 * actually run new node
 * wait fix in pool and send Node transaction which will not enable communication with new node",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzwyvb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,sergey.minaev,,,,,,,,,,"08/Oct/19 11:36 PM;esplinr;We can't fix this test without impacting other tests. We don't see this as a priority for now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Create test framework,IS-143,18432,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,sergey.minaev,sergey.minaev,21/Jun/17 12:36 AM,11/Oct/19 9:36 PM,28/Oct/23 2:49 AM,11/Oct/19 9:36 PM,,,,,,,,0,9Months,CloseCandidate,,,"Some features are needed for integration and unit tests, but doesn't supported by default rust or existing test frameworks:
 * before / after
 * before_each / after_each
 * timeout

For example: anoncreds integration tests needs long preparing and now analog for _before_ is implemented via _call_once_. But _after_ not so obvious and common wallet for anoncreds doesn't cleaned-up.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1397,,,,,,,,,,"1|hzy3nz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,gudkov,SeanBohan_Sovrin,sergey.minaev,,,,,,,,"22/Dec/17 10:43 PM;gudkov;Creation of our own test framework seems overkill, but i expect some progress in 3d party frameworks during next year and we can switch to 3d party framework as soon as there will one ready to production use.;;;","07/Apr/18 3:26 AM;SeanBohan_Sovrin;[~gudkov] - can we close this ticket?;;;","11/Oct/19 9:36 PM;esplinr;Our resolver testing tools are pretty good now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Refactoring of libindy tests to perform correct full cleanup,IS-144,18554,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,22/Jun/17 8:10 PM,13/Oct/17 1:18 PM,28/Oct/23 2:49 AM,13/Oct/17 1:18 PM,,,,,,,,0,,,,,"We have big amount of libindy tests that doesn't perform resources cleanup. As result we have to use unique names, ports and etc in a lot of tests. It makes support of tests a bit complicated. 

This ticket is about refactoring of tests to perform full cleanup:
1. Avoid usage of long custom names. Just use pool1 or wallet1. Look to python/java wrapper.

2. Close all opened handles
3. Think about involving of fixtures like or before/after like approach.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-143,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzy3rb:",,,,,,LibINDY Sprint 5,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"09/Aug/17 12:05 AM;gudkov;Also think about https://jira.hyperledger.org/browse/IS-143 in scope of this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Replace sovrin_ prefix to indy_,IS-145,18556,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,sergey.minaev,sergey.minaev,22/Jun/17 8:51 PM,12/Jul/17 7:08 PM,28/Oct/23 2:49 AM,12/Jul/17 7:08 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,IS-187,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzy7m7:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,avkrishnan,gudkov,sergey.minaev,,,,,,,,,"22/Jun/17 8:55 PM;gudkov;[~danielhardman] [~avkrishnan] 

Daniel, Krishnan, Are we ready to start this refactoring?;;;","22/Jun/17 11:47 PM;avkrishnan;[~gudkov] I think we can go ahead.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger API: DDO transaction support,IS-146,18557,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,gudkov,sergey.minaev,sergey.minaev,22/Jun/17 8:58 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,,,,,,,,,,,,INDY-51,,,,IS-147,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-57,,,,,,,,,,"1|hzy3nb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: Use DDO transaction instead ATTRIB for receiving connection info from ledger,IS-147,18558,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,gudkov,sergey.minaev,sergey.minaev,22/Jun/17 8:59 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,IS-146,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-95,,,,,,,,,,"1|hzzc6f:",,,,,,LibINDY 17.25,LibINDY 18.01,LibINDY 18.02 CLI +,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,18.06,18.07,EV 18.10 Stability and VC,18.08 Wallets+,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"06/Dec/17 9:05 PM;gudkov;It seems non-relevant now at it is related to old Agent communication approach. 

So we need to just close it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot compile SDK on Amazon Linux,IS-148,18581,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,gudkov,tharmon,tharmon,23/Jun/17 5:52 AM,03/Jul/17 10:42 PM,28/Oct/23 2:49 AM,03/Jul/17 10:42 PM,,,,,,,,0,install,rhel,,,"Currently, the instructions provided for installing the SDK appear to be Ubuntu centric. The Amazon Linux distribution is based on RHEL, which means some of the instructions will need to be changed.

h2. Issue

When I run {{cargo build}} I'm getting the following error:

{code}
   Compiling zmq v0.8.1
error: linking with `cc` failed: exit code: 1
  |
  = note: ""cc"" ""-Wl,--as-needed"" ""-Wl,-z,noexecstack"" ""-m64"" ""-L"" ""/home/libsovrin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib"" ""/home/libsovrin/src/indy-sdk/target/debug/build/zmq-a667f9003fbd3289/build_script_build-a667f9003fbd3289.0.o"" ""-o"" ""/home/libsovrin/src/indy-sdk/target/debug/build/zmq-a667f9003fbd3289/build_script_build-a667f9003fbd3289"" ""-Wl,--gc-sections"" ""-pie"" ""-nodefaultlibs"" ""-L"" ""/home/libsovrin/src/indy-sdk/target/debug/deps"" ""-L"" ""/usr/lib64"" ""-L"" ""/home/libsovrin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib"" ""-Wl,-Bstatic"" ""/home/libsovrin/src/indy-sdk/target/debug/deps/libzmq_sys-ffc76933d21fe191.rlib"" ""/home/libsovrin/src/indy-sdk/target/debug/deps/liblibc-f4ccf2fa58092d85.rlib"" ""/home/libsovrin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-f4594d3e53dcb114.rlib"" ""/home/libsovrin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/librand-1efbcfd8938372b6.rlib"" ""/home/libsovrin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcollections-532a3dbf317eff86.rlib"" ""/home/libsovrin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_unicode-cfbd6648f7db2ee5.rlib"" ""/home/libsovrin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-a0157c0ca919c364.rlib"" ""/home/libsovrin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-488b4ab4bd53a138.rlib"" ""/home/libsovrin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-ca07b617414dd0fa.rlib"" ""/home/libsovrin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_jemalloc-492d8ea7fa3384ff.rlib"" ""/home/libsovrin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-88c194c15fdb6521.rlib"" ""/home/libsovrin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-687e6a964d22cbb4.rlib"" ""/home/libsovrin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-987729be881d4d32.rlib"" ""-Wl,-Bdynamic"" ""-l"" ""zmq"" ""-l"" ""util"" ""-l"" ""dl"" ""-l"" ""rt"" ""-l"" ""pthread"" ""-l"" ""gcc_s"" ""-l"" ""pthread"" ""-l"" ""c"" ""-l"" ""m"" ""-l"" ""rt"" ""-l"" ""pthread"" ""-l"" ""util""
  = note: /home/libsovrin/src/indy-sdk/target/debug/build/zmq-a667f9003fbd3289/build_script_build-a667f9003fbd3289.0.o: In function `build_script_build::main':
          /home/libsovrin/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.1/build.rs:8: undefined reference to `zmq_has'
          collect2: error: ld returned 1 exit status


error: aborting due to previous error

error: Could not compile `zmq`.
{code}

We're failing at the link stage. If we take a look at the {{build.rs}} file, we find:

{code}
#[cfg(feature = ""zmq_has"")]
fn main() {
    use std::ffi::CString;

    for has in [""ipc"", ""pgm"", ""tipc"", ""norm"", ""curve"", ""gssapi""].into_iter() {
        if unsafe { zmq::zmq_has(CString::new(has.as_bytes()).unwrap().as_ptr()) } == 1 {
            println!(""cargo:rustc-cfg=ZMQ_HAS_{}=\""1\"""", has.to_uppercase());
        }
    }
}

#[cfg(not(feature = ""zmq_has""))]
fn main() {
{code}

This suggests the build process believes the {{zmq_has}} feature is enabled, and then attempts to call {{zmq_has()}}. The problem here is that the RHEL-based {{/usr/include/zmq.h}} does not list {{zmq_has()}} as being available. However, in Ubuntu 16.04, this function does exist in {{/usr/include/zmq.h}}.

Installed Package: {{zeromq3-devel-3.2.5-1.el6.x86_64}}

h2. System Setup

In order to set up the system, these are the steps that I followed:

* As user:
** {{curl https://sh.rustup.rs -sSf | sh}}
* As {{root}}:
** Enable EPEL
** {{yum update}}
** {{yum groupinstall “Development Tools”}}
** {{yum install cmake pkgconfig libsodium-devel openssl-devel sqlite-devel zeromq3-devel}}
* As user:
** Install repository from GitHub
** {{cd indy-sdk}}
** {{cargo build}}
 
","Running in Amazon AWS

|AMI|{{amzn-ami-hvm-2017.03.0.20170417-x86_64-gp2 (ami-4191b524)}}|
|Description|Amazon Linux AMI 2017.03.0.20170417 x86_64 HVM GP2|
|Platform|Amazon Linux|
|Image Size|8GB|
|Instance Type|t2.nano|",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5dz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,avkrishnan,danielhardman,gudkov,sergey.minaev,tharmon,,,,,,,"23/Jun/17 5:56 AM;danielhardman;[~avkrishnan] and [~gudkov] I think this is an urgent item. We need to have libsovrin compiling for RedHat-based distros. Can you please figure out what version discrepancy is responsible for the difference, and at a minimum decide how hard it would be to resolve the problem? If it's easy to resolve, let's resolve immediately. If it's not, let's have a conversation about how to schedule the work.;;;","23/Jun/17 5:58 AM;danielhardman;Do we have continuous integration for CentOS or RHEL running? How about for Windows?;;;","23/Jun/17 12:50 PM;avkrishnan;[~danielhardman] It is my understanding that currently there is no CI for libsovrin on any platform. Please confirm, [~gudkov].;;;","23/Jun/17 4:37 PM;gudkov;> Do we have continuous integration for CentOS or RHEL running? How about for Windows?

We don't have CI pipeline for CentOS and Windows.

> If it's easy to resolve, let's resolve immediately. If it's not, let's have a conversation about how to schedule the work.

Most probable we can provide some suggestion or workaround quickly. It can be disabling of zmq_has feature or building of zmq from sources (some additional important features can be disabled in zmq too). We can document this workaround as Dockerfile and integrate this Dockerfile to CI a bit later.

Note that it will be temporary solution as we plan to switch to zmq fork and it will be linked statically. As CentOS support seems important i suggest to create corresponded Epic.;;;","23/Jun/17 10:15 PM;gudkov;[~tharmon] As i understand there are no libzmq and libsodium in RHEL/amazonlinux repos out of the box.  So most probable 

{{yum install libsodium-devel zeromq3-devel}}

will just notice that no package found. So were zeromq3 and libsodium installed manually or some 3d party repo was used?;;;","23/Jun/17 11:20 PM;tharmon;Those packages are not available with just the default repositories. However, they are available via EPEL, which is where I got them.;;;","23/Jun/17 11:23 PM;tharmon;In the source code, it appears the {{zmq_has}} feature is currently on.y being referenced in the IOS wrapper code. So, I would suspect we only need to disable that feature for RHEL-based builds.;;;","23/Jun/17 11:31 PM;gudkov;[~tharmon] [~danielhardman]

I was able to build libsovrin with Amazon Linux AMI 2017.03 today. Main problem was missed modern libsodium and libzmq in standard repos. To solve this problem I built and installed this libraries from sources.

I created Dockerfile that illustrates how to prepare environment. To build inside of Docker with Amazon Linux AMI 2017.03 use the following steps:
 # git clone git@github.com:hyperledger/indy-sdk.git && cd indy-sdk (get latest sources)
 # docker build -t libsovrin-amazon -f .\ci\amazon.dockerfile . (build Amazon Linux image with all dependencies)
 # docker run -it libsovrin-amazon /bin/bash (start container)
 # Go to container shell
 # git clone git@github.com:hyperledger/indy-sdk.git && cd indy-sdk (get latest sources inside container)
 # cargo build (build libsovrin);;;","23/Jun/17 11:34 PM;gudkov;> However, they are available via EPEL, which is where I got them.

I will re-check today.;;;","24/Jun/17 12:12 AM;gudkov;[~tharmon]

Just reproduced this issue with zmq #package from epel. Thanks for explanation.;;;","24/Jun/17 12:25 AM;gudkov;[~tharmon] [~danielhardman]

Disabling of zmq_has feature can't solve the problem. EPEL contains old 3.2 version of zmq that doesn't have CurveCP support. So seems only possible solution is building of ZMQ from sources on current RHEL based distros.

I suggest to just document this way and share Dockerfile.;;;","25/Jun/17 6:25 AM;danielhardman;I think this is an adequate workaround for the time being. However, I think we need a better story in the long run. Therefore, I have created INDY-150, INDY-151, and INDY-152.;;;","28/Jun/17 1:00 AM;gudkov;Documentation of building indy-sdk on RHEL based distros was provided in docs/rhel-build.md and referenced from README.md. Also dedicated tickets about better RHEL support were created.;;;","30/Jun/17 12:35 AM;sergey.minaev;Latest version of indy-sdk use forked zmq system library, so it will be built from sources.;;;",,,,,,,,,,,,,,,,
Pysovrin Interoperability: Support GET_TXN in Pysovrin,IS-149,18610,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,Artemkaaas,Artemkaaas,23/Jun/17 11:37 PM,09/Jul/17 3:39 PM,28/Oct/23 2:49 AM,09/Jul/17 3:39 PM,,,,,,,,0,,,,,Implement query to get one tnx by its seqNo.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-175,,,,,,,,,,"1|hzy3jz:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
start continuous integration on Windows,IS-150,18654,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,danielhardman,danielhardman,25/Jun/17 6:21 AM,03/Jul/17 10:44 PM,28/Oct/23 2:49 AM,03/Jul/17 10:44 PM,,,,,,,,0,,,,,We need to have continuous integration for indy-sdk running on windows.,,,,,,,,,,,,,,,,,,,,,,,,,IS-63,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-65,,,,,,,,,,"1|hzy5p3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,danielhardman,gudkov,,,,,,,,,,"03/Jul/17 10:44 PM;gudkov;Closed as dupplicate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RHEL Support: libsodium package,IS-151,18655,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,p5n,danielhardman,danielhardman,25/Jun/17 6:24 AM,07/Jul/17 6:46 PM,28/Oct/23 2:49 AM,07/Jul/17 6:45 PM,,,,,,,,0,,,,,"INDY-148 clarifies that although we can build on RHEL-based distros, we have to compile libsodium and zmq from source.

I would like updated packages for these libraries, so dependencies for the sdk don't have to be compiled by hand.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-172,,,,,,,,,,"1|hzy3lb:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,danielhardman,gudkov,,,,,,,,,,"03/Jul/17 10:47 PM;gudkov;We switched to usage of static linking with zmq-pw on linux. So we don't need to use shared libzmq.;;;","03/Jul/17 10:52 PM;gudkov;I suggest the following:
 # Check if libsodium version in repos compatible with sodiumoxide wrapper. If so then  switch to usage of version in repos.
 # If no then adopt package from bleading edge repo and put it to Evernym's repo.;;;","07/Jul/17 6:46 PM;gudkov;We moved to usage of libsodium in EPEL repo;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
start continuous integration on redhat or centos,IS-152,18656,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,danielhardman,danielhardman,25/Jun/17 6:24 AM,18/Jul/19 1:01 AM,28/Oct/23 2:49 AM,04/Jul/17 12:25 AM,,,,,,,,0,,,,,"We need to have continuous integration running on some sort of RHEL-like distro.

Given the challenges identified in INDY-148, perhaps this ticket should wait until INDY-151 is complete.",,,,,,,,,,,,,,,,,,,,,,,,,IS-174,,IS-1318,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5pb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,danielhardman,gudkov,,,,,,,,,,"04/Jul/17 12:25 AM;gudkov;Closed as dupplicate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Ignore some fileds in signature_serializer,IS-153,18665,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,sergey.minaev,sergey.minaev,26/Jun/17 8:42 PM,01/Aug/18 6:35 PM,28/Oct/23 2:49 AM,01/Aug/18 6:35 PM,,,,,,,,0,9Months,KEEP,,,"Python code (nodes, python client) ignore some fields (e.g. signature) in JSON while serialize for signing. But libsovrin code serialize all fields and as result signature will not be same.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzwv1j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,"01/Aug/18 6:33 PM;sergey.minaev;Implemented in scope IS-812;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode02 tests are failing,IS-154,18725,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,rameshthoomu,rameshthoomu,28/Jun/17 2:52 AM,28/Jun/17 2:55 AM,28/Oct/23 2:49 AM,28/Jun/17 2:53 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy43r:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,"28/Jun/17 2:55 AM;rameshthoomu;By mistake I have created this issue in indy SDK project.. This suppose to go in fabric (FAB). Closing this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows Support: Installation package,IS-155,18772,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,29/Jun/17 5:39 PM,15/Aug/17 4:50 PM,28/Oct/23 2:49 AM,15/Aug/17 4:50 PM,,,,,,,,0,,,,,"* Decide about installation package format (zip + READE or msi or something else)
 * Create scripts for installation package creation
 * Integrate this script to CI pipeline",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-65,,,,,,,,,,"1|hzy4af:",,,,,,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Remove libzmq dependency from CI and README,IS-156,18816,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,sergey.minaev,sergey.minaev,29/Jun/17 11:32 PM,08/Aug/17 11:44 PM,28/Oct/23 2:49 AM,08/Aug/17 11:44 PM,,,,,,,,0,,,,,Ccurrently libzmq-pw used and downloaded by indy-sdk itself,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzy3t3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"08/Aug/17 11:44 PM;gudkov;It is actuually done;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper: Port libzmq-pw to iOS,IS-157,18817,,Task,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,sergey.minaev,sergey.minaev,sergey.minaev,29/Jun/17 11:35 PM,07/Jul/17 5:18 PM,28/Oct/23 2:49 AM,07/Jul/17 5:18 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy3lr:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
indy_sign and indy_verify_signature should support arbitrary byte array,IS-158,18842,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,danielhardman,danielhardman,30/Jun/17 6:49 AM,17/Aug/17 12:03 AM,28/Oct/23 2:49 AM,17/Aug/17 12:03 AM,,,,,,,,0,,,,,"Right now, {indy_sign}} and {{indy_verify_signature}} can create/verify signatures for the JSON messages that are sent to the ledger. In these methods, a JSON message is serialized to a byte array using a custom algorithm that is not used outside of Indy/Sovrin ledger communication. Also, the signature is automatically inserted into the JSON message.

I think it would be very useful if those methods could be used more generically, to create/verify signatures on any arbitrary byte array supplied by the library user.

[ Creating this JIRA issue and closing the Github issue: [https://github.com/hyperledger/indy-sdk/issues/32] ]",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-280,IS-279,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy49z:",,,,,,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,danielhardman,gudkov,peacekeeper,,,,,,,,,"30/Jun/17 6:50 AM;danielhardman;[~peacekeeper] I have moved your ticket from the INDY project to INDY-SDK.;;;","30/Jun/17 5:52 PM;gudkov;The main use case of sovrin_sign call is signing of transaction messages that were created with sovrin_build_*_request calls. It allows splitting of communication logic from private keys management for better security of real applications.

Ledger communication requires the creation of complex custom digests and injection of the signature field to original JSON messages (some kind of complex envelope). So we can't just easily make this calls generic without loosing of ability to sign ledger messages. 

I suggest the following:

1. Change sovrin_sign and sovrin_verify calls to just sign and verify plain byte arrays without involving any digest and envelope creation logic.
2. Provide dedicated call sovrin_sign_request that will allow signing of ledger requests.

[~danielhardman] [~peacekeeper] Could you verify this plan?;;;","30/Jun/17 8:21 PM;peacekeeper;I guess there are a few other options too, but to me your proposal feels very good.

Perhaps instead of introducing a new method there could be a boolean flag parameter on the sovrin_sign method that controls whether or not to apply the custom logic for ledger commands?;;;","09/Aug/17 12:18 AM;gudkov;Also we need to update libindy, java, python and ios tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
CI: change IP for nodes in pool to 127.0.0.1,IS-159,18865,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,gudkov,sergey.minaev,sergey.minaev,01/Jul/17 1:17 AM,07/Aug/17 11:47 PM,28/Oct/23 2:49 AM,07/Aug/17 11:47 PM,,,,,,,,0,,,,,Change CI dockerfile for nodes pool to unify with iOS environment.,,,180,180,,0%,180,180,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx1w7:",,,,,,LibINDY Sprint 4,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI: Fix compatibility with the latest pool,IS-160,18891,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,sergey.minaev,sergey.minaev,sergey.minaev,03/Jul/17 6:21 PM,03/Jul/17 7:22 PM,28/Oct/23 2:49 AM,03/Jul/17 7:22 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6o7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Docs: Update Node API documentation,IS-161,18892,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,sergey.minaev,sergey.minaev,03/Jul/17 6:30 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,5Months,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-320,,,,,,,,,,"1|hzy6of:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"26/Jul/18 6:11 PM;gudkov;Looks like outdated ticket;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI: Switch to new Jenkins,IS-162,18893,,Task,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,sergey.minaev,sergey.minaev,sergey.minaev,03/Jul/17 7:49 PM,04/Jul/17 12:03 AM,28/Oct/23 2:49 AM,04/Jul/17 12:03 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6on:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger API: Review and update High and Medium level test cases,IS-163,18895,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,gudkov,gudkov,gudkov,03/Jul/17 8:41 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,5Months,,,,The current structure of Ledger API tests is a bit outdated from our latest vision. It requers some refactoring for better support. ,,,180,180,,0%,180,180,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-57,,,,,,,,,,"1|hzy3nr:",,,,,,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Signus API: Integration tests for encrypt/decrypt (High cases),IS-164,18899,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,03/Jul/17 9:00 PM,14/Aug/17 9:31 PM,28/Oct/23 2:49 AM,14/Aug/17 9:31 PM,,,,,,,,0,,,,,"Implement High test cases for Signus API:
 * sovrin_encrypt
 * sovrin_decrypt

High cases (alpha version):
 * Normal cases. Note that there can be multiple execution branches. We need to cover at each branch. Branches examples:
 ** Entity cached in the wallet
 **  Entity should be taken from the ledger
 * Error cases that require an explicit recovering procedure. Examples:
 ** Invalid wallet credentials
 ** No entity found in the wallet
 ** No entity found in the ledger
 ** Transaction doesn't allow for current identity
 ** Unknown crypto
 ** Claim doesn't correspond to scheme, proof request doesn't correspond to claim and etc...
 ** Revocation registry is full and etc...",,,,,,,,,,,,,,,IS-168,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-69,,,,,,,,,,"1|hzx1yv:",,,,,,LibINDY Sprint 5,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Signus API: Integration tests for encrypt/decrypt (Medium cases),IS-165,18900,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,03/Jul/17 9:02 PM,17/Aug/17 3:06 PM,28/Oct/23 2:49 AM,14/Aug/17 9:31 PM,,,,,,,,0,,,,,"Implement Medium test cases for Signus API:
 * sovrin_encrypt
 * sovrin_decrypt

Medium level cases (beta version):
 * Precondition checking:
 ** Invalid handle
 ** Wallet doesn't correspond to pool
 ** Invalid json format
 ** Invalid json structure (missed fields and etc...)
 ** Invalid base58
 ** Invalid crypto keys lenght and format
 ** Invalid crypto primitives (bigints, points)
 ** Invalid complex crypto structures (anoncreds structures mostly)
 ** Invalid responses from 3d parties (Ledger, Agent)",,,,,,,,,,,,,,,IS-169,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-69,,,,,,,,,,"1|hzx1yf:",,,,,,LibINDY Sprint 5,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet API: Integration tests for sovrin_register_wallet (High cases),IS-166,18901,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,03/Jul/17 9:27 PM,10/Jul/17 5:32 PM,28/Oct/23 2:49 AM,10/Jul/17 5:32 PM,,,,,,,,0,,,,,Implement integration tests for sovrin_register_wallet (High cases),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-45,,,,,,,,,,"1|hzy3j3:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet API: Integration tests for sovrin_register_wallet (Medium cases),IS-167,18902,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,gudkov,gudkov,03/Jul/17 9:28 PM,14/Jul/17 11:32 PM,28/Oct/23 2:49 AM,14/Jul/17 11:32 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-45,,,,,,,,,,"1|hzy7nj:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper: Port integration tests for encrypt/decrypt (High cases),IS-168,18903,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,03/Jul/17 9:41 PM,26/Jul/18 7:06 PM,28/Oct/23 2:49 AM,26/Jul/18 7:06 PM,,,,,,,,0,5Months,,,,"Port High test cases for Signus API to iOS:
 * sovrin_encrypt
 * sovrin_decrypt",,,,,,,,,,,IS-164,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy3sv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"26/Jul/18 7:06 PM;sergey.minaev;Deprecated ticket, actually done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Support: Port integration tests for encrypt/decrypt (Medium cases),IS-169,18904,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,03/Jul/17 9:44 PM,03/Jul/17 9:44 PM,28/Oct/23 2:49 AM,03/Jul/17 9:44 PM,,,,,,,,0,,,,,"Implement Medium test cases for Signus API:
 * sovrin_encrypt
 * sovrin_decrypt",,,,,,,,,,,IS-165,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy6pb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper: Port Anoncreds Revocation integration tests (High cases),IS-170,18906,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,gudkov,gudkov,03/Jul/17 10:03 PM,26/Jul/18 6:33 PM,28/Oct/23 2:49 AM,26/Jul/18 6:33 PM,,,,,,,,0,5Months,,,,"Port High test cases for Anoncreds API to iOS:
 * sovrin_issuer_create_and_store_revoc_reg
 *  sovrin_issuer_revoke_claim",,,,,,,,,,,IS-109,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy3pj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"26/Jul/18 6:33 PM;sergey.minaev;Deprecated ticket, actually done;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MacOS Support: Port libzmq-pw to MacOS,IS-171,18907,,Task,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,cybermag,gudkov,gudkov,03/Jul/17 10:11 PM,21/Jul/17 8:40 PM,28/Oct/23 2:49 AM,21/Jul/17 6:30 PM,,,,,,,,0,,,,,There is no need to do the task due changes on https://jira.hyperledger.org/browse/IS-7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-60,,,,,,,,,,"1|hzy8r3:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"21/Jul/17 7:27 PM;Artemkaaas;Uploaded new version of zmq-pw=0.9.7 and zmq-pw-sys=0.9.7   
 [https://crates.io/crates/zmq-pw
https://crates.io/crates/zmq-pw-sys
|https://crates.io/crates/zmq-pw];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RHEL Support,IS-172,18908,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,03/Jul/17 10:45 PM,08/Oct/19 11:04 PM,28/Oct/23 2:49 AM,08/Oct/19 11:03 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-3,,RHEL Support,Done,,,,,,,,"1|hzy3zz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RHEL Support: Packages,IS-173,18909,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,p5n,gudkov,gudkov,03/Jul/17 10:52 PM,07/Jul/17 6:45 PM,28/Oct/23 2:49 AM,07/Jul/17 6:45 PM,,,,,,,,0,,,,,* Scripts for rpm creation and publishing,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-172,,,,,,,,,,"1|hzy3lj:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RHEL Support: CI Pipeline,IS-174,18910,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,03/Jul/17 10:53 PM,24/Jul/17 4:11 PM,28/Oct/23 2:49 AM,24/Jul/17 4:11 PM,,,,,,,,0,,,,,Provide Amazon Linux CI pipeline,,,,,,,,,,,,,,,,,,,,,IS-152,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-172,,,,,,,,,,"1|hzx21j:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pysovrin Interoperability,IS-175,18911,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,03/Jul/17 10:56 PM,08/Oct/19 11:02 PM,28/Oct/23 2:49 AM,27/Aug/18 11:57 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-5,,Pysovrin Interoperability,Done,,,,,,,,"1|hzy3zb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,gudkov,,,,,,,,,,"27/Aug/18 11:57 PM;esplinr;pysovrin is deprecated and all the components have switched to libindy.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper: Port test changes to iOS (Sprint 4),IS-176,18913,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,gudkov,gudkov,03/Jul/17 11:08 PM,03/Aug/17 9:07 PM,28/Oct/23 2:49 AM,03/Aug/17 9:07 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzx1uv:",,,,,,LibINDY Sprint 4,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,MRJCrunch,sergey.minaev,,,,,,,,,"07/Jul/17 11:15 PM;gudkov;Need to process tests changes in https://github.com/hyperledger/indy-sdk/pull/83;;;","07/Jul/17 11:45 PM;sergey.minaev;[https://github.com/hyperledger/indy-sdk/pull/77/files] was updated, please re-check it;;;","14/Jul/17 11:36 PM;MRJCrunch;Two tests were added to tests/wallet.rs:
indy_register_wallet_type_does_not_work_twice_with_same_name
indy_register_wallet_type_does_not_work_with_null_params;;;","17/Jul/17 9:00 PM;gudkov;[https://github.com/hyperledger/indy-sdk/pull/98]

We removed set_seq_no call from Wallet API. Needs to remove all corresponded tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Infrastructure,IS-177,18914,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,03/Jul/17 11:09 PM,17/Jul/17 6:32 PM,28/Oct/23 2:49 AM,17/Jul/17 6:32 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzy7nb:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,9.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Switch to usage of libzmq release,IS-178,18915,,Task,Complete,IS,Indy SDK,software,resplin,,,Low,Invalid,sergey.minaev,gudkov,gudkov,03/Jul/17 11:17 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,5Months,,,,"Currently libzmq-pw is forked from master branch. It can cause problems with stability and platforms support. We need the following:
 * Backport libzmq-pw changes to latest release branch of libzmq
 * After this patch this branch for iOS",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-417,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzyaif:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"04/Jul/17 5:59 PM;sergey.minaev;Actually indy-sdk used libzmq master, so it's not high-priority task to use release in libzmq-pw.;;;","16/Feb/18 8:19 PM;sergey.minaev;Now zmq-pw isn't required for SDK, see IS-417. So this task is invalid now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pysovrin Interoperability: Integration tests for GET_TXN request (High Cases),IS-179,18916,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,03/Jul/17 11:24 PM,14/Jul/17 9:59 PM,28/Oct/23 2:49 AM,14/Jul/17 9:59 PM,,,,,,,,0,,,,,,,,10800,10800,,0%,10800,10800,,,IS-199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-175,,,,,,,,,,"1|hzy7mv:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pysovrin Interoperability: Claim,IS-180,18917,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,MRJCrunch,MRJCrunch,03/Jul/17 11:28 PM,10/Jul/17 5:35 PM,28/Oct/23 2:49 AM,10/Jul/17 5:35 PM,,,,,,,,0,,,,,Implement required changes for Claim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-175,,,,,,,,,,"1|hzy3jb:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,MRJCrunch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pysovrin Interoperability: Proof Request,IS-181,18918,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,MRJCrunch,MRJCrunch,03/Jul/17 11:30 PM,10/Jul/17 5:43 PM,28/Oct/23 2:49 AM,10/Jul/17 5:43 PM,,,,,,,,0,,,,,"Implement required changes for proof request
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-175,,,,,,,,,,"1|hzy3jj:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,MRJCrunch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: Update UML diagram for Agent2Agent communication,IS-182,18919,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,sergey.minaev,sergey.minaev,03/Jul/17 11:30 PM,17/Aug/17 8:59 PM,28/Oct/23 2:49 AM,17/Aug/17 8:59 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-95,,,,,,,,,,"1|hzx1z3:",,,,,,LibINDY Sprint 5,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pysovrin Interoperability: Proof,IS-183,18920,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,MRJCrunch,MRJCrunch,03/Jul/17 11:32 PM,10/Jul/17 5:36 PM,28/Oct/23 2:49 AM,10/Jul/17 5:36 PM,,,,,,,,0,,,,,Implement required changes for Proof,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-175,,,,,,,,,,"1|hzy3jr:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,MRJCrunch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pysovrin Interoperability: replace claim_def_seq_no to issuer_did and schema_seq_no for Claim Definition in indy-sdk,IS-184,18921,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,MRJCrunch,MRJCrunch,03/Jul/17 11:35 PM,07/Jul/17 5:58 PM,28/Oct/23 2:49 AM,07/Jul/17 5:58 PM,,,,,,,,0,,,,,Change claim_def_seq_no to schema_seq_no and issuer_did,,,18000,18000,,0%,18000,18000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-175,,,,,,,,,,"1|hzy3kf:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,MRJCrunch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pysovrin Interoperability: Interoperability tests,IS-185,18922,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,MRJCrunch,MRJCrunch,03/Jul/17 11:37 PM,14/Jul/17 9:01 PM,28/Oct/23 2:49 AM,14/Jul/17 9:01 PM,,,,,,,,0,,,,,Need to create a tests for libsovrin-pysovrin interoperability,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-175,,,,,,,,,,"1|hzy7mn:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,MRJCrunch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pysovrin Interoperability: Integration tests for GET_TXN request (Medium Cases),IS-186,18923,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,gudkov,gudkov,04/Jul/17 12:07 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,5Months,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-175,,,,,,,,,,"1|hzy43j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"26/Jul/18 6:13 PM;gudkov;We can close this as we switched from pysovrin;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Replace sovrin_ prefix to indy_ in iOS wrapper,IS-187,18924,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,gudkov,gudkov,04/Jul/17 12:15 AM,12/Jul/17 10:51 PM,28/Oct/23 2:49 AM,12/Jul/17 10:50 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,IS-145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzy7mf:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper: Agent API wrapper update,IS-188,18932,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,gudkov,gudkov,04/Jul/17 5:39 PM,07/Jul/17 10:16 PM,28/Oct/23 2:49 AM,07/Jul/17 10:16 PM,,,,,,,,0,,,,,Need to integrate latest changes to Agent API to iOS wrapper,,,,,,,,,,,,,,,,,,,,IS-41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy3kv:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper: CI Pipeline,IS-189,18934,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,04/Jul/17 5:49 PM,16/Nov/17 8:15 PM,28/Oct/23 2:49 AM,16/Nov/17 8:14 PM,,,,,,,,0,,,,,"Provide:
 * Automated build
 * Scripts for artifacts publishing
 * CI pipeline",,,,,,,,,,,,,,,,,,,,IS-100,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzymsf:",,,,,,LibINDY 17.23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: CI pipeline,IS-190,18935,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,04/Jul/17 5:53 PM,01/Aug/17 12:25 AM,28/Oct/23 2:49 AM,01/Aug/17 12:25 AM,,,,,,,,0,,,,,"Provide:
 * CI pipeline",,,,,,,,,,,,,,,,,,,,IS-8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzx20v:",,,,,,LibINDY Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows Support: Packages,IS-191,18936,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,04/Jul/17 5:55 PM,09/Aug/17 3:58 PM,28/Oct/23 2:49 AM,09/Aug/17 12:02 AM,,,,,,,,0,,,,,* Provide CI pipeline for Windows,,,,,,,,,,,,,,,,,,,,IS-63,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-65,,,,,,,,,,"1|hzy4av:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,"09/Aug/17 12:02 AM;gudkov;It is dupplicate for IS-155;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MacOS Support: CI Pipeline,IS-192,18938,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,04/Jul/17 6:01 PM,12/Sep/19 10:29 PM,28/Oct/23 2:49 AM,10/Sep/19 11:07 PM,,,1.12.0,,,,,0,,,,,Provide CI piepline for MacOS,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-369,IS-1338,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-60,,,,,,,,,,"1|hzwrhj:910sx0900009eo97",,,,,,LibINDY Sprint 5,LibINDY Sprint 6,Indy SDK 19.18,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pysovrin Interoperability: GET_TXN request support in indy sdk,IS-193,18939,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,04/Jul/17 6:10 PM,10/Jul/17 5:36 PM,28/Oct/23 2:49 AM,10/Jul/17 5:36 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-175,,,,,,,,,,"1|hzy3k7:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper: Port sovrin_build_get_txn_request and corresponded tests,IS-194,18942,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,gudkov,gudkov,04/Jul/17 8:01 PM,13/Jul/17 1:12 AM,28/Oct/23 2:49 AM,13/Jul/17 1:12 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy7n3:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pysovrin Interoperability: replace claim_def_seq_no to issuer_did and schema_seq_no for Claim Definition in Pysovrin,IS-195,18960,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,MRJCrunch,MRJCrunch,05/Jul/17 4:45 PM,10/Jul/17 5:36 PM,28/Oct/23 2:49 AM,10/Jul/17 5:36 PM,,,,,,,,0,,,,,Change claim_def_seq_no to schema_seq_no and issuer_did,,,10800,10800,,0%,10800,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-175,,,,,,,,,,"1|hzy3kn:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,MRJCrunch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper,IS-196,18965,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,05/Jul/17 7:17 PM,08/Oct/19 11:00 PM,28/Oct/23 2:49 AM,20/Sep/19 11:54 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-7,,Java Wrapper,Done,,,,,,,,"1|hzy3xr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Code review of Java Wrapper,IS-197,18966,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,05/Jul/17 7:17 PM,13/Jul/17 6:05 PM,28/Oct/23 2:49 AM,13/Jul/17 6:05 PM,,,,,,,,0,,,,,Perform code review of Java Wrapper and discuss feerback with Marcus and team.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy3if:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"11/Jul/17 12:09 AM;gudkov;Review was performed. As result IS-201, IS-203, IS-204, IS-205 were created;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper: Setup dependencies for libsovrin-core pod,IS-198,18998,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,sergey.minaev,sergey.minaev,06/Jul/17 9:35 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,1.6.2,,,,,0,5Months,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzww3b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"26/Jul/18 9:26 PM;gudkov;I suggest to close this in favor of IS-100;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement compatibility with the pool 0.4.15 (or later),IS-199,19102,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,sergey.minaev,sergey.minaev,10/Jul/17 6:41 PM,14/Jul/17 1:09 AM,28/Oct/23 2:49 AM,14/Jul/17 1:09 AM,,,,,,,,0,,,,,,,,,,,,,,,,INDY-391,INDY-406,INDY-413,,IS-179,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7sv:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,"10/Jul/17 9:05 PM;sergey.minaev;There is workaround https://jira.hyperledger.org/browse/IS-200, so priority can be decreased.;;;","14/Jul/17 12:10 AM;sergey.minaev;Unblocked at version sovrin-node 0.4.23;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI: Use fixed sovrin-node version for Jenkins pipeline,IS-200,19104,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,sergey.minaev,sergey.minaev,sergey.minaev,10/Jul/17 8:01 PM,10/Jul/17 10:11 PM,28/Oct/23 2:49 AM,10/Jul/17 10:11 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-62,,,,,,,,,,"1|hzy3i7:",,,,,,LibINDY Sprint 1,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Callbacks GC Issue,IS-201,19113,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,peacekeeper,gudkov,gudkov,10/Jul/17 11:09 PM,18/Jul/17 9:43 PM,28/Oct/23 2:49 AM,18/Jul/17 9:43 PM,,,,,,,,0,,,,,"We are creating a new instance of Callback each time when user invokes API call and passing of this callback to C function. JVM can't manage reference counting in C code. As result, GC will free this object on the next GC iteration and it will cause bad behavior like crashes or missed callback calls.

To avoid this I suggest the following:

1. For each call create one static callback instance and `static Map<i32 /* command handle */, Future>`
2. Use global atomic counter to generate new command handles
3. When user calls our method generate new command handles and put corresponded Future to static Map
4. When libsovrin calls our callback resolve corresponded future with result

For reference see https://github.com/java-native-access/jna/blob/master/www/CallbacksAndClosures.md

""If your callback needs to live beyond the method invocation where it is used, make sure you keep a reference to it or the native code will call back to an empty stub after the callback object is garbage collected.""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy3h3:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,peacekeeper,,,,,,,,,,"12/Jul/17 4:27 PM;peacekeeper;this is now WIP in https://github.com/hyperledger/indy-sdk/commit/29813c7874f18551e8b174d424a114071259da23;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Use observer pattern for agentListen and agentConnect calls to work with events,IS-202,19114,,Improvement,Complete,IS,Indy SDK,software,resplin,,,High,Done,peacekeeper,gudkov,gudkov,10/Jul/17 11:12 PM,18/Jul/17 9:44 PM,28/Oct/23 2:49 AM,18/Jul/17 9:44 PM,,,,,,,,0,,,,,"Currently, agentListen and agentConnect calls require C-style callbacks that use low-level ids, handles and error codes as params. It would be nice to hide this details from library user. I suggest using observer-like approach.

1. agentListen 

I suggest to define the following observer interface:

interface ConnectionObserver \{
  void onConnection(AgentConnection connection); // will be called on acepting a connection event
  void onMessage(AgentConnection connection, String message); // will be called on receiving a message event
}

and use it in the method signature instead of C-style callbacks. User needs to implement this interface and put this implementation to agentListen

2. agentConnect

I suggest to define the following observer interface:

interface MessageObserver \{
  void onMessage(AgentConnection connection, String message); // will be called on receiving a message event
}

and use it in the method signature instead of C-style callbacks. User needs to implement this interface and put this implementation to agentListen",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy7lz:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,peacekeeper,,,,,,,,,,"11/Jul/17 11:49 PM;peacekeeper;I agree this seems like the right approach. I think this means that I would have to keep a static Map<Integer, Agent.Connection> and static Map<Integer, Agent.Listener>, so that I can call observers with the correct object. If people then forget to close the Connector/Listener, they would get a memory leak. But still this seems right.;;;","12/Jul/17 4:15 AM;peacekeeper;See [https://github.com/hyperledger/indy-sdk/commit/dcbd87f19300dfbf1795c4ee2c5762caf6914449] for initial commit to use observer pattern.;;;","13/Jul/17 5:40 PM;peacekeeper;Here's a slightly new idea how it could work, let's discuss:

[https://github.com/hyperledger/indy-sdk/blob/6b0e40a3f50aa4017366f0009fccefec72e61eff/wrappers/java/src/test/java/org/hyperledger/indy/sdk/AgentTest.java]

[https://github.com/hyperledger/indy-sdk/commit/6b0e40a3f50aa4017366f0009fccefec72e61eff]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Switch from Future to CompletableFuture in methods interfaces,IS-203,19116,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Low,Done,peacekeeper,gudkov,gudkov,10/Jul/17 11:42 PM,25/Jul/17 7:57 PM,28/Oct/23 2:49 AM,25/Jul/17 7:57 PM,,,,,,,,0,,,,,"I suggest changing result type from Future to CompletableFuture in all methods. CompletableFuture has additional methods that allow reducing boilerplate code in complex async scenarios.

For example, Spring framework uses CompletableFuture in interfaces. The motivation is aviity to use futures without blocking the thread by calling ""get"" method.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-217,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy7on:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,peacekeeper,,,,,,,,,,"11/Jul/17 10:28 PM;peacekeeper;agree, fixed in https://github.com/peacekeeper/indy-sdk/commit/2c8fc025ae72f0b1d1737f13dee81710b84d0ba5;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Remove unnecessary prefixes from method names,IS-204,19117,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Low,Done,peacekeeper,gudkov,gudkov,10/Jul/17 11:45 PM,13/Jul/17 12:39 AM,28/Oct/23 2:49 AM,13/Jul/17 12:39 AM,,,,,,,,0,,,,,"I am not sure that we need agent prefix in all methods as this prefix is already present in the class name. Just Agent::connect() seems enough.

The same is a also true for all API parts.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy7ov:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,peacekeeper,,,,,,,,,,"12/Jul/17 4:22 AM;peacekeeper;Well i wanted to make sure all Java method names match exactly the libindy method names. It seems straightforward to e.g. use ""connect"" instead of ""agentConnect"" in Java, but then e.g. would I also use ""open"" instead of ""openWallet"", and would I use ""open"" instead of ""openPoolLedger""? This mapping of method names would not be 100% deterministic and may be inconsistent between different wrappers?;;;","13/Jul/17 12:39 AM;gudkov;I agree with this arguments. Let's leave existing methods naming schema. I will use the same approach for Python wrapper am working on.

 

 ;;;","13/Jul/17 12:39 AM;gudkov;Closed as invalid.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Wrapping of each result to dedicated class look redundantly,IS-205,19118,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,peacekeeper,gudkov,gudkov,11/Jul/17 12:07 AM,25/Jul/17 7:57 PM,28/Oct/23 2:49 AM,25/Jul/17 7:57 PM,,,,,,,,0,,,,,"I see that all return types have Result wrapper. For me, it looks like just additional boilerplate. I suggest:
 # if there are no fields in Result then just return Future<Void>
 # if we return an intermediate object like AgentConnection then return it directly without Result wrapper. For example,

{{public static Future<AgentConnection> connect}}
 # If the result is a simple type like String then use this type directly. For example, {{Result<String>}}
 # And only If the result is a tuple then define a custom Result type.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy7p3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,peacekeeper,,,,,,,,,,"11/Jul/17 11:34 PM;peacekeeper;agree, fixed in https://github.com/peacekeeper/indy-sdk/commit/14326b46f870c2ce5d84ce6b480b1a4249e596d0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Wallet API integration tests (high cases),IS-206,19135,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,11/Jul/17 5:00 PM,13/Jul/17 11:54 PM,28/Oct/23 2:49 AM,13/Jul/17 11:54 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy7rz:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Signus API integration tests (high cases),IS-207,19136,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,11/Jul/17 5:01 PM,14/Jul/17 8:39 PM,28/Oct/23 2:49 AM,14/Jul/17 8:39 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy7s7:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Pool API integration tests (high cases),IS-208,19137,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,11/Jul/17 5:02 PM,14/Jul/17 9:31 PM,28/Oct/23 2:49 AM,14/Jul/17 9:31 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy7sf:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Demo integration tests,IS-209,19138,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,11/Jul/17 5:03 PM,14/Jul/17 10:12 PM,28/Oct/23 2:49 AM,14/Jul/17 10:12 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy3gv:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Ledger API integration tests (high cases),IS-210,19139,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,11/Jul/17 5:04 PM,18/Jul/17 8:23 PM,28/Oct/23 2:49 AM,18/Jul/17 8:23 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy7sn:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Agent API integration tests (high cases),IS-211,19140,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,11/Jul/17 5:05 PM,19/Jul/17 8:58 PM,28/Oct/23 2:49 AM,19/Jul/17 8:58 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy43b:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: CI Pipeline,IS-212,19141,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,11/Jul/17 5:12 PM,24/Jul/17 4:11 PM,28/Oct/23 2:49 AM,24/Jul/17 4:11 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy433:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Packages,IS-213,19142,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,11/Jul/17 5:14 PM,08/Sep/17 6:47 AM,28/Oct/23 2:49 AM,29/Aug/17 7:46 PM,,,,,,,,0,RELEASE_TARGET,,,,"Java wrapper artifacts are required for our first release. We need the following:

1. Get credentials to publish to maven central
2. Create script that will perform this piblishing
3. Integrate this script to CI

This will require a few things (some of which we may not be able to do right away):
1) A maven pom that builds the indy wraper such that it can depoly it to a maven repo in a way that handles the c callable libary
2) Setup and permision to pusblish to the Open Source Software Repository Hosting (OSSRH) (http://central.sonatype.org/pages/ossrh-guide.html)
3) Setup and permission to publish to the Maven Central repo

There are likely other steps that I don't know. I know that fabric is publishing a sdk to maven. (See https://search.maven.org/#artifactdetails%7Corg.hyperledger.fabric-sdk-java%7Cfabric-sdk-java%7C1.0.1%7Cjar)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzwze7:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,devin-fisher,gudkov,tylerq,,,,,,,,,"28/Aug/17 11:24 PM;tylerq;[~nage] This is a very important story for the consumer and enterprise teams integration of LibIndy;;;","29/Aug/17 12:56 AM;gudkov;[~tylerq] [~nage] We still have no agreement with Linux Foundation about publishing to Maven Central repo from Hyperledger. 

Maven Central has packages verification process that can require significant time.

As a workaround for this release, we created our private maven repo on evernym.com and will publish artifacts to this repo if there will be no progress with Maven Central account.

As soon as we will get credentials we can republish Artifacts to Maven central.

From consumer and enterprise teams point of view, it will be a just additional line in pom.xml for some time.;;;","29/Aug/17 5:52 PM;gudkov;From Ry:

+Andy
I started an internal discussion on how to handle these publications. It doesn't look like PyPI handles delegation, only password sharing, and I'm not sure how to delegate Maven Central publishing.
Ry;;;","08/Sep/17 6:47 AM;devin-fisher;https://repo.evernym.com/artifactory/libindy-maven-local;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Support build_get_txn_request,IS-214,19143,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,peacekeeper,gudkov,gudkov,11/Jul/17 5:20 PM,25/Jul/17 7:57 PM,28/Oct/23 2:49 AM,25/Jul/17 7:57 PM,,,,,,,,0,,,,,,,,60,60,,0%,60,60,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy7of:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,peacekeeper,,,,,,,,,,"13/Jul/17 3:25 PM;peacekeeper;added in commit https://github.com/hyperledger/indy-sdk/commit/4772415881c485db76f7df4096c28fb2f449e1e0;;;","25/Jul/17 7:57 PM;gudkov;[~peacekeeper] Thanks, we merged this and covered with tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Support register_wallet_type ,IS-215,19144,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,peacekeeper,gudkov,gudkov,11/Jul/17 5:21 PM,24/Jul/17 7:17 PM,28/Oct/23 2:49 AM,24/Jul/17 7:17 PM,,,,,,,,0,,,,,,,,180,,,0%,180,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzx1zr:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,peacekeeper,,,,,,,,,,"20/Jul/17 3:57 PM;peacekeeper;started some work on this here: https://github.com/peacekeeper/indy-sdk/commit/9a74e0f02d43255c12affd2e1e8cf6cd9786df22;;;","21/Jul/17 10:40 PM;peacekeeper;please review https://github.com/hyperledger/indy-sdk/pull/127;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Don't use JSONParameters in methods signatures,IS-216,19147,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,peacekeeper,gudkov,gudkov,11/Jul/17 6:16 PM,18/Jul/17 9:43 PM,28/Oct/23 2:49 AM,18/Jul/17 9:43 PM,,,,,,,,0,,,,,"Usage of JSONParameters in methods signature conflicts with the idea to be as close as possible to the original Indy sdk API. Also in some cases this json's can be extended by user. For example, user can register custom wallet type and configuration params will be managed by user's code.

It is better to use the same types as Indy sdk, but we can leave JSONParameters as dedicated request builders. So instead of 

someCall(SomeJSONParameter(""a"", ""b""))

user will just use

someCall(SomeJSONPArameter(""a"", ""b"")::toJson())",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy3hb:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,peacekeeper,,,,,,,,,,"13/Jul/17 3:34 PM;peacekeeper;agree, fixed in https://github.com/hyperledger/indy-sdk/commit/6a72b9083c2dde15993d98b58c7ef5ed34b0c497;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Investigate support for Java 1.7 or earlier,IS-217,19228,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Deferred,peacekeeper,peacekeeper,peacekeeper,13/Jul/17 7:25 PM,22/Aug/19 4:40 AM,28/Oct/23 2:49 AM,22/Aug/19 4:40 AM,,,,,,,,0,5Months,,,,Currently the Java wrapper needs Java 1.8 because of its use of the CompletableFuture class. Perhaps we can find a replacement for this to support earlier Java versions.,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-203,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy88f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,gudkov,peacekeeper,,,,,,,,,"26/Jul/17 4:38 PM;gudkov;[~peacekeeper] Not sure that it is good idea, but it is possible to use this backport https://github.com/streamsupport/streamsupport;;;","26/Jul/17 4:47 PM;gudkov;Additional option is RxJava Observable, but it can force API consumer to RxJava usage. 

Also we can use Future from Java 1.5, but it is too limited for complex cases as only available resolving method is calling get() that blocks thread.

I suggest the following:
- Don't change API and return CompletableFuture

- For old Java versions users suggest to link with strams backport;;;","26/Jul/17 4:49 PM;gudkov;One more options:

- Provide low-level callbacks based API
- Provide optional CompletableFuture API

- Additionally there can be RxJava based optional API;;;","22/Aug/19 4:40 AM;esplinr;We haven't seen many requests for this over the past two years, so I'm closing this issue. We can reopen it and reevaluate it if there is still a need.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: Agent demo test,IS-218,19262,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,14/Jul/17 10:46 PM,17/Jul/17 10:47 PM,28/Oct/23 2:49 AM,17/Jul/17 10:47 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3gn:",,,,,,LibINDY Sprint 2,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,"15/Jul/17 12:25 AM;sergey.minaev;Draft demo implemented, some calls of utils should be replaced to direct API calls:
https://github.com/hyperledger/indy-sdk/pull/108;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
indy_create_pool_ledger_config fails if path to genesis_txn contains backslashes on Windows,IS-219,19291,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,srottem,srottem,17/Jul/17 6:43 PM,03/Aug/17 9:05 PM,28/Oct/23 2:49 AM,03/Aug/17 9:05 PM,,,,,,,,0,,,,,"When calling indy_create_pool_ledger_config and specifying the following config as the 3rd parameter it fails with CommonInvalidStructure:113

\{""genesis_txn"":""C:\Users\srott\AppData\Local\Temp\.indy\temp.txn""} 

Changing the genesis_txn path to use forward slashes as the directory separator functions as a workaround.

Ideally this should also handle backslashes in Windows.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-65,,,,,,,,,,"1|hzx1wf:",,,,,,LibINDY Sprint 4,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,gudkov,srottem,,,,,,,,,,"03/Aug/17 9:03 PM;gudkov;[~srottem]

The reason of you problem is that the following string

\{""genesis_txn"":(""C:\Users\srott\AppData\Local\Temp\.indy\temp.txn""} 

is invalid json. 

backslashes in JSON are used to define control characters and must be escaped with slashes:

JSON.parse('\{""genesis_txn"":""C:/\Users\temp.txn""}');;;","03/Aug/17 9:05 PM;gudkov;I sugges to use JSON library in tests to format jsons instead usage of text substitutions.;;;","03/Aug/17 9:05 PM;gudkov;Closing as invalid;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Use MsgPack Serializaton for Pool ledger ,IS-220,19311,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,ashcherbakov,ashcherbakov,18/Jul/17 4:53 PM,17/Aug/17 6:45 PM,28/Oct/23 2:49 AM,17/Aug/17 6:45 PM,,,,,,,,0,,,,,"Indy-node (Ledger) is going to use MsgPack for
* Serialization of txns on the disk (all Ledgers including Pool ledger with NODE txns)
* Serialization used for calculating hashes of Merkle tree 

Indy-sdk must:
* Use MsgPack for calculating of hashes (to compare merkle tree roots during catch-up process)
* Use MsgPack for serialization of Pool Ledger txns on the disk
* Expect incoming pool ledger txns (during catch-up) in MsgPack format",,,,,,,,,,,INDY-373,IS-291,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4b3:",,,,,,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,ashcherbakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper:Make indy-pool docker image to be compatible with MacOS,IS-221,19312,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,18/Jul/17 4:59 PM,16/Nov/17 8:18 PM,28/Oct/23 2:49 AM,16/Nov/17 8:18 PM,,,,,,,,0,,,,,"{color:#444444}On MacOS we have an issue with creation of network interfaces for Docker network.{color} We have to hack code and docker image {color:#444444}to just use different ports on 127.0.0.1 instead of different ips.{color}

 

{color:#444444}This hack seems good to just make it default solution. {color}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzy3rj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"16/Nov/17 8:18 PM;sergey.minaev;Docker image now has built arg to set pool IP. And can be built with 127.0.0.1 to use on MacOS or Windows.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Android Support,IS-222,19318,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,18/Jul/17 8:16 PM,08/Oct/19 10:58 PM,28/Oct/23 2:49 AM,20/Sep/19 11:36 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-3,,Android Support,Done,,,,,,,,"1|hzy3uf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Android Support: Provide WBS,IS-223,19319,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,gudkov,gudkov,gudkov,18/Jul/17 8:17 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,5Months,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-222,,,,,,,,,,"1|hzy3rr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,"26/Jul/18 6:19 PM;gudkov;We can consider this as done as we already have significant progress in android support.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapeer: Anoncreds API integration tests (high cases),IS-224,19321,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,18/Jul/17 8:25 PM,19/Jul/17 7:06 PM,28/Oct/23 2:49 AM,19/Jul/17 7:06 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy8qf:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Returned schema fields not reliably order when getting a claim def txn,IS-225,19353,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,srottem,srottem,19/Jul/17 9:15 PM,24/Aug/17 9:48 PM,28/Oct/23 2:49 AM,24/Aug/17 8:48 PM,,,,,,,,0,BUGFIXES_TARGET,,,,"The order of schema fields returned by submitting a 'get claim def txn' do not reliably match the schema fields that result from a submitted 'claim def txn'.  

Note that sometimes the fields are returned in the same order, sometimes not. 

Please see the attached files for details which demonstrate the issue where the 'name' and 'male' fields are reversed.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzgn:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,srottem,,,,,,,,,,"24/Aug/17 3:43 PM;Artemkaaas;[~srottem] You forgot to attach files. 
 Internally all transactions interpreted as Python dictionaries which don't guarantee the order of fields.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Anoncreds API,IS-226,19356,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,MRJCrunch,MRJCrunch,20/Jul/17 12:08 AM,24/Jul/17 7:17 PM,28/Oct/23 2:49 AM,24/Jul/17 7:17 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzx227:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,MRJCrunch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Check MessagePack serialization stability in Rust,IS-227,19380,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,MRJCrunch,MRJCrunch,20/Jul/17 9:37 PM,24/Jul/17 4:21 PM,28/Oct/23 2:49 AM,21/Jul/17 1:20 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jul/17 12:10 AM;MRJCrunch;pool_txn_input;https://jira.hyperledger.org/secure/attachment/11738/pool_txn_input","21/Jul/17 12:10 AM;MRJCrunch;pool_txn_output;https://jira.hyperledger.org/secure/attachment/11739/pool_txn_output",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy427:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,MRJCrunch,,,,,,,,,,,"21/Jul/17 1:20 AM;MRJCrunch;All work is done. Input and output files are attached.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SDK calls fail to execute callback functions at unpredicatble intervals,IS-228,19404,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,srottem,srottem,21/Jul/17 5:44 PM,07/Aug/17 7:13 PM,28/Oct/23 2:49 AM,07/Aug/17 7:13 PM,,,,,,,,0,,,,,"When calling SDK functions in indy.dll under Windows from .NET and Java sometimes the called function fails to execute the command completion callback.  This appears to happen at random times and is not limited to a specific SDK function.

The behavior has been observed when running the Java wrapper unit test suite as well as when executing unit tests in .NET and from a .NET command line application. 

 ",Windows 10 Home with Java 1.8 and .NET Framework 4.5 for executing SDK functions and node pool using the indy-pool docker container with docker-tools and VirtualBox.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx1xz:",,,,,,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,sergey.minaev,srottem,,,,,,,,,"21/Jul/17 10:12 PM;gudkov;Are you sure that it isn't related to just gabarge collection of callbacks on wrapper level? Java wrapper problems were related to this.;;;","21/Jul/17 10:15 PM;srottem;Fairly sure - I believe the GC issues were solved in Java already and I'm seeing the issue when executing the Java tests using JUnit from Eclipse too.;;;","03/Aug/17 12:27 AM;gudkov;I see random freezes in python wrapper on windows platform. Working on investigation.;;;","04/Aug/17 6:26 AM;sergey.minaev;We have merge into master fix for one (most probably) issue that can results in not called callback. Can you recheck, please?;;;","04/Aug/17 6:09 PM;srottem;I'm still seeing the issue.  I've executed 10 test runs of the Java unit test suite and have never successfully completed the whole suite without getting stuck - some executions fail quickly, others pass many tests before failing.

 I have, however, only seen failures when closing the pool this time around.  Below is the tail of the console output each time when the execution hangs:
{code:java}
INFO|command_executor |C:\Users\srott\Source\indy-sdk\src\commands\mod.rs:99 | PoolCommand command received
 INFO|pool_command_executor |C:\Users\srott\Source\indy-sdk\src\commands\pool.rs:81 | Close command received
 INFO|pooldefault_pool |C:\Users\srott\Source\indy-sdk\src\services\pool\mod.rs:487 | Drop started'{code}
The log entries before these last three vary per-execution.

FYI - I am now using the latest indy-pool docker container as well.
  ;;;","04/Aug/17 11:21 PM;sergey.minaev;[~srottem] seems like bug that actually fixed. That is source of your libindy.so? If you use deb/rpm package - it can be out-of-date. Please build the latest master from sources and replace old library.;;;","04/Aug/17 11:51 PM;srottem;Since I'm on Windows I built indy.dll from source based on Git revision 1e9e4ece01023998678348067ac9dc3eb53168d7 on 3rd Aug 2017.  I haven't rebuilt the binary dependencies (I haven't been able to and got them from [~gudkov] several weeks ago) so unless they're the source of the issue I'm up-to-date.;;;","05/Aug/17 1:05 AM;gudkov;Your trace looks like the log from outdated libindy. Are you sure that indy.dll was actually rebuilt and loaded from expected path?;;;","05/Aug/17 1:17 AM;sergey.minaev;[~srottem] there are 2 indicators about out-of-date trace (and library):
{code:java}
 INFO|pooldefault_pool |C:\Users\srott\Source\indy-sdk\src\services\pool\mod.rs:487 | Drop started'{code}
 # _indy-sdk\src_ - at git revision 1e9e4ece01023998678348067ac9dc3eb53168d7 src of indy-sdk already moved to sub-folder _libindy_
 # _mod.rs:487 | Drop started_ - after fix this log message moved to next line (you can check it on github [https://github.com/hyperledger/indy-sdk/blob/1e9e4ece01023998678348067ac9dc3eb53168d7/libindy/src/services/pool/mod.rs#L488]);;;","05/Aug/17 5:36 PM;srottem;You are correct - I was not using the DLL from the new target directory.  The issue appears to be solved.;;;",,,,,,,,,,,,,,,,,,,,
Delete zmq from documentation and docker files,IS-229,19410,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,21/Jul/17 10:07 PM,24/Jul/17 4:21 PM,28/Oct/23 2:49 AM,24/Jul/17 4:11 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8rb:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: register_wallet_type integration tests (high cases),IS-230,19411,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,21/Jul/17 10:52 PM,24/Jul/17 7:17 PM,28/Oct/23 2:49 AM,24/Jul/17 7:17 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy8qn:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rename Signus,IS-231,19415,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,avkrishnan,danielhardman,danielhardman,22/Jul/17 1:20 AM,26/Jul/18 5:41 PM,28/Oct/23 2:49 AM,26/Jul/18 5:41 PM,,,,,,,,0,5Months,,,,"I was the one who proposed the name ""signus"" for the portion of the code that worries about signing, as opposed to the portion that worries about storage of secrets. It was a brainstorm, and it was the best idea I could come up with at the time. But I have never loved it.

I think this needs to be renamed.

I do not know what the right name would be; I think we are still in flux a little bit about how to organize our mental model around wallets. ""Gatekeeper""? ""Signer""? Perhaps our new crypto engineers, [~brentzundel] and Mike Lodder, will have an idea. Maybe [~gudkov] or [~ashcherbakov] will.

We can let this ticket sit for a while while we think about it, but I recommend we do something about it before the first official refresh of the SDK.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-69,,,,,,,,,,"1|hzy9d3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,brentzundel,danielhardman,gudkov,SeanBohan_Sovrin,,,,,,,,"22/Jul/17 5:10 AM;brentzundel;If we want to stick with Latin, we could use ""connexus"" to represent the fact that our signatures represent the pairwise links and relationships we've established with other entities.

[~danielhardman], Or are you looking for something more plain? ""Connections"", perhaps?;;;","17/Jan/18 10:41 PM;gudkov;[~danielhardman] [~SeanBohan_Sovrin]

After latest refactoring  we declared obsolete all DID based crypto functions in favor of key based crypto functions. Signus module was renamed to DID and now contains only DID-related calls. Crypto functions were moved to Crypto module.

Seems we can close this issue now.;;;","18/Jan/18 10:08 AM;SeanBohan_Sovrin;[~danielhardman] if you are ok with this I will close. Please confirm.;;;","26/Jul/18 5:41 PM;gudkov;Closing this as it is done already.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Rename libindy package name from indy-sdk to indy,IS-232,19440,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,24/Jul/17 4:23 PM,24/Jul/17 5:12 PM,28/Oct/23 2:49 AM,24/Jul/17 5:12 PM,,,,,,,,0,,,,,"* Rename libindy package name from indy-sdk to indy
 * Rename corresponded cargo artifacts

 
{quote}[6:58] 
 Normally I see the crate name used with
 ```extern```
 statement is same as the name of crate on [https://crates.io|https://crates.io/]. Would it not be easier and more intuitive for us to do the same. Remember I am a noob in Rust so if what I feel is not right correct me. I do feel the sdk will be probably be used by several people outside of our organisation and it should be as intuitive as possible. How about we rename this to indysdk instead of indy-sdk and then we wont need this kind of difference. @daniel.hardman would you like to comment on this.

daniel.hardman 
 [7:11 PM] 
 Since the library is ""libindy"", I believe ""indy"" is the correct crate name--not ""indysdk"" or even ""indy-sdk"".

farooq.khan [7:25 PM] 
 @daniel.hardman do you mean that on [https://crates.io|https://crates.io/] also it should be named as “indy” or is it okay for it to be named as “indy-sdk” on crates.io (edited)

daniel.hardman
 [10:46 PM] 
 I think it should be named ""indy""; it's not the whole sdk, but rather just one library
 asdasd
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8rj:",,,,,,LibINDY Sprint 3,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,farooq_m_khan,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Anoncreds API integration tests (High cases),IS-233,19452,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MRJCrunch,MRJCrunch,MRJCrunch,25/Jul/17 5:13 AM,26/Jul/17 5:03 PM,28/Oct/23 2:49 AM,26/Jul/17 5:03 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzy41z:",,,,,,LibINDY Sprint 3,LibINDY Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,MRJCrunch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows Support: Fix tests,IS-234,19463,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,25/Jul/17 3:48 PM,08/Aug/17 9:17 PM,28/Oct/23 2:49 AM,08/Aug/17 9:17 PM,,,,,,,,0,,,,,For current moment some tests fail on the windows. We need to fix them.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-65,,,,,,,,,,"1|hzx1vb:",,,,,,LibINDY Sprint 3,LibINDY Sprint 4,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.Net Support,IS-235,19466,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,25/Jul/17 7:51 PM,08/Oct/19 11:20 PM,28/Oct/23 2:49 AM,08/Oct/19 11:19 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-5,,.Net Support,Done,,,,,,,,"1|hzy3yf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.Net Wrapper: Review of .net wrapper code,IS-236,19467,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,25/Jul/17 7:52 PM,02/Aug/17 5:37 PM,28/Oct/23 2:49 AM,02/Aug/17 5:37 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-235,,,,,,,,,,"1|hzx1zj:",,,,,,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
milagro-crypto crate relies on SOVRIN_PREBUILT_DEPS_DIR env variable,IS-237,19471,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,25/Jul/17 11:07 PM,02/Aug/17 10:11 PM,28/Oct/23 2:49 AM,02/Aug/17 10:11 PM,,,,,,,,0,,,,,"build.rs of milagro-crypto uses outdated and indy specific {color:#444444}SOVRIN_PREBUILT_DEPS_DIR{color} env variable. For current moment it fails build on windows

I suggest the following:
 - Replace it witth MILAGRO_LIB_DIR and MILAGRO_INCLUDE_DIR variables
 - If INDY_PREBUILT_DEPS_DIR env variable is present setup MILAGRO_LIB_DIR and MILAGRO_INCLUDE_DIR automatically by build.rs of libindy
 - Add similar automatic setup for all 3d party libraries location based on INDY_PREBUILT_DEPS_DIR variable",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-65,,,,,,,,,,"1|hzx1wv:",,,,,,LibINDY Sprint 4,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zmq-pw crate relies on INDY_PREBUILT_DEPS_DIR env variable,IS-238,19472,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,25/Jul/17 11:16 PM,02/Aug/17 10:11 PM,28/Oct/23 2:49 AM,02/Aug/17 10:11 PM,,,,,,,,0,,,,,"build.rs of zmq-pw uses indy specific INDY{color:#444444}_PREBUILT_DEPS_DIR{color} env variable.

I suggest the following:
 - Replace it witth ZMQ_LIB_DIR and ZMQ_INCLUDE_DIR variables
 - If INDY_PREBUILT_DEPS_DIR env variable is present setup ZMQ_LIB_DIR and ZMQ_INCLUDE_DIR automatically by build.rs of libindy",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-65,,,,,,,,,,"1|hzx1x3:",,,,,,LibINDY Sprint 4,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Implement wrapper for indey_register_wallet_type,IS-239,19484,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,gudkov,gudkov,26/Jul/17 3:29 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,5Months,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzy9nz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"26/Jul/18 5:38 PM;gudkov;I believe we don't need such functionality. Plugins are much easier to be implemented in native code and to be registered with plugin init function. Closing this as invalid.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Integration tests (high cases) for indy_register_wallet_type,IS-240,19485,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,gudkov,gudkov,26/Jul/17 3:29 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,5Months,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzy9o7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"26/Jul/18 5:40 PM;gudkov;I believe we don't need such functionality. Plugins are much easier to be implemented in native code and to be registered with plugin init function. Closing this as invalid.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation: Document pipelines structure,IS-241,19486,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,26/Jul/17 3:32 PM,24/Aug/17 8:47 PM,28/Oct/23 2:49 AM,24/Aug/17 8:47 PM,,,,,,,,0,RELEASE_TARGET,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzcn:",,,,,,LibINDY Sprint 4,LibINDY Sprint 5,LibINDY Sprint 6,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds: Need to think about long term solution for schema and claim_def reference,IS-242,19528,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,MRJCrunch,MRJCrunch,27/Jul/17 10:35 PM,26/Jul/18 7:23 PM,28/Oct/23 2:49 AM,26/Jul/18 7:23 PM,,,,,,,,0,5Months,,,,"https://docs.google.com/document/d/1yQyxXlxrJs0bf23C13ywCMlgtPjxG8R7EapXy4KhiQ8/edit#heading=h.3n6k1rxk32n9
Also, we need to think about revocation registry",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy9w7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MRJCrunch,sergey.minaev,,,,,,,,,,"26/Jul/18 7:23 PM;sergey.minaev;Deprecated ticket, actually done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid error code and a bad message is used for case if pool configuration already exists,IS-243,19546,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,28/Jul/17 5:28 PM,01/Aug/17 5:21 PM,28/Oct/23 2:49 AM,01/Aug/17 5:21 PM,,,,,,,,0,,,,,"See code:

{color:#000080}if {color}path.as_path().exists() \{
 {color:#000080}return {color}{color:#660e7a}Err{color}(PoolError::{color:#660e7a}NotCreated{color}({color:#008000}""Already created""{color}.to_string()));
}

Problems:
- {color:#660e7a}NotCreated{color} are intended for different purpose
- '{color:#008000}Already created{color}' is too bad error message

- There are also some additional bad looking messages like: 'Already opened', 'Doesn't exists'  and etc...

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy42f:",,,,,,LibINDY Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,farooq_m_khan,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistent Param Name for indy_open_pool_ledger() api,IS-244,19554,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,Artemkaaas,farooq_m_khan,farooq_m_khan,29/Jul/17 12:10 AM,22/Aug/17 4:16 PM,28/Oct/23 2:49 AM,22/Aug/17 4:16 PM,,,,,,,,0,BUGFIXES_TARGET,,,,"src/api/pool.rs::indy_open_pool_ledger()

The config param takes the following JSON data:

{
     ""refreshOnOpen"": bool (optional), Forces pool ledger to be refreshed immediately after opening.
                      Defaults to true.
     ""autoRefreshTime"": int (optional), After this time in minutes pool ledger will be automatically refreshed.
                        Use 0 to disable automatic refresh. Defaults to 24*60.
     ""networkTimeout"": int (optional), Network timeout for communication with nodes in milliseconds.
                       Defaults to 20000.
 }

in some other case such key names are snake case. In this instance they are Camel Case. For consistency they should be snake case since that seems to be the majority case

 

 

 
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzgf:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,farooq_m_khan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need a Pool API to check current status of a Pool,IS-245,19566,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Deferred,,farooq_m_khan,farooq_m_khan,29/Jul/17 6:35 AM,29/Jul/19 11:09 PM,28/Oct/23 2:49 AM,29/Jul/19 11:09 PM,,,,,,,,1,5Months,EV-CS,EV-Triaged,help-wanted,"As of now there is no way to know what is the current status of a pool. 

It might be created and you can open it but we dont know so we might try to create it first and that operation fails.

It might not be open and we try to refresh/close it and that operation might also fail.

Similarly we might want to delete it and it might not be close so the operation will fail.

Instead of trying to do error based coded, it would be better if we had a api that returned the current pool status and if it is open its handle also so it can be used for appropriate further action.

 

 

 
 ",,,,,,,,,,,,,,,,,,IS-246,,,,,,,,,,,,,,IS-1243,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzwrhj:910sx09c",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,burdettadam,esplinr,farooq_m_khan,sergey.minaev,srottem,,,,,,,"29/Jul/17 6:39 AM;farooq_m_khan;[~danielhardman] Do you agree;;;","22/May/19 3:26 AM;esplinr;We have implemented a consensus check in validator-info (IS-887), and the new CLI pool refresh command (IS-867).

[~sergey.minaev] do those capabilities meet this request?;;;","04/Jun/19 5:29 PM;sergey.minaev;[~esplinr] I think no, if I understood correctly the description, this ticket is about of libindy entities status itself, not about actual network status.;;;","04/Jun/19 5:40 PM;farooq_m_khan;Yep this ticket was about the libindy entities.;;;","29/Jul/19 11:09 PM;esplinr;An API exists to force a refresh of the pool state. Work to document that API and have an automatic refresh of the pool will be tracked as IS-1243. This story is about detecting stale handles in the library state.

We don't have a need for this API call at this time, and haven't received external requests for this functionality. So we will resolve this as ""deferred"", but encourage interested people to reopen this story if they would find it valuable enough to implement it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Need a Wallet API to check current status,IS-246,19569,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Invalid,gudkov,farooq_m_khan,farooq_m_khan,29/Jul/17 8:19 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,5Months,,,,"Similar to the status API for Pool we should have a Wallet api to check its status

Is it open, closed, does it exists

As of now there is no way to know what is the current status of a wallet. 

It might be created and you can open it but we dont know so we might try to create it first and that operation fails.

It might not be open and we try to close it and that operation might also fail.

Similarly we might want to delete it and it might not be close so the operation will fail.

Instead of trying to do error based coding, it would be better if we had a api that returned the current wallet status and if it is open its handle also so it can be used for appropriate further action.

 

 

 
 ",,,,,,,,,,,,,,,,,,,,IS-245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-45,,,,,,,,,,"1|hzya2n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,burdettadam,esplinr,farooq_m_khan,gudkov,srottem,,,,,,,"27/Aug/18 11:29 PM;esplinr;We don't think this proposal is the right approach to wallet access.

If we hear more requests for this type of API call, we will reevaluate doing it.;;;","02/Nov/18 6:21 AM;burdettadam;I think the ability to check the status(exists, open, closed) of a wallet is very important. I would like to have the design decision explained in detail. Is it a security feature I am unaware of?;;;","02/Nov/18 1:02 PM;gudkov;[~burdettadam] Wallet access is handle based. Opening and closing are performed only by application by getting handle. As a result application always knows open/close status and you don’t need dedicated api for this. 

Checking for existence can be done with create method as it returns corresponded error code. Very important is that libindy isn’t responsible for global wallets discovery. If you need to get list of existing wallets you need to store this list inside of application. 

If you see any use cases that can’t be achieved by the current API let’s create a new user story and we will analyze it. ;;;","03/Nov/18 1:45 AM;burdettadam;For a new user story I pose a question, does an open wallet have a timeout, will it in the future?  I think its a fair assumption that a developer working on an agency would assume there is a timeout or some other mechanism used to free up resources on an open wallet. This assumption comes from planning to have a million users with wallets.  The developer would need the suggested API if this timeout was implemented and he prefered not to do error based coding.

An argument for adoption. I think Indy-sdk should support as many coding styles as possible to eliminate the friction of developer adoption. The idea to not only suggest but enforce error based coding is very uncomfortable with me. In my opinion, the added code and overhead of try, catch, handle builds slower systems and does not support scalable paradigms.

I argue the main reason to have a wallet API is the public impression of indy-sdk. When I am evaluating a new project I look for a complete CRUD (create, read, update, delete) API. When there is an incomplete CRUD API, I assume its a new project with limited adoption. With our project, you can assume the lack of wallet API is a security feature, but then when you get into an open wallet and try to delete a did and see that method is non-existent as well as limited pool API, it becomes easier to disregard indy-sdk and its ideas as a serious project.
Simply put, it looks bad to have incomplete API's and to restrict developer coding practices. ;;;","03/Nov/18 2:07 AM;gudkov;Hi, You just introduced a lot of new ideas here. Wallet should support some kind of timeouts, handle management API should follow some CRUD pattern, error codes are bad idea, libindy should be suitable for developers without understanding that close should be called after open, unix file API is too unsafe. 

These ideas can be great and valuable, but old invalid task isn’t a good place to discuss. I suggest to introduce set of new user stories and HIPEs. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Connect Failed,IS-247,19611,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,viswanath.tg,viswanath.tg,31/Jul/17 6:35 PM,18/Aug/17 8:10 PM,28/Oct/23 2:49 AM,18/Aug/17 8:10 PM,,,,,,,,0,v1.0,,,,"Dear Team,

When i tried to execute fabcar sample([https://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html]) i have encountered following error while executing following command

*$ node query.js on Docker Toolbox*


Create a client and set the wallet location
Set wallet path, and associate user  PeerAdmin  with application
Check user is enrolled, and set a query URL in the network
Make query
Assigning transaction_id:  fe4345a15709a0bebced876052b7ebfde0c4d66d9b8c1001d4bf6ab99e8894c2
*error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Connect Failed*
    *at* C:\Users\<NTID>\fabric-samples\fabcar\node_modules\fabric-client\node_modules\grpc\src\node\src\client.js:434:17
returned from query
Query result count =  1
error from query =  \{ Error: Connect Failed
    at C:\Users\<NTID>\fabric-samples\fabcar\node_modules\fabric-client\node_modules\grpc\src\node\src\client.js:434:17 code: 14, metadata: Metadata
\{ _internal_repr: \{} } }
Response is  Error: Connect Failed

 

 ",Development,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya5b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,viswanath.tg,,,,,,,,,,"01/Aug/17 7:25 PM;gudkov;[~viswanath.tg] 

Hello, looks like your problem ins't related to libindy component. This project is related to tracking of libindy issues. Most probable we need to move this ticket to another project.;;;","18/Aug/17 8:10 PM;gudkov;As there is no any answer i am closing this ticket as invalid.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support pool node v1.0.68,IS-248,19612,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,31/Jul/17 7:08 PM,31/Jul/17 10:12 PM,28/Oct/23 2:49 AM,31/Jul/17 10:12 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy42n:",,,,,,LibINDY Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate all pipelines to CI,IS-249,19621,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,Artemkaaas,Artemkaaas,01/Aug/17 12:35 AM,03/Aug/17 2:20 PM,28/Oct/23 2:49 AM,03/Aug/17 2:20 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx1xr:",,,,,,LibINDY Sprint 4,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper: Port test changes to iOS (Sprint 5),IS-250,19647,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,gudkov,gudkov,01/Aug/17 6:02 PM,08/Aug/17 10:04 PM,28/Oct/23 2:49 AM,08/Aug/17 10:04 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzx1v3:",,,,,,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.Net Wrapper: Review approach of handling events in Agent API,IS-251,19649,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,01/Aug/17 8:02 PM,29/Aug/17 5:48 PM,28/Oct/23 2:49 AM,29/Aug/17 5:48 PM,,,,,,,,0,,,,,"Current approach with providing observers in Agent API looks too unnetural for async/await based environment. 

Actually in related tests we have to just create Tasks that waits for callback call. It looks like unnecessary boilerplate. 

I suggest the follwoing:

Provide additional Agent::WaitForEvent method that requres list of listeners or connnections handles and returns Task that waits for the first event on this handles.

This idea is already implemented in python wrapper. See [https://github.com/hyperledger/indy-sdk/blob/master/wrappers/python/indy/agent.py] and corresponded tests for reference.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-235,,,,,,,,,,"1|hzyaf3:",,,,,,LibINDY Sprint 5,LibINDY Sprint 6,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,peacekeeper,srottem,,,,,,,,,"02/Aug/17 4:46 AM;peacekeeper;Hello, [~srottem] and I had a chance to talk about this a bit today, but we didn't fully understand.

Does this also apply to the Java wrapper, or only to the .NET code?

If the idea is to listen for events on multiple connections at the same time, I think this can also be achieved by just using a single MessageObserver for multiple connections.
(But I think your point is something slightly different.)

Maybe we discuss on Thursday, or maybe you write some sample code how you would do it?;;;","02/Aug/17 5:33 PM;gudkov;> Does this also apply to the Java wrapper, or only to the .NET code?

It is more related to .Net as java doesn't provide async/await message loop and promises composition out of the box, but we can discuss this approach as option for Java too.

> If the idea is to listen for events on multiple connections at the same time

Not exatly. The main idea is switching from Observer-like pattern to poll-like pattern. It will allow to organize application code as composition of async functions in one event loop without switching to low-level details as callbacks in native threads. 

I suggest to compare AgentSend test in .net [https://github.com/hyperledger/indy-sdk/blob/master/wrappers/dotnet/indy-sdk-dotnet-test/Wrapper/AgentTests/AgentSendTest.cs] and in Python  [https://github.com/hyperledger/indy-sdk/blob/master/wrappers/python/tests/agent/test_agent_send.py]

Both are async functions, but .net version contains more low level boilerplate with filling of Tasks in native callbacks.

Also if .Net supports complex tasks composition (waiting for first fullfilled task) we can simplify this api yet more. Instead of providing too generic WaitForEvent method that waits for generic eventrs on handles list we can provide 2 simple WaitForMessage(connection_handle) and WaitForConnection(listener_handle) that return Tasks composed by wrapper user.;;;","14/Aug/17 5:50 AM;srottem;I'm not 100% sure how to approach this, but I've taken a stab at it.  Please see pull request [https://github.com/hyperledger/indy-sdk/pull/185|https://github.com/hyperledger/indy-sdk/pull/185.].

 ;;;","22/Aug/17 4:49 PM;srottem;Issued new pull request: [https://github.com/hyperledger/indy-sdk/pull/208.]  The code has been significantly refactored and a using Task.WhenAny has been demonstrated.

Old pull  request #185 was closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
SDK should check for versioin compatibility with Sovrin Validators,IS-252,19651,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,High,,gudkov,farooq_m_khan,farooq_m_khan,01/Aug/17 8:32 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,4Months,,,,"At the moment if you are running a very old version of Validator there is no way to know the errors we are seeing are caused due to this. Its possible in future the reverse might happen were Validator is of a higher version and SDK is not.

We might want to have some kind of check during {{indy_open_pool_ledger()}} which probably is the first command when SDK starts interacting with Sovrin Nodes. To check for some min/max version range, and report a error without trying further.

Example: 1.0.9 - 2.0.0

Conversely indy-node should always move to next higher Major version number if there is a compatibility breaking change. This way we can add logic in SDK to check for say version higher than 1.0.9 but less than 2.0.0

 
 
 
 
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyag7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,farooq_m_khan,,,,,,,,,,,"01/Aug/17 8:40 PM;farooq_m_khan;[~danielhardman] [~stevetolman] I did struggle with SDK for considerable time because of this, and other consumers would easily fall into the same trap;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move marshalling of values to WalletType,IS-253,19694,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,peacekeeper,srottem,srottem,02/Aug/17 5:04 AM,29/Aug/17 7:51 PM,28/Oct/23 2:49 AM,29/Aug/17 7:51 PM,,,,,,,,0,BUGFIXES_TARGET,,,,"Wallet type implementers should not have to know about how to marshal strings from the Java managed environment to the SDK unmanaged environment.  The WalletType should encompass the marshalling, track unmanaged resources allocated by a custom wallet instance and ensure they are freed when a wallet is closed or finalized.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-254,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzyad3:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,srottem,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Custom wallet types  should explicitly use UTF-8 when marshalling strings,IS-254,19695,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,peacekeeper,srottem,srottem,02/Aug/17 5:07 AM,29/Aug/17 7:50 PM,28/Oct/23 2:49 AM,29/Aug/17 7:50 PM,,,,,,,,0,BUGFIXES_TARGET,,,,The custom in-memory wallet type used in testing should explicitly use UTF-8 encoding when marshalling strings for the c-callable SDK. At present the encoding is not explicitly defined.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-253,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzyadb:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,peacekeeper,srottem,,,,,,,,,,"03/Aug/17 5:57 PM;srottem;This is marshalling related.;;;","25/Aug/17 10:11 PM;peacekeeper;This was fixed in commit 566ddca8baa770958cd64253fe8edb72f5b54927.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unmanaged resources should be released,IS-255,19696,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,srottem,srottem,srottem,02/Aug/17 5:16 AM,25/Jan/18 12:44 AM,28/Oct/23 2:49 AM,24/Jan/18 11:54 PM,,,,,,,,0,4Months,BUGFIXES_TARGET,,,"Unmanaged resources connected to instances of the Agent.Connection, Agent.Listener, Pool and Wallet classes should be released when appropriate.  Ideally these classes should implement the AutoCloseable interface so they can be closed (thereby releasing the unmanaged resources) from a try-with-resources block and should also ensure the resources are released in a finalizer.

Not sure how these function should be implemented as the the underlying SDK calls to close these resources are asynchronous and require a callback, which might not be desirable, especially during finalization.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzyrn3:",,,,,,LibINDY Sprint 7,LibINDY Sprint 8,LibINDY Sprint 9,LibINDY Sprint 10,LibINDY 17.21,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,sergey.minaev,srottem,,,,,,,,,"15/Jan/18 11:23 PM;sergey.minaev;[PR|https://github.com/hyperledger/indy-sdk/pull/480];;;","15/Jan/18 11:27 PM;sergey.minaev;Fixed version is 1.3.0~319;;;","15/Jan/18 11:33 PM;gudkov;[~srottem] Could you validate the solution as you was bug creator?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Unmanged resources should be released,IS-256,19697,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,srottem,srottem,srottem,02/Aug/17 5:18 AM,08/Oct/19 11:19 PM,28/Oct/23 2:49 AM,08/Oct/19 11:19 PM,,,,,,,,0,,,,,"Unmanaged resources connected to instances of the Agent.Connection, Agent.Listener, Pool and Wallet classes should be released when appropriate.  Ideally these classes should implement the IDisposable interface so they can be closed (thereby releasing the unmanaged resources) from a using block and should also ensure the resources are released in a destructor.

Not sure how these functions should be implemented as the the underlying SDK calls to close these resources are asynchronous and require a callback, which might not be desirable, especially in the destructor.",,,,,,,,,,,IS-283,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-235,,,,,,,,,,"1|hzwyvz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,srottem,,,,,,,,,,"08/Oct/19 11:19 PM;esplinr;The Indy SDK wrappers are transitioning to become Aries language frameworks. Indy applications using .NET should use the Aries Framework for .NET:

https://github.com/hyperledger/aries-framework-dotnet

As a result, we do not plan to fix these issues in the Indy wrapper. If these issues still apply to the Aries Framework .NET, they should be created there.

If anyone wants to volunteer to fix these issues in the Indy SDK Wrapper, they can reopen the issue and link to their pull request.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET Wrapper: CI Pipeline,IS-257,19699,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,srottem,srottem,02/Aug/17 4:00 PM,08/Oct/19 11:19 PM,28/Oct/23 2:49 AM,08/Oct/19 11:19 PM,,,,,,,,0,4Months,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-235,,,,,,,,,,"1|hzyain:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,srottem,,,,,,,,,,"08/Oct/19 11:19 PM;esplinr;The Indy SDK wrappers are transitioning to become Aries language frameworks. Indy applications using .NET should use the Aries Framework for .NET:

https://github.com/hyperledger/aries-framework-dotnet

As a result, we do not plan to fix these issues in the Indy wrapper. If these issues still apply to the Aries Framework .NET, they should be created there.

If anyone wants to volunteer to fix these issues in the Indy SDK Wrapper, they can reopen the issue and link to their pull request.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows: Update python tests to be compatible with windows,IS-258,19917,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,03/Aug/17 8:43 PM,08/Aug/17 9:18 PM,28/Oct/23 2:49 AM,08/Aug/17 9:18 PM,,,,,,,,0,,,,,"* Fix python tests to support pool ip configuration
 * Fix any other issues",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-65,,,,,,,,,,"1|hzx1xb:",,,,,,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows: Update java tests to be compatible with windows,IS-259,19918,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,03/Aug/17 8:45 PM,08/Aug/17 10:14 PM,28/Oct/23 2:49 AM,08/Aug/17 10:14 PM,,,,,,,,0,,,,,"* Fix python tests to support pool ip configuration
 * Fix any other issues",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-65,,,,,,,,,,"1|hzx1xj:",,,,,,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Better tests organization of tests with fixtures,IS-260,19947,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,04/Aug/17 9:42 PM,08/Aug/17 9:18 PM,28/Oct/23 2:49 AM,08/Aug/17 9:18 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzyafz:",,,,,,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Publishing deb/rpm broken after sdk code was moved to ^/libindy/ internal folder.",IS-261,19950,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,sergey.minaev,sergey.minaev,sergey.minaev,04/Aug/17 11:16 PM,07/Aug/17 7:15 PM,28/Oct/23 2:49 AM,07/Aug/17 7:15 PM,,,,,,,,0,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx1wn:",,,,,,LibINDY Sprint 5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
indy_prover_get_claim_offers does not appear to correctly process the JSON returned from a pluggable wallet,IS-262,19975,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,srottem,srottem,06/Aug/17 4:04 PM,24/Aug/17 9:30 PM,28/Oct/23 2:49 AM,24/Aug/17 8:48 PM,,,,,,,,0,BUGFIXES_TARGET,,,,"Calling indy_prover_get_claim_offers when using a pluggable wallet results in the error ""Invalid structure: JSON error"".  

The function calls the the list() callback on the pluggable wallet with the filter ""claim_offer_json::"" and the callback on my wallet implementation returns the following JSON:

 
{code:java}
[{""issuer_did"":""NcYxiDXkpYi6ov5FcYDi1e"",""schema_seq_no"":1},{""issuer_did"":""NcYxiDXkpYi6ov5FcYDi1e"",""schema_seq_no"":2},{""issuer_did"":""CnEDk9HrMnmiHXEV1WFgbVCRteYnPqsJwrTdcZaNhFVW"",""schema_seq_no"":2}]{code}
The filter provided to the indy_prover_get_claim_offers call is:
{code:java}
{""issuer_did"":""NcYxiDXkpYi6ov5FcYDi1e""}{code}
It is unclear to me whether the issue is that the data being returned from the list() callback is at fault or not, but to the best of my knowledge the JSON is correctly structured.

This problem does not occur when calling indy_prover_get_claim_offers using the default wallet.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzg7:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,srottem,,,,,,,,,,"24/Aug/17 3:17 PM;Artemkaaas;Symon Rottem Looks like the problem in your implementation of custom wallet. Where can I find it? 
In this PR(https://github.com/hyperledger/indy-sdk/pull/217/files) I added a test that calls prover_store_claim_offer and prover_get_claim_offers by using our implementation of custom wallet. This test works great.;;;","24/Aug/17 3:33 PM;srottem;The InMemWallet and InMemWalletType classes are in the .NET wrapper test project here: [https://github.com/srottem/indy-sdk/tree/master/wrappers/dotnet/indy-sdk-dotnet-test/Wrapper/WalletTests].  The test ""TestExerciseCustomWallet"" in the RegisterWalletTypeTest.cs ([https://github.com/srottem/indy-sdk/blob/master/wrappers/dotnet/indy-sdk-dotnet-test/Wrapper/WalletTests/RegisterWalletTypeTest.cs)] fails when calling ProverGetClaimOffersAsync.  

 

 ;;;","24/Aug/17 4:38 PM;Artemkaaas;[~srottem] It seems that I found a reason of error. 
 Your wallet.list() function returns data in such format: [value, value] but must to return in the following format: 
{code}
{""values"":[{key: """", value: """"}, {key: """", value: """"}]}
{""values"":[
    {""key"":""claim_offer_json::b581d49d-4e14-4eea-b126-fbe879d35fa0"",  ""value"":""{\""issuer_did\"":\""CnEDk9HrMnmiHXEV1WFgbVCRteYnPqsJwrTdcZaNhFVW\"",\""schema_seq_no\"":2 }""},
    {""key"":""claim_offer_json::b581d49d-4e14-4eea-b126-fbe879d35fa0"",  ""value"":""{\""issuer_did\"":\""NcYxiDXkpYi6ov5FcYDi1e\"",\""schema_seq_no\"":2 }""}]}
{code}

 ;;;","24/Aug/17 5:39 PM;Artemkaaas;[~srottem] There was the same problem in Java wrapper. I fixed it there and added a test. (https://github.com/hyperledger/indy-sdk/pull/217/files);;;","24/Aug/17 9:30 PM;srottem;Perfect - thanks.  I've also corrected the .NET wrapper now in PR [https://github.com/hyperledger/indy-sdk/pull/221.]  Cross posting the URL to RocketChat.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Integration tests freeze periodically,IS-263,19989,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,Artemkaaas,Artemkaaas,07/Aug/17 9:31 PM,09/Aug/17 10:17 PM,28/Oct/23 2:49 AM,09/Aug/17 10:17 PM,,,,,,,,0,,,,,"Sometimes we get ""Pool with same name already opened"" when run integration tests for java wrapper.

Example builds:

[https://ci.evernym.com/blue/organizations/jenkins/Indy%20SDK%20libindy/detail/master/94/pipeline]
 [https://ci.evernym.com/blue/organizations/jenkins/Indy%20SDK%20libindy/detail/PR-156/11/pipeline]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx1y7:",,,,,,LibINDY Sprint 5,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor zmq socket code to use abstract class,IS-264,20015,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,DouglasWightman,DouglasWightman,08/Aug/17 5:30 AM,08/Aug/17 10:51 PM,28/Oct/23 2:49 AM,08/Aug/17 10:51 PM,,,,,,,,0,,,,,An abstract class will facilitate the DID-TLS implementation.  For the foreseeable future both curve-zmq and did-tls will be used.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc9j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,DouglasWightman,,,,,,,,,,,"08/Aug/17 10:51 PM;DouglasWightman;superseded by IS-267;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Remove warnings in Java Wrapper,IS-265,20026,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,gudkov,gudkov,08/Aug/17 10:22 PM,08/Oct/19 11:51 PM,28/Oct/23 2:49 AM,08/Oct/19 11:51 PM,,,,,,,,0,4Months,,,,I see a lot of warning in Java Wrapper if open it in IDEA. I suggest to have clean code inspect report as it helps to find problems in our code.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzk5z:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,esplinr,gudkov,SeanBohan_Sovrin,,,,,,,,,"04/Jan/18 4:19 AM;SeanBohan_Sovrin;Has this been completed? Still valid?;;;","08/Oct/19 11:51 PM;esplinr;The warnings are from the static analysis in IDEA.

Development on the Java wrapper is being stopped in favor of work on the Aries Java library, but we are happy to accept pull requests if people want to continue working on the Indy wrapper.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Perform full cleanup in Java Wrapper tests,IS-266,20027,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,08/Aug/17 10:24 PM,26/Jul/18 6:43 PM,28/Oct/23 2:49 AM,26/Jul/18 6:43 PM,,,,,,,,0,4Months,KellyRetest,,,"Some Java Wrapper tests don't perform full cleanup. For example, Agent tests leave opened listener sockerts. 

I suggest to implement correct resources cleanup as it makes tests much easier to maintain. I suggest to look to python tests as for example.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzycbz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"26/Jul/18 6:43 PM;sergey.minaev;Deprecated ticket. Agent API has been removed from SDK, other places already cleaned-up;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DID-TLS,IS-267,20029,,Epic,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,08/Aug/17 10:49 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-2,,DID-TLS,To Do,,,,,,,,"1|hzy3vr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DID-TLS: Design,IS-268,20030,,New Feature,In Progress,IS,Indy SDK,software,resplin,,,Medium,,TelegramSam,gudkov,gudkov,08/Aug/17 10:53 PM,19/Dec/17 1:08 PM,28/Oct/23 2:49 AM,,,,,,,,,0,4Months,DID_TLS_TARGET,,,"We need to define approach of DID-TLS support in Indy SDK. It would be nice to provide some design document that we can discuss together and create the list of implementation stories or tasks.

For background on the DID-TLS specification see [here|https://docs.google.com/document/d/1-aPY1eeHdR_TnF7_WpEs58RZ_jNdDeptVrNEu3groFc/edit?usp=sharing].

The goal is to extend IndySDK to use this specification in both agent to agent communication and eventually agent to ledger as well. Currently IndySDK uses a patched version of CurveZMQ for those communications. At a high level the DID-TLS simply means that two systems will connect, authenticate and encrypt their communications using self-signed certificates found on Sovrin rather than using certificates signed by a central certificate authority.

Introducing DID-TLS to the IndySDK project will happen in phases, with later phases deprecating the work done in earlier phases. The first phase should include the following tasks:
 # Create a mechanism for storing and retrieving RSA certificates from the ledger.
 ## In the short-term this may be done as an ATTRIB.
 ## Ideally as part of the DDO.
 # Create a raw socket SSL/TLS library for use by IndySDK in its agent to agent communication.
 ## Enable sender customization of the SNI hint
 ### See the DID-TLS specification for more information.
 ### May include “knock twice” workaround
 ## Enable receiver parsing and handling of the SNI hint
 ### See the DID-TLS specification for more information.
 # Enable agent to agent communication to use either the new socket library or CurveZMQ.
 ## Will agents listen for incoming connections over both CurveZMQ and raw sockets?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/17 8:28 PM;gudkov;agent-2-agent-proposal.puml;https://jira.hyperledger.org/secure/attachment/11934/agent-2-agent-proposal.puml","24/Aug/17 8:28 PM;gudkov;agent-2-agent-proposal.svg;https://jira.hyperledger.org/secure/attachment/11935/agent-2-agent-proposal.svg",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-267,,,,,,,,,,"1|hzy3qn:",,,,,,LibINDY Sprint 6,LibINDY Sprint 7,LibINDY Sprint 8,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,DouglasWightman,gudkov,,,,,,,,,,"11/Aug/17 11:00 PM;DouglasWightman;[~gudkov] would love comments on this approach.  If done this way I think we can avoid changes to any of the wrappers.  Do you agree?;;;","14/Aug/17 9:30 PM;gudkov;[~DouglasWightman]

Thank you, we will review your proposal ASAP.;;;","16/Aug/17 10:41 AM;DouglasWightman;As I understand it, the long term goal is to have agents communicating using a REST API rather than CurveZMQ.  Using a REST API would allow easier integration with other systems and faster approvals in mobile app stores.  This, however, would require certificates chained to a root CA.  To get around this, and to create a truly self-sovereign, verifiable and secure communication mechanism we want to begin implementation of DID-TLS (as opposed to SSL-TLS).  Ideally we could enhance openssl to use DIDs from the sovrin network but that work is long-term and out of scope for the delivery of the enterprise agent.

So the short-term goal is to begin extending libindy in this direction, in phases that keeps things functional while moving towards the ultimate goal.  The work outlined in this ticket steps us away from CurveZMQ towards a more standard SSL implementation (over raw sockets).  The next phase would be to add a REST API on top of this work.  Eventually, when DID-TLS is part of openssl, we simply remove our custom code and use that.;;;","16/Aug/17 3:01 PM;gudkov;[~DouglasWightman] [~danielhardman] [~nage]

I suggest defining what problem we want to solve more precisely. Not sure we have ""short-term"" and ""long-term"" plans. Also, the idea of deprecation previous phases doesn't look great for me. In my opinion, we need the following:

1. Sovrin requires communication infrastructure that will allow applications to find, authorize and communicate each other with using of Sovrin identities. This infrastructure should provide the following services:
 - Endpoint resolving (some kind of DNS)
 - Client authorization by Server
 - Server authorization by Client
 - Encryption
 - Integrity

2. It must be relatively easy to integrate this communication infrastructure to the most of the existing network applications and create new applications based on modern frameworks and approaches. 
3. The solution must be practical. We plan to release first set applications in a couple of months. So solutions like waiting of including of our proposal to new TLS standard and all popular TLS implementations can't be accepted. 
4. The solution must be flexible. Indy projects are under active development and communication must be under our control as much as possible and ready to integrate any crypto or workflow changes. For example, current CureveZMQ based communication relies on the transport level a lot and we see potential problem that introducing of additional encryption (HDKeys) will break this communication

5. One ip:port combination should allow handling of endpoints for multiple identities.

We can consider the following use case as a short-term example:
1. We have JVM/Scala/Akka/Akka-http application that implements agency-like scenario. it already implements some custom REST interface. This application should communicate with other agencies and end-user mobile apps.
2. We have a mobile app based on a hybrid framework. It already communicates with the agency by using custom REST interface through javascript http API.

So we need to switch this apps to use our generic communication infrastructure in a few month.;;;","16/Aug/17 4:03 PM;gudkov;I suggest defining the scope of our first phase as solving of this akka-http/hybrid mobile app communication use case. I am a bit afraid that this transport level encryption proposal can solve this communication problem at all:

1. Java and iOS/Android web/network frameworks use native platform TLS implementation and just availability of custom/updated libssl doesn't provide the easy way to integrate it.
2. Dynamic management of certificates is tricky. On the most of the client platforms, there is no adequate way to manage client certificates.
3. Sovrin way of names resolving seems hard to be implemented on the transport layer.

I start thinking about implementing this security on application level. it can be shorter way to solve our problems.;;;","24/Aug/17 8:33 PM;gudkov;If we decide that DID-TLS way is too risky. We can try to move the following way:
 
1. Use TLS or CurveCP (not CurveCP-PW) protocols on transport layer the way they were designed without any modifications. It will allow to get authenticate endpoint (not identity) and be sure about security and integrity.
2. Define DID Protocol that will allow Client and Server DIDs authentication and nonce exchange as simple well-defined messages exchange in Req/Resp style that will be performed after handshake on sockets or http layer. 
3. After DID Protocol messages exchange is finished agents will exchange ed25519-encrypted messages. Encryption can be optional. For some use cases client and server can agree to use only transport layer encryption.

I created diagram that illustrates protocol that i imagine and attached it. Note that it illustrates CurveCP on protocol layer and socket-level communication, but this idea is compatible with TLS and http too (see notes).;;;",,,,,,,,,,,,,,,,,,,,,,,,
Ledger API: GET_NODE (or similar) transaction support,IS-269,20046,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,nage,gudkov,gudkov,09/Aug/17 4:33 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,4Months,SlavaReview,,,"As Indy SDK user i should be able to retrieves the verkeys of the nodes in the validator pool.

RocketChat thread:

mgbailey16:57 I need a python script that 1) retrieves the verkeys of the nodes in the validator pool, and 2) posts a transaction in the config ledger to upgrade the software version on the pool. Is this possible with the sdk? Are there example scripts around that I can learn basics from?

@mgbailey
{quote}> 1) retrieves the verkeys of the nodes in the validator pool
{quote}
As I know there is no dedicated GET_NODE operation support on indy node level. Nodes keys exchange is performed only when a client connects to nodes and creates merkle tree. Could you describe your use case for this? We can analyze this and consider to implement these operations in node and sdk. Ideally if you can create the ticket on our Jira with this feature request.
{quote}> 2) posts a transaction in the config ledger to upgrade the software version on the pool.
{quote}
There is no builder helper for Upgrade transaction in indy sdk now, but it should be possible to create json message for this transaction manually and send it with indy_sign_and_submit_request call. We don't have an exact example of this transaction sending, but you can check how to send transactions to ledger with python here: [https://github.com/hyperledger/indy-sdk/blob/master/wrappers/python/tests/demo/test_ledger.py]
I will a create a ticket about support of Upgrade transaction message builder helper method in indy sdk.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-57,,,,,,,,,,"1|hzy3s7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,danielhardman,gudkov,mgbailey,SeanBohan_Sovrin,,,,,,,,"09/Aug/17 4:34 PM;gudkov;[~danielhardman] [~nage] 

Could you review this request and provide your oppinion?;;;","09/Aug/17 4:37 PM;gudkov;[~mgbailey] 
Could you describe your use case for retrieves the verkeys of the nodes in the validator pool?;;;","09/Aug/17 6:18 PM;gudkov;[~ashcherbakov] 
Could you review this also?;;;","09/Aug/17 10:06 PM;danielhardman;I can see how this work is desirable, but I don't think it's necessary. The reason is that I think it's already possible to create an arbitrary JSON message and submit it using libindy. If I am correct, then someone could use libindy to get node information and to submit a pool upgrade; we don't need to create special-purpose APIs to do it.

If I am correct about these steps being possible (but not convenient) with libindy today, then I am somewhat opposed to creating special-purpose APIs, because: A) it takes time and effort and is probably not the best use of our limited capabilities right now; B) the need to do a pool upgrade is very specialized; 99.9% of all software ever written against libindy should not need to do it; C) it makes it easier to mount an attack with a spurious pool upgrade (the attack would fail, but why create an API for people who want to try?); D) having less APIs in libindy is a desirable thing, because it decreases learning curve, version compatibility, documentation burden, and the complexity of writing wrappers.

If I am incorrect about these steps being possible, then I would prefer to implement the generic functionality instead of these specialized APIs.;;;","10/Aug/17 12:58 AM;mgbailey;I agree, [~danielhardman].  I only need the tools to accomplish the task, not specialized APIs.  If I understand [~gudkov] correctly, I can submit an upgrade transaction using existing functionality, but perhaps I cannot get the validator node information that I need to create the transaction. This ticket may be needed to enable me to get the validator node information.

Here is the use case I am currently pursuing:  Have a CLI app that will take the following user inputs: a genesis file, start time, trustee credential, and time interval. Use the sdk to fetch the current list of validator verkeys and use this in combination with the other inputs to create an upgrade transaction that the app will send to the pool using the sdk.;;;","04/Jan/18 4:17 AM;SeanBohan_Sovrin;Slava - what would it take to get a command in the CLI for this - we don't want a transaction to be clear. 

 

We want the ABILITY to get the key;;;","04/Jan/18 8:05 AM;mgbailey;[~SeanBohan_Sovrin], what I want has changed over time.  It is this: I want to be able to read transactions from any of the 3 ledgers from a client application (via indy-sdk). Ideally, such reading would be according to criteria such as transaction number, dest, etc. This is a general-use capability that we should have, and using which we can accomplish things such as are asked for in this ticket.  Should we make a new ticket for this, and retire this one?;;;",,,,,,,,,,,,,,,,,,,,,,,
Ledger API: Upgrade transaction support,IS-270,20047,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,09/Aug/17 4:38 PM,16/Feb/18 8:39 PM,28/Oct/23 2:49 AM,16/Feb/18 8:39 PM,,,,,,,,0,4Months,,,,"As Indy SDK user i should be able to easy create and send Update transaction to config ledger. 

RocketChat thread:
mgbailey16:57 I need a python script that 1) retrieves the verkeys of the nodes in the validator pool, and 2) posts a transaction in the config ledger to upgrade the software version on the pool. Is this possible with the sdk? Are there example scripts around that I can learn basics from? 


{quote}2) posts a transaction in the config ledger to upgrade the software version on the pool.{quote}
There is no builder helper for Upgrade transaction in indy sdk now, but it should be possible to create json message for this transaction manually and send it with indy_sign_and_submit_request call. We don't have an exact example of this transaction sending, but you can check how to send transactions to ledger with python here: [https://github.com/hyperledger/indy-sdk/blob/master/wrappers/python/tests/demo/test_ledger.py]",,,,,,,,,,,,,,,,,,,,,,,,,IS-458,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-57,,,,,,,,,,"1|hzy3sf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,danielhardman,gudkov,mgbailey,sergey.minaev,,,,,,,"09/Aug/17 6:19 PM;gudkov;[~nage] [~ashcherbakov] [~danielhardman] 
Could you review this request and provide your oppinion?;;;","09/Aug/17 10:10 PM;danielhardman;See my comment on IS-269. I don't agree that it's a high priority to make this easy; it's a high priority to make it *possible*, and low priority to make it easy. I would prefer to improve wallets or wrappers or compatibility with pysovrin first.;;;","10/Aug/17 1:02 AM;mgbailey;Here is the use case I am currently pursuing:  Have a CLI app that will take the following user inputs: a genesis file, start time, trustee credential, and time interval. Use the sdk to fetch the current list of validator verkeys and use this in combination with the other inputs to create an upgrade transaction that the app will send to the pool using the sdk.

Upgrade transactions go into the config ledger.  If the existing indy_sign_and_submit_request is ledger agnostic, then I should be able to use this to submit the upgrade transaction and this ticket would not be needed.;;;","10/Aug/17 8:56 PM;gudkov;>  If the existing indy_sign_and_submit_request is ledger agnostic,

Yes, it is ledger agnostic. Nodes determine the corresponded ledger by transaction type.;;;","16/Feb/18 8:14 PM;sergey.minaev;[~Artemkaaas][~gudkov] Have we support it already?;;;","16/Feb/18 8:19 PM;Artemkaaas;Yes. We have supported it in https://jira.hyperledger.org/browse/IS-458;;;",,,,,,,,,,,,,,,,,,,,,,,,
NodeJS Wrapper,IS-271,20048,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,09/Aug/17 6:21 PM,08/Oct/19 11:01 PM,28/Oct/23 2:49 AM,08/Oct/19 11:01 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-6,,NodeJS Wrapper,Done,,,,,,,,"1|hzy3yn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NodeJS Wrapper: Define roadmap and ETA,IS-272,20049,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,farskipper,gudkov,gudkov,09/Aug/17 6:23 PM,17/May/18 11:53 PM,28/Oct/23 2:49 AM,15/May/18 9:14 PM,,,,,,,,1,4Months,help-wanted,,,"As a Indy community memeber i need to know about our plans for NodeJS Wrapper support. So we need to clarify our plans, define roadmap and ETA.

RockerChat message:

sc11:09 Do anyone know what the ETA would be for the nodejs wrapper?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-271,,,,,,,,,,"1|hzz5pr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,danielhardman,DibbsZA,farskipper,gudkov,windley,,,,,,,"09/Aug/17 6:25 PM;gudkov;[~nage] [~danielhardman] [~ashcherbakov] 
Could you review this request and provide your oppinion?;;;","09/Aug/17 10:16 PM;danielhardman;We have had a community member volunteer to write a node.js wrapper, but that was several months ago, and they have not showed any progress. Therefore, there are not currently any firm plans to provide this. Evernym itself does not need a node.js wrapper in the near term. However, I heard last week about someone who needed a node.js wrapper, and this mention on rocket.chat represents a second instance of the question. So we could decide to take it on. In order to prioritize it, i would want to know how much effort it would take to do it, how comfortably it aligns with skills that our current developers already have, and how much ongoing cost there would be to maintain it. Can you provide any of that insight, [~gudkov]?;;;","09/Aug/17 10:22 PM;gudkov;Sure, I will provide the estimation.;;;","15/Aug/17 9:45 PM;DibbsZA;Hi guys, just wanted to put in my vote for some NodeJS functionality mainly because I don't really know any of the other platforms currently supported. 
For my purposes, I am looking to deploy a micro-service based API for use in Agency type scenarios ;;;","19/Dec/17 3:36 AM;windley;I want a NodJS wrapper and am willing to put some resources behind it. I see Eric Welton did some work a while back, but [~gudkov] says that is likely out of date. It might be a good place to start however. Does anyone have a link to the branch? ;;;","19/Dec/17 3:38 AM;windley;Found it. Here: https://github.com/korsimoro/indy-sdk;;;","18/Feb/18 2:11 PM;farskipper;Got started on a slightly different approach for the wrapper: [https://github.com/Picolab/indy-sdk/tree/master/wrappers/nodejs]

 

I also got a TDD harness setup and am testing one indy function. More to come!;;;","04/Mar/18 12:52 PM;farskipper;Update - Finished the c++ bindings, and testing the `pool` functions. I'm now working on adding tests for the rest of sdk api.;;;","13/Mar/18 11:39 PM;farskipper;Tested the wallet functions, and added buffer support. Fixed race conditions in the c++. Generated API documentation for the readme. Published a sample to npm and improved+documented how the install process works. Whats left:
 * Adding nodejs wrapper to Jenkinsfile.cd and Jenkinsfile.ci
 * Testing on osx and windows
 * Adding tests for the rest of the api (I don't imagine many suprises here since I'm generating the c++ code and already testing various kinds of inputs);;;",,,,,,,,,,,,,,,,,,,,,
CLI,IS-273,20054,,Epic,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,09/Aug/17 7:07 PM,10/Oct/19 9:41 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-8,,CLI,To Do,,,,,,,,"1|hzy3v3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - Pools management,IS-274,20055,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,09/Aug/17 7:11 PM,21/Dec/17 8:12 AM,28/Oct/23 2:49 AM,21/Dec/17 8:12 AM,,,,,,,,0,,,,,"Implement Indy-SDK based CLI based on design provided on IS-380

 

This task scope:

- add genesis transaction
- create genesis transaction file
- connect
- disconnect
- list connections",,,,,,,,,,,,,,,INDY-903,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzypzb:",,,,,,LibINDY 17.21,LibINDY 17.24,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,krw910,ozheregelya,sergey.minaev,,,,,,,,"09/Aug/17 7:12 PM;gudkov;[~nage] [~danielhardman] [~ashcherbakov] 
Could you take a look at this issue and provide your opinion?;;;","16/Dec/17 1:35 AM;sergey.minaev;Helpful links:

* README with links to packages and how-to for ubuntu repository:
 https://github.com/jovfer/indy-sdk/blob/master/cli/README.md
* windows packages
 https://repo.sovrin.org/windows/libindy/master/
 https://repo.sovrin.org/windows/indy-cli/master/
* debian packages (for manual install use libindy (not -dev) + indy-cli):
 https://repo.sovrin.org/sdk/lib/apt/xenial/master/;;;","19/Dec/17 5:31 AM;krw910;Blocked due to installation issues in IS-382

 ;;;","19/Dec/17 6:37 PM;sergey.minaev;Stable and RC builds aren't released, testing on *master* version is required.;;;","21/Dec/17 8:12 AM;ozheregelya;Version Info:
indy-cli 1.1.1~284

Following commands were verified:
 * pool list
 * pool connect
 * pool delete
 * pool create
 * pool disconnect

Pool operations work. Improvements will be moved to separated tickets.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Switch to use libindy in indy-node tests,IS-275,20056,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,nage,gudkov,gudkov,09/Aug/17 7:13 PM,26/Jul/18 6:18 PM,28/Oct/23 2:49 AM,26/Jul/18 6:18 PM,,,,,,,,0,4Months,,,,"Currently, indy-node tests use classes from python indy node code base to communicate with nodes instead of libindy. 
We need to take a version of indy-crypto, and use it in indy-node tests.
There will be only test dependency on indy-sdk in indy-node, so that should be fine.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzy3rz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,SeanBohan_Sovrin,,,,,,,,,,"09/Aug/17 7:33 PM;gudkov;[~nage] [~danielhardman] [~ashcherbakov] 
Could you take a look at this issue and provide your opinion?;;;","04/Jan/18 4:14 AM;SeanBohan_Sovrin;Can this move after the CLI or wallets migrated?;;;","26/Jul/18 6:18 PM;gudkov;We can consider this as done, especially on indy-sdk side.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
MacOS Support: Configure jenkins agent on MacOS node,IS-276,20058,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,andkononykhin,gudkov,gudkov,09/Aug/17 8:00 PM,10/Aug/17 5:57 PM,28/Oct/23 2:49 AM,10/Aug/17 5:57 PM,,,,,,,,0,,,,,"Need to attach existed (outside currently used private jenkins build network) MacOS machine to jenkins server as agent node and configure it:
 * install docker
 * create 'jenkins' user and configure ssh access by key
 * install Java",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-60,,,,,,,,,,"1|hzy42v:",,,,,,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,andkononykhin,gudkov,,,,,,,,,,"10/Aug/17 1:11 AM;andkononykhin;Agent was configured and attached to jenkins server as *macos-01* with label *macos.*

I've tested and verified that Jenkins is able to connect and run docker commands there.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows Support: Configure jenkins agent on Windows node,IS-277,20059,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,andkononykhin,gudkov,gudkov,09/Aug/17 8:03 PM,10/Aug/17 5:57 PM,28/Oct/23 2:49 AM,10/Aug/17 5:57 PM,,,,,,,,0,,,,,Most tricky part is that we need infrastructure to start docker containers from this node with network configuration appropriate to connect indy pool nodes and libindy client.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-65,,,,,,,,,,"1|hzy4an:",,,,,,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,andkononykhin,gudkov,,,,,,,,,,"10/Aug/17 1:13 AM;andkononykhin;Agent was configured and attached to jenkins server as *win2016-01* with label *win2016*.

I've tested and verified that Jenkins is able to connect and run docker commands there.

Also there is an updated windows2016 AMI on Amazon AWS which could be used for new agents rapid launching.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update nodes pool to 1.0.84,IS-278,20066,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,09/Aug/17 11:24 PM,10/Aug/17 5:42 PM,28/Oct/23 2:49 AM,10/Aug/17 5:42 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx1vj:",,,,,,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS wrapper: Support changes associated with Sign and Verify Api calls,IS-279,20090,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,Artemkaaas,Artemkaaas,10/Aug/17 5:06 PM,24/Aug/17 6:38 PM,28/Oct/23 2:49 AM,24/Aug/17 6:38 PM,,,,,,,,0,,,,,"There is a pool request that solves ""IS-158: indy_sign and indy_verify_signature should support arbitrary byte array"" (PR 172). It changes API and requires support in wrappers. We performed this changes in python and java wrapper, but we need this support for iOS wrapper too.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-158,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyaen:",,,,,,LibINDY Sprint 6,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET wrapper: Support changes associated with Sign and Verify Api calls,IS-280,20091,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,10/Aug/17 5:07 PM,17/Aug/17 7:15 PM,28/Oct/23 2:49 AM,17/Aug/17 7:15 PM,,,,,,,,0,,,,,"There is a pool request that solves ""IS-158: indy_sign and indy_verify_signature should support arbitrary byte array"" (PR 172). It changes API and requires support in wrappers. We performed this changes in python and java wrapper, but we need this support for .NET wrapper too.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-158,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4a7:",,,,,,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,srottem,,,,,,,,,,"11/Aug/17 5:46 PM;srottem;Implemented.  See PR here: https://github.com/hyperledger/indy-sdk/pull/180.;;;","16/Aug/17 10:44 PM;Artemkaaas;Please update this PR:
https://github.com/hyperledger/indy-sdk/pull/180
according to changes in
https://github.com/hyperledger/indy-sdk/pull/186;;;","17/Aug/17 5:05 PM;srottem;Done.  Please review.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Provide readme.md with some start information,IS-281,20094,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,10/Aug/17 9:05 PM,17/Aug/17 9:01 PM,28/Oct/23 2:49 AM,17/Aug/17 9:01 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzyac7:",,,,,,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Close all incoming connections associated with DID after call remove_identity,IS-282,20096,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Lowest,Invalid,,Artemkaaas,Artemkaaas,10/Aug/17 9:49 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,4Months,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycmv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,SeanBohan_Sovrin,sergey.minaev,,,,,,,,,"04/Jan/18 4:13 AM;SeanBohan_Sovrin;Can we close this ticket? Still valid?;;;","01/Feb/18 10:46 PM;sergey.minaev;Seems like related to deprecated Agent2Agent API.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to release pool handle in .NET finalizer (destructor),IS-283,20098,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,srottem,srottem,10/Aug/17 10:10 PM,16/Sep/17 4:40 PM,28/Oct/23 2:49 AM,16/Sep/17 4:40 PM,,,,,,,,0,,,,,"I have been attempting to implement code to ensure unmanaged resources obtained from the SDK by the .NET wrapper are released but have been running into trouble. and for now I have just been working with Pool instances.

I am working on the basis that the developer *should* call Close() on the a Pool instance and that IDispose is implemented so that when a Pool instance is created in a using(...) block that Close() will be automatically be called when exiting the block's scope.  As a final backstop my intention was to have the finalizer (Destructor in C#) release the resources when the Pool instance is garbage collected if the developer has Close()ed or Disposed()ed the instance.  

Each of these functions calls the indy_close_pool_ledger SDK function.

Unfortunately I'm seeing a problem when the finalizer is used for cleanup - an error occurs when the SDK function is called because the SDK is calling back into an unloaded AppDomain.  This means that the indy_close_pool_ledger call is not actually closing the pool so subsequent calls to open will fail with PoolLedgerInvalidPoolHandle (301).

I have put together a branch with the code including a test with comments that demonstrates the issue here: [https://github.com/hyperledger/indy-sdk/pull/178].  (Please note that this pull request should not be merged and is for troubleshooting purposes only)

If anyone can provide assistance it would be appreciated. ",,,,,,,,,,,,,,,IS-256,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycnb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,srottem,,,,,,,,,,,"12/Sep/17 6:28 AM;srottem;Further investigation seems to indicate that implementing the finalizer (destructor in C#) may be pointless - not all .NET platforms invoke the finalizer before the process exits:

[https://stackoverflow.com/questions/44732234/why-does-the-finalize-destructor-example-not-work-in-net-core]

Given that the use of the finalizer was to be a backstop to ensure the resources were released in the event that the developer failed to call Close() or Dispose() is this worth continuing to pursue?

 ;;;","13/Sep/17 5:58 PM;srottem;Destructors are still called when objects are GC'd, just not always during process exit.  Consequently it's still a good idea to have these.  ;;;","13/Sep/17 5:58 PM;srottem;Fixed in PR#258 -  https://github.com/hyperledger/indy-sdk/pull/258;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Use fixed dependencies versions in libindy,IS-284,20123,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,sergey.minaev,sergey.minaev,11/Aug/17 6:31 PM,11/Aug/17 7:25 PM,28/Oct/23 2:49 AM,11/Aug/17 7:25 PM,,,,,,,,0,,,,,We encounter with broken CI after some packages updates in cargo crates and our library don't fix dependencies versions for build.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyacf:",,,,,,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add FAQ section to readme,IS-285,20125,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,gudkov,sergey.minaev,sergey.minaev,11/Aug/17 7:25 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,4Months,,,,"missed nuances in current readme:

- tracked by VCS Cargo.lock for rust library (vs http://doc.crates.io/faq.html#why-do-binaries-have-cargolock-in-version-control-but-not-libraries)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-320,,,,,,,,,,"1|hzy3sn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,SeanBohan_Sovrin,sergey.minaev,,,,,,,,,,"04/Jan/18 4:13 AM;SeanBohan_Sovrin;Developer focused?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java wrapper connection references not cleaned up when listener closed,IS-286,20161,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,srottem,srottem,14/Aug/17 6:21 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"When a listener is closed the underlying SDK also closes all associated connections rendering their handles invalid.  

The Java Agent.Listener receives a call to the agentListenConnectionCb() function it adds a an Agent.Connection instance to the static connections map, however when the listener is closed and those connections are invalidated the instances are never removed from the map.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzyd07:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,srottem,,,,,,,,,,"28/Nov/17 5:05 PM;sergey.minaev;Agent.Listener is part of deprecated and removed API, the issues is invalid now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failure to sync with validator pool,IS-287,20195,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,mgbailey,mgbailey,16/Aug/17 12:35 AM,28/Aug/17 4:39 PM,28/Oct/23 2:49 AM,28/Aug/17 4:39 PM,,,,,,,,0,BUGFIXES_TARGET,,,,"While testing with the test_ledger.py script, I encountered the following.  If I run with a standard 4-node validator test pool, the script runs properly.  I add a validator to the pool, by adding a steward NYM and NODE to the ledger, and starting up a corresponding VM,  so that there are now 5 nodes, and the fifth is not in the genesis files.  I then re-run the test_ledger.py script and it appears that the app attempts to sync with the expanded pool but fails.  Here is the last part of the log:

INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending ""\{\""op\"":\""LEDGER_STATUS\"",\""txnSeqNo\"":4,\""merkleRoot\"":\""3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX\"",\""ledgerId\"":0,\""ppSeqNo\"":null,\""viewNo\"":null}""
 INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node3 \{""viewNo"":0,""newMerkleRoot"":""9fFrvZr7A2s7UjcfxHZzWH6h5n3gt8vJUWxwWgBu2KXr"",""op"":""CONSISTENCY_PROOF"",""ppSeqNo"":4,""oldMerkleRoot"":""3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX"",""seqNoStart"":4,""hashes"":[""8LGGWrRSdx3fgj2qfQ5qf484CzWmUyDvSumRBNgTJKxX""],""ledgerId"":0,""seqNoEnd"":5}
 INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node1 \{""newMerkleRoot"":""9fFrvZr7A2s7UjcfxHZzWH6h5n3gt8vJUWxwWgBu2KXr"",""seqNoStart"":4,""hashes"":[""8LGGWrRSdx3fgj2qfQ5qf484CzWmUyDvSumRBNgTJKxX""],""ppSeqNo"":4,""viewNo"":0,""ledgerId"":0,""oldMerkleRoot"":""3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX"",""op"":""CONSISTENCY_PROOF"",""seqNoEnd"":5}
 INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending ""\{\""op\"":\""CATCHUP_REQ\"",\""ledgerId\"":0,\""seqNoStart\"":5,\""seqNoEnd\"":5,\""catchupTill\"":5}""
 INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending ""\{\""op\"":\""CATCHUP_REQ\"",\""ledgerId\"":0,\""seqNoStart\"":6,\""seqNoEnd\"":5,\""catchupTill\"":5}""
 INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending ""\{\""op\"":\""CATCHUP_REQ\"",\""ledgerId\"":0,\""seqNoStart\"":7,\""seqNoEnd\"":5,\""catchupTill\"":5}""
 INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending ""\{\""op\"":\""CATCHUP_REQ\"",\""ledgerId\"":0,\""seqNoStart\"":8,\""seqNoEnd\"":5,\""catchupTill\"":5}""
 INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node2 \{""ppSeqNo"":4,""oldMerkleRoot"":""3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX"",""seqNoEnd"":5,""newMerkleRoot"":""9fFrvZr7A2s7UjcfxHZzWH6h5n3gt8vJUWxwWgBu2KXr"",""hashes"":[""8LGGWrRSdx3fgj2qfQ5qf484CzWmUyDvSumRBNgTJKxX""],""seqNoStart"":4,""viewNo"":0,""op"":""CONSISTENCY_PROOF"",""ledgerId"":0}
 INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node4 \{""ledgerId"":0,""newMerkleRoot"":""9fFrvZr7A2s7UjcfxHZzWH6h5n3gt8vJUWxwWgBu2KXr"",""ppSeqNo"":4,""seqNoStart"":4,""hashes"":[""8LGGWrRSdx3fgj2qfQ5qf484CzWmUyDvSumRBNgTJKxX""],""viewNo"":0,""seqNoEnd"":5,""oldMerkleRoot"":""3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX"",""op"":""CONSISTENCY_PROOF""}
 INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node1 \{""consProof"":[],""op"":""CATCHUP_REP"",""txns"":\{""5"":\{""identifier"":""UUbob8jLUpPekVer36cb9M"",""reqId"":1502807874434024,""signature"":""59nvSwmua6Qk8JNxQw1D38sRarHb3jd2STyb52vyVPtBHsJaCQFDfxAvGUGbMo8kZkbbnYtaTrZLvBqo7RggsUt8"",""type"":""0"",""txnTime"":1502830802,""data"":\{""client_ip"":""10.20.30.205"",""client_port"":9710,""alias"":""Node5"",""node_ip"":""10.20.30.205"",""services"":[""VALIDATOR""],""node_port"":9709},""dest"":""7gFFsqYXcUsUzvR7hQjAVTCH8HHnQLE6D68U5JZRW5Pd""}},""ledgerId"":0}
thread '<unnamed>' panicked at 'called `Option::unwrap()` on a `None` value', /checkout/src/libcore/option.rs:335
note: Run with `RUST_BACKTRACE=1` for a backtrace.",Indy SDK with python wrapper.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzfz:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mgbailey,sergey.minaev,,,,,,,,,,"17/Aug/17 1:15 AM;mgbailey;[~sergey.minaev], Here is the backtrace:

 INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending ""\{\""op\"":\""CATCHUP_REQ\"",\""ledgerId\"":0,\""seqNoStart\"":5,\""seqNoEnd\"":5,\""catchupTill\"":5}""
 INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending ""\{\""op\"":\""CATCHUP_REQ\"",\""ledgerId\"":0,\""seqNoStart\"":6,\""seqNoEnd\"":5,\""catchupTill\"":5}""
 INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending ""\{\""op\"":\""CATCHUP_REQ\"",\""ledgerId\"":0,\""seqNoStart\"":7,\""seqNoEnd\"":5,\""catchupTill\"":5}""
 INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending ""\{\""op\"":\""CATCHUP_REQ\"",\""ledgerId\"":0,\""seqNoStart\"":8,\""seqNoEnd\"":5,\""catchupTill\"":5}""
 INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node4 \{""seqNoStart"":4,""viewNo"":0,""ledgerId"":0,""seqNoEnd"":5,""oldMerkleRoot"":""3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX"",""op"":""CONSISTENCY_PROOF"",""hashes"":[""3xpHGSTTrN51iNuTSXuGQBLXTmAxHDFVGUWe3vNzTTyT""],""ppSeqNo"":14,""newMerkleRoot"":""8BuM6LBnyqCkkYW1z8EnxeKtxEcDV4hwSLpK4C2u6wAP""}
 INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node1 \{""ppSeqNo"":14,""hashes"":[""3xpHGSTTrN51iNuTSXuGQBLXTmAxHDFVGUWe3vNzTTyT""],""viewNo"":0,""ledgerId"":0,""seqNoEnd"":5,""op"":""CONSISTENCY_PROOF"",""oldMerkleRoot"":""3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX"",""seqNoStart"":4,""newMerkleRoot"":""8BuM6LBnyqCkkYW1z8EnxeKtxEcDV4hwSLpK4C2u6wAP""}
 INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node1 \{""consProof"":[],""op"":""CATCHUP_REP"",""ledgerId"":0,""txns"":\{""5"":\{""reqId"":1502898959096049,""dest"":""mXzk7i5KCT6YDW4pvo1yF96u24nkqVGPseunHpzEj6t"",""type"":""0"",""txnTime"":1502920560,""data"":\{""node_port"":9709,""services"":[""VALIDATOR""],""client_ip"":""10.20.30.205"",""node_ip"":""10.20.30.205"",""alias"":""Node5"",""client_port"":9710},""signature"":""JQPUeVDA4nkVhQSZWZX3adCAyZS1EfVSmNE6qQfZ3JMkgZxQf3PgREKdT8csXLeojPSxFpeGgyj4Y4eiULuxchT"",""identifier"":""SJceXxTejdrkeNddY3EDfi""}}}
thread '<unnamed>' panicked at 'called `Option::unwrap()` on a `None` value', /checkout/src/libcore/option.rs:335
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
 0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace
 at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49
 1: std::sys_common::backtrace::_print
 at /checkout/src/libstd/sys_common/backtrace.rs:71
 2: std::panicking::default_hook::\{\{closure}}
 at /checkout/src/libstd/sys_common/backtrace.rs:60
 at /checkout/src/libstd/panicking.rs:355
 3: std::panicking::default_hook
 at /checkout/src/libstd/panicking.rs:371
 4: std::panicking::rust_panic_with_hook
 at /checkout/src/libstd/panicking.rs:549
 5: std::panicking::begin_panic
 at /checkout/src/libstd/panicking.rs:511
 6: std::panicking::begin_panic_fmt
 at /checkout/src/libstd/panicking.rs:495
 7: rust_begin_unwind
 at /checkout/src/libstd/panicking.rs:471
 8: core::panicking::panic_fmt
 at /checkout/src/libcore/panicking.rs:69
 9: core::panicking::panic
 at /checkout/src/libcore/panicking.rs:49
 10: <core::option::Option<T>>::unwrap
 at /checkout/src/libcore/macros.rs:21
 11: indy::services::ledger::merkletree::<impl indy::services::ledger::merkletree::merkletree::MerkleTree>::consistency_proof
 at src/services/ledger/merkletree/mod.rs:92
 12: indy::services::pool::catchup::CatchupHandler::check_cons_proofs
 at src/services/pool/catchup.rs:255
 13: indy::services::pool::catchup::CatchupHandler::catchup_step
 at src/services/pool/catchup.rs:228
 14: indy::services::pool::catchup::CatchupHandler::process_catchup_rep
 at src/services/pool/catchup.rs:195
 15: indy::services::pool::catchup::CatchupHandler::process_msg
 at src/services/pool/catchup.rs:89
 16: indy::services::pool::PoolWorkerHandler::process_msg
 at src/services/pool/mod.rs:71
 17: indy::services::pool::PoolWorker::process_actions
 at src/services/pool/mod.rs:334
 18: indy::services::pool::PoolWorker::_run
 at src/services/pool/mod.rs:314
 19: indy::services::pool::PoolWorker::run
 at src/services/pool/mod.rs:297
 20: indy::services::pool::Pool::new::\{\{closure}}
 at src/services/pool/mod.rs:459;;;","23/Aug/17 6:56 PM;sergey.minaev;I've reproduced the issue on our ignored integration test and create draft hotfix [https://github.com/hyperledger/indy-sdk/pull/204]
 [~mgbailey] could you build libindy from sources of this PR [link to branch|https://github.com/jovfer/indy-sdk/tree/hotfix/is287_catchup_fail_for_5th_node] and check this fix, please?;;;","26/Aug/17 4:57 AM;mgbailey;[~sergey.minaev], I have tested this branch in a new validator pool today, and the problem is resolved.  Thank you.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to add NYM with role TRUST_ANCHOR,IS-288,20205,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,mgbailey,mgbailey,16/Aug/17 7:38 AM,23/Aug/17 2:16 PM,28/Oct/23 2:49 AM,23/Aug/17 2:16 PM,,,,,,,,0,BUGFIXES_TARGET,,,,"When I try to submit a NYM with the role set to TRUST_ANCHOR, the NYM appears on the ledger, but with no role assigned.
{code:java}
nym_txn_req = await ledger.build_nym_request(steward_did, entry[""DID""], entry[""verkey""], entry[""Name""], 'TRUST_ANCHOR')
{code}
If I do the same command using 'STEWARD' for the role, the NYM with the proper role is added to the ledger.",Indy SDK with python wrapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzgv:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,mgbailey,,,,,,,,,,"22/Aug/17 5:11 PM;Artemkaaas;[~mgbailey] 
We haven't supported 'TRUST_ANCHOR'  role before. I have created a P which will add supporting of this role. ([https://github.com/hyperledger/indy-sdk/pull/209])
But you wrote that you can build and send nym request with this role. It looks strange. 
I can not reproduce it on  indy_sdk=0.1.1-119, indy_plenum=1.0.95 and indy_node=1.0.105;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unrecognized role should generate an error when adding a NYM,IS-289,20207,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,mgbailey,mgbailey,16/Aug/17 7:45 AM,23/Aug/17 8:21 PM,28/Oct/23 2:49 AM,23/Aug/17 8:21 PM,,,,,,,,0,BUGFIXES_TARGET,,,,"In attempting to add a TRUST_ANCHOR NYM to the ledger, it appears that this role was (incorrectly) not recognized.  The NYM was added to the ledger, with no role assigned.  If a role is not recognized, the proper behavior should be to reject the transaction, and to generate an error.",Indy SDK with python wrapper,,,,,,,,,,,,,,,,,,,,,,,,,,IS-288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyacv:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,gudkov,mgbailey,,,,,,,,,"16/Aug/17 11:58 PM;gudkov;[~ashcherbakov] 
Could you check this ticket? It seems like the problem is on node side.;;;","17/Aug/17 1:04 AM;ashcherbakov;What command or API was used to do this?;;;","17/Aug/17 1:47 AM;mgbailey;This was done with the Indy SDK with the python wrapper.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Jenkins fails to cleanup Indy SDK pipeline,IS-290,20210,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,andkononykhin,andkononykhin,16/Aug/17 6:35 PM,23/Aug/17 10:50 PM,28/Oct/23 2:49 AM,23/Aug/17 10:50 PM,,,,,,,,0,BUGFIXES_TARGET,,,,"Periodically (every 20-30 seconds) Jenkins server generates a lot of I/O activity that leads to high CPU usage and increases latency of http server response.

Results of investigation:
* see a lot of tmp files with stack traces caused by Access denied exceptions which are not published in UI (pipelines console output)
* these exceptions happens when Jenkins tries to cleanup workspaces but fails cause there are a set of files/dirs with root:root permissions
* obviously it relates to docker routine

Suggestions:
* review all docker routine that uses root (-u 0:0) inside containers and fix creation of files and dirs as root on host system",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyacn:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,andkononykhin,sergey.minaev,,,,,,,,,,"17/Aug/17 7:13 PM;sergey.minaev;[~nage], it looks like critical issue. Should we include it into next our sprint (sprint 7)?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Versioning for indy_pool in CI,IS-291,20241,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,17/Aug/17 6:27 PM,17/Aug/17 11:27 PM,28/Oct/23 2:49 AM,17/Aug/17 11:27 PM,,,,,,,,0,,,,,Implement ability to set concrete version of indy_pool to can test wrappers with older version rather libindy source,,,,,,,,,,,,,,,IS-220,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx1vr:",,,,,,LibINDY Sprint 6,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation: Provide the links to binary artifacts repos in Readme.md,IS-292,20249,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,18/Aug/17 12:21 AM,18/Aug/17 7:24 PM,28/Oct/23 2:49 AM,18/Aug/17 7:24 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3lz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"18/Aug/17 7:23 PM;gudkov;It is dupplicate for IS-293 Release: Consistent repos paths;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Consistent repos paths,IS-293,20251,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,18/Aug/17 1:00 AM,21/Aug/17 5:38 PM,28/Oct/23 2:49 AM,21/Aug/17 5:38 PM,,,,,,,,0,RELEASE_TARGET,,,,"We need the following:
 * Designe consisten repos path for all artifacts we produce
 * Document this structure in .md file (may be in root Readme.md)
 * Create repos structure in repo.evernym.com
 * Update CI pipelines to use this paths
 * Share info with community",,,,,,,,,,,,,,,,,,,,,IS-292,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzyadj:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release,IS-294,20266,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,18/Aug/17 7:10 PM,17/Dec/19 12:34 AM,28/Oct/23 2:49 AM,20/Sep/19 11:46 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-7,,Release,Done,,,,,,,,"1|hzy3zr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Design acceptance procedure,IS-295,20267,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,18/Aug/17 7:44 PM,25/Aug/17 11:48 PM,28/Oct/23 2:49 AM,25/Aug/17 11:48 PM,,,,,,,,0,RELEASE_TARGET,,,,We need to define and document acceptance procedure for Indy SDK releases. I expect creation of document acceptance.md with description of the approach.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzwzdj:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Update CI pipeline to support releases,IS-296,20268,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,18/Aug/17 8:02 PM,29/Aug/17 5:54 PM,28/Oct/23 2:49 AM,29/Aug/17 5:54 PM,,,,,,,,0,,,,,"Few things must be added to pipelines code to support releases:
 * Updating of publishing scripts to support new repos structure
 * Updating of publishing scripts to be aware about master, rc, stable artifacts naming and paths
 * Add QA validation step for stable pipeline build
 * Add steps that performs copying of rc artifacts to stable artifacts",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzwzd3:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation: Restructure and enhance documentation,IS-297,20269,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,,gudkov,gudkov,18/Aug/17 8:49 PM,26/Jul/19 11:49 PM,28/Oct/23 2:49 AM,26/Jul/19 11:49 PM,,,,,,,,0,4Months,RELEASE_TARGET,,,"Existing documentation isn't very well structured. We need to provide:

1. Resonable structure. It can possible to move some documents between root folder, libindy and wrappers

2. Links to sovrin that can help to undertand workflow

3. High level documentation of API parts, links to documentation in code

4. All existing documents should be referenced through root Readme.md",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-320,,,,,,,,,,"1|hzwqr5:i",,,,,,LibINDY Sprint 7,LibINDY Sprint 8,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,esplinr,gudkov,SeanBohan_Sovrin,srottem,,,,,,,,"29/Aug/17 10:21 PM;srottem;I think it would be prudent for SDK documentation to be available online.  Each SDK function should be described on a page with a unique hyperlink and should include information about calling conventions, parameters, a summary and descriptive information about it's usage, purpose, etc.

.My thinking is that wrapper documentation should be generated from code docs for languages that support them (e.g. Java, .NET).  The wrapper documentation should focus on behavior specific to the wrapper and more detailed documentation should referenced via hyperlink to the corresponding SDK functionality in order to avoid duplication of effort.

Versioning should also be considered as it is likely that different versions of the SDK and corresponding wrappers will be available concurrently and the documentation for each specific version should remain current.  Management of the linkage between specific versions of the wrapper docs and the SDK docs would should also be taken into account.

 ;;;","04/Jan/18 4:12 AM;SeanBohan_Sovrin;Is this ticket still valid? ;;;","26/Jul/19 11:49 PM;esplinr;We will track this work as part of our many other documentation issues.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Update libindy to use actual node version (Sprint 7),IS-298,20270,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,18/Aug/17 8:56 PM,29/Aug/17 5:54 PM,28/Oct/23 2:49 AM,29/Aug/17 5:54 PM,,,,,,,,0,RELEASE_TARGET,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzyadr:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Update python wrapper to use actual libindy version (Sprint 7),IS-299,20271,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,18/Aug/17 8:56 PM,23/Aug/17 6:36 PM,28/Oct/23 2:49 AM,23/Aug/17 6:36 PM,,,,,,,,0,RELEASE_TARGET,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzyadz:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Update java wrapper to use actual libindy version (Sprint 7),IS-300,20272,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,18/Aug/17 8:57 PM,23/Aug/17 6:58 PM,28/Oct/23 2:49 AM,23/Aug/17 6:58 PM,,,,,,,,0,RELEASE_TARGET,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzyae7:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Update iOS wrapper to use actual libindy version (Sprint 9),IS-301,20273,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,gudkov,gudkov,18/Aug/17 8:57 PM,20/Sep/17 9:04 PM,28/Oct/23 2:49 AM,20/Sep/17 9:04 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzyg7z:",,,,,,LibINDY Sprint 7,LibINDY Sprint 8,LibINDY Sprint 9,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Update .Net wrapper to use actual libindy version (Sprint 8),IS-302,20274,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,srottem,gudkov,gudkov,18/Aug/17 8:58 PM,15/Sep/17 8:12 PM,28/Oct/23 2:49 AM,15/Sep/17 8:12 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzyaev:",,,,,,LibINDY Sprint 7,LibINDY Sprint 8,LibINDY Sprint 9,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS wrapper: Propagate repos path and artifacts name changes to iOS build ,IS-303,20275,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,gudkov,gudkov,18/Aug/17 9:12 PM,22/Sep/17 10:24 PM,28/Oct/23 2:49 AM,22/Sep/17 10:24 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzyaef:",,,,,,LibINDY Sprint 7,LibINDY Sprint 8,LibINDY Sprint 9,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Deprecate cargo publishing,IS-304,20288,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,19/Aug/17 12:47 AM,24/Aug/17 12:30 AM,28/Oct/23 2:49 AM,24/Aug/17 12:30 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzdb:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Deprecate python debs,IS-305,20289,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,19/Aug/17 12:48 AM,23/Aug/17 7:08 PM,28/Oct/23 2:49 AM,23/Aug/17 7:08 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyafb:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET Wrapper: Packaging,IS-306,20312,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,gudkov,gudkov,21/Aug/17 10:23 PM,08/Oct/19 11:19 PM,28/Oct/23 2:49 AM,08/Oct/19 11:19 PM,,,,,,,,0,4Months,CommunityWishlist,help-wanted,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-235,,,,,,,,,,"1|hzz5pb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,gudkov,,,,,,,,,,"08/Oct/19 11:19 PM;esplinr;The Indy SDK wrappers are transitioning to become Aries language frameworks. Indy applications using .NET should use the Aries Framework for .NET:

https://github.com/hyperledger/aries-framework-dotnet

As a result, we do not plan to fix these issues in the Indy wrapper. If these issues still apply to the Aries Framework .NET, they should be created there.

If anyone wants to volunteer to fix these issues in the Indy SDK Wrapper, they can reopen the issue and link to their pull request.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CI: RHEL pipeline broken (can't install ""Development Tools"" on amazonlinux:2017.03)",IS-307,20335,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,22/Aug/17 11:04 PM,06/Oct/17 6:19 PM,28/Oct/23 2:49 AM,06/Oct/17 6:19 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3qv:",,,,,,LibINDY Sprint 8,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clean-up wrappers after removing revocRegSeqNo from API,IS-308,20356,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,23/Aug/17 6:42 PM,23/Aug/17 8:21 PM,28/Oct/23 2:49 AM,23/Aug/17 8:21 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyafj:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI: Test wrappers in parallel,IS-309,20357,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,sergey.minaev,sergey.minaev,23/Aug/17 6:51 PM,25/Jan/18 12:44 AM,28/Oct/23 2:49 AM,24/Jan/18 11:54 PM,,,,,,,,0,4Months,SlavaReview,,,"As for now, there is the next sequence of steps for Ubuntu platform on CI:
 # Build libindy with tests ~6 min
 # Run libindy tests ~4 min
 # Run java wrapper test, using libindy from step 1 ~3 min
 # Run python wrapper test, using libindy from step1 ~3min

Total about 15 min for testing.

The first step can be split into 2: build libindy (~4 min) and build tests. Build libindy tests and 2-4 steps from the list above can be done in parallel. Expected time for testing is about 10 min.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-524,,,,,,,,,,"1|hzyrmv:",,,,,,LibINDY Sprint 8,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,"12/Jan/18 6:30 PM;sergey.minaev;Current approach without parallel run of wrappers results in ~2-3mh overhead on each RC build;;;","19/Jan/18 12:21 AM;sergey.minaev;For v1.3.0 timings in description are multiplied x2 and linux and ubuntu testing require about 35 minutes without parallel wrappers execution

[PR|https://github.com/hyperledger/indy-sdk/pull/488]
Changes: CI now firstly build libindy lib and after that run in parallel libindy testing, CLI testing, java and python wrappers testing
At the moment of fix, the longer path is MacOS + iOS testing.
Version: 1.3.0~328;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Close callback on custom wallet types never called,IS-310,20388,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,srottem,srottem,24/Aug/17 11:42 PM,28/Aug/17 5:50 PM,28/Oct/23 2:49 AM,28/Aug/17 5:50 PM,,,,,,,,0,,,,,"The close callback registered when calling register_custom_wallet_type is never called when calling indy_close_wallet for the corresponding custom wallet type.  

This has previously not been uncovered in the Java and .NET test suites because the relevant tests did not correctly test for it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzcf:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,sergey.minaev,srottem,,,,,,,,,,"25/Aug/17 12:29 AM;sergey.minaev;[~gudkov] should we include this issue to the current sprint?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ubuntu: agent test cases fail on port-map configuration,IS-311,20391,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sklump,sklump,25/Aug/17 12:30 AM,29/Aug/17 8:57 PM,28/Oct/23 2:49 AM,29/Aug/17 8:57 PM,,,,,,,,0,,,,,"On ubuntu 16.04,

{{*$ pwd*}}
{{/home/sklump/indy/indy-sdk/libindy}}

*{{$ git log}}*
{{commit 5563dfd6126476f04bda4743ec9b7eb8222fbae5}}
{{Merge: 00f0bcf be297f7}}
{{Author: Sergey Minaev <sergey.minaev.dev@gmail.com>}}
{{Date:   Thu Aug 24 13:23:41 2017 +0300}}

{{    Merge pull request #218 from Artemkaaas/bugfix/header}}

{{    Corrected header file. Deleted wrong params}}
{{...}}

{{*$ docker build -f ci/indy-pool.dockerfile -t indy_pool .*}}

{{*$ docker run -itd -p 9701-9708:9701-9708 indy_pool*}}{{*$ docker images*}}

{{CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                        NAMES}}
{{7b81282f2023        indy_pool           ""/usr/bin/supervisord""   9 minutes ago       Up 9 minutes        0.0.0.0:9701-9708->9701-9708/tcp, 9709/tcp   friendly_rosalind}}


{{*$ RUST_TEST_THREADS=1 RUST_LOG=trace RUST_BACKTRACE=1 cargo test --test=agent*}}



yields

{{test result: FAILED. 38 passed; 18 failed; 1 ignored; 0 measured; 0 filtered out}}

as per attached (zipped) file.

[^libindy-agent-only.ubuntu1604.portmap.zip]

 

 ","ubuntu 16.04, at git commit 5563dfd6126476f04bda4743ec9b7eb8222fbae5",,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Aug/17 12:25 AM;sklump;libindy-agent-only.ubuntu1604.portmap.zip;https://jira.hyperledger.org/secure/attachment/11938/libindy-agent-only.ubuntu1604.portmap.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyafr:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,sklump,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Implement libindy-libindy interoperability tests,IS-312,20412,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,25/Aug/17 7:23 PM,10/Oct/19 9:33 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"1. Implement the following test cases:

{color:#000080}* {color}Persistent configuration backward compatibility for Major version 
{color:#000080}* {color}Persistent wallet backward compatibility for Major version 
{color:#000080}* {color}Persistent pool cache backward compatibility for Major version 
{color:#000080}* {color}Anoncreds protocol backward compatibility for Major version 
{color:#000080}* {color}Agent communication backward compatibility for Major version 

2. Integrate these tests to CI
3. Update CI pipeline structure documentation",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-524,,,,,,,,,,"1|hzwvtc:x",,,,,,LibINDY Sprint 8,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Demo projects for installation testing,IS-313,20414,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,25/Aug/17 9:59 PM,31/Aug/17 2:06 PM,28/Oct/23 2:49 AM,31/Aug/17 2:06 PM,,,,,,,,0,,,,,"Functional testing is performed before artifacts packaging. libindy has some runtime dependencies and we need to be sure that package installation satisfy this dependencies.

I suggest the following:
 * Create simple demo projects on C, Python and Java that will depend on libindy artifacts and move our demo tests to these projects (in the future we need projects for iOS, .Net and NodeJS). We can try to do this in the current sprint.
 * Test libibindy and wrapper installation on ubuntu and windows (in the future on macos, rhel, iOS too)
 * Test that these demo projects can be built and run with rc packages

1. Python project is the first priority
2. Java wrapper is the second priority
3. С is optional for now as libindy packages will be checked by Python and Java projects too.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzwzdr:",,,,,,LibINDY Sprint 7,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: BLS Signature,IS-314,20416,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,ashcherbakov,ashcherbakov,25/Aug/17 11:01 PM,07/Sep/17 11:57 PM,28/Oct/23 2:49 AM,07/Sep/17 11:52 PM,,,,,,,,0,,,,,"As a community member, Indy SDK and Indy Node developer, I need to have a BLS signature implementation in Indy Crypto
 - Create a new project `libindy-crypto`
 - Implement BLS math using amcl
 - Expose Native C and Rust interfaces",,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-670,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzwzcv:",,,,,,LibINDY Sprint 8,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,ashcherbakov,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: Python Wrapper,IS-315,20466,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,ashcherbakov,ashcherbakov,29/Aug/17 12:49 AM,11/Sep/17 9:22 PM,28/Oct/23 2:49 AM,11/Sep/17 9:22 PM,,,,,,,,0,,,,,"As a community member and Indy Node developer, I need to have a python wrapper for Indy Crypto",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzwzen:",,,,,,LibINDY Sprint 8,,,,,,,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,ashcherbakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
State Proofs: State Proofs support in Indy SDK,IS-316,20481,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,gudkov,ashcherbakov,ashcherbakov,29/Aug/17 4:54 PM,02/Oct/17 6:25 PM,28/Oct/23 2:49 AM,02/Oct/17 6:25 PM,,,,,,,,0,,,,,"Indy SDK need to be able to verify state proofs to reduce Ledger load.

- https://github.com/hyperledger/indy-plenum/pull/364 - implementation in python. 
- We need to have state trie code in indy-sdk for state proof verification
- There is an ethereum implementation of etherium in rust called parity. It contains state trie and verification of state proofs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-331,,,,,,,,,,"1|hzwzfj:",,,,,,LibINDY Sprint 8,LibINDY Sprint 9,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,7.0,,,,,,,,,,,,ashcherbakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a community member, I need to have an indy-crypto Rust library with Signed State support",IS-317,20480,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,ashcherbakov,ashcherbakov,29/Aug/17 4:54 PM,29/Aug/17 8:31 PM,28/Oct/23 2:49 AM,29/Aug/17 8:31 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzydyn:",,,,,,LibINDY Sprint 8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,,,,,,,,,,,"29/Aug/17 8:31 PM;ashcherbakov;Invalid. It will be fully implemented in INDY-790;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet folder incorrectly created when using plugged wallet,IS-318,20484,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,srottem,srottem,29/Aug/17 5:26 PM,29/Aug/17 6:06 PM,28/Oct/23 2:49 AM,29/Aug/17 6:06 PM,,,,,,,,0,,,,,"Creating a new wallet for a registered custom wallet type still creates a directory named for the wallet in the .indy directory as it would if the wallet was being created for the ""default"" wallet type. 

This poses a problem as any attempt to create a new wallet with the same name will fail with a 203 error code as attempting to create a new custom wallet also checks whether the directory exists, where as not all wallets care about the directory (e.g. InMemWalletType)

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyeof:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,srottem,,,,,,,,,,"29/Aug/17 5:42 PM;gudkov;It isn't a bug. It is expected behavior. Wallet name must be a unique regardless wallet type. This folder is used to store persistent wallet state (configuration). ;;;","29/Aug/17 5:44 PM;srottem;This has been identified as behavior-by-design but I can't close the ticket.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet: Keys rotation support,IS-319,20488,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ashcherbakov,ashcherbakov,29/Aug/17 5:49 PM,06/Oct/17 6:19 PM,28/Oct/23 2:49 AM,06/Oct/17 6:19 PM,,,,,,,,0,,,,,"As as Indy SDK user, I need to be able to rotate my verky and update it in the ledger

A possible solution:
- create a temporary key-pair for a DID (not overriding the current one);
- send NYM txn for the new verkey (signing with the old/current one)
- apply tmp key-pair for the DID (override the current one with the new one);
- remove temporarily key-pair

The operation need to be atomic, that is if we NYM is updated, but applying new verkey failed, we need to re-try to apply it, or revert NYM to the old (current) one sending another NYM txn.

It must be tested and added to all wrappers",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-45,,,,,,,,,,"1|hzy3r3:",,,,,,LibINDY Sprint 8,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,7.0,,,,,,,,,,,,Artemkaaas,ashcherbakov,,,,,,,,,,"29/Sep/17 5:42 PM;Artemkaaas;We decided to split *indy_replace_keys* Api call into two APi calls *indy_replace_keys_stad* and *indy_replace_keys_apply*.
The flow:
1) indy_replace_keys_start - generates new keys for specific did and saves their as temporary keys.
2) send NYM transaction to Ledger.
3) indy_replace_keys_apply - apply temporary keys as main for specific did.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation,IS-320,20490,,Epic,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,29/Aug/17 6:02 PM,11/Oct/19 9:47 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-4,,Documentation,To Do,,,,,,,,"1|i011rc:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BLS Signature Support,IS-321,20491,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,29/Aug/17 6:05 PM,11/Oct/19 9:29 PM,28/Oct/23 2:49 AM,11/Oct/19 9:29 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-6,,Indy Crypto,Done,,,,,,,,"1|hzy3xb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation: Generate API documentation,IS-322,20493,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,gudkov,gudkov,gudkov,29/Aug/17 6:12 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,4Months,SlavaReview,,,"For the current moment, we have documentation only in code. It would be nice to auto generate doxygen-like documentation from source code and attach this documents to release artifacts.

Also, it would be nice to have more detailed non-wrapper specific SDK documentation hosted on the web somewhere.

This task can require dedicated task for each wrapper.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-320,,,,,,,,,,"1|hzyeqn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: AMCL curves configuration through Cargo features,IS-323,20496,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,29/Aug/17 8:14 PM,01/Sep/17 5:27 PM,28/Oct/23 2:49 AM,01/Sep/17 5:27 PM,,,,,,,,0,,,,,"Current AMCL v2 support curves configuration only through commenting/uncommenting lines of code. 

We need to provide Cargo compatible conditional comilation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzydyf:",,,,,,LibINDY Sprint 8,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto:Debug build support for AMCL,IS-324,20497,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,29/Aug/17 8:17 PM,01/Sep/17 5:25 PM,28/Oct/23 2:49 AM,01/Sep/17 5:25 PM,,,,,,,,0,,,,,"Current AMCL v2 works only in the release build. The reason is Rust's runtime checks for arithmetics overflow.

It is possible to refactor the code with using https://doc.rust-lang.org/std/num/struct.Wrapping.html and solve this issue.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzydy7:",,,,,,LibINDY Sprint 8,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Wrapper: Support Maven Central,IS-325,20499,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,gudkov,gudkov,gudkov,29/Aug/17 8:31 PM,20/Sep/19 11:54 PM,28/Oct/23 2:49 AM,20/Sep/19 11:54 PM,,,,,,,,0,4Months,SlavaReview,,,"Current CI publish Java artifacts to our maven repo. We want to publish artifacts to Maven Cetnrall instead,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy3qf:",,,,,,LibINDY Sprint 8,LibINDY Sprint 9,LibINDY Sprint 10,LibINDY 17.21,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,esplinr,gudkov,,,,,,,,,,"20/Sep/19 11:54 PM;esplinr;Publishing to Maven Central would require establishing some type of project account (Hyperledger?, Sovrin?) which we would like to avoid.

We haven't received external requests to make the wrapper available on Maven Central.

In the future, most applications are likely to use the Aries Java library instead of the Indy Java wrapper, so we won't worry about this effort.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper: register_wallet_type support,IS-326,20500,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,gudkov,gudkov,29/Aug/17 9:01 PM,20/Sep/17 9:09 PM,28/Oct/23 2:49 AM,20/Sep/17 9:09 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzye5r:",,,,,,LibINDY Sprint 8,LibINDY Sprint 9,,,,,,,,,,,,,,,,,,,,,,,,7.0,,,,,,,,,,,,farooq_m_khan,gudkov,,,,,,,,,,"29/Aug/17 9:19 PM;farooq_m_khan;[~stevetolman] This functionality will be important when we start using the iOS Wrapper with our ReactNative based ConnectMe app.
Could we bump up the priority of this task;;;","29/Aug/17 9:21 PM;gudkov;If this functionality is important for Enterprise team we will need also bump priority for iOS support at all. Support of releases and CI builds at least.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: Move all complex crypto from Indy SDK to Ursa,IS-327,20501,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,29/Aug/17 9:32 PM,11/Oct/19 9:29 PM,28/Oct/23 2:49 AM,,,,,,,,,0,4Months,SlavaReview,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyeq7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: Publishing and CI pipeline,IS-328,20502,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,29/Aug/17 9:33 PM,14/Sep/17 9:42 PM,28/Oct/23 2:49 AM,14/Sep/17 9:42 PM,,,,,,,,0,,,,,"We need CI pipeline for Indy Crypt that produces the following artifacts:

- Cargo crate
- Ubuntu debs
- Windows binaries
- PiPy packages",,,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzwzef:",,,,,,LibINDY Sprint 8,,,,,,,,,,,,,,,,,,,,,,,,,7.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: iOS support,IS-329,20503,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,gudkov,gudkov,29/Aug/17 9:36 PM,11/Oct/19 9:28 PM,28/Oct/23 2:49 AM,11/Oct/19 9:28 PM,,,,,,,,0,4Months,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzyeqf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,gudkov,,,,,,,,,,"11/Oct/19 9:28 PM;esplinr;Indy Crypto is deprecated. This will need to be done in Ursa.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: MacOS support,IS-330,20504,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,gudkov,gudkov,29/Aug/17 9:37 PM,03/Sep/19 10:20 PM,28/Oct/23 2:49 AM,03/Sep/19 10:20 PM,,,,,,,,0,4Months,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzwrhj:910sx0900009eoai",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,gudkov,,,,,,,,,,"03/Sep/19 10:20 PM;esplinr;We moved from indy-crypto to Ursa, so this is no longer needed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
State Proofs,IS-331,20505,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,29/Aug/17 9:44 PM,08/Oct/19 11:04 PM,28/Oct/23 2:49 AM,08/Oct/19 11:03 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-1,,State Proofs,Done,,,,,,,,"1|hzy40f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dunff2k,gudkov,,,,,,,,,,"29/Jun/19 2:06 AM;dunff2k;Do I take this to mean that indy-sdk (i.e. a non-pool node) is unable to verify a state proof? 
If it can, where is that functionality?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Blocking: Libindy does not handle using an invalid genesis transaction file,IS-332,20519,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,slafranca,slafranca,slafranca,30/Aug/17 7:53 AM,28/Nov/17 2:19 AM,28/Oct/23 2:49 AM,28/Nov/17 1:58 AM,,,,,,,,0,,,,,"While trying to automate acceptance test #2, I created an empty file and named it pool_transaction_sandbox_genesis.  The acceptance test says when a user has an invalid transaction file {code:java}""You should receive a message that the information needed to connect was not found""{code}

When I run the following code, it does not time out and it never returns an error.  It appears as if it is in an endless loop waiting for something to happen. I should see an error that tells me the information needed was not found.
{code:java}
# 1. Create the connection string from the genesis txn file
    pool_config = json.dumps({""genesis_txn"": ""pool_trxn_file""})
    try:
        await pool.create_pool_ledger_config(""acceptance2"", pool_config)
        print(""\t======== Created ledger config from genesis txn file"")
    except IndyError as e:
        if e.error_code == 306:
            print(""Pool already exists, using pool_refresh to open existing pool...."")
            # try:
            #     await pool.refresh_pool_ledger(1)
            # except IndyError as e:
            #     print(""Pool refresh failed for existing pool...."" )
        else:
            print(str(e))
            raise
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo1z:",,,,,,LibINDY Sprint 9,LibINDY Sprint 10,LibINDY 17.22,LibINDY 17.23,LibINDY 17.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,stevetolman,,,,,,,,,"31/Aug/17 2:29 AM;slafranca;As a side note, I let this code run for 15 minutes and overnight.  It never timed out.;;;","09/Nov/17 2:43 AM;slafranca;I am not sure what the fix for this was.  The problem still exists and will cause libindy to hang.  When I step through the code, I make the call to ope the ledger(pool_handle = await pool.open_pool_ledger(""pool_name"", None) and I am taken to the base_events.py and events.py.  On line 139 of events.py, the status is set to None but the cycle is not broken and an exception is not thrown.  We should return an error that indicates the genesis file is not valid or was not found and error out gracefully.

As a note, when I run the same test from the CLI, I see this:
 
{code:java}
The information required to connect this client to the nodes cannot be found.
This is an error. To correct the error, get the file containing genesis transactions
(the file name is `pool_transactions_sandbox_genesis`) from the github repository and place
it in directory `/home/ubuntu/.sovrin`.
The github url is https://github.com/sovrin-foundation/sovrin-common/tree/stable/data.
{code}
 
The libindy error whould be similar, to what we currently see in the CLI.;;;","09/Nov/17 6:37 PM;gudkov;Is this real blocker for something?;;;","09/Nov/17 6:41 PM;gudkov;create_pool_ledger_config doesn't perform checking of genesis file format. Checking is performed when you try to open pool by open_pool_ledger call. I don't see this call in your example.;;;","17/Nov/17 8:12 PM;stevetolman;Steve, it looks like this might be waiting fo your feedback/response. Can you look into it and answer Slava's questions?;;;","27/Nov/17 7:02 PM;Artemkaaas;[~slafranca] 

I re-checked this and create_pool_ledger_config call now performs validation of genesis.txn file. Please re-check on the latest master.;;;","28/Nov/17 1:58 AM;slafranca;Installed the latest libindy from repo.sovrin.org and retested.  I expected to see an error 302 and that is what I see now.;;;",,,,,,,,,,,,,,,,,,,,,,,
Java wrapper missing revocation tests,IS-333,20585,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,srottem,srottem,03/Sep/17 2:57 AM,26/Jul/18 7:08 PM,28/Oct/23 2:49 AM,26/Jul/18 7:08 PM,,,,,,,,0,,,,,No tests exist in the Java wrapper that exercise indy_issuer_create_and_store_revoc_reg or indy_issuer_revoke_claim. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzy3mv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,sergey.minaev,srottem,,,,,,,,,,"26/Jul/18 7:08 PM;sergey.minaev;Deprecated ticket, actually done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET wrapper missing revocation tests,IS-334,20586,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,srottem,srottem,03/Sep/17 2:58 AM,08/Oct/19 11:19 PM,28/Oct/23 2:49 AM,08/Oct/19 11:19 PM,,,,,,,,0,,,,,No tests exist in the .NET wrapper that exercise indy_issuer_create_and_store_revoc_reg or indy_issuer_revoke_claim. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-235,,,,,,,,,,"1|hzy3n3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,esplinr,srottem,,,,,,,,,,"08/Oct/19 11:19 PM;esplinr;The Indy SDK wrappers are transitioning to become Aries language frameworks. Indy applications using .NET should use the Aries Framework for .NET:

https://github.com/hyperledger/aries-framework-dotnet

As a result, we do not plan to fix these issues in the Indy wrapper. If these issues still apply to the Aries Framework .NET, they should be created there.

If anyone wants to volunteer to fix these issues in the Indy SDK Wrapper, they can reopen the issue and link to their pull request.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a developer using Indy SDK I should be able to run unit tests that don't require a running indy node network.,IS-335,20622,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,nage,devin-fisher,devin-fisher,06/Sep/17 6:51 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"I would be nice libindy provided a sufficiently complete mock network that can easily be used in tests downstream from indy SDK.

Ideally, it should be able to:
 * Should initializable in a consistent manner to how a network is connected to now.
 * Should be complete enough to allow the full API to work when using it.
 * Should have similar functionality (without the complexity of consensus of the node), for example, it should be able to add and get standard TXN. 
 * Should be useable for all wrappers

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzk5j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,devin-fisher,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Python 3.5 compatibility,IS-336,20656,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,spivachuk,gudkov,gudkov,07/Sep/17 6:05 PM,07/Sep/17 11:44 PM,28/Oct/23 2:49 AM,07/Sep/17 11:42 PM,,,,,,,,0,,,,,Now python wrapper supports python 3.6 only. We need to support python 3.5 also.,,,180,180,,0%,180,180,,,,,,,,,,,,,,,,,,,IS-338,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzye67:",,,,,,LibINDY Sprint 8,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,RyanWest,sergey.minaev,spivachuk,,,,,,,,"07/Sep/17 6:12 PM;gudkov;We need also update CI docker file to remove python 3.6 installation that complicates our environment.;;;","07/Sep/17 6:23 PM;spivachuk;* Provided compatibility of libindy python wrapper with Python 3.5 (previously Python 3.6+ was required) since Python 3.5 is the target platform for indy-node.
* Fixed a bug in pool_genesis_txn_file fixture.
* Fixed a bug in save_pool_genesis_txn_file function.

Here is the PR containing the listed changes:
https://github.com/hyperledger/indy-sdk/pull/250;;;","07/Sep/17 11:44 PM;sergey.minaev;Updating CI is moved to separate task IS-338;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Wrapper: Remove Python 3.6 dependency from CI,IS-337,20657,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,07/Sep/17 7:13 PM,08/Sep/17 12:05 AM,28/Oct/23 2:49 AM,08/Sep/17 12:03 AM,,,,,,,,0,,,,,Now Python Wrapper can work with Python 3.5 and we can simplify CI scripts.,,,,,,,,,,,,,,,,,,,,,IS-338,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-66,,,,,,,,,,"1|hzye6f:",,,,,,LibINDY Sprint 8,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI: Clean-up python3.6 dependency,IS-338,20667,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,07/Sep/17 11:33 PM,08/Sep/17 12:06 AM,28/Oct/23 2:49 AM,08/Sep/17 12:03 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-337,,,,,,,IS-336,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye5z:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a Developer using libindy, I need the version to be sandboxed for development.",IS-339,20682,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,nage,devin-fisher,devin-fisher,08/Sep/17 7:21 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,help-wanted,,,,"Consider a developer who has multiple needs for libindy:

In production use on the development box, libindy is installed with a stable version for a single sign-on technology used by the developer.  The developer is not developing the single sign-on software but uses it to access used services.

In indy-sdk development: the developer is fixing a small bug for a PR against the indy-sdk. Maybe just a typo in the documentation. But it is the latest version of indy-sdk. 

In application work: the developer is working on an application (consumer agent) that uses libindy. The application is using an older version due to backward incompatible changes that have not been upgraded. Upgrade work has been scheduled but not for a few months.

 

This ticket describes a general problem. But the concrete problem right now is that the maven package for libindy does not contain the shared libraries needed to run the java libindy wrapper. I assume that the expectation was to require an installation of the deb package.

But that is bad UX for the developer. Some reasons why:
 # The developer is likely not expecting to have to do an outside action when including dependency in a build tool like Maven.
 # The developer will have to manage version manually with some difficulty. He will have to figure out what version of the OS package is needed for the version he depended on in the build tool. There is no clear communication of these versions.
 # This forces the developer to deploy his software via OS packages. Otherwise, there is no why for him to automate the dependency on the deb package. For Java, it is common to deploy via WAR files that package all needed bits into a single file. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz5pj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,devin-fisher,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add TGB role to SDK,IS-340,20720,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,VladimirWork,VladimirWork,VladimirWork,11/Sep/17 5:29 PM,13/Sep/17 10:01 PM,28/Oct/23 2:49 AM,11/Sep/17 7:37 PM,,,,,,,,0,,,,,Need to add TGB role to SDK.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfxr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VladimirWork,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Needed to graduate from Incubation,IS-341,20768,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,burdettadam,gudkov,gudkov,12/Sep/17 10:18 PM,09/Oct/19 12:03 AM,28/Oct/23 2:49 AM,09/Oct/19 12:02 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-3,,Incubation,Done,,,,,,,,"1|hzy3x3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,gudkov,,,,,,,,,,"09/Oct/19 12:02 AM;esplinr;We graduated from Hyperledger incubation!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incubation: Check indy-sdk repo for any non-Indy branding,IS-342,20769,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,gudkov,gudkov,12/Sep/17 10:20 PM,22/Sep/17 10:24 PM,28/Oct/23 2:49 AM,22/Sep/17 10:24 PM,,,,,,,,0,,,,,"We need to remove all non-Indy branding and names from indy-sdk repo:

* Package names
* Code primitive names
* Paths
* Documentation

Ideally, if full-text search for Sovrin and Evernym will return nothing.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-341,,,,,,,,,,"1|hzy3m7:",,,,,,LibINDY Sprint 9,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incubation: Split indy-sdk CD pipeline to CI and CD parts,IS-343,20779,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,gudkov,gudkov,12/Sep/17 11:25 PM,22/Sep/17 10:24 PM,28/Oct/23 2:49 AM,22/Sep/17 10:24 PM,,,,,,,,0,,,,,"Current CD pipeline is complex and contains closed parts:
- SovrinHelpers library that is setup as jar on Jenkins
- Secrets: Keys and accounts

Community suggests the following:
- Split CD pipeline to CI and CD parts
- CI part must be as simple as possible. Ideally, doesn't require specific Jenkins setup to be executed
- CD part can keep all current CD logic and secrets.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-341,,,,,,,,,,"1|hzy3mf:",,,,,,LibINDY Sprint 9,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incubation: Move CI part of pipelines to Hyperledger infrastructure,IS-344,20781,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Low,Won't Do,andkononykhin,gudkov,gudkov,12/Sep/17 11:44 PM,26/Aug/19 11:32 PM,28/Oct/23 2:49 AM,26/Aug/19 11:32 PM,,,,,,,,0,devops,,,,"CI parts of all pipelines must be moved to Hyperledger infrastructure.

*PoA*:
 # discuss with Hyperledger how to deal with
 ## windows testing
 ### need rust/cargo installed
 ### need docker client installed
 ### need to be able to manage pool on docker linux containers, options
 **** dedicated linux host server with docker daemon configured to accept remote connections by tcp socket
 **** agent with windows version that supports linux docker containers
## discuss macos testing
 # prepare JJB conf files and test them on our server
 # test pipelines on Hypereldger jenkins sandbox
 # push a change for review into Hyperledger Gerrit, pass necessary verification and make it be merged",,,,,,,,,,,IS-908,IS-907,,,,,,,,,,,,,,,IS-1057,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-341,,,,,,,,,,"1|hzwrhj:910sx0900009eo9i",,,,,,LibINDY Sprint 9,LibINDY Sprint 10,LibINDY 17.21,LibINDY 17.23,LibINDY 17.24,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,andkononykhin,esplinr,gudkov,,,,,,,,,"10/Oct/18 7:12 PM;andkononykhin;Possible options to acquire windows/macos resources on Hyperledger (suggested to explore by Hyperledger admin about a year ago):
{quote}there is another project using packer for windows minions but it has proved very flaky. We have another project building OSX but they are renting mac minis from macstadium and that additional expense would need to be approved
{quote}
{quote}IoTivity is using windows via packer: [https://jenkins.iotivity.org/] for instance
{quote}
{quote}it looks like iotivity has an os x builder but it may have been retired. [https://jenkins.iotivity.org/computer/osx-10.10/]
{quote};;;","26/Aug/19 11:31 PM;esplinr;Instead of moving our CI Infrastructure from Evernym to Hyperledger, we moved it from Evernym to resources maintained by the Sovrin Foundation.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incubation: Split indy-crypto CD pipeline to CI and CD parts,IS-345,20782,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,gudkov,gudkov,12/Sep/17 11:44 PM,20/Sep/17 10:25 PM,28/Oct/23 2:49 AM,20/Sep/17 10:25 PM,,,,,,,,0,,,,,"Current CD pipeline is complex and contains closed parts:
- SovrinHelpers library that is setup as jar on Jenkins
- Secrets: Keys and accounts

Community suggests the following:
- Split CD pipeline to CI and CD parts
- CI part must be as simple as possible. Ideally, doesn't require specific Jenkins setup to be executed
- CD part can keep all current CD logic and secrets.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-341,,,,,,,,,,"1|hzy3mn:",,,,,,LibINDY Sprint 9,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve error reporting when closing agent listeners and connections with invalid handles,IS-346,20784,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,srottem,srottem,13/Sep/17 12:37 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,Community,SlavaReview,,,Currently calling the indy_agent_close_listener and indy_agent_close_connection functions with an invalid handle results in a CommonInvalidStructure error (113).  Ideally these functions will return an 'InvalidHandle' type error in the same way as calling the indy_close_wallet function does (i.e.. WalletInvalidHandle (200)).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg93:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,SeanBohan_Sovrin,sergey.minaev,srottem,,,,,,,,"18/Jan/18 7:22 AM;SeanBohan_Sovrin;[~gudkov] - can you take a look?;;;","18/Jan/18 1:11 PM;gudkov;It seems reasonable, but can be already fixed. [~sergey.minaev] Could you check?;;;","19/Jan/18 6:07 PM;sergey.minaev;[~gudkov] [~SeanBohan_Sovrin] This ticket about deprecated Agent2Agent API. So it can be closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Changing a nym's role to the empty role does not work in libindy python wrapper,IS-347,20812,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,spivachuk,spivachuk,14/Sep/17 2:58 AM,14/Sep/17 9:49 PM,28/Oct/23 2:49 AM,14/Sep/17 9:48 PM,,,,,,,,0,,,,,"When trying to change the role of a nym to the empty role by sending a request constructed using build_nym_request call from libindy python wrapper, the role of the nym remains unchanged.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye6n:",,,,,,LibINDY Sprint 8,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,sergey.minaev,spivachuk,,,,,,,,,,"14/Sep/17 9:49 PM;sergey.minaev;There was a bug in indy-sdk itself, fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy-SDK binary should be part of Java Wrapper artifiact,IS-348,20822,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,gudkov,faisal00813,faisal00813,14/Sep/17 7:50 PM,20/Sep/19 11:52 PM,28/Oct/23 2:49 AM,20/Sep/19 11:52 PM,,,,,,,,0,,,,,"When Java-wrapper is currently used in a project we have to specify the location of the binary of indy-sdk 
As the path of the binary gets checked in the code, this is causing the problem when a team is developing on different development environments like OSX, Linux and Windows as the extensions of the binary changes accordingly like libindy.dll, libindy.so and libindy.dylib.
This should be the responsibility of the wrapper to pick the appropriate binary based on the platform.
One way could be binaries are in the jar of wrapper add appropriate one is picked when the java wrapper is initialized",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-196,,,,,,,,,,"1|hzwyvr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,faisal00813,gudkov,,,,,,,,,"14/Sep/17 8:10 PM;gudkov;Providing of native libraries inside of jar looks like very bad practice to me.

libindy java wrapper allows to correctly load libindy.so or dll. It just uses system dynamic library loader. So if you install libindy.deb you don't need any additional steps in the code.;;;","20/Sep/19 11:52 PM;esplinr;In the future, we will likely take a different approach to wrappers. Specifically, the Java wrapper will move to Aries.

Downstream teams seem to have solved this problem for their current use cases. If we need to make additional changes to assist them, that should be raised as a new issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
libindy: user cannot remove a role using the role parameter,IS-349,20860,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,slafranca,slafranca,16/Sep/17 5:52 AM,27/Sep/17 12:34 AM,28/Oct/23 2:49 AM,21/Sep/17 9:22 PM,,,,,,,,0,,,,,"The role parameter in the build NYM request does not allow the user to remove the role.  I am using the python wrapper.  I used an empty string and other values and the role remained unchanged after making the call.

Using build 178.  Jenkins history for build 178 shows code was added to allow the user to pass an empty string to remove a role.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg87:",,,,,,LibINDY Sprint 9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Sep/17 12:34 AM;slafranca;I found this while running the acceptance test script _test_scenario_09.py;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve error reporting when deleting pool config and wallets if they don't exist,IS-350,20862,,Improvement,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,srottem,srottem,16/Sep/17 4:45 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,Community,,,,"When attempting to delete a pool config or a wallet and no entity matching the specified name exists a CommonIOError (114) error code is returned which is not very informative and does not allow for fine grained error handling.

Ideally a specific error (e.g. PoolLedgerConfigDoesNotExist, WalletDoesNotExist) would be implemented for each of these cases.",,,,,,,,,,,,,,,,,,,,,IS-531,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwwef:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,srottem,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Only 8 of 88 anoncreds cargo tests pass,IS-351,20897,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,sklump,sklump,19/Sep/17 10:11 PM,21/Sep/17 9:50 PM,28/Oct/23 2:49 AM,21/Sep/17 9:49 PM,,,,,,,,0,,,,,"Up to and including git commit 679a61d1a858aff2f8c1d4a6468ce3690abb518b (Tue Sep 19 15:24:28 2017 +0300)

{{With}}
*{{$ docker ps}}*
output


{{CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES}}
{{a6505ac3ed0e indy_pool ""/usr/bin/supervisord"" 25 hours ago Up 25 hours 9701-9709/tcp unruffled_mccarthy}}

and docker network {{indy_pool_network}} operating on subnet {{10.0.0.0/8}},

At the prompt, 
 *{{$ cd indy-sdk/libindy}}*
 *{{$ RUST_TEST_THREADS=1 TEST_POOL_IP=10.0.0.2 cargo test --test=anoncreds}}*

yields output as attached, indicating 80 failures and 8 passes.","Ubuntu 16.04 desktop
Docker version 17.06.2-ce, build cec0b72
indy-sdk 1.0.0, as of commit 679a61d1a858aff2f8c1d4a6468ce3690abb518b (but has been present for at least a couple of weeks prior)",,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Sep/17 10:01 PM;sklump;cargo-test-anoncreds.txt;https://jira.hyperledger.org/secure/attachment/12125/cargo-test-anoncreds.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg8f:",,,,,,LibINDY Sprint 9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,sklump,,,,,,,,,,"19/Sep/17 10:26 PM;gudkov;I checked https://github.com/hyperledger/indy-sdk/commit/679a61d1a858aff2f8c1d4a6468ce3690abb518b and looks like this commit contains only changes to .Net wrapper and can't cause any changes in libindy. 

Can it be related to some changes in your environment? CI performs builds for each commit on all supported platforms and these tests are green.;;;","20/Sep/17 3:40 AM;sklump;It is not related to the commit 679a61d as such, but the 80 of 88 anoncreds tests have failed going back for a couple of weeks, at least on Ubuntu 16.04.

I will hose everything down and rebuild from scratch, first thing tomorrow. If the CI tests pass, that surely points to some problem with my environment.;;;","20/Sep/17 7:40 PM;gudkov;[~sklump]

I analyzed the logs and was able to reproduce the problem on my side. The problem is caused by a timeout that tests used to waiting for anoncreds calls. Could you change the file tests/utils/anoncreds.rs by replacing all strings ""TimeoutUtils::short_timeout()"" with ""TimeoutUtils::medium_timeout()"" and check that it fixes tests for you?



;;;","20/Sep/17 11:06 PM;sklump;{noformat}
test result: ok. 88 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out{noformat}
 

Thanks! That fixes everything!;;;","21/Sep/17 9:50 PM;gudkov;Correspondent changes are already merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
[Anoncreds] Roots of an equation may be calculated incorrecttly when preparing primary proof,IS-352,20965,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ashcherbakov,ashcherbakov,23/Sep/17 1:14 AM,28/Sep/17 10:49 PM,28/Oct/23 2:49 AM,28/Sep/17 10:49 PM,,,,,,,,0,,,,,"For proof generation under Section 6 for the Validity Proof:

Part 2b says Let ∆←_mj_− _zj_ and find (possibly by exhaustive search) u1,u2,u3,u4 such that
∆ = (u1)^2+ (u2)^2+ (u3)^2+ (u4)^2;

The code doesn't compute properly for some cases and it should always sum to ∆

Example of ∆ which fails: 107, 112, 115, 119, 253, 1000, 3000
Find the correct implementation attached.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Sep/17 1:16 AM;ashcherbakov;find_roots.py;https://jira.hyperledger.org/secure/attachment/12140/find_roots.py",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhcf:",,,,,,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move binary artifacts to Sovrin repo,IS-353,20994,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,26/Sep/17 6:39 PM,28/Sep/17 10:41 PM,28/Oct/23 2:49 AM,28/Sep/17 10:41 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhd3:",,,,,,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: Switch to BN254 Curve for BLS and Pairing,IS-354,20996,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,26/Sep/17 10:19 PM,27/Sep/17 8:13 PM,28/Oct/23 2:49 AM,27/Sep/17 8:13 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzyg8n:",,,,,,LibINDY Sprint 9,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot open pool ledger using libindy,IS-355,21004,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,slafranca,slafranca,27/Sep/17 2:11 AM,03/Oct/17 7:16 AM,28/Oct/23 2:49 AM,03/Oct/17 7:16 AM,,,,,,,,0,,,,,"I used test script _test_scenario_09.py and _test_scenario_11.py.  When the command to open the ledger is called (pool_handle = await pool.open_pool_ledger(""testpool"", None)) I get an error that says ""Ledger merkle tree doesn\'t acceptable for current tree."".   Aside from the fact that the error doesn't make any sense, the process ends and the test fails.  I am unable to use libindy for anything.

I attached a screenshot of the output from pycharm.

I installed: 
* libindy_1.0.0_amd64.deb version 1.00-194 from master (https://repo.evernym.com/libindy_crypto/ubuntu/master/)
* libindy-crypto_0.1.2_amd64.dep from stable (https://repo.evernym.com/libindy_crypto/ubuntu/master/)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Sep/17 2:07 AM;slafranca;Screen Shot 2017-09-26 at 11.07.09 AM.png;https://jira.hyperledger.org/secure/attachment/12145/Screen+Shot+2017-09-26+at+11.07.09+AM.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg8v:",,,,,,LibINDY Sprint 9,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,,,,,,,,,,,"29/Sep/17 3:29 AM;ashcherbakov;[~slafranca] [~krw910]
Please try using libindy-crypto=1.0.6
Elliptic curve was changed, so the latest indy-node and libindy will be incompatible with old indy-crypto;;;","03/Oct/17 7:16 AM;slafranca;Tested with libindy_crypto 1.0.6 and a new libindy build.  I can run both test scenarios now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: Design new approach based on libsodium authenticated encryption,IS-356,21015,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,27/Sep/17 7:35 PM,21/Oct/17 2:43 AM,28/Oct/23 2:49 AM,19/Oct/17 10:27 PM,,,,,,,,0,,,,,"We need to design support of new approach for Agent 2 Agent communication in libindy. See the following documents:

> Note the section in this doc about communication:

https://docs.google.com/document/d/1wJgT89gGvLi62PDfIpk6CXs0SJcb5jnCrx1txJdffqI/edit

> This doc is mostly about message formats, but it does mention some conceptual stuff as well:

https://docs.google.com/document/d/1TOwSCR_nrdUampQjkG4Yxf2TU9JioCyjvoi5xVxwGdk/edit

> Here is an updated version of the sequence diagrams that I sent. This version has more formal notation in it, and has been reviewed more closely by Jason.

https://github.com/evernym/design/tree/master/CXS",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-95,,,,,,,,,,"1|hzyk33:",,,,,,LibINDY Sprint 10,LibINDY 17.21,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,devin-fisher,gudkov,sergey.minaev,,,,,,,,,"19/Oct/17 6:58 PM;sergey.minaev;https://docs.google.com/document/d/1r5lz4UkE77zW1ujWunJYq2s8E0ywMuO6blgVZKj3Zvo/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: Implement new approach based on libsodium authenticated encryption,IS-357,21016,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,27/Sep/17 7:35 PM,27/Oct/17 5:37 PM,28/Oct/23 2:49 AM,27/Oct/17 5:37 PM,,,,,,,,0,,,,,"Implement support of new approach for Agent 2 Agent communication in libindy. 

The corresponded design task is IS-356

https://docs.google.com/document/d/1r5lz4UkE77zW1ujWunJYq2s8E0ywMuO6blgVZKj3Zvo/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-95,,,,,,,,,,"1|hzwzev:",,,,,,LibINDY Sprint 10,LibINDY 17.21,,,,,,,,,,,,,,,,,,,,,,,,7.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Anoncreds] It's possible to change revealed attributes and still get a correct proof,IS-358,21024,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ashcherbakov,ashcherbakov,28/Sep/17 1:22 AM,02/Oct/17 8:02 PM,28/Oct/23 2:49 AM,02/Oct/17 8:02 PM,,,,,,,,0,,,,,"If one adds the following (just before cleanup) to `wrappers/python/tests/demo/test_anoncreds.py`

{code}
# 9a. Verify refuse to verify anti-proof
    anti_proof = proof  # shallow copy is fine here: not using proof again except as anti-proof
    eve = 'Eve'
    anti_proof['requested_proof']['revealed_attrs']['attr1_uuid'][1] = eve;
    anti_proof['requested_proof']['revealed_attrs']['attr1_uuid'][2] = '1139481716457488690172217916278103336';
    assert eve == proof['requested_proof']['revealed_attrs']['attr1_uuid'][1]
    anti_proof_json = json.dumps(anti_proof)
    print('==== anti-proof: {}'.format(json.dumps(anti_proof, indent=4)))

    rc_anti_proof = await anoncreds.verifier_verify_proof(
        proof_req_json,
        anti_proof_json,
        schemas_json,
        claim_defs_json,
        revoc_regs_json)

    assert (rc_anti_proof == False)
{code}

mimicking a man in the middle fiddling with revealed attributes in a proof. 
It's expected to get `False` back from the `anoncreds.verifier_verify_proof()` call. However, the call returns `True`.

We need to fix it. 

Similar changes in indy-anoncreds return False (there is no issue there).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhcn:",,,,,,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prover.rs::init_ge_proof() hangs on larger numbers,IS-359,21028,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sklump,sklump,28/Sep/17 2:03 AM,02/Oct/17 8:02 PM,28/Oct/23 2:49 AM,02/Oct/17 8:02 PM,,,,,,,,0,indy-sdk,,,,"With a large (but still i32) number, the four-square partition comes back nice and quick now (with PR 277 in place), but the [prover.rs::_Init_ge_proof()|http://prover.rs_init_ge_proof()/] routine hangs shortly thereafter on this piece:

 
{noformat}
let t_delta = pk.z
   .exp(&BigNumber::from_dec(&delta.to_string())?, Some(&mut ctx))?
   .mul(
  &pk.s.mod_exp(&r_delta, &pk.n, Some(&mut ctx))?,
  Some(&mut ctx)
   )?
  .modulus(&pk.n, Some(&mut ctx))?; 
{noformat}
We can't say that should be a surprise, once we are dealing with larger numbers. The {{pk}} components in the operation above are on the order of 10^618, and {{r_delta}} about 10^641. With delta > {{100000}} or so, this statement churns for *several hours*, then throws

{{ERROR|indy::errors::indy | src/errors/indy.rs:63 | Casting error to ErrorCode: Invalid structure: An OpenSSL error stack}}","Ubuntu 16.04 VM, 2 GB memory, 16 GB disk",,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhcv:",,,,,,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sklump,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
indy-crypto must be published to a separate deb repo,IS-360,21078,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,ashcherbakov,ashcherbakov,29/Sep/17 6:41 PM,07/Dec/17 11:11 PM,28/Oct/23 2:49 AM,07/Dec/17 6:41 PM,,,,,,,,0,,,,,"- As of now, indy-crypto is published to the same deb repo as indy-node
- Since we use a specific version of indy-crypto in indy-node, and apt can use the latest version only for dependencies, indy-node build will fail once a new indy-crypto is published

As a solution, we can use a separate repo for indy-crypto (both libindy-crypto and python3-indy-crypto).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-882,INDY-950,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq47:",,,,,,LibINDY Sprint 10,LibINDY 17.21,LibINDY 17.22,LibINDY 17.23,LibINDY 17.24,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,ashcherbakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pairwise: Create new methods in signus for better pairwise support,IS-362,21085,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ashcherbakov,ashcherbakov,29/Sep/17 11:27 PM,06/Oct/17 6:19 PM,28/Oct/23 2:49 AM,06/Oct/17 6:19 PM,,,,,,,,0,,,,,"We need to implement the following API methods in signus API to better support pairwise connections:
# *indy_pairwise_init*(command_handle: i32,
                                            wallet_handle: i32,
                                            my_did_json: *const c_char,
                                            their_did_json: *const c_char,
                                            cb: Option<extern fn(xcommand_handle: i32, err: ErrorCode,
                                                                 my_did: *const c_char,
                                                                 my_verkey: *const c_char,
                                                                 my_pk: *const c_char)>) -> ErrorCode 
The method will create and store my DID for their DID (call existing method); store their DID (call existing method); and store a map of my-to-their DIDs (pairwise).
Everything is stored in the wallet since it's a point of correlation and must be protected.
# *indy_pairwise_set_metadata*(did, metadata)....
The method saved some data in the Wallet for a given DID (it can be some metadata for example). We save it in the wallet to avoid correlation.
# *indy_pairwise_get_metadata*(did) -> metadata
The method gets some metadata from the Wallet for a given DID 
# *indy_pairwise_sign* (command_handle: i32,
                         wallet_handle: i32,
                         their_did: *const c_char,
                         message_raw: *const u8,
                         message_len: u32,
                         cb: Option<extern fn(xcommand_handle: i32, err: ErrorCode,
                                                          signature_raw: *const u8, signature_len: u32)>) -> ErrorCode {
The method will find my DID associated with their DID (pairwise; see indy_init_pairwise_dids), and sign the message (call existing sign method)
# *indy_pairwise_verify*
# Most pribable we need the method to check that pairwise exists *indy_pairwise_exists*",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhdb:",,,,,,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,anastasia.tarasova,ashcherbakov,gudkov,,,,,,,,,"29/Sep/17 11:38 PM;gudkov;Alternatively, we can just provide the wallet_set and wallet_get methods that will allow storing any data to the wallet. In this case, pairwise logic can be implemented on the application level. ;;;","29/Sep/17 11:51 PM;gudkov;One more alternative is to provide only helper methods to manage pairwise metadata and avoid sign/verify/create_my_did methods dupplication. API can be like this:
 # *indy_pairwise_exists(their_did)*
 # *indy_pairwise_create(their_did, my_did)*
 # *indy_pairwise_list()***
 # *indy_pairwise_get_my_did(their_did)*
 # *indy_pairwise_set_metadata(their_did,* *metadata**)*
 # *indy_pairwise_get_metadata(their_did,* *metadata**)*;;;","30/Sep/17 12:11 AM;gudkov;[~danielhardman] [~nage] Could you check this ticket and provide comments?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
.Net Wrapper: Fix State Proof support related regressions in tests,IS-363,21204,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,02/Oct/17 6:27 PM,27/Oct/17 5:38 PM,28/Oct/23 2:49 AM,27/Oct/17 5:38 PM,,,,,,,,0,,,,,The latest changes related to StateProofs most probably caused a regression in .Net wrapper tests. Genesis txns data must be changed and also some assumptions in tests are wrong now. We need to handle this. Corresponded fixes to java and python wrapper you can find here: [https://github.com/hyperledger/indy-sdk/pull/285],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-235,,,,,,,,,,"1|hzyhdj:",,,,,,LibINDY Sprint 10,LibINDY 17.21,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,srottem,,,,,,,,,,"02/Oct/17 9:59 PM;srottem;Fixed in https://github.com/hyperledger/indy-sdk/pull/289.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS Wrapper: Fix State Proof related regressions in iOS wrapper tests,IS-364,21205,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,gudkov,gudkov,02/Oct/17 6:29 PM,02/Nov/17 12:26 AM,28/Oct/23 2:49 AM,31/Oct/17 11:53 PM,,,,,,,,0,,,,,The latest changes related to StateProofs most probably caused a regression in .Net wrapper tests. Genesis txns data must be changed and also some assumptions in tests are wrong now. We need to handle this. Corresponded fixes to java and python wrapper you can find here: [https://github.com/hyperledger/indy-sdk/pull/285],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-68,,,,,,,,,,"1|hzylef:",,,,,,LibINDY Sprint 10,LibINDY 17.21,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ios: Keys rotation support,IS-365,21206,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,anastasia.tarasova,Artemkaaas,Artemkaaas,02/Oct/17 6:41 PM,17/Oct/17 9:21 PM,28/Oct/23 2:49 AM,17/Oct/17 9:21 PM,,,,,,,,0,,,,,Suppor changes from this PR: https://github.com/hyperledger/indy-sdk/pull/288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhx3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
State proofs: compatibility with nodes without state proofs should be updated,IS-366,21219,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,02/Oct/17 10:29 PM,23/Nov/17 11:11 PM,28/Oct/23 2:49 AM,23/Nov/17 8:09 PM,,,,,,,,0,,,,,"* check only data field in get transactions for consensus
* *remove returned errors from process reply method in pool/mod.rs* done in scope of IS-390",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymrj:",,,,,,LibINDY 17.21,LibINDY 17.22,LibINDY 17.23,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cargo tests fail,IS-367,21281,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sklump,sklump,04/Oct/17 8:12 PM,05/Oct/17 11:07 PM,28/Oct/23 2:49 AM,05/Oct/17 11:06 PM,,,,,,,,0,quality,,,,"As of 2017-10-02, the cargo tests for indy-sdk don't pass anymore:
*{{$ RUST_TEST_THREADS=1 TEST_POOL_IP=10.0.0.2 cargo test --test agent}}*
{{
...}}
{{test medium_cases::indy_agent_send::indy_agent_send_works_for_closed_listener_incoming_connection ... INFO|command_executor | src/commands/mod.rs:99 | PoolCommand command received}}
{{ INFO|pool_command_executor | src/commands/pool.rs:54 | Create command received}}
{{ INFO|command_executor | src/commands/mod.rs:99 | PoolCommand command received}}
{{ INFO|pool_command_executor | src/commands/pool.rs:62 | Open command received}}
{{ERROR|indy::errors::indy | src/errors/indy.rs:63 | Casting error to ErrorCode: Invalid Handle: Pool with same name already opened}}
{{FAILED}}
{{...}}
{{test result: FAILED. 39 passed; 17 failed; 1 ignored; 0 measured; 0 filtered out}}
{{
}}
I get 17 of these 'Invalid Handle: Pool with same name already opened' failures. Could this be some kind of timing issue?","Ubuntu 16.04 VM on 2GB memory
Docker 17.09ce",,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Oct/17 9:12 PM;sklump;cargo-trace-test-agent.log;https://jira.hyperledger.org/secure/attachment/12204/cargo-trace-test-agent.log","05/Oct/17 10:03 PM;sergey.minaev;pool_transactions_sandbox_genesis;https://jira.hyperledger.org/secure/attachment/12205/pool_transactions_sandbox_genesis",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhdr:",,,,,,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,sklump,,,,,,,,,,"05/Oct/17 7:40 PM;sergey.minaev;[~sklump] the log in description doesn't contains any helpful information, it seems like cascade error. So, could you attach full log with log level _trace_ and specify nodes pool version, please.;;;","05/Oct/17 9:19 PM;sklump;[^cargo-trace-test-agent.log]

My pleasure. Command

{{$ RUST_LOG=trace RUST_BACKTRACE=full RUST_TEST_THREADS=1 TEST_POOL_IP=10.0.0.2 cargo test --test agent 2>&1 | tee /tmp/cargo-trace-test-agent.log}}

produces the attached log file.

Docker version is
 {{Docker version 17.09.0-ce, build afdb6d4}}

I'm not sure what the nodes pool version is – but {{ci/ubuntu.dockerfile}} has content:

ARG indy_plenum_ver=1.1.136
 ARG indy_anoncreds_ver=1.0.25
 ARG indy_node_ver=1.1.149
 ARG python3_indy_crypto_ver=0.1.6
 ARG indy_crypto_ver=0.1.6



If that doesn't help, please advise how to get the nodes pool version?;;;","05/Oct/17 9:26 PM;sergey.minaev;[~sklump] Thank for full info!
Minimal info is _indy_node_ver_ , but you provide all versions from docker file arguments, and as I understand, you don't change anyone from it.
In full log there is actual reason of the all errors:
{code:java}
ERROR|indy::services::pool          |           src/services/pool/mod.rs:693 | Pool worker thread finished with error CommonError(InvalidState(""Ledger merkle tree doesn\'t acceptable for current tree.""))
{code}
So, indy-sdk can connect to nodes, but can't verify it. Let's continue in RocketChat and after it will publish our investigation result.
;;;","05/Oct/17 10:51 PM;sklump;The solution is to docker-(re)build the indy-pool node from from \{\{ci/indy-pool.dockerfile}}.

Please close the ticket, thanks.;;;","05/Oct/17 11:07 PM;sergey.minaev;Older indy-pool doesn't applicable for latest one: bls keys are changed genesis transactions for tests
Won't fix;;;",,,,,,,,,,,,,,,,,,,,,,,,,
.Net: Keys rotation support,IS-368,21283,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,04/Oct/17 10:30 PM,18/Jan/18 7:20 AM,28/Oct/23 2:49 AM,18/Jan/18 7:20 AM,,,,,,,,0,,,,,Suppor changes from this PR: [https://github.com/hyperledger/indy-sdk/pull/288],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-235,,,,,,,,,,"1|hzyhxb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,srottem,,,,,,,,,,"08/Oct/17 6:14 PM;srottem;Done - see PR: https://github.com/hyperledger/indy-sdk/pull/301;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cargo build is failing for MacOS,IS-369,21289,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,04/Oct/17 11:25 PM,09/Nov/17 4:09 PM,28/Oct/23 2:49 AM,09/Nov/17 4:09 PM,,,,,,,,0,,,,,"On latest master branch we have the following error on MacOS:

error: linking with {{cc}} failed: exit code: 1

note: Undefined symbols for architecture x86_64:
 ""_je_malloc_usable_size"", referenced from:
 heapsize::heap_size_of_impl::hd63dce4a1e7de8ce in libheapsize-81e9311798c7d6fb.rlib(heapsize-81e9311798c7d6fb.0.o)
 ld: symbol(s) not found for architecture x86_64
 clang: error: linker command failed with exit code 1 (use -v to see invocation)

It is related to introduction new state proof related dependencies.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-60,,,,,,,,,,"1|hzylfz:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,austin,faisal00813,gudkov,mgbailey,sergey.minaev,,,,,,,"17/Oct/17 6:24 AM;mgbailey;[~SeanBohan_Sovrin], I have received an inquiry regarding this.  Do you have an estimate on when it will be fixed?;;;","17/Oct/17 10:34 PM;sergey.minaev;Note: it's not blocker for developing on MacOS for iOS. (_cargo build_ isn't used for this case);;;","03/Nov/17 10:34 PM;faisal00813;Unable to build it on OSX Sierra.
This is a blocker for development on OSX machines.
[~nage] Can this issue be escalated as this build also has sealed box encryption feature which is needed for upcoming sprint.
[~avkrishnan] FYI
;;;","09/Nov/17 1:30 AM;sergey.minaev;[~faisal00813] Could you please verify, that the latest master can be built on MacOS? We have just merged hotfix.;;;","09/Nov/17 1:46 AM;faisal00813;Build failed
Steps followed:
cargo clean
cargo build
rust version 1.21.0

 error: linking with `cc` failed: exit code: 1
  |
  = note: ""cc"" ""-m64"" ""-L"" ""/Users/abdussami/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib"" ""/Users/abdussami/Work/indy-sdk/libindy/target/debug/deps/indy.0.o"" ""-o"" ""/Users/abdussami/Work/indy-sdk/libindy/target/debug/deps/libindy.dylib"" ""/Users/abdussami/Work/indy-sdk/libindy/target/debug/deps/indy.crate.metadata.o"" ""/Users/abdussami/Work/indy-sdk/libindy/target/debug/deps/indy.crate.allocator.o"" ""-Wl,-dead_strip"" ""-nodefaultlibs"" ""-L"" ""/Users/abdussami/Work/indy-sdk/libindy/target/debug/deps"" ""-L"" ""/usr/local/opt/openssl@1.1/lib"" ""-L"" ""/usr/local/Cellar/libsodium/1.0.12/lib"" ""-L"" ""/Users/abdussami/Work/indy-sdk/libindy/target/debug/build/zmq-pw-sys-0112fecc5aaf8b1a/out/pkg/lib"" ""-L"" ""/Users/abdussami/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/librmp_serde-20b1e3b4aba864c2.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libbase64-b6597d1935c85944.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libopenssl-fc837aa2243a6afd.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libserde_json-5ccc617dc6811ccd.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libsodiumoxide-1cdc0f7f784b6550.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/liblibsodium_sys-46285326e005684b.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libhex-ed32fa37440754d5.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libint_traits-93a7181903304770.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libzmq_pw-1d1147750fe8569d.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libzmq_pw_sys-f14d01c340199597.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libdtoa-ae9298bb528ded79.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libopenssl_sys-f9ab11028065d226.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/librlp-f12d71d5a261981d.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libelastic_array-727e7de5178d522e.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libethcore_bigint-66de23a816b95c0f.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libbigint-b279fdb946eed92c.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libheapsize-60620a53a8092dd7.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/librusqlite-05d7f6955f527df9.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libtime-92efbbde30f4a72a.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libbitflags-2058c092b0790fa0.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/liblru_cache-35c422fb151a6402.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/liblinked_hash_map-4162af34e0c581ca.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/liblibsqlite3_sys-c7e5a7b243b5c8a9.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libsafemem-e04be0ee5e1a5fbb.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libitoa-19c3b25ea3953433.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libforeign_types-91bd80bfa1d060d7.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/librust_base58-e4d588350f20ac31.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libnum-b419165156c7bb70.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libnum_rational-0d6bc97cf729d47f.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libnum_complex-3a23af1f6c42b222.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libnum_iter-51fcea3ccd095b2e.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libnum_bigint-c28a23bb17a11d14.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libnum_integer-dcaeb61bd5e8bcbb.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libindy_crypto-a4fdbe9131ca5cef.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libsha2-21c114838c88874b.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libfake_simd-5b5487051a4d3fa8.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libenv_logger-dd8c71b23e66a2e8.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/liblog-d5e360133802934c.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libamcl-6cb50d6a064351f2.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/librmp-d697f1a337144180.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libnum_traits-48c3cf477b7a0536.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libsha3-931833bc5c88cead.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libblock_buffer-5828506d081e7865.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libdigest-fbae1a0089388aca.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libgeneric_array-bda11e9e75b89bd4.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libtypenum-c3426a9d9dbe9da6.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libbyte_tools-d303bf3ee8db3e99.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libbyteorder-39eaa68e8d1bc140.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libserde-1a11212bf44e2d52.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libbitflags-05a76aa5d1c1cf07.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libserde-fd5fc2c9d121670a.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/librustc_serialize-a1a8821bbb1e0027.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libregex-58525377298460f1.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libutf8_ranges-3d4aab68db51c985.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libthread_local-4e0cd51dca21eab7.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/liblazy_static-08b5af6ef5ff92cf.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libunreachable-66b4f040a5adc8eb.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libvoid-cd98e6f12047f584.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libaho_corasick-49ac588d74056ee1.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libmemchr-bed5d4be193503a0.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libregex_syntax-20e1a74abf21916b.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libuuid-be0c69ae5c05eb83.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/librand-b1786b039aac5275.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/liblibc-d926ec0382b04628.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libstd-a4cb6a5cdd439628.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libpanic_unwind-518d4b2a103f523e.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libunwind-ae44887349ff2666.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/liballoc_system-232b33d68f8d8793.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/liblibc-547714683d755c8a.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/liballoc-ee8c941dfe26cb03.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libstd_unicode-ed28cc142b5072c0.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/librand-d0d8801a35685ad6.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libnodrop-d0dd50a44a80471d.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libodds-3ce601f7a7548528.rlib"" ""-Wl,-force_load,/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libcore-2e89074855638f2b.rlib"" ""/var/folders/nx/p048llsj62x903qcbrm9ybdr0000gn/T/rustc.tl6L6vZ1N54j/libcompiler_builtins-3cf04f5feabf9eee.rlib"" ""-l"" ""sodium"" ""-l"" ""zmq-pw"" ""-l"" ""c++"" ""-l"" ""ssl"" ""-l"" ""crypto"" ""-l"" ""sqlite3"" ""-l"" ""System"" ""-l"" ""resolv"" ""-l"" ""pthread"" ""-l"" ""c"" ""-l"" ""m"" ""-dynamiclib"" ""-Wl,-dylib""
  = note: Undefined symbols for architecture x86_64:
            ""_je_malloc_usable_size"", referenced from:
                heapsize::heap_size_of_impl::h5d337c6abea79a4c in libheapsize-60620a53a8092dd7.rlib(heapsize-60620a53a8092dd7.0.o)
          ld: symbol(s) not found for architecture x86_64
          clang: error: linker command failed with exit code 1 (use -v to see invocation)


error: aborting due to previous error

error: Could not compile `indy`.;;;","09/Nov/17 3:31 AM;gudkov;[~faisal00813]

Seems you are trying on old commit. There is no dependecy to heepsize on actual version.

I just tried it on my home mac-mini and it compiled without any problem.;;;","09/Nov/17 5:14 AM;sergey.minaev;Or may be `cargo update` missed;;;","09/Nov/17 12:39 PM;faisal00813;It compiled. 
Thanks guys.;;;",,,,,,,,,,,,,,,,,,,,,,
Signus Api: Anonymous encryption,IS-370,21340,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,06/Oct/17 6:23 PM,12/Oct/17 1:47 PM,28/Oct/23 2:49 AM,12/Oct/17 1:47 PM,,,,,,,,0,,,,,Implement new Encrypt/Decrypt API calls for Anonymous encryption.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhc7:",,,,,,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support protocolVersion for Requests to Node,IS-371,21342,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,ashcherbakov,ashcherbakov,06/Oct/17 8:14 PM,10/Oct/17 5:31 PM,28/Oct/23 2:49 AM,10/Oct/17 5:31 PM,,,,,,,,0,,,,,"There is a new optional field 'protocolNode' (starting from node 1.1.153).
- The minimal version for state proofs support is 1 
- Each Request needs to send it if it wants to get state proofs (state proofs are not received otherwise).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzfr:",,,,,,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,ashcherbakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Signus API: Support of abbreviated key form in signus_store_their_did,IS-372,21709,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,09/Oct/17 6:47 PM,11/Oct/17 1:48 PM,28/Oct/23 2:49 AM,11/Oct/17 1:48 PM,,,,,,,,0,,,,,"signus_store_their_did requires now verkey in full form. It  complicates it usage when user gets verkey in abbreviated form from ledger. 

I suggest the following:
* Allow to pass abbreviated verkey
* Convert it to full form
* Store full verkey in the wallet",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-69,,,,,,,,,,"1|hzyhdz:",,,,,,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Default Wallets To Use SQLCipher,IS-373,21734,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MikeLodder,MikeLodder,MikeLodder,10/Oct/17 2:51 AM,17/Nov/17 8:08 PM,28/Oct/23 2:49 AM,17/Nov/17 3:10 AM,,,,,,,25/Oct/17 12:00 AM,0,,,,,"Replace SQLite with SQLCipher.

First pass will use password encrypted key",,"Created git repo for create of rusqlcipher;27/Oct/17 12:59 AM;MikeLodder;144000",201600,0,144000,71%,201600,0,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymrr:",,,,,,LibINDY 17.21,LibINDY 17.22,LibINDY 17.23,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,MikeLodder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support proof for non-existing value,IS-374,21747,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,10/Oct/17 5:32 PM,12/Oct/17 5:39 PM,28/Oct/23 2:49 AM,12/Oct/17 5:39 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-331,,,,,,,,,,"1|hzyhe7:",,,,,,LibINDY Sprint 10,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
indy_agent_close_listener not releasing endpoint,IS-375,21755,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,srottem,srottem,10/Oct/17 10:14 PM,21/Oct/17 2:43 AM,28/Oct/23 2:49 AM,19/Oct/17 10:28 PM,,,,,,,,0,,,,,When the indy_agent_close_listener function is called the endpoint associated with the provided handle does not become available for re-use.  A subsequent call to indy_agent_listen specifying the same endpoint will result in a CommonIOError.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyk3b:",,,,,,LibINDY 17.21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,krw910,srottem,,,,,,,,,"14/Oct/17 5:59 AM;krw910;[~gudkov] Is this resolved with the new agent to agent communications?;;;","20/Oct/17 12:00 AM;gudkov;[~srottem] [~krw910] 

We plan to remove current Agent API based on proprietary transport during this sprint and replace it with simple helpers: prep_msg/parse_msg that will allows to created encrypted and authenticated messages over ony transport.

There is no reason to fix this/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Key Management of SQLCipher Wallet keys,IS-376,21761,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MikeLodder,MikeLodder,MikeLodder,11/Oct/17 7:02 AM,17/Nov/17 8:08 PM,28/Oct/23 2:49 AM,17/Nov/17 3:10 AM,,,,,,,,0,,,,,Allow other key types and key rotation for Wallets,,,201600,201600,,0%,201600,201600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymrz:",,,,,,LibINDY 17.21,LibINDY 17.22,LibINDY 17.23,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,MikeLodder,,,,,,,,,,"08/Nov/17 11:08 PM;gudkov;[~MikeLodder] Are you sure it is implemented? I don't see corresponded changes in provided PR.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade ciphers in SQLCipher,IS-377,21762,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,MikeLodder,MikeLodder,MikeLodder,11/Oct/17 7:04 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"Change SQLCipher to use CHACHA20-POLY1305 and Argon2 instead of

AES-CBC with HMAC-SHA1 and PBKDF2.",,,288000,288000,,0%,288000,288000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3q7:",,,,,,LibINDY 17.21,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,MikeLodder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
indy_set_pairwise_metadata does not allow null or empty values for metadata,IS-378,21772,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,srottem,srottem,11/Oct/17 9:08 PM,27/Oct/17 3:14 PM,28/Oct/23 2:49 AM,27/Oct/17 3:14 PM,,,,,,,,0,,,,,"A pairwise created using indy_create_pairwise allows a null value which results in a record that does not contain the metadata key in the JSON produced by indy_get_pairwise. If a value is set into the metadata either when calling indy_create_pairwise or indy_set_pairwise_metadata it is not subsenquently possible to remove the value (e.g. set it to null or an empty string) by calling indy_set_pairwise_metadata as the method throws a CommonInvalidParameter4 error.

If indy_create_pairwise allows for null metadata should it not also be possible to update the metadata for a record to null using indy_set_pairwise_metadata ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyk3r:",,,,,,LibINDY 17.21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,srottem,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
anoncreds - can only prove against latest claim request,IS-379,21773,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,nage,sklump,sklump,11/Oct/17 10:09 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,1,,,,,"I think I've found some extraordinarily weird behaviour in anoncreds.

In {{.../tests/demo/test_anoncreds.py}}, I:
 (1) build a claim offer
 (2) get a claim request
 (3) create and store a claim into a wallet for Alex (M, 175cm, 28)
 (4) get claims for proof request from the wallet
 (5) pick out the claim uuid from the claim at index [0] – by construction, it's the only claim in the wallet
 (6) create proof
 (7) verify the proof.
 All is well.

If instead, I write {{.../demo/test_anonx.py}} from {{test_anoncreds.py}} to:
 (1) build a claim offer
 (2) get **TWO** claim requests
 (3) create and store a claim into a wallet for Alex (M, 175cm, 28) against the first claim request
 (4) get claims for proof request from the wallet
 (5) pick out the claim uuid from the claim matching Alex's (encoded) name value
 (6) create proof
 (7) verify the proof

From python virtual environment py35 operating version 3.5, run the new unit test code:
{noformat}
(py35) $ docker rm $(docker stop $(docker ps -aq))
(py35) $ docker run -d --ip=""10.0.0.2"" --net=indy_pool_network indy_pool
(py35) $ cd indy-sdk/wrappers/python/tests
(py35) $ RUST_LOG=trace RUST_BACKTRACE=full RUST_TEST_THREADS=1 LD_LIBRARY_PATH=/home/sklump/indy/indy-sdk/libindy/target/debug TEST_POOL_IP=10.0.0.2 pytest -s demo/test_anonx.py{noformat}
The proof does not verify!

Attached:
 [^test_anonx.py] (code)
 [^test_anonx.log] (output)","Ubuntu 16.04

indy-sdk 1.0.0

docker 17.09ce",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Oct/17 10:08 PM;sklump;test_anonx.log;https://jira.hyperledger.org/secure/attachment/12410/test_anonx.log","11/Oct/17 10:08 PM;sklump;test_anonx.py;https://jira.hyperledger.org/secure/attachment/12411/test_anonx.py",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyj4f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,darrell.odonnell,sklump,,,,,,,,,,"11/Oct/17 10:16 PM;sklump;Note that if instead, the process creates and stores the claim against the second claim request, the proof verifies (i.e., line 61,
{noformat}
... = await anoncreds.issuer_create_claim(wallet_handle, claim_req_json[1], claim_json, -1){noformat}
instead of {{claim_req_json[0]}}

I can't say at present whether the magic correct claim request is arbitrary, time-based, or perhaps I need a wallet for every claim req?;;;","13/Oct/17 12:01 AM;sklump;The problem is that I had two separate claim requests in the same prover wallet. The correct binding is one claim request object per prover wallet; all claims from that prover (wallet) against a (schema, issuer_did) pair must refer to that claim request.

Kindly close the issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - Design,IS-380,21848,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,13/Oct/17 4:27 PM,26/Jul/18 6:12 PM,28/Oct/23 2:49 AM,26/Jul/18 6:12 PM,,,,,,,,1,,,,,"As Indy SDK user I want to have node CLI as a part of Indy SDK.

This story is a about approach definition. I see 2 main options that we need to consider:

1. Implementation of CLI from scratch as native application. Advantages of this approach is simplified packaging on all platforms, less dependencies, simplified CI pipline and possibility to get good-looking code. 
 2. Re-use current python based CLI code base (may be with significant refactoring). This approach can be faster and re-use old interfaces, but but we will need more complex packaging and some fight with current CLI code (2 big flat python files in different repos). Also some ideas of SDK can't be mapped directly to current CLI interfaces.

Also important questions to solve on design phase is migration of wallets created by ol CLI and system testing approach.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzy527:",,,,,,LibINDY 17.21,LibINDY 17.24,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,jamesmonaghan,panickervinod,,,,,,,,,"13/Oct/17 4:41 PM;gudkov;[~ashcherbakov] [~danielhardman]

It would be nice to share our vision.;;;","20/Oct/17 10:55 PM;jamesmonaghan;[~SeanBohan_Sovrin] [~nage] interested in your thoughts here;;;","23/Oct/17 10:41 PM;gudkov;[~nage] [~danielhardman]

The estimation of re-implementation in Rust option can be found in the file: [https://docs.google.com/spreadsheets/d/1wizYZUNXdDvvj6zu7XVVwW03bVTp2mOsZakbLyj7RLM/edit#gid=1218105110]



Very big part here is re-implementation of Demo Agents with new agent communication approach and Getting Started Tutorial commands in new SDK.


|Item|Estimation (h)|
|Design|24|
|Implementation|289|
|Wallets Migration|32|
|Packaging and CI|32|
|Integration tests (automated)|96|
| |Total: 473h|;;;","30/Nov/17 11:32 PM;gudkov;PoA is provided here: [https://docs.google.com/document/d/1wXAPZnI6JW9rjy_XNjcyHF2Yn5sjAiNUxjJwjX6NdwY/edit#heading=h.v84gdc7wsh54]

[~danielhardman] [~nage] [~AlekNS] [~krw910] Could you review this?;;;","19/Dec/17 9:22 PM;gudkov;Design document was merged to indy-sdk repo as https://github.com/hyperledger/indy-sdk/blob/master/doc/cli-design.md;;;","26/Jul/18 6:12 PM;gudkov;This ticket is done;;;",,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - System Tests,IS-381,21849,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,13/Oct/17 4:28 PM,20/Dec/17 11:27 PM,28/Oct/23 2:49 AM,20/Dec/17 10:34 PM,,,,,,,,0,,,,,Implemen system tests procedure for Indy-SDK based CLI based on design provided on IS-380,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyq0n:",,,,,,LibINDY 17.21,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,7.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"15/Dec/17 11:00 PM;Artemkaaas;Implemented in this PR: [https://github.com/hyperledger/indy-sdk/pull/428];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - Debian Packages,IS-382,21850,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,gudkov,gudkov,13/Oct/17 4:28 PM,20/Dec/17 11:27 PM,28/Oct/23 2:49 AM,20/Dec/17 10:28 PM,,,,,,,,0,,,,,Implemen debiam packaging procedure for Indy-SDK based CLI based on design provided on IS-380,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Dec/17 5:55 PM;VladimirWork;install.PNG;https://jira.hyperledger.org/secure/attachment/13922/install.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyq1b:",,,,,,LibINDY 17.21,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,krw910,sergey.minaev,VladimirWork,,,,,,,,"13/Dec/17 11:29 PM;gudkov;Was merged with these changes https://github.com/hyperledger/indy-sdk/pull/395;;;","16/Dec/17 1:29 AM;sergey.minaev;Helpful links:

* README with links to packages and how-to for ubuntu repository:
 https://github.com/jovfer/indy-sdk/blob/master/cli/README.md
* windows packages
 https://repo.sovrin.org/windows/libindy/master/
 https://repo.sovrin.org/windows/indy-cli/master/
* debian packages (for manual install use libindy (not -dev) + indy-cli):
 https://repo.sovrin.org/sdk/lib/apt/xenial/master/;;;","19/Dec/17 5:29 AM;krw910;[~sergey.minaev][~gudkov] I have spoken with the Customer Delivery team and they will not accept the build the way the installation process currently is. The indy-cli package should be the only install they have to do. The package should have a dependency on libindy. They do not want to run two package installs one for libindy and one for indy-cli.

*{color:#d04437}Issue with current indy-cli package{color}*
Currently following the steps in the readme I am unable to install indy-cli. 
*Steps followed after installing libindy*
{code}
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88
sudo add-apt-repository ""deb https://repo.sovrin.org/sdk/deb xenial stable""
sudo apt-get update
sudo apt-get install -y indy-cli
{code}

*{color:#d04437}I get the following error{color}*
{code}
E: Unable to locate package indy-cli
{code};;;","19/Dec/17 5:56 PM;VladimirWork;Package can be installed by the following steps:

bq. apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88
bq. sudo add-apt-repository ""deb https://repo.sovrin.org/sdk/deb xenial *master*""
bq. sudo apt-get update
bq. sudo apt-get install -y indy-cli

because stable branch has no indy-cli package.;;;","19/Dec/17 6:37 PM;sergey.minaev;Stable and RC builds aren't released, testing on *master* version is required.;;;","20/Dec/17 10:28 PM;VladimirWork;Build Info:
indy-cli master

Steps to Validate:
1. apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88
2. sudo add-apt-repository ""deb https://repo.sovrin.org/sdk/deb xenial master""
3. sudo apt-get update
4. sudo apt-get install -y indy-cli
5. indy-cli

Actual Results:
indy-cli is installed and run successfully.;;;",,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - CI/CD Pipelines,IS-383,21851,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,13/Oct/17 4:29 PM,18/Dec/17 11:42 PM,28/Oct/23 2:49 AM,18/Dec/17 9:33 PM,,,,,,,,0,,,,,Implemen CI/CD pipeline for Indy-SDK based CLI based on design provided on IS-380,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyq1z:",,,,,,LibINDY 17.21,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"13/Dec/17 11:29 PM;gudkov;Was merged with these changes https://github.com/hyperledger/indy-sdk/pull/395;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - Windows Packages,IS-384,21852,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,13/Oct/17 4:29 PM,20/Dec/17 11:45 PM,28/Oct/23 2:49 AM,20/Dec/17 11:39 PM,,,,,,,,0,,,,,Implemen windows packaging procedure for Indy-SDK based CLI based on design provided on IS-380,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyq0f:",,,,,,LibINDY 17.21,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,krw910,ozheregelya,sergey.minaev,,,,,,,,"13/Dec/17 11:29 PM;gudkov;Was merged with these changes https://github.com/hyperledger/indy-sdk/pull/395;;;","16/Dec/17 1:33 AM;sergey.minaev;Helpful links:

* README with links to packages and how-to for ubuntu repository:
 https://github.com/jovfer/indy-sdk/blob/master/cli/README.md
* windows packages
 https://repo.sovrin.org/windows/libindy/master/
 https://repo.sovrin.org/windows/indy-cli/master/
* debian packages (for manual install use libindy (not -dev) + indy-cli):
 https://repo.sovrin.org/sdk/lib/apt/xenial/master/;;;","19/Dec/17 5:32 AM;krw910;Blocked due to installation issues in IS-382;;;","19/Dec/17 6:37 PM;sergey.minaev;Stable and RC builds aren't released, testing on *master* version is required.;;;","20/Dec/17 11:38 PM;ozheregelya;Version Info:
indy-cli 1.1.1~284

Steps to Validate:

1. Download archive with indy-cli from [https://repo.sovrin.org/windows/indy-cli/master/] .
2. Unpack archive in windows system.
3. Run the indy-cli.exe

Master version of indy-cli works on windows.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - Support of old-CLI migration,IS-385,21853,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,13/Oct/17 4:51 PM,31/Jan/18 7:22 AM,28/Oct/23 2:49 AM,29/Jan/18 11:42 PM,,,,,,,,0,,,,,Implement support of old-CLI wallets and settings migration  procedure for Indy-SDK based CLI based on design provided on IS-380,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyrlb:",,,,,,LibINDY 17.21,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,Artemkaaas,gudkov,sergey.minaev,zhigunenko.dsr,,,,,,,,"22/Dec/17 11:06 PM;sergey.minaev;[PoA|https://docs.google.com/document/d/1h6w7q306qmP4xUnHqHvDQjJJFsZdNMKzowaH-ZueMMw];;;","22/Dec/17 11:07 PM;sergey.minaev;[Export script PR for indy-node| https://github.com/hyperledger/indy-node/pull/506];;;","27/Dec/17 2:07 PM;Artemkaaas;Implemented for Indy-Cli: [https://github.com/hyperledger/indy-sdk/pull/449]

Implemented for Indy-Node:
[https://github.com/hyperledger/indy-node/pull/506]

 ;;;","30/Dec/17 12:43 AM;Artemkaaas;Changes: 
 -  Implemeted {{indy_old_cli_export_dids *script to export dids from wallet for old python-based Cli*}}. Added did import command for new rust based Cli

PR:
 - Indy-Sdk: [https://github.com/hyperledger/indy-sdk/pull/449]
 - Indy-Node: [https://github.com/hyperledger/indy-node/pull/506]

Version:
 - master build #305;;;","29/Jan/18 11:42 PM;zhigunenko.dsr;*Environment:*
indy-node 1.2.282
indy-cli 1.3.0~337
libindy 1.3.0~337

 

*Steps to Validate:*

1. Try to migrate wallet with:
- broken DID
- normal DID (abbreviated verkey)
- normal DID (full verkey)
- DID with CID
2. Try to migrate wallet to wallet with the same name
3. Try to migrate empty wallet in wallet with some data

*Actual Results:*
*1.*
Did ""CRRNFGCrugWFAxpZfcd2Dy"" has been created with ""~M8U2Px1YyFq4AR5DcPnbqM"" verkey
Indy SDK error occured CommonInvalidStructure while importing DID \{""did"":""979ff43cs"",""seed"":""fbWnWwv4cL+YJq4pxCCRw3qS3JhLQphCFxQRHYzV9Ys=""} *OK for invalid data*
Did ""B8CQJh8KKtZBs17QXhLc6U"" has been created with ""~QVyNtt8xYWetLjxsTgJDeM"" verkey
Did ""V4SGRU86Z58d6TV7PBUe6f"" has been created with ""~CoRER63DVYnWZtK8uAzNbx"" verkey
Did ""JFQq9CgWxScEGuvh2N2wBa"" has been created with ""4KCwovkjr4sPAmiT4n8j5Zz7wC8qVm22bA9Jrhw6Qfat"" verkey
Did ""4QxzWk3ajdnEA37NdNU5Kt4QxzWk3ajdnEA37NdNU5Kt"" has been created with ""2yfmchcCLHPbEY7vj5nsbVUKCcBJzcTz9U79azG2wbh5"" verkey
Did ""UP7PphCiKhWnxWVYP3cMVh"" has been created with ""~DH7EVTepL7oCSYDX1qG5sC"" verkey
DIDs import finished
2. Successful import
3. Successful import (no loss in existed data)

*Additional Information:*

Also checked import from incorrect files (empty, random data);;;",,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: Support new approach based on libsodium authenticated encryption in Java and Python,IS-386,22497,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,19/Oct/17 6:59 PM,27/Oct/17 3:14 PM,28/Oct/23 2:49 AM,27/Oct/17 3:14 PM,,,,,,,,0,,,,,"Implement support of new approach for Agent 2 Agent communication in libindy. 

The corresponded design task is IS-356

https://docs.google.com/document/d/1r5lz4UkE77zW1ujWunJYq2s8E0ywMuO6blgVZKj3Zvo/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-95,,,,,,,,,,"1|hzyk2v:",,,,,,LibINDY Sprint 10,LibINDY 17.21,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: Libindy integration tests new approach based on libsodium authenticated encryption,IS-387,22501,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,19/Oct/17 10:30 PM,27/Oct/17 3:14 PM,28/Oct/23 2:49 AM,27/Oct/17 3:14 PM,,,,,,,,0,,,,,,,,180,180,,0%,180,180,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzfb:",,,,,,LibINDY 17.21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to connect to pool with libindy if genesis file has quotes around port numbers,IS-388,22727,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,krw910,krw910,krw910,21/Oct/17 2:40 AM,01/Nov/17 8:20 PM,28/Oct/23 2:49 AM,27/Oct/17 11:07 PM,,,,,,,,0,,,,,"The genesis transaction that were created using a tool to allow for custom alias names put quotes around the port numbers.

{code}
""client_port"":""9702""
{code}

When you add a new node or use our test script to generate the genesis files there are no quotes around the port numbers.

{code}
""client_port"":9702
{code}

The CLI must be checking and converting the port numbers from a string to an int because it has no problems.

*{color:#d04437}Issue{color}*
Libindy throws a merkle error if the genesis file has port numbers as strings instead of an int. When we remove the quotes Libindy will connect to the pool, but cannot sync because now the pool ledger does not match.

The live pool was setup this way as well. Now we have a mix in the ledger of the genesis nodes with quotes around port numbers and all nodes added after genesis do not.

I have attached the sandbox file for the Sovrin Test Network. When fixing this issue please test your connection using this genesis file.

*NOTE*
We need this fixed as soon as possible because we have customers that need to connect to the STN pool using Libindy.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-390,,,,,IS-389,,,,,,"21/Oct/17 2:39 AM;krw910;pool_transactions_sandbox_genesis;https://jira.hyperledger.org/secure/attachment/12711/pool_transactions_sandbox_genesis",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylfb:",,,,,,LibINDY 17.21,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ckochenower,krw910,mgbailey,sergey.minaev,,,,,,,,"23/Oct/17 6:18 PM;sergey.minaev;Workaround for parsing bad-formatted genesis transaction is ready. 
IS-389 blocks publishing new 1.0.1 rc/stable builds.;;;","23/Oct/17 11:49 PM;sergey.minaev;We add a hot-fix to our stable 1.0.0 and create 1.0.1-RC2 build.;;;","01/Nov/17 12:44 AM;mgbailey;Thanks for doing this quickly, [~sergey.minaev].  Is the patch in the stable deb package?;;;","01/Nov/17 5:39 AM;ckochenower;[~sergey.minaev] - Are the changeset(s) for this issue also on the `master` branch? I don't see any commits under the ""Git Commits"" or ""Git Roll Up"" tabs. I am building both `master` and `rc` and running some manual tests (based on the tests/demo python code) to deduce the answer to this question, but it would be helpful/easier to know for sure based on the changeset(s).

[~mgbailey] told me that all `feature branches` merge to `master`, `master` merges to `rc`, and if a `stable` branch exists, `rc` merges to `stable`.

Also note that this project's default branch is `master`. In other words, when it is cloned without a branch designation, all developers will be on `master`. Is it a concern that there are commits on `rc` that don't exist on `master`?;;;","01/Nov/17 6:15 AM;ckochenower;[~mgbailey] and [~sergey.minaev] - The following is a list of commits on `rc` that are not on `master`. It appears as if the fix for IS-388 (changeset 8b4acb2f) is only on the `rc` branch.
{code:java}
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative master..rc

*   7cef08fe - (HEAD -> rc, origin/rc) Merge pull request #339 from jovfer/hotfix/workaround_for_bad_formatted_genesis_txns (8 days ago)
|\ 
| * 9aa9c5b0 - Use copy of Jenkinsfile.ci as Jenkinsfile.cd for 1.0.1 RC. (8 days ago)
|/ 
* a0de8319 - Merge pull request #338 from jovfer/hotfix/workaround_for_bad_formatted_genesis_txns (8 days ago)
* 27921efc - Temporary ignore integration test. (8 days ago)
* ec85e285 - Increment versions. (8 days ago)
* 81c396c2 - Fix anoncreds version for interoperability tests to stable. (8 days ago)
* e57dd0d8 - Renaming CI/CD files to be compatible this current Jenkins. (8 days ago)
* 0998ae3c - Fix windows testing. (8 days ago)
* 8b4acb2f - Add workaround for bad formatted genesis txns (IS-388). (10 days ago){code};;;","01/Nov/17 6:48 AM;ckochenower;[~mgbailey] - The pool_transaction_STN_genesis file you gave me that contains port numbers enclosed in double quotes works fine on the `rc` branch.

Note that both problems I approached you about...
 # create_and_store_my_did returning a 2-tuple (instead of 3-tuple) on `master`.
 # ""MerkleTree contains invalid data error while decoding value"" stacktrace.

... are not a problem on the `rc` branch.;;;","01/Nov/17 8:18 PM;sergey.minaev;[~ckochenower] Hotfix is only in rc/stable now. It will be included in master branch in scope of  IS-390;;;",,,,,,,,,,,,,,,,,,,,,,,
CI for RC branch (rc and stable builds) is broken after splitting to CI and CD,IS-389,22746,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,23/Oct/17 6:16 PM,23/Oct/17 11:49 PM,28/Oct/23 2:49 AM,23/Oct/17 11:49 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-388,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyk3j:",,,,,,LibINDY 17.21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: implement building pool state from pool transactions,IS-390,22747,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,23/Oct/17 9:17 PM,07/Nov/17 1:04 AM,28/Oct/23 2:49 AM,04/Nov/17 2:15 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-388,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyldz:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support multiple process attachment to pool,IS-391,22842,,Improvement,To Develop,IS,Indy SDK,software,resplin,,,Low,,gudkov,sklump,sklump,26/Oct/17 3:19 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,attach,multiple,pool,process,"Suppose I have two processes (for simplicity, on the same host):
 * process 0 opens the pool
 * process 1 wants to connect to it.

Process 0 calls pool.create_ledger_config() with pool name and \{{{""genesis_txn"": "".../genesis.txn""}}}, then calls pool.open_pool_ledger() on the pool name.

It would be lovely if process 1 could use the pool, getting a handle to it by name, given that it already is open. As it stands, process 1can't create it because it's already created, and can't open it because it's not possible to open a pool twice on its name. It can't use the open pool connection because it's in another process. The way I understand it, the process can use the pool under a different name as long as its ledger configuration is a copy of process 0's pool's ledger configuration.",,,180,180,,0%,180,180,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl2f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sklump,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client needs to be able to send read requests to one Node only,IS-392,22852,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,ashcherbakov,ashcherbakov,26/Oct/17 5:48 PM,23/Nov/17 8:03 PM,28/Oct/23 2:49 AM,23/Nov/17 8:03 PM,,,,,,,,0,,,,,"With State proofs implemented, we can reduce load on live pool dramatically, since we can send read request to one Node only.
We need to make it possible for existing client/CLI.

Think about how to do it best. Possible options: send reqs to Nodes in round robin or randomly (if there is state proof returned).",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-140,IS-123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymkn:",,,,,,LibINDY 17.21,LibINDY 17.22,LibINDY 17.23,,,,,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,ashcherbakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: Support new key management and agents communicatiob approach in .Net wrapper,IS-393,22855,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,27/Oct/17 12:16 AM,07/Nov/17 9:40 PM,28/Oct/23 2:49 AM,07/Nov/17 9:40 PM,,,,,,,,0,,,,,"There are significant changes in our API:

1. The new libindy release will introduce generic keys management. Before it was possible to only use keys assigned to DIDs and crypto functions were only allowed to perform only DID-based encryption and signatures creation. Starting from next libindy release it will be possible to create, store and use keys detached from DIDs.
2. Verkey is used as an identifier of generic keys.
3. DID-based crypto becomes a subset of generic-keys based crypto. Creation of my did causes creation of generic-key in a compatible format. The key id can be resolved with the key_for_did method and used in any generic-keys based functions.
4. functions for DID-based crypto are still here but will be replaced in the future with generic-keys based crypto functions.
5. The approach of agents communication is completely changed. Instead of using proprietary secure transport layer protocol libindy will provide generic helpers to create authenticated and encrypted messages. This messages exchange doesn't require a complex handshake-based protocol. Messages can be sent through an insecure channel (http, unencrypted zmq).
6. libindy now provides the helper-methods to securely store any application-specific metadata with the key, did or pairwise.

See corresponded PR for details: [https://github.com/hyperledger/indy-sdk/pull/330]

We need to support this changes in .Net wrapper too.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl5z:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent API: Support new key management and agents communication approach in iOS wrapper,IS-394,22856,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,27/Oct/17 12:17 AM,07/Nov/17 9:40 PM,28/Oct/23 2:49 AM,07/Nov/17 9:40 PM,,,,,,,,0,,,,,"There are significant changes in our API:

1. The new libindy release will introduce generic keys management. Before it was possible to only use keys assigned to DIDs and crypto functions were only allowed to perform only DID-based encryption and signatures creation. Starting from next libindy release it will be possible to create, store and use keys detached from DIDs.
 2. Verkey is used as an identifier of generic keys.
 3. DID-based crypto becomes a subset of generic-keys based crypto. Creation of my did causes creation of generic-key in a compatible format. The key id can be resolved with the key_for_did method and used in any generic-keys based functions.
 4. functions for DID-based crypto are still here but will be replaced in the future with generic-keys based crypto functions.
 5. The approach of agents communication is completely changed. Instead of using proprietary secure transport layer protocol libindy will provide generic helpers to create authenticated and encrypted messages. This messages exchange doesn't require a complex handshake-based protocol. Messages can be sent through an insecure channel (http, unencrypted zmq).
 6. libindy now provides the helper-methods to securely store any application-specific metadata with the key, did or pairwise.

See corresponded PR for details: [https://github.com/hyperledger/indy-sdk/pull/330]

We need to support this changes in iOS wrapper too.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl67:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto: Implement crypto methods for keys-based cryptography,IS-395,22872,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,27/Oct/17 5:46 PM,27/Oct/17 11:28 PM,28/Oct/23 2:49 AM,27/Oct/17 10:53 PM,,,,,,,,0,,,,,"Recently we intorduced generic keys management functionality, but there are no crypto methods that will work with keys. Only DID-based crypto methods are present.

We need to implement crypto methods that will work with keys and deprecate DID based crypto methods as the same result can be achived by receiving of keys for some DID with indy_key_for_did call.

The list of methods to implement:

- indy_crypto_sign
- indy_crypto_verify
- indy_crypto_box
- indy_crypto_box_open
- indy_crypto_box_seal
- indy_crypto_box_seal_open",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-399,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylfj:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto: Python wrapper for generic crypto methods,IS-396,22873,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,27/Oct/17 5:47 PM,02/Nov/17 12:26 AM,28/Oct/23 2:49 AM,01/Nov/17 2:00 PM,,,,,,,,0,,,,,"Imlement python wrapper for generic crypto methods:

- indy_crypto_sign
- indy_crypto_verify
- indy_crypto_box
- indy_crypto_box_open
- indy_crypto_box_seal
- indy_crypto_box_seal_open",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylen:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto: Java wrapper for generic crypto methods,IS-397,22874,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,27/Oct/17 5:47 PM,02/Nov/17 12:26 AM,28/Oct/23 2:49 AM,01/Nov/17 2:00 PM,,,,,,,,0,,,,,"Imlement java wrapper for generic crypto methods:

- indy_crypto_sign
- indy_crypto_verify
- indy_crypto_box
- indy_crypto_box_open
- indy_crypto_box_seal
- indy_crypto_box_seal_open",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylev:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto: iOS wrapper for generic crypto methods,IS-398,22875,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,27/Oct/17 5:47 PM,07/Nov/17 9:41 PM,28/Oct/23 2:49 AM,07/Nov/17 9:41 PM,,,,,,,,0,,,,,"Imlement iOS wrapper for generic crypto methods:

- indy_crypto_sign
- indy_crypto_verify
- indy_crypto_box
- indy_crypto_box_open
- indy_crypto_box_seal
- indy_crypto_box_seal_open",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyldj:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto: .Net wrapper for generic crypto methods,IS-399,22876,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,27/Oct/17 5:47 PM,07/Nov/17 9:41 PM,28/Oct/23 2:49 AM,07/Nov/17 9:41 PM,,,,,,,,0,,,,,"Imlement .Net wrapper for generic crypto methods:
 - indy_crypto_sign
 - indy_crypto_verify
 - indy_crypto_box
 - indy_crypto_box_open
 - indy_crypto_box_seal
 - indy_crypto_box_seal_open

See PR [https://github.com/hyperledger/indy-sdk/pull/350] for Rust implementation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-395,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyldr:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,srottem,,,,,,,,,,"31/Oct/17 1:43 AM;srottem;PR with implemenation: [https://github.com/hyperledger/indy-sdk/pull/352]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto: Integration tests for generic crypto methods,IS-400,22877,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,27/Oct/17 5:47 PM,02/Nov/17 12:26 AM,28/Oct/23 2:49 AM,01/Nov/17 1:59 PM,,,,,,,,0,,,,,"Imlement integration tests for generic crypto methods:

- indy_crypto_sign
- indy_crypto_verify
- indy_crypto_box
- indy_crypto_box_open
- indy_crypto_box_seal
- indy_crypto_box_seal_open",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylf3:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Encapsulate persistence model and persistence layer,IS-401,22878,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,27/Oct/17 5:50 PM,08/Oct/19 11:41 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"For the current moment wallet service only provides generic set/get methods and definition of entities types and entities persistence code is present in different code parts.

It makes hard to understand what entities we have and complicates persistence logic.

I suggest to move all entities definition to one package and move all persistence helpers to one package. It will provide the good vision of persistence model and simplify wallet versioning and migrations.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1400,,,,,,,,,,"1|hzy3pb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
State Proof: Support timestamp in muli-signature,IS-402,22925,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,ashcherbakov,ashcherbakov,30/Oct/17 5:22 PM,02/Nov/17 12:26 AM,28/Oct/23 2:49 AM,01/Nov/17 10:54 PM,,,,,,,,0,,,,,"In the scope of INDY-928, BLS multi-signature is now calculated over the following array:
{code:java}
[ledger_id, state_root_hash, pool_state_root_hash, txn_root_hash, timestamp]{code}
where
ledger_id: id of the ledger multisig is created over
state_root_hash: root hash (base58) of the state associated with ledger_id and multisig is created over
pool_state_root_hash: root hash (base58) of pool state needed to anchor the state of Nodes participated in multisig
txn_root_hash: root hash (base58) of the ledger associated with ledger_id and multisig is created over
timestamp: timestamp of the state the multisig is created over

The value for multi-signature is calculated as msgpack serialized dict (sorted by keys)

The Result sent to client with Replies is changed a bit to support this multi-component value:
{code:java}
{<txn-sepcific fields>
 'txnTime': 1509351179,
 'seqNo': 9,
 'reqId': 1509351179375352, 
 'identifier': '4AdS22kC7xzb4bcqg9JATuCfAMNcQYcZa1u5eWzs6cSJ',
 'state_proof': {
	'multi_signature': {
		'participants': ['Gamma', 'Alpha', 'Delta'],
		'signature': 'RZir972nhZqPNR2mrJRyQ8tUtQSEC13eFsAFfUAMdVsVm8gwSj7chkCVW7crZ8gzcTZKnmCsLzcY1BAyptVH3axYmtk1FrouSC9PfXmdv9bAfPogNDc99TPBMxUmH5BdiWtBqBhcdgDscw5XTpwXMh5kjHGVhZ8jtnoBRUnYXfY9Ry',
		'value': {
			'timestamp': 1509351179,
			'pool_state_root_hash': '7zzGLtFhgYU68z4qwbTr1edweRN1naz6u71tvUDC9UGt',
			'txn_root_hash': '8tXbYmhYrvA6x2y8murmpw5pe7h5tR2hkb1fCQ4bFLmi',
			'state_root_hash': 'DR95nhGqT7GbxPi7fwRGs63XnpAimQN7tJNu4724kCCr', 
			'ledger_id': 1
		}
	},
	'proof_nodes': '+QFn8qA8iiEKWlZYbpsQpBw7gY6e19O5Yu1n69WuD6iOGMdJU5DPjnsidHlwZSI6ImJ1eSJ9+QExgICg/z7X4Kbks98q5LZoyWKyB16vNhQmO8B36Onbz9aUaziAoOkwBIZQU6meTGpVGn8gnArmK4/3EBcfRUrcaECp7AjkoH+mTD6m9guPfJi1NRS/ycWzW7AjPZLjZ1LQLCKNVhrMoAlqV6pkrGYm21AhuCJuyfJq/HQP1kXXokX5iyh5mdzvgKApciTKL+FVdP39bxBwVFjVNGyKRwh1aiZWrJaQoMwTbKAQXABUnMiqhgZ4m6Gv+dlSexO95N2s5b+vXFL/ke8GoYCgcme6jpzxwHVqClrAwpHJY/tW+/TKU/NVtjhpUDaLYp2gCM3C41C+braaKFifLMlxc77kPNEax1pNXMj6HBeu+9aAoLahkK/Vnn+9MS9XBBoCnNJ9RrKGCllWQxYSIA3qAJgWgIA=', 
	'root_hash': 'DR95nhGqT7GbxPi7fwRGs63XnpAimQN7tJNu4724kCCr'
  },
 }
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyle7:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[indy-crypto] BLS code crashes on negative test cases,IS-403,22926,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ashcherbakov,ashcherbakov,ashcherbakov,30/Oct/17 5:37 PM,11/Jan/18 11:34 PM,28/Oct/23 2:49 AM,12/Dec/17 9:32 PM,,,,,,,,0,,,,,"It turned out BLS code crashes when incorrect values are provided.
There are tests that prove it:
https://github.com/hyperledger/indy-plenum/blob/master/crypto/test/bls/indy_crypto/test_bls_crypto_indy_crypto.py
- 
- test_verify_invalid_signature
- test_verify_invalid_pk
- test_verify_invalid_short_signature
- test_verify_invalid_long_signature
- test_verify_invalid_short_pk
- test_verify_invalid_long_pk
- test_verify_invalid_multi_signature
- test_verify_invalid_multi_signature_short
- test_verify_invalid_multi_signature_long
- test_verify_multi_signature_invalid_pk
- test_verify_multi_signature_invalid_short_pk

There is a workaround in the current code that checks if length of BLS entity is not either 32 or 128 bits, then it doesn't pass it to libindy (looks like 32 is a length of signing key, and 128 is a length of other entities (points on the selected curve))
https://github.com/hyperledger/indy-plenum/blob/master/crypto/bls/indy_crypto/bls_crypto_indy_crypto.py#L38",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-448,IS-444,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq3j:",,,,,,LibINDY 17.23,LibINDY 17.24,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,,,,,,,,,,,"12/Dec/17 6:36 PM;ashcherbakov;Checking with the stable version 0.2.0;;;","12/Dec/17 9:32 PM;ashcherbakov;Works. Now using indy-crypto 0.2.0 in indy-node as well: https://github.com/hyperledger/indy-plenum/pull/481;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix docker file: do not install sovrin package,IS-405,23400,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,dsurnin,dsurnin,01/Nov/17 9:14 PM,07/Nov/17 7:43 PM,28/Oct/23 2:49 AM,07/Nov/17 7:43 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylfr:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,dsurnin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Cannot start docker indy_pool - invalid versions of indy-plenum, indy-anoncreds, and indy-node",IS-406,23701,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ckochenower,ckochenower,ckochenower,02/Nov/17 5:05 AM,08/Nov/17 12:04 AM,28/Oct/23 2:49 AM,08/Nov/17 12:04 AM,,,,,,,,0,,,,,"The versions of indy-plenum, indy-anoncreds, and indy-node defined [here|https://github.com/hyperledger/indy-sdk/blob/rc/ci/indy-pool.dockerfile#L27-L29] do not exist in the xenial/stable repo defined [here|[https://github.com/hyperledger/indy-sdk/blob/rc/ci/indy-pool.dockerfile#L22-L23].]

Changing the versions to the latest versions available in the xenial/stable repo resolves the problem.

Git blame suggests that [~sergey.minaev] was the last to change these versions. Therefore, I will assign this issue to him.

The following diff resolves the issue:
{noformat}
diff --git a/ci/indy-pool.dockerfile b/ci/indy-pool.dockerfile
index 0cb36084..4b94e3c8 100755
--- a/ci/indy-pool.dockerfile
+++ b/ci/indy-pool.dockerfile
@@ -24,9 +24,9 @@ RUN echo ""deb https://repo.sovrin.org/deb xenial $sovrin_stream"" >> /etc/apt/sou
RUN useradd -ms /bin/bash -u $uid sovrin
-ARG indy_plenum_ver=1.1.112
-ARG indy_anoncreds_ver=1.0.25
-ARG indy_node_ver=1.1.119
+ARG indy_plenum_ver=1.1.27
+ARG indy_anoncreds_ver=1.0.10
+ARG indy_node_ver=1.1.43
RUN apt-get update -y && apt-get install -y \
        indy-plenum=${indy_plenum_ver} \{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyk3z:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ckochenower,sergey.minaev,stevetolman,,,,,,,,,"02/Nov/17 6:19 AM;ckochenower;Pull request submitted: https://github.com/hyperledger/indy-sdk/pull/359;;;","03/Nov/17 12:44 AM;ckochenower;[~sergey.minaev] - Can you please review my pull request? https://github.com/hyperledger/indy-sdk/pull/359;;;","07/Nov/17 7:31 PM;sergey.minaev;[~ckochenower] I've merged PR into RC branch. Please check this branch and move ticket into `done` state;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
indy_sign_and_submit_request hangs when NYM is created as a trust anchor in the same transaction  ,IS-407,23723,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,ckochenower,ckochenower,03/Nov/17 1:35 AM,15/Jan/18 11:46 PM,28/Oct/23 2:49 AM,15/Jan/18 9:40 PM,,,,,,,,1,,,,,"indy_sign_and_submit_request hangs when a NYM is created as a trust anchor in the same transaction.

I am developing an AWS Lambda (and associated webapp) that will allow potential trust anchors to add themselves as trust anchors on the Sovrin Test Network (STN). This would allow developers/customers to play at will as trust anchors on the STN w/o waiting on Evernym or Sovrin employees/stewards to add them as trust anchors.

I developed and tested the Lambda from my workstation and only experienced the ""hang"" a couple of times. In other words, the ""hang"" is inconsistent while working on my laptop connected to the internet via wi-fi with CenturyLink as our Internet Service Provider (ISP).

The ""hang"" is consistent when invoking the same code as an AWS Lambda.

The reason for this level of environment detail is that [~devin-fisher], [~krw910], and I believe that AWS Lambda is dispatching requests much faster to the STN than the typical development environment would. In other words, AWS likely has a MUCH faster network and thus suggests a race condition exists.

What we think is happening is that a sufficient number of validator nodes reach consensus and all other validator nodes ""catchup"" before processing their respective request. When the validator nodes that did not participate in consensus, process their respective request, the NYM appears to already exist on the ledger and the steward does not have permission to complete the request.

The following is an example response:

INFO|indy::services::pool | src/services/pool/mod.rs:557 | RemoteNode::recv_msg brazil
 \{ ""reason"": ""client request invalid: InvalidClientRequest('HfXThVwhJB4o1Q1Fjr4yrC is neither Trustee nor owner of Nxnm242JjPJNEnvAuhDZiX',)"", ""reqId"": 1509631735685633500, ""op"": ""REQNACK"", ""identifier"": ""HfXThVwhJB4o1Q1Fjr4yrC"" }
  
 I have attached logs from both my workstation and the AWS Lambda environments.
  
 See attached:
 workstation.log (216 kB)
 lambda.log (149 kB) - search for ""InvalidClientRequest"" or ""REQNACK""
  
 Both logs are fundamentally exercising the same code. workstation.log represents the succeeding case and lambda.log represents the failed case.
  
 [~devin-fisher] witnessed the process hang on my workstation once, but I have been unable to reproduce the hang on my workstation since.
  
 The process consistently hangs in AWS Lambda. Therefore, we have a consistent way of reproducing the problem.
  
 *Steps to reproduce:*
  
 Once pull request [https://github.com/evernym/sovrin-environments/pull/45] has been accepted and merged into the stable branch, follow the instructions located in [https://github.com/evernym/sovrin-environments/blob/stable/vagrant/sandbox/DevelopmentEnvironment/AWS/README.md] and invoke the Lambda using the following instructions:

https://gitlab.corp.evernym.com/cs/sovrin-self-serve/blob/master/lambda/nym/README.md
  ",AWS Lambda - Amazon Linux AMI,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-457,INDY-1069,IS-123,,,,"03/Nov/17 1:19 AM;ckochenower;lambda.log;https://jira.hyperledger.org/secure/attachment/13203/lambda.log","03/Nov/17 1:19 AM;ckochenower;workstation.log;https://jira.hyperledger.org/secure/attachment/13204/workstation.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrq7:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ckochenower,sergey.minaev,,,,,,,,,,"14/Dec/17 9:31 AM;ckochenower;This issue was apparently caused by Python 3 asyncio and not sovrin. [~mgbailey] suggested that I add ""await asyncio.sleep(0)"" after all of my await calls to force the asyncio io loop to yield control to the next pending task. Doing so has resolved the problem.

I did not have an option to close -> won't fix or similar, so I set status to ""Done"". Please advise if doing so isn't appropriate.;;;","14/Dec/17 9:46 AM;ckochenower;I apparently had two clones of the project in my AWS VM and ran my test against a version that was simply checking if the DID exists on the ledger and was not creating the identity with the TRUST_ANCHOR role.

Once I discovered that I ran the test against the wrong clone, I tried the test against the code that has the ""await asyncio.sleep(0)"" calls and the result was a hang as described in the description on this issue.;;;","20/Dec/17 5:34 AM;ckochenower;[~mgbailey] suggested adding an `asyncio.sleep(3)` instead of `asyncio.sleep(0)`. Adding `asyncio.sleep(3)` after ledger.sign_and_submit_request seems to be working.
{code:java}
await ledger.sign_and_submit_request(pool_handle, steward_wallet_handle, steward_did, nym_txn_req)
await asyncio.sleep(3){code};;;","13/Jan/18 12:05 AM;sergey.minaev;Hangs of Indy SDK is fixed in IS-123
But in this case the issue on Node side is present, check INDY-1069
In this particular log consensus isn't reached;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Libindy not returning any error information when opening the pool,IS-408,23725,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,slafranca,slafranca,slafranca,03/Nov/17 2:39 AM,25/Jan/18 12:44 AM,28/Oct/23 2:49 AM,24/Jan/18 11:57 PM,,,,,,,,0,,,,,"Using a version of libindy that does not support blskeys with a genesis transaction file that contains blskeys, will cause libindy to stop responding and wait endlessly for a response. Libindy should either timeout with an error or return a conneciton error.  

I am using the Python wrapper, here is where the code hangs:
{code:java}
    try:
        pool_handle = await pool.open_pool_ledger(""pool_name"", None)
    except IndyError as E:
        print(""Error: "" + str(E))
{code}
I do not get an exception as an error is never returned. Instead, my console output shows the code is trying to open the ledger and just hangs.  Libindy should provide some output or information about what happened.","libindy build from stable, pool is running master",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrnb:",,,,,,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,"29/Dec/17 11:47 PM;sergey.minaev;Should be already fixed in IS-123;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS: Migrate new tests for Agent API,IS-409,23825,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,sergey.minaev,sergey.minaev,sergey.minaev,07/Nov/17 7:41 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-95,,,,,,,,,,"1|hzy3o7:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,"13/Nov/17 5:20 PM;sergey.minaev;Utils and base tests done;;;","26/Jul/18 7:07 PM;sergey.minaev;Deprecated ticket, Agent API removed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS: Migrate new tests for Crypto API,IS-410,23826,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,07/Nov/17 7:41 PM,26/Jul/18 7:07 PM,28/Oct/23 2:49 AM,26/Jul/18 7:07 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzy3of:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,"13/Nov/17 5:20 PM;sergey.minaev;Utils and base tests done;;;","26/Jul/18 7:07 PM;sergey.minaev;Deprecated ticket, actually done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: prepare RC 1.1.0 with new Agent and Crypto API,IS-411,23827,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,07/Nov/17 7:45 PM,09/Nov/17 8:32 PM,28/Oct/23 2:49 AM,09/Nov/17 8:32 PM,,,,,,,,0,,,,,"* add workaround for master branch of indy-sdk against stable branch of indy-node
* update changelog/versions
* preform acceptance testing",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzf3:",,,,,,LibINDY 17.22,,,,,,,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: Anoncreds API Design ,IS-412,23850,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ashcherbakov,gudkov,gudkov,08/Nov/17 7:00 PM,24/Nov/17 12:07 AM,28/Oct/23 2:49 AM,24/Nov/17 12:07 AM,,,,,,,,0,,,,,"The basic idea here is that the crypto code belongs in Indy-crypto and not Indy-sdk; meaning, details of serialization and protocol belong in the sdk but anything that leverages pairings or encrypt/decrypt our signature checking should go into the lower level library.  This should allow the crypto to be audited and shared with other projects. 

This story is about design of this migration. We need to:

1. Define the new consistent API for indy crypto
2. Check do we need python wrapper for this API
3. Check  that there is no Sovrin only parts
4. Design integration approach with Indy SDK

I expect that PoA will be created as result of this ticket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzymkf:",,,,,,LibINDY 17.23,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,ashcherbakov,gudkov,,,,,,,,,,"23/Nov/17 10:43 PM;gudkov;Proposed design can be found here: https://docs.google.com/document/d/17kVWsKQ_lPjz2VprYa44dfjD_ur7k-dACe6VrUKkAqQ/edit#;;;","24/Nov/17 12:07 AM;ashcherbakov;Discussed, updated API a bit, and came to Consensus.
Looks good for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: Anoncreds API Implementation,IS-413,23851,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,08/Nov/17 7:12 PM,07/Dec/17 11:11 PM,28/Oct/23 2:49 AM,07/Dec/17 10:41 PM,,,,,,,,0,,,,,"The basic idea here is that the crypto code belongs in Indy-crypto and not Indy-sdk; meaning, details of serialization and protocol belong in the sdk but anything that leverages pairings or encrypt/decrypt our signature checking should go into the lower level library.  This should allow the crypto to be audited and shared with other projects.

This story is about implementation of new Anoncreds API in Indy Crypto.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzyq3z:",,,,,,LibINDY 17.23,LibINDY 17.24,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: Anoncreds API Integration tests,IS-414,23852,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,08/Nov/17 7:14 PM,07/Dec/17 11:11 PM,28/Oct/23 2:49 AM,07/Dec/17 10:41 PM,,,,,,,,0,,,,,"The basic idea here is that the crypto code belongs in Indy-crypto and not Indy-sdk; meaning, details of serialization and protocol belong in the sdk but anything that leverages pairings or encrypt/decrypt our signature checking should go into the lower level library.  This should allow the crypto to be audited and shared with other projects.

This story is about implementation of integration tests for new Anoncreds API in Indy Crypto.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzyq3r:",,,,,,LibINDY 17.23,LibINDY 17.24,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds: Use Indy Crypto as Anoncreds backend,IS-415,23853,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,08/Nov/17 8:17 PM,18/Dec/17 9:45 PM,28/Oct/23 2:49 AM,18/Dec/17 9:45 PM,,,,,,,,0,,,,,"The basic idea here is that the crypto code belongs in Indy-crypto and not Indy-sdk; meaning, details of serialization and protocol belong in the sdk but anything that leverages pairings or encrypt/decrypt our signature checking should go into the lower level library.  This should allow the crypto to be audited and shared with other projects.

This task is about refactoring of Indy SDK to use new Anoncreds API in Indy Crypto as backend for Anoncreds API.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzyq33:",,,,,,LibINDY 17.24,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"06/Dec/17 11:10 PM;gudkov;We implemented this and reviewed PR. I asked community to check will it be the problem to break data compatibility with current code.

If there will be feedback we can mark it as validated and merge this PR.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Signus: Support Ledgerless DIDs,IS-416,23875,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,09/Nov/17 8:24 PM,17/Nov/17 8:08 PM,28/Oct/23 2:49 AM,17/Nov/17 12:58 PM,,,,,,,,0,Verity,,,,"Se discussed with Rajesh how to use libindy for DID-based encryption without involving pool to resolve DID keys. He is mostly interested in it for unit testing without the pool, but for me, it seems like valuable also from Ledgerless DIDs support perspective.
 
Existing ""indy_key_for_did"" call follow the idea that we resolve information about their DID from the ledger with cache in the local wallet. The ""indy_open_wallet"" call has freshness parameter that is used for checking the freshness of cached pool value. This behavior isn't completely compatible with Ledgerless DIDs as it forces pool connection and will fail after freshness time.
 
We need to create dedicated call ""indy_local_key_for_did"" that will look to local ledger only and skip freshness checking. It will allow using local wallet data without forcing pool connection and limitation to data freshness.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-69,,,,,,,,,,"1|hzyms7:",,,,,,LibINDY 17.23,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"10/Nov/17 6:05 PM;gudkov;[~rajesh.kalaria] The changes were merged. Could you check that you satisfied with results and move the ticket to done?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Remove zmq-pw dependency,IS-417,23876,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,09/Nov/17 8:58 PM,20/Mar/18 8:00 PM,28/Oct/23 2:49 AM,20/Mar/18 8:00 PM,,,,,,,,0,,,,,"With new Agent communication approach we don't need zmq-pw now and can use zmq. 

This migration isn't trivial as we have some additional build related paraches in zmq-pw repo, but it would be nice to switch to mainstream version.",,,,,,,,,,,,,,,IS-574,,,,,,,,,,,,IS-178,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzyz47:",,,,,,18.05,18.06,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,faisal00813,gudkov,sergey.minaev,,,,,,,,"28/Feb/18 1:46 PM;avkrishnan;https://jira.hyperledger.org/browse/IS-574 is being blocked by this ticket.;;;","28/Feb/18 1:48 PM;faisal00813;[~avkrishnan] This ticket needs to be prioritised. IS-574 is dependent on this ticket.
zmq-pw was causing problems to be build when targeted for Android platform. To unblock me [~sergey.minaev] switched from zmq-pw to zmq on his personal branch and I was able to proceed forward.

These changes need to carry forwarded to master in order to trigger android builds from master.;;;","06/Mar/18 6:23 PM;sergey.minaev;[PR on GitHub|https://github.com/hyperledger/indy-sdk/pull/548]
in progress now:
* works only for linux
* Windows fix ready, but we have not updated prebuilt dependencies for CI/CD yet
* iOS build changes are started today;;;","20/Mar/18 8:00 PM;gudkov;* All builds work now and docs updated. We can consider it as done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Agent API: Add demo tests, update samples",IS-419,23907,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,10/Nov/17 5:32 PM,16/Nov/17 12:03 PM,28/Oct/23 2:49 AM,14/Nov/17 12:14 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymsn:",,,,,,LibINDY 17.23,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds: Updates from AnonCreds Paper need to be added,IS-420,23914,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,MikeLodder,MikeLodder,11/Nov/17 1:17 AM,11/Oct/19 9:27 PM,28/Oct/23 2:49 AM,11/Oct/19 9:27 PM,,,,,,,,0,,,,,"Updates have been made to the anoncreds protocol paper that need to be incorporated like:

Proof of Setup Correctness

Nonces with Claim issuance and Proof Generation",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-320,,,,,,,,,,"1|hzwyw7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,gudkov,MikeLodder,,,,,,,,,"18/Jan/18 4:31 PM;gudkov;[~SeanBohan_Sovrin]

Seems duplicate for IS-513;;;","11/Oct/19 9:27 PM;esplinr;We have new anoncreds documentation in Ursa-Docs, Ursa-RFCs, Aries-RFCs, and Indy HIPEs. If additional documentation is needed, we can create new issues for the specific changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: changes for encryption in libindy,IS-421,23935,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,danielhardman,gudkov,gudkov,14/Nov/17 10:00 PM,15/Jan/18 11:46 PM,28/Oct/23 2:49 AM,12/Jan/18 5:02 AM,,,,,,,,0,,,,,"The request from Daniel:

daniel.hardman [10:47 AM] 
Alex and Slava: i am feeling like we ought to harmonize the description of encryption mechanisms in https://github.com/evernym/protocol/blob/master/message-packaging.md#encrypted-messages with the functions in crypto.rs in the SDK. Part one of the need for sync is that the names of the functions crypto_box and crypto_box_seal are out of sync with the names “authcrypt” and “anoncrypt” (and “authdecrypt” / “anondecrypt”) in the protocol repo. I think “authcrypt” and “anoncrypt” are significantly better names; they do not make it clear that we’re using libsodium’s PKAE or sealed box mechanism, but they DO make it clear whether the encryption is authenticated or anonymous, which is more likely to help a programmer. So I vote to change the names of the functions in the sdk. If you have a strong argument the other way, please let me know. Otherwise, please make the change happen before MVP.

On the other hand, I believe the description of authcrypt in the protocol repo is slightly inaccurate. Could you raise PR that proposes an alternate paragraph to explain how it really works in the SDK?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzyrrb:",,,,,,LibINDY 17.25,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,ashcherbakov,danielhardman,gudkov,,,,,,,,"12/Dec/17 10:06 PM;gudkov;Proposed PoA:
 # Rename “indy_crypto_box” call to “indy_crypto_authcrypt”. Note that this call returns encrypted msg and nonce instead of self-contained protocol message. Transferring information about sender vk and nonce is out of scope for this call.
 # Rename “indy_crypto_box_open” call to “indy_crypto_authdecrypt”. Also note that this call requires sender vk, recipient vk and nonce to perform  decryption.
 # Rename “indy_crypto_box_seal” call to “indy_crypto_anoncrypt”. Note that it isn’t protocol level message, but just crypto.
 # Rename “indy_crypto_box_seal_open” call to “indy_crypto_anondecrypt”.
 # Rename “indy_prep_msg” to “indy_prep_auth_msg” for symmetry. Leave “indy_prep_anonymous_msg” and “idny_parse_msg” as is. Note that these calls return self-contained message that can be safely transferred.
 # Update “encrypted-messages” section to correspond libindy and provide libindy references.;;;","12/Dec/17 10:07 PM;gudkov;[~danielhardman] [~ashcherbakov] Could you look to proposed PoA in previous comment?;;;","12/Dec/17 10:37 PM;ashcherbakov;I think we have too many similar methods, and it's not clear what methods to use.
I can see three options here (and remove all other calls, such as `prepare_msg`):

*Option1*
- `indy_crypto_auth_encrypt`   - combo box encryption; returns self-contained message with encrypted text, sender's key and nonce
- `indy_crypto_anon_encrypt`  - sealed box encryption; returns self-contained message with encrypted text
- `indy_crypto_auth_decrypt`   - combo box decryption;
- `indy_crypto_anon_decrypt`  - sealed box decryption;

*Option2*
- `indy_crypto_authcrypt`   - combo box encryption; returns self-contained message with encrypted text, sender's key and nonce
- `indy_crypto_anoncrypt`  - sealed box encryption; returns self-contained message with encrypted text
- `indy_crypto_decrypt`   - decryption; performs decryption for both authcrypt and anoncrypt depending on input message

*Option3*
- `indy_crypto_encrypt(auth, ....)`   - encryption (authcrypt if auth=True; anoncrypt if auth=False); returns self-contained message with encrypted text, sender's key and nonce depending on auth parameter
- `indy_crypto_decrypt`   - decryption; performs decryption for both authcrypt and anoncrypt depending on input message



 
;;;","12/Dec/17 11:04 PM;gudkov;From Alex's options i prefer Option 2. Disadvantage of Alex's options is that we don't provide low level crypto box analog.;;;","13/Dec/17 3:13 AM;danielhardman;I think option 1 is better. Let me see if I can convince you why.

First, we want the self-contained messages to be the output of the functions named with the authcrypt and anoncrypt terms. Having functions that return a message that is not self-contained (requires separate vk and nonce) might *also* be interesting (what Slava proposed in his PoA), but I wouldn't use the term ""authcrypt"" (or ""anoncrypt"") to describe such functions, because the protocol description of authcrypt and anoncrypt makes it clear that they are self-contained. So if we have the lower-level functions (and they're public, which might be unnecessary...), let's call them something different.

Second, I think decryption of a combo box is potentially more complex than decryption of a sealed box. With a sealed box, the decryption either succeeds or fails. With a combo box, the decryption might succeed, but might require additional analysis before it's accepted. For example, I might want to know whether the key pair of the sender maps to a DID I expect, and if so, whether that mapping is current or old. This might require indy_crypto_auth_decrypt() to return additional info (have a different function signature) compared to indy_crypto_anon_decrypt().

 ;;;","13/Dec/17 4:53 PM;gudkov;> I might want to know whether the key pair of the sender maps to a DID I expect, and if so, whether that mapping is current or old. This might require indy_crypto_auth_decrypt() to return additional info (have a different function signature) compared to indy_crypto_anon_decrypt().

It current prem_msg/parse_msg approach the information about message format (auth or not) is stored inside of external seal box. 

We use the same signature for parse. parse_msg returns decrypted message and sender key. If it is anonymous message than sender key will be just null.;;;","15/Dec/17 11:08 PM;gudkov;The latest vision is here: https://docs.google.com/document/d/16bY3TzCj1DVk17ufJ1d0b4V7tisj9RWiJZ2U7wmvi7I/edit;;;","22/Dec/17 11:01 PM;Artemkaaas;Changes: 
- Deleted Agent API. Deleted encryption functions from Signus API. Renamed Signus API to DID API.  Changed logic of encryption functions in Crypto API.

PR:
- https://github.com/hyperledger/indy-sdk/pull/434


Version:
- master build #292

Risk:
- Med

 ;;;","22/Dec/17 11:38 PM;gudkov;[~danielhardman] Could you validate results?;;;",,,,,,,,,,,,,,,,,,,,,
Minimal pipeline (just build),IS-422,23948,18938,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,15/Nov/17 8:19 PM,09/Sep/19 10:06 PM,28/Oct/23 2:49 AM,26/Nov/18 8:46 PM,,,1.12.0,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn5b:",,,,,,LibINDY Sprint 5,LibINDY Sprint 6,Indy SDK 19.18,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test libindy,IS-423,23949,18938,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,15/Nov/17 8:22 PM,10/Sep/19 11:07 PM,28/Oct/23 2:49 AM,10/Sep/19 11:07 PM,,,1.12.0,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn5j:",,,,,,LibINDY Sprint 5,LibINDY Sprint 6,Indy SDK 19.18,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,Artemkaaas,sergey.minaev,,,,,,,,,,"03/Sep/19 10:05 PM;Artemkaaas;Changes: 
- updated CI/CD pipeline to run tests for Libindy, Libnullpay, Libvcx, CLI on MacOS.

PR:
- https://github.com/hyperledger/indy-sdk/pull/1872


Version:
- master-1313;;;","10/Sep/19 11:06 PM;sergey.minaev;CI/CD updated properly and successfully executed for recent builds;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test python and java wrappers,IS-424,23950,18938,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Deferred,,sergey.minaev,sergey.minaev,15/Nov/17 8:23 PM,06/Sep/19 10:40 PM,28/Oct/23 2:49 AM,06/Sep/19 10:40 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn5r:",,,,,,LibINDY Sprint 5,LibINDY Sprint 6,Indy SDK 19.18,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,esplinr,sergey.minaev,,,,,,,,,,"06/Sep/19 10:40 PM;esplinr;We have not seen problems with these wrappers that are specific to a single operating system environment, so we will skip testing these wrappers in the OSX environment and rely on the full testing we do on Ubuntu.

As we move wrappers to Aries, we can reevaluate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Testing on pre-built libindy,IS-425,23951,18934,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,15/Nov/17 8:27 PM,16/Nov/17 8:14 PM,28/Oct/23 2:49 AM,16/Nov/17 8:14 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn5z:",,,,,,LibINDY 17.23,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A client needs to be able to build a requet for a sample operation,IS-426,23953,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,ashcherbakov,ashcherbakov,15/Nov/17 9:34 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"indy-sdk has builder methods to create jsons for different types of txns (NYM, CLAIM_DEF, etc.).

We need to have an API to build s request json for a sample (any) operation json:
{code}
build_request(identifier, operation)
{code}
The method will take the operation and wrap it with additional metadata common for all requests (reqId. identifier, protocolVersion, etc.)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzy3nj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Provide actual response from pool in case of Nack, Reject",IS-427,23954,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dsurnin,dsurnin,dsurnin,15/Nov/17 10:06 PM,15/Jan/18 11:46 PM,28/Oct/23 2:49 AM,29/Dec/17 10:55 PM,,,,,,,,0,,,,,"At the moment only status code is returned for Nacked and Rejected responses without any clarification.

It would be good to have actual json response from pool with extended info",,,,,,,,,,,,,,,INDY-988,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrrj:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,dsurnin,gudkov,,,,,,,,,"29/Dec/17 9:27 PM;Artemkaaas;Changes: 
 -  Return Reply, Reqnack, Reject transaction response as a valid result.

PR:
 - [https://github.com/hyperledger/indy-sdk/pull/45|https://github.com/hyperledger/indy-sdk/pull/455]5

Version:
 - master build #301;;;","29/Dec/17 10:39 PM;gudkov;[~dsurnin]

Could you validate this?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
re-build core pod,IS-428,23955,18934,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,15/Nov/17 10:43 PM,16/Nov/17 8:14 PM,28/Oct/23 2:49 AM,16/Nov/17 8:14 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn6f:",,,,,,LibINDY 17.23,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
use re-built core pod for wrapper test,IS-429,23956,18934,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,15/Nov/17 10:43 PM,16/Nov/17 8:14 PM,28/Oct/23 2:49 AM,16/Nov/17 8:14 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn6n:",,,,,,LibINDY 17.23,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Blocking Issue: libindy cannot remove roles,IS-430,23960,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,slafranca,slafranca,slafranca,16/Nov/17 1:02 AM,04/Apr/18 1:49 AM,28/Oct/23 2:49 AM,28/Nov/17 2:15 AM,,,,,,,,0,,,,,"While automating acceptance test 09, the test fails because the roles are not removed.

In the test document for test 09, new roles are created and used for various tests.  Once used, the new roles are removed and then tests are run to see if the user can use the removed roles to add NYMs or change roles.  After the code to remove the roles is complete, I can use the roles to perform functions like adding new roles or adding NYMs.

A test script has been added to this defect.  Some screen shots are also attached showing the output from the calls to remove roles and validation using Get_nym to see the results.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 1:00 AM;slafranca;Additional_Information.rar;https://jira.hyperledger.org/secure/attachment/13343/Additional_Information.rar","16/Nov/17 12:58 AM;slafranca;test_add_and_remove_role.py;https://jira.hyperledger.org/secure/attachment/13344/test_add_and_remove_role.py",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo27:",,,,,,LibINDY 17.23,LibINDY 17.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,sergey.minaev,VladimirWork,,,,,,,,,"16/Nov/17 1:03 AM;slafranca;Comments from the team running the tests:  libindy cannot remove any role. When we build NYM request to remove a role (use empty string for argument “role”), the returned request does not contain the “role” property. Thats why when libindy sends this request, the sovrin system cannot overwrite the role of Trustee (or Steward, TrustAnchor) and therefore the role of Trustee (or Steward, TrustAnchor) remains in the response of GET_NYM.;;;","17/Nov/17 10:50 PM;sergey.minaev;[~slafranca] Please specify libindy version.;;;","17/Nov/17 10:54 PM;sergey.minaev;It seems like you try to use out-date version. Same problem was fixed in master at https://github.com/hyperledger/indy-sdk/pull/265 and this fix is included to latest stable release 1.1.0;;;","20/Nov/17 4:37 PM;gudkov;[~slafranca] Can you verify this on the latest stable?;;;","28/Nov/17 2:15 AM;slafranca;Tested this with new build from repo.sovrin.org...stable build and the role is removed.  The test passes now.;;;","04/Apr/18 1:49 AM;VladimirWork;Regression of this issue was appeared in 441 master. Fixed in 442 master.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Documentation of Default Wallet,IS-431,23982,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,MikeLodder,MikeLodder,17/Nov/17 3:11 AM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,16/Apr/18 10:09 PM,,,1.4,,,,29/Nov/17 12:00 AM,0,,,,,We need documentation on the default wallet usage and how to use credentials and rotate keys.,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-320,,,,Impediment,,,,,,"1|hzz50v:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,eramitg,gudkov,MikeLodder,SeanBohan_Sovrin,,,,,,,,"13/Jan/18 7:18 AM;SeanBohan_Sovrin;related to ""where is the secret"" 

 

documentation on ""how to use it"" and ""how not to use it"";;;","02/Feb/18 10:54 PM;gudkov;[~MikeLodder] Do you have any plans to start this work?;;;","15/Feb/18 1:33 AM;MikeLodder;[~gudkov] I have many documents on this subject but need to reconcile them for hyper ledger? what format is preferred: markdown, PDF, HTML?;;;","15/Feb/18 11:07 PM;gudkov;I believe we need:

1. Documentation inside of ""doc"" folder as markdown document
2. Reference of this documentation in code documentation of libindy API and all wrappers.;;;","16/Apr/18 10:08 PM;gudkov;* Documentation of current default wallet is available here: https://github.com/hyperledger/indy-sdk/blob/master/doc/default-wallet.md
* For me it looks fine. The only problem is that it isn't referenced from API documentation, but i am ok with this as it will be deprecated soon.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
A client needs to be able to send a Batch of request,IS-432,23997,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Low,,,ashcherbakov,ashcherbakov,17/Nov/17 9:22 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"There is a Batch operation supported by the Pool.
The client needs to have a possibility to send multiple Requests in one Batch: 
{code}
submit_batch()
{code}
This will be a batch in the transport level, that is we can send multiple requests by one call to the Node. It may reduce amount of connection and requests to nodes.
So, this is different from CLI batching that CLI batching just sends multiple commands one by one (in a common way) while transport batch should sent all of them at once.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-952,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-57,,,,,,,,,,"1|hzwytj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,SeanBohan_Sovrin,,,,,,,,,,"13/Jan/18 7:17 AM;SeanBohan_Sovrin;[~ashcherbakov] - pls add more info (you can batch through SDK CLI, how is this different);;;","15/Jan/18 5:50 PM;ashcherbakov;Added more info to the story description.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - Framework,IS-433,24447,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,23/Nov/17 9:45 PM,18/Dec/17 9:14 PM,28/Oct/23 2:49 AM,18/Dec/17 9:14 PM,,,,,,,,0,,,,,"Implement Indy-SDK based CLI based on design provided on IS-380. 

This story scope:
- libindy synchronous wrapper 
- Readline based framework with auto completion support",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyq2v:",,,,,,LibINDY 17.24,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - Common commands,IS-434,24448,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,23/Nov/17 9:46 PM,21/Dec/17 6:50 AM,28/Oct/23 2:49 AM,20/Dec/17 11:50 PM,,,,,,,,0,,,,,"Implement Indy-SDK based CLI based on design provided on IS-380.

This story scope:
- help
- license
- exit
- prompt
- show",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyq07:",,,,,,LibINDY 17.24,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,krw910,ozheregelya,sergey.minaev,,,,,,,,"16/Dec/17 1:33 AM;sergey.minaev;Helpful links:

* README with links to packages and how-to for ubuntu repository:
 https://github.com/jovfer/indy-sdk/blob/master/cli/README.md
* windows packages
 https://repo.sovrin.org/windows/libindy/master/
 https://repo.sovrin.org/windows/indy-cli/master/
* debian packages (for manual install use libindy (not -dev) + indy-cli):
 https://repo.sovrin.org/sdk/lib/apt/xenial/master/;;;","19/Dec/17 5:31 AM;krw910;Blocked due to installation issues in IS-382;;;","19/Dec/17 6:37 PM;sergey.minaev;Stable and RC builds aren't released, testing on *master* version is required.;;;","20/Dec/17 11:50 PM;ozheregelya;Version Info:
indy-cli 1.1.1~284

Following commands were verified:
 * help
 ** <common_command> help
 ** <command_group> help
 ** <command_group> <command> help
 * about (instead of license)
 * exit
 * prompt
 * show

All commands work. Improvements for commands will be moved to separated tickets.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - Wallets management,IS-435,24449,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,23/Nov/17 9:47 PM,21/Dec/17 5:10 AM,28/Oct/23 2:49 AM,21/Dec/17 5:10 AM,,,,,,,,0,,,,,"Implement Indy-SDK based CLI based on design provided on IS-380

This task scope:

- new wallet
- use wallet
- list wallets",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzypzz:",,,,,,LibINDY 17.24,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,krw910,ozheregelya,sergey.minaev,,,,,,,,"16/Dec/17 1:35 AM;sergey.minaev;Helpful links:

* README with links to packages and how-to for ubuntu repository:
 https://github.com/jovfer/indy-sdk/blob/master/cli/README.md
* windows packages
 https://repo.sovrin.org/windows/libindy/master/
 https://repo.sovrin.org/windows/indy-cli/master/
* debian packages (for manual install use libindy (not -dev) + indy-cli):
 https://repo.sovrin.org/sdk/lib/apt/xenial/master/;;;","19/Dec/17 5:30 AM;krw910;Blocked due to installation issues in IS-382;;;","19/Dec/17 6:37 PM;sergey.minaev;Stable and RC builds aren't released, testing on *master* version is required.;;;","21/Dec/17 5:10 AM;ozheregelya;Version Info:
indy-cli 1.1.1~284

Following commands were verified:
 * wallet create (instead of wallet new)
 * wallet list
 * wallet close
 * wallet delete
 * wallet open

Wallet operation work. Improvements will be moved to separated tickets.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - Identity management ,IS-436,24450,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,23/Nov/17 9:47 PM,21/Dec/17 8:17 AM,28/Oct/23 2:49 AM,21/Dec/17 8:17 AM,,,,,,,,0,,,,,"Implement Indy-SDK based CLI based on design provided on IS-380

This task scope:

- new DID
- list ids
- use DID
- change current key",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzypzj:",,,,,,LibINDY 17.24,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,krw910,ozheregelya,sergey.minaev,,,,,,,,"16/Dec/17 1:35 AM;sergey.minaev;Helpful links:

* README with links to packages and how-to for ubuntu repository:
 https://github.com/jovfer/indy-sdk/blob/master/cli/README.md
* windows packages
 https://repo.sovrin.org/windows/libindy/master/
 https://repo.sovrin.org/windows/indy-cli/master/
* debian packages (for manual install use libindy (not -dev) + indy-cli):
 https://repo.sovrin.org/sdk/lib/apt/xenial/master/;;;","19/Dec/17 5:31 AM;krw910;Blocked due to installation issues in IS-382;;;","19/Dec/17 6:37 PM;sergey.minaev;Stable and RC builds aren't released, testing on *master* version is required.;;;","21/Dec/17 8:17 AM;ozheregelya;Version Info:
indy-cli 1.1.1~284

Following commands were verified:
 * did list
 * did use
 * did new
 * did rotate-key (instead of change current key)

Identity commands work. Improvements will be moved to separated tickets.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"CLI: Indy-SDK based CLI -  ""Force"" flag support",IS-437,24451,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,23/Nov/17 9:48 PM,14/Dec/17 11:11 PM,28/Oct/23 2:49 AM,14/Dec/17 8:21 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyq3b:",,,,,,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"14/Dec/17 8:20 PM;sergey.minaev;There are 2 pre-checks in old indy client (python-based) for sending request to the ledger
1) catch-up at start
2) at sending moment: has enough connections (quorum can be reached)
Force flag is disable the second one. And transaction could be sent to any small count of active nodes after catch-up. Indy-SDK perform only first check, and use zmq abstraction to not track active connections to the nodes. So there is no required changes to synchronize Indy-SDK behavior with python client from ""force"" flag point of view.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI -  Batch Mode,IS-438,24452,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,gudkov,gudkov,23/Nov/17 9:49 PM,21/Dec/17 8:15 PM,28/Oct/23 2:49 AM,21/Dec/17 8:15 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzypz3:",,,,,,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,krw910,sergey.minaev,VladimirWork,,,,,,,,"16/Dec/17 1:33 AM;sergey.minaev;Helpful links:

* README with links to packages and how-to for ubuntu repository:
 https://github.com/jovfer/indy-sdk/blob/master/cli/README.md
* windows packages
 https://repo.sovrin.org/windows/libindy/master/
 https://repo.sovrin.org/windows/indy-cli/master/
* debian packages (for manual install use libindy (not -dev) + indy-cli):
 https://repo.sovrin.org/sdk/lib/apt/xenial/master/;;;","16/Dec/17 1:34 AM;sergey.minaev;batch mod activated by passing 1 parameter for indy-cli - path to file with list of commands
Command may start with ""-"" symbol. In this case error result will be ignored (if occurs) and cli continue batch execution;;;","19/Dec/17 5:31 AM;krw910;Blocked due to installation issues in IS-382;;;","19/Dec/17 6:37 PM;sergey.minaev;Stable and RC builds aren't released, testing on *master* version is required.;;;","21/Dec/17 8:15 PM;VladimirWork;Build Info:
indy-cli master

Actual Results:
Batch mod works. Improvements and bugs will be reported as separate tickets.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - Pool transactions,IS-439,24453,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,gudkov,gudkov,23/Nov/17 9:56 PM,21/Dec/17 7:44 PM,28/Oct/23 2:49 AM,21/Dec/17 7:41 PM,,,,,,,,0,,,,,"Implement Indy-SDK based CLI based on design provided on IS-380

This task scope:
 - ledger \{nym}
 - ledger \{getNym}
 - ledger \{attrib}
 - ledger \{getAttr}
 - ledger \{node}
 - ledger \{schema}
 - ledger \{getSchema}
 - ledger \{claimDef}
 - ledger \{getClaimDef}
 - ledger custom",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyoxz:",,,,,,LibINDY 17.24,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,krw910,sergey.minaev,VladimirWork,,,,,,,,"16/Dec/17 1:04 AM;gudkov;No send \{poolConfig} and \{poolUpgrade} transactions implemented. We need to implement them.;;;","16/Dec/17 1:35 AM;sergey.minaev;Helpful links:

* README with links to packages and how-to for ubuntu repository:
 https://github.com/jovfer/indy-sdk/blob/master/cli/README.md
* windows packages
 https://repo.sovrin.org/windows/libindy/master/
 https://repo.sovrin.org/windows/indy-cli/master/
* debian packages (for manual install use libindy (not -dev) + indy-cli):
 https://repo.sovrin.org/sdk/lib/apt/xenial/master/;;;","18/Dec/17 9:30 PM;gudkov;I created dedicated ticket for pool config/upgrade commands support https://jira.hyperledger.org/browse/IS-458. We can move it to validate now to don't block testing.;;;","19/Dec/17 5:32 AM;krw910;Blocked due to installation issues in IS-382;;;","19/Dec/17 6:37 PM;sergey.minaev;Stable and RC builds aren't released, testing on *master* version is required.;;;","21/Dec/17 1:38 AM;VladimirWork;Build Info:
indy-cli master

Commands checked:
{noformat}
ledger {nym} +
ledger {getNym} +
ledger {attrib} +
ledger {getAttr} +
ledger {node} +
ledger {schema} +
ledger {getSchema} +
ledger {claimDef} +
ledger {getClaimDef} +
ledger custom +
{noformat}

Actual Results:
Ledger commands work. Improvements and bugs will be reported as separate tickets.;;;",,,,,,,,,,,,,,,,,,,,,,,,
CI: Windows and MacOS builds should be reproducible against Rust compiler version,IS-440,24499,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,28/Nov/17 7:52 PM,15/Jan/18 11:46 PM,28/Oct/23 2:49 AM,29/Dec/17 10:40 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyrrr:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,"28/Dec/17 11:59 PM;sergey.minaev;[PR with implementation|https://github.com/hyperledger/indy-sdk/pull/457];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: fix possible collisions on encoding string to BigInteger,IS-441,24632,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,30/Nov/17 10:03 PM,18/Dec/17 11:42 PM,28/Oct/23 2:49 AM,18/Dec/17 9:46 PM,,,,,,,,0,,,,,"cl::helpers::encode_attribute contains critical issue. It allows collision on proover id in proof.
Example of collision in test_encode_attribute_fail_simple_collision_on_internal_truncate

Also BigNumber::hash_array has unclear side-effect in hash calculation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzyq1j:",,,,,,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,sergey.minaev,,,,,,,,,,"15/Dec/17 10:36 PM;Artemkaaas;Fixed in this PR:
https://github.com/hyperledger/indy-crypto/pull/60;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[anoncreds] Changes in Proof request format,IS-442,24637,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,ashcherbakov,ashcherbakov,01/Dec/17 1:22 AM,18/Dec/17 11:42 PM,28/Oct/23 2:49 AM,18/Dec/17 9:46 PM,,,,,,,,0,,,,,"We need to make a couple of changes in libindy's Proof Request JSON:
1) Rename UUIDs to 'referents'
2) Rename GE to something more human readable
3) Support multiple Issuer DIDs for each requested proof
4) Support multiple Schemas for each requested proof.

All these items will lead to changes in proof request JSON (items 1) and 2) are just some renaming; items 3) and 4) change the structure of the JSON).
We need to be careful to not break the API for someone who already uses it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq1r:",,,,,,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,Artemkaaas,ashcherbakov,gudkov,,,,,,,,,"02/Dec/17 12:10 AM;gudkov;From Daniel: 

> Items 3 and 4 probably need to be done sooner (this sprint? No later than next sprint.) Items 1 and 2 could probably be done any time in December.;;;","08/Dec/17 10:52 PM;gudkov;[~ashcherbakov] Could you review this?;;;","12/Dec/17 5:47 PM;gudkov;[~Artemkaaas] Could you provide the link to PR?;;;","12/Dec/17 5:49 PM;Artemkaaas;Implemented in https://github.com/hyperledger/indy-sdk/pull/401;;;","12/Dec/17 8:25 PM;ashcherbakov;We need to
1) Rename 'GE' to '>='
2) Support specifying multiple issuer DIDs for each individual seq no.;;;","13/Dec/17 9:52 PM;Artemkaaas;PR was updated: [https://github.com/hyperledger/indy-sdk/pull/401];;;","18/Dec/17 5:03 PM;ashcherbakov;I approved it from my side.;;;",,,,,,,,,,,,,,,,,,,,,,,
Change builder for NODE txn,IS-443,24653,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,dsurnin,dsurnin,01/Dec/17 4:47 PM,18/Dec/17 11:42 PM,28/Oct/23 2:49 AM,18/Dec/17 9:33 PM,,,,,,,,0,,,,,"Builder for NODE txn assumes the DATA parameter contains all the fields.

For the case only one node parameter changed It should allow DATA to contain only some of the fields.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq27:",,,,,,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dsurnin,gudkov,,,,,,,,,,"13/Dec/17 11:30 PM;gudkov;Was merged with these changes https://github.com/hyperledger/indy-sdk/pull/395;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Two consecutive call to pool refresh failed with ErrorCode.CommonIOError,IS-444,24654,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dsurnin,dsurnin,dsurnin,01/Dec/17 5:54 PM,16/Jan/18 11:13 PM,28/Oct/23 2:49 AM,16/Jan/18 4:02 PM,,,,,,,,0,,,,,"(using python wrapper)

run pool of 4 nodes

change bls key of one node to wrong key

call pool refresh - call runs ok and returns None

call pool refresh - call returns ErrorCode.CommonIOError

 

Update: the problem looks wider, if one node has bad bls key connect to pool is not happens ",,,,,,,,,,,,,,,INDY-992,,,,,,,,,,,,,,,,,IS-403,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrpr:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dsurnin,sergey.minaev,,,,,,,,,,"11/Jan/18 11:28 PM;sergey.minaev;This particular error scenario is fixed during fixes in libindy crypto and building actual nodes state.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception raised during pool_close if pending submit_request presented,IS-445,24716,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dsurnin,dsurnin,dsurnin,04/Dec/17 8:55 PM,16/Jan/18 11:13 PM,28/Oct/23 2:49 AM,16/Jan/18 4:02 PM,,,,,,,,0,,,,,"run pool

send request to pool

pool sends REQACK only without REPLY

close pool handle

Exception raised",,,,,,,,,,,,,,,INDY-1001,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrpz:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dsurnin,sergey.minaev,,,,,,,,,,"04/Dec/17 8:58 PM;sergey.minaev;Sounds like internal `flush requests` called twice.;;;","04/Dec/17 8:59 PM;dsurnin;Some logs

2017-12-04 12:59:41,884 | DEBUG | authenticator.py ( 37) | stop | Stopping ZAP at b'inproc://zeromq.zap.1'
2017-12-04 12:59:41,884 | INFO | zstack.py ( 331) | stop | stack Alpha stopped
2017-12-04 12:59:41,884 | INFO | zstack.py ( 327) | stop | stack AlphaC closing its listener
2017-12-04 12:59:41,884 | DEBUG | zstack.py ( 360) | close | AlphaC starting to disconnect remotes
2017-12-04 12:59:41,884 | DEBUG | authenticator.py ( 37) | stop | Stopping ZAP at b'inproc://zeromq.zap.2'
2017-12-04 12:59:41,884 | INFO | zstack.py ( 331) | stop | stack AlphaC stopped
2017-12-04 12:59:41,884 | DEBUG | node.py ( 811) | closeAllKVStores | Alpha closing level dbs
2017-12-04 12:59:41,885 | DEBUG | motor.py ( 34) | set_status | Alpha changing status from stopping to stopped
2017-12-04 12:59:41,885 | INFO | looper.py ( 272) | shutdown | Looper shutting down now...
2017-12-04 12:59:41,885 | INFO | motor.py ( 63) | stop | Alpha is already stopped
2017-12-04 12:59:41,885 | INFO | motor.py ( 63) | stop | Beta is already stopped
2017-12-04 12:59:41,886 | INFO | motor.py ( 63) | stop | Gamma is already stopped
2017-12-04 12:59:41,886 | INFO | motor.py ( 63) | stop | Delta is already stopped
2017-12-04 12:59:41,886 | INFO | looper.py ( 279) | shutdown | Looper shut down in 0.000 seconds.
 INFO|indy::commands | src/commands/mod.rs:115 | WalletCommand command received
 INFO|wallet_command_executor | src/commands/wallet.rs:86 | Close command received
 INFO|indy::commands | src/commands/mod.rs:107 | PoolCommand command received
 INFO|pool_command_executor | src/commands/pool.rs:81 | Close command received
 INFO|poolpool_name_XaQMpuCPVTjqk | src/services/pool/mod.rs:924 | Drop started
 INFO|poolpool_name_XaQMpuCPVTjqk | src/services/pool/mod.rs:932 | Drop wait worker
TRACE|indy::services::pool | src/services/pool/mod.rs:764 | zmq poll 1
TRACE|indy::services::pool | src/services/pool/mod.rs:781 | cmd [[101, 120, 105, 116], [5, 0, 0, 0]]
TRACE|indy::services::pool | src/services/pool/mod.rs:715 | process_actions - Pool work terminated
DEBUG|zmq_pw |/root/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-pw-0.9.8/src/lib.rs:460 | socket dropped
DEBUG|zmq_pw |/root/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-pw-0.9.8/src/lib.rs:460 | socket dropped
DEBUG|zmq_pw |/root/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-pw-0.9.8/src/lib.rs:460 | socket dropped
DEBUG|zmq_pw |/root/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-pw-0.9.8/src/lib.rs:460 | socket dropped
DEBUG|zmq_pw |/root/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-pw-0.9.8/src/lib.rs:460 | socket dropped
DEBUG|zmq_pw |/root/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-pw-0.9.8/src/lib.rs:367 | context dropped
 INFO|poolpool_name_XaQMpuCPVTjqk | src/services/pool/mod.rs:935 | Drop finished
DEBUG|zmq_pw |/root/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-pw-0.9.8/src/lib.rs:460 | socket dropped
DEBUG|zmq_pw |/root/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-pw-0.9.8/src/lib.rs:367 | context dropped
 INFO|indy::commands | src/commands/mod.rs:103 | LedgerCommand command received
 INFO|ledger_command_executor | src/commands/ledger.rs:142 | SubmitAck command received
ERROR|indy::errors::indy | src/errors/indy.rs:63 | Casting error to ErrorCode: Pool work terminated
 INFO|indy::commands | src/commands/mod.rs:107 | PoolCommand command received
 INFO|pool_command_executor | src/commands/pool.rs:85 | CloseAck command received
 INFO|indy::commands | src/commands/mod.rs:103 | LedgerCommand command received
 INFO|ledger_command_executor | src/commands/ledger.rs:142 | SubmitAck command received
thread '<unnamed>' panicked at 'Expect callback to process ack command', /checkout/src/libcore/option.rs:819:4
note: Run with `RUST_BACKTRACE=1` for a backtrace.
=========================== 1 passed in 3.82 seconds ===========================
2017-12-04 12:59:41,923 | ERROR | base_events.py (1258) | default_exception_handler | Task exception was never retrieved
future: <Task finished coro=<submit_request() done, defined at /home/tmh/evernym/indy-sdk/wrappers/python/indy/ledger.py:55> exception=IndyError(<ErrorCode.PoolLedgerTerminated: 302>,)>
Traceback (most recent call last):
 File ""/usr/lib/python3.5/asyncio/tasks.py"", line 241, in _step
 result = coro.throw(exc)
 File ""/home/tmh/evernym/indy-sdk/wrappers/python/indy/ledger.py"", line 81, in submit_request
 submit_request.cb)
 File ""/usr/lib/python3.5/asyncio/futures.py"", line 380, in __iter__
 yield self # This tells Task to wait for completion.
 File ""/usr/lib/python3.5/asyncio/tasks.py"", line 304, in _wakeup
 future.result()
 File ""/usr/lib/python3.5/asyncio/futures.py"", line 293, in result
 raise self._exception
indy.error.IndyError: ErrorCode.PoolLedgerTerminated;;;","12/Jan/18 12:45 AM;sergey.minaev;PR fix: https://github.com/hyperledger/indy-sdk/pull/473
Reason: double flush pending request results in command thread failture
Note: new integration test for this scenario has been added: indy_close_pool_ledger_works_for_pending_request;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Interoperability tests recovering(Libindy anoncreds with Python anoncreds).,IS-446,24769,,Task,Complete,IS,Indy SDK,software,resplin,,,Low,Invalid,Artemkaaas,Artemkaaas,Artemkaaas,05/Dec/17 10:35 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzypgf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,SeanBohan_Sovrin,,,,,,,,,"13/Jan/18 7:15 AM;SeanBohan_Sovrin;Please add more info in description field;;;","26/Jul/18 6:38 PM;gudkov;This issue is outdated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - autocompletion,IS-447,24818,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,06/Dec/17 9:44 PM,20/Dec/17 11:27 PM,28/Oct/23 2:49 AM,20/Dec/17 11:23 PM,,,,,,,,0,,,,,"The following autocompletion should be implemented in CLI:
 # Command group name completion
 # Command name completion
 # Command param name completion
 # Command param value completion:
 # Wallet name
 # Pool config name
 # My DIDs
 # Filesystem path",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq13:",,,,,,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,krw910,ozheregelya,sergey.minaev,,,,,,,,"13/Dec/17 11:47 PM;gudkov;I added:

- Command group name completion
- Command name completion
- Command param name completion

According to param completion after discussion with QA we decided to postpone this as it is expensive.

PR: https://github.com/hyperledger/indy-sdk/pull/424;;;","18/Dec/17 11:29 PM;gudkov;Additional fixes were merged in [https://github.com/hyperledger/indy-sdk/pull/435.]

Now it is ready for validate.;;;","19/Dec/17 5:32 AM;krw910;Blocked due to installation issues in IS-382;;;","19/Dec/17 6:38 PM;sergey.minaev;Stable and RC builds aren't released, testing on *master* version is required.;;;","20/Dec/17 11:23 PM;ozheregelya;Version Info:
indy-cli 1.1.1~284

Steps to Validate:
1. Check that autocomplete works for common commands and for group of commands.
2. Check that autocomplete works for subcomands.
3. Check that autocomplete works for parameters names.

Named feature was implemented correctly. Improvements for this feature will be written to separated tickets.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
amcl::ecp::ECP::frombytes panics,IS-448,24766,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dhuseby,dhuseby,dhuseby,05/Dec/17 7:06 PM,18/Dec/17 9:33 PM,28/Oct/23 2:49 AM,18/Dec/17 9:33 PM,,,,,,,,0,,,,,"After fuzzing the bls classes, all of the from_bytes crashes in Genertor, VerKey, SignKey, Signature, and MultiSignature came from bounds check panics in the ECP::frombytes function.  Line 260 assumes that the passed-in slice, b, has a size equal to mb:

{{260     for i in 0..mb \{t[i]=b[i]}}}

Any time mb is not equal to the size of slice b, we get a panic.  This function should do some bounds checking and fail in a more controlled manner when the input slice isn't the correct size.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-449,IS-403,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq2n:",,,,,,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dhuseby,sergey.minaev,,,,,,,,,,"08/Dec/17 1:09 AM;sergey.minaev;This bug was fixed on indy-crypto level (upper amcl library) during IS-403 fixing;;;","08/Dec/17 1:38 AM;sergey.minaev;This bug was fixed in https://github.com/hyperledger/indy-crypto/pull/48
[~dhuseby] Please verify fix at latest master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
amcl::rand::RAND::seed panics,IS-449,24767,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dhuseby,dhuseby,dhuseby,05/Dec/17 7:20 PM,18/Dec/17 9:33 PM,28/Oct/23 2:49 AM,18/Dec/17 9:33 PM,,,,,,,,0,,,,,"Fuzzing SignKey::new takes a slice of bytes to use as a seed.  If the seed slice isn't the correct size, the call to amcl::rand::RAND::seed panics.  Specifically lines 107-110:

107         if rawlen>0 {
108             for i in 0..rawlen {
109                 sh.process(raw[i]);
110             }

This function should do better bounds checking and fail in a more controlled way.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-448,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq2f:",,,,,,LibINDY 17.25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dhuseby,sergey.minaev,,,,,,,,,,"08/Dec/17 1:34 AM;sergey.minaev;PR on GitHub with fix: https://github.com/hyperledger/indy-crypto/pull/57/files;;;","08/Dec/17 1:40 AM;sergey.minaev;Fix merged to master branch https://github.com/hyperledger/indy-crypto/pull/57
[~dhuseby] please verify it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow using pre-computed safe primes for claims issuance development.,IS-450,25300,,Improvement,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,devin-fisher,devin-fisher,12/Dec/17 6:17 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,Creating issuer keys is expensive (time) and really painful during development. It would be nice if there was a way to specify the primes to be used or some other manner that will allow bypassing this expensive search through the prime space for safe primes. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqpb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,devin-fisher,SeanBohan_Sovrin,swcurran,,,,,,,,,"13/Jan/18 7:14 AM;SeanBohan_Sovrin;Unsafe use of the API. This introduces a potential unsafe use of the API. Need to make sure it is only exposed in layers where people know what they are doing

 

Requires further discussion;;;","21/Apr/18 1:21 AM;swcurran;[~SeanBohan_Sovrin] - another issue related to this that is a pain for developers.  Indy-SDK supports the use of Seeds for the creation of the keys associated with a DID, but does not for the keys associated with a Cred Def.  This means that a wallet with only DIDs can be recreated, but as soon as a Cred Def is created, the associated wallet cannot be recreated.  For development, especially on a shared ledger, this is a pain in the butt.  If seeds are to be supported, then make them useful in all places, not just some.

An alternative approach that may soon be available is the ability to backup/restore a wallet and that could be used by developers.  But it seems odd to support seeds in some places but not others.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
POA: Fully qualified DIDs support,IS-451,25708,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,13/Dec/17 4:18 PM,10/Oct/19 9:05 PM,28/Oct/23 2:49 AM,19/Aug/19 10:32 PM,,,,,,,,0,,,,,"*Story*
 As a developer building on top of Indy, I need to be able to use fully qualified DIDs in my code so that I can work with peer DIDs or DIDs from other ledgers.

*Goal*
 * Minimize changes required to Indy Node
 * A configuration parameter exists for the fully qualified DID prefix that is not required when communicating with an Indy ledger.
 * If DIDs returned from the ledger do not contain the DID prefix, it should be added when communicating with applications through the APIs
 * The wallet stores fully qualified DIDs
 * Legacy DIDs in the wallet are handled gracefully
 ** Potential options
 *** Convert legacy DIDs in the wallet to include the prefix
 *** Detect DIDs that do not start ""did:"" and treat these as legacy DIDs that need the prefix
 * Test scripts assume fully qualified DIDs

*Acceptance Criteria*
 * An architecture proposal is prepared
 * The architecture proposal includes a plan for managing DIDs from multiple ledgers in the wallet
 * Issues exist for the remaining work

*Notes*
 * At some point in the future, Aries wallets will contain DIDs from different ledgers. Our current work should move us toward that goal.
 * Original request from Daniel:
{quote}To everybody who is working on functions that accept a DID, either in the ledger, the SDK, the agency, or elsewhere: I would like us to support fully qualified DIDs in the form `did:sov:<value>`, not just `<value>`. If we see just <value>, we can assume the prefix is ""did:sov:"" — and if we see a prefix that isn't ""did:sov:"", we can potentially raise an error about an unsupported DID type. Note that some DID formats may make different assumptions than Sovrin does about the length of a DID, whether it is case-sensitive, etc. We need to get in the habit of thinking of DIDs as being fully qualified. Our sample files should show this. Our wallet APIs should handle it. Etc. This is the foundation for us being able to have a single wallet/agent/agency that supports DIDs from the production Sovrin ledger as well as a test network--and it is the foundation for eventual interop with other ledgers like Bitcoin and Ethereum.

*Requested action item for team leads*: please write tickets to capture work required to support fully qualified DIDs at the minimal level I've described above. Then put them in the backlog so we are at least tracking this effort.

*Requested action item for all devs*: Immediately, stop estimating or writing code that isn't compatible with this fully qualified form.

*Requested action item for QA*: start testing with fully qualified DIDs and log bugs as needed.
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,IS-1330,,IS-605,,,,,IS-1119,IS-1358,IS-1359,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1403,,,,,,,,,,"1|hzwrhj:910sx0900009a",,,,,,Indy SDK 19.16,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,esplinr,gudkov,sergey.minaev,,,,,,,,,"13/Dec/17 4:24 PM;gudkov;Rough scope:

1. DIDs must be stored in the wallet and returned in fully qualified form.
2. Functions that accept DID as input must fullback to ""did:sov"" form if there is no prefix. We already have similar behavior for key types.
3. Tests should use did's in fully qualified form. Also we need to add tests about fullback.
4. Check that CLI is compatible with fully qualified DID's.;;;","17/Aug/18 9:34 PM;gudkov;[~danielhardman] We need to identify how to manage prefix. Not sure that ""sov"" is a good option for the all libindy use cases.;;;","28/Feb/19 5:36 AM;esplinr;I recognize that a complete plan for Fully Qualified DIDs requires better understanding how we plan to manage DIDDocs and relationship state between agents. I want this ticket to provide guidance on how we much support we can add for Fully Qualified DIDs even without answering those bigger questions.

One possible sequence: 
* Update input validation to allow fully qualified DIDs while assuming that they will always be the Sovrin Mainnet ("":sov:"")
* Then make the network slug configurable
* Then finally do the remaining work;;;","30/Jul/19 12:00 AM;esplinr;I updated the description with our current understanding of the requirements.;;;","19/Aug/19 3:42 PM;sergey.minaev;PoA with updated vision would be in IS-1358 and IS-1359;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Ledger API: Support ENC and HASH values in ATTR txn,IS-452,25712,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ashcherbakov,ashcherbakov,ashcherbakov,13/Dec/17 7:49 PM,25/Jan/18 12:44 AM,28/Oct/23 2:49 AM,24/Jan/18 11:33 PM,,,,,,,,0,,,,,Indy SDK now supports only RAW attr in ATTRIB transaction. We need to add support of ENC and HASH attr values.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-57,,,,,,,,,,"1|hzyrlz:",,,,,,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,ashcherbakov,,,,,,,,,,"17/Jan/18 3:10 PM;Artemkaaas; 

Changes: 
 * Supported hash and enc attribute params in ATTRIB transaction. (tests are ignored because of IS-523)

PR:
 *   [https://github.com/hyperledger/indy-sdk/pull/454]

Version:
 - master build #321;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Get Schema don't support anoncred work flow,IS-453,25730,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Invalid,,devin-fisher,devin-fisher,14/Dec/17 7:24 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"The API function indy_verifier_verify_proof requires schema for each claim used in the proof. So the verifier must lookup schema on the ledger. But the proof don't provide sufficient information to look up the schema.

To look up a schema you need the dest and data. The data entry must have the name and version of the schema. So really you need three elements. Dest (a did), Schema name and Schema version. 

If we trace back, in the proof we get schema_seq_no and issuer_did for each claim used in the proof. The two elements are sufficient to retrieve a claim_def. But don't provide any element needed for the schema. (the issuer_did could be the dest if they happen to be the same did but do not have to be and we don't have any way to know if they are). 

If we look at the claim_def there is no schema information except the sequence number in the form of the ref field. But still not helpful in looking up the schema in the ledger.

 

I've logged this ticket in indy-sdk but the solution may require changes to the ledger.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-454,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc6n:",,,,,,LibINDY 17.25,LibINDY 18.01,LibINDY 18.02 CLI +,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,18.06,18.07,EV 18.10 Stability and VC,18.08 Wallets+,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,ashcherbakov,devin-fisher,sergey.minaev,,,,,,,,,"14/Dec/17 7:25 AM;devin-fisher;This will block verity very soon.;;;","14/Dec/17 6:40 PM;sergey.minaev;[~devin-fisher] AFAIK it's possible to retrieve Schema from the ledger only by schema_seq_no via GET_TXN transaction.
[~Artemkaaas] [~ashcherbakov] please correct me, if it's impossible in described workflow.;;;","14/Dec/17 6:57 PM;ashcherbakov;Yes, as of now we return `schema_seq_no` as Schema's ID. And you can get it from the Ledger using `GET_TXN` request.
The only problem with GET_TXN is that it doesn't support State Proofs, so libindy will need f+1 nodes to get result. I think this is not a blocker for Verity, but just a note for future.

If we want to use GET_SCHEMA (which support State Proofs), we need to do the following:
1) Use `(name, version, origin)` instead of `schema_seq_no` in libindy to identify a Schema.
2) Add a validation in indy-node to not allow any changes of existing Schema. So, if one needs to make changes in a Schema, he needs to create a new one with a new Version (or with a new name).

So, I think Verity is not blocked, and can use GET_TXN now.
We can discuss whether we need to support GET_SCHEMA (I think it's worth doing to use the full power of state proofs).;;;","14/Dec/17 7:05 PM;sergey.minaev;[~devin-fisher] I think we can close this ticket. And I will create new task (not a bug) to support future approach of schema identification.;;;","15/Dec/17 2:25 AM;devin-fisher;Yes, this unblocks me and is an acceptable workaround for now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"UX: Support Schema ID as triple (did, name, version)",IS-454,25736,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,sergey.minaev,sergey.minaev,14/Dec/17 7:22 PM,31/Jan/18 7:16 PM,28/Oct/23 2:49 AM,31/Jan/18 7:16 PM,,,,,,,,0,,,,,"As for now, schema is identified by schema_seq_no (or ref) fields in anoncreds workflow. It's better to use triple (did, name, version)",,,,,,,,,,,INDY-1035,,,,,,,,,,,,,,,,IS-453,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-456,,,,,,,,,,"1|hzyrjz:",,,,,,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,gudkov,sergey.minaev,,,,,,,,,"26/Dec/17 2:25 PM;Artemkaaas;Implemented in this PR https://github.com/hyperledger/indy-sdk/pull/450;;;","26/Dec/17 7:14 PM;gudkov;[~ashcherbakov] Could your review the PR from API and usage point of view?;;;","29/Dec/17 9:31 PM;Artemkaaas;Changes: 
 - Replaced usages of schema_seq_no on the triple (name, version, did) as the identifier of a schema.

PR:
 - [https://github.com/hyperledger/indy-sdk/pull/450]

Version:
 - master build #302;;;","25/Jan/18 12:00 AM;gudkov;[~devin-fisher]

Could you validate that you satisfied with this solution?;;;","31/Jan/18 7:16 PM;gudkov;As there is no answer i am doing it to done as solution seems ok for me. Especially in the scope of latest discussions about switching to referencing by seq_no back we can think it done in a good shape for now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Technical debt: Clean up logging,IS-455,25760,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,mgbailey,mgbailey,15/Dec/17 6:31 AM,17/Nov/18 4:37 AM,28/Oct/23 2:49 AM,17/Nov/18 4:36 AM,,,1.6.0,,,,,0,,,,,"The Indy SDK by default logs messages at the INFO level. This, along with other log settings, should be user-configurable, without requiring developer-level techniques. If this is already provided, it should be documented.

In addition, information that is useful only to RUST developers is logged at the INFO level.  Most of this should be logged at DEBUG or TRACE.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1071,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzwyv3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,mgbailey,,,,,,,,,,"16/Dec/17 2:37 AM;mgbailey;After using the RUST_LOG environment variable that [~sergey.minaev] told me of, I was able to surpress the INFO level log messages (most of which should be at the DEBUG) level.  However, I am still getting some apparent debug messages like:

_indy_loop_callback: Function returned (b'NVji6YsYLTK6ozNDzBHyWB', b'CiWo3sYPw4egwWCzqJZMaTkY1mdWetxuTBdsQKHbkYSZ');;;","17/Nov/18 4:37 AM;esplinr;With the release of Indy SDK 1.6, the logging seems better.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
experiential issues for API UX,IS-456,25761,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,SeanBohan_Sovrin,SeanBohan_Sovrin,15/Dec/17 6:48 AM,08/Oct/19 11:05 PM,28/Oct/23 2:49 AM,08/Oct/19 11:05 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-4,,UX Enhancements,Done,,,,,,,,"1|hzy413:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,SeanBohan_Sovrin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
INDY SDK hangs on ledger.sign_and_submit_request,IS-457,25764,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,mgbailey,mgbailey,mgbailey,15/Dec/17 8:25 AM,25/Jan/18 12:44 AM,28/Oct/23 2:49 AM,24/Jan/18 11:58 PM,,,,,,,,0,,,,,"When trying to send a NYM transaction to the STN, the Indy SDK hangs.  This is a more complex ledger than others we have tested against, with nodes that have joined and left the pool over time.  

A log file is attached.  

It will probably be necessary for an engineer to debug this against the STN. The engineer should contact [~mgbailey] to get credentials for a Trust Anchor on the network for debugging.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-407,INDY-1069,,,,IS-123,,,,,,"15/Dec/17 8:25 AM;mgbailey;NYM2Ledger.py;https://jira.hyperledger.org/secure/attachment/13717/NYM2Ledger.py","19/Dec/17 3:20 AM;sergey.minaev;log_stn_nym_1;https://jira.hyperledger.org/secure/attachment/13915/log_stn_nym_1","19/Dec/17 3:20 AM;sergey.minaev;log_stn_nym_2;https://jira.hyperledger.org/secure/attachment/13916/log_stn_nym_2","19/Dec/17 3:20 AM;sergey.minaev;log_stn_nym_3;https://jira.hyperledger.org/secure/attachment/13917/log_stn_nym_3","19/Dec/17 3:20 AM;sergey.minaev;log_stn_nym_4;https://jira.hyperledger.org/secure/attachment/13918/log_stn_nym_4","19/Dec/17 3:20 AM;sergey.minaev;log_stn_nym_4_m;https://jira.hyperledger.org/secure/attachment/13919/log_stn_nym_4_m","19/Dec/17 3:15 AM;mgbailey;sendNymLog.txt;https://jira.hyperledger.org/secure/attachment/13914/sendNymLog.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrnj:",,,,,,LibINDY 17.25,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mgbailey,sergey.minaev,,,,,,,,,,"18/Dec/17 10:02 PM;sergey.minaev;[~mgbailey] Could you specify versions of libindy and pool, please?;;;","19/Dec/17 1:14 AM;mgbailey;[~sergey.minaev], for the pool, apt is pointed at the rc branch, and the indy-node version is 1.2.44.  For the client, the apt is pointed at the stable branch, and the indy-node version is 1.1.0.;;;","19/Dec/17 3:40 AM;sergey.minaev;Attached file  [^log_stn_nym_4_m]  contains logs of my attempt to reproduce the issue. It illustrates different problem from client (indy-sdk) point of view but with high probability initial error and reproduced one has same ""root"" reason: problems with pool synchronization.
As for current stable/rc of indy-sdk (1.1.0 or 1.1.1) same behavior of Nodes may results in sdk hangs. It fixed in master branch during IS-123
In the next release (or in the current master) this pool behavior should results in thrown error PoolLedgerTimeout. We expect new RC of indy-sdk in this week.
It's possible to migrate timeouts changes from master to stable as hotfix. But I don't recommend this option because there is high risk to re-implement existing functionality for legacy code.

Also State Proof functionality can resolve this problem.

[~mgbailey] I think we can close this bug.

[~ashcherbakov] please re-view  [^log_stn_nym_4_m] log. It's not clear for me, how listed responses from some nodes are possible in theory.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Indy-SDK based CLI - pool config and pool upgrade transactions support,IS-458,26134,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,gudkov,gudkov,18/Dec/17 9:29 PM,16/Feb/18 8:21 PM,28/Oct/23 2:49 AM,23/Dec/17 12:24 AM,,,,,,,,0,,,,,"Implement Indy-SDK based CLI based on design provided on IS-380

This task scope:
 - ledger \{poolUpgrade}
 - ledger  \{poolConfig}",,,,,,,,,,,,,,,,,,,,,IS-270,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrs7:",,,,,,LibINDY 17.25,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,VladimirWork,,,,,,,,,"20/Dec/17 11:04 PM;Artemkaaas;Implemented in this PR: [https://github.com/hyperledger/indy-sdk/pull/442];;;","21/Dec/17 9:50 PM;Artemkaaas;Changes: 
- Builders for POOL_CONFIG and POOL_UPGRADE transaction were added to Ledger API

PR:
- [https://github.com/hyperledger/indy-sdk/pull/442
]
Version:
- master build #291

 ;;;","23/Dec/17 12:23 AM;VladimirWork;Build Info:
indy-cli master build #295

Commands checked:
ledger pool-config
ledger pool-upgrade

Actual Results:
Ledger commands work. Improvements and bugs will be reported as separate tickets.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
As an Issuer I need to be able to distribute a TAILS file to credential holders ,IS-462,26177,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,SeanBohan_Sovrin,SeanBohan_Sovrin,20/Dec/17 7:16 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-555,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzzc6v:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,18.06,18.07,EV 18.10 Stability and VC,18.08 Wallets+,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,,,,SeanBohan_Sovrin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a Credential Holder I need to be able to request a TAILS file from an Issuer,IS-463,26178,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,SeanBohan_Sovrin,SeanBohan_Sovrin,20/Dec/17 7:16 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-555,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzzc73:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,18.06,18.07,EV 18.10 Stability and VC,18.08 Wallets+,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,,,,SeanBohan_Sovrin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Revocation: Revocation transactions support,IS-464,26179,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,SeanBohan_Sovrin,SeanBohan_Sovrin,20/Dec/17 7:16 AM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,20/Apr/18 12:15 AM,,,1.4,,,,,0,,,,,"Support new transaction for Revocation: CRED_DEF, REVOC_REG_DEF, REVOC_REG",,,,,,,,,,,IS-515,INDY-1136,INDY-1134,INDY-1137,IS-465,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzz4zb:",,,,,,LibINDY 18.04 Revocation,18.05,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,SeanBohan_Sovrin,,,,,,,,,"27/Feb/18 5:20 PM;Artemkaaas;Builders for REVOC_REG_DEF and REVOC_REG_ENTRY were implemented in PR: [https://github.com/hyperledger/indy-sdk/pull/542].
 But there are no tests for them and there are no other transaction builders.;;;","05/Apr/18 4:26 PM;Artemkaaas;Builders for all revocation transactions were implemented in this PR: https://github.com/hyperledger/indy-sdk/pull/550;;;","20/Apr/18 12:15 AM;gudkov;Demo tests looks fine with new transactions builders.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy SDK will properly validate Revocation Registry Objects and update them,IS-465,26180,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,SeanBohan_Sovrin,SeanBohan_Sovrin,20/Dec/17 7:17 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,IS-464,,,,,,,,,,,,,,IS-555,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzzc7b:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,18.06,18.07,EV 18.10 Stability and VC,18.08 Wallets+,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,,,,SeanBohan_Sovrin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stories about Revocation,IS-466,26181,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,SeanBohan_Sovrin,SeanBohan_Sovrin,20/Dec/17 7:17 AM,08/Oct/19 11:04 PM,28/Oct/23 2:49 AM,28/Sep/18 6:55 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-2,,Revocation,Done,,,,,,,,"1|hzy407:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,SeanBohan_Sovrin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move transaction signature serializator to an external library,IS-467,26196,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,Artemkaaas,Artemkaaas,20/Dec/17 5:36 PM,11/Oct/19 9:44 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwywf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Pool creation error due to empty lines in pool genesis file,IS-468,26212,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,VladimirWork,VladimirWork,20/Dec/17 10:15 PM,15/Jan/18 11:46 PM,28/Oct/23 2:49 AM,11/Jan/18 5:17 AM,,,,,,,,0,,,,,"Overview:
Pool creation error due to empty lines in pool genesis file.

Build Info:
indy-cli master

Steps to Reproduce:
1. Add empty line between json lines or at end of pool_transactions_genesis file.
2. Run indy-cli.
3. Run `pool create pool0 gen_txn_file=~/pool_transactions_genesis`.

Actual Results:
bq. indy> pool create pool0 gen_txn_file=/var/lib/indy/sandbox/pool_transactions_genesis
bq. thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: ErrorImpl { code: EofWhileParsingValue, line: 1, column: 0 }', /checkout/src/libcore/result.rs:906:4
bq. note: Run with `RUST_BACKTRACE=1` for a backtrace.
bq. thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Timeout', /checkout/src/libcore/result.rs:906:4
bq. Goodbye...

Expected Results:
libindy (and indy-cli) should handle special symbols (like empty lines, spaces, etc) in genesis files correctly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Dec/17 10:14 PM;VladimirWork;genesis1.txt;https://jira.hyperledger.org/secure/attachment/13934/genesis1.txt","20/Dec/17 10:14 PM;VladimirWork;genesis2.txt;https://jira.hyperledger.org/secure/attachment/13933/genesis2.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrqn:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,ozheregelya,VladimirWork,,,,,,,,"26/Dec/17 3:50 PM;Artemkaaas;Implemented in this PR: https://github.com/hyperledger/indy-sdk/pull/452;;;","27/Dec/17 8:15 PM;Artemkaaas;Changes: 
-  Skip empty lines in genesis_transaction_file.

PR:
 - [https://github.com/hyperledger/indy-sdk/pull/452]

Version:
 - master build #298;;;","29/Dec/17 10:42 PM;gudkov;[~ozheregelya]

Could you validate this?;;;","11/Jan/18 5:17 AM;ozheregelya;indy-cli 1.1.1~306
libindy 1.1.1~306

Steps to Validate:
1. Create genesis file with spaces/empty lines/invalid syntax.
2. Try to create pool using this file.

Actual Results:
Pool successfully created in case of spaces in the file. Error message ""Pool genesis file is invalid or does not exist."" appears in case of invalid syntax.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
GSG: Design,IS-469,26213,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,SeanBohan_Sovrin,SeanBohan_Sovrin,20/Dec/17 11:38 PM,31/Jan/18 7:25 PM,28/Oct/23 2:49 AM,31/Jan/18 7:25 PM,,,,,,,,0,,,,,"We need to create PoA for Indy SDK based GSG. I expect the following:

* Common approach description
* Sequence diagram fro GSG scenario",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-472,,,,,,,,,,"1|hzyrjr:",,,,,,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,SeanBohan_Sovrin,,,,,,,,,,"29/Dec/17 9:33 PM;gudkov;Proposed PoA:

1. Use scenario adopted to Indy SDK call.
 2. The proposed scenario is available as sequence diagram in this PR [https://github.com/hyperledger/indy-sdk/pull/458]. Each arrow corresponds to libindy call in the most cases.
 3. We added 2 new actors Sovrin Steward (to get Trust Anchors) and Government (to post claims schemes).
 4. The following artifacts will be provided:
  - Scenario will be implemented as complex well documented test for python wrapper. We will port the to to libindy and all wrappers later.
  - There will be GSG as markdown document in doc/getting-started folder of Indy SDK repo. It will include code snippets from python test.
  - GSG will be also available as Jupyter document for IPhyton kernel. It will be the same as markdown version, but code snippets will be available in code cells to allow code execution during GSG reading.
  - There will be ""getting-started"" docker file with:
    - Indy Pool
    - libindy and python wrapper
    - Jupyther with IPhyton kernel
    It will allow to get environment for GSG execution in one simple command.
5. We plan to skip network communication details and transfer messages by just moving values through notebook code cells or python variables. Messages will be authcrypted or anoncrypted similar way to real agents.;;;","29/Dec/17 9:35 PM;gudkov;[~nage]

Could you validate the proposed approach?;;;","31/Jan/18 7:25 PM;gudkov;As there is no answer for a long time i am moving this ticket to done as i am satisfied with current solutions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"CLI: Add ""Example"" section to indy-cli help",IS-470,26229,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,VladimirWork,VladimirWork,21/Dec/17 6:20 PM,15/Jan/18 11:46 PM,28/Oct/23 2:49 AM,25/Dec/17 7:13 PM,,,,,,,,0,,,,,"We need to add ""Example"" section (like in old CLI) to single command help to show working example of this command with actual parameters/quotes/brackets/etc usage because ""Usage"" and ""Parameters are"" sections are not enough to build valid command in some cases.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrrz:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,VladimirWork,,,,,,,,,"22/Dec/17 7:04 PM;Artemkaaas;Implemented in this PR https://github.com/hyperledger/indy-sdk/pull/446;;;","22/Dec/17 11:04 PM;Artemkaaas;Changes: 
- Added `Examples` section in Cli help command.

PR:
- [https://github.com/hyperledger/indy-sdk/pull/446]


Version:
- master build #295

Risk:
- Low;;;","22/Dec/17 11:40 PM;gudkov;[~VladimirWork] Could you validate the changes?;;;","25/Dec/17 7:13 PM;VladimirWork;Build Info:
indy-cli master build #295

Actual Results:
All commands with parameters (so there is no ""Example"" section for list/disconnect/close commands because it can be used ""Usage"" section as an example) have ""Examples"" section.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: nym-get command returns incorrect role and alias,IS-471,26230,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,VladimirWork,VladimirWork,21/Dec/17 6:37 PM,15/Jan/18 11:46 PM,28/Oct/23 2:49 AM,11/Jan/18 5:40 AM,,,,,,,,0,,,,,"Overview:
nym-get command returns incorrect role (number instead of string) and alias (null instead of string).

Build Info:
indy-cli master

Steps to Reproduce:
1. Add nym with all possible parameters:
`ledger nym did=2fyKjNLV6foqDxoEbBiQhY verkey=urSwH7znmSfnf2eYbfVaj4R7XXw9mRMrbNpko8Kxw8R alias=custom_alias role=TRUST_ANCHOR`.
2. Get this nym:
`ledger get-nym did=2fyKjNLV6foqDxoEbBiQhY`.

Actual Results:
Following NYM has been received: 
submitter:V4SGRU86Z58d6TV7PBUe6f | did:2fyKjNLV6foqDxoEbBiQhY | role:101 | alias:null | verkey:urSwH7znmSfnf2eYbfVaj4R7XXw9mRMrbNpko8Kxw8R

Expected Results:
Following NYM has been received: 
submitter:V4SGRU86Z58d6TV7PBUe6f | did:2fyKjNLV6foqDxoEbBiQhY | role:TRUST_ANCHOR | alias:custom_alias | verkey:urSwH7znmSfnf2eYbfVaj4R7XXw9mRMrbNpko8Kxw8R",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/18 5:39 AM;ozheregelya;Screenshot_2018-01-10_20-39-04.png;https://jira.hyperledger.org/secure/attachment/14125/Screenshot_2018-01-10_20-39-04.png","21/Dec/17 6:37 PM;VladimirWork;indy-cli_get-nym.PNG;https://jira.hyperledger.org/secure/attachment/13935/indy-cli_get-nym.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrqv:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,ozheregelya,VladimirWork,,,,,,,,"26/Dec/17 4:59 PM;Artemkaaas;Implemented in this PR:https://github.com/hyperledger/indy-sdk/pull/453;;;","27/Dec/17 8:13 PM;Artemkaaas;Changes: 
-  Deleted alias from send nym Cli command. Corrected role output in get-nym response.

PR:
 - [https://github.com/hyperledger/indy-sdk/pull/453]

Version:
 - master build #297

Risk:
- Low;;;","29/Dec/17 10:41 PM;gudkov;[~ozheregelya]

Could you validate this?;;;","11/Jan/18 5:40 AM;ozheregelya;indy-cli 1.1.1~306
libindy 1.1.1~306

Steps to Validate:
1. Send nym transaction for any nym.
2. Send get for this transaction.

Actual Results:
Output is correct:
!Screenshot_2018-01-10_20-39-04.png|thumbnail!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Getting Started Tutorial,IS-472,26231,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,21/Dec/17 6:54 PM,08/Oct/19 10:59 PM,28/Oct/23 2:49 AM,20/Sep/19 11:43 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-3,,GSG,Done,,,,,,,,"1|hzy3wv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: get-schema command should return sequence number of schema,IS-473,26233,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,VladimirWork,VladimirWork,21/Dec/17 7:41 PM,15/Jan/18 11:46 PM,28/Oct/23 2:49 AM,11/Jan/18 5:44 AM,,,,,,,,0,,,,,"Overview:
get-schema command should return sequence number of schema because it is used in claim-def and get-claim-def commands.

Build Info:
indy-cli master

Steps to Reproduce:
1. Add schema:
`ledger schema name=myschema version=1.0.0 attr_names=one,two`.
2. Get this schema:
`ledger get-schema did=V4SGRU86Z58d6TV7PBUe6f name=myschema version=1.0.0`.

Actual Results:
There is no sequence number in responce:

bq. Following Schema has been received: ""
bq. name:myschema | version:1.0.0 | attr_names:{""two"", ""one""} | origin:null""

Also is it ok that origin value is `null`?

Expected Results:
get-schema command should return sequence number of schema because it is used in claim-def and get-claim-def commands.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/18 5:43 AM;ozheregelya;Screenshot_2018-01-10_20-42-00.png;https://jira.hyperledger.org/secure/attachment/14126/Screenshot_2018-01-10_20-42-00.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrr3:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,ozheregelya,VladimirWork,,,,,,,,"26/Dec/17 2:54 PM;Artemkaaas;Implemented in this PR: https://github.com/hyperledger/indy-sdk/pull/451;;;","27/Dec/17 8:17 PM;Artemkaaas;Changes: 
-  Added seq_no to get-schema output.

PR:
 - [https://github.com/hyperledger/indy-sdk/pull/452]

Version:
 - master build #299;;;","29/Dec/17 10:40 PM;gudkov;[~VladimirWork]
Could you validate this?;;;","11/Jan/18 5:43 AM;ozheregelya;indy-cli 1.1.1~306
libindy 1.1.1~306

Steps to Validate:
1. Add schema:
`ledger schema name=myschema version=1.0.0 attr_names=one,two`.
2. Get this schema:
`ledger get-schema did=V4SGRU86Z58d6TV7PBUe6f name=myschema version=1.0.0`.

Actual Results:
Output is correct:
!Screenshot_2018-01-10_20-42-00.png|thumbnail!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Revocation: Indy Crypto API design,IS-474,26235,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,21/Dec/17 8:32 PM,14/Feb/18 11:19 PM,28/Oct/23 2:49 AM,14/Feb/18 11:18 PM,,,,,,,,0,,,,,"We need to design new Indy Crypto API that will solve revocation related problems we have now:

1. Compatibility with ledger entities structure
2. Ability to re-calculate witness data on cloud agent side
3. Ability to work with big tails (more than RAM size) through pluggable access interface",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzwu6n:",,,,,,LibINDY 18.02 CLI +,LibIndy 18.03,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,SeanBohan_Sovrin,,,,,,,,,,"17/Jan/18 7:09 AM;SeanBohan_Sovrin;[~gudkov] - check in with Nathan for product requirements

 ;;;","14/Feb/18 11:06 PM;gudkov;[~sergey.minaev] The link to PR is required when you move ticket to Review;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
GSG: Environment preparation,IS-475,26238,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,21/Dec/17 9:49 PM,18/Jan/18 6:18 PM,28/Oct/23 2:49 AM,18/Jan/18 6:18 PM,,,,,,,,0,,,,,"To execute GSG we need Jupyter Notebook enthronement and Indy Pool. We need to have infrastructure for simple Jupyter and Indy Pool deployment. 

I see it as docker image that executes pool and Jupyter.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-472,,,,,,,,,,"1|hzwuxb:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"16/Jan/18 11:04 PM;Artemkaaas;Implemented in: https://github.com/hyperledger/indy-sdk/pull/483;;;","17/Jan/18 3:05 PM;Artemkaaas;Changes: 
 -   Created docker and docker-compose files to run Libindy Getting-Started python test in Jupyter. 

PR:
 *   [https://github.com/hyperledger/indy-sdk/pull/483]

Version:
 - master build #321;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
GSG: Code snippets,IS-476,26239,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,21/Dec/17 9:52 PM,17/Jan/18 9:44 PM,28/Oct/23 2:49 AM,17/Jan/18 9:44 PM,,,,,,,,0,,,,,We need to prepare Python code snippets for each GSG step.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-472,,,,,,,,,,"1|hzwuxj:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"16/Jan/18 6:30 PM;Artemkaaas;Created Getting-Started test in this PR: https://github.com/hyperledger/indy-sdk/pull/478;;;","17/Jan/18 3:01 PM;Artemkaaas;Changes: 
 -   Added getting_started test to python sample project

PR:
 *   [https://github.com/hyperledger/indy-sdk/pull/478]

Version:
 - master build #322;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
GSG: GSG adoption to new scenario and code snippets,IS-477,26240,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,21/Dec/17 9:59 PM,28/Feb/18 3:47 AM,28/Oct/23 2:49 AM,27/Feb/18 9:20 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-472,,,,,,,,,,"1|hzyv2f:",,,,,,LibINDY 18.01,LibINDY 18.02 CLI +,LibIndy 18.03,LibINDY 18.04 Revocation,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,gudkov,ozheregelya,panickervinod,pimotte,zhigunenko.dsr,,,,,,"01/Feb/18 4:51 PM;Artemkaaas;Implemented in: https://github.com/hyperledger/indy-sdk/pull/508;;;","08/Feb/18 7:55 PM;gudkov;Available in master as [https://github.com/hyperledger/indy-sdk/blob/master/doc/getting-started/getting-started.md]

 

[~ozheregelya] [~zhigunenko.dsr] 

Could you validate this? At least we need to be sure that text is understandable and there are no typos.;;;","08/Feb/18 10:07 PM;pimotte;Couple of comments:

 

- In general, the onboarding of alice is not really explained.

-  At ""Alice gets a Transcript"", the concept of schema key is introduced, but not explained.

- At ""Alice gets a Transcript"", 'transcript_claim_offer['transcript_claim_offer']['name']' should have 'schema_key' as argument, rather than 'transcript_claim_offer'

- small typo at the beginning of the Getting Verinym section: ""created early Faber DID"",  should probably be something like ""the Faber DID created earlier""?;;;","08/Feb/18 11:23 PM;ozheregelya;Following things should be validated in scope of this ticket:
 1. Text in https://github.com/hyperledger/indy-sdk/blob/master/doc/getting-started/getting-started.md
    1.1 validate for typos and mistakes
     1.2 validate that new GSG covers old GSG
     1.3 check that code in GSG accords to the code in the [script|https://github.com/hyperledger/indy-sdk/blob/master/samples/python/src/getting_started.py].
    1.4 check hyperlinks in the text.
2. Run the [script|https://github.com/hyperledger/indy-sdk/blob/master/samples/python/src/getting_started.py].
 3. Setup environment and run getting_started script using Jupyter: [https://github.com/hyperledger/indy-sdk/blob/master/doc/getting-started/run-getting-started.md];;;","22/Feb/18 12:07 AM;zhigunenko.dsr;*Environment:*
indy-sdk commit 0dad764545291bbae70776e1e5fe35e4332c7c5b

*Results:*
1.1 Typos and mistakes
""comparision"" should be replaced by ""comparison"" (numerous entries in getting-started.md and Jupiter script output)
""--"" should be replaced by ""—"" (em dash) (getting-started.md)
Line 92: _json_ should be _JSON_ (only in this paragraph)
Line 92: _"" Steward Agent_ should be _# Steward Agent_
""Sentd"" (3 entries in Jupiter script)

1.2 new GSG covers old GSG - OK

1.3 check that code in GSG accords to the code in the script - OK

1.4 Hyperlinks in the text
""Contents"" - ""Step 4"" - link should be https://github.com/hyperledger/indy-sdk/blob/master/doc/getting-started/getting-started.md#step-4-onboarding-faber-acme-thrift-and-government-by-steward
""Contents"" - ""Getting the Verinym"" - link should be https://github.com/hyperledger/indy-sdk/blob/master/doc/getting-started/getting-started.md#getting-verinym

2. Run the script - OK

3. Setup environment and run GSG using Jupyter - _indy_pool_ logs leaks into _docker-compose_ output;;;","22/Feb/18 3:45 PM;Artemkaaas;Fixed review comments in PR: https://github.com/hyperledger/indy-sdk/pull/543;;;","27/Feb/18 9:20 PM;zhigunenko.dsr;Final fixes in PR: https://github.com/hyperledger/indy-sdk/pull/547;;;",,,,,,,,,,,,,,,,,,,,,,,
CLI: Unclear error messages,IS-478,26251,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,,ozheregelya,ozheregelya,22/Dec/17 2:35 AM,24/Jan/18 4:59 PM,28/Oct/23 2:49 AM,23/Jan/18 8:38 AM,,,,,,,,0,,,,," 
||Case||Current Message||Expected message||Ver.||Fixed||
|1. Sending _*ledger nym*_ command to the pool incompatible with current wallet.|Pool handle ""4"" invalid for wallet handle ""2""|Wallet ""<wallet_name>"" is incompatible with pool ""<pool_name>"".|284| 304 (/)|
|2. Sending *_ledger nym_* command with wrong permissions (identity owner tries to write new TRUSTEE)|Invalid transaction|<current_did_role> cannot add <new_did_role>|284| 304 (x)
  IS-529|
|3. Sending *_wallet create_* command with pool_name parameter only|No required ""pool_name"" parameter present|No required ""name"" parameter present|284| IS-510|
|4. Sending *_wallet create_* command with pool_name and name parameters (*in this sequence*)|""name"" parameter presented multiple times|_there should be no error, because all parameters are explicitly named and present_|284| IS-510|
| 5. Attempt to perform *pool delete* command for currently connected pool|Indy SDK error occurred CommonInvalidState|Connected pool cannot be deleted. Please disconnect first. |297| 304 (/)|
| 6. Attempt to perform *pool connect* to not existing pool|Indy SDK error occurred PoolLedgerTerminated|Pool ""<pool_name>"" does not exist.|297| 304 (x)
  IS-529|
| 7. Wrong path in gen_txn_file parameter in *pool create* command|Indy SDK error occurred CommonIOError|Pool genesis file is invalid or does not exist.|297| 304 (/)|
| 8. Attempt to perform *pool delete* for not existing pool|Indy SDK error occurred CommonIOError |Pool ""<pool_name>"" does not exist. |297| 304 (/)|
| 9 (very minor). Unclear error when CLI can't catch up (for example attempt to perform *pool connect* with wrong genesis file like in INDY-802)|Indy SDK error occurred PoolLedgerTerminated | |297| |
| 10. Wrong symbols in did argument of *did new* command:
 did new did=V4SGRU86Z58d6TV7PBUe60| Indy SDK error occurred CommonInvalidStructure|Invalid DID format|297| IS-511 |
| 11. Incorrect parameters length
  ledger nym did=9sKV7grR1BUE29mG2Fm213 verkey=~VsKV7grR1BUE29mG2Fm2
  ledger nym did=VsKV7grR1BUE29mG2Fm2 verkey=~VsKV7grR1BUE29mG2Fm2kX
  ledger get-nym did=VsKV7grR1BUE29mG2Fm2
  
 case is not actual for did new because of -----IS-498-----|Indy SDK error occurred UnknownCryptoTypeError |Invalid length of <parameter-name> parameter. <requirements-for-parameter length>.
 _If it is difficult to show requirements for parameter in error message, it will be enough to_ _specify only wrong parameter and_ _add information with requirements to help._|306|IS-511 |
| 12. Invalid parameters values:
  did new did=VsKV7grR1BUE29mG2Fm2k0
  ledger nym did=VsKV7grR1BUE29mG2Fm2k0
  ledger nym did=VsKV7grR1BUE29mG2Fm2k9 role=adsfddsaf
  ledger custom \{""reqId"":1,""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":\{""type"":""105"",""dest"":V4SGRU86Z58d6TV7PBUe6f}}
  ledger get-nym did=VsKV7grR1BUE29mG2Fm2k0
  
 ...etc.| Wrong command params|Wrong command parameter <parameter-name>. It should be <parameter-requirements>.
 _If it is difficult to show requirements for parameter in error message, it will be enough to specify only wrong parameter and add information with requirements (like length or Base58 allowed symbols) to help._|306 | IS-511 |
|13. Empty required parameters: 
  ledger get-attrib did=V4SGRU86Z58d6TV7PBUe69 attr=
  wallet create name=wall pool_name= 
  ledger get-attrib did= attr=endpoint
  ledger nym did=
  ledger attrib did=
  ledger pool-upgrade: one of parameters is empty: name, version, action, sha256
 ... etc.| Indy SDK error occurred CommonInvalidParam*| Required ""<parameter_name>"" parameter is empty.| | 316 (/)|
|14. Empty optional parameters:
  ledger attrib did=VsKV7grR1BUE29mG2Fm2kX raw=
  ledger attrib did=VsKV7grR1BUE29mG2Fm2kX enc=
  ledger attrib did=VsKV7grR1BUE29mG2Fm2kX hash=
  ledger pool-upgrade: justification parameter is empty.
  ...etc.|Indy SDK error occurred UnknownCryptoTypeError| Optional parameter ""<parameter_name>"" is empty.| |316 (/)|
| 15. Absent fields in txn field of *ledger custom* command. (No reqId, identifier or operation fields in json).
 ledger custom \{""reqId"":1,""operation"":\{""type"":""105"",""dest"":""V4SGRU86Z58d6TV7PBUe6f""}}
 ledger custom \{""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":\{""type"":""105""}}
 ledger custom \{""reqId"":2,""identifier"":""V4SGRU86Z58d6TV7PBUe61"",""value"":""qeqwew""}|Indy SDK error occurred UnknownCryptoTypeError |<reqId/identifier/operation> should present in txn field.
 _Information about requirements for json in txn should be added to help. Now it is unclear that reqId, identifier  and operation are required._| |Bad message from Indy-Node: 
 ""reason"":""client request invalid: InvalidClientRequest()"" |
| 16. *ledger node*: sending transaction with incorrect target value
  ledger node target=A5iWQVT3k8Zo9nXj4otmeqaUziPQPCiDqcydXkAJBk1Y alias=Node5 services=|Indy SDK error occurred UnknownCryptoTypeError | Missing some of node_port, client_ip, client_port, node_ip, alias values for adding new node. Not existing target for update.| | 304 (x)
  IS-529|
| 17. *ledger node*: incorrect alias in case of update:
  ledger node target=4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe alias=Node9 services=|Indy SDK error occurred UnknownCryptoTypeError| Specified alias does not accord specified target.| | 304 (x)
  IS-529|
| 18. *ledger pool-upgrade*: incorrect schedule format
  -  ' are used instead of ""
  - schedule parameter is empty| Indy SDK error occurred CommonInvalidState| Incorrect format schedule format.| | IS-511|
| 19. *ledger pool-upgrade*: incorrect schedule when force=false
  - date in the past 
  - too small delay between upgrades
  - not all nodes are specified
  - incorrect time in schedule (like 10:99:00)|Indy SDK error occurred UnknownCryptoTypeError| Schedule is invalid since upgrade time is less than current time.
  
  Schedule is invalid since time span between upgrades is too small.
  
  Schedule is invalid since it contains ids of not all nodes.
  
  Schedule is invalid since date/time is incorrect.| |304 (/)
INDY-1098|
| 20. *ledger pool-upgrade* to lower version.| Indy SDK error occurred UnknownCryptoTypeError| Specified version is less than current one.| | 304 (/)|",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyro7:",,,,,,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,ozheregelya,,,,,,,,,"15/Jan/18 9:49 PM;gudkov;[~ozheregelya] We fixed all cases or created dedicated bug tickets. Please see ""Fixed"" column in description table for fix version or related issues details.;;;","23/Jan/18 8:38 AM;ozheregelya;*Environment:*
indy-node 1.2.271
indy-cli 1.3.0~323
libindy 1.3.0~323

Part of cases were verified and marked in descriptions, the rest cases are moved in separated tickets.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Autocomplete improvements,IS-479,26253,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Low,Done,,ozheregelya,ozheregelya,22/Dec/17 3:38 AM,08/Feb/18 6:46 AM,28/Oct/23 2:49 AM,07/Feb/18 9:30 PM,,,,,,,,0,,,,,"Case 1:
Commands should not be completed if there is wrong word before command.
Steps to Reproduce:
1. Type any word differ from top level commands and from command group. G.g. `new`.
2. Type space and press Tab key.

Actual Results:
Autocomplete offers all top level commands and command groups. User may think that `new` is valid command because autocomplete worked for it.

Expected Results:
Autocomplete should not work if there is wrong word before command.

Case 2:
Autocomplete should work for correct commands without typing space after command.
Steps to Reproduce:
1. Type any valid command (e.g. `did`), do not autocomplete it during typing and do not type space after command.
2. Press Tab key.

Actual Results:
Nothing happened.

Expected Result: 
Space should be added, second Tab press should offer command parameters.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzwysn:",,,,,,LibINDY 18.02 CLI +,LibIndy 18.03,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,ozheregelya,zhigunenko.dsr,,,,,,,,,"02/Feb/18 4:18 PM;Artemkaaas;Fixed in: https://github.com/hyperledger/indy-sdk/pull/518;;;","07/Feb/18 4:34 PM;Artemkaaas;Changes: 
 - The implementation of Completer was completely changed.

PR:
 - [https://github.com/hyperledger/indy-sdk/pull/518]

Version:
 - master build #363;;;","07/Feb/18 9:29 PM;zhigunenko.dsr;*Case 1:*
Commands should not be completed if there is wrong word before command.
*Steps to Reproduce:*
1. Type any word differ from top level commands and from command group. G.g. `new`.
2. Type space and press Tab key.

*Actual Results:*
Autocomplete should not work if there is wrong word before command.

*Case 2:*
Autocomplete should work for correct commands without typing space after command.
*Steps to Reproduce:*
1. Type any valid command (e.g. `did`), do not autocomplete it during typing and do not type space after command.
2. Press Tab key.

*Actual Results:*
Space had been added after first Tab, commands were offered after second Tab;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Application crashes during connection/writing to pool with disconnected nodes,IS-480,26254,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,ozheregelya,ozheregelya,22/Dec/17 4:11 AM,18/Jan/18 4:03 AM,28/Oct/23 2:49 AM,18/Jan/18 4:03 AM,,,,,,,,0,,,,,"*Case 1:*
Steps to Reproduce:
 1. Setup indy-cli on linux or windows and run it.
 2. Create pool using genesis file from not existing or unavailable pool.
 3. Try to connect to this pool.

Actual Results:
 Application crashes.

Expected Results:
 Obvious error message should appear. E.g. ""Pool ""<pool_name>"" has not been connected.""

Additional Information:
 The same behavior for pool without consensus.

*Case 2:*
 Application crashes after attempt to write to pool without concensus.
 1. Setup pool of 5 nodes.
 2. Connect indy-cli to the pool.
 3. Stop 2 nodes.
 4. Try to write NYM using indy-cli.

Actual Results:
 Application crashes:
 !write_to_pool_without consensus.png|thumbnail!
{code:java}
pool(p1):wallet(wall):did(V4S...e6f):indy> ledger nym did=V4SGRU86Z58d6TV7PBUe12
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Timeout', /checkout/src/libcore/result.rs:906:4
note: Run with `RUST_BACKTRACE=1` for a backtrace.
thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: ""SendError(..)""', /checkout/src/libcore/result.rs:906:4
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Timeout', /checkout/src/libcore/result.rs:906:4
stack backtrace:
 0: 0x7f42db349463 - <unknown>
 1: 0x7f42db343ca4 - <unknown>
 2: 0x7f42db356b83 - <unknown>
 3: 0x7f42db3568f2 - <unknown>
 4: 0x7f42db357047 - std::panicking::rust_panic_with_hook::h25d461655d60b1a5
 5: 0x7f42db356ea4 - <unknown>
 6: 0x7f42db356e19 - std::panicking::begin_panic_fmt::ha31e26b280c9e878
 7: 0x7f42db356daa - rust_begin_unwind
 8: 0x7f42db3711f0 - core::panicking::panic_fmt::h67504914198d0451
 9: 0x55b117fd8c35 - <unknown>
 10: 0x55b11801b8d0 - <unknown>
 11: 0x55b117ff9f3d - <unknown>
 12: 0x55b117fd4746 - <unknown>
 13: 0x55b117fd743e - <unknown>
 14: 0x55b11802e38b - <unknown>
 15: 0x55b11801f5f2 - <unknown>
 16: 0x7f42db36032c - __rust_maybe_catch_panic
 17: 0x7f42db357eab - std::rt::lang_start::hdcba96cc6d0f043d
 18: 0x7f42d9fec82f - __libc_start_main
 19: 0x55b117fb81f8 - <unknown>
 20: 0x0 - <unknown>
thread panicked while panicking. aborting.
Illegal instruction (core dumped){code}
Expected Result:
 indy-cli should show user-friendly message after timeout, application should not crash.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Dec/17 5:32 AM;ozheregelya;write_to_pool_without consensus.png;https://jira.hyperledger.org/secure/attachment/13948/write_to_pool_without+consensus.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwuxz:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,ozheregelya,,,,,,,,,,"10/Jan/18 8:01 PM;Artemkaaas;Fixed in https://github.com/hyperledger/indy-sdk/pull/469 ;;;","12/Jan/18 2:03 PM;Artemkaaas;Changes: 
 -   Deleted timeouts from Libindy wrapper for Cli.

PR:
 *   [https://github.com/hyperledger/indy-sdk/pull/469]

Version:
 - master build #316;;;","18/Jan/18 4:03 AM;ozheregelya;*Environment:*
indy-node 1.2.271
indy-cli 1.3.0~323
libindy 1.3.0~323

*Case 1:*
Steps to Validate:
1. Setup indy-cli.
2. Create not existing pool in indy-cli.
3. Try to connect to this pool.

Actual Results:
Message ""Pool ""<pool_name>"" has not been connected."" appears.

*Case 2:*
Steps to Validate:
1. Setup pool of 5 nodes.
2. Connect indy-cli to the pool.
3. Stop 2 nodes.
4. Try to write NYM using indy-cli.

Actual Results:
Message ""Transaction response has not been received"" appears.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Improvements for cli help,IS-481,26255,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,ozheregelya,ozheregelya,22/Dec/17 6:45 AM,31/Jan/18 8:20 PM,28/Oct/23 2:49 AM,31/Jan/18 8:20 PM,,,,,,,,0,,,,,"Case 1:
 _*ledger node*_
 - need to change description from ""Add Node to Ledger."" to ""Send Node transaction to the Ledger.""
 - need to mark all parameters exclude _*target*_ and _*alias*_ as optional
 - need to add following information to parameters description: _*node_ip*_, _*node_port*_, _*client_ip*_, _*client_port*_ are mandatory for adding node and optional for update; _*blskey*_ is always optional; _*alias*_ is always mandatory and it can't be changed in case of update; *services* may be empty in case of blacklisting node.

Case 2:
 _*ledger nym*_
 - need to change description from ""Add NYM to Ledger."" to ""Send NYM transaction to the Ledger.""
 - need to add information that _*role*_ value may be empty in case of blacklisting NYM.

Case 3:
 _*did new*_
 - need to add information that _*cid*_ field may be only true or false.

Case 4:
 * need to add to help information about batch mode which will be available by commands like _indy-cli -h_ or _indy-cli --help_. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwyrb:",,,,,,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,ozheregelya,zhigunenko.dsr,,,,,,,,,"30/Dec/17 12:47 AM;Artemkaaas;Changes: 
 - Improved help for Indy-Cli

PR:
 - [https://github.com/hyperledger/indy-sdk/pull/456]

Version:
 - master build #306;;;","18/Jan/18 7:53 AM;ozheregelya;*Environment:*
indy-node 1.2.271
indy-cli 1.3.0~323
libindy 1.3.0~323

Reason for Rejection:
Misunderstanding in Case 1:
 - (/) need to change description from ""Add Node to Ledger."" to ""Send Node transaction to the Ledger.""
 - (x) need to mark all parameters exclude _*target*_ and _*alias*_ as optional
 ** It means that need to mark command arguments with [ ] in _Usage_ section. ""_(optional)_"" at the beginning of parameter description is unnecessary because there is more detailed information at the end of description.
 - (/) need to add following information to parameters description: _*node_ip*_, _*node_port*_, _*client_ip*_, _*client_port*_ are mandatory for adding node and optional for update; _*blskey*_ is always optional; _*alias*_is always mandatory and it can't be changed in case of update; *services* may be empty in case of blacklisting node.


Case 5:
It's my mistake that this case was noticed before:

 
{code:java}
indy> ledger node help
Command:
 ledger node - Send Node transaction to the Ledger.
Usage:
 ledger node target=<target-value> alias=<alias-value> [node_ip=<node_ip-value>] [node_port=<node_port-value>] [client_ip=<client_ip-value>] [client_port=<client_port-value>] [blskey=<blskey-value>] [services=<services-value>]
Parameters are:
 target - DID of new identity
{code}
 

'target - DID of new identity' is very unclear information. It will be better to replace it by something like 'target - node identifier'.

 ;;;","18/Jan/18 5:36 PM;Artemkaaas;Fixed in https://github.com/hyperledger/indy-sdk/pull/490;;;","23/Jan/18 9:45 PM;Artemkaaas;Changes: 
 -   Corrected help for params of node transaction.

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/490]

Version:
 - master build #335;;;","26/Jan/18 11:22 PM;zhigunenko.dsr;*Environment:*
indy-node 1.2.282
indy-cli 1.3.0~337
libindy 1.3.0~337

*Reason for Rejection:*

*case 4* - Unnecessary apostrophe at the end of the line ""target""
Parameters are:
 target - Node identifier{color:#ff0000}'{color}
 alias - Node alias (can't be changed in case of update)

*Additional Information:*

Case 3 is no longer actual because of [IS-500|https://jira.hyperledger.org/browse/IS-500];;;","31/Jan/18 7:25 PM;Artemkaaas;Fixed in: https://github.com/hyperledger/indy-sdk/pull/504;;;","31/Jan/18 7:27 PM;Artemkaaas;Changes: 
 -   Corrected help `target` param in Node command.

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/504]

Version:
 - master build #351;;;","31/Jan/18 8:20 PM;zhigunenko.dsr;*Environment:*
indy-node 1.2.282
indy-cli  1.3.0~353
libindy 1.3.0~353

*Actual result:*
_""target - Node identifier""_;;;",,,,,,,,,,,,,,,,,,,,,,
CLI: Need the way to provide genesis txn files of sovrin pools to indy cli,IS-482,26257,,New Feature,Code Review,IS,Indy SDK,software,resplin,,,High,,,ozheregelya,ozheregelya,22/Dec/17 8:41 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,End users need in genesis file for connection to live pool. Need to create it during installation of indy-cli.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzww7r:",,,,,,LibINDY 18.02 CLI +,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,esplinr,gudkov,sergey.minaev,,,,,,,,,"09/Jan/18 7:00 PM;gudkov;Most probable we need dedicated package sovrin-cli;;;","22/Jan/18 4:24 PM;sergey.minaev;PoA (ver. 1)

New artifact *sovrin-cli* will depends on *indy-cli* and add sovrin transactions for default pools *live* and *sandbox*. Also it should contains script to create pool configuration of default networks for indy-cli.

 

Ubuntu artifact sovrin-cli_<version>.deb

*indy-cli* binary from appropriate deb as dependency +=

genesis transactions for pool ledger (live and sandbox) and

*sovrin_cli_init_default_networks* helper script

This script can be run as postinstall step for deb package

 

Windows package is same as Ubuntu, but it’s just ZIP archive.

 

Helper script will run installed indy-cli in batch mode to create pool configurations with names *sovrin* ans *sovrin-sandbox*.;;;","31/Jan/18 9:54 PM;sergey.minaev;There are 2 new repos created: sovrin-genesis and sovrin-cli. The first one is shared genesis transactions between cli and node. Both repo already created with required functionality and waiting to move to sovrin-foundation ownership.;;;","14/Feb/18 11:14 PM;gudkov;[~sergey.minaev]

Do we have any progress with this merge?;;;","14/Feb/18 11:21 PM;sergey.minaev;[~gudkov],
[~andkononykhin] has requested creation of the repos in sovrin-foundation;;;","15/Mar/18 5:21 AM;gudkov;[~sergey.minaev] [~andkononykhin] [~SeanBohan_Sovrin]

Do we have any progress with this? It is already here for 3 sprints.;;;","19/Jul/18 9:13 AM;esplinr;We need to do this in a way that isn't Sovrin specific. People should be able to pull the genesis transactions for whatever ledger they connect to with Indy SDK.;;;",,,,,,,,,,,,,,,,,,,,,,,
"Introduce the special value ""null"" for parameters of ""send"" commands for a field removal",IS-483,17089,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,Artemkaaas,spivachuk,krw910,25/May/17 7:18 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,10Months,Could,,,"The special value being used as a parameter value in {{send}} commands for a field removal must be changed from the empty value to the value {{null}}. This will make the syntax of {{send}} commands more clear and error-safe.

For example, the command that removes {{verkey}} field from the nym {{V4SGRU86Z58d6TV7PBUe6f}} currently has the following form:
{{send NYM dest=V4SGRU86Z58d6TV7PBUe6f verkey=}}

The same command will have the following form after the change of the special value for a field removal:
{{send NYM dest=V4SGRU86Z58d6TV7PBUe6f verkey=null}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-985,,,,,,,,,,"1|hzx1iv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,krw910,SeanBohan_Sovrin,,,,,,,,,"13/Dec/17 3:31 AM;SeanBohan_Sovrin;[~nage] - can we log a new Arch ticket and kill this one?;;;","23/Dec/17 12:35 AM;ashcherbakov;The task is not valid for indy-client CLI, but meeds to be done for libindy CLI.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
I want to specify a list of acceptable issuers in my proof request,IS-484,26267,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,,tylerq,tylerq,23/Dec/17 12:58 AM,26/Jul/18 7:09 PM,28/Oct/23 2:49 AM,26/Jul/18 7:09 PM,,,,,,,,0,,,,,"Given I'm sending a proof request, I want to be able to specify a list of acceptable issuers that a prover can use to fulfill my proof request. 

List should be able to be pretty long, like 10-100 issuers. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-771,,,,,,,,,,"1|hzwyun:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,sergey.minaev,tylerq,,,,,,,,,"23/Dec/17 12:59 AM;tylerq;[~SeanBohan_Sovrin] [~nage] Can we pls have this soon;;;","23/Dec/17 2:22 AM;ashcherbakov;It's already supported;;;","26/Dec/17 4:58 PM;ashcherbakov;It's essential part of proof request format. You can specify any attributes in proof request. For each requested attribute you can (optionally) specify any number of issuers or schemas, or do not specify them at all.
https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/api/anoncreds.rs#L671;;;","26/Jul/18 7:09 PM;sergey.minaev;Deprecated ticket, actually done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"When building a proof request, I want to just name some attributes I want back",IS-485,26268,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,,tylerq,tylerq,23/Dec/17 1:09 AM,26/Jul/18 7:22 PM,28/Oct/23 2:49 AM,26/Jul/18 7:22 PM,,,,,,,,0,,,,,"*background*

As a Verifier I want to be able to send a very simple proof request that essentially says ""Please give me your First Name, Last Name, Membership Number, etc"" and I just list attribute names, _without_ specifying a schema reference number OR a list of issuers, *so that a prover can easily fulfill a proof using whichever issuer or schema reference number they want*. 

*AC*

# Given I'm creating a proof request, I want to be able to list some attributes I want the prover to send back to me like: 
 # Address 1
 # Address 2
 # First Name
 # Last Name

And so on. 

Additional requirements: 

# I should be able to send this type of proof request WITHOUT specifying a schema reference number or issuer. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwyuv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,sergey.minaev,tylerq,,,,,,,,,"23/Dec/17 1:09 AM;tylerq;[~SeanBohan_Sovrin] [~nage] And this one pls;;;","23/Dec/17 2:23 AM;ashcherbakov;It's already possible;;;","26/Dec/17 5:01 PM;ashcherbakov;It's essential part of proof request format. You can specify any attributes in proof request. For each requested attribute you can (optionally) specify any number of issuers or schemas, or do not specify them at all.
https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/api/anoncreds.rs#L671;;;","26/Jul/18 7:22 PM;sergey.minaev;Deprecated ticket, actually done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Provide a filtering mechanism on claims in wallet when preparing a Proof ,IS-486,25718,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,swcurran,swcurran,14/Dec/17 3:47 AM,28/Sep/18 7:04 AM,28/Oct/23 2:49 AM,26/Jul/18 8:52 PM,,,,,,,,0,help-wanted,node-SDK,,,"*Use Case*: As a Prover I want to filter the claims returned from my wallet for handling a proof request to those relevant to the proof request so it is easier to find the ones useful in responding to the Proof Request.
h2. Background

The current behavior of anoncreds in libindy (Indy-SDK) is that when my wallet is queried for the claims relevant to a Proof Request, I get all the claims generated for the given Schema. In the Python wrapper the call is:
 * prover_get_claims_for_proof_req in anoncreds.py

It takes as parameters a wallet and a proof request, and returns for each item in the proof request all of the claims in the wallet created from the schema referenced for that item.
h2. Our Specific Use Case

In our use case (TheOrgBook), TheOrgBook entity's wallet will be holding public claims for many subjects (business organizations) - literally millions derived from the same schema. As such, when the prover_get_claims_for_proof_req call is made, the returned value will be millions of claims per item in the Proof Request - inefficient at best and will trigger an error (out of memory) at worst. For our specific use case, the Verifier and Prover will know an ID value for the subject of interest and so the filter will be a name/value pair of the Claim Field and ID value. Only claims with Claim Field ""OrgId"" matching the passed in Value would be returned.
h2. Considerations

I think the filter needs to be defined at the level of each item in the Proof Request, since each item can reference a different Schema. I see several ways this could be done:
 * The Verifier is aware of the need for filtering and sets the filter in the Proof Request.
 * The Prover is aware of the need for filtering and sets filters in the Proof Request after receipt.
 * The Prover is aware of the need for filtering and creates and passes in a parallel structure to the Proof Request that specifies the filtering requirements.

I like the idea that Verifier could specify the filter, so having the filtering as part of the Proof Request that ideally the Prover could also adjust prior to calling libindy makes the most sense to me.

The richness of the filtering is another open question. For our use case, a name/value pair is sufficient, but I'm sure others might have other more sophisticated filtering scenarios that make sense - e.g. Max(Issue Date) to get the most recent of a claim type.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww33:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,danielhardman,gudkov,ianco,swcurran,theruss,,,,,,"14/Dec/17 11:09 PM;danielhardman;Stephen: This is a great line of thinking. I love it.

I have recently been thinking about a proof constraint language. I imagined this is how a verifier would filter, and I've been thinking of it like SQL WHERE clauses: Prove street_address as sa WHERE sa.claimdef.issuer in [a, b, c] AND sa.issue_date > 2015-01-01 AND...

I'm not especially advocating for what I was imagining–just noting an intriguing overlap.;;;","15/Dec/17 7:25 AM;theruss;How are claims ""physically"" stored in a wallet? Could storage be (re) implemented as SQLLite (for example) thus making it queryable in exactly the manner [~danielhardman] suggest? Just an idea..;;;","21/Dec/17 9:38 AM;swcurran;[~theruss] - libindy has a default wallet implementation using an encrypted version of SQLLite (SQLCipher), but the expectation is that one can provide an implementation to suit ones needs. For example, we're planning on using Postgres for one of our projects.

The filtering in this case needs to be specified at a higher level and then passed in to the implementation. It would have to be defined by the Verifier when they create the Proof Request (likely in JSON) and then passed to the Holder (Prover) who would pass that into their wallet implementation. ;;;","28/Dec/17 11:22 PM;ashcherbakov;[~swcurran] [~gudkov] [~nage]
Are all claims in this huge wallet issued by the same Issuer? So, all claims belong to the same (schema, issuer) pair?
If so, then probably you can just use different issuers (different issuer DIDs) for issuing claims, and it will be the same as filtering against organization field value in claims.
Proof request supports filtering against any number of schemas and/or issuer DIDs (independently). So, you can specify a list of Issuers and Schemas, and all claims matching at least one of them will be returned.
;;;","28/Dec/17 11:34 PM;ashcherbakov;But in general I like the idea of more sophisticated proof requests and filters as well as DSL or any syntax for constraints and filtering in proof requests.;;;","30/Dec/17 5:47 AM;swcurran;[~ashcherbakov] - hmm...not really liking the idea of the issuer creating a unique DID per claim. That means two extra ledger transactions per claim - creating a DID and a Claim Def, which adds time (not that big a deal) and ledger transactions (which seems wrong).

We propose using the same syntax for ""claim_filter"" as is used for the existing ""requested_predicate"", with attributes f_type, attr_name and value.

For example, see gist: [https://gist.github.com/swcurran/ae844f6d49b132a58aafaba32c6a1dcc]

There are some implied rules by the format:
 # The claim_filter attr_name must be within the same claim as the (parent) filtered attr (see additional note below)
 # Multiple claim_filters with the same attr are OR'd together.
 # Multiple claim_filters with different attr's are AND'd together.
 # Data formats must be standardized (e.g. dates must be a known format - ISO...). I assume these are defined in ""requested_predicate"".

The claim filter in the example would be executed as:
{quote}((legal_entity_id = ""862..."" OR legal_entity_id = ""3124..."") AND effective_date > ""1987-01-01"")
{quote}
Thus, claim_filters cannot use arbitrary logic, but are powerful enough for many use cases. I'm sure a majority of cases would be an attr equaling a value.

We'd have to define the behaviour if the claim_filter references attrs not in matching claims.  I'm not sure what is best - undefined (probably not the best choice - predictable is nice), always return TRUE (all claims are matched) or always return FALSE (no claims are matched).;;;","01/Feb/18 6:22 PM;gudkov;[~ashcherbakov] [~danielhardman] [~sergey.minaev] [~SeanBohan_Sovrin] [~nage]

Proposed solution is a bit contradicts with our current Wallet vision. Wallet now is a key/value storage and internal filtering is possible only by key part. 

In proposed solution there is a suggestion to perform filtering on claim attributes values. I see the following problems:

1. It over-complicates the wallet. To achieve this wallet should be complex database and format of claim should be well defined.
2. It forces specific format of claim attributes. For current moment values of claim attributes are just BigNums and it is application specific logic how to conver numbers to domain entities and units like time or string.

My current vision is that filtering like this is a bit out of libindy scope.;;;","01/Feb/18 6:29 PM;gudkov;I suggest to postpone this at least until we define requirements for the wallet.;;;","03/Feb/18 2:58 AM;swcurran;[~gudkov] and team - we'd definitely like to have further discussion on this. This feature we think is crucial for our use case, so the first thing to do is figure out if that is the case. If it is indeed required, we should look at what is the easiest way to achieve our use case without over-complicating the wallet.  That might be a simpler (less capable) version of this, or perhaps an TheOrgBook-specific hack to achieve our goal for our specific wallet implementation. Ugly, but I think doable.

We have acquired resources to implement what we are calling an ""enterprise wallet"" that we'd obviously like to be compatible with the HL-Indy API, so at minimum, I'm hoping we can get some time with the HL-Indy team to figure out the best path forward from a community perspective. We don't want to build things on our own that will potentially be useful to the community.  We're just starting on this effort and will stay in touch on our progress.

[~nage] [~SeanBohan_Sovrin] [~jljordan42];;;","07/Feb/18 1:32 AM;swcurran;Some added thoughts on this after a bit more thought and looking around.

I agree on not over complicating the wallet, but I don't see how the feature requires a transition to either a complex database or any more structure in storing credentials.  The current claim data in an HL-Indy wallet includes both the BigNums and text representations so little/no change needed there.  Further, from my brief exploration of the tools available, most modern databases include support for JSON path-based querying and the claims structure is sufficiently constrained for that approach.

As I see it, worst case the wallet interface supports the requested feature and a specific implementation filters the data between pulling it out of the database and returning it to the caller.  So there is not really even a need for any specific database support for the feature. Even happy if, like in the case of predicates, the initial functionality is very limited (e.g. ""equal"").;;;","20/Feb/18 4:47 AM;ianco;A few of us just had a discussion on this issue and there was some confusion around where the filtering was being performed in the wallet.

My understanding is:
 # The caller calls ""prover_get_claims_for_proof_req()"" in anoncreds.py
 # Internally, anoncreds calls wallet.list() to get all the claims from the wallet
 # anoncreds iterates through all the claims to determine claims that satisfy the proof (this is in ""src/services/anoncreds/prover.rs get_claims_for_proof_req()"")

My understanding of the purpose of this ticket was to add the filtering capability to step 2 above, i.e. to build some kind of filtering ""smarts"" into the wallet.  anoncreds would then be responsible for converting the proof request into a filtered query against the wallet, to manage the quantity of data being returned to and processed by anoncreds.

The initial solution I recommended was a ""virtual wallet"" approach, where an enterprise wallet could store claims for different subjects in different ""virtual wallets"" (within the same physical database), however from our discussion today we're not sure that will be sufficient.  Subjects could potentially have hundreds of claims, and processing all claims for every proof request could have performance implications.

So we believe the wallet API requires an additional method, like the existing ""list(&self, key_prefix: &str)"", but with an additional parameter to specify additional filter criteria.

 ;;;","20/Feb/18 10:28 PM;gudkov;[~ianco] [~ashcherbakov] [~danielhardman]

As i already said:

> Proposed solution is a bit contradicts with our current Wallet vision. Wallet now is a key/value storage and internal filtering is possible only by key part.

Now you just met this problem. Current solution allows to efficiently filter claims by issuer and schema (they are present in the key), but filtering by value is complicated. Value in the wallet in most cases is some complex json. I don't know the effective solution that will allow to index schema less jsons by field values. Also it contradicts the idea to store all wallet values encrypted on indy-sdk level and just plug different storages. Also it will be really hard to implement this filtering over hardware key chain that iOS wrapper uses.

Possible solutions:
1. Iterate over all claims without db-level indexing. It is acceptable for small wallets of one Identity Owner, but seems too slow for your use case.
2. Index claims on application level. Just put all claim attributes and corresponded values you interested in to database you like and perform filtering on this database level. Each claim has uuid in the wallet and you can simple map the clam in the wallet to record in your database.;;;","20/Feb/18 10:35 PM;gudkov;[~ianco] [~ashcherbakov] [~danielhardman]

As additional option we can extend the wallet type interface with extended version of ""wallet::list"" callback with optional json-filter param (need check if some RFC already provides the query language for json filtering)

1. If wallet implementation supports values filtering than indy-sdk will use enhanced version of ""wallet::list"" callback
2. If no than indy-sdk will just read all claims from the wallet and apply filter on sdk side

This option still contradicts the idea of storing all wallet values encrypted.;;;","20/Feb/18 10:51 PM;gudkov;Indexing of jsons can be performed in the following way:

1. Get all possible ""root"" to ""leaf"" paths. For example, for json:

\{
  ""data"": \{
     ""a"": ""a_value"",
    ""b"": ""b_value""
 }
}

it will be:

data.a
data.b

We can make table for indexing with 3 fields (key, path, path_value). For this json we will get the following records:

""key_value"", ""data.a"", ""a_value""
""key_value"", ""data.b"", ""b_value""

and compound index will allow to filter jsons, but this approach seems too complex for default wallet.;;;","21/Feb/18 1:21 AM;ianco;[~gudkov] thanks for your comments.  I like your idea of an optional interface that supports filtering - providers can choose to implement it if it fits their use case.  I think Sqlite, PostgreSQL and others support indexing of Json, or alternately the wallet could use a document store like CouchDB or MongoDB.  I'll look into this and see what kind of query parameters could support this.

 ;;;","22/Feb/18 1:40 AM;ianco;[~gudkov] the reason we are running into this issue is that anoncreds internally, within the ""prover_get_claims_for_proof_req()"" method, is calling wallet.list() and retrieving a list of all claims in the wallet.  If we implement filtering on the wallet's ""list()"" method then that will require changes to the anoncreds code as well.

One other option I'd like to throw out - can we add an additional parameter to the ""prover_get_claims_for_proof_req()"" method, which is a list of claim id's?  Then the calling application has the option to do a ""pre search"", determine in advance the set of claims that *might* be applicable for the proof, and then anoncreds can build the proof with this filtered list.

 ;;;","22/Feb/18 4:55 AM;swcurran;I agree that the solution is way to include a mechanism to pass into the wallet information on the credentials of interest, and leave it to the wallet to implement that efficiently. Using the current ""wallet.list()"" call that returns all the credentials in the wallet and have code that filters the list to those of interest is not going to scale - even, I would argue, for a personal wallet. There has to be a way in the Indy-SDK to pass filter criteria into the wallet so the filtering can be done at the DB level.  The wallet implementation can ignore the filter criteria and continue to pass back to anoncreds everything from the wallet (e.g. retain current behaviour), but at least it gives us wallet implementers a fighting chance of providing decent performance.  anoncred can continue to iterate on a further filter the list - which could be a NoOp action as the wallet has already done that.

This ticket suggested using the format of the Proof Request to provide the filter criteria.  We still think that is a good idea (possibly necessary since that is how the Verifier tells the Holder what it wants), but given that the Proof Request is NOT given to the wallet (we thought it was), perhaps the wallet filter criteria could be derived from the Proof Request to prevent the wallet knowing too much about the Proof Request process.;;;","07/Mar/18 8:58 AM;gudkov;Proposal for wallet interface changes that can help in this problem https://github.com/hyperledger/indy-sdk/pull/564/files;;;","09/Mar/18 12:43 AM;ianco;[~gudkov] thanks for the design doc.  I'm still digesting it, but a few quick comments:

I like the separation of wallet and storage, although would still like the option of whether to encrypt data in storage or not.  Specifically entity values and metadata - for our use case the data is not private, so encryption is an unnecessary overhead.

 

Does the WalletStorage implementer have to implement a WalletSearch?  It looks like an internal SDK class, but the wallet_storage_search_entities needs to return this class (or (preferably) a json structure that this class will interpret)?

I'll probably have more feedback/questions as I dig into it more ...;;;","09/Mar/18 4:11 PM;ianco;The other question I have is how can I help?  I'd love to be able to contribute to this solution.

 ;;;","26/Jul/18 8:52 PM;gudkov;We can consider this as done. [~swcurran] If you still need something i suggest to re-open.;;;","10/Aug/18 1:57 AM;swcurran;[~gudkov] - agreed, I think this is done.  We've got what we need.

There may be a future piece where the Proof Request is extended to allow the Verifier to request specific attributes of credentials be used, but that is a separate issue that needs more experience.

Thanks!;;;",,,,,,,,
Allow Proof Requests to specify a range of Schema Versions,IS-487,25721,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,swcurran,swcurran,14/Dec/17 4:14 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"*Use Case*: As a Verifier I want to allow a Proof Request to be satisfied from claims generated from a range of versions of the same schema.

Currently, a Proof Request specifies the exact version of a schema from which a claim can be used to satisfy the Request. This requirement will make it very difficult to evolve schemas and coordinate on versions - e.g. both held claims and the proof requests will have to be updated for schemas to be updated. In other fields, this kind of requirement has proven to be unworkable.

I propose that a Proof Request allow the specification a range of Schema Versions from which derived claims would be acceptable.  For example, a syntax much like what is used by something like a package manager - such as npm might work:
 * [NPM Package Dependencies|https://docs.npmjs.com/files/package.json#dependencies]
 * As [~srottem] points out - the use of [Semantic Versioning|https://semver.org/] makes sense here.

I don't know how this might affect the crypto underlying the anoncreds implementation, but from a business perspective, I think this would greatly improve the usability of the system.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-771,,,,,,,,,,"1|hzwwen:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,srottem,swcurran,,,,,,,,,"14/Dec/17 6:03 AM;srottem;Interesting idea (I assume you're referring to Semantic Versioning - or semver for short: [https://semver.org/).]  It certainly seems feasible that over time schema will evolve and during that evolution claims adhering to different versions of the schema will be issued.  It also seems likely that claims for different versions of a schema may share a set of attributes that could be used to satisfy a proof request, so support for specifying a range of versions for a schema would seem to make a lot of sense. Semver would seem to be an reasonable mechanism for specifying versioning at first blush, as long as those that are writing the software for issuing proof requests for any given schema properly understand the evolution of that schema.;;;","14/Dec/17 6:38 AM;swcurran;Thanks for the reference [~srottem] - yes, that's what I was thinking.;;;","28/Dec/17 11:28 PM;ashcherbakov;Just a note: proof request supports filtering against any number of schemas (Schema's name-version-did). So, you can specify a list of Schemas, and all claims matching at least one of this Schemas will be returned.
As a workaround one can create a proof request specifying all expected versions of Schema.
But I agree that providing a functionality to specify just a range of versions makes sense and is a good idea.;;;","30/Dec/17 6:03 AM;swcurran;I hadn't realized that a schema in a proof request could be referenced by a schema-key (name, version, schema-issuer-did) or a schema-seq-no. I thought it was just the schema-seq-no.

If that is the case and (presumably) with each claim in a wallet, all of the schema metadata is stored (schema-key and schema-seq-no), it should be pretty straight forward to use an implementation of semantic versioning within a Proof Request.  That is, wherever the schema-key is used, the version is a semantic version vs. a simple string. Of course, it's up to the schema-issuer to follow the semver.org versioning standard for this to be generally useful.

FYI: Here is a semver implementation at the database level for Postgres ([https://pgxn.org/dist/semver/doc/semver.html),] and another at the Rust level ([https://github.com/steveklabnik/semver).] Not sure if these are any good, just that they exist and might be able to be leveraged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Given I have received a proof request which lists _attribute names_ it's asking for, the app should search the wallet for all the matching _attribute names_ and use them to fulfill the proof",IS-488,26280,,Task,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,gudkov,SeanBohan_Sovrin,SeanBohan_Sovrin,26/Dec/17 11:38 PM,31/Jan/18 7:18 PM,28/Oct/23 2:49 AM,31/Jan/18 7:18 PM,,,,,,,,0,,,,,"Requirements:

Should not be case-sensitive when matching

Should ignore spaces when matching",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrjj:",,,,,,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,SeanBohan_Sovrin,,,,,,,,,"27/Dec/17 3:50 PM;Artemkaaas;Implemented in the same PR as IS-454 because has conflicting changes
[https://github.com/hyperledger/indy-sdk/pull/450]

 ;;;","29/Dec/17 9:29 PM;Artemkaaas;Changes: 
 - Ignore case and spaces in get_claims_for_proof_request function.

PR:
 - [https://github.com/hyperledger/indy-sdk/pull/45|https://github.com/hyperledger/indy-sdk/pull/455]0

Version:
 - master build #302;;;","24/Jan/18 11:57 PM;gudkov;[~SeanBohan_Sovrin] Could you assign this to someone who is a 'customer' for this ticket to perform validation?

If it is hard to validate on customer side we can move it to done as i satisfied with solution and provided test cases.;;;","31/Jan/18 7:18 PM;gudkov;As there is no answer for a long time i am moving this ticket to done as i am satisfied with current solutions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: indy-cli can't connect to pool if there is at least one stopped node,IS-489,26282,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,,ozheregelya,ozheregelya,27/Dec/17 12:53 AM,18/Jan/18 4:05 AM,28/Oct/23 2:49 AM,18/Jan/18 3:20 AM,,,,,,,,0,,,,,"*Steps to Reproduce:*
1. Setup the pool with 4 nodes.
2. Stop indy-node services on any node (there are 3 active nodes, it is enough for consensus).
3. Try to connect to this pool using indy-cli.

*Actual Results:*
indy-cli is crashed after timeout.

*Expected Results:*
indy-cli should work independently on count of active nodes (because reading is possible when there is only one node in the pool).

*Additional information:*
indy-cli works in case of demotion node on the same pool.","indy-cli 1.1.1~297
indy-node 1.2.251",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwuxr:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ozheregelya,sergey.minaev,,,,,,,,,,"10/Jan/18 3:03 AM;ozheregelya;UPD: Case was retested on version 1.1.1~306. 
In case of 5 nodes pool, application crashes during connection only if there are 3 stopped nodes.;;;","15/Jan/18 7:34 PM;sergey.minaev;Not reproduced on latest master.
Should be fixed in 1.1.1~316 as part of IS-480.;;;","18/Jan/18 3:20 AM;ozheregelya;*Environment:*
 indy-node 1.2.271
 indy-cli 1.3.0~323
 libindy 1.3.0~323

*Steps to Validate:*

1. Setup the pool with 4 nodes.
 2. Stop indy-node services on any node (there are 3 active nodes, it is enough for consensus).
 3. Try to connect to this pool using indy-cli.

*Actual Results:*
 indy-cli successfully connected to the pool and is able to write transactions.

*Additional Information:*
Initial case was fixed, but indy-cli can't connect to pool with one active node. New ticket was created: INDY-525.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CI: INDY-SDK pipelines should clean their jenkins workspaces,IS-490,26284,,Task,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,andkononykhin,andkononykhin,andkononykhin,27/Dec/17 2:06 AM,31/Jan/18 9:01 PM,28/Oct/23 2:49 AM,31/Jan/18 9:01 PM,,,,,,,,0,,,,,"Indy-sdk pipelines fail to cleanup workspace on Jenkins agents because produce root:root files and dirs inside it. The possible reason: root diles are created from within docker containers that are run as root (uid 0).

It leads to 100% disk usage in Jenkins agents and (I'm sure for about 90%) system not-responding state.

Dirs inside workspace directory with root as owner:
 * Indy-SDK
 ** ./cli/target
 ** ./libindy/debs
 ** ./libindy/sovrin-packaging/__pycache__
 * Indy Crypto
 ** ./libindy-crypto/debs",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-524,,,,,,,,,,"1|hzwyr3:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,andkononykhin,Artemkaaas,,,,,,,,,,"18/Jan/18 10:53 PM;Artemkaaas;Implemented in https://github.com/hyperledger/indy-sdk/pull/486;;;","23/Jan/18 9:51 PM;Artemkaaas;Changes: 
 - Deleted usages of superuser in jenkins ci and cd pipelines.

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/486]

Version:
 - master build #335;;;","31/Jan/18 9:01 PM;andkononykhin;Jenkins doesn't report warnings. Workspaces on agents looks good as well.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Wallet open command works without key for encrypted wallet,IS-491,26292,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,zhigunenko.dsr,ozheregelya,ozheregelya,28/Dec/17 3:51 AM,31/Jan/18 7:23 AM,28/Oct/23 2:49 AM,30/Jan/18 4:39 PM,,,,,,,,0,,,,,"Steps to Reproduce:
1. Open the indy-cli.
2. Create encrypted wallet.
3. Open this wallet with wrong key (no key or/and rekey parameter, wrong key, rekey differs from key, etc).
=> wallet has been opened
4. Try to create did in this wallet.

Actual Results:
Error ""Indy SDK error occurred CommonInvalidState"" after attempt to create did.

Expected Results:
_wallet open_ command parameters should be validated. User-friendly message should appear after _wallet open_ with wrong keys.","indy-node 1.2.251
indy-cli 1.1.1~297",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyrkf:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,ozheregelya,zhigunenko.dsr,,,,,,,,,"19/Jan/18 6:09 PM;Artemkaaas;Fixed in https://github.com/hyperledger/indy-sdk/pull/494;;;","29/Jan/18 11:43 PM;Artemkaaas;Changes: 
 -  Added key checking on wallet opening.

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/494]

Version:
 - master build #342;;;","30/Jan/18 4:37 PM;zhigunenko.dsr;*Environment:*
indy-node 1.2.282
indy-cli  1.3.0~342
libindy 1.3.0~342

 *Steps to Validate:*

1. Create new wallet with key
2. Open this wallet with right key
3. Open this wallet with wrong key
4. Open this wallet without key
5. Open this wallet with ""rekey="" option

*Actual Results:*
1. Successful creation
2. Successful opening
3. Prohibited opening
4. CLI is waiting for key input
5. Previous key is no longer applicable. Successful opening with new key

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Need to remove 'freshness time' parameter from help,IS-492,26299,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,ozheregelya,ozheregelya,29/Dec/17 3:17 AM,18/Jan/18 7:53 AM,28/Oct/23 2:49 AM,18/Jan/18 7:22 AM,,,,,,,,0,,,,,It was discussed with [~gudkov]. Parameter _freshness time_ should be removed from _wallet create_ command because CLI don't use it now.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrjb:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,ozheregelya,,,,,,,,,,"10/Jan/18 5:45 PM;Artemkaaas;Implemented in https://github.com/hyperledger/indy-sdk/pull/466;;;","11/Jan/18 11:12 PM;Artemkaaas;Changes: 
 -  Deleted 'freshness time' from help

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/466]

Version:
 - master build #311;;;","18/Jan/18 7:22 AM;ozheregelya;*Environment:*
indy-node 1.2.271
indy-cli 1.3.0~323
libindy 1.3.0~323

*Steps to Validate:*
1. Setup the indy-cli, connect to working pool.
2. Open help for _wallet create_ command.
=> No freshness_time parameter.
3. Try to run _wallet create_ command with freshness_time parameter.

*Actual Results:*
Message ""Unknown ""freshness_time"" parameter present"" appear.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Need to display which wallets are encrypted in output of 'wallet list' command,IS-493,26300,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Low,Invalid,,ozheregelya,ozheregelya,29/Dec/17 3:38 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzzc7j:",,,,,,LibINDY 18.02 CLI +,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,18.06,18.07,EV 18.10 Stability and VC,18.08 Wallets+,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,"23/Jan/18 12:30 AM;gudkov;[~ozheregelya] 

We discussed this internally and it seems that this request doesn't correspond to our domain. 

The main problem here is that libindy supports plugged wallet, but ""encrypted/non-encrypted"" is a quality of default wallet only. 

There is no internal API to understand is this wallet ""encrypted"" or not. It can be achieved only through breaking API changes.

So, i suggest to skip this feature.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Need to add information message that current wallet is incompatible with current pool ,IS-494,26301,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Low,Invalid,ozheregelya,ozheregelya,ozheregelya,29/Dec/17 3:54 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"Steps to Reproduce:
1. Open the CLI, create several pools and several wallets for these pools.
2. Connect to any pool.
3. Open wallet incompatible with this pool.
=> Nothing happened. Error message appears only when the user tries to send transaction.
4. Connect to another pool incompatible with this wallet.
=> Nothing happened. Error message appears only when the user tries to send transaction.

Actual Results:
User can see that pool and wallet are incompatible only when he tries to send transaction.

Expected Results:
Information message should appear when user opens wallet incompatible with current pool, and when he tries to connect to pool incompatible with current wallet.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwwf3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ozheregelya,SeanBohan_Sovrin,sergey.minaev,,,,,,,,,"13/Jan/18 7:12 AM;SeanBohan_Sovrin;[~ozheregelya] - can we get more info? More info on how you got into this state.;;;","26/Jul/18 7:25 PM;sergey.minaev;Deprecated ticket, this check removed from libindy.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: keys for encrypted wallets should not be stored in history,IS-495,26302,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,zhigunenko.dsr,ozheregelya,ozheregelya,29/Dec/17 4:08 AM,31/Jan/18 7:23 AM,28/Oct/23 2:49 AM,30/Jan/18 5:01 PM,,,,,,,,0,,,,,"Steps to Reproduce:
1. Create encrypted wallet.
2. Find this command in history.
=> key value is shown.
3. Open encrypted wallet.
4. Find this command in history.
=> key and rekey values are shown.

Actual Results:
Keys values are shown and stored in history.

Expected Results:
At least keys should not be stored in history. Ideally, keys should not be shown during typing command, like in ssh-keygen or something like this.","indy-node 1.2.251
indy-cli 1.1.1~297",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyrkn:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,ozheregelya,zhigunenko.dsr,,,,,,,,,"22/Jan/18 3:06 PM;Artemkaaas;Implemented in https://github.com/hyperledger/indy-sdk/pull/496/files;;;","29/Jan/18 11:45 PM;Artemkaaas;Changes: 
 - Support deferred input of values for keys and seeds.

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/496/files]

Version:
 - master build #342;;;","30/Jan/18 5:01 PM;zhigunenko.dsr;*Environment:*
indy-node 1.2.282
indy-cli  1.3.0~342
libindy 1.3.0~342

 *Steps to Validate:*

1. Create new wallet with ""key=%key%""
2. Create new wallet with ""key""
3. Open this wallet with ""key=%key%""
4. Open this wallet with ""key""
5. Open this wallet with ""key rekey""

*Actual Results:*
1. Key is shown and stored in history
2. Stored command didn't show the key value
3. Key is shown and stored in history
4. Stored command didn't show the key value
5. Old and new keys aren't shown in history

*Additional information:*
Existing approach to input ""key="" as parameter while create or open wallet is still available and insecure;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Should display verkeys in abbreviated form if possible,IS-496,26303,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,zhigunenko.dsr,ozheregelya,ozheregelya,29/Dec/17 4:12 AM,31/Jan/18 7:23 AM,28/Oct/23 2:49 AM,29/Jan/18 5:48 PM,,,,,,,,0,,,,," 
{code:java}
Command:
 did new - Create new DID
Usage:
 did new [did=<did-value>] [seed=<seed-value>] [cid=<cid-value>] [metadata=<metadata-value>]
Parameters are:
 did - (optional) Known DID for new wallet instance
 seed - (optional) Seed for creating DID key-pair
 cid - (optional) Create DID as CID (default false)
 metadata - (optional) DID metadata
Examples:
 did new
 did new did=VsKV7grR1BUE29mG2Fm2kX
 did new did=VsKV7grR1BUE29mG2Fm2kX seed=00000000000000000000000000000My1
 did new seed=00000000000000000000000000000My1 cid=true
 did new seed=00000000000000000000000000000My1 cid=true metadata=did_metadata
{code}
 

Need to add parameter to create did with abbreviated verkey.","indy-node 1.2.251
indy-cli 1.1.1~297",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyrk7:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,gudkov,ozheregelya,zhigunenko.dsr,,,,,,,,"17/Jan/18 9:33 PM;gudkov;CLI and libindy always creates DID as part of verkey if possible. Allows CLI allows to input verkey in abbreviated form.

The only problem here is that we don't display verkeys as abbreviation.

Current vision is that we need to create helper method try_abbreviate_verkey(did, verkey) in CLI or libindy and use it in places when we display verkey with did together.;;;","18/Jan/18 10:53 PM;Artemkaaas;Implemented in https://github.com/hyperledger/indy-sdk/pull/491;;;","23/Jan/18 9:41 PM;Artemkaaas;Changes: 
 -   Added indy_abbreviate_verkey API call to get abbreviated verkey form if it possible.

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/491]

Version:
 - master build #335;;;","29/Jan/18 5:48 PM;zhigunenko.dsr;*Environment:*
 indy-node 1.2.282
 indy-cli 1.3.0~337
 libindy 1.3.0~337

 

*Steps to Validate:*
 # Create new DID and put it in the ledger.
 # Create DID with parametres.
 # rotate-key for DID.

*Actual Results:*
1. ""did new"" and ""ledger get-nym did="" outputs show abbreviated verkey.
2. verkey shown but full
3. verkey shown but full

*Additional Information:*

Abbreviated verkey can be used only in case when DID creating without ""did="" parameter.
 It's also always shown in pair ""DID - verkey"", not single.
So cases 2 and 3 are allowable;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: did and wallet are still shown in prompt after closing wallet in some cases,IS-497,26304,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,,ozheregelya,ozheregelya,29/Dec/17 4:53 AM,24/Jan/18 4:59 PM,28/Oct/23 2:49 AM,23/Jan/18 5:04 AM,,,,,,,,0,,,,,"Case 1:

Steps to Reproduce:
 0. Connect to any pool. 
 1. Open any wallet compatible with this pool, use any did. 
 2. Close wallet.
 => used did is still shown in prompt.
 3. Create new wallet compatible with this pool.
 => did is still shown in prompt.
 4. Try to send any transaction.
 => Error message appear: ""Submitter DID: ""V4SGRU86Z58d6TV7PBUe6f"" not found""
 5. Run command _did list._

Actual Results:
{code:java}
pool(p1):did(V4S...e6f):indy> wallet create wwwp1 pool_name=p1
Wallet ""wwwp1"" has been created
pool(p1):did(V4S...e6f):indy> wallet open wwwp1
Wallet ""wwwp1"" has been opened
pool(p1):wallet(wwwp1):did(V4S...e6f):indy> ledger nym did=V4SGRU86Z58d6TV7PBUe61
Submitter DID: ""V4SGRU86Z58d6TV7PBUe6f"" not found
pool(p1):wallet(wwwp1):did(V4S...e6f):indy> did list 
There are no dids
Current did ""V4SGRU86Z58d6TV7PBUe6f""
{code}
Expected Results:
 did should disappear from prompt after closing of wallet.

Case 2:

Steps to Reproduce:
 1. Open any existing wallet. 
 2. Try to open not existing wallet.
 => Opened wallet is closed, but not existing wallet is closed.
3. Try to open any existing wallet.
=> Indy SDK error occurred WalletInvalidHandle
4. Try to close current wallet.
=> Indy SDK error occurred WalletInvalidHandle

Actual Results:
 Wallet is closed, but it is still shown in prompt.

Expected Results:
 Wallet should not be shown in prompt, or it should be reopened if new wallet can't be opened.","indy-node 1.2.251
indy-cli 1.1.1~297",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrov:",,,,,,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,ozheregelya,,,,,,,,,,"10/Jan/18 5:44 PM;Artemkaaas;Implemented in https://github.com/hyperledger/indy-sdk/pull/467;;;","11/Jan/18 11:10 PM;Artemkaaas;Changes: 
 -   Corrected prompt behave on close actions

PR:
 *  [https://github.com/hyperledger/indy-sdk/pull/467]

Version:
 - master build #312;;;","18/Jan/18 5:06 AM;ozheregelya;*Environment:*
indy-node 1.2.271
indy-cli 1.3.0~323
libindy 1.3.0~323

 

*Reason for Reopen:*
Problem with current DID was fixed only for case of explicit closing of the wallet. In case of opening another wallet initial issue is still reproducing.

*Steps to Reproduce:*
1. Open any existing wallet, use any existing did.
2. Open another wallet (existing or not).

*Actual Results:*
Current did is still shown in prompt and still used:
{code:java}
pool(q1):indy> wallet open wall
Wallet ""wall"" has been opened
pool(q1):wallet(wall):indy> did use V4SGRU86Z58d6TV7PBUe6f
Did ""V4SGRU86Z58d6TV7PBUe6f"" has been set as active
pool(q1):wallet(wall):did(V4S...e6f):indy> wallet open wall2
Wallet ""wall"" has been closed
Wallet ""wall2"" has been opened
pool(q1):wallet(wall2):did(V4S...e6f):indy> did list 
There are no dids
Current did ""V4SGRU86Z58d6TV7PBUe6f""{code}
*Expected Results:*
Did should not be used after implicit closing of the wallet.

 ;;;","18/Jan/18 4:01 PM;Artemkaaas;Fixed in https://github.com/hyperledger/indy-sdk/pull/489;;;","18/Jan/18 6:46 PM;Artemkaaas;Changes: 
 -   Set active did as None on wallet closing

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/489]

Version:
 - master build #324;;;","23/Jan/18 5:04 AM;ozheregelya;*Environment:*
indy-node 1.2.271
indy-cli 1.3.0~323
libindy 1.3.0~323

*Steps to Validate:*

1. Open existing wallet, use existing DID.
2. Perform one of following actions:
  - close wallet;
  - open existing wallet;
  - open not existing wallet.

*Actual Results:*
Wallet name and DID disappears from prompt.;;;",,,,,,,,,,,,,,,,,,,,,,,,
CLI: No limitation for did length in 'did new' command,IS-498,26305,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,ozheregelya,ozheregelya,29/Dec/17 5:02 AM,24/Jan/18 4:59 PM,28/Oct/23 2:49 AM,18/Jan/18 11:53 PM,,,,,,,,0,,,,,"Steps to Reproduce:
 1. Open the CLI.
 2. Open any wallet.
 3. Run command 
 did new did=V4SGRU86Z58d6TV7PBUe6fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

Actual Results:
 did successfully created.

Expected Results:
 did wit invalid length should not be created, user-friendly error message should be shown.","indy-node 1.2.251
indy-cli 1.1.1~297",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrp3:",,,,,,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,ozheregelya,,,,,,,,,,"10/Jan/18 5:45 PM;Artemkaaas;Implemented in https://github.com/hyperledger/indy-sdk/pull/465;;;","11/Jan/18 11:16 PM;Artemkaaas;Changes: 
 -   Added length checking for did parameter in create_and_store_my_did API command

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/465]

Version:
 - master build #310;;;","18/Jan/18 11:53 PM;ozheregelya;*Environment:*
indy-node 1.2.271
indy-cli 1.3.0~323
libindy 1.3.0~323

*Steps to Validate:*
1. Open the CLI.
2. Open any wallet.
3. Run command 
did new did=V4SGRU86Z58d6TV7PBUe6fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

*Actual Results:*
Message ""Invalid format of command params. Please check format of posted JSONs, Keys, DIDs and etc..."" appears.

*Additional Information:*
Error message is unclear. Ticket for error handling improvements is IS-511.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"NYM adding via libindy python wrapper returns ""ValueError: 307 is not a valid ErrorCode""",IS-499,26310,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,VladimirWork,VladimirWork,29/Dec/17 6:46 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"Build Info:
libindy 1.1.1~297
indy-node 1.2.254

Steps to Reproduce:
1. Install pool of 4 nodes.
2. Place performance scripts on each of 4 clients for pool from Step 1.
3. Run `sudo python3 Perf_runner.py -a` with 25 threads sending 1000 NYMs each from 4 clients simultaneously.

Actual Results:
There is an error on several or all clients after 600..900 NYMs added:
{noformat}
        ======== Created NYM request...
_indy_loop_callback: Function returned error 307
Exception in callback _indy_loop_callback(2755, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62
handle: <Handle _indy_loop_callback(2755, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62>
Traceback (most recent call last):
  File ""/usr/lib/python3.5/asyncio/events.py"", line 125, in _run
    self._callback(*self._args)
  File ""/usr/local/lib/python3.5/dist-packages/indy/libindy.py"", line 70, in _indy_loop_callback
    future.set_exception(IndyError(ErrorCode(err)))
  File ""/usr/lib/python3.5/enum.py"", line 241, in __call__
    return cls.__new__(cls, value)
  File ""/usr/lib/python3.5/enum.py"", line 476, in __new__
    raise ValueError(""%r is not a valid %s"" % (value, cls.__name__))
ValueError: 307 is not a valid ErrorCode
_indy_loop_callback: Function returned error 307
Exception in callback _indy_loop_callback(2752, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62
handle: <Handle _indy_loop_callback(2752, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62>
Traceback (most recent call last):
  File ""/usr/lib/python3.5/asyncio/events.py"", line 125, in _run
    self._callback(*self._args)
  File ""/usr/local/lib/python3.5/dist-packages/indy/libindy.py"", line 70, in _indy_loop_callback
    future.set_exception(IndyError(ErrorCode(err)))
  File ""/usr/lib/python3.5/enum.py"", line 241, in __call__
    return cls.__new__(cls, value)
  File ""/usr/lib/python3.5/enum.py"", line 476, in __new__
    raise ValueError(""%r is not a valid %s"" % (value, cls.__name__))
ValueError: 307 is not a valid ErrorCode_indy_loop_callback: Function returned error 307
_indy_loop_callback: Function returned error 307
Exception in callback _indy_loop_callback(2746, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62
handle: <Handle _indy_loop_callback(2746, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62>
Traceback (most recent call last):
  File ""/usr/lib/python3.5/asyncio/events.py"", line 125, in _run
    self._callback(*self._args)
  File ""/usr/local/lib/python3.5/dist-packages/indy/libindy.py"", line 70, in _indy_loop_callback
    future.set_exception(IndyError(ErrorCode(err)))
  File ""/usr/lib/python3.5/enum.py"", line 241, in __call__
    return cls.__new__(cls, value)
  File ""/usr/lib/python3.5/enum.py"", line 476, in __new__
    raise ValueError(""%r is not a valid %s"" % (value, cls.__name__))
ValueError: 307 is not a valid ErrorCode
Exception in callback _indy_loop_callback(2752, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62
handle: <Handle _indy_loop_callback(2752, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62>
Traceback (most recent call last):
  File ""/usr/lib/python3.5/asyncio/events.py"", line 125, in _run
    self._callback(*self._args)
  File ""/usr/local/lib/python3.5/dist-packages/indy/libindy.py"", line 70, in _indy_loop_callback
    future.set_exception(IndyError(ErrorCode(err)))
  File ""/usr/lib/python3.5/enum.py"", line 241, in __call__
    return cls.__new__(cls, value)
  File ""/usr/lib/python3.5/enum.py"", line 476, in __new__
    raise ValueError(""%r is not a valid %s"" % (value, cls.__name__))
ValueError: 307 is not a valid ErrorCode
{noformat}

Expected Results:
Calls to libindy.py should work without any errors.

Additional Info:
Perf_runner.py calls Perf_Add_nyms.py (that uses libindy via python wrapper for sending NYMs) in several threads. Both scripts are in attachment.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Dec/17 6:42 PM;VladimirWork;Perf_Add_nyms.py;https://jira.hyperledger.org/secure/attachment/13954/Perf_Add_nyms.py","29/Dec/17 6:42 PM;VladimirWork;Perf_runner.py;https://jira.hyperledger.org/secure/attachment/13953/Perf_runner.py",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwyuf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VladimirWork,,,,,,,,,,,"26/Jul/18 9:30 PM;VladimirWork;There is a `Function returned error 307` if pool doesn't respond during current load script run.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Need to remove 'cid' parameter of 'did new' command,IS-500,26311,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,,ozheregelya,ozheregelya,29/Dec/17 8:29 PM,18/Jan/18 4:42 AM,28/Oct/23 2:49 AM,18/Jan/18 4:42 AM,,,,,,,,0,,,,,"It was discussed with [~gudkov] and [~ashcherbakov]. CIDs are not used now, so this parameter should be removed form CLI.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrj3:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,ozheregelya,,,,,,,,,,"10/Jan/18 5:44 PM;Artemkaaas;Implemented in https://github.com/hyperledger/indy-sdk/pull/461;;;","11/Jan/18 11:13 PM;Artemkaaas;Changes: 
 -   Deleted 'cid' param from did new Cli command

PR:
 *  [https://github.com/hyperledger/indy-sdk/pull/461]

Version:
 - master build #310;;;","18/Jan/18 4:42 AM;ozheregelya;*Environment:*
indy-node 1.2.271
indy-cli 1.3.0~323
libindy 1.3.0~323

*Steps to Validate:*
1. Setup the indy-cli, connect to working pool.
2. Open help for _did new_ command.
=> No CID parameter.
3. Try to run _did new_ command with CID parameter.

*Actual Results:*
Message ""Unknown ""cid"" parameter present"" appears.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Strange output of some commands,IS-501,26322,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Invalid,,ozheregelya,ozheregelya,31/Dec/17 5:58 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"Case 1:

 
{code:java}
pool(p1):wallet(wall):did(V4S...e6f):indy> ledger get-schema did=V4SGRU86Z58d6TV7PBUe6f name=gvt version=1.0
Following Schema has been received: ""
name:gvt | version:1.0 | attr_names:{""name"", ""age""} | origin:null""{code}
 

Actual Result:
Schema data are shown on next row after "" symbol.

Expected Result:
"" symbol should be on the same row as schema data.

Case 2:

 
{code:java}
pool(p1):wallet(wall):did(V4S...e6f):indy> ledger nym did=V4SGRU86Z58d6TV7PBUe6q role=TRUSTEE verkey=~V4SGRU86Z58d6TV7PBUe6f
NYM {""did"":""V4SGRU86Z58d6TV7PBUe6q"", ""verkey"":""Some(""~V4SGRU86Z58d6TV7PBUe6f"")"", ""role"":""Some(""TRUSTEE"")""} has been added to Ledger{code}
 

Actual Results:
""verkey"":""{color:#d04437}Some{color}(""~V4SGRU86Z58d6TV7PBUe6f"")""
""role"":""{color:#d04437}Some{color}(""TRUSTEE"")""

Expected Results:
""Some(...)"" confuses user. It should not be shown.","indy-node 1.2.251
indy-cli 1.1.1~297",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys6n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ozheregelya,,,,,,,,,,,"31/Dec/17 6:10 AM;ozheregelya;The issue is not actual for indy-cli version 1.1.1~306.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: 'ledger node' command doesn't work,IS-502,26326,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Invalid,,ozheregelya,ozheregelya,03/Jan/18 1:22 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"Steps to Reproduce:
1. Send one of following commands:
new node adding as Steward: 
{code:java}
ledger node target=A5iWQVT3k8Zo9nXj4otmeqaUziPQPCiDqcydXkAJBk1Y node_ip=127.0.0.1 node_port=9710 client_ip=127.0.0.1 client_port=9711 alias=Node15 services=VALIDATOR blskey=2zN3bHM1m4rLz54MJHYSwvqzPchYp8jkHswveCLAEJVcX6Mm1wHQD1SkPYMzUDTZvWvhuE6VNAkK3KxVeEmsanSmvjVkReDeBEMxeDaayjcZjFGPydyey1qxBHmTvAnBKoPydvuTAqx5f7YNNRAdeLmUi99gERUU7TD8KfAa6MpQ9bw{code}
node demotion as Trustee:
{code:java}
ledger node target=4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe alias=Node5 services={code}
Actual Results:
Invalid data has been received: ErrorImpl \{ code: Message(""unknown variant `POOL_LEDGER_TXNS`, expected one of `REQNACK`, `REPLY`, `REJECT`""), line: 1, column: 354 }

Expected Results:
Commands should work.

Additional Information:
Output with RUST_LOG=indy=trace
{code:java}
ledger node target=4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe alias=Node5 services=
TRACE|indy_cli::commands::ledger::node_command| src/commands/ledger.rs:487 | execute >> ctx CommandContext { main_prompt: RefCell { value: ""indy"" }, sub_prompts: RefCell { value: {1: ""pool(p1)"", 2: ""wallet(wall)"", 3: ""did(V4S...e6f)""} }, is_exit: RefCell { value: false }, int_values: RefCell { value: {""OPENED_WALLET_HANDLE"": 3, ""CONNECTED_POOL_HANDLE"": 2} }, string_values: RefCell { value: {""OPENED_WALLET_NAME"": ""wall"", ""ACTIVE_DID"": ""V4SGRU86Z58d6TV7PBUe6f"", ""CONNECTED_POOL_NAME"": ""p1""} } } params {""alias"": ""Node5"", ""services"": """", ""target"": ""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe""}
INFO|indy::commands | src/commands/mod.rs:95 | LedgerCommand command received
INFO|indy::commands | src/commands/mod.rs:95 | LedgerCommand command received
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
TRACE|indy::services::pool | src/services/pool/mod.rs:310 | cmd [[123, 34, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114, 34, 58, 34, 86, 52, 83, 71, 82, 85, 56, 54, 90, 53, 56, 100, 54, 84, 86, 55, 80, 66, 85, 101, 54, 102, 34, 44, 34, 111, 112, 101, 114, 97, 116, 105, 111, 110, 34, 58, 123, 34, 100, 97, 116, 97, 34, 58, 123, 34, 97, 108, 105, 97, 115, 34, 58, 34, 78, 111, 100, 101, 53, 34, 44, 34, 115, 101, 114, 118, 105, 99, 101, 115, 34, 58, 91, 93, 125, 44, 34, 100, 101, 115, 116, 34, 58, 34, 52, 83, 87, 111, 107, 67, 74, 87, 74, 99, 54, 57, 84, 110, 55, 52, 86, 118, 76, 83, 54, 116, 50, 71, 50, 117, 99, 118, 88, 113, 77, 57, 70, 68, 77, 115, 87, 74, 106, 109, 115, 85, 120, 101, 34, 44, 34, 116, 121, 112, 101, 34, 58, 34, 48, 34, 125, 44, 34, 112, 114, 111, 116, 111, 99, 111, 108, 86, 101, 114, 115, 105, 111, 110, 34, 58, 49, 44, 34, 114, 101, 113, 73, 100, 34, 58, 49, 53, 49, 52, 57, 48, 57, 48, 49, 57, 53, 54, 51, 52, 48, 55, 50, 50, 57, 44, 34, 115, 105, 103, 110, 97, 116, 117, 114, 101, 34, 58, 34, 52, 99, 51, 107, 54, 86, 85, 117, 56, 56, 74, 112, 105, 53, 72, 121, 70, 82, 72, 98, 107, 110, 86, 86, 86, 76, 86, 86, 86, 98, 54, 120, 78, 101, 85, 88, 120, 56, 113, 50, 101, 52, 114, 54, 98, 114, 51, 122, 52, 111, 50, 116, 54, 85, 89, 83, 119, 114, 120, 51, 53, 49, 51, 54, 111, 86, 90, 118, 104, 53, 87, 115, 57, 89, 111, 101, 53, 98, 112, 105, 71, 51, 55, 98, 85, 81, 116, 90, 34, 125], [27, 0, 0, 0]]
INFO|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:161 | cmd ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""data\"":{\""alias\"":\""Node5\"",\""services\"":[]},\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""type\"":\""0\""},\""protocolVersion\"":1,\""reqId\"":1514909019563407229,\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\""}""
INFO|indy::services::pool | src/services/pool/mod.rs:538 | Sending ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""data\"":{\""alias\"":\""Node5\"",\""services\"":[]},\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""type\"":\""0\""},\""protocolVersion\"":1,\""reqId\"":1514909019563407229,\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\""}""
INFO|indy::services::pool | src/services/pool/mod.rs:538 | Sending ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""data\"":{\""alias\"":\""Node5\"",\""services\"":[]},\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""type\"":\""0\""},\""protocolVersion\"":1,\""reqId\"":1514909019563407229,\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\""}""
INFO|indy::services::pool | src/services/pool/mod.rs:538 | Sending ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""data\"":{\""alias\"":\""Node5\"",\""services\"":[]},\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""type\"":\""0\""},\""protocolVersion\"":1,\""reqId\"":1514909019563407229,\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\""}""
INFO|indy::services::pool | src/services/pool/mod.rs:538 | Sending ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""data\"":{\""alias\"":\""Node5\"",\""services\"":[]},\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""type\"":\""0\""},\""protocolVersion\"":1,\""reqId\"":1514909019563407229,\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\""}""
INFO|indy::services::pool | src/services/pool/mod.rs:538 | Sending ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""data\"":{\""alias\"":\""Node5\"",\""services\"":[]},\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""type\"":\""0\""},\""protocolVersion\"":1,\""reqId\"":1514909019563407229,\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\""}""
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:348 | get_zmq_poll_timeout first_event Tm { tm_sec: 19, tm_min: 5, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 564551618 }
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout now_utc Tm { tm_sec: 39, tm_min: 3, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 564841583 }
TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 999710035 }
TRACE|indy::services::pool | src/services/pool/mod.rs:353 | get_zmq_poll_timeout diff ms 99999
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node4 {""reqId"":1514909019563407229,""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""op"":""REQACK""}
WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:56 | unhandled msg ReqACK(Response { req_id: 1514909019563407229 })
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:348 | get_zmq_poll_timeout first_event Tm { tm_sec: 19, tm_min: 5, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 564551618 }
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout now_utc Tm { tm_sec: 39, tm_min: 3, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 570950711 }
TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 993600907 }
TRACE|indy::services::pool | src/services/pool/mod.rs:353 | get_zmq_poll_timeout diff ms 99993
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node5 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""reqId"":1514909019563407229,""op"":""REQACK""}
WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:56 | unhandled msg ReqACK(Response { req_id: 1514909019563407229 })
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:348 | get_zmq_poll_timeout first_event Tm { tm_sec: 19, tm_min: 5, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 564551618 }
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout now_utc Tm { tm_sec: 39, tm_min: 3, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 572696973 }
TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 991854645 }
TRACE|indy::services::pool | src/services/pool/mod.rs:353 | get_zmq_poll_timeout diff ms 99991
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node2 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""reqId"":1514909019563407229,""op"":""REQACK""}
WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:56 | unhandled msg ReqACK(Response { req_id: 1514909019563407229 })
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:348 | get_zmq_poll_timeout first_event Tm { tm_sec: 19, tm_min: 5, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 564551618 }
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout now_utc Tm { tm_sec: 39, tm_min: 3, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 586109051 }
TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 978442567 }
TRACE|indy::services::pool | src/services/pool/mod.rs:353 | get_zmq_poll_timeout diff ms 99978
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node3 {""op"":""REQACK"",""reqId"":1514909019563407229,""identifier"":""V4SGRU86Z58d6TV7PBUe6f""}
WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:56 | unhandled msg ReqACK(Response { req_id: 1514909019563407229 })
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:348 | get_zmq_poll_timeout first_event Tm { tm_sec: 19, tm_min: 5, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 564551618 }
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout now_utc Tm { tm_sec: 39, tm_min: 3, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 589820023 }
TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 974731595 }
TRACE|indy::services::pool | src/services/pool/mod.rs:353 | get_zmq_poll_timeout diff ms 99974
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node1 {""reqId"":1514909019563407229,""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""op"":""REQACK""}
WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:56 | unhandled msg ReqACK(Response { req_id: 1514909019563407229 })
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:348 | get_zmq_poll_timeout first_event Tm { tm_sec: 19, tm_min: 5, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 564551618 }
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout now_utc Tm { tm_sec: 39, tm_min: 3, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 606157267 }
TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 958394351 }
TRACE|indy::services::pool | src/services/pool/mod.rs:353 | get_zmq_poll_timeout diff ms 99958
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node1 {""txn"":{""signatures"":null,""reqId"":1514909019563407229,""txnTime"":1514909019,""dest"":""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe"",""type"":""0"",""signature"":""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ"",""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""seqNo"":7,""data"":{""services"":[],""alias"":""Node5""}},""op"":""POOL_LEDGER_TXNS""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:63 | TransactionHandler::process_reply: >>> req_id: 1514909019563407229, raw_msg: ""{\""txn\"":{\""signatures\"":null,\""reqId\"":1514909019563407229,\""txnTime\"":1514909019,\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""type\"":\""0\"",\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\"",\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""seqNo\"":7,\""data\"":{\""services\"":[],\""alias\"":\""Node5\""}},\""op\"":\""POOL_LEDGER_TXNS\""}""
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80 | TransactionHandler::process_reply: reply_cnt: 0, f: 2
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:83 | TransactionHandler::process_reply: Try to verify proof and signature
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:231 | TransactionHandler::parse_reply_for_proof_checking: >>> json_msg: Null
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:237 | TransactionHandler::parse_reply_for_proof_checking: <<< No type field
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:116 | TransactionHandler::process_reply: consensus_reached false
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:133 | TransactionHandler::process_reply: <<<
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:348 | get_zmq_poll_timeout first_event Tm { tm_sec: 19, tm_min: 5, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 564551618 }
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout now_utc Tm { tm_sec: 39, tm_min: 3, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 751738578 }
TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 812813040 }
TRACE|indy::services::pool | src/services/pool/mod.rs:353 | get_zmq_poll_timeout diff ms 99812
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node2 {""op"":""POOL_LEDGER_TXNS"",""txn"":{""seqNo"":7,""data"":{""alias"":""Node5"",""services"":[]},""signatures"":null,""reqId"":1514909019563407229,""dest"":""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe"",""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""type"":""0"",""txnTime"":1514909019,""signature"":""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ""}}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:63 | TransactionHandler::process_reply: >>> req_id: 1514909019563407229, raw_msg: ""{\""op\"":\""POOL_LEDGER_TXNS\"",\""txn\"":{\""seqNo\"":7,\""data\"":{\""alias\"":\""Node5\"",\""services\"":[]},\""signatures\"":null,\""reqId\"":1514909019563407229,\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""type\"":\""0\"",\""txnTime\"":1514909019,\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\""}}""
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80 | TransactionHandler::process_reply: reply_cnt: 1, f: 2
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:83 | TransactionHandler::process_reply: Try to verify proof and signature
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:231 | TransactionHandler::parse_reply_for_proof_checking: >>> json_msg: Null
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:237 | TransactionHandler::parse_reply_for_proof_checking: <<< No type field
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:116 | TransactionHandler::process_reply: consensus_reached false
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:133 | TransactionHandler::process_reply: <<<
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:348 | get_zmq_poll_timeout first_event Tm { tm_sec: 19, tm_min: 5, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 564551618 }
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout now_utc Tm { tm_sec: 39, tm_min: 3, tm_hour: 16, tm_mday: 2, tm_mon: 0, tm_year: 118, tm_wday: 2, tm_yday: 1, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 754471694 }
TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 810079924 }
TRACE|indy::services::pool | src/services/pool/mod.rs:353 | get_zmq_poll_timeout diff ms 99810
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node5 {""txn"":{""seqNo"":7,""signatures"":null,""signature"":""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ"",""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""dest"":""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe"",""txnTime"":1514909019,""data"":{""services"":[],""alias"":""Node5""},""type"":""0"",""reqId"":1514909019563407229},""op"":""POOL_LEDGER_TXNS""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:63 | TransactionHandler::process_reply: >>> req_id: 1514909019563407229, raw_msg: ""{\""txn\"":{\""seqNo\"":7,\""signatures\"":null,\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\"",\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""txnTime\"":1514909019,\""data\"":{\""services\"":[],\""alias\"":\""Node5\""},\""type\"":\""0\"",\""reqId\"":1514909019563407229},\""op\"":\""POOL_LEDGER_TXNS\""}""
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80 | TransactionHandler::process_reply: reply_cnt: 2, f: 2
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:116 | TransactionHandler::process_reply: consensus_reached true
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:133 | TransactionHandler::process_reply: <<<
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
INFO|indy::commands | src/commands/mod.rs:95 | LedgerCommand command received
Invalid data has been received: ErrorImpl { code: Message(""unknown variant `POOL_LEDGER_TXNS`, expected one of `REQNACK`, `REPLY`, `REJECT`""), line: 1, column: 354 }
pool(p1):wallet(wall):did(V4S...e6f):indy> TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node1 {""result"":{""signatures"":null,""reqId"":1514909019563407229,""txnTime"":1514909019,""dest"":""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe"",""rootHash"":""JCQnZa4oN5ZXvWb2RXh8PbopM2oxBHmEXYuWRz5dt9X1"",""type"":""0"",""signature"":""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ"",""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""data"":{""services"":[],""alias"":""Node5""},""seqNo"":7,""auditPath"":[""8rKHMACvRVKBbv5Ut3GZX8FBmUNdiHCr7wwYaz7zGL8m"",""EXpY2StrjRki5N46aMDdjbwBPfZUz1AnLQupuVa1Tnwk""]},""op"":""REPLY""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:63 | TransactionHandler::process_reply: >>> req_id: 1514909019563407229, raw_msg: ""{\""result\"":{\""signatures\"":null,\""reqId\"":1514909019563407229,\""txnTime\"":1514909019,\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""rootHash\"":\""JCQnZa4oN5ZXvWb2RXh8PbopM2oxBHmEXYuWRz5dt9X1\"",\""type\"":\""0\"",\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\"",\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""data\"":{\""services\"":[],\""alias\"":\""Node5\""},\""seqNo\"":7,\""auditPath\"":[\""8rKHMACvRVKBbv5Ut3GZX8FBmUNdiHCr7wwYaz7zGL8m\"",\""EXpY2StrjRki5N46aMDdjbwBPfZUz1AnLQupuVa1Tnwk\""]},\""op\"":\""REPLY\""}""
WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:66 | TransactionHandler::process_reply: <<< No pending command for request
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node5 {""op"":""REPLY"",""result"":{""seqNo"":7,""signatures"":null,""signature"":""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ"",""auditPath"":[""8rKHMACvRVKBbv5Ut3GZX8FBmUNdiHCr7wwYaz7zGL8m"",""EXpY2StrjRki5N46aMDdjbwBPfZUz1AnLQupuVa1Tnwk""],""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""dest"":""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe"",""rootHash"":""JCQnZa4oN5ZXvWb2RXh8PbopM2oxBHmEXYuWRz5dt9X1"",""txnTime"":1514909019,""data"":{""services"":[],""alias"":""Node5""},""type"":""0"",""reqId"":1514909019563407229}}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:63 | TransactionHandler::process_reply: >>> req_id: 1514909019563407229, raw_msg: ""{\""op\"":\""REPLY\"",\""result\"":{\""seqNo\"":7,\""signatures\"":null,\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\"",\""auditPath\"":[\""8rKHMACvRVKBbv5Ut3GZX8FBmUNdiHCr7wwYaz7zGL8m\"",\""EXpY2StrjRki5N46aMDdjbwBPfZUz1AnLQupuVa1Tnwk\""],\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""rootHash\"":\""JCQnZa4oN5ZXvWb2RXh8PbopM2oxBHmEXYuWRz5dt9X1\"",\""txnTime\"":1514909019,\""data\"":{\""services\"":[],\""alias\"":\""Node5\""},\""type\"":\""0\"",\""reqId\"":1514909019563407229}}""
WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:66 | TransactionHandler::process_reply: <<< No pending command for request
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node3 {""op"":""POOL_LEDGER_TXNS"",""txn"":{""signatures"":null,""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""type"":""0"",""seqNo"":7,""dest"":""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe"",""reqId"":1514909019563407229,""txnTime"":1514909019,""signature"":""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ"",""data"":{""alias"":""Node5"",""services"":[]}}}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:63 | TransactionHandler::process_reply: >>> req_id: 1514909019563407229, raw_msg: ""{\""op\"":\""POOL_LEDGER_TXNS\"",\""txn\"":{\""signatures\"":null,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""type\"":\""0\"",\""seqNo\"":7,\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""reqId\"":1514909019563407229,\""txnTime\"":1514909019,\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\"",\""data\"":{\""alias\"":\""Node5\"",\""services\"":[]}}}""
WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:66 | TransactionHandler::process_reply: <<< No pending command for request
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node3 {""result"":{""txnTime"":1514909019,""auditPath"":[""8rKHMACvRVKBbv5Ut3GZX8FBmUNdiHCr7wwYaz7zGL8m"",""EXpY2StrjRki5N46aMDdjbwBPfZUz1AnLQupuVa1Tnwk""],""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""type"":""0"",""seqNo"":7,""dest"":""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe"",""reqId"":1514909019563407229,""signatures"":null,""rootHash"":""JCQnZa4oN5ZXvWb2RXh8PbopM2oxBHmEXYuWRz5dt9X1"",""signature"":""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ"",""data"":{""alias"":""Node5"",""services"":[]}},""op"":""REPLY""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:63 | TransactionHandler::process_reply: >>> req_id: 1514909019563407229, raw_msg: ""{\""result\"":{\""txnTime\"":1514909019,\""auditPath\"":[\""8rKHMACvRVKBbv5Ut3GZX8FBmUNdiHCr7wwYaz7zGL8m\"",\""EXpY2StrjRki5N46aMDdjbwBPfZUz1AnLQupuVa1Tnwk\""],\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""type\"":\""0\"",\""seqNo\"":7,\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""reqId\"":1514909019563407229,\""signatures\"":null,\""rootHash\"":\""JCQnZa4oN5ZXvWb2RXh8PbopM2oxBHmEXYuWRz5dt9X1\"",\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\"",\""data\"":{\""alias\"":\""Node5\"",\""services\"":[]}},\""op\"":\""REPLY\""}""
WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:66 | TransactionHandler::process_reply: <<< No pending command for request
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node2 {""result"":{""seqNo"":7,""rootHash"":""JCQnZa4oN5ZXvWb2RXh8PbopM2oxBHmEXYuWRz5dt9X1"",""data"":{""alias"":""Node5"",""services"":[]},""signatures"":null,""auditPath"":[""8rKHMACvRVKBbv5Ut3GZX8FBmUNdiHCr7wwYaz7zGL8m"",""EXpY2StrjRki5N46aMDdjbwBPfZUz1AnLQupuVa1Tnwk""],""reqId"":1514909019563407229,""dest"":""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe"",""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""type"":""0"",""txnTime"":1514909019,""signature"":""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ""},""op"":""REPLY""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:63 | TransactionHandler::process_reply: >>> req_id: 1514909019563407229, raw_msg: ""{\""result\"":{\""seqNo\"":7,\""rootHash\"":\""JCQnZa4oN5ZXvWb2RXh8PbopM2oxBHmEXYuWRz5dt9X1\"",\""data\"":{\""alias\"":\""Node5\"",\""services\"":[]},\""signatures\"":null,\""auditPath\"":[\""8rKHMACvRVKBbv5Ut3GZX8FBmUNdiHCr7wwYaz7zGL8m\"",\""EXpY2StrjRki5N46aMDdjbwBPfZUz1AnLQupuVa1Tnwk\""],\""reqId\"":1514909019563407229,\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""type\"":\""0\"",\""txnTime\"":1514909019,\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\""},\""op\"":\""REPLY\""}""
WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:66 | TransactionHandler::process_reply: <<< No pending command for request
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node4 {""txn"":{""txnTime"":1514909019,""reqId"":1514909019563407229,""seqNo"":7,""signatures"":null,""signature"":""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ"",""dest"":""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe"",""type"":""0"",""data"":{""services"":[],""alias"":""Node5""},""identifier"":""V4SGRU86Z58d6TV7PBUe6f""},""op"":""POOL_LEDGER_TXNS""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:63 | TransactionHandler::process_reply: >>> req_id: 1514909019563407229, raw_msg: ""{\""txn\"":{\""txnTime\"":1514909019,\""reqId\"":1514909019563407229,\""seqNo\"":7,\""signatures\"":null,\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\"",\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""type\"":\""0\"",\""data\"":{\""services\"":[],\""alias\"":\""Node5\""},\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\""},\""op\"":\""POOL_LEDGER_TXNS\""}""
WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:66 | TransactionHandler::process_reply: <<< No pending command for request
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:293 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:532 | RemoteNode::recv_msg Node4 {""op"":""REPLY"",""result"":{""txnTime"":1514909019,""reqId"":1514909019563407229,""seqNo"":7,""signatures"":null,""rootHash"":""JCQnZa4oN5ZXvWb2RXh8PbopM2oxBHmEXYuWRz5dt9X1"",""auditPath"":[""8rKHMACvRVKBbv5Ut3GZX8FBmUNdiHCr7wwYaz7zGL8m"",""EXpY2StrjRki5N46aMDdjbwBPfZUz1AnLQupuVa1Tnwk""],""dest"":""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe"",""type"":""0"",""data"":{""services"":[],""alias"":""Node5""},""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""signature"":""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ""}}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:63 | TransactionHandler::process_reply: >>> req_id: 1514909019563407229, raw_msg: ""{\""op\"":\""REPLY\"",\""result\"":{\""txnTime\"":1514909019,\""reqId\"":1514909019563407229,\""seqNo\"":7,\""signatures\"":null,\""rootHash\"":\""JCQnZa4oN5ZXvWb2RXh8PbopM2oxBHmEXYuWRz5dt9X1\"",\""auditPath\"":[\""8rKHMACvRVKBbv5Ut3GZX8FBmUNdiHCr7wwYaz7zGL8m\"",\""EXpY2StrjRki5N46aMDdjbwBPfZUz1AnLQupuVa1Tnwk\""],\""dest\"":\""4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe\"",\""type\"":\""0\"",\""data\"":{\""services\"":[],\""alias\"":\""Node5\""},\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""signature\"":\""4c3k6VUu88Jpi5HyFRHbknVVVLVVVb6xNeUXx8q2e4r6br3z4o2t6UYSwrx35136oVZvh5Ws9Yoe5bpiG37bUQtZ\""}}""
WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:66 | TransactionHandler::process_reply: <<< No pending command for request
TRACE|indy::services::pool | src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool |{code}
 ","indy-node 1.2.251
 indy-cli 1.1.1~306",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc7r:",,,,,,LibINDY 18.01,LibINDY 18.02 CLI +,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,18.06,18.07,EV 18.10 Stability and VC,18.08 Wallets+,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,"09/Jan/18 10:26 PM;Artemkaaas; 

Didn't reproduce for [indy-cli_1.1.1~306|https://repo.sovrin.org/sdk/lib/apt/xenial/master/indy-cli_1.1.1~306_amd64.deb] and current master branch
{code:java}
indy> pool connect pool1
Pool ""pool1"" has been connected
pool(pool1):indy> wallet open wallet1
Wallet ""wallet1"" has been opened
pool(pool1):wallet(wallet1):indy> did use V4SGRU86Z58d6TV7PBUe6f
Did ""V4SGRU86Z58d6TV7PBUe6f"" has been set as active
pool(pool1):wallet(wallet1):did(V4S...e6f):indy> did new
Did ""16ECL3RWjDgYisqSJHZT86"" has been created with ""13rFbtvbygnbBmzGxP43Bk66HxviMyZHL64p8jovizHf"" verkey
pool(pool1):wallet(wallet1):did(V4S...e6f):indy> ledger nym did=16ECL3RWjDgYisqSJHZT86 verkey=13rFbtvbygnbBmzGxP43Bk66HxviMyZHL64p8jovizHf role=STEWARD
Nym request has been sent to Ledger.
Metadata:
+---------------------+---------------------+
| Request ID | Transaction time |
+---------------------+---------------------+
| 1515504145386426216 | 2018-01-09 13:22:25 |
+---------------------+---------------------+
Data:
+------------------------+----------------------------------------------+---------+
| Did | Verkey | Role |
+------------------------+----------------------------------------------+---------+
| 16ECL3RWjDgYisqSJHZT86 | 13rFbtvbygnbBmzGxP43Bk66HxviMyZHL64p8jovizHf | STEWARD |
+------------------------+----------------------------------------------+---------+
pool(pool1):wallet(wallet1):did(V4S...e6f):indy> did use 16ECL3RWjDgYisqSJHZT86
Did ""16ECL3RWjDgYisqSJHZT86"" has been set as active
pool(pool1):wallet(wallet1):did(16E...T86):indy> ledger node target=A5iWQVT3k8Zo9nXj4otmeqaUziPQPCiDqcydXkAJBk1Y node_ip=127.0.0.1 node_port=9710 client_ip=127.0.0.1 client_port=9711 alias=Node15 services=VALIDATOR blskey=2zN3bHM1m4rLz54MJHYSwvqzPchYp8jkHswveCLAEJVcX6Mm1wHQD1SkPYMzUDTZvWvhuE6VNAkK3KxVeEmsanSmvjVkReDeBEMxeDaayjcZjFGPydyey1qxBHmTvAnBKoPydvuTAqx5f7YNNRAdeLmUi99gERUU7TD8KfAa6MpQ9bw
NodeConfig request has been sent to Ledger.
Metadata:
+------------------------+-----------------+---------------------+---------------------+
| Identifier | Sequence Number | Request ID | Transaction time |
+------------------------+-----------------+---------------------+---------------------+
| 16ECL3RWjDgYisqSJHZT86 | 5 | 1515504159658731274 | 2018-01-09 13:22:39 |
+------------------------+-----------------+---------------------+---------------------+
Data:
+--------+-----------+-----------+-----------+-------------+-------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Alias | Node Ip | Node Port | Client Ip | Client Port | Services | Blskey |
+--------+-----------+-----------+-----------+-------------+-------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Node15 | 127.0.0.1 | 9710 | 127.0.0.1 | 9711 | ""VALIDATOR"" | 2zN3bHM1m4rLz54MJHYSwvqzPchYp8jkHswveCLAEJVcX6Mm1wHQD1SkPYMzUDTZvWvhuE6VNAkK3KxVeEmsanSmvjVkReDeBEMxeDaayjcZjFGPydyey1qxBHmTvAnBKoPydvuTAqx5f7YNNRAdeLmUi99gERUU7TD8KfAa6MpQ9bw |
+--------+-----------+-----------+-----------+-------------+-------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
pool(pool1):wallet(wallet1):did(16E...T86):indy> did use V4SGRU86Z58d6TV7PBUe6f
Did ""V4SGRU86Z58d6TV7PBUe6f"" has been set as active
pool(pool1):wallet(wallet1):did(V4S...e6f):indy> ledger node target=A5iWQVT3k8Zo9nXj4otmeqaUziPQPCiDqcydXkAJBk1Y alias=Node15 services=
NodeConfig request has been sent to Ledger.
Metadata:
+------------------------+-----------------+---------------------+---------------------+
| Identifier | Sequence Number | Request ID | Transaction time |
+------------------------+-----------------+---------------------+---------------------+
| V4SGRU86Z58d6TV7PBUe6f | 6 | 1515504190066124774 | 2018-01-09 13:23:10 |
+------------------------+-----------------+---------------------+---------------------+
Data:
+--------+---------+-----------+-----------+-------------+----------+--------+
| Alias | Node Ip | Node Port | Client Ip | Client Port | Services | Blskey |
+--------+---------+-----------+-----------+-------------+----------+--------+
| Node15 | - | - | - | - | | - |
+--------+---------+-----------+-----------+-------------+----------+--------+
pool(pool1):wallet(wallet1):did(V4S...e6f):indy>
{code}
 ;;;","25/Jan/18 2:40 AM;ozheregelya;*Environment:*
 indy-node 1.2.281
 indy-cli 1.3.0~335
 libindy 1.3.0~335

Adding/demotion/promotion/updating node were retested and works well. Ticket was created by mistake, because libindy wasn't upgraded.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Improvements for pool-upgrade,IS-503,26346,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,ozheregelya,ozheregelya,04/Jan/18 2:24 AM,31/Jan/18 7:23 AM,28/Oct/23 2:49 AM,29/Jan/18 6:30 PM,,,,,,,,0,,,,,"Case 1: help improvements.
 name - Unique upgrade name. < ok
 version - Target upgrade version. < need to describe that version should not be less than current.
 action - Upgrade type. Either start or cancel. < ok
 sha256 - Unique hex identifier. < Should this parameter be unique? Now there is no validation of uniqueness of this value.
 timeout - (optional) Timeout. < Need to describe purpose of this parameter. 
 schedule - (optional) Node upgrade schedule. < Need to add information about requirements for the schedule: delays between nodes upgrades, all nodes should present in the schedule. And need to describe that force=true allows to ignore these requirements. Also need to explain that this parameter is mandatory for action=start.
 justification - (optional) Comment.
 reinstall - (optional) Same version reinstallation.
 force - (optional) Forced upgrade applying without reaching pool consensus

Case 2: 
 Need to change output from table to string because table is not readable.
 !image-2018-01-03-17-21-35-025.png|thumbnail! ","indy-node 1.2.251
 indy-cli 1.1.1~306",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/18 2:21 AM;ozheregelya;image-2018-01-03-17-21-35-025.png;https://jira.hyperledger.org/secure/attachment/13965/image-2018-01-03-17-21-35-025.png","29/Jan/18 6:28 PM;zhigunenko.dsr;image-2018-01-29-12-28-10-970.png;https://jira.hyperledger.org/secure/attachment/14428/image-2018-01-29-12-28-10-970.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyrkv:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,ozheregelya,zhigunenko.dsr,,,,,,,,,"19/Jan/18 6:09 PM;Artemkaaas;Fixed in https://github.com/hyperledger/indy-sdk/pull/492;;;","23/Jan/18 9:42 PM;Artemkaaas;Changes: 
 -   Corrected help for pool-upgrade Cli command.

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/492]

Version:
 - master build #335;;;","29/Jan/18 6:30 PM;zhigunenko.dsr;*Environment:*
indy-node 1.2.282
indy-cli 1.3.0~337
libindy 1.3.0~337

 

*Steps to Validate:*
 # Check help text
 # Run pool-upgrade

*Actual Results:*
 # All changes in the help are made
 # Output looks fine even in narrow terminal
!image-2018-01-29-12-28-10-970.png!

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
TGB Role should be removed from the code. TGB is not a role.,IS-504,26348,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,ozheregelya,ozheregelya,04/Jan/18 4:07 AM,11/Oct/18 6:25 PM,28/Oct/23 2:49 AM,05/Oct/18 11:45 PM,,,,,,,,0,,,,,See INDY-798.,"indy-node 1.2.251
 indy-cli 1.1.1~306",,,,,,,,,,,,,,,,,,,,IS-597,,,,INDY-798,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwv9j:",,,,,,Ev 18.20,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,ozheregelya,zhigunenko.dsr,,,,,,,,,"01/Oct/18 1:59 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1163;;;","04/Oct/18 10:18 PM;Artemkaaas;Changes: removed `TGB` role from acceptable values in `indy_build_nym_request`
Build version: master-769;;;","05/Oct/18 12:52 AM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.6~769

*Steps to Validate:*
1) create user with TGB role
2) create users with each other roles
3) export legacy wallet with TGB and get_nym from legacy ledger

*Actual Results:*
No way to create TGB
Other roles still work
No ""TGB"" matches in SDK source code

*Additional info:*
TGB still in source code in indy-node repo;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"Response Error 113-CommonInvalidStructure, not related to the actual scenario.",IS-505,26360,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,khoingo,khoingo,khoingo,04/Jan/18 5:05 PM,25/Jan/18 12:44 AM,28/Oct/23 2:49 AM,24/Jan/18 11:54 PM,,,,,,,,0,indy-sdk,,,," 
 We can reproduce the issue based on these steps below.
|Step   |Description|Data|
|1|Create Wallet and get wallet_handle|pool_name = ""test_pool""
 wallet_name = ""test_wallet""|
|2|Create 3 verkeys|first_key = await crypto.create_key(wallet_handle, _""\{}""_)
 second_key = await crypto.create_key(wallet_handle, _""\{}""_)
 another_key = await crypto.create_key(wallet_handle, _""\{}""_)|
|3|Create crypto box with first_key and second_key|msg = _""Test +crypto+""_.encode(_""UTF-8""_)
 encrypted_msg, nonce = await crypto.crypto_box(wallet_handle, first_key, second_key, msg)|
|4|Open crypto box with first_key and *another_key*|await crypto.crypto_box_open(wallet_handle, first_key, another_key, encrypted_msg, nonce)|

Actual result: 
             - Error code: 113

            - message: ErrorCode.CommonInvalidStructure

Expected result: 

The code should be something related to the actual scenarios, such as  Invalid/Wrong Param. ","Vagrant: 2.0.0, indy – plenum: 1.2.29, indy – anoncreds: 1.0.11, indy – node: 1.2.50, sovrin: 1.1.7, Virtual Box version: 5.1, Os: ubuntu16.04, RAM: 740MB, libindy: 1.1.0, libindy_crypto: 0.2.0, libsodium18: 1.0.8-5, libsqlite0: 2.8.17-12fakesync1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/18 4:52 PM;khoingo;crypto_report_error.py;https://jira.hyperledger.org/secure/attachment/13966/crypto_report_error.py",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-69,,,,,,,,,,"1|hzyrmn:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,khoingo,,,,,,,,,,"22/Jan/18 3:26 PM;Artemkaaas;[~khoingo] Actually CommonInvalidStructure implies `Invalid/Wrong Param` error.

You can find the description of error codes here: https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/api/mod.rs.

Furthermore, we created the ticket which will improve readability of libindy errors- https://jira.hyperledger.org/browse/IS-511.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Wrong output of ledger nym command in case of blacklisting identity,IS-506,26607,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,zhigunenko.dsr,ozheregelya,ozheregelya,05/Jan/18 8:33 PM,31/Jan/18 7:22 AM,28/Oct/23 2:49 AM,29/Jan/18 6:51 PM,,,,,,,,0,,,,,"Steps to Reproduce:
 1. Set yourself as TRUSTEE.
 2. Add to ledger another TRUSTEE.
 3. For new TRUSTEE send blacklist transaction.
 ledger nym did=K3dzmFMPgRZfj35RYhaYr6 role=
 4. send ledger get-nym transaction for new TRUSTEE.

Actual Results:
 Verkey in output after blacklisting is empty:
!Screenshot_2018-01-04_13-33-09.png|thumbnail!
But get-nym command returns correct value.

Expected Results:
 Verkey field after blacklisting should not be empty.","indy-node 1.2.251
indy-cli 1.1.1~306",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jan/18 8:28 PM;ozheregelya;Screenshot_2018-01-04_13-33-09.png;https://jira.hyperledger.org/secure/attachment/14100/Screenshot_2018-01-04_13-33-09.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzyrl3:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,ozheregelya,zhigunenko.dsr,,,,,,,,,"22/Jan/18 11:25 PM;Artemkaaas;We decided output only fields which present in the transaction response.

Implemented in https://github.com/hyperledger/indy-sdk/pull/497;;;","23/Jan/18 9:49 PM;Artemkaaas;Changes: 
 -   Output only that fields which present in the transaction response.

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/497]

Version:
 - master build #335;;;","29/Jan/18 6:51 PM;zhigunenko.dsr;*Environment:*
 indy-node 1.2.282
 indy-cli 1.3.0~337
 libindy 1.3.0~337

 

*Steps to Validate:*

1. Set yourself as TRUSTEE.
 2. Add to ledger another TRUSTEE.
 3. For new TRUSTEE send blacklist transaction.
 ledger nym did=K3dzmFMPgRZfj35RYhaYr6 role=
 4. send ledger get-nym transaction for new TRUSTEE.

*Actual Results:*
 The _ledger_ _get-nym_ output contains an empty role, verkey column omitted

*Additional Information:*

Also checked output after repeated grant a role;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
libindy.so is packaged without a version.,IS-507,26664,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,devin-fisher,devin-fisher,09/Jan/18 5:52 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"libindy is packaged as a file without a version number in the file name. This prevents multiple versions of libindy on the same machine. 

 

Most shared objects (.so) have a version number in their name and are managed via symlinks using ldconfig.

 

Also, libindy don't seem to have an SONAME.

See:

[https://www.debian.org/doc/manuals/maint-guide/advanced.en.html]

[https://fedoraproject.org/wiki/Packaging:Guidelines#Shared_Libraries]

https://www.systutorials.com/docs/linux/man/8-ldconfig/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwytz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,devin-fisher,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Returned result mismatches with comment (at 'signus.encrypt_sealed').,IS-508,26678,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,nhan.trong.nguyen,nhan.trong.nguyen,nhan.trong.nguyen,09/Jan/18 12:01 PM,25/Jan/18 12:44 AM,28/Oct/23 2:49 AM,24/Jan/18 11:58 PM,,,,,,,,0,,,,,"+Reproduce steps+:
 
| |Description|Data|
|1|Create a pool ledger config.|pool_name = ""test_signus_pool""
 pool_config = \{""geneis_txn"": pool_transactions_sandbox_genesis}|
|2|Open pool ledger and get ""pool_handle"".|pool_name = ""test_signus_pool""|
|3|Create a wallet.|pool_name = ""test_signus_pool""
 wallet_name = ""test_signus_wallet""|
|4|Open wallet and get ""wallet_handle"".|wallet_name = ""test_signus_wallet""|
|5|Create did and store result as ""my_did"" and ""my_verkey""
 create_and_store_my_did(wallet_handle, my_did_json)|wallet_handle in step 4.
 my_did_json = \{}|
|6|Create another did and store result as ""their_did"" and ""their_verkey"".
 create_and_store_my_did(wallet_handle, their_did_json)|wallet_handle in step 4.
 their_did_json = \{}|
|7|Store ""their_did"" and ""their_verkey"" into wallet.
 store_their_did(wallet_handle, their_json)|wallet_handle in step 4.
 their_json = \{""did"": their_did, ""verkey"": their_verkey}|
|8|Encrypt message by ""signus.encrypt"" and store results as ""encrypted_message"" and ""nonce"".
 encrypt(wallet_handle, pool_handle, my_did, their_did, message)|wallet_handle in step 4.
 pool_handle in step 2.
 my_did in step 5.
 their_did in step 6.
 message = ""Test signus"".encode(""utf-8"").|

+Expected result+: according to comment of 'signus.encrypt_sealed', this function returns a tuple that contains two elements: encrypted message and nonce.

+Actual result+: 'signus.encrypt_sealed' just returns encrypted message as an array.","Virtual box: 5.1

OS: Ubuntu 16.04

Indy wrapper: python3-indy-1.1.0

libindy: 1.1.0
libindy_crypto: 0.2.0
libsodium18: 1.0.8-5
libsqlite0: 2.8.17-12fakesync1

indy - plenum: 1.2.29
indy - anoncreds: 1.0.11
indy - node: 1.2.50
sovrin: 1.1.7",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jan/18 11:04 AM;nhan.trong.nguyen;comment_content.png;https://jira.hyperledger.org/secure/attachment/14115/comment_content.png","09/Jan/18 11:04 AM;nhan.trong.nguyen;console_when_bug_occur.png;https://jira.hyperledger.org/secure/attachment/14114/console_when_bug_occur.png","09/Jan/18 11:04 AM;nhan.trong.nguyen;log_file.log;https://jira.hyperledger.org/secure/attachment/14113/log_file.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrnr:",,,,,,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,nhan.trong.nguyen,,,,,,,,,,"09/Jan/18 10:17 PM;gudkov;In current master DID-based crypto calls were removed in favor of key-based crypto calls. singus.encrypt_sealed was removed too.

See this ticket for details https://jira.hyperledger.org/browse/IS-421

As result no fix needed.;;;","09/Jan/18 10:18 PM;gudkov;[~nhan.trong.nguyen] Could you validate this?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release indy-sdk with ledgerless DID functionality,IS-509,26684,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,sergey.minaev,sergey.minaev,09/Jan/18 8:17 PM,15/Jan/18 11:46 PM,28/Oct/23 2:49 AM,15/Jan/18 10:05 PM,,,,,,,,0,,,,,"* new release preparation
* support ledgerless DID in iOS",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrqf:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: Argument parser isn't user friendly in some cases,IS-510,26685,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,zhigunenko.dsr,Artemkaaas,Artemkaaas,09/Jan/18 9:28 PM,31/Jan/18 8:25 PM,28/Oct/23 2:49 AM,31/Jan/18 8:25 PM,,,,,,,,0,,,,,"1) Sending *_wallet create_* command with pool_name parameter only

Result: No required ""pool_name"" parameter present

Expected: No required ""name"" parameter present

Version: 284

2) Sending *_wallet create_* command with pool_name and name parameters (*in this sequence*)

Result: ""name"" parameter presented multiple times

Expected: _there should be no error, because all parameters are explicitly named and present_

Version: 284",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzwyrr:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"23/Jan/18 1:00 AM;Artemkaaas;Implemented in https://github.com/hyperledger/indy-sdk/pull/496;;;","29/Jan/18 11:48 PM;Artemkaaas;Changes: 
 - The main parameter must be first.

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/496]

Version:
 - master build #342;;;","30/Jan/18 11:50 PM;zhigunenko.dsr;*Environment:*
indy-node 1.2.282
indy-cli  1.3.0~342
libindy 1.3.0~342

*Additional information:*

**The primary parameter must now be in the first place in every command with it

*Reason to Reopened:*

Mistakes in help examples:
{quote}wallet create name=wallet1 pool_name=pool1 key
 wallet create name=wallet1 pool_name=pool1 key=AAAAB3NzaC1yc2EA
{quote}
""name="" must be omitted in current command syntax

 

 ;;;","31/Jan/18 2:00 PM;Artemkaaas;Fixed in: https://github.com/hyperledger/indy-sdk/pull/509/files;;;","31/Jan/18 8:11 PM;gudkov;[~Artemkaaas] Could you provide build version too?;;;","31/Jan/18 8:25 PM;zhigunenko.dsr;*Environment:*
indy-node 1.2.282
indy-cli  1.3.0~353
libindy 1.3.0~353

*Actual result:*
_wallet create help_ - help examples are correct
_wallet open help_ - help examples are correct;;;",,,,,,,,,,,,,,,,,,,,,,,,
Error handling: Libindy must return Message in addition to Error Code,IS-511,26686,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,09/Jan/18 9:34 PM,16/Jan/19 12:09 AM,28/Oct/23 2:49 AM,15/Jan/19 8:28 PM,,,1.8.0,,,,,1,,,,,"For the moment it is possible to see developer readable error information only in logs that complicates development. We need the way to return this information and ideally full error stack to developers.

*Acceptance criteria*
1. Libindy allow to return main error description and error stack
2. For wrapper dedicated stories created
2. For vcx and wrappers dedicated stories created
3. For CLI integration dedicated stories created
4. Changes are backward compatible

*POA*

1. Migrate to *failure *crate for error handling to get full error chain
2. Add synchronous *indy_get_error(command_handle, error_json)* method that will return last error description and full error stack. 
3. It will be allowed to call indy_get_error in the same thread in case of synchronous error or inside of callback in case of asynchronous error
4. Before synchronous return or callback calling store information about error in local thread storage
5. indy_get_error will read information from local thread storage. verify that it corresponds to command_handle and return to user.
6. Add error information to exception classes in all libindy wrappers, vcx and vcx wrappers (dedicated story)
7. Add printing new error information to CLI (dedicated story)",,,,,,,,,,,,,,,IS-1120,,,,,,IS-997,IS-1116,,,,,IS-517,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwrhj:90r",,,,,,Ev 19.01,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,gudkov,ignisvulpis,SeanBohan_Sovrin,xnopre,,,,,,,"13/Jan/18 7:08 AM;SeanBohan_Sovrin;[~gudkov] Do we have an error handling design?;;;","18/Jan/18 8:19 PM;gudkov;[~SeanBohan_Sovrin]

We already discussed this internally, but for current moment we don't have formal document.;;;","25/Dec/18 9:58 PM;ignisvulpis;Is the discussion regarding synchronous vs thread-safe somewhere documented?

I would advise against a synchronous get_error method because I believe that leads to more trouble for developers.

Why not return a serialized error json in the callbacks? Yes, this changes the API and probably merits a (major?) version number change but doing synchronous programming is soo last century. :);;;","31/Dec/18 3:52 PM;gudkov;[~ignisvulpis] get_error should be called inside of asynchronous callback in the same place you check error code now. As a result there will be no any significant difference with adding additional error information to callbacks, but it will be 100% backward compatibility and 100% asynchronous code. Also it matters only for C code consumers, all wrappers will have error information in exception or error classes. ;;;","02/Jan/19 7:32 PM;ignisvulpis;I am certain that some developers will call get_error from outside callbacks thus getting the wrong error message.
Anyway, I agree that get_error  is the most non-intrusive way to add error messages.

What do you think about new API methods, new APIs or changing APIs would you then add an error_json parameter to the callback?;;;","03/Jan/19 1:27 AM;gudkov;In my vision get_error will be able to return good error message if it will be called in a wrong context as it will require command handle param. Anyway it will affect only C API users as wrappers will not provide get_error. Wrappers will call get_error automatically and convert to native way for corresponded language. 

In my vision new API calls should use the current approach. Mixing of different approaches in my vision will just cause more questions and mistakes. ;;;","14/Jan/19 9:22 PM;Artemkaaas;Changes: 
    Added `indy_get_current_error` API function to get details for current error.
Done in PR: https://github.com/hyperledger/indy-sdk/pull/1397;;;","15/Jan/19 8:28 PM;gudkov;PR merged, changes look fine,;;;",,,,,,,,,,,,,,,,,,,,,,
Keys in wallet are overwritten when indy_issuer_create_and_store_claim_def is called more than once,IS-512,26697,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,ryanmarsh,ryanmarsh,ryanmarsh,10/Jan/18 6:12 AM,25/Jan/18 12:44 AM,28/Oct/23 2:49 AM,24/Jan/18 11:58 PM,,,,,,,,0,,,,,"-Wallet is corrupted when indy_issuer_create_and_store_claim_def is called more than once.

-The keys associated to this claim_def are overwritten making the initial claim_def unusable.

-All of this is done silently. No message or error is given when it overwrites the keys. 

-There is no way, through the api, to see if a specific claim_def is already in the wallet.
{code:java}
// Creating Claim
// Keys are created and stored in my wallet
indy_issuer_create_and_store_claim_def(command_handle,
                                       wallet_handle,
                                       my_issuer_did, 
                                       schema_json,
                                       signature_type,
                                       create_non_revoc,
                                       cb);
// Write to ledger

// Call create claim again with same issuer_did and schema
indy_issuer_create_and_store_claim_def(command_handle,
                                       wallet_handle,
                                       my_issuer_did, 
                                       schema_json,
                                       signature_type,
                                       create_non_revoc,
                                       cb);

//I no longer have access to the keys associated with the claim_def stored on the ledger.

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrnz:",,,,,,LibINDY 18.01,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,ashcherbakov,gudkov,ryanmarsh,,,,,,,,"10/Jan/18 7:40 PM;ashcherbakov;I think we should have an assumption to be able to have just one CLAIM_DEF (that is a key) for an ISSUER_DID.
If one needs to rotate a key, a new DID must be used. It means that ISSUER_DID is rather a CLAIM_DEF's DID (or key's DID).
So, we must check if there is already a CLAIM_DEF for a Schema-DID pair, and not allow to override it on ledger. We now do the same for Schema (that is we can not override Schema with the existent name-version-origin triple).

So, we should do the following:
1) libindy: do not allow to create and override CLAIM_DEF in the wallet for already existent schem-did pair;
2) indy-node: do not allow to override CLAIM_DEF on ledger for already existent schem-did pair;
3) indy-node: update docs and diagrams so that it's clear it's not possible to create multiple CLAIM_DEFS for the same schema-did pair.;;;","10/Jan/18 7:49 PM;ashcherbakov;Created https://jira.hyperledger.org/browse/INDY-1083 for the work on indy-node side.;;;","10/Jan/18 8:14 PM;gudkov;We need to check that create_and_store_my did doesn't allow to overwrite keys too.;;;","10/Jan/18 11:24 PM;Artemkaaas;Implemented in https://github.com/hyperledger/indy-sdk/pull/470;;;","15/Jan/18 2:08 PM;Artemkaaas;Changes: 
 - Forbidden secondary creating ClaimDef with the same schema and issuer did (added AnoncredsClaimDefAlreadyExistsError)
 - Forbidden secondary creating MyDid with same did (added DidAlreadyExistsError)

PR:
 *   [https://github.com/hyperledger/indy-sdk/pull/|https://github.com/hyperledger/indy-sdk/pull/449]470

Version:
 - master build #318;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: Support the latest version of Anoncreds protocol,IS-513,26708,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,10/Jan/18 10:22 PM,31/Jan/18 8:07 PM,28/Oct/23 2:49 AM,31/Jan/18 8:07 PM,,,,,,,,0,,,,,"We got the updated paper for CL Anoncreds protocol and need to support this version in libindy and indy-crypto.

Important thing is provide the link between Claim and ClaimRequest",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzwytb:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"29/Jan/18 6:32 PM;Artemkaaas;Implemented in https://github.com/hyperledger/indy-crypto/pull/64;;;","31/Jan/18 2:06 PM;Artemkaaas;Changes: 
 - Implemented the latest version of Anoncreds book. The logic of `Primary Proof` has been improved. Extra correctness checks have been added to each step.

PR:
 * https://github.com/hyperledger/indy-crypto/pull/64

Version:
 - master build #24;;;","31/Jan/18 8:07 PM;gudkov;Results seem ok for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"Revocation: Support unified approach to reference Revocation Register, ClaimDefs, Schemas, etc in Revocation API",IS-514,26709,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,Artemkaaas,Artemkaaas,10/Jan/18 11:22 PM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,20/Apr/18 12:17 AM,,,1.4,,,,,0,,,,,"As of now, we have a strange fix of using primary-key-tuples and seqNos.
*    SCHEMA and CLAIM_DEF are identified by primary-key-tuples
*    SCHEMA within CLAIM_DEF (`schemaRef` attribute in CLAIM_DEF) is identified by Schema's seqNo.
*    The same problem is for REVOC_REG (we need to reference CLAIM_DEF there; should we use primary-key-tuple?)

We should unify reference approach and also fix internal storage of revocation register:
indy_issuer_create_and_store_revoc_reg API call must create and store revocation registry using a unique referent and return this refer. Add refer as param to indy_issuer_create_claim and indy_issuer_revoke_claim function.

 ",,,,,,,,,,,IS-515,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzz4yv:",,,,,,LibINDY 18.04 Revocation,18.05,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,Artemkaaas,ashcherbakov,gudkov,SeanBohan_Sovrin,,,,,,,,"13/Jan/18 7:07 AM;SeanBohan_Sovrin;[~ashcherbakov] - what is the right key for this object in the object model?;;;","15/Jan/18 7:20 PM;ashcherbakov;I think we could use 'revoc_reg_issuer_DID' + 'claim_def_ref (seq_no)' as a reference. 
I believe it will be defined in more details once we really start revocation support work.;;;","02/Feb/18 10:34 PM;ashcherbakov;The current proposal is to use UUID-based references: [https://github.com/hyperledger/indy-node/pull/547];;;","20/Apr/18 12:17 AM;gudkov;Current master uses new references strategy. We can consider it as done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Revocation: Design Revocation Node API ,IS-515,26712,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,10/Jan/18 11:50 PM,14/Feb/18 11:13 PM,28/Oct/23 2:49 AM,14/Feb/18 11:13 PM,,,,,,,,0,,,,,"We need to review Revocation API in libindy. The problem i see is that it is impossible to create multiple revocation registries for one claim def. 

We need to agree how to identiy revocation registry part, align this with Node team and implement this changes in API.",,,,,,,,,,,,,,,IS-514,IS-555,IS-464,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzwu6v:",,,,,,LibIndy 18.03,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,ashcherbakov,gudkov,,,,,,,,,,"01/Feb/18 10:47 PM;ashcherbakov;PR with the Design: https://github.com/hyperledger/indy-node/pull/547;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
indy_key_for_did() needs a way to express time constraints,IS-516,26757,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,danielhardman,danielhardman,12/Jan/18 5:06 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"([~gudkov]: Adding this after reviewing the fix for IS-421. The fix was great, but it raised this issue in my mind...) 

Right now we are making the assumption that when we validate a signature, we always want to use the current verkey for a given DID. Hence, indy_key_for_did() just maps a DID to its current key.

When we are dealing with signed stuff, we need to be able to say, ""This was signed 9 months ago. I therefore want the verkey for a DID–but I want the value that was current 9 months ago, not the one that's valid today."" We could accomplish this by adding an ""as_of_timestamp"" param to the indy_key_for_did() function, with its default value equal to null or zero, meaning ""right now"". Perhaps there are other ways to accomplish the same thing...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwytr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,danielhardman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error code 113 for the empty pool_transaction file.,IS-517,26764,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,khoingo,khoingo,12/Jan/18 12:45 PM,24/Jan/18 4:59 PM,28/Oct/23 2:49 AM,22/Jan/18 10:03 PM,,,,,,,,0,,,,,"We can reproduce the issue based on these steps below.

 
|Step   |Description|Data|
|1|pool.create_pool_ledger_config(pool_name, pool_config)|pool_name = “test_pool”
 pool_config = “pool_transaction_genesis_empty.txn”|

 

o   Actual result: Error code 113

o   Expected result: The error code should relate to the root cause.

*NOTE:* Manually run via CLI, we have the error message as below.

The information required to connect this client to the nodes cannot be found. This is an error. To correct the error, get the file containing genesis transactions (the file name is `pool_transactions_genesis`) from the github repository and place it in directory `/home/vagrant/.indy-cli/networks`. 

The github url is [https://github.com/hyperledger/indy-node].","Vagrant: 2.0.0, indy – plenum: 1.2.29, indy – anoncreds: 1.0.11, indy – node: 1.2.50, sovrin: 1.1.7, Virtual Box version: 5.1, Os: ubuntu16.04, RAM: 740MB, libindy: 1.1.0, libindy_crypto: 0.2.0, libsodium18: 1.0.8-5, libsqlite0: 2.8.17-12fakesync1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-518,IS-519,IS-511,,,,"12/Jan/18 12:39 PM;khoingo;empty.png;https://jira.hyperledger.org/secure/attachment/14136/empty.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzyrof:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,HuynhNghia,khoingo,sergey.minaev,,,,,,,,,"22/Jan/18 10:02 PM;sergey.minaev;Invalid structure is expected error for described case. It's generic error about something input from user is invalid (pool transactions file should be non-empty).
But it's not enough to understand use case, so we have issue IS-511;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error code 302 when using the pool_transaction file with incorrect 2 nodes.,IS-518,26765,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,khoingo,khoingo,12/Jan/18 12:53 PM,25/Jan/18 12:44 AM,28/Oct/23 2:49 AM,24/Jan/18 11:54 PM,,,,,,,,0,,,,,"We can reproduce the issue based on these steps below.
|Step   |Description|Data|
|1|pool.create_pool_ledger_config(pool_name, pool_config)|pool_name = “test_pool”
 pool_config = “pool_transaction_genesis_incorrect_2_nodes.txn”|
|2|Pool.open_pool_ledger(pool_name, None)|pool_name in step 1|

 
 * Actual result: Error code 302
 * Expected result: The output should return something about not being able to reach consensus.

*NOTE:* Manually run via CLI, we have the message as below.

Connecting to sandbox...

CONNECTION: Fes2R82a2djp92NYSsPm8QCACxou7ZZ9eJsY8UHymgo1 now connected to Node1C

CONNECTION: Fes2R82a2djp92NYSsPm8QCACxou7ZZ9eJsY8UHymgo1 now connected to Node2C

*Connected to sandbox.*","Vagrant: 2.0.0, indy – plenum: 1.2.29, indy – anoncreds: 1.0.11, indy – node: 1.2.50, sovrin: 1.1.7, Virtual Box version: 5.1, Os: ubuntu16.04, RAM: 740MB, libindy: 1.1.0, libindy_crypto: 0.2.0, libsodium18: 1.0.8-5, libsqlite0: 2.8.17-12fakesync1",,,,,,,,,,,,,,,,,,,,,,,,,,IS-517,,,,,IS-519,IS-123,,,,,"12/Jan/18 12:51 PM;khoingo;incorrect_2nodes.png;https://jira.hyperledger.org/secure/attachment/14138/incorrect_2nodes.png","12/Jan/18 12:51 PM;khoingo;pool_transaction_genesis_incorrect_2_nodes.txn;https://jira.hyperledger.org/secure/attachment/14137/pool_transaction_genesis_incorrect_2_nodes.txn",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzyrm7:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,khoingo,sergey.minaev,,,,,,,,,,"19/Jan/18 12:48 AM;sergey.minaev;Fixed during IS-123 and now expected behavior is returned error code PoolLedgerTimeout = 307;;;","19/Jan/18 1:21 AM;sergey.minaev;[~khoingo] please note, CLI (python indy from indy-node package) will be deprecated soon and it's different codebase with different behavior. So please don't consider it as absolute reference point.
But of course it may be a good example as more clear and user-friendly response.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Libindy looks like hang when using the pool_transaction file with incorrect 3 or 4 nodes,IS-519,26766,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,khoingo,khoingo,khoingo,12/Jan/18 12:59 PM,25/Jan/18 12:44 AM,28/Oct/23 2:49 AM,24/Jan/18 11:54 PM,,,,,,,,0,,,,,"We can reproduce the issue based on these steps below.
|Step   |Description|Data|
|1|pool.create_pool_ledger_config(pool_name, pool_config)|pool_name = “test_pool”
 pool_config = “pool_transaction_genesis_incorrect_3_nodes.txn”
 or “pool_transaction_genesis_incorrect_4_nodes.txn”|
|2|Pool.open_pool_ledger(pool_name, None)|pool_name in step 1|

 

o   Actual result: doesn’t return anything. It looks like hang (waiting for 15 minutes.)

o   Expected result: Libindy would be nice to have information that shows something is happening and it will time out after several minutes/seconds...or keywords to that effect.

*NOTE:* Manually run via CLI, we have the error message as below.

CONNECTION: mZMVRdnuH71os9TiehyBvUR15hNbdkcvSF8kfMsUFpR listening for other node                                                                                s at 0.0.0.0:6007

CONNECTION: mZMVRdnuH71os9TiehyBvUR15hNbdkcvSF8kfMsUFpR looking for Node1C at 10                                                                                .20.30.201:9702

CONNECTION: mZMVRdnuH71os9TiehyBvUR15hNbdkcvSF8kfMsUFpR looking for Node4C at 12                                                                                7.0.0.1:9708

CONNECTION: mZMVRdnuH71os9TiehyBvUR15hNbdkcvSF8kfMsUFpR looking for Node2C at 12                                                                                7.0.0.99:9704

CONNECTION: mZMVRdnuH71os9TiehyBvUR15hNbdkcvSF8kfMsUFpR looking for Node3C at 12                                                                                7.0.0.1:9706

Connecting to sandbox...

CONNECTION: mZMVRdnuH71os9TiehyBvUR15hNbdkcvSF8kfMsUFpR now connected to Node1C","Vagrant: 2.0.0, indy – plenum: 1.2.29, indy – anoncreds: 1.0.11, indy – node: 1.2.50, sovrin: 1.1.7, Virtual Box version: 5.1, Os: ubuntu16.04, RAM: 740MB, libindy: 1.1.0, libindy_crypto: 0.2.0, libsodium18: 1.0.8-5, libsqlite0: 2.8.17-12fakesync1",,,,,,,,,,,,,,,,,,,,,,,,,,IS-517,IS-518,,,,IS-123,,,,,,"12/Jan/18 12:58 PM;khoingo;incorrect_3_nodes.png;https://jira.hyperledger.org/secure/attachment/14140/incorrect_3_nodes.png","12/Jan/18 12:58 PM;khoingo;incorrect_4_nodes.png;https://jira.hyperledger.org/secure/attachment/14139/incorrect_4_nodes.png","12/Jan/18 12:58 PM;khoingo;pool_transaction_genesis_incorrect_3_nodes.txn;https://jira.hyperledger.org/secure/attachment/14142/pool_transaction_genesis_incorrect_3_nodes.txn","12/Jan/18 12:58 PM;khoingo;pool_transaction_genesis_incorrect_4_nodes.txn;https://jira.hyperledger.org/secure/attachment/14141/pool_transaction_genesis_incorrect_4_nodes.txn",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzyrmf:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,khoingo,sergey.minaev,,,,,,,,,,"22/Jan/18 9:57 PM;sergey.minaev;Fixed during IS-123 and now expected behavior is returned error code PoolLedgerTimeout = 307;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release indy-sdk with encrypted default wallet,IS-520,26772,,Task,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,krw910,sergey.minaev,sergey.minaev,13/Jan/18 12:07 AM,18/Jan/18 1:57 AM,28/Oct/23 2:49 AM,18/Jan/18 1:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrpj:",,,,,,LibINDY 18.01,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,krw910,sergey.minaev,,,,,,,,,,"15/Jan/18 10:07 PM;sergey.minaev;New stable release 1.3.0 is published. Against 1.1.0 it includes call for ledgerless DID support and option to encrypt default wallet.;;;","15/Jan/18 10:09 PM;sergey.minaev;[~krw910] please verify that current functionality is enough for all teams.;;;","18/Jan/18 1:57 AM;krw910;The teams have informed me the wallet encryption is present and they have integrated it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Docker network used in Jenkinsfile's shouldn't use 10/8 network ranges,IS-521,26788,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,dfarns,dfarns,13/Jan/18 7:49 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,devops,,,,"When we have Jenkins build a docker image and start a container in a docker network, there should be no need for it to be a bridged 10.0.0.0/8 network which would have over 16million addresses. 

 

In these scenarios the bridged interface on the OS makes it so that nothing on the docker host can talk to any other external host in the 10/8 network.

 

The recommendation would be to use a network range like 172.18.0.0/24 etc.. instead.

 

References to files that need to be changed and tweaked:

[https://github.com/hyperledger/indy-sdk/blob/132375a8a779d0d998d923d4a177f97a1b7d32d8/Jenkinsfile.cd#L107]
 [https://github.com/hyperledger/indy-sdk/blob/165a4d63239675771e528a011b75a7e26de0ff36/Jenkinsfile.ci#L283]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-524,,,,,,,,,,"1|hzwwcn:",,,,,,LibINDY 18.02 CLI +,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,andkononykhin,dfarns,gudkov,,,,,,,,,"15/Mar/18 5:04 AM;gudkov;[~andkononykhin]

Do you have any progress with this ticket? Do we need to postpone it?;;;","16/Mar/18 5:54 AM;gudkov;I am moving it to backlog, as we don't plan progress here;;;","23/Mar/18 5:27 PM;andkononykhin;[~sergey.minaev] [~gudkov]

During work on IS-598 I made some review of mentioned jenkinsfiles (aslo jenkinsfiles for ci should be taken into account) and I think we do not need there custom subnet at all. As of now indy-sdk team uses it to make indy-pool docker container [having|https://github.com/hyperledger/indy-sdk/blob/e5e13f5cf59469d68e23590736a063c7e2d8c4cc/Jenkinsfile.ci#L358] fixed IP address to [reference|https://github.com/hyperledger/indy-sdk/blob/e5e13f5cf59469d68e23590736a063c7e2d8c4cc/Jenkinsfile.ci#L235] it from another client-side container.

I suggest the following options:
 * use user-defined bridge network without specifying any subnet. It will give an ability to reference container to each other by hostnames (could be specified as ""–name' during docker run) More details: [https://docs.docker.com/network/bridge|https://docs.docker.com/network/bridge/]
 * use default bridge network. sub-options:
 ** use '–link' in ""docker run"" command to have the same ability to reference to other container ([https://docs.docker.com/v17.09/engine/userguide/networking/configure-dns/)]
 ** do not use any hostname (alias) related arguments and resolve pool-network container's IP on-the-fly after it has been started (e.g. using docker inspect command, but it'stricky a bit and seems not stable: [https://stackoverflow.com/questions/17157721/how-to-get-a-docker-containers-ip-address-from-the-host)]

In case one of hostname / alias related options IP can be resolved using getent tool (which is available without any additional packages installation) from within any container inthe same network like that: *getent hosts <indy-pool-container-name> | awk '\{print $1}'*

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Libindy wrapper for Go ,IS-522,26822,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,arjanvaneersel,arjanvaneersel,arjanvaneersel,16/Jan/18 3:33 PM,08/Oct/19 10:46 PM,28/Oct/23 2:49 AM,08/Oct/19 10:38 PM,,,,,,,,0,,,,,"I'd like to propose the development of a libindy wrapper for Go.

Go offers the possibility to invoke Rust libraries through CGO, hence I don't see any general technical objections to creating such a wrapper.

I can contribute myself to the development of this wrapper.",,,,,,,,,,,,,,,,,,,,,IS-1110,IS-1111,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Go Wrapper,Done,,,,,,,,"1|hzy3wn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,arjanvaneersel,esplinr,sasiedu,,,,,,,,,"02/Mar/19 6:42 AM;esplinr;Wallet part of a Go Wrapper:
https://github.com/hyperledger/indy-sdk/pull/1355;;;","04/May/19 8:40 AM;esplinr;The current contributors to Indy SDK cannot support a Go wrapper. We don't have the skills to review pull requests, test the wrapper, or manage the CI / CD.

This request has driven a fundamental change in how we plan to structure the SDK wrappers. The core SDK will contain thin language bindings, and we will encourage language idiomatic libraries to be created alongside the core SDK.

As a result, we recommend this wrapper move to a new repository named hyperledger/indy-sdk-go.

[~arjanvaneersel] or [~sasiedu], if you are willing to maintain that repository, we can set it up and give you the necessary permissions.;;;","04/May/19 11:12 AM;arjanvaneersel;I'm happy to accept that task, as well as contribute to the further development of this SDK.;;;","04/May/19 7:07 PM;sasiedu;Sure, [~arjanvaneersel] can maintain the repository, I don't mind contributing from time to time.;;;","08/Oct/19 10:38 PM;esplinr;Future Go libraries will be produced for Aries instead of specific to the Indy SDK.

https://github.com/hyperledger/aries-framework-go

https://github.com/hyperledger/aries-sdk-go;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Uncomment tests for Ledger ATTRIB transaction,IS-523,26823,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,Artemkaaas,Artemkaaas,16/Jan/18 7:11 PM,14/Feb/18 11:12 PM,28/Oct/23 2:49 AM,14/Feb/18 11:11 PM,,,,,,,,0,,,,,Uncomment indy_attrib_requests_works_for_encrypted_value and indy_attrib_requests_works_for_hash_value tests.,,,,,,,,,,,INDY-1074,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-57,,,,,,,,,,"1|hzwyrj:",,,,,,LibINDY 18.02 CLI +,LibIndy 18.03,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,"07/Feb/18 8:59 PM;Artemkaaas;Implemented in: https://github.com/hyperledger/indy-sdk/pull/526;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI / CD Improvements,IS-524,26873,,Epic,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,17/Jan/18 6:13 PM,11/Oct/19 9:41 PM,28/Oct/23 2:49 AM,,,,,,,,,0,devops,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-6,,CI-CD,To Do,,,,,,,,"1|hzy3uv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: cli can't connect to the pool with only one node,IS-525,26885,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,sergey.minaev,ozheregelya,ozheregelya,18/Jan/18 3:54 AM,24/Jan/18 4:59 PM,28/Oct/23 2:49 AM,22/Jan/18 9:52 PM,,,,,,,,0,,,,,"Steps to Reproduce:
1. Setup pool of 6 nodes.
2. Stop any 5 nodes.
3. Try to connect to the pool using indy-cli.

Actual Results:
Message ""Pool ""<pool_name>"" has not been connected."" appear.

Expected Results:
Client can read from pool with one node (if BLS configured on nodes), so it should be able to connect to the pool.","indy-node 1.2.271
indy-cli 1.3.0~323
libindy 1.3.0~323",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyron:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,ozheregelya,SeanBohan_Sovrin,sergey.minaev,,,,,,,,"18/Jan/18 7:13 AM;SeanBohan_Sovrin;[~gudkov]

Can we change LibIndy to succeed in connecting if only ONE node is accessible?;;;","22/Jan/18 7:04 AM;sergey.minaev;[~SeanBohan_Sovrin], [~ozheregelya] In my understanding of the system client *must not* *connect* to pool with only one active node, even for read requests. The reason is client should has up to date pool state before checking state proof of read requests.
[~ashcherbakov] [~gudkov] what do you think?

Also after checking of pool ledger, IndySDK (and CLI) is able to work with only one node.
In other words IndySDK will successfully perform read requests in the next scenario:
1) start pool
2) start client, connect to the pool. IndySDK (CLI) will check pool state and keys for BLS signatures
3) stop all nodes except one
4) perform read request.
;;;","22/Jan/18 4:21 PM;ashcherbakov;I believe the 4 steps Sergey described are correct. The main thing is that we can use just one Node for read requests.

It will be possible to connect to one node only once we have full Observer support and advanced catch-up logic.

BTW [~sergey.minaev] do we persist pool ledger now or performing catch-up from scratch on each restart?

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
[anoncreds] prover_get_claims_for_proof_req method throws error.,IS-526,26932,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,khoingo,khoingo,khoingo,18/Jan/18 6:52 PM,31/Jan/18 7:12 PM,28/Oct/23 2:49 AM,31/Jan/18 7:12 PM,,,,,,,,0,,,,,"We can reproduce it based on these steps below.
 # Prepare data for 2 methods   prover_get_claims and prover_get_claims_for_proof_req.
 # Call  prover_get_claims(wallet_handle, filter_json) method.
 # Call  prover_get_claims_for_proof_req(wallet_handle, proof_request_json) method.

Actual result: Libindy returned the error message: 'function' object has no attribute 'cb' (image1.png)

Expected result: It should be mentioned in the method comment or return the meaning full error/message.

*Note*: Relating to image2.png
 * the prover_get_claims.cb has created already (line 455-457) after we call “prover_get_claims”. So we cannot pass the condition (line 512) to create prover_get_claims_for_proof_req.cb line 514 . That means the “prover_get_claims_for_proof_req.cb” won’t be initialized. The error occurs at line 519: await do_call(…, …, prover_get_claims_for_proof_req.cb).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jan/18 6:48 PM;khoingo;image1.png;https://jira.hyperledger.org/secure/attachment/14301/image1.png","18/Jan/18 6:48 PM;khoingo;image2.png;https://jira.hyperledger.org/secure/attachment/14300/image2.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwyt3:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,khoingo,,,,,,,,,,"23/Jan/18 3:36 PM;Artemkaaas;Fixed in https://github.com/hyperledger/indy-sdk/pull/499;;;","25/Jan/18 1:52 PM;Artemkaaas;Changes: 
 -   Fixed typo in the condition of callback creation for prover_get_claims_for_proof_req command in python wrapper.

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/499]

Version:
 - master build #337;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
New Wallet api to store key value pair and get it back by key,IS-527,26937,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Invalid,,tylerq,tylerq,19/Jan/18 1:00 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"As a user of libindy sdk, we need api by which we can store any arbitarary data (like encryption key, which would be string for some agent, sometimes it might be a msg sent by user, which would be binary, and there might be some more places we might need this type of api).

So, basically say I am a owner of a wallet w1
Then, I should be able to store ""k1"" (string) -> v1 (any) type of data
and then I should be able to get by ""k1"" and it should return v1 (any)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwwfj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,gudkov,tylerq,,,,,,,,,"19/Jan/18 7:52 PM;gudkov;[~danielhardman] [~ashcherbakov] [~sergey.minaev] [~tylerq] [~rajesh.kalaria] [~nage]

I am not sure that it is the right way to follow.

Wallet in libindy isn't general purpose database. It is intended to store only private primary crypto material now (DIDs, keys, ClaimDefs, Claims) that are related to Identity Owner only. Wallets are intended to save and secure the most critical data. Messages and Proofs are derivative application specific data that libindy helps to create and properly encrypt, but storage options seem application choice.

The problems we can meet with this approach are:
1. Security problems. We will concentrate on security of big database instead of security of small set of most critical data.
2. Performance and scale. Wallet has very simple interface. It doesn't provide indices or entities relationship. 
3. We can force application developers to use libindy wallet instead of application level database to store all application data.;;;","24/May/18 10:07 PM;gudkov;[~tylerq] [~esplinr] Seems this ticket isn't actual now and can be closed. Also libindy in 1.5 release will provide NonSecrets API that will allow to store user-defined non-secrets in the wallet.;;;","07/Jun/18 2:09 AM;esplinr;Agreed. The Non-Secrets API is a better way to meet this use case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto: Review dependencies list,IS-528,26986,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,zhigunenko.dsr,sergey.minaev,sergey.minaev,22/Jan/18 11:08 PM,28/Feb/18 3:47 AM,28/Oct/23 2:49 AM,21/Feb/18 8:43 PM,,,,,,,,0,,,,, Users notices that libindy-crypto has some missed dependencies as deb package.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-321,,,,,,,,,,"1|hzyv2v:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,gudkov,sergey.minaev,zhigunenko.dsr,,,,,,,,"08/Feb/18 7:44 PM;Artemkaaas;Fixed in: https://github.com/hyperledger/indy-crypto/pull/72;;;","14/Feb/18 11:10 PM;gudkov;Recommendation to test:
- Install indy-crypto in empty docker container
- Check that libssl1.0.0 will be installed automatically
- Run indy-crypto python wrapper tests by instruction in [https://github.com/hyperledger/indy-crypto/tree/master/wrappers/python];;;","21/Feb/18 8:43 PM;zhigunenko.dsr;*Environment:*
libindy-crypto 0.3.0
python3-indy-crypto 0.1.6~32

*Actual results:*
# libssl1.0.0 was installed automatically after _apt install -f_
# Wrapper tests passed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: unnecessary symbols at the end of message,IS-529,26995,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,zhigunenko.dsr,ozheregelya,ozheregelya,23/Jan/18 5:17 AM,26/Jan/18 10:06 PM,28/Oct/23 2:49 AM,26/Jan/18 10:06 PM,,,,,,,,0,,,,,"*Case 1:*
 *Steps to Reproduce:*
 1. As STEWARD, try to add new TRUSTEE.

*Actual Results:*
{code:java}
pool(q1):wallet(wall):did(PNy...YuX):indy> ledger nym did=PNyXMrF6sR8Mn9MHywFYu1 role=TRUSTEE verkey=DCSXyfBCeBLab8gbwtAwkcmAHb9vSgXgTW1pnej1S6re
Transaction has been rejected: ""STEWARD cannot add TRUSTEE\'"" 
{code}
*Expected Results:*
 \' should not appear at the end of message.

*Additional Information:*
 This issue is actual for all messages ""Transaction has been rejected""

Case 2: the same symbols with commands parameters:
{code:java}
pool(q1):wallet(wall):did(PNy...YuX):indy> ledger node target=A5iWQVT3k8Zo9nXj4otmeqaUziPQPCiDqcydXkAJBk1Y alias=Node5 services=
Transaction has been rejected: ""Missing some of {\'client_ip\', \'node_port\', \'node_ip\', \'alias\', \'client_port\'}\""""


pool(q1):wallet(wall):did(V4S...e6f):indy> ledger node target=4SWokCJWJc69Tn74VvLS6t2G2ucvXqM9FDMsWJjmsUxe alias=Node9 services=
Transaction has been rejected: ""existing data has conflicts with request data {\'alias\': \'Node9\', \'services\': []}\""""{code}","indy-node 1.2.271
indy-cli 1.3.0~323
libindy 1.3.0~323",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrlj:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,ozheregelya,zhigunenko.dsr,,,,,,,,,"23/Jan/18 3:28 PM;Artemkaaas;Fixed in https://github.com/hyperledger/indy-sdk/pull/498;;;","25/Jan/18 1:55 PM;Artemkaaas;Changes: 
 - Regular expression was improved to better parsing of Ledger error.

PR:
 * [https://github.com/hyperledger/indy-sdk/pull/498]

Version:
 - master build #337;;;","26/Jan/18 10:06 PM;zhigunenko.dsr;*Environment:*
indy-node 1.2.282
indy-cli 1.3.0~337
libindy 1.3.0~337

 

*Steps to Validate:*

1. As STEWARD, try to add new TRUSTEE.

*Actual Results:*
""Transaction has been rejected: STEWARD cannot add TRUSTEE""

*Additional Information:*

Also checked for node creating case

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: incorrect error message during connection to not existing pool,IS-530,26996,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,ozheregelya,ozheregelya,23/Jan/18 5:24 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"*Steps to Reproduce:*
1. Open the CLI.
2. Try to connect to not existing pool.

*Actual Results:*
Message ""Indy SDK error occurred CommonIOError"" appears.

*Expected Results:*
Message should be ""Pool ""<pool_name>"" does not exist.""","indy-node 1.2.271
indy-cli 1.3.0~323
libindy 1.3.0~323",,,,,,,,,,,,,,,,,,,,,,,,,,IS-531,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyua7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,krw910,ozheregelya,,,,,,,,,,"23/Jan/18 7:02 AM;krw910;[~ozheregelya] We are closing this ticket and creating a new story to cover more of the messaging scenarios.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing config file errors from the SDK could generate error messages that indicate what can be done to correct problem,IS-531,26999,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,SeanBohan_Sovrin,SeanBohan_Sovrin,23/Jan/18 7:00 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-350,,,,,,,IS-530,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc7z:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,18.06,18.07,EV 18.10 Stability and VC,18.08 Wallets+,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,,,,gudkov,SeanBohan_Sovrin,,,,,,,,,,"02/Feb/18 10:51 PM;gudkov;[~SeanBohan_Sovrin] We don't undrstand the problem. Could you provide more valuable description?;;;","14/Feb/18 11:28 PM;gudkov;Duplicate for IS-350;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Load test: Load test fails with 114 error after submitting 1000 nyms,IS-532,27000,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,,ozheregelya,ozheregelya,23/Jan/18 7:49 AM,15/Feb/18 8:19 PM,28/Oct/23 2:49 AM,15/Feb/18 8:19 PM,,,,,,,,0,,,,,"*Steps to Reproduce:*
1. Setup the pool of 25 nodes (all 25 nodes were initialized using generate_indy_pool_transactions script).
2. Run the load test with following arguments:
{code:java}
python3 Perf_Add_nyms.py -s 5 -n 3000{code}
*Actual Results:*
Script output is in attachment.

*Expected Results:*
Load test should not fail.","indy-node 1.2.271
indy-cli 1.3.0~323
libindy 1.3.0~323",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jan/18 3:17 AM;ozheregelya;Node1.log;https://jira.hyperledger.org/secure/attachment/14369/Node1.log","24/Jan/18 3:17 AM;ozheregelya;Node10.log;https://jira.hyperledger.org/secure/attachment/14378/Node10.log","24/Jan/18 3:17 AM;ozheregelya;Node11.log;https://jira.hyperledger.org/secure/attachment/14379/Node11.log","24/Jan/18 3:17 AM;ozheregelya;Node12.log;https://jira.hyperledger.org/secure/attachment/14380/Node12.log","24/Jan/18 3:17 AM;ozheregelya;Node13.log;https://jira.hyperledger.org/secure/attachment/14381/Node13.log","24/Jan/18 3:17 AM;ozheregelya;Node14.log;https://jira.hyperledger.org/secure/attachment/14382/Node14.log","24/Jan/18 3:17 AM;ozheregelya;Node15.log;https://jira.hyperledger.org/secure/attachment/14383/Node15.log","24/Jan/18 3:17 AM;ozheregelya;Node16.log;https://jira.hyperledger.org/secure/attachment/14384/Node16.log","24/Jan/18 3:17 AM;ozheregelya;Node17.log;https://jira.hyperledger.org/secure/attachment/14385/Node17.log","24/Jan/18 3:17 AM;ozheregelya;Node18.log;https://jira.hyperledger.org/secure/attachment/14386/Node18.log","24/Jan/18 3:17 AM;ozheregelya;Node19.log;https://jira.hyperledger.org/secure/attachment/14387/Node19.log","24/Jan/18 3:17 AM;ozheregelya;Node2.log;https://jira.hyperledger.org/secure/attachment/14370/Node2.log","24/Jan/18 3:17 AM;ozheregelya;Node20.log;https://jira.hyperledger.org/secure/attachment/14388/Node20.log","24/Jan/18 3:17 AM;ozheregelya;Node21.log;https://jira.hyperledger.org/secure/attachment/14389/Node21.log","24/Jan/18 3:17 AM;ozheregelya;Node22.log;https://jira.hyperledger.org/secure/attachment/14390/Node22.log","24/Jan/18 3:17 AM;ozheregelya;Node23.log;https://jira.hyperledger.org/secure/attachment/14391/Node23.log","24/Jan/18 3:17 AM;ozheregelya;Node24.log;https://jira.hyperledger.org/secure/attachment/14392/Node24.log","24/Jan/18 3:17 AM;ozheregelya;Node25.log;https://jira.hyperledger.org/secure/attachment/14393/Node25.log","24/Jan/18 3:17 AM;ozheregelya;Node3.log;https://jira.hyperledger.org/secure/attachment/14371/Node3.log","24/Jan/18 3:17 AM;ozheregelya;Node4.log;https://jira.hyperledger.org/secure/attachment/14372/Node4.log","24/Jan/18 3:17 AM;ozheregelya;Node5.log;https://jira.hyperledger.org/secure/attachment/14373/Node5.log","24/Jan/18 3:17 AM;ozheregelya;Node6.log;https://jira.hyperledger.org/secure/attachment/14374/Node6.log","24/Jan/18 3:17 AM;ozheregelya;Node7.log;https://jira.hyperledger.org/secure/attachment/14375/Node7.log","24/Jan/18 3:17 AM;ozheregelya;Node8.log;https://jira.hyperledger.org/secure/attachment/14376/Node8.log","24/Jan/18 3:17 AM;ozheregelya;Node9.log;https://jira.hyperledger.org/secure/attachment/14377/Node9.log","08/Feb/18 11:54 PM;zhigunenko.dsr;crash.7z;https://jira.hyperledger.org/secure/attachment/14557/crash.7z","23/Jan/18 7:48 AM;ozheregelya;load114.txt;https://jira.hyperledger.org/secure/attachment/14364/load114.txt","24/Jan/18 8:24 AM;ozheregelya;perf.7z;https://jira.hyperledger.org/secure/attachment/14394/perf.7z",,,,,,,,,,,,,,,,,,,"1|hzwysf:",,,,,,LibINDY 18.02 CLI +,LibIndy 18.03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,ozheregelya,sergey.minaev,zhigunenko.dsr,,,,,,,,"24/Jan/18 3:17 AM;ozheregelya;Output of load script with RUST_LOG=indy=trace:
{code:java}
	========  DID1000: D99TmyXtcRyvtswWnBKnoE 
 INFO|indy::commands                |                src/commands/mod.rs:103 | LedgerCommand command received
 INFO|ledger_command_executor       |             src/commands/ledger.rs:156 | BuildNymRequest command received
_indy_loop_callback: Function returned b'{""reqId"":1516730506226861682,""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""operation"":{""dest"":""D99TmyXtcRyvtswWnBKnoE"",""type"":""1""}}'
	======== Created NYM request...
 INFO|indy::commands                |                src/commands/mod.rs:103 | LedgerCommand command received
 INFO|ledger_command_executor       |             src/commands/ledger.rs:134 | SignAndSubmitRequest command received
TRACE|indy::services::pool          |           src/services/pool/mod.rs:664 | zmq poll 2
 INFO|indy::services::pool          |           src/services/pool/mod.rs:885 | RemoteNode::recv_msg Node20 {""result"":{""reqId"":1516730505573887039,""type"":""1"",""txnTime"":1516730505,""seqNo"":2058,""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""dest"":""7nWuAzbbN4ms34chon2nEb"",""auditPath"":[""3pAqdchzoou8yLaFMidyMqdqTmhpz8kaLnqYKmK1WhoH"",""HsV7TJVF8XHLTFTMzoSzTvzQRqVRyLajP3QLExLA3YgF"",""BsGKeXQ4X4hnkEgBbWnW4GbP6UCmaEG8osJLF615cbLz""],""signatures"":null,""signature"":""43AXv6aaWdkksmZajHSGQh2KpXCezNQ37jC3X4UcZAwAMUixjDxUFGE5WaduMpMTsgbjEcnc2Jmpxcv8C9c22JYA"",""rootHash"":""7BXUnr9GdeoQdFRpWz3UgtaJJHDNTgMrFr7XLymfE1Vw""},""op"":""REPLY""}
TRACE|indy::services::pool          |           src/services/pool/mod.rs:678 | cmd [[123, 34, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114, 34, 58, 34, 84, 104, 55, 77, 112, 84, 97, 82, 90, 86, 82, 89, 110, 80, 105, 97, 98, 100, 115, 56, 49, 89, 34, 44, 34, 111, 112, 101, 114, 97, 116, 105, 111, 110, 34, 58, 123, 34, 100, 101, 115, 116, 34, 58, 34, 68, 57, 57, 84, 109, 121, 88, 116, 99, 82, 121, 118, 116, 115, 119, 87, 110, 66, 75, 110, 111, 69, 34, 44, 34, 116, 121, 112, 101, 34, 58, 34, 49, 34, 125, 44, 34, 114, 101, 113, 73, 100, 34, 58, 49, 53, 49, 54, 55, 51, 48, 53, 48, 54, 50, 50, 54, 56, 54, 49, 54, 56, 50, 44, 34, 115, 105, 103, 110, 97, 116, 117, 114, 101, 34, 58, 34, 53, 104, 111, 102, 115, 77, 53, 106, 118, 90, 116, 51, 88, 90, 83, 90, 74, 120, 104, 100, 66, 109, 102, 75, 113, 89, 51, 121, 83, 114, 72, 116, 119, 120, 90, 68, 118, 72, 67, 119, 76, 112, 70, 97, 100, 101, 114, 49, 71, 54, 119, 114, 87, 83, 118, 118, 74, 113, 116, 121, 110, 49, 116, 122, 113, 116, 65, 53, 121, 75, 113, 107, 107, 98, 55, 78, 49, 68, 75, 114, 75, 111, 51, 97, 67, 99, 106, 78, 34, 125], [235, 3, 0, 0]]
TRACE|indy::services::pool          |           src/services/pool/mod.rs:153 | TransactionHandler::process_reply: >>> req_id: 1516730505573887039, raw_msg: ""{\""result\"":{\""reqId\"":1516730505573887039,\""type\"":\""1\"",\""txnTime\"":1516730505,\""seqNo\"":2058,\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""dest\"":\""7nWuAzbbN4ms34chon2nEb\"",\""auditPath\"":[\""3pAqdchzoou8yLaFMidyMqdqTmhpz8kaLnqYKmK1WhoH\"",\""HsV7TJVF8XHLTFTMzoSzTvzQRqVRyLajP3QLExLA3YgF\"",\""BsGKeXQ4X4hnkEgBbWnW4GbP6UCmaEG8osJLF615cbLz\""],\""signatures\"":null,\""signature\"":\""43AXv6aaWdkksmZajHSGQh2KpXCezNQ37jC3X4UcZAwAMUixjDxUFGE5WaduMpMTsgbjEcnc2Jmpxcv8C9c22JYA\"",\""rootHash\"":\""7BXUnr9GdeoQdFRpWz3UgtaJJHDNTgMrFr7XLymfE1Vw\""},\""op\"":\""REPLY\""}""
 WARN|indy::services::pool          |           src/services/pool/mod.rs:156 | TransactionHandler::process_reply: <<< No pending command for request
 INFO|indy::services::pool          |           src/services/pool/mod.rs:245 | cmd ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:891 | Sending ""{\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""operation\"":{\""dest\"":\""D99TmyXtcRyvtswWnBKnoE\"",\""type\"":\""1\""},\""reqId\"":1516730506226861682,\""signature\"":\""5hofsM5jvZt3XZSZJxhdBmfKqY3ySrHtwxZDvHCwLpFader1G6wrWSvvJqtyn1tzqtA5yKqkkb7N1DKrKo3aCcjN\""}""
 INFO|indy::commands                |                src/commands/mod.rs:103 | LedgerCommand command received
 INFO|ledger_command_executor       |             src/commands/ledger.rs:142 | SubmitAck command received
ERROR|indy::errors::indy            |                 src/errors/indy.rs:63  | Casting error to ErrorCode: Resource temporarily unavailable
_indy_loop_callback: Function returned error 114
ErrorCode.CommonIOError
TRACE|indy::services::pool          |           src/services/pool/mod.rs:621 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:615 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:664 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:885 | RemoteNode::recv_msg Node7 {""op"":""REPLY"",""result"":{""txnTime"":1516730505,""signature"":""43AXv6aaWdkksmZajHSGQh2KpXCezNQ37jC3X4UcZAwAMUixjDxUFGE5WaduMpMTsgbjEcnc2Jmpxcv8C9c22JYA"",""dest"":""7nWuAzbbN4ms34chon2nEb"",""auditPath"":[""3pAqdchzoou8yLaFMidyMqdqTmhpz8kaLnqYKmK1WhoH"",""HsV7TJVF8XHLTFTMzoSzTvzQRqVRyLajP3QLExLA3YgF"",""BsGKeXQ4X4hnkEgBbWnW4GbP6UCmaEG8osJLF615cbLz""],""rootHash"":""7BXUnr9GdeoQdFRpWz3UgtaJJHDNTgMrFr7XLymfE1Vw"",""signatures"":null,""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""type"":""1"",""reqId"":1516730505573887039,""seqNo"":2058}}
TRACE|indy::services::pool          |           src/services/pool/mod.rs:153 | TransactionHandler::process_reply: >>> req_id: 1516730505573887039, raw_msg: ""{\""op\"":\""REPLY\"",\""result\"":{\""txnTime\"":1516730505,\""signature\"":\""43AXv6aaWdkksmZajHSGQh2KpXCezNQ37jC3X4UcZAwAMUixjDxUFGE5WaduMpMTsgbjEcnc2Jmpxcv8C9c22JYA\"",\""dest\"":\""7nWuAzbbN4ms34chon2nEb\"",\""auditPath\"":[\""3pAqdchzoou8yLaFMidyMqdqTmhpz8kaLnqYKmK1WhoH\"",\""HsV7TJVF8XHLTFTMzoSzTvzQRqVRyLajP3QLExLA3YgF\"",\""BsGKeXQ4X4hnkEgBbWnW4GbP6UCmaEG8osJLF615cbLz\""],\""rootHash\"":\""7BXUnr9GdeoQdFRpWz3UgtaJJHDNTgMrFr7XLymfE1Vw\"",\""signatures\"":null,\""identifier\"":\""Th7MpTaRZVRYnPiabds81Y\"",\""type\"":\""1\"",\""reqId\"":1516730505573887039,\""seqNo\"":2058}}""
 WARN|indy::services::pool          |           src/services/pool/mod.rs:156 | TransactionHandler::process_reply: <<< No pending command for request
TRACE|indy::services::pool          |           src/services/pool/mod.rs:621 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:615 | zmq poll loop >>
 INFO|poolPerf_Add_NYMS             |           src/services/pool/mod.rs:806 | Drop started
 INFO|poolPerf_Add_NYMS             |           src/services/pool/mod.rs:814 | Drop wait worker
TRACE|indy::services::pool          |           src/services/pool/mod.rs:664 | zmq poll 1
TRACE|indy::services::pool          |           src/services/pool/mod.rs:678 | cmd [[101, 120, 105, 116]]
TRACE|indy::services::pool          |           src/services/pool/mod.rs:619 | process_actions - Pool work terminated
 INFO|poolPerf_Add_NYMS             |           src/services/pool/mod.rs:817 | Drop finished
FATAL: exception not rethrown
Aborted (core dumped)
{code}
Nodes logs are attached.

UPD: Node 11 not connected because of mistake in AWS template, Node1 has less transactions than another ones.;;;","24/Jan/18 8:24 AM;ozheregelya;My version of performance scripts:  [^perf.7z] ;;;","31/Jan/18 7:28 PM;sergey.minaev;The new master build 1.3.0~351 contains more trace for this case. [~ozheregelya] It would be nice to reproduce this issue on the latest build.;;;","08/Feb/18 11:54 PM;zhigunenko.dsr;*Environment:*
* indy-node 1.2.296
* libindy 1.3.0~367

Reproduced in 4-node pool (default Docker pool_start config), script started from one of nodes
_run.py -p testPool -n 2000 -i 000000000000000000000000Steward1 -s 40_
Logfile: crash.7z;;;","14/Feb/18 11:34 PM;Artemkaaas;Changes: 
 - Changed strategy for zmq sending messages.

PR:
 - [https://github.com/hyperledger/indy-sdk/pull/519|https://github.com/hyperledger/indy-sdk/pull/531];;;","15/Feb/18 8:19 PM;zhigunenko.dsr;*Environment:*
indy-anoncreds		1.0.32
indy-node			1.3.308
indy-plenum			1.2.248
libindy				1.3.1~394
libindy-crypto			0.2.0
python3-indy-crypto	0.2.0

*Actual results:*
Load script successfully finished;;;",,,,,,,,,,,,,,,,,,,,,,,,
CLI: MacOS build support,IS-533,27009,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,gudkov,gudkov,23/Jan/18 4:19 PM,12/Sep/19 8:26 PM,28/Oct/23 2:49 AM,12/Sep/19 8:26 PM,,,1.12.0,,,,,0,help-wanted,,,,"1. We should be able to build CLI on MacOS
2. We should have documentation for MacOS build
3. Please check that we have documentation for ubuntu and windows build too.",,,,,,,,,,,,,,,,,,,,,IS-678,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-60,,,,,,,,,,"1|hzwrhj:910sx0900009eo94",,,,,,Indy SDK 19.18,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,sergey.minaev,VladimirWork,,,,,,,,"01/Aug/18 4:42 PM;sergey.minaev;1st item already done (see IS-678). So this ticket only about documentation;;;","03/Sep/19 10:02 PM;Artemkaaas;Updated CLI documentation in the scope of PR: https://github.com/hyperledger/indy-sdk/pull/1872;;;","10/Sep/19 11:05 PM;sergey.minaev;build of CLI for MacOS are produced now by CD pipeline. E.g. https://repo.sovrin.org/macos/indy-cli/master/

Recommendation for QA:
- download libindy and CLI for mac
- specify path to libindy dynamic library
- run indy-cli and check basic functionality;;;","12/Sep/19 8:25 PM;VladimirWork;Build Info:
libindy 1.11.1~1318
indy-cli 1.11.1~1318

Steps to Validate:
1. Download libindy and CLI for mac.
2. Specify path to libindy dynamic library.
3. Run indy-cli and check basic functionality (smoke testing).

Actual Results:
Basic operations (pool create/connect/disconnect, wallet create/open/close, did new/use, etc) work as expected.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
indy-cli Binary Does Not Run,IS-534,27033,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,jjensenevernym,jjensenevernym,24/Jan/18 7:36 AM,30/Jan/18 1:44 AM,28/Oct/23 2:49 AM,30/Jan/18 1:43 AM,,,,,,,,0,,,,,"I installed v1.3.0~335 (from https://repo.sovrin.org/sdk/deb/pool/xenial/master/i/indy-cli/) on an Ubuntu 16.04 VM and resolved all package dependencies. I attempted to run indy-cli with no parameters and got the following error:

indy-cli: symbol lookup error: indy-cli: undefined symbol: _ZN58_$LT$core..str..Utf8Error$u20$as$u20$std..error..Error$GT$11description17h7a10fe3745f28c6bE

Please advise.",Ubuntu 16.04 Virtualbox,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrpb:",,,,,,LibINDY 18.02 CLI +,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,jjensenevernym,ozheregelya,,,,,,,,,"27/Jan/18 8:43 AM;ozheregelya;It looks really strange, because I installed and run it just now without any errors. May be all works because I had indy-cli installed before on my VM. I'll be able to try this on clear machine on Monday.

If you still have this VM, could you please try to run _RUST_LOG=indy=trace indy-cli_ and attach output to the ticket? It may be useful for developers, if I will not be able to reproduce your problem. Also, if it is possible it would be great to look at dependencies. Could you please run _dpkg -l | grep indy_ on your VM?

BTW, I'm sure that clear installation using apt works on the latest version (1.3.0~337) as it described here: https://github.com/hyperledger/indy-sdk/tree/master/cli#binaries;;;","27/Jan/18 9:11 AM;jjensenevernym;The first command with the RUST_LOG setting produced no additional output including files in the working directory or in /var/log. The second command produced the following:

ii indy-cli 1.3.0~335 amd64 This is the official command line interface for Indy SDK,
ii libindy 1.3.0 amd64 This is the official SDK for Hyperledger Indy, which provides a

I will try the build you referenced next week.

 ;;;","29/Jan/18 8:56 PM;gudkov;Seems incompatible libindy and cli versions are used. Could you provide exact versions of packages?

Most probable we need to update our vision how to handle dependencies or try to configure linker to don't skip symbols from binary of they present in linked dynamic libirary (not sure that it is possible).;;;","29/Jan/18 10:10 PM;ozheregelya;[~jjensenevernym], the reason of your problem is in different versions of libindy and indy-cli. As I can see, you use stable version of libindy, but it is incompatible with the latest master version of indy-cli. 
 To get indy-cli working, need to use the same version of libindy and indy-cli from the same branch. For example, to install  indy cli 1.3.0~335 you should perform following commands:
{code:java}
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88
sudo add-apt-repository ""deb https://repo.sovrin.org/sdk/deb xenial master""
sudo apt-get update
sudo apt-get install -y libindy=1.3.0~335 indy-cli=1.3.0~335{code}
Note that installation of latest master version will work fine if you have added only _master_ repository. If you will have both of _master_ and _stable_, you will see initial problem because the latest _stable_ of libindy will be installed.;;;","30/Jan/18 12:32 AM;ozheregelya;[~jjensenevernym], if you don't have problems with current installation, let's close this ticket. I created new one (IS-536) to avoid similar problem in future.;;;","30/Jan/18 1:39 AM;jjensenevernym;It runs with both packages at 342. Ok to close. Thank you.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Libindy: Support the latest version of Anoncreds protocol,IS-535,27123,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,Artemkaaas,Artemkaaas,29/Jan/18 2:10 PM,28/Feb/18 3:47 AM,28/Oct/23 2:49 AM,19/Feb/18 9:05 PM,,,,,,,,0,,,,,"We need to support the latest Anoncreds paper from Dmitry Khovratovich.

It causes some important changes:
 - Correctness proofs
 - Materialized claim offer
 - Math changes

We need also update wrappers and all tests.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv3b:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,Artemkaaas,SeanBohan_Sovrin,,,,,,,,,,"30/Jan/18 6:42 AM;SeanBohan_Sovrin;[~Artemkaaas] - please add more detail to this ticket?;;;","07/Feb/18 4:44 PM;Artemkaaas;Implemented in: https://github.com/hyperledger/indy-sdk/pull/522;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
indy-cli should depend on specific libindy version,IS-536,27202,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,ozheregelya,ozheregelya,30/Jan/18 12:27 AM,15/Aug/19 2:55 PM,28/Oct/23 2:49 AM,15/Aug/19 2:55 PM,,,,,deployment,,,0,,,,,"As described in IS-534, it's possible to install incompatible versions of libindy and indy-cli.
Specific version of indy-cli should depend on specific version of libindy.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-813,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzwwdz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,ozheregelya,SeanBohan_Sovrin,,,,,,,,"30/Jan/18 6:42 AM;SeanBohan_Sovrin;[~gudkov] - we should be using a greater than or = dependency for the libIndy version in the Indy CLI package. Please assign this out;;;","30/Jan/18 11:04 PM;gudkov;[~SeanBohan_Sovrin] [~sergey.minaev] [~ashcherbakov]

We have a technical problem here. Rust exports a lot of unnecessary mangled symbols when we create dynamic libindy library. CLI also has the same mangled symbols and linker just removes duplicated symbols from final cli binary. As result if we try to execute CLI with different libindy version it can cause runtime linking error as the list of exported symbols or used mangling can be changed.

See issues like [https://github.com/rust-lang/rust/issues/18541]

We can try to control symbols export by custom linking script, but it isn't cross-platform and reliable way. As alternative we can just use === predicate to control dependencies and wait for for problem fix in Rust compiler.;;;","01/Feb/18 7:10 AM;SeanBohan_Sovrin;lets move forward with the triple equal

===

we need to make sure we have a test so if we forget to move the pin we know right away;;;","15/Aug/19 2:55 PM;Artemkaaas;Done in the scope of IS-1139;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Adding new schema, schema's name can contain special character (e.g: ? ! ' "" < >).",IS-537,27226,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,nhan.trong.nguyen,nhan.trong.nguyen,30/Jan/18 11:33 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"When I use libindy to build and submit schema request to ledger, I realize that ledger can accept the schema whose name contains some special characters.

Reproduce steps when using libindy:
| |Step|Data|
|1|Create a pool ledger config.
 pool.create_pool_ledger_config(pool_name, pool_config).|pool_name = 'test_pool'
 pool_config = \{'genesis_txn': pool_transactions_sandbox_genesis}|
|2|Open pool ledger and get 'pool_handle'.
 pool.open_pool_ledger(pool_name).|pool_name = 'test_pool'|
|3|Create a wallet.
 wallet.create_wallet(pool_name, wallet_name, None, None, None).|pool_name = 'test_pool'
 wallet_name = 'test_wallet'|
|4|Open wallet and get 'wallet_handle'.
 wallet.open_wallet(wallet_name, None, None).|wallet_name = 'test_wallet'|
|5|Create and store did of default trustee as 'did_default_trustee'.
 signus.create_and_store_my_did(wallet_handle, did_json).|wallet_handle in step 4.
 did_json = '\{'seed': '000000000000000000000000Trustee1'}'.|
|6|Build schema request and store created request as 'schema_req'.
 ledger.build_schema_request(submitter_did, schema_json).|submitter_did = did_default_trustee.
 schema_json = '\{'name': '?!<>', 'version': '1.0', 'attr_names': ['age', 'sex', 'height', 'name']}'|
|7|Submit 'schema_req' to ledger by role steward.
 ledger.sign_and_submit_request(pool_handle, wallet_handle, submitter_did, schema_req).|pool_handle in step 2.
 wallet_handle in step 4.
 submitter_did = did_default_trustee.
 schema_req in step 9.|

Expected result: SDK throws an error when the parameters it receives are incorrect.
 Actual result: ledger accepts the request. 

 

However, when I execute command manually in CLI to submit schema request, the program works well with special characters in schema's name.

Reproduce steps when executing manually:
 # Open command prompt.
 # Execute command 'indy'.
 # Execute command 'connect sandbox'.
 # Execute command 'new key with seed 000000000000000000000000Trustee1'.
 # Execute command 'send SCHEMA name=?!<>'.

Expected result: the schema request cannot be sent.

Actual result: the value of parameter 'name' is painted with green, 'invalid syntax' message displays and user cannot submit schema request.","OS: ubuntu16.04

Libindy: 1.3.0

Wrapper: python

indy-node: 1.2.50

indy-plenum: 1.2.29

indy-anoncred: 1.0.11

sovrin: 1.1.7",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-550,,,,,,"30/Jan/18 11:03 AM;nhan.trong.nguyen;log_automation.log;https://jira.hyperledger.org/secure/attachment/14505/log_automation.log","30/Jan/18 11:03 AM;nhan.trong.nguyen;manual.png;https://jira.hyperledger.org/secure/attachment/14504/manual.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc87:",,,,,,LibINDY 18.04 Revocation,18.05,18.06,18.07,EV 18.10 Stability and VC,18.08 Wallets+,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,gudkov,krw910,,,,,,,,,"14/Feb/18 4:25 PM;gudkov;[~nhan.trong.nguyen] [~SeanBohan_Sovrin] [~ashcherbakov]

libindy doesn't perform any complex values validation in sign_and_submit_request. It is responsibility of Indy Node.

Indy Node allows these characters and *we don't have any requirement or technical reasons that special characters must be prohibited here.*

So current behavior seems correct. If you want to introduce new requirement i suggest to create User Story with motivation in Indy project.

[~ashcherbakov] What do you think?;;;","14/Feb/18 7:38 PM;ashcherbakov;I agree with Vyacheslav. We don't have any special requirements. If we need to have them, then please discuss with the BA/Product Team and create tickets in INDY Jira.;;;","15/Feb/18 7:06 AM;krw910;After discussion with [~nage] and [~SeanBohan_Sovrin] it was decided we do not want to limit the inputs at this time.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"Adding new schema, attribute name accepts special characters (e.g: ? : ' ""  ! .).",IS-539,27228,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,nhan.trong.nguyen,nhan.trong.nguyen,30/Jan/18 11:33 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"When I use libindy to build and submit schema request to ledger, I realize that ledger can accept the schema including some attribute names that contains special characters.

Reproduce steps when using libindy.
| |Step|Data|
|1|Create a pool ledger config.
 pool.create_pool_ledger_config(pool_name, pool_config).|pool_name = 'test_pool'
 pool_config = \{'genesis_txn': pool_transactions_sandbox_genesis}|
|2|Open pool ledger and get 'pool_handle'.
 pool.open_pool_ledger(pool_name).|pool_name = 'test_pool'|
|3|Create a wallet.
 wallet.create_wallet(pool_name, wallet_name, None, None, None).|pool_name = 'test_pool'
 wallet_name = 'test_wallet'|
|4|Open wallet and get 'wallet_handle'.
 wallet.open_wallet(wallet_name, None, None).|wallet_name = 'test_wallet'|
|5|Create and store did of default trustee as 'did_default_trustee'.
 signus.create_and_store_my_did(wallet_handle, did_json).|wallet_handle in step 4.
 did_json = '\{'seed': '000000000000000000000000Trustee1'}'.|
|6|Build schema request and store created request as 'schema_req'.
 ledger.build_schema_request(submitter_did, schema_json).|submitter_did = did_default_trustee.
 schema_json = '\{'name': 'test', 'version': '1.0', 'attr_names': ['?? !']}'|
|7|Submit 'schema_req' to ledger by role steward.
 ledger.sign_and_submit_request(pool_handle, wallet_handle, submitter_did, schema_req).|pool_handle in step 2.
 wallet_handle in step 4.
 submitter_did = did_default_trustee.
 schema_req in step 9.|

Expected result: SDK throws an error when the parameters it receives are incorrect.
 Actual result: ledger accepts the request. 

 

However, when I execute command manually in CLI to submit schema request, the program works well with special characters in attribute name.

Reproduce steps when executing manually:
 # Open command prompt.
 # Execute command 'indy'.
 # Execute command 'connect sandbox'.
 # Execute command 'new key with seed 000000000000000000000000Trustee1'.
 # Execute command 'send SCHEMA name=test version=1.0 keys=?? !

Expected result: the schema request cannot be sent.

Actual result: the value of parameter 'keys' is painted with green, 'invalid syntax' message displays and user cannot submit schema request.","OS: ubuntu16.04

Libindy: 1.3.0

Wrapper: python

indy-node: 1.2.50

indy-plenum: 1.2.29

indy-anoncred: 1.0.11

sovrin: 1.1.7",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jan/18 11:17 AM;nhan.trong.nguyen;log_automation.log;https://jira.hyperledger.org/secure/attachment/14509/log_automation.log","30/Jan/18 11:17 AM;nhan.trong.nguyen;manual.png;https://jira.hyperledger.org/secure/attachment/14508/manual.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc8f:",,,,,,LibINDY 18.04 Revocation,18.05,18.06,18.07,EV 18.10 Stability and VC,18.08 Wallets+,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,gudkov,krw910,,,,,,,,,"14/Feb/18 4:26 PM;gudkov;[~nhan.trong.nguyen] [~SeanBohan_Sovrin] [~ashcherbakov]

libindy doesn't perform any complex values validation in sign_and_submit_request. It is responsibility of Indy Node.

Indy Node allows these characters and *we don't have any requirement or technical reasons that special characters must be prohibited here.*

So current behavior seems correct. If you want to introduce new requirement i suggest to create User Story with motivation in Indy project.

[~ashcherbakov] What do you think?;;;","14/Feb/18 7:40 PM;ashcherbakov;I agree with Vyacheslav. We don't have any special requirements. If we need to have them, then please discuss with the BA/Product Team and create tickets in INDY Jira.;;;","15/Feb/18 7:06 AM;krw910;After discussion with [~nage] and [~SeanBohan_Sovrin] it was decided we do not want to limit the inputs at this time.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
User can get schema that does not exist.,IS-540,27234,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,khoingo,khoingo,30/Jan/18 6:37 PM,12/Sep/18 7:26 PM,28/Oct/23 2:49 AM,12/Sep/18 7:02 PM,,,,,,,,0,,,,,"We can reproduce the bug based on these steps below.
1. Create pool and wallet => get pool_handle, wallet_handle
2. Create submitter_did
3. prepare data=\{'name': 'name', 'version':'1.0.0'}
4. build get_schema_request by ledger.build_get_schema_request(submitter_did, submitter_did, data)
5. send get_schema_request by ledger.sign_and_submit_request(pool_handle, wallet_handle, submitter_did, get_schema_req)

Actual result: Libindy returns the json object.
Expected result: Libindy should return the error code such as 'schema not found' or something like that.","OS: ubuntu16.04

Libindy: 1.3.0

Wrapper: python

indy-node: 1.2.50

indy-plenum: 1.2.29

indy-anoncred: 1.0.11

sovrin: 1.1.7",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-932,,,,,,"30/Jan/18 6:31 PM;khoingo;get_schema.html;https://jira.hyperledger.org/secure/attachment/14512/get_schema.html","30/Jan/18 6:31 PM;khoingo;manual_test.png;https://jira.hyperledger.org/secure/attachment/14511/manual_test.png","30/Jan/18 6:31 PM;khoingo;test_get_schema.py;https://jira.hyperledger.org/secure/attachment/14510/test_get_schema.py",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwvzr:",,,,,,LibINDY 18.04 Revocation,EV 18.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,gudkov,khoingo,SeanBohan_Sovrin,VladimirWork,,,,,,,"01/Feb/18 7:05 AM;SeanBohan_Sovrin;We should have an error and we have none. ;;;","14/Feb/18 4:19 PM;gudkov;[~SeanBohan_Sovrin] [~khoingo]

By design libindy returns correct transaction result that ledger provides. It doesn't perform analysis of returned json in sign_and_submit_request. Analysis of different ledger return codes and transactions seqNo is responsibility of application or more high level library.

So current behavior is correct. If we want to change it we need to start discussion of proposed breaking changes in community first and create user story (not bug).;;;","15/Feb/18 7:01 AM;SeanBohan_Sovrin; 

[~nage] [~ashcherbakov] [~gudkov] [~krw910] [~avkrishnan]

 

let's have an architecture discussion about error handling;;;","15/Mar/18 2:43 AM;gudkov;During our discussion Alex said that it will be fixed as part of planned Node messages refactoring. We can wait until this refactoring is finished and re-check again.;;;","15/Mar/18 2:45 AM;gudkov;[~ashcherbakov] Could you point the refactoring ticket here?;;;","15/Mar/18 5:24 PM;ashcherbakov;It will be fixed in the scope of re-factrorings INDY-1123, INDY-1124.;;;","11/Sep/18 7:37 PM;gudkov;[~VladimirWork] Could you re-check the behavior with the latest Indy Node?;;;","12/Sep/18 7:01 PM;VladimirWork;Build Info:
libindy 1.6.748

Actual Results:
Each get request returns *json object* as response for existing or nonexistent entity: we get back data from request and seqNo is `null` if entity that *doesn't exist* in ledger and we get back full data from ledger and seqNo is not `null` if entity that *exists* in ledger so we should analyze this json object (manually or using `parser` methods) to understand do we have requested entity in the ledger or not.;;;",,,,,,,,,,,,,,,,,,,,,,
CLI: Need to add comments to batch mode,IS-541,27239,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,ozheregelya,ozheregelya,30/Jan/18 11:58 PM,25/Apr/18 12:06 AM,28/Oct/23 2:49 AM,25/Apr/18 12:06 AM,,,,,,,,0,,,,,"Script for batch mode of indy-cli should contain only valid commands. 
Need to add ability to have comments in the scripts (ignore lines starting with #) and, ideally, ignore empty lines.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzwwe7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,dbluhm,ozheregelya,,,,,,,,,,"24/Apr/18 6:22 AM;dbluhm;I've submitted a pull request that implements comments and ignoring blank lines: https://github.com/hyperledger/indy-sdk/pull/673;;;","25/Apr/18 12:06 AM;dbluhm;This was implemented with this commit: [https://github.com/hyperledger/indy-sdk/commit/1769e288d4759b396ed71b1439f98eba6fcf66cb]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issuance by default,IS-542,19767,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,danielhardman,avkrishnan,avkrishnan,02/Aug/17 6:27 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,4Months,,,,"We were thinking we would need to update the accumulator with every issuance. Now I'm second guessing that for the following reasons:
1. there can be a correlation with issuance based on timing
2. there is a timing requirement (and possible race conditions) where the claim could be issued before the accumulator is changed and fully propagated, which means the newly issued claim is not usable for a time.
3. adds load; now only revocations need to be written to the Sovrin Ledger.We can still support issuance for previously revoked claims.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwwev:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,avkrishnan,,,,,,,,,,"31/Jan/18 12:12 AM;ashcherbakov;[~danielhardman] [~SeanBohan_Sovrin] [~gudkov] [~nage]

We need to have the corresponding math first.

And this is more anoncreds-related task for libindy.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NETWORK_NAME isn't set while deploy Vagrant cluster,IS-543,27242,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Invalid,anikitinDSR,zhigunenko.dsr,zhigunenko.dsr,31/Jan/18 12:38 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"*Steps to Reproduce:*
 1. start _vagrant up_
 2. start _indy_ in cli01 node

*Actual Results:*
vagrant@cli01:~$ indy
{quote}Traceback (most recent call last):
 File ""/usr/local/bin/indy"", line 30, in <module>
 config = getConfig()
 File ""/usr/local/lib/python3.5/dist-packages/indy_common/config_util.py"", line 26, in getConfig
 CONFIG = _getConfig(PlenumConfig, general_config_dir, user_config_dir)
 File ""/usr/local/lib/python3.5/dist-packages/indy_common/config_util.py"", line 19, in _getConfig
 user_config_dir=user_config_dir)
 File ""/usr/local/lib/python3.5/dist-packages/plenum/common/config_util.py"", line 52, in extend_with_default_external_config
 os.path.join(extendee.GENERAL_CONFIG_DIR, extendee.GENERAL_CONFIG_FILE)))
Exception: NETWORK_NAME must be set in /etc/indy/indy_config.py
{quote}
Similar troubles were found in _vagrant up_ logs

indy_config.py
{quote}# Current network
 NETWORK_NAME = None
 # Directory to store ledger.
 LEDGER_DIR = '/var/lib/indy'

# Directory to store logs.
 LOG_DIR = '/var/log/indy'
{quote}
*Expected Results:*
Old CLI is running

*Additional information:*

Simple insertion from dockerfile 
{quote}awk '\{if (index($1, ""NETWORK_NAME"") != 0) \{print(""NETWORK_NAME = \""sandbox\"""")} else print($0)}' /etc/indy/indy_config.py> /tmp/indy_config.py
 mv /tmp/indy_config.py /etc/indy/indy_config.py
{quote}
into validator.sh did not help.

Issue similar with https://jira.hyperledger.org/browse/INDY-1064",indy-node 1.2.284-master(git),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/18 12:38 AM;zhigunenko.dsr;vagrant_up_log.txt;https://jira.hyperledger.org/secure/attachment/14518/vagrant_up_log.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv47:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,zhigunenko.dsr,,,,,,,,,,,"31/Jan/18 12:42 AM;zhigunenko.dsr;Mistakenly created;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rotate-key available on read-only pool,IS-544,27304,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,,zhigunenko.dsr,zhigunenko.dsr,01/Feb/18 10:41 PM,08/Feb/18 6:46 AM,28/Oct/23 2:49 AM,07/Feb/18 6:47 PM,,,,,,,,0,,,,,"_rotate-key_ successfully changed _verkey_ in wallet, while pool in _read-only_ mode

{code}
pool(p1):wallet(135y2q904870-2875t-8725-8275-8743q5):did(V4S...e6f):indy> ledger pool-config writes=false
NodeConfig request has been sent to Ledger.
Metadata:
+------------------------+-----------------+---------------------+---------------------+
| Identifier             | Sequence Number | Request ID          | Transaction time    |
+------------------------+-----------------+---------------------+---------------------+
| V4SGRU86Z58d6TV7PBUe6f | 2               | 1517491794533379800 | 2018-02-01 13:29:55 |
+------------------------+-----------------+---------------------+---------------------+
Data:
+--------+-------------+
| Writes | Force Apply |
+--------+-------------+
| false  | false       |
+--------+-------------+
pool(p1):wallet(135y2q904870-2875t-8725-8275-8743q5):did(V4S...e6f):indy> did rotate-key
Verkey for did ""V4SGRU86Z58d6TV7PBUe6f"" has been updated. New verkey: ""BKtvZ8sPThFq7vT2yvPsxhKCkzxTBPn6k4z7vyafHQBk""
pool(p1):wallet(135y2q904870-2875t-8725-8275-8743q5):did(V4S...e6f):indy> ledger pool-config writes=true
Transaction has been rejected: client request invalid: InvalidSignature()
{code}
","indy-node: 1.2.214 (master analog of 1.2.50 stable)
libindy: 1.3.0-353
indy-cli: 1.3.0-353 (Windows)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwysv:",,,,,,LibIndy 18.03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,zhigunenko.dsr,,,,,,,,,,"02/Feb/18 5:08 PM;Artemkaaas;Fixed in: https://github.com/hyperledger/indy-sdk/pull/519;;;","07/Feb/18 4:33 PM;Artemkaaas;Changes: 
 - Corrected handling of response NYM transaction to check error from Ledger.

PR:
 - [https://github.com/hyperledger/indy-sdk/pull/519]

Version:
 - master build #363;;;","07/Feb/18 6:47 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.3.0~363
indy-node 1.2.296
indy-plenum 1.2.235
libindy 1.3.0~363

*Actual results:*
{code}
pool(p1):wallet(ww1):did(V4S...e6f):indy> ledger pool-config writes=false
NodeConfig request has been sent to Ledger.
Metadata:
+------------------------+-----------------+---------------------+---------------------+
| Identifier             | Sequence Number | Request ID          | Transaction time    |
+------------------------+-----------------+---------------------+---------------------+
| V4SGRU86Z58d6TV7PBUe6f | 3               | 1517996471081850114 | 2018-02-07 09:41:11 |
+------------------------+-----------------+---------------------+---------------------+
Data:
+--------+-------------+
| Writes | Force Apply |
+--------+-------------+
| false  | false       |
+--------+-------------+
pool(p1):wallet(ww1):did(V4S...e6f):indy> did use 7PRiRQsrkk4e15Pymve2bu
Did ""7PRiRQsrkk4e15Pymve2bu"" has been set as active
pool(p1):wallet(ww1):did(7PR...2bu):indy> did rotate-key 
Transaction has been rejected: Pool is in readonly mode, try again in 60 seconds
{code}
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"Mistaken example in ""did import"" help",IS-545,27305,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,,zhigunenko.dsr,zhigunenko.dsr,01/Feb/18 11:13 PM,28/Feb/18 3:47 AM,28/Oct/23 2:49 AM,16/Feb/18 12:07 AM,,,,,,,,0,,,,,"Help example contain incorrect JSON.
Valid JSON should look like:
{code}
{
	""version"": 1,
	""dids"": [{
		""did"": ""Ag5pCXvvXVPWpYxgtAR11j"",
		""seed"": ""00000000000000000000000000000001""
	}]
}
{code}
","indy-node: 1.2.214 (master analog of 1.2.50 stable)
libindy: 1.3.0-353
indy-cli: 1.3.0-353 (Windows)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv33:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,zhigunenko.dsr,,,,,,,,,,"08/Feb/18 4:06 PM;Artemkaaas;Fixed in: https://github.com/hyperledger/indy-sdk/pull/527;;;","16/Feb/18 12:07 AM;zhigunenko.dsr;*Environment:*
indy-cli 1.3.1-394

*Actual results:*
Help example contain correct JSON;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong error message while using invalid wallet name,IS-546,27306,,Bug,To Test,IS,Indy SDK,software,resplin,,,Low,,Artemkaaas,zhigunenko.dsr,zhigunenko.dsr,01/Feb/18 11:24 PM,20/Nov/19 6:24 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"*Steps to reproduce:*
{code}
indy> wallet create -2198902jfnvoubvozolxvlzosuhefpw80p7ur08s47t[94vnv[a4tv7a[t4wa9t4[-a8wt01p08470384702_%(@#&%!F@#( pool_name=p1
{code}
*Expected results:*
Successful wallet creation or message about problems with name
*Actual results:*
{code}
Indy SDK error occurred CommonIOError
{code}
","indy-node: 1.2.214 (master analog of 1.2.50 stable)
libindy: 1.3.0-353
indy-cli: 1.3.0-353 (Windows)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzwrhj:910sx0900009eoaiifrbr",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,esplinr,zhigunenko.dsr,,,,,,,,,"08/Feb/18 4:06 PM;Artemkaaas;Fixed in: https://github.com/hyperledger/indy-sdk/pull/527;;;","15/Feb/18 10:28 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.3.1-394 (Windows)

*Steps to reproduce:*
{code:java}
wallet create -2198902jfnvoubvozolxvlzoSUHENOVUR08s47t[94vnv[//\\a4tv7a[t4wa9t4[-a8wt01p08470384702_%(@#&
{code}

*Expected results:*
Successful wallet creation and new wallet displays in the ""wallet list""
or
Message about problems with name

*Actual results:*
{code:java}
Wallet ""-2198902jfnvoubvozolxvlzoSUHENOVUR08s47t[94vnv[//\a4tv7a[t4wa9t4[-a8wt01p08470384702_%(@#&%!F@#("" has been created
{code}
but there is no mentions about new wallet in ""wallet list"";;;","14/Sep/18 10:00 PM;esplinr;This problem is unlikely to affect anyone, but the fix can be rather complicated, so we will postpone completing the fix for this issue.;;;","11/Oct/19 9:25 PM;esplinr;We think that our efforts to improve the error messages has improved this situation. We should test it again.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Mistake in Examples section of cli-design.md,IS-547,27307,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,ozheregelya,ozheregelya,01/Feb/18 11:26 PM,27/Mar/18 11:57 PM,28/Oct/23 2:49 AM,27/Mar/18 10:44 PM,,,,,,,,0,,,,,"[https://github.com/hyperledger/indy-sdk/blob/master/doc/cli-design.md#examples]

{{pool(sandbox):wallet(alice_wallet):did(MYD...001):indy> did new metadata=""Bob DID"" publish_to_ledger=true }}

No such parameter {{publish_to_ledger}}.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-273,,,,,,,,,,"1|hzwys7:",,,,,,18.06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,ozheregelya,zhigunenko.dsr,,,,,,,,,"22/Mar/18 9:49 PM;gudkov;[~zhigunenko.dsr] [~ozheregelya]

I can't find this example in current design version. All seem ok to me. Could you verify?;;;","27/Mar/18 10:44 PM;zhigunenko.dsr;[~gudkov] This parameter had been deprecated before new CLI was created. No matches in docs, no changes needed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
build_get_schema_request not raise error with string data in version field,IS-549,27356,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,khoingo,khoingo,02/Feb/18 5:41 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"|Step   |Description|Data|
|1|Create and open the pool and wallet. |pool_name, wallet_name, configure_file|
|2|create and store did for submiter, schema|wallet_handle, seed_default_trustee, seed_trustee2|
|3|Prepare the invalid_data|invalid_data = '\{""name"":""name"",""version"":""*master1.0*""}'|
|4|build_get_schema_request|submitter_did, schema_did, wrong_data|

Actual result: libindy return a json object.
 Expected result: libindy return an error code or something like that. 

*@Note:* The type of data[version] is invalid. We will get the ErrorCode.LedgerInvalidTransaction when we submit the request at step 4.","OS: ubuntu16.04

Libindy: 1.3.0

Wrapper: python

indy-node: 1.2.50

indy-plenum: 1.2.29

indy-anoncred: 1.0.11

sovrin: 1.1.7",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-551,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvqf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,khoingo,krw910,,,,,,,,,,"28/Feb/18 6:45 AM;krw910;After discussion this appears to be handled correctly at the ledger level.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
build_get_schema_request can contain special characters,IS-550,27358,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,khoingo,khoingo,02/Feb/18 5:58 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"|Step   |Description|Data|
|1|Create and open the pool and wallet. |pool_name, wallet_name, configure_file|
|2|create and store did for submiter, schema|wallet_handle, seed_default_trustee, seed_trustee2|
|3|Prepare the invalid_data|invalid_data = '\{""name"":""*!@#$%name*"",""version"":""1.1.0""}'|
|4|build_get_schema_request|submitter_did, schema_did, wrong_data|

Actual result: libindy return a json object.
Expected result: libindy return an error code or something like that. 

*@Manual Test:* CLI returns the error Invalid syntax.","OS: ubuntu16.04

Libindy: 1.3.0

Wrapper: python

indy-node: 1.2.50

indy-plenum: 1.2.29

indy-anoncred: 1.0.11

sovrin: 1.1.7",,,,,,,,,,,,,,,,,,,,,,,,,,IS-537,,,,,IS-551,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvqv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,khoingo,krw910,,,,,,,,,,"28/Feb/18 6:47 AM;krw910;Working as designed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
build_get_schema_request not raise the error with empty value in data,IS-551,27361,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,khoingo,khoingo,02/Feb/18 6:19 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"|Step   |Description|Data|
|1|Create and open the pool and wallet. |pool_name, wallet_name, configure_file|
|2|create and store did for submiter, schema|wallet_handle, seed_default_trustee, seed_trustee2|
|3|Prepare the invalid_data|invalid_data = '\{*""name"":""""*,""version"":""1.1""}'|
|4|build_get_schema_request|submitter_did, schema_did, wrong_data|

Actual result: libindy return a json object.
Expected result: libindy return an error code or something like that. 

*@Note:* The value of data[name] is empty. We will get the ErrorCode.LedgerInvalidTransaction when we submit the request at step 4.","OS: ubuntu16.04

Libindy: 1.3.0

Wrapper: python

indy-node: 1.2.50

indy-plenum: 1.2.29

indy-anoncred: 1.0.11

sovrin: 1.1.7",,,,,,,,,,,,,,,,,,,,,,,,,,IS-549,IS-550,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvsf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,khoingo,krw910,SeanBohan_Sovrin,,,,,,,,,"03/Feb/18 6:49 AM;SeanBohan_Sovrin;[~gudkov] - at what layer should this be handled? SDK or above?;;;","28/Feb/18 6:48 AM;krw910;This is handled at the ledger level and that is ok.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Revocation: Indy Crypto Rust API changes,IS-552,27363,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ashcherbakov,sergey.minaev,sergey.minaev,02/Feb/18 7:36 PM,01/Mar/18 1:40 AM,28/Oct/23 2:49 AM,01/Mar/18 1:40 AM,,,,,,,,0,,,,,"Indy Crypto should not operate whole object with all Tails. Right now it's RevocationRegistryPublic::tails.
Instead of it, Crypto can consume callback to retrieve one tail by index when needed.
Also Issuer::new_revocation_registry API will be affected. It may return public part of the registry without tails and also one more method for generating part of the tails is needed.",,,,,,,,,,,,,,,IS-555,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzwu73:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,ashcherbakov,sergey.minaev,,,,,,,,,,"28/Feb/18 11:13 PM;ashcherbakov;The ticket in Validate, but I see no comments.

What has been done? How? When?

Our pattern for ticket closure must be used!;;;","28/Feb/18 11:14 PM;ashcherbakov;[~gudkov] [~sergey.minaev] [~Artemkaaas];;;","01/Mar/18 1:40 AM;ashcherbakov;The design is updated: https://github.com/hyperledger/indy-crypto/blob/master/libindy-crypto/docs/anoncreds-design.md;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Revocation: Default implementation for Tails storage in Indy SDK,IS-553,27364,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,sergey.minaev,sergey.minaev,02/Feb/18 7:37 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"Indy SDK should provide Verifiable storage for operating with large amount of data like tails. Also default file-based implementation is needed.
This storage should support generic initialization and retrieving part of the data with proof. E.g. it may be Merkle Tree above raw binary data.",,,,,,,,,,,IS-556,,,,,,,,,,,,,,IS-555,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzzc8n:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,18.06,18.07,EV 18.10 Stability and VC,18.08 Wallets+,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,0.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Revocation: Tails reading and writing infrastructure,IS-555,27372,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,sergey.minaev,sergey.minaev,02/Feb/18 9:35 PM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,20/Apr/18 5:01 PM,,,1.4,,,,,0,,,,,,,,,,,,,,,,IS-552,IS-515,,,,,,,,,IS-462,IS-463,IS-465,IS-553,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzz4z3:",,,,,,LibINDY 18.04 Revocation,18.05,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"16/Apr/18 9:52 PM;gudkov;[~sergey.minaev] Could you provide correct closing info?;;;","20/Apr/18 4:14 PM;sergey.minaev;PRs:
- https://github.com/hyperledger/indy-sdk/pull/557
- https://github.com/hyperledger/indy-sdk/pull/580

Changes:
- add blob storage API
- use BlobStorage for Tails handling

Version:
1.3.1-462;;;","20/Apr/18 5:01 PM;gudkov;Implemented API looks ok for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Revocation: Indy SDK API design,IS-556,27375,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,sergey.minaev,sergey.minaev,02/Feb/18 11:15 PM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,20/Apr/18 12:13 AM,,,1.4,,,,,0,,,,,"We need to design new Indy SDK API that will solve revocation related problems we have now:

1. Compatibility with ledger entities structure
 2. Ability to re-calculate witness data on cloud agent side
 3. Ability to work with big tails (more than RAM size) through pluggable interface
 4. Ability to support different tails distribution schemas through pluggable interface",,,,,,,,,,,,,,,IS-553,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzz4yn:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support/Investigate BC Bounty Efforts 02-02-2018,IS-557,27379,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,SeanBohan_Sovrin,SeanBohan_Sovrin,03/Feb/18 12:03 AM,26/Jul/18 8:50 PM,28/Oct/23 2:49 AM,26/Jul/18 8:50 PM,,,,,,,,0,help-wanted,,,,"Read through the bounty proposal on BCDev exchange

https://www.bcdevexchange.org/projects/prj-verifiable-organizations-network—theorgbook


1. Understanding what they are proposing
2. Read through GitHub commentary
3. Be prepared to review PoA for both proposals
These features should not be unexpected
A. Extend wallet interface for filtering
B. DID Auth (ledger key material for auth user)
internal support to address

[~nage] - pls add comments/direction",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-558,,,,,,,,,,"1|hzww2n:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,SeanBohan_Sovrin,,,,,,,,,,"25/Jul/18 11:59 PM;gudkov;[~esplinr] [~nage] [~SeanBohan_Sovrin]

Seems we can close this issue?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tickets rea,IS-558,27380,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,SeanBohan_Sovrin,SeanBohan_Sovrin,03/Feb/18 12:07 AM,09/Oct/19 12:02 AM,28/Oct/23 2:49 AM,08/Oct/19 11:59 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-3,,Contribution,Done,,,,,,,,"1|hzy3vb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,SeanBohan_Sovrin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Wallets will be encrypted by default and have a parameter, flag, environment variable or similar to bypass the setup for automated cases",IS-559,27391,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,SeanBohan_Sovrin,SeanBohan_Sovrin,03/Feb/18 6:35 AM,26/Jul/18 6:37 PM,28/Oct/23 2:49 AM,26/Jul/18 6:37 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-45,,,,,,,,,,"1|hzyvvb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,SeanBohan_Sovrin,,,,,,,,,,"03/Feb/18 6:36 AM;SeanBohan_Sovrin;Please communicate this change if it breaks existing implementations;;;","18/Jun/18 5:57 PM;gudkov;[~SeanBohan_Sovrin] [~resplin] Wallets now always encrypted. It is impossible to avoid encryption, but it isn't a problem as new wallet encryption work fast. So we can consider this ticket as a done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to get HASH and ENC attributes via indy-cli,IS-560,27425,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,VladimirWork,VladimirWork,05/Feb/18 10:55 PM,15/Feb/18 10:09 PM,28/Oct/23 2:49 AM,15/Feb/18 10:09 PM,,,,,,,,0,,,,,"Build Info:
indy-node 1.2.294
indy-cli 1.3.0~353

Steps to Reproduce:
1. Add new DID with verkey to ledger.
2. Add RAW/HASH/ENC attributes to this DID.
3. Try to get this attributes via `ledger get-attrib`.

Actual Results:
Unable to get HASH and ENC attributes, but RAW is got normally.

Expected Results:
All attributes should be available for getting.",,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1074,,,,,,,,,,,"05/Feb/18 10:55 PM;VladimirWork;get-attrib.PNG;https://jira.hyperledger.org/secure/attachment/14546/get-attrib.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwu6f:",,,,,,LibIndy 18.03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,SeanBohan_Sovrin,VladimirWork,zhigunenko.dsr,,,,,,,,"08/Feb/18 6:46 AM;SeanBohan_Sovrin;[~gudkov] - what do you think the priority is for this ticket? pls advise?;;;","08/Feb/18 8:52 PM;Artemkaaas;Implemented together with IS-523.;;;","15/Feb/18 10:09 PM;zhigunenko.dsr;indy-node 1.3.308
indy-cli 1.3.1~394

*Steps to Reproduce:*
1. Add new DID with verkey to ledger.
2. Add RAW/HASH/ENC attributes to this DID.
3. Try to get this attributes via `ledger get-attrib`.

*Actual Results:*
All attributes should be available for getting.

*Additional info:*
Discovered mistake in help moved in  IS-568;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Need a 32-bit build of libindy which has overflow check disabled,IS-561,27435,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,viswa0269,avkrishnan,avkrishnan,06/Feb/18 5:25 AM,13/Mar/18 6:18 AM,28/Oct/23 2:49 AM,01/Mar/18 2:16 PM,,,,,,,,0,,,,,"The issue is captured in the conversation below:

khagesh [2:32 PM]
@vyacheslav.gudkov @sminaev We are facing issue with iphone 5 ios 10.3.1 that we are not able to establish connection with pool. This is the error that we get
``` Pool create callback is triggered.
 INFO|indy::commands                |                src/commands/mod.rs:107 | PoolCommand command received
 INFO|pool_command_executor         |               src/commands/pool.rs:62  | Open command received
thread '<unnamed>' panicked at 'attempt to multiply with overflow', /Users/DSR/.cargo/registry/src/github.com-1ecc6299db9ec823/amcl-0.1.2/src/big.rs:974:42
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace
   1: std::panicking::default_hook::{{closure}}
   2: std::panicking::default_hook
   3: std::panicking::rust_panic_with_hook
   4: std::panicking::begin_panic
   5: std::panicking::begin_panic_fmt
   6: rust_begin_unwind
   7: core::panicking::panic_fmt
   8: core::panicking::panic
   9: amcl::big::BIG::monty
  10: amcl::big::BIG::modulo
  11: amcl::fp::FP::mul
  12: amcl::fp2::FP2::sqr
  13: amcl::ecp2::ECP2::rhs
  14: amcl::ecp2::ECP2::new_fp2s
  15: amcl::ecp2::ECP2::frombytes
  16: indy_crypto::pair::PointG2::from_bytes
  17: indy_crypto::bls::VerKey::from_bytes
  18: indy::services::pool::<impl indy::services::pool::types::RemoteNode>::new
  19: indy::services::pool::PoolWorker::connect_to_known_nodes
  20: indy::services::pool::PoolWorker::init_catchup
  21: indy::services::pool::PoolWorker::_run
  22: indy::services::pool::PoolWorker::run
  23: indy::services::pool::Pool::new::{{closure}}
DEBUG|zmq_pw                        |/Users/DSR/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-pw-0.9.8/src/lib.rs:367 | context dropped
DEBUG|zmq_pw                        |/Users/DSR/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-pw-0.9.8/src/lib.rs:460 | socket dropped
 INFO|indy::commands                |                src/commands/mod.rs:115 | WalletCommand command received
 INFO|wallet_command_executor       |             src/commands/wallet.rs:75  | Create command received
TRACE|indy::services::wallet::default|     src/services/wallet/default.rs:147 | DefaultWalletType.create >> connectMeWallet, with config None and credentials None
TRACE|indy::services::wallet::default|     src/services/wallet/default.rs:157 | DefaultWalletType.create <<
2018-01-31 14:29:15.341 ConnectMe-demo[24596:7921005] CMWalletObject::CreateAndOpen - Received create wallet callback with error: 0
```
You can reproduce it by cloning master branch of `http://github.com/evernym/connect-me-indy-wrapper/` and running test `testWalletAndPool`. This works fine with iphone 5s and above but for iphone5 and iphone5c it breaks with above error

vyacheslav.gudkov [2:51 PM]
@khagesh Do you use debug build of libindy? As warkaround you can switch to release build.

sminaev [2:57 PM]
@khagesh I'm not familar with iOS devices, could you confirm please: iphone5 and 5c is 32bit and iphone 5s and later is 64 bit?

sminaev [2:59 PM]
the workaround mentoined above is possible, we can switch to  release build without arithmetic checks. But we should understand the reason of the problem to avoid possible issues. (edited)

vyacheslav.gudkov [3:00 PM]
iphone 5 is 32bit

khagesh [3:00 PM]
yes both iphone 5 and 5c are 32 bit

vyacheslav.gudkov [3:00 PM]
As result bignums use different math

We fixed amcl debug builds only for 64bit platforms

Do we really need to support iphone 5? It seams like a totally dead platform.


khagesh [3:03 PM]
@tyler :this: Libindy team needs to do some extra stuff to support iphone 5 & iphone 5c. Do we need it? @vyacheslav.gudkov how much effort do you think it will take to fix this bug. 
vyacheslav.gudkov [3:07 PM]
In theory we support 32bit already, but you need to use release build without overflow checks included.

For debug builds support we will need spend few days as we need to release amcl, indy crypto and libindy

@sminaev do we have release build of libindy for iOS?

sminaev [3:13 PM]
right now libindy is built as debug and included to release iOS indy wrapper. As result with math containing arithmetic checks (edited)

vyacheslav.gudkov [3:13 PM]
May be just re-build it in release in the background?

sminaev [3:15 PM]
I'm not sure that current error is just unnecessary overflow check. It may be real problem in 32bit math

vyacheslav.gudkov [3:29 PM]
@sminaev I suggest to add task about 32bit platforms support. We can add it to our next sprint. If Tyler will decide that it isn't big problem for us we can postpone it.

sminaev [3:33 PM]
After brief review this particular error seems like unnecessary overflow check. So we can try to re-build release variant of the pod",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz4v:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,18.05,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,avkrishnan,sergey.minaev,viswa0269,,,,,,,,,"12/Feb/18 10:04 AM;sergey.minaev;We start working and prepare new RC build 1.3.1 but got unexpected problem with CD. The issue also can be reproduced on other Jenkins pipelines, which was successful for a long time before. Sounds like some settings of Jenkins was changed.;;;","13/Feb/18 9:02 PM;sergey.minaev;Artifacts are published:
library + python and java wrapper are 1.3.1 RC10
iOS pods are 1.3.1 stable;;;","01/Mar/18 2:16 PM;viswa0269;Tested with QA connect me latest build and able to see the end to end functionality with 32 bit device.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Support the latest pool,IS-562,27473,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,Artemkaaas,Artemkaaas,07/Feb/18 8:55 PM,28/Feb/18 3:47 AM,28/Oct/23 2:49 AM,19/Feb/18 10:34 PM,,,,,,,,0,,,,,Need to update Libindy tests to work with Indy-Node 1.2.297 version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv2n:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,gudkov,ozheregelya,sergey.minaev,zhigunenko.dsr,,,,,,,"07/Feb/18 8:58 PM;Artemkaaas;Implemented in: https://github.com/hyperledger/indy-sdk/pull/524;;;","08/Feb/18 7:57 PM;gudkov;[~zhigunenko.dsr]

Could you validate this?;;;","08/Feb/18 10:42 PM;ozheregelya;[~Artemkaaas], [~gudkov],
Could you please provide recommendations for QA with way how to validate this?;;;","14/Feb/18 11:03 PM;sergey.minaev;Recommendation to validate:
# find appropriate CI/CD run in Jenkins
# check logs and verify version of installed indy-node package in docker pool
# check build status

Alternative local check:
# fetch master src
# verify indy-node.dockerfile for version of indy-node
# run docker pool of nodes
# run `cargo test` locally;;;","19/Feb/18 10:34 PM;zhigunenko.dsr;*Environment*
indy-sdk - commit 041cc92cd83a7fd8ef5fe299f021a84253295be5

*Steps to reproduce:*
# verify indy-node.dockerfile for version of indy-node
# run docker pool of nodes
# run `cargo test` locally

*Actual results:*
# dockerfile contains 1.2.297 version of indy-node
# Pool starts successfully
# All tests passed;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Revocation: Indy Crypto FFI API changes,IS-563,27563,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,sergey.minaev,gudkov,09/Feb/18 8:56 PM,01/Mar/18 5:43 AM,28/Oct/23 2:49 AM,01/Mar/18 5:43 AM,,,,,,,,0,,,,,"Indy Crypto should not operate whole object with all Tails. Right now it's RevocationRegistryPublic::tails.
Instead of it, Crypto can consume callback to retrieve one tail by index when needed.
Also Issuer::new_revocation_registry API will be affected. It may return public part of the registry without tails and also one more method for generating part of the tails is needed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzwu7j:",,,,,,LibIndy 18.03,LibINDY 18.04 Revocation,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy SDK should depends on stable IndyCrypto,IS-564,27630,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,sergey.minaev,sergey.minaev,12/Feb/18 6:48 PM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,23/Apr/18 6:27 PM,,,1.4,,,,,0,,,,,,,,,,,,,,,,IS-573,,,,IS-565,,,,,,,,,,,,,,,,,INDY-1269,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz4zj:",,,,,,LibINDY 18.04 Revocation,18.05,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,sergey.minaev,zhigunenko.dsr,,,,,,,,,,"17/Apr/18 5:00 PM;sergey.minaev;Master version 1.3.1 469 depends on stable indy crypto 0.4.0

Recommendation for testing:
check installation compatibility with indy-node;;;","23/Apr/18 6:27 PM;zhigunenko.dsr;Dependence on stable version _0.4.0_ confirmed for _indy-node 1.3.382_ and _indy-cli 1.3.1~480_;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crypto: Release the library with updated Revocation support,IS-565,27631,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,sergey.minaev,sergey.minaev,12/Feb/18 6:48 PM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,20/Apr/18 12:14 AM,,,1.4,,,,,0,,,,,,,,,,,,,,,,IS-564,,,,,,,,,,,,,,,,,,,,,INDY-1269,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz4zz:",,,,,,LibINDY 18.04 Revocation,18.05,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"16/Apr/18 4:53 PM;sergey.minaev;New stable version of indy-crypto is 0.4.0;;;","20/Apr/18 12:14 AM;gudkov;Release is done;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Load test and indy-cli can't connect to the pool after several executions of load test on large pool,IS-566,27695,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,ozheregelya,ozheregelya,ozheregelya,14/Feb/18 8:56 AM,01/Aug/18 4:16 AM,28/Oct/23 2:49 AM,31/Jul/18 8:28 PM,,,,,,,,0,,,,,"Steps to Reproduce:
1. Setup the pool of 7 nodes with 1.2.50 version.
2. Add 18 nodes with 1.2.50 version to the pool.
3. Write ~100 transactions to the pool.
4. Upgrade the pool to 1.3.51 version.
5. Run the load test several times using following command:
for s in `seq 1 2000` ; do python3 Perf_Add_nyms.py -n 500 -s 25 ; done

Actual Results:
About 25800 transactions were successfully written, after that load test freezes on connection to the pool. Indy-cli also can't connect to the pool. But old cli works without any issues.

Expected Result:
Load test and indy-cli should connect to working pool.

Additional Information:
Following action were performed after this problem:
- Remove existing pool and wallet.
- - It didn't help. Pool created, but connection don't work.
- Upgrade libindy to latest master version.
- - After this, load test worked only once. Second time it also freezes on connection to the pool.

Logs with RUST_LOG=indy=trace attached.

This problem blocks load testing on new RC.","indy-node 1.3.51 (stable)
libindy 1.3.1~371
indy-cli 1.3.1~371

QALive pool (7+18 nodes)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 7:01 PM;VladimirWork;Desktop.7z;https://jira.hyperledger.org/secure/attachment/14601/Desktop.7z","14/Feb/18 8:54 AM;ozheregelya;load_output.txt;https://jira.hyperledger.org/secure/attachment/14581/load_output.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjm7:",,,,,,LibIndy 18.03,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ozheregelya,sergey.minaev,VladimirWork,,,,,,,,,"14/Feb/18 8:57 AM;ozheregelya;[~ashcherbakov], [~gudkov], FYI;;;","15/Feb/18 5:43 PM;sergey.minaev;In the attached log I see that libindy try to catchup pool transactions from 7 to 25 and one of the nodes (4th) do not response. And there are no logs after it, but libindy should after timeout detect and blacklist not responding nodes and resume catchup from others.;;;","15/Feb/18 7:01 PM;VladimirWork;All logs from QA Live Node4 are in attachment.;;;","15/Feb/18 7:24 PM;sergey.minaev;Also there is some bugs in catchup error cases. [PR with fix|https://github.com/hyperledger/indy-sdk/pull/534/]
* fix behavior in case of some nodes are not responding and blacklisted by libindy
* fix behavior in case of multiply txns in genesis set for one node;;;","15/Feb/18 9:22 PM;ozheregelya;Ticket for indy-node: INDY-1180.;;;","16/Feb/18 12:12 AM;sergey.minaev;Fix version v1.3.1-398;;;","31/Jul/18 8:27 PM;ozheregelya;Environment:
indy-node 1.5.527
libindy 1.6.1~655

Steps to Validate:
1. Setup the pool.
2. Run the load test several times.

Actual Results:
Load test works and connects to the pool even if part of nodes are broken/stopped/out of sync.;;;",,,,,,,,,,,,,,,,,,,,,,,
[Refactoring] Support new Request format,IS-567,27704,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,ashcherbakov,ashcherbakov,14/Feb/18 7:43 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"We need to support the new request format as being refactored in Indy-Node:

[Common Request format|https://github.com/hyperledger/indy-node/blob/c964f5c55bf5853799449aef1b6faad21d7ccbe6/docs/requests.md#common-request-structure]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwwcv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,SeanBohan_Sovrin,,,,,,,,,,"17/Feb/18 6:44 AM;SeanBohan_Sovrin;[~ashcherbakov] Would this cause a compatibility issue between current stable libIndy and new (unapproved)  stable Indy Node?;;;","19/Feb/18 4:25 PM;ashcherbakov;Yes, but this is the work for the next stable of Indy Node (with breaking changes). This is a client-side work for INDY-1124;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Outdated ""ledger get-attrib help""",IS-568,27765,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,Artemkaaas,zhigunenko.dsr,zhigunenko.dsr,15/Feb/18 10:06 PM,30/Jul/18 9:31 PM,28/Oct/23 2:49 AM,27/Jul/18 5:54 PM,,,,,,,,0,,,,,"pool(p1):wallet(w1):did(V4S...e6f):indy> ledger get-attrib help

*Actual results:*
{code:java}
Examples:
	ledger get-attrib did=VsKV7grR1BUE29mG2Fm2kX attr=endpoint
	ledger get-attrib did=VsKV7grR1BUE29mG2Fm2kX hash=83d907821df1c87db829e96569a11f6fc2e7880acba5e43d07ab786959e13bd3
	ledger get-attrib did=VsKV7grR1BUE29mG2Fm2kX enc=aa3f41f619aa7e5e6b6d0d
{code}

*Expected results:*	
{code:java}
ledger get-attrib did=VsKV7grR1BUE29mG2Fm2kX raw=endpoint
{code}
",indy-cli 1.3.1~394    ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjnb:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,zhigunenko.dsr,,,,,,,,,,"26/Jul/18 8:50 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/989;;;","27/Jul/18 5:54 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.5.0~653

*Steps to validate:*
_ledger get-attrib help_

*Actual results:*
{code}
ledger attrib did=VsKV7grR1BUE29mG2Fm2kX raw={""endpoint"":{""ha"":""127.0.0.1:5555""}}
ledger attrib did=VsKV7grR1BUE29mG2Fm2kX hash=83d907821df1c87db829e96569a11f6fc2e7880acba5e43d07ab786959e13bd3
ledger attrib did=VsKV7grR1BUE29mG2Fm2kX enc=aa3f41f619aa7e5e6b6d0d
ledger attrib did=VsKV7grR1BUE29mG2Fm2kX enc=aa3f41f619aa7e5e6b6d0d fees_inputs=pay:null:111_rBuQo2A1sc9jrJg fees_outputs=pay:null:FYmoFw55GeQH7SRFa37dkx1d2dZ3zUF8ckg7wmL7ofN4,100)
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Updating Indy Getting Started Turnkey.,IS-569,27769,,Task,Complete,IS,Indy SDK,software,resplin,,,Low,Done,,panickervinod,panickervinod,16/Feb/18 12:46 AM,26/Jul/18 7:55 PM,28/Oct/23 2:49 AM,26/Jul/18 7:55 PM,,,,,,,,0,Documentation,,,, Is there a plan to move the scripts in  [http://github.com/brycecurtis/indy-tutorial-sandbox] to [https://github.com/hyperledger/indy-node/tree/master/environment/docker/getting_started_turnkey] This was discussed in one of the Indy WG calls.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxnz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,panickervinod,,,,,,,,,,"26/Jul/18 6:37 PM;gudkov;[~esplinr] [~ashcherbakov] Do you now something about this? Is this still actual? The ticket seems related to Indy Node, not to Indy SDK.;;;","26/Jul/18 7:55 PM;panickervinod;This has been completed and the script is now available in the Indy Node repo.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance: libindy shoud persist pool leger state for faster catch-up,IS-570,27792,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,sergey.minaev,sergey.minaev,16/Feb/18 8:36 PM,08/Jun/18 9:48 PM,28/Oct/23 2:49 AM,08/Jun/18 12:32 AM,,,1.6.0,,,,,0,,,,,"*Task Overview*
For current moment libindy always starts catchup from scratch. The process can be significantly optimized by storing of actual pool ledger at the end of catch-up process and starting from this point on the next time.

*Acceptance Criteria*
* Corresponded code is written
* Manual testing for a complex scenario with a large pool
* Integration tests for simple scenarios are written and passed (complex scenarios are covered in a separate story)
* Code is merged and master build with the changes is issued

Note:
* It can be efficient to implement together with IS-655
* Complex integration tests are covered in a separate story",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-703,,,,,,,,,,"1|hzzben:",,,,,,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,KitHat,sergey.minaev,zhigunenko.dsr,,,,,,,,,"01/Jun/18 6:46 PM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/810;;;","05/Jun/18 4:36 PM;KitHat;Build version: master 551;;;","06/Jun/18 8:28 PM;zhigunenko.dsr;Notice: catchup must be applied only for pool ledger.

*Possible cases:*
1) connect to pool (without any cache) - catchup, cache file has been created
2) reconnect to pool (with cache, without pool ledger changes) - no catchup, cache file hasn't been modified
3) reconnect to pool (with cache, with pool ledger changes) - catchup, cache file has been modified
*Actual results:*
Strange cache file behaviour in case 3

*Environment:*
indy-cli 1.4.0~551;;;","06/Jun/18 10:55 PM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/839;;;","07/Jun/18 9:31 PM;KitHat;Build version: master 557
;;;","08/Jun/18 12:32 AM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~557

*Actual results:*
All tests are passed, catchup may take some time (tens of seconds)
;;;",,,,,,,,,,,,,,,,,,,,,,,,
Support of automatic re-catchup,IS-571,27793,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,16/Feb/18 8:36 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwwdj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI: CI should check all samples of Indy SDK,IS-572,27837,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,19/Feb/18 7:01 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,devops,,,,"We often see situation when Java and Python samples becomes outdated. 

We need to update CI script to execute samples at least on one platform.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-524,,,,,,,,,,"1|hzwwd3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Errors with Anoncreds implementation,IS-573,27866,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,gudkov,MikeLodder,MikeLodder,21/Feb/18 12:07 AM,18/May/18 2:35 AM,28/Oct/23 2:49 AM,25/Apr/18 8:19 PM,,,1.4,,,,,0,TShirt_L,,,,"In indy-crypto, there are several issues that need to be addressed.

src/cl/helpers.rs - function get_hash_as_int 

  Please remove nums.sort() and and the hashed_array.reverse()

src/cl/issuer.rs - function _gen_claim_context

  1 - There is a function for bitwise_or_big_int is an incorrect implementation. It should be 

let mut values: Vec<u8> = Vec::new();
 values.extend_from_slice(&prover_id_bn.to_bytes()?);
 values.extend_from_slice(&rev_idx_bn.to_bytes()?);

let claim_context = get_hash_as_int(&mut vec![values])?;

   2 - Get rid of the pow_2 operation, the math in the anoncreds paper simply means that the output from the hash should be 256 bits. Please put a comment if needed to keep that as the output length.

src/cl/prover.rs - struct Proofbuilder

ProofBuilder.m1_tilde is not needed. The anoncreds paper will be updated to remove this. The code needs to match this.

 

The *m* values need to be checked by Prover and Verifier to make sure values have not been altered.

Prover should calculate the SHA256 hash of all attributes signed by the Issuer to verify the signature. *m* values don't even need to be sent except *m2* – the revocation context value. This checks that the Issuer is honest.

Verifiers should compute the SHA256 hash of all revealed attributes to check that the Prover is honest and has not changed his values.

 ",,,,,,,,,,,,,,,IS-564,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz4vb:",,,,,,18.05,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,MikeLodder,sergey.minaev,,,,,,,,,"05/Mar/18 3:16 PM;sergey.minaev;[~MikeLodder] FYI
More details about 0) point.
Actually the sorting is needed for ordering at steps 6.2 and 6.6.1 (paper version ""7 February 2018, version 0.3""). The proof defined as set of sub-proof, so the order is undefined.
Sorting now is popped up from function get_hash_as_int only to these 2 places.;;;","05/Mar/18 10:14 PM;MikeLodder;Sorting isn't necessary if you add the values in the same order in both places.

I have done that as part of the DKMS project in my fork at [https://github.com/mikelodder7/indy-crypto].

If you are sorting in 6.2 and 6.6.2, then why are you not also sorting at 2.0.2 and 3.2.1?

Its all about computing the exact same input. That's all that matters. As long as the data are added in the same order then you don't need to sort.;;;","06/Mar/18 11:37 PM;sergey.minaev;[~MikeLodder] We can't guarantee same order of subclaims/subproofs on both Prover and Verifier sides. Against cases for 2.0.2 and 3.2.1 where order is defined by the paper.;;;","06/Mar/18 11:47 PM;sergey.minaev;But if we change definition of the Proof from ""Set of sub-proofs"" to ""Array of sub-proofs"" it will be possible to force both sides use exact order.
[~ashcherbakov][~gudkov];;;","14/Mar/18 7:33 AM;sergey.minaev;Also about last point: m1_tilde not passed as raw from proover to verifier. Actually in the proof re-calculated m1 will be transferred (see PrimaryEqualProof structure).;;;","14/Mar/18 11:37 PM;MikeLodder;So I retract my point m1_tilde being removed. It just needs to be the same size as the other m1_tildes.

The regular m values can be recalculated by hashing the strings if they are not numbers. m1 and m2 will have to be stored of course.;;;","15/Mar/18 12:48 AM;sergey.minaev;There is another point to discuss about m1 (m1_tilde/m1_hat). Now it common for all sub-proofs in the proof and allow to verifier be sure about all subproofs are created from same MasterSecret. On the other hand it is a restriction: proover can't combine credentials from different MasterSecrets;;;","15/Mar/18 1:13 AM;MikeLodder;The m1 should be the same as in the credential, if its not then the proof will fail.

There should be an m1_tilde corresponding to each m1.

Credentials containing different m1 values cannot be linked together with m1.;;;","15/Mar/18 3:35 PM;sergey.minaev;[~MikeLodder] I mean more complex scenario: 
> proover can't combine credentials from different MasterSecrets

In other words: some Proover can (??) has 2 (on even more) different MSs and some credentials are based on the first one, others created with the second one.
Current implementation doesn't allow to combine credential based on different MSs into one proof as sub-proofs.
But as I can see from the paper, from math point of view, m1 is just attribute to prove, so in abstract implementation it's a valid scenario. Of course, Verifier will notice, that some subproofs are based at one MS, and others on the different. So they are not linked. But it may be OK for some scenario.;;;","15/Mar/18 4:45 PM;sergey.minaev;After discussion with author of Anoncreds paper I and [~ashcherbakov] decide to change proof structure provided by indy-crypto to ordered sub-proofs (was unordered).
It allow to implement 0th point but results in addition requirement for indy-crypto user: the order should be same on both Issuer and Verifier sides. Changes are appended to [the PR|https://github.com/hyperledger/indy-crypto/pull/81];;;","16/Apr/18 9:51 PM;gudkov;[~MikeLodder] Could you verify the fixes?;;;","17/Apr/18 2:26 AM;MikeLodder;Sure which pull request do I need to look at? Is it pull request 81?;;;","18/Apr/18 7:26 PM;gudkov;Yes, 81 is correct PR. It is already merged. ;;;","25/Apr/18 8:19 PM;gudkov;I don't see any movement here for a long time. For me the solution looks ok.;;;",,,,,,,,,,,,,,,,
Libindy should have support for Android platform,IS-574,28050,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,faisal00813,faisal00813,faisal00813,27/Feb/18 3:34 PM,30/Jul/18 3:35 PM,28/Oct/23 2:49 AM,26/Jul/18 8:51 PM,,,,,,,,0,help-wanted,,,,Libindy should support Android platform.,,,,,,,,,,,IS-417,,,,IS-582,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-222,,,,,,,,,,"1|hzww2v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,faisal00813,gudkov,hawkmauk,sergey.minaev,,,,,,,,"27/Feb/18 3:47 PM;faisal00813;Cross compilation was failing because of the zmq-pw.
As of now I am using a branch created by [~sergey.minaev] where he replaced zmq-pw with zmq.
But the story IS-417 mentions removing zmq completely.
Hence in order to trigger android builds from master this story is blocked by IS-417.;;;","27/Feb/18 3:51 PM;faisal00813;Update: Builds for ARM64 are successful. But Armv7 and x86 still failing.
Root cause of Armv7 failure is _OpenSSL symbol table is not found_;;;","21/May/18 8:38 PM;faisal00813;PR: https://github.com/hyperledger/indy-sdk/pull/777;;;","26/Jul/18 12:32 AM;sergey.minaev;[~faisal00813] [~gudkov] can we consider this ticket as done?;;;","26/Jul/18 8:51 PM;gudkov;In my vision yes;;;","30/Jul/18 3:35 PM;faisal00813;Yes;;;",,,,,,,,,,,,,,,,,,,,,,,,
Correlation Info is leaked in proofs,IS-575,28071,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,gudkov,devin-fisher,devin-fisher,28/Feb/18 5:14 AM,16/May/18 8:42 PM,28/Oct/23 2:49 AM,25/Apr/18 8:19 PM,,,1.4,,,,,0,TShirt_S,,,,"The identifier used in the proof to identify the claim entry is a uuid that is used in the wallet to identify the claim. This means that the verifier has a unique identifier for the claim that will be reused for every proof that uses the claim. This will allow the verifier to track the claim as it is used.

 

ex: (generated from the same code in indy-sdk)

wallet key:

claim::bd79b2bf-e6a1-48dd-9056-4733cd2597dd

 

a proof: 
{code:java}
{
""proofs"":{
""claim::bd79b2bf-e6a1-48dd-9056-4733cd2597dd"":{
""proof"":{
""primary_proof"":{
:
:
:
:
""requested_proof"":{
""revealed_attrs"":{
""sdf"":[
""claim::bd79b2bf-e6a1-48dd-9056-4733cd2597dd"",
""UT"",
""4564564""
]
},
""unrevealed_attrs"":{

},
""self_attested_attrs"":{

},
""predicates"":{

}
}
}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz4v3:",,,,,,18.05,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,devin-fisher,gudkov,,,,,,,,,,"13/Apr/18 9:06 PM;gudkov;[~devin-fisher] Could you validate this?;;;","25/Apr/18 8:19 PM;gudkov;I don't see any movement here for a long time. For me the solution looks ok.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
AARCH64 Support,IS-576,28128,28050,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,faisal00813,faisal00813,faisal00813,01/Mar/18 2:37 PM,19/Jul/19 11:19 PM,28/Oct/23 2:49 AM,19/Jul/19 11:19 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyze7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,faisal00813,,,,,,,,,,,"06/Mar/18 5:39 PM;faisal00813;I was able to cross-compile libindy for arm64/aarch64 on OSX but same build configuration does not seem to work on Ubuntu.
The problem is while native compiling one of the dependency i.e libzmq.
It seems this is an open issue.
Same issues are recorded in following tickets in zmq repo 
 [https://github.com/zeromq/libzmq/issues/1063]
 [https://github.com/zeromq/libzmq/issues/2894];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ARMV7 Support,IS-577,28129,28050,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,faisal00813,faisal00813,faisal00813,01/Mar/18 2:37 PM,19/Jul/19 11:20 PM,28/Oct/23 2:49 AM,19/Jul/19 11:20 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzef:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,faisal00813,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
X86 Support,IS-578,28130,28050,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,faisal00813,faisal00813,faisal00813,01/Mar/18 2:37 PM,19/Jul/19 11:20 PM,28/Oct/23 2:49 AM,19/Jul/19 11:20 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzen:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,faisal00813,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Making better getting started guide,IS-579,28187,,Improvement,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,sergey.khoroshavin,sergey.khoroshavin,02/Mar/18 9:38 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"I've started to learn indy project by looking through getting started guide thoroughly, and while I did get a lot of understanding of working processes there were some rough edges. I tried to fix some in PR [#556|https://github.com/hyperledger/indy-sdk/pull/556], but there are some more.

One thing is that wallet API is async, and create_wallet takes pool_name as a parameter. While after reading more documentation (and asking people) it became clear that this is done for consistency with other SDK APIs and for ability to handle remote wallets, at first I had impression that wallet had to connect to pool somehow, which was distracting. I think it would be great to have a paragraph somewhere in this guide elaborating on this.

Another one is onboarding function in jupyter notebook. I understand that it was written to reduce amount of code to perform onboarding different trust anchors, but in it's current state it's still quite hard to read and especially correlate with documentation. Maybe it would be better to split it to different functions (according to concerned parties, instead of mixing all of them in big one), possible async ones communicating with each other using {{asyncio.Queue}}.

Also, some things (like securely sending initial connection request during onboading) are seemingly out of scope for indy project, and it might be better for getting started guide to state these things explicitly where appropriate.

Overall, from my point of view the main problems in understanding this guide are numerous differences between documentation and notebook code and many intermingled entities in code.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzpr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.khoroshavin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Docs: Need better documentation on how to start application development with Libindy,IS-580,28198,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,danielhardman,gudkov,gudkov,03/Mar/18 6:44 AM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,20/Apr/18 12:12 AM,,,1.4,,,,,0,,,,,"We are miss clear instruction on how to start development with libindy on different platforms and programming languages.

I suggest to add section to documentation that will describe:

1. How to install libindy on all supported platforms
2. How to install wrapper for all programming languages
3. How to start local Indy Pool in docker on all supported platforms",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz4zr:",,,,,,18.05,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,danielhardman,gudkov,SergeyPalamarchuk,,,,,,,,,"03/Mar/18 7:37 AM;danielhardman;I agree that this would be very helpful. If we could do it in the next week or two, it would be especially helpful, since [~jankokrstic] and I are going to be needing this for the Blockchaingers hackfest in early April.;;;","08/Mar/18 4:23 AM;danielhardman;[~SeanBohan_Sovrin] [~avkrishnan] [~nage] [~gudkov]: when can this ticket be tackled? I need a simpler version of the deliverable (How to install libindy on Linux only, and how to install the java and python wrappers only, and how to start Indy Pool on docker) asap; it is needed for the Berdyaev 3 mission.;;;","13/Mar/18 5:48 AM;gudkov;[~danielhardman] We just assigned this ticket to Sergey P.;;;","15/Mar/18 11:07 PM;SergeyPalamarchuk;Changes: 
Add install documentation for libindy and wrappers for python, .net, iOs, java. 

PR:
https://github.com/hyperledger/indy-sdk/pull/572

Version:
- master

Risk:
- Low

Recommendations for QA
Revise documentation and check completeness information.;;;","22/Mar/18 9:10 PM;gudkov;[~danielhardman] It was merged. We updated main Readme.md and wrappers readme. Could you validate this?;;;","20/Apr/18 12:12 AM;gudkov;No answers for a lot of time. We can consider it as Done.;;;",,,,,,,,,,,,,,,,,,,,,,,,
CLI: CLI sometimes response 'NYM not found' for existing NYM in batch mode,IS-581,28235,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,,ozheregelya,ozheregelya,06/Mar/18 7:06 AM,28/Mar/18 12:15 AM,28/Oct/23 2:49 AM,28/Mar/18 12:15 AM,,,,,,,,0,,,,,"*Environment:*
docker pol of 7 nodes
indy-node 1.3.324
libindy 1.3.1~406
indy-cli 1.3.1~406

*Steps to Reproduce:*
 1. Execute one by one attached batch files.

*Actual Results:*
 There are 3 possible cases:
 1. Batch file executed successfully.
 2. Batch file execution failed on line 12.
 3. Batch file execution failed on line 18.
 The result is unpredictable. Each result is possible for all of files.

*Expected Result:*
 Batch files should be executed without errors.

*Additional Information:*
 The issue was reproduced after running {{RUST_LOG=indy=trace indy-cli AS-01-01-general-2.batch}} and {{indy-cli AS-01-01-general-2.batch}}. But in case of output redirection to the file {{RUST_LOG=indy=trace indy-cli AS-01-01-general-3.batch &>cli_log.txt}} it was not reproduced.
 *Logs for failed get-nym:*
 Result of previous writing this nym:
{code:java}
Nym request has been sent to Ledger.
Metadata:
+---------------------+---------------------+
| Request ID          | Transaction time    |
+---------------------+---------------------+
| 1520286426163919427 | 2018-03-05 21:47:06 |
+---------------------+---------------------+
Data:
+------------------------+-------------------------+------+
| Did                    | Verkey                  | Role |
+------------------------+-------------------------+------+
| TLvnGKZVC3qkiZgn56esFG | ~YXLYfwoWJ8utAU8TBSmgn4 | -    |
+------------------------+-------------------------+------+
TRACE|indy_cli::commands::ledger::nym_command|             src/commands/ledger.rs:74  | execute << Ok(())
{code}
get-nym:
{code:java}
ledger get-nym did=TLvnGKZVC3qkiZgn56esFG
TRACE|indy_cli::commands::ledger::get_nym_command|             src/commands/ledger.rs:89  | execute >> ctx CommandContext { main_prompt: RefCell { value: ""indy"" }, sub_prompts: RefCell { value: {1: ""pool(AS-pool)"", 2: ""wallet(AS-01-wallet-2)"", 3: ""did(L8v...uYr)""} }, is_exit: RefCell { value: false }, int_values: RefCell { value: {""CONNECTED_POOL_HANDLE"": 2, ""OPENED_WALLET_HANDLE"": 3} }, string_values: RefCell { value: {""ACTIVE_DID"": ""L8voaFcbR8oAJu9mKHxuYr"", ""OPENED_WALLET_NAME"": ""AS-01-wallet-2"", ""CONNECTED_POOL_NAME"": ""AS-pool""} } } params {""did"": ""TLvnGKZVC3qkiZgn56esFG""}
 INFO|indy::commands                |                src/commands/mod.rs:95  | LedgerCommand command received
 INFO|indy::commands::ledger        |             src/commands/ledger.rs:388 | build_get_nym_request >>> submitter_did: ""L8voaFcbR8oAJu9mKHxuYr"", target_did: ""TLvnGKZVC3qkiZgn56esFG""
 INFO|indy::commands::ledger        |             src/commands/ledger.rs:396 | build_get_attrib_request <<< res: ""{\""reqId\"":1520286427579778203,\""identifier\"":\""L8voaFcbR8oAJu9mKHxuYr\"",\""operation\"":{\""type\"":\""105\"",\""dest\"":\""TLvnGKZVC3qkiZgn56esFG\""},\""protocolVersion\"":1}""
 INFO|indy::commands                |                src/commands/mod.rs:95  | LedgerCommand command received
TRACE|indy::services::pool          |           src/services/pool/mod.rs:293 | zmq poll 1
TRACE|indy::services::pool          |           src/services/pool/mod.rs:310 | cmd [[123, 34, 114, 101, 113, 73, 100, 34, 58, 49, 53, 50, 48, 50, 56, 54, 52, 50, 55, 53, 55, 57, 55, 55, 56, 50, 48, 51, 44, 34, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114, 34, 58, 34, 76, 56, 118, 111, 97, 70, 99, 98, 82, 56, 111, 65, 74, 117, 57, 109, 75, 72, 120, 117, 89, 114, 34, 44, 34, 111, 112, 101, 114, 97, 116, 105, 111, 110, 34, 58, 123, 34, 116, 121, 112, 101, 34, 58, 34, 49, 48, 53, 34, 44, 34, 100, 101, 115, 116, 34, 58, 34, 84, 76, 118, 110, 71, 75, 90, 86, 67, 51, 113, 107, 105, 90, 103, 110, 53, 54, 101, 115, 70, 71, 34, 125, 44, 34, 112, 114, 111, 116, 111, 99, 111, 108, 86, 101, 114, 115, 105, 111, 110, 34, 58, 49, 125], [7, 0, 0, 0]]
 INFO|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:158 | cmd ""{\""reqId\"":1520286427579778203,\""identifier\"":\""L8voaFcbR8oAJu9mKHxuYr\"",\""operation\"":{\""type\"":\""105\"",\""dest\"":\""TLvnGKZVC3qkiZgn56esFG\""},\""protocolVersion\"":1}""
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:198 | try_send_request schedule next sending to Some(Tm { tm_sec: 8, tm_min: 47, tm_hour: 21, tm_mday: 5, tm_mon: 2, tm_year: 118, tm_wday: 1, tm_yday: 63, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 580004426 })
 INFO|indy::services::pool          |           src/services/pool/mod.rs:544 | RemoteNode::send_str Node6 {""reqId"":1520286427579778203,""identifier"":""L8voaFcbR8oAJu9mKHxuYr"",""operation"":{""type"":""105"",""dest"":""TLvnGKZVC3qkiZgn56esFG""},""protocolVersion"":1}
TRACE|indy::services::pool          |           src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:348 | get_zmq_poll_timeout first_event Tm { tm_sec: 8, tm_min: 47, tm_hour: 21, tm_mday: 5, tm_mon: 2, tm_year: 118, tm_wday: 1, tm_yday: 63, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 580004426 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout now_utc Tm { tm_sec: 7, tm_min: 47, tm_hour: 21, tm_mday: 5, tm_mon: 2, tm_year: 118, tm_wday: 1, tm_yday: 63, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 580020981 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff Duration Duration { secs: 0, nanos: 999983445 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:353 | get_zmq_poll_timeout diff ms 999
TRACE|indy::services::pool          |           src/services/pool/mod.rs:293 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:538 | RemoteNode::recv_msg Node2 {""result"":{""txnTime"":1520286426,""signatures"":null,""seqNo"":25,""dest"":""TLvnGKZVC3qkiZgn56esFG"",""rootHash"":""Dg4YTAJdTxzKPdd3QQsFrpR8GoB7iqnqQWF4aHBsgcsL"",""reqId"":1520286426163919427,""signature"":""4wDMiHYQD4ASByaGGNR8yAXQGcyaT1GartHHhioRhgc7pu7fgGLAqBX2csqgrtbkvrhtZvzC5oeLnvHjR6mzPV2W"",""type"":""1"",""auditPath"":[""EM6qjDEwFyxvFqh5irQhSUnMfqcWwbKFGH7qqH59dHya"",""GUSAPYbWRp6kJhdMwedgtbEqywkJEiNQkH27fEdHaXHv""],""verkey"":""~YXLYfwoWJ8utAU8TBSmgn4"",""identifier"":""L8voaFcbR8oAJu9mKHxuYr""},""op"":""REPLY""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:60  | TransactionHandler::process_reply: >>> req_id: 1520286426163919427, raw_msg: ""{\""result\"":{\""txnTime\"":1520286426,\""signatures\"":null,\""seqNo\"":25,\""dest\"":\""TLvnGKZVC3qkiZgn56esFG\"",\""rootHash\"":\""Dg4YTAJdTxzKPdd3QQsFrpR8GoB7iqnqQWF4aHBsgcsL\"",\""reqId\"":1520286426163919427,\""signature\"":\""4wDMiHYQD4ASByaGGNR8yAXQGcyaT1GartHHhioRhgc7pu7fgGLAqBX2csqgrtbkvrhtZvzC5oeLnvHjR6mzPV2W\"",\""type\"":\""1\"",\""auditPath\"":[\""EM6qjDEwFyxvFqh5irQhSUnMfqcWwbKFGH7qqH59dHya\"",\""GUSAPYbWRp6kJhdMwedgtbEqywkJEiNQkH27fEdHaXHv\""],\""verkey\"":\""~YXLYfwoWJ8utAU8TBSmgn4\"",\""identifier\"":\""L8voaFcbR8oAJu9mKHxuYr\""},\""op\"":\""REPLY\""}""
 WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:63  | TransactionHandler::process_reply: <<< No pending command for request
TRACE|indy::services::pool          |           src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:348 | get_zmq_poll_timeout first_event Tm { tm_sec: 8, tm_min: 47, tm_hour: 21, tm_mday: 5, tm_mon: 2, tm_year: 118, tm_wday: 1, tm_yday: 63, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 580004426 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout now_utc Tm { tm_sec: 7, tm_min: 47, tm_hour: 21, tm_mday: 5, tm_mon: 2, tm_year: 118, tm_wday: 1, tm_yday: 63, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 602202925 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff Duration Duration { secs: 0, nanos: 977801501 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:353 | get_zmq_poll_timeout diff ms 977
TRACE|indy::services::pool          |           src/services/pool/mod.rs:293 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:538 | RemoteNode::recv_msg Node6 {""reqId"":1520286427579778203,""op"":""REQACK"",""identifier"":""L8voaFcbR8oAJu9mKHxuYr""}
 WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:53  | unhandled msg ReqACK(Response { req_id: 1520286427579778203 })
TRACE|indy::services::pool          |           src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:348 | get_zmq_poll_timeout first_event Tm { tm_sec: 8, tm_min: 47, tm_hour: 21, tm_mday: 5, tm_mon: 2, tm_year: 118, tm_wday: 1, tm_yday: 63, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 580004426 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout now_utc Tm { tm_sec: 7, tm_min: 47, tm_hour: 21, tm_mday: 5, tm_mon: 2, tm_year: 118, tm_wday: 1, tm_yday: 63, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 700606062 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff Duration Duration { secs: 0, nanos: 879398364 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:353 | get_zmq_poll_timeout diff ms 879
TRACE|indy::services::pool          |           src/services/pool/mod.rs:293 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:538 | RemoteNode::recv_msg Node1 {""result"":{""dest"":""TLvnGKZVC3qkiZgn56esFG"",""identifier"":""L8voaFcbR8oAJu9mKHxuYr"",""signatures"":null,""rootHash"":""Dg4YTAJdTxzKPdd3QQsFrpR8GoB7iqnqQWF4aHBsgcsL"",""signature"":""4wDMiHYQD4ASByaGGNR8yAXQGcyaT1GartHHhioRhgc7pu7fgGLAqBX2csqgrtbkvrhtZvzC5oeLnvHjR6mzPV2W"",""reqId"":1520286426163919427,""txnTime"":1520286426,""verkey"":""~YXLYfwoWJ8utAU8TBSmgn4"",""auditPath"":[""EM6qjDEwFyxvFqh5irQhSUnMfqcWwbKFGH7qqH59dHya"",""GUSAPYbWRp6kJhdMwedgtbEqywkJEiNQkH27fEdHaXHv""],""type"":""1"",""seqNo"":25},""op"":""REPLY""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:60  | TransactionHandler::process_reply: >>> req_id: 1520286426163919427, raw_msg: ""{\""result\"":{\""dest\"":\""TLvnGKZVC3qkiZgn56esFG\"",\""identifier\"":\""L8voaFcbR8oAJu9mKHxuYr\"",\""signatures\"":null,\""rootHash\"":\""Dg4YTAJdTxzKPdd3QQsFrpR8GoB7iqnqQWF4aHBsgcsL\"",\""signature\"":\""4wDMiHYQD4ASByaGGNR8yAXQGcyaT1GartHHhioRhgc7pu7fgGLAqBX2csqgrtbkvrhtZvzC5oeLnvHjR6mzPV2W\"",\""reqId\"":1520286426163919427,\""txnTime\"":1520286426,\""verkey\"":\""~YXLYfwoWJ8utAU8TBSmgn4\"",\""auditPath\"":[\""EM6qjDEwFyxvFqh5irQhSUnMfqcWwbKFGH7qqH59dHya\"",\""GUSAPYbWRp6kJhdMwedgtbEqywkJEiNQkH27fEdHaXHv\""],\""type\"":\""1\"",\""seqNo\"":25},\""op\"":\""REPLY\""}""
 WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:63  | TransactionHandler::process_reply: <<< No pending command for request
TRACE|indy::services::pool          |           src/services/pool/mod.rs:246 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:240 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:348 | get_zmq_poll_timeout first_event Tm { tm_sec: 8, tm_min: 47, tm_hour: 21, tm_mday: 5, tm_mon: 2, tm_year: 118, tm_wday: 1, tm_yday: 63, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 580004426 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout now_utc Tm { tm_sec: 7, tm_min: 47, tm_hour: 21, tm_mday: 5, tm_mon: 2, tm_year: 118, tm_wday: 1, tm_yday: 63, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 710716931 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff Duration Duration { secs: 0, nanos: 869287495 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:353 | get_zmq_poll_timeout diff ms 869
TRACE|indy::services::pool          |           src/services/pool/mod.rs:293 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:538 | RemoteNode::recv_msg Node6 {""result"":{""type"":""105"",""data"":null,""identifier"":""L8voaFcbR8oAJu9mKHxuYr"",""reqId"":1520286427579778203,""seqNo"":null,""dest"":""TLvnGKZVC3qkiZgn56esFG"",""txnTime"":null,""state_proof"":{""proof_nodes"":""+QJL+JWgO8mlngpweK03LQ03AT2+SdHe+L0AtpGBaEyN3RlYPyK4cvhwuG57ImlkZW50aWZpZXIiOiJWNFNHUlU4Nlo1OGQ2VFY3UEJVZTZmIiwicm9sZSI6IjIiLCJzZXFObyI6MywidHhuVGltZSI6bnVsbCwidmVya2V5IjoiflJIR050ZnZrZ1BFVVF6UU50TnhMTnUiffkBsaDT0j9uCbFabO0LnyutnB5uDC61QaWLtVTJU4XCa4sWo4CAoJqauj70Qf++s0g43b1zvnQEyQJh2lfNqxFRtmaADvkwgKAnQX7muSztsNraYuV\/n+wOYAmdtCBD9wC+8fidNa861aCfn21gHZkHJUjdCW4ZKqsCTaJdwy8V6WUSolEQrvc1cKBf5RO1AptKjt0GB9mb7JkP+Q4iyF8TKqWF3Xos73TpN6BwgF\/53RoSI625mEOziDdW4\/GCYk4kRmG\/2ZUJe4c1NaC2YfwOhLj0zWf1s42IwrcYjj7Dn5YW7yBgb435Uf\/CwKAJoSIREMPm00brmAexRx54jNRGoC63XlW8rwtdz4WeTKBOPTIYSIOjjKBvX6aZ1FZpxobaRq9vO9WEJFKBOV6HY6AZp5CpVs1tgjB3v2uak8pYNhCb0iDAMpJPh+AkPndumKAlthSA5a4KV2Iw5ZQ\/LDCR4mxD8miwISkJKNBDxhBubaDq\/jDh1ipb8onhSAYdTMW3BUdLP1S3W1qwR4skRz5jqKA7Ohl8US\/Ipw9m90WNb\/7n5LAxzanxSmitjBCIzSGcGoA="",""root_hash"":""26PCie1DLRiZdRBDvMBhKsxEcWWT4oyMgNJbAvmUTCe8"",""multi_signature"":{""signature"":""R1rnYSsHScgD1ZXageFfgJAqe2tB5j9jBFVCWpvtYsSzM2pst1oLgoDon8sf1qf3T7R9qQWrDGzcJGwHKv4XgBkgWBxaSdgXFZxwUpVLBRJDVeXZRp8Y8FLSP1m4c76wEkxX1q4RKXaiGSHYMonV8Eg9LDRnBAB2fKYmj5DB7Qv5VZ"",""value"":{""txn_root_hash"":""EjHL454Je9coTWs584GEgp4t5VVowtRczMyMZSpeWJLR"",""timestamp"":1520286425,""pool_state_root_hash"":""GX3KEXsownLbWNCo4sCuN4cEU1c3aXdhnuSRwrMB7832"",""state_root_hash"":""26PCie1DLRiZdRBDvMBhKsxEcWWT4oyMgNJbAvmUTCe8"",""ledger_id"":1},""participants"":[""Node3"",""Node1"",""Node2"",""Node5"",""Node7""]}}},""op"":""REPLY""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:60  | TransactionHandler::process_reply: >>> req_id: 1520286427579778203, raw_msg: ""{\""result\"":{\""type\"":\""105\"",\""data\"":null,\""identifier\"":\""L8voaFcbR8oAJu9mKHxuYr\"",\""reqId\"":1520286427579778203,\""seqNo\"":null,\""dest\"":\""TLvnGKZVC3qkiZgn56esFG\"",\""txnTime\"":null,\""state_proof\"":{\""proof_nodes\"":\""+QJL+JWgO8mlngpweK03LQ03AT2+SdHe+L0AtpGBaEyN3RlYPyK4cvhwuG57ImlkZW50aWZpZXIiOiJWNFNHUlU4Nlo1OGQ2VFY3UEJVZTZmIiwicm9sZSI6IjIiLCJzZXFObyI6MywidHhuVGltZSI6bnVsbCwidmVya2V5IjoiflJIR050ZnZrZ1BFVVF6UU50TnhMTnUiffkBsaDT0j9uCbFabO0LnyutnB5uDC61QaWLtVTJU4XCa4sWo4CAoJqauj70Qf++s0g43b1zvnQEyQJh2lfNqxFRtmaADvkwgKAnQX7muSztsNraYuV\\/n+wOYAmdtCBD9wC+8fidNa861aCfn21gHZkHJUjdCW4ZKqsCTaJdwy8V6WUSolEQrvc1cKBf5RO1AptKjt0GB9mb7JkP+Q4iyF8TKqWF3Xos73TpN6BwgF\\/53RoSI625mEOziDdW4\\/GCYk4kRmG\\/2ZUJe4c1NaC2YfwOhLj0zWf1s42IwrcYjj7Dn5YW7yBgb435Uf\\/CwKAJoSIREMPm00brmAexRx54jNRGoC63XlW8rwtdz4WeTKBOPTIYSIOjjKBvX6aZ1FZpxobaRq9vO9WEJFKBOV6HY6AZp5CpVs1tgjB3v2uak8pYNhCb0iDAMpJPh+AkPndumKAlthSA5a4KV2Iw5ZQ\\/LDCR4mxD8miwISkJKNBDxhBubaDq\\/jDh1ipb8onhSAYdTMW3BUdLP1S3W1qwR4skRz5jqKA7Ohl8US\\/Ipw9m90WNb\\/7n5LAxzanxSmitjBCIzSGcGoA=\"",\""root_hash\"":\""26PCie1DLRiZdRBDvMBhKsxEcWWT4oyMgNJbAvmUTCe8\"",\""multi_signature\"":{\""signature\"":\""R1rnYSsHScgD1ZXageFfgJAqe2tB5j9jBFVCWpvtYsSzM2pst1oLgoDon8sf1qf3T7R9qQWrDGzcJGwHKv4XgBkgWBxaSdgXFZxwUpVLBRJDVeXZRp8Y8FLSP1m4c76wEkxX1q4RKXaiGSHYMonV8Eg9LDRnBAB2fKYmj5DB7Qv5VZ\"",\""value\"":{\""txn_root_hash\"":\""EjHL454Je9coTWs584GEgp4t5VVowtRczMyMZSpeWJLR\"",\""timestamp\"":1520286425,\""pool_state_root_hash\"":\""GX3KEXsownLbWNCo4sCuN4cEU1c3aXdhnuSRwrMB7832\"",\""state_root_hash\"":\""26PCie1DLRiZdRBDvMBhKsxEcWWT4oyMgNJbAvmUTCe8\"",\""ledger_id\"":1},\""participants\"":[\""Node3\"",\""Node1\"",\""Node2\"",\""Node5\"",\""Node7\""]}}},\""op\"":\""REPLY\""}""
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:77  | TransactionHandler::process_reply: reply_cnt: 0, f: 2
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80  | TransactionHandler::process_reply: Try to verify proof and signature
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:228 | TransactionHandler::parse_reply_for_proof_checking: >>> json_msg: Object({""data"": Null, ""dest"": String(""TLvnGKZVC3qkiZgn56esFG""), ""identifier"": String(""L8voaFcbR8oAJu9mKHxuYr""), ""reqId"": Number(PosInt(1520286427579778203)), ""seqNo"": Null, ""state_proof"": Object({""multi_signature"": Object({""participants"": Array([String(""Node3""), String(""Node1""), String(""Node2""), String(""Node5""), String(""Node7"")]), ""signature"": String(""R1rnYSsHScgD1ZXageFfgJAqe2tB5j9jBFVCWpvtYsSzM2pst1oLgoDon8sf1qf3T7R9qQWrDGzcJGwHKv4XgBkgWBxaSdgXFZxwUpVLBRJDVeXZRp8Y8FLSP1m4c76wEkxX1q4RKXaiGSHYMonV8Eg9LDRnBAB2fKYmj5DB7Qv5VZ""), ""value"": Object({""ledger_id"": Number(PosInt(1)), ""pool_state_root_hash"": String(""GX3KEXsownLbWNCo4sCuN4cEU1c3aXdhnuSRwrMB7832""), ""state_root_hash"": String(""26PCie1DLRiZdRBDvMBhKsxEcWWT4oyMgNJbAvmUTCe8""), ""timestamp"": Number(PosInt(1520286425)), ""txn_root_hash"": String(""EjHL454Je9coTWs584GEgp4t5VVowtRczMyMZSpeWJLR"")})}), ""proof_nodes"": String(""+QJL+JWgO8mlngpweK03LQ03AT2+SdHe+L0AtpGBaEyN3RlYPyK4cvhwuG57ImlkZW50aWZpZXIiOiJWNFNHUlU4Nlo1OGQ2VFY3UEJVZTZmIiwicm9sZSI6IjIiLCJzZXFObyI6MywidHhuVGltZSI6bnVsbCwidmVya2V5IjoiflJIR050ZnZrZ1BFVVF6UU50TnhMTnUiffkBsaDT0j9uCbFabO0LnyutnB5uDC61QaWLtVTJU4XCa4sWo4CAoJqauj70Qf++s0g43b1zvnQEyQJh2lfNqxFRtmaADvkwgKAnQX7muSztsNraYuV/n+wOYAmdtCBD9wC+8fidNa861aCfn21gHZkHJUjdCW4ZKqsCTaJdwy8V6WUSolEQrvc1cKBf5RO1AptKjt0GB9mb7JkP+Q4iyF8TKqWF3Xos73TpN6BwgF/53RoSI625mEOziDdW4/GCYk4kRmG/2ZUJe4c1NaC2YfwOhLj0zWf1s42IwrcYjj7Dn5YW7yBgb435Uf/CwKAJoSIREMPm00brmAexRx54jNRGoC63XlW8rwtdz4WeTKBOPTIYSIOjjKBvX6aZ1FZpxobaRq9vO9WEJFKBOV6HY6AZp5CpVs1tgjB3v2uak8pYNhCb0iDAMpJPh+AkPndumKAlthSA5a4KV2Iw5ZQ/LDCR4mxD8miwISkJKNBDxhBubaDq/jDh1ipb8onhSAYdTMW3BUdLP1S3W1qwR4skRz5jqKA7Ohl8US/Ipw9m90WNb/7n5LAxzanxSmitjBCIzSGcGoA=""), ""root_hash"": String(""26PCie1DLRiZdRBDvMBhKsxEcWWT4oyMgNJbAvmUTCe8"")}), ""txnTime"": Null, ""type"": String(""105"")})
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:231 | TransactionHandler::parse_reply_for_proof_checking: xtype: ""105""
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:245 | TransactionHandler::parse_reply_for_proof_checking: proof: ""+QJL+JWgO8mlngpweK03LQ03AT2+SdHe+L0AtpGBaEyN3RlYPyK4cvhwuG57ImlkZW50aWZpZXIiOiJWNFNHUlU4Nlo1OGQ2VFY3UEJVZTZmIiwicm9sZSI6IjIiLCJzZXFObyI6MywidHhuVGltZSI6bnVsbCwidmVya2V5IjoiflJIR050ZnZrZ1BFVVF6UU50TnhMTnUiffkBsaDT0j9uCbFabO0LnyutnB5uDC61QaWLtVTJU4XCa4sWo4CAoJqauj70Qf++s0g43b1zvnQEyQJh2lfNqxFRtmaADvkwgKAnQX7muSztsNraYuV/n+wOYAmdtCBD9wC+8fidNa861aCfn21gHZkHJUjdCW4ZKqsCTaJdwy8V6WUSolEQrvc1cKBf5RO1AptKjt0GB9mb7JkP+Q4iyF8TKqWF3Xos73TpN6BwgF/53RoSI625mEOziDdW4/GCYk4kRmG/2ZUJe4c1NaC2YfwOhLj0zWf1s42IwrcYjj7Dn5YW7yBgb435Uf/CwKAJoSIREMPm00brmAexRx54jNRGoC63XlW8rwtdz4WeTKBOPTIYSIOjjKBvX6aZ1FZpxobaRq9vO9WEJFKBOV6HY6AZp5CpVs1tgjB3v2uak8pYNhCb0iDAMpJPh+AkPndumKAlthSA5a4KV2Iw5ZQ/LDCR4mxD8miwISkJKNBDxhBubaDq/jDh1ipb8onhSAYdTMW3BUdLP1S3W1qwR4skRz5jqKA7Ohl8US/Ipw9m90WNb/7n5LAxzanxSmitjBCIzSGcGoA=""
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:253 | TransactionHandler::parse_reply_for_proof_checking: root_hash: ""26PCie1DLRiZdRBDvMBhKsxEcWWT4oyMgNJbAvmUTCe8""
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:266 | TransactionHandler::parse_reply_for_proof_checking: Data is null
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:288 | TransactionHandler::parse_reply_for_proof_checking: data: None, parsed_data: Null
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:316 | TransactionHandler::parse_reply_for_proof_checking: GET_NYM
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:346 | TransactionHandler::parse_reply_for_proof_checking: dest: [57, 121, 162, 219, 13, 40, 216, 180, 212, 163, 220, 6, 40, 40, 64, 99, 45, 111, 148, 155, 15, 53, 150, 148, 50, 22, 4, 116, 30, 54, 5, 143]
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:361 | parse_reply_for_proof_checking: <<< proof ""+QJL+JWgO8mlngpweK03LQ03AT2+SdHe+L0AtpGBaEyN3RlYPyK4cvhwuG57ImlkZW50aWZpZXIiOiJWNFNHUlU4Nlo1OGQ2VFY3UEJVZTZmIiwicm9sZSI6IjIiLCJzZXFObyI6MywidHhuVGltZSI6bnVsbCwidmVya2V5IjoiflJIR050ZnZrZ1BFVVF6UU50TnhMTnUiffkBsaDT0j9uCbFabO0LnyutnB5uDC61QaWLtVTJU4XCa4sWo4CAoJqauj70Qf++s0g43b1zvnQEyQJh2lfNqxFRtmaADvkwgKAnQX7muSztsNraYuV/n+wOYAmdtCBD9wC+8fidNa861aCfn21gHZkHJUjdCW4ZKqsCTaJdwy8V6WUSolEQrvc1cKBf5RO1AptKjt0GB9mb7JkP+Q4iyF8TKqWF3Xos73TpN6BwgF/53RoSI625mEOziDdW4/GCYk4kRmG/2ZUJe4c1NaC2YfwOhLj0zWf1s42IwrcYjj7Dn5YW7yBgb435Uf/CwKAJoSIREMPm00brmAexRx54jNRGoC63XlW8rwtdz4WeTKBOPTIYSIOjjKBvX6aZ1FZpxobaRq9vO9WEJFKBOV6HY6AZp5CpVs1tgjB3v2uak8pYNhCb0iDAMpJPh+AkPndumKAlthSA5a4KV2Iw5ZQ/LDCR4mxD8miwISkJKNBDxhBubaDq/jDh1ipb8onhSAYdTMW3BUdLP1S3W1qwR4skRz5jqKA7Ohl8US/Ipw9m90WNb/7n5LAxzanxSmitjBCIzSGcGoA="", root_hash: ""26PCie1DLRiZdRBDvMBhKsxEcWWT4oyMgNJbAvmUTCe8"", dest: [57, 121, 162, 219, 13, 40, 216, 180, 212, 163, 220, 6, 40, 40, 64, 99, 45, 111, 148, 155, 15, 53, 150, 148, 50, 22, 4, 116, 30, 54, 5, 143], value: None
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:86  | TransactionHandler::process_reply: Proof and signature are present
DEBUG|indy::services::pool::state_proof|   src/services/pool/state_proof.rs:251 | verify_proof >> key [57, 121, 162, 219, 13, 40, 216, 180, 212, 163, 220, 6, 40, 40, 64, 99, 45, 111, 148, 155, 15, 53, 150, 148, 50, 22, 4, 116, 30, 54, 5, 143], expected_value None
TRACE|indy::services::pool::state_proof|   src/services/pool/state_proof.rs:184 | Check proof, cur node: Full(FullNode { nodes: [Some(Hash([211, 210, 63, 110, 9, 177, 90, 108, 237, 11, 159, 43, 173, 156, 30, 110, 12, 46, 181, 65, 165, 139, 181, 84, 201, 83, 133, 194, 107, 139, 22, 163])), None, None, Some(Hash([154, 154, 186, 62, 244, 65, 255, 190, 179, 72, 56, 221, 189, 115, 190, 116, 4, 201, 2, 97, 218, 87, 205, 171, 17, 81, 182, 102, 128, 14, 249, 48])), None, Some(Hash([39, 65, 126, 230, 185, 44, 237, 176, 218, 218, 98, 229, 127, 159, 236, 14, 96, 9, 157, 180, 32, 67, 247, 0, 190, 241, 248, 157, 53, 175, 58, 213])), Some(Hash([159, 159, 109, 96, 29, 153, 7, 37, 72, 221, 9, 110, 25, 42, 171, 2, 77, 162, 93, 195, 47, 21, 233, 101, 18, 162, 81, 16, 174, 247, 53, 112])), Some(Hash([95, 229, 19, 181, 2, 155, 74, 142, 221, 6, 7, 217, 155, 236, 153, 15, 249, 14, 34, 200, 95, 19, 42, 165, 133, 221, 122, 44, 239, 116, 233, 55])), Some(Hash([112, 128, 95, 249, 221, 26, 18, 35, 173, 185, 152, 67, 179, 136, 55, 86, 227, 241, 130, 98, 78, 36, 70, 97, 191, 217, 149, 9, 123, 135, 53, 53])), Some(Hash([182, 97, 252, 14, 132, 184, 244, 205, 103, 245, 179, 141, 136, 194, 183, 24, 142, 62, 195, 159, 150, 22, 239, 32, 96, 111, 141, 249, 81, 255, 194, 192])), Some(Hash([9, 161, 34, 17, 16, 195, 230, 211, 70, 235, 152, 7, 177, 71, 30, 120, 140, 212, 70, 160, 46, 183, 94, 85, 188, 175, 11, 93, 207, 133, 158, 76])), Some(Hash([78, 61, 50, 24, 72, 131, 163, 140, 160, 111, 95, 166, 153, 212, 86, 105, 198, 134, 218, 70, 175, 111, 59, 213, 132, 36, 82, 129, 57, 94, 135, 99])), Some(Hash([25, 167, 144, 169, 86, 205, 109, 130, 48, 119, 191, 107, 154, 147, 202, 88, 54, 16, 155, 210, 32, 192, 50, 146, 79, 135, 224, 36, 62, 119, 110, 152])), Some(Hash([37, 182, 20, 128, 229, 174, 10, 87, 98, 48, 229, 148, 63, 44, 48, 145, 226, 108, 67, 242, 104, 176, 33, 41, 9, 40, 208, 67, 198, 16, 110, 109])), Some(Hash([234, 254, 48, 225, 214, 42, 91, 242, 137, 225, 72, 6, 29, 76, 197, 183, 5, 71, 75, 63, 84, 183, 91, 90, 176, 71, 139, 36, 71, 62, 99, 168])), Some(Hash([59, 58, 25, 124, 81, 47, 200, 167, 15, 102, 247, 69, 141, 111, 254, 231, 228, 176, 49, 205, 169, 241, 74, 104, 173, 140, 16, 136, 205, 33, 156, 26]))], value: None })
TRACE|indy::services::pool::state_proof|   src/services/pool/state_proof.rs:184 | Check proof, cur node: Hash([154, 154, 186, 62, 244, 65, 255, 190, 179, 72, 56, 221, 189, 115, 190, 116, 4, 201, 2, 97, 218, 87, 205, 171, 17, 81, 182, 102, 128, 14, 249, 48])
TRACE|indy::services::pool::state_proof|   src/services/pool/state_proof.rs:184 | Check proof, cur node: Leaf(Leaf { path: [59, 201, 165, 158, 10, 112, 120, 173, 55, 45, 13, 55, 1, 61, 190, 73, 209, 222, 248, 189, 0, 182, 145, 129, 104, 76, 141, 221, 25, 88, 63, 34], value: [248, 112, 184, 110, 123, 34, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114, 34, 58, 34, 86, 52, 83, 71, 82, 85, 56, 54, 90, 53, 56, 100, 54, 84, 86, 55, 80, 66, 85, 101, 54, 102, 34, 44, 34, 114, 111, 108, 101, 34, 58, 34, 50, 34, 44, 34, 115, 101, 113, 78, 111, 34, 58, 51, 44, 34, 116, 120, 110, 84, 105, 109, 101, 34, 58, 110, 117, 108, 108, 44, 34, 118, 101, 114, 107, 101, 121, 34, 58, 34, 126, 82, 72, 71, 78, 116, 102, 118, 107, 103, 80, 69, 85, 81, 122, 81, 78, 116, 78, 120, 76, 78, 117, 34, 125] })
TRACE|indy::services::pool::state_proof|   src/services/pool/state_proof.rs:210 | Node::_get_value in Leaf searched path Ok(""\t\u{7}\t\n\u{2}\r\u{b}\u{0}\r\u{2}\u{8}\r\u{8}\u{b}\u{4}\r\u{4}\n\u{3}\r\u{c}\u{0}\u{6}\u{2}\u{8}\u{2}\u{8}\u{4}\u{0}\u{6}\u{3}\u{2}\r\u{6}\u{f}\t\u{4}\t\u{b}\u{0}\u{f}\u{3}\u{5}\t\u{6}\t\u{4}\u{3}\u{2}\u{1}\u{6}\u{0}\u{4}\u{7}\u{4}\u{1}\u{e}\u{3}\u{6}\u{0}\u{5}\u{8}\u{f}""), stored path Ok(""\u{b}\u{c}\t\n\u{5}\t\u{e}\u{0}\n\u{7}\u{0}\u{7}\u{8}\n\r\u{3}\u{7}\u{2}\r\u{0}\r\u{3}\u{7}\u{0}\u{1}\u{3}\r\u{b}\u{e}\u{4}\t\r\u{1}\r\u{e}\u{f}\u{8}\u{b}\r\u{0}\u{0}\u{b}\u{6}\t\u{1}\u{8}\u{1}\u{6}\u{8}\u{4}\u{c}\u{8}\r\r\r\u{1}\t\u{5}\u{8}\u{3}\u{f}\u{2}\u{2}"")
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:97  | TransactionHandler::process_reply: proof_valid: true
TRACE|indy::services::pool::state_proof|   src/services/pool/state_proof.rs:276 | verify_proof_signature: >>> signature: ""R1rnYSsHScgD1ZXageFfgJAqe2tB5j9jBFVCWpvtYsSzM2pst1oLgoDon8sf1qf3T7R9qQWrDGzcJGwHKv4XgBkgWBxaSdgXFZxwUpVLBRJDVeXZRp8Y8FLSP1m4c76wEkxX1q4RKXaiGSHYMonV8Eg9LDRnBAB2fKYmj5DB7Qv5VZ"", participants: [""Node3"", ""Node1"", ""Node2"", ""Node5"", ""Node7""], pool_state_root: [133, 169, 108, 101, 100, 103, 101, 114, 95, 105, 100, 1, 180, 112, 111, 111, 108, 95, 115, 116, 97, 116, 101, 95, 114, 111, 111, 116, 95, 104, 97, 115, 104, 217, 44, 71, 88, 51, 75, 69, 88, 115, 111, 119, 110, 76, 98, 87, 78, 67, 111, 52, 115, 67, 117, 78, 52, 99, 69, 85, 49, 99, 51, 97, 88, 100, 104, 110, 117, 83, 82, 119, 114, 77, 66, 55, 56, 51, 50, 175, 115, 116, 97, 116, 101, 95, 114, 111, 111, 116, 95, 104, 97, 115, 104, 217, 44, 50, 54, 80, 67, 105, 101, 49, 68, 76, 82, 105, 90, 100, 82, 66, 68, 118, 77, 66, 104, 75, 115, 120, 69, 99, 87, 87, 84, 52, 111, 121, 77, 103, 78, 74, 98, 65, 118, 109, 85, 84, 67, 101, 56, 169, 116, 105, 109, 101, 115, 116, 97, 109, 112, 206, 90, 157, 186, 217, 173, 116, 120, 110, 95, 114, 111, 111, 116, 95, 104, 97, 115, 104, 217, 44, 69, 106, 72, 76, 52, 53, 52, 74, 101, 57, 99, 111, 84, 87, 115, 53, 56, 52, 71, 69, 103, 112, 52, 116, 53, 86, 86, 111, 119, 116, 82, 99, 122, 77, 121, 77, 90, 83, 112, 101, 87, 74, 76, 82]
DEBUG|indy::services::pool::state_proof|   src/services/pool/state_proof.rs:288 | verify_proof_signature: ver_keys.len(): 5
DEBUG|indy::services::pool::state_proof|   src/services/pool/state_proof.rs:308 | verify_proof_signature: signature: MultiSignature { point: PointG1 { point: ECP: [ false, FP: [ BIG: [ 1E820238C79FE4E8C28AC157CFEC73D4465012D92E12674C1018D13FE1383E6D ] ], FP: [ BIG: [ 20A62D2659EE365B0CCB3CDC8CF988C8F83637AC774F9386A47583AC16463CBA ] ], FP: [ BIG: [ 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8 ] ] ] }, bytes: [4, 11, 211, 24, 234, 54, 81, 118, 206, 180, 49, 119, 200, 119, 87, 108, 164, 123, 183, 249, 182, 191, 133, 137, 226, 253, 234, 255, 201, 25, 40, 249, 59, 36, 244, 121, 216, 0, 137, 182, 178, 177, 131, 250, 145, 37, 242, 156, 53, 69, 227, 237, 98, 190, 199, 99, 232, 175, 172, 25, 60, 234, 20, 209, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
DEBUG|indy::services::pool::state_proof|   src/services/pool/state_proof.rs:312 | verify_proof_signature: <<< res: true
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:107 | TransactionHandler::process_reply: signature_valid: true
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:113 | TransactionHandler::process_reply: consensus_reached true
 INFO|indy::commands                |                src/commands/mod.rs:95  | LedgerCommand command received
NYM not found
Batch execution failed at line #12
{code}
Similar sequence of actions works for old CLI and new one.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-602,,,,,,"06/Mar/18 7:05 AM;ozheregelya;AS-01-01-general-1.batch;https://jira.hyperledger.org/secure/attachment/14721/AS-01-01-general-1.batch","06/Mar/18 7:05 AM;ozheregelya;AS-01-01-general-2.batch;https://jira.hyperledger.org/secure/attachment/14720/AS-01-01-general-2.batch","06/Mar/18 7:05 AM;ozheregelya;AS-01-01-general-3.batch;https://jira.hyperledger.org/secure/attachment/14722/AS-01-01-general-3.batch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwyrz:",,,,,,18.06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,ozheregelya,,,,,,,,,,"22/Mar/18 10:22 PM;gudkov;[~ozheregelya]

Do you send NYM and GET_NYM for the same did immediately?

Node doesn't provide warranty that posted transactions will be available to read immediately.;;;","23/Mar/18 11:27 PM;ozheregelya;[~gudkov], as you can see in batches, it fails in two possible cases: in line 12 or in line 18. 
{code:java}
line11: ledger nym did=NyLkggDnCtZY6ngkfNqzg2 verkey=~LTar8Y3uzcQEt3HdhgqtSz
line12: ledger get-nym did=NyLkggDnCtZY6ngkfNqzg2
...
line18: ledger get-nym did=NyLkggDnCtZY6ngkfNqzg2{code}
In case of failure on line 18, first get-nym worked successfully. So, failed get-nym was send not right after sending nym.;;;","27/Mar/18 9:30 PM;gudkov;It is expected RBFT protocol behavior. We suggest the following workaround:

- Ignore result of get-nym transactions in acceptance scripts
- Check output and expected output diffs 
- If get-nym failed than re-send it manually after finishing of acceptance script

We have an idea how to improve this and created corresponded ticket https://jira.hyperledger.org/browse/IS-602;;;","27/Mar/18 9:31 PM;gudkov;[~ozheregelya] Could you check that QA is satisfied with this workaround?;;;","28/Mar/18 12:15 AM;ozheregelya;For now this workaround is acceptable.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Add Android build to Libindy CI pipeline,IS-582,28242,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,faisal00813,faisal00813,faisal00813,06/Mar/18 6:05 PM,26/Jul/18 9:31 PM,28/Oct/23 2:49 AM,26/Jul/18 5:21 PM,,,1.6.0,,,,,0,,,,,,,,,,,,,,,,IS-574,IS-584,,,,,,,,,,,,,,,,,,,,IS-835,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-222,,,,,,,,,,"1|hzzjnz:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,faisal00813,gudkov,sergey.minaev,,,,,,,,,"06/Mar/18 6:13 PM;faisal00813;As of now, only ARMv7 compatible binary shall be available since there are issues in building ARM64 compatible binaries on Ubuntu.
(See https://jira.hyperledger.org/browse/IS-576 );;;","15/Mar/18 1:13 AM;gudkov;[~faisal00813]

Do you plans to handle this? Will you be able to do this during next sprint?;;;","15/Mar/18 1:16 AM;faisal00813;[~gudkov] Yes, it can be completed in the upcoming sprint.;;;","15/Mar/18 2:21 AM;gudkov;[~faisal00813] Could you provide points estimation for this task?;;;","15/Mar/18 11:01 PM;faisal00813;[~gudkov] I am sorry, I will not be able to pick this story. Occupied with another priority story. Can Andrey K pick it up? I will be able to support him wherever needed.;;;","15/Mar/18 11:09 PM;gudkov;Out team is full of stories and it isn’t our main priority. So we need to move it to backlog. 

[~SeanBohan_Sovrin] [~avkrishnan] I am moving it to backlog.;;;","24/Jul/18 6:46 PM;sergey.minaev;[~faisal00813] In the PR conversation we decide to merge current CI/CD with failing and disabling step for run test on Android emulator. Could you please add reference from this ticket to another one about fixing this issue?;;;","24/Jul/18 7:33 PM;faisal00813;Although the work needed to complete the CI pipeline is complete there is one caveat. The CI only has minimal build test to guarantee the sanity of the code. The unit tests are failing on the emulator. The work related to this is tracked here https://jira.hyperledger.org/browse/IS-835
;;;","26/Jul/18 5:22 PM;gudkov;We can consider this as done. PR was merged and first artifacts were produced. Additional changes will be tracked as new issues. 

I will reduce scores to zero as work was done outside of core team.;;;",,,,,,,,,,,,,,,,,,,,,
Indy Crypto: Success and verified for bad signature from libindy-crypto,IS-583,28332,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,tobowers,tobowers,tobowers,09/Mar/18 4:52 PM,13/Mar/18 7:05 PM,28/Oct/23 2:49 AM,13/Mar/18 7:04 PM,,,,,,,,0,Security,,,,"I'm not a crypto expert and so I can't look at these bytes and see what's immediately wrong, however...

I'm in the process of wrapping BLS from libindy-crypto to Go. During that process I had my pointer arithmetic messed up and was getting bad bytes from all the *_as_bytes methods. I have since corrected my pointers and everything is working as expected.

HOWEVER, there was a period of time when I was passing in these bytes to the indy_crypto_bsl_verify [sic] function and getting a success error code *and* a *true* for verified... Here's the trace from rust:

{{
2018/03/07 21:53:21 verify 

sig: 0xf02be0040000000010004e00000000500200000000000000208777adff7f000010e335adff7f000000000000000000000300000000000000808777adff7f0000007176adff7f000050cd34adff7f00000200000000000000f8061cadff7f0000c0b335adff7f00000000000000000200000008800700000008cd34adff7f0000 

 msg: 0x0000000000000000000000000000000000000000000000000000000000616263

2018/03/07 21:53:21 len sig: 128

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_signature_from_bytes: >>> bytes: 0x4e02d90, bytes_len: 128, signature_p: 0xc42007eec0

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_signature_from_bytes: bytes: [240, 43, 224, 4, 0, 0, 0, 0, 16, 0, 78, 0, 0, 0, 0, 80, 2, 0, 0, 0, 0, 0, 0, 0, 32, 135, 119, 173, 255, 127, 0, 0, 16, 227, 53, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 128, 135, 119, 173, 255, 127, 0, 0, 0, 113, 118, 173, 255, 127, 0, 0, 80, 205, 52, 173, 255, 127, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 248, 6, 28, 173, 255, 127, 0, 0, 192, 179, 53, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 8, 128, 7, 0, 0, 0, 8, 205, 52, 173, 255, 127, 0, 0]

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_signature_from_bytes: signature: Signature \{ point: PointG1 \{ point: ECP: [ true, FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ], FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ], FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ] ] }, bytes: [240, 43, 224, 4, 0, 0, 0, 0, 16, 0, 78, 0, 0, 0, 0, 80, 2, 0, 0, 0, 0, 0, 0, 0, 32, 135, 119, 173, 255, 127, 0, 0, 16, 227, 53, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 128, 135, 119, 173, 255, 127, 0, 0, 0, 113, 118, 173, 255, 127, 0, 0, 80, 205, 52, 173, 255, 127, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 248, 6, 28, 173, 255, 127, 0, 0, 192, 179, 53, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 8, 128, 7, 0, 0, 0, 8, 205, 52, 173, 255, 127, 0, 0] }

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_signature_from_bytes: *signature_p: 0x4e02fd0

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_signature_from_bytes: <<< res: Success

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_ver_key_from_bytes: >>> bytes: 0x4e02d90, bytes_len: 128, gen_p: 0xc42007eed0

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_ver_key_from_bytes: bytes: [16, 45, 224, 4, 0, 0, 0, 0, 16, 0, 78, 0, 0, 0, 0, 80, 2, 0, 0, 0, 0, 0, 0, 0, 32, 135, 119, 173, 255, 127, 0, 0, 16, 227, 53, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 128, 135, 119, 173, 255, 127, 0, 0, 0, 113, 118, 173, 255, 127, 0, 0, 80, 205, 52, 173, 255, 127, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 248, 6, 28, 173, 255, 127, 0, 0, 192, 179, 53, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 8, 128, 7, 0, 0, 0, 8, 205, 52, 173, 255, 127, 0, 0]

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_ver_key_from_bytes: sign_key: VerKey \{ point: PointG2 \{ point: ECP2: [ true, FP2: [ FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ], FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ] ], FP2: [ FP: [ BIG: [ 07E6F76F165764AD98AB3478094261FA156D008584AD2360D09B23526966FD16 ] ], FP: [ BIG: [ 0A0D351AC4013C6357BA2583B6A69FEB7E0A5F548B9CA64AE777E482E281CA51 ] ] ], FP2: [ FP: [ BIG: [ 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8 ] ], FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ] ] ] }, bytes: [16, 45, 224, 4, 0, 0, 0, 0, 16, 0, 78, 0, 0, 0, 0, 80, 2, 0, 0, 0, 0, 0, 0, 0, 32, 135, 119, 173, 255, 127, 0, 0, 16, 227, 53, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 128, 135, 119, 173, 255, 127, 0, 0, 0, 113, 118, 173, 255, 127, 0, 0, 80, 205, 52, 173, 255, 127, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 248, 6, 28, 173, 255, 127, 0, 0, 192, 179, 53, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 8, 128, 7, 0, 0, 0, 8, 205, 52, 173, 255, 127, 0, 0] }

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_ver_key_from_bytes: *ver_key_p: 0x4e032f0

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_ver_key_from_bytes: <<< res: Success

2018/03/07 21:53:21 verkey: 0xc42007eed0

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_generator_from_bytes: >>> bytes: 0x4e02d90, bytes_len: 128, gen_p: 0xc42007eee0

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_generator_from_bytes: bytes: [176, 192, 176, 4, 0, 0, 0, 0, 134, 3, 75, 0, 0, 0, 0, 192, 6, 0, 0, 0, 0, 0, 0, 0, 168, 79, 78, 173, 255, 127, 0, 0, 136, 136, 77, 173, 255, 127, 0, 0, 248, 13, 80, 179, 255, 127, 0, 0, 88, 66, 150, 174, 255, 127, 0, 0, 80, 249, 27, 173, 255, 127, 0, 0, 152, 203, 119, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 128, 7, 0, 0, 0, 144, 232, 115, 173, 255, 127, 0, 0, 225, 35, 176, 4, 0, 0, 0, 0, 120, 232, 115, 173, 255, 127, 0, 0, 88, 232, 115, 173, 255, 127, 0, 0, 144, 230, 54, 173, 255, 127, 0, 0]

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_generator_from_bytes: gen: Generator \{ point: PointG2 \{ point: ECP2: [ true, FP2: [ FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ], FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ] ], FP2: [ FP: [ BIG: [ 11FD10E5965EBAF383C578A68C080E9170FA7CAD449FB4841A5E8EEDE1EDFB5D ] ], FP: [ BIG: [ 0AA2B7203C4B336A8760B4AE1542A6593AA1BE5F4186FAC7F6F5A7540E207A35 ] ] ], FP2: [ FP: [ BIG: [ 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8 ] ], FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ] ] ] }, bytes: [176, 192, 176, 4, 0, 0, 0, 0, 134, 3, 75, 0, 0, 0, 0, 192, 6, 0, 0, 0, 0, 0, 0, 0, 168, 79, 78, 173, 255, 127, 0, 0, 136, 136, 77, 173, 255, 127, 0, 0, 248, 13, 80, 179, 255, 127, 0, 0, 88, 66, 150, 174, 255, 127, 0, 0, 80, 249, 27, 173, 255, 127, 0, 0, 152, 203, 119, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 128, 7, 0, 0, 0, 144, 232, 115, 173, 255, 127, 0, 0, 225, 35, 176, 4, 0, 0, 0, 0, 120, 232, 115, 173, 255, 127, 0, 0, 88, 232, 115, 173, 255, 127, 0, 0, 144, 230, 54, 173, 255, 127, 0, 0] }

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_generator_from_bytes: *gen_p: 0x4e03480

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_generator_from_bytes: <<< res: Success

2018/03/07 21:53:21 isVerified: false

TRACE:indy_crypto::ffi::bls: indy_crypto_bsl_verify: >>> signature: 0x4e02fd0, message: 0x4e01080, message_len: 32, ver_key: 0x4e032f0, gen: 0x4e03480, valid_p: 0xc42008a758

TRACE:indy_crypto::ffi::bls: indy_crypto_bsl_verify: signature: Signature \{ point: PointG1 \{ point: ECP: [ true, FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ], FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ], FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ] ] }, bytes: [240, 43, 224, 4, 0, 0, 0, 0, 16, 0, 78, 0, 0, 0, 0, 80, 2, 0, 0, 0, 0, 0, 0, 0, 32, 135, 119, 173, 255, 127, 0, 0, 16, 227, 53, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 128, 135, 119, 173, 255, 127, 0, 0, 0, 113, 118, 173, 255, 127, 0, 0, 80, 205, 52, 173, 255, 127, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 248, 6, 28, 173, 255, 127, 0, 0, 192, 179, 53, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 8, 128, 7, 0, 0, 0, 8, 205, 52, 173, 255, 127, 0, 0] }, message: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 98, 99], ver_key: VerKey \{ point: PointG2 \{ point: ECP2: [ true, FP2: [ FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ], FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ] ], FP2: [ FP: [ BIG: [ 07E6F76F165764AD98AB3478094261FA156D008584AD2360D09B23526966FD16 ] ], FP: [ BIG: [ 0A0D351AC4013C6357BA2583B6A69FEB7E0A5F548B9CA64AE777E482E281CA51 ] ] ], FP2: [ FP: [ BIG: [ 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8 ] ], FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ] ] ] }, bytes: [16, 45, 224, 4, 0, 0, 0, 0, 16, 0, 78, 0, 0, 0, 0, 80, 2, 0, 0, 0, 0, 0, 0, 0, 32, 135, 119, 173, 255, 127, 0, 0, 16, 227, 53, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 128, 135, 119, 173, 255, 127, 0, 0, 0, 113, 118, 173, 255, 127, 0, 0, 80, 205, 52, 173, 255, 127, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 248, 6, 28, 173, 255, 127, 0, 0, 192, 179, 53, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 8, 128, 7, 0, 0, 0, 8, 205, 52, 173, 255, 127, 0, 0] }, gen: Generator \{ point: PointG2 \{ point: ECP2: [ true, FP2: [ FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ], FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ] ], FP2: [ FP: [ BIG: [ 11FD10E5965EBAF383C578A68C080E9170FA7CAD449FB4841A5E8EEDE1EDFB5D ] ], FP: [ BIG: [ 0AA2B7203C4B336A8760B4AE1542A6593AA1BE5F4186FAC7F6F5A7540E207A35 ] ] ], FP2: [ FP: [ BIG: [ 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8 ] ], FP: [ BIG: [ 0000000000000000000000000000000000000000000000000000000000000000 ] ] ] ] }, bytes: [176, 192, 176, 4, 0, 0, 0, 0, 134, 3, 75, 0, 0, 0, 0, 192, 6, 0, 0, 0, 0, 0, 0, 0, 168, 79, 78, 173, 255, 127, 0, 0, 136, 136, 77, 173, 255, 127, 0, 0, 248, 13, 80, 179, 255, 127, 0, 0, 88, 66, 150, 174, 255, 127, 0, 0, 80, 249, 27, 173, 255, 127, 0, 0, 152, 203, 119, 173, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 128, 7, 0, 0, 0, 144, 232, 115, 173, 255, 127, 0, 0, 225, 35, 176, 4, 0, 0, 0, 0, 120, 232, 115, 173, 255, 127, 0, 0, 88, 232, 115, 173, 255, 127, 0, 0, 144, 230, 54, 173, 255, 127, 0, 0] }

TRACE:indy_crypto::ffi::bls: indy_crypto_bsl_verify: valid: true

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_sign: <<< res: Success

2018/03/07 21:53:21 isVerified: true

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_generator_free: >>> gen: 0x4e03480

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_generator_free: <<< res: Success

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_ver_key_free: >>> ver_key: 0x4e032f0

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_ver_key_free: <<< res: Success

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_signature_free: >>> signature: 0x4e02fd0

TRACE:indy_crypto::ffi::bls: indy_crypto_bls_signature_free: <<< res: Success

--- FAIL: TestVerKey_Verify (0.01s)

        Error Trace:    bls_test.go:79

 Error:       Should be false

 Test:        TestVerKey_Verify

FAIL

FAIL [github.com/quorumcontrol/qc3/bls|http://github.com/quorumcontrol/qc3/bls] 0.041s
}}
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz4n:",,,,,,18.05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,tobowers,,,,,,,,,,"13/Mar/18 1:40 AM;gudkov;[~tobowers] This result can be easily achieved if you used incorrect data for generator point and verkey/signkey pair. The math is valid only if you use correct (gp, verkey, signkey) tuple. At least i see that Generator Point contains garbage. . If any of (gp, verkey, signkey) values contain garbade the result is unpredictable. If multiply something by zero it will be always zero.;;;","13/Mar/18 5:09 AM;gudkov;> @gudkov @tobowers Yeah, I just looked at your trace. You're using zero for the generator element, which will give you all kinds of bad results. Since it seems like you've already fixed this, I wouldn't worry too much about it. However, note that an adversary can control the bytes for the (message, signature) pair, it cannot control the public or secret keys (or the group generator) and we can generally assume those will be correct (assuming no hardware attacks).
 
> This isn't a bug in indy-crypt, but if it's easy to stop people from using clearly flawed choices (i.e. zero or the point at infinity) as parameters in a side-channel resilient manner (or warn them when they do), it might be worth the time to do it in the long run.;;;","13/Mar/18 5:13 AM;gudkov;[~tobowers] I suggest to close this as there are no bugs in proper use. Not sure that we need to add some additional validation. indy-crypto perform basic validation of values formatting, but seems there was memory breaking case.

Please validate and if you satisfied with the answer move this ticket to Done status.;;;","13/Mar/18 7:05 PM;tobowers;Thanks. Yes, it was completely bad bytes all around. It's possible for the adversary to control the *public* key, right?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Upload prebuilt dependency binaries for Android,IS-584,28465,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,faisal00813,faisal00813,faisal00813,13/Mar/18 3:02 PM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,19/Apr/18 1:52 AM,,,1.4,,,,,0,,,,,"These prebuilt dependencies are required to build Android binary of libindy.

With this, I also propose to use a new folder structure to better organise the prebuilt dependencies. This structure was finalised when [~sergey.minaev] and I was discussing build mechanism and I think [~sergey.minaev] also agrees with this.

The new folder structure is as follows 

indy-sdk-prebuilt-deps
├── master
│   ├── android
│   │   ├── aarm64
│   │   ├── armv7
│   │   └── x86
│   ├── ios
│   ├── linux
│   ├── osx
│   └── windows
├── rc
└── stable

The existing prebuilt deps for windows should be moved in this folder.

Link for zipped folder with android deps. It does not have the windows deps.
Link: https://drive.google.com/file/d/1kpmiE64atfoNPpokHJ0IVYt2PhIXKnKr/view?usp=sharing

Link: [How to build dependencies for Android ARMv7|https://docs.google.com/document/d/1HhVc0uwUR_aY9Y_kZD6o-XeZeLTXXlW5jJ0bqVxI_PI/edit#heading=h.9x7ip1seclab]
",,,,,,,,,,,,,,,IS-585,IS-582,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-222,,,,,,,,,,"1|hzz50f:",,,,,,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,andkononykhin,faisal00813,gudkov,sergey.minaev,,,,,,,,"13/Mar/18 11:03 PM;sergey.minaev;The structure from the ticket description is significantly differs from our discussion in Slack:

{quote}
Sami [12:40 PM]
Currently this is the directory structure
android_prebuilt
- aarm64
- armv7
- - openssl
- - libzmq
- -  etc
- x86

sminaev [12:46 PM]
may be we should add one more layer:
^/android/libindy
- rc (RC versions of libindy artifact itself)
- stable (stable versions of libindy artifact itself)
- master (development/master versions of libindy artifact itself)
- deps
-- aarm64
-- armv7
-- x86
{quote};;;","13/Mar/18 11:04 PM;andkononykhin;[~faisal00813] You mean [https://repo.sovrin.org/]. Am I right?

As for me it's better to use https://repo.sovrin.org/sdk as base folder.

Please, re-verify proposed structure with [~sergey.minaev].

If you wish I can create these folders from the https://repo.sovrin.org/test as a temporary solution.;;;","13/Mar/18 11:20 PM;faisal00813;[~andkononykhin] Yes repo.sovrin.org it is.
And yes  https://repo.sovrin.org/sdk/prebuilt/ can also work as a root folder. I am appending prebuilt at the end, hope this will be fine for you.

[~sergey.minaev] Yes, I have changed the directory structure, now the platform is a level below the git branch names. I think this convention will help developers in easily understanding the dependencies to use. 

e.g on Master branch  if it is  
libsodium=master/android/armv7/libsodium/1.0.16/lib
then on rc it can be
libsodium=rc/android/armv7/libsodium/1.0.16/lib

The advantages gained are readability and easy relative paths. If this causes any implications in any unintended way, then we can rethink it.;;;","14/Mar/18 12:14 AM;faisal00813;[~gudkov] Can you have a look at this and share your opinion?;;;","14/Mar/18 12:21 AM;gudkov;We will handle it during our next sprint. You can contact Andrey K directly if you need it faster. Also i expect from you documentation how to build all these dependencies or get from public sources.;;;","14/Mar/18 2:43 PM;faisal00813;[~gudkov]
Regarding the documentation on building dependencies. I only have info on building Android dependencies which I documented [here|https://docs.google.com/document/d/1HhVc0uwUR_aY9Y_kZD6o-XeZeLTXXlW5jJ0bqVxI_PI/edit#heading=h.9x7ip1seclab]
 ;;;","14/Mar/18 6:03 PM;andkononykhin;[~faisal00813] I don't think that I can move forward and create production ready solution until you complete discussion with [~sergey.minaev] and [~gudkov]

As a workaround to unblock you right now I can create a proposed directory structure in [https://repo.sovrin.org/test/prebuilt/];;;","14/Mar/18 6:17 PM;faisal00813;[~andkononykhin] Ok, you can upload the binaries on https://repo.sovrin.org/test/prebuilt/
After taking the necessary go-ahead you can move it to production.
Thanks;;;","14/Mar/18 9:32 PM;andkononykhin;[~faisal00813] Done https://repo.sovrin.org/test/sdk-prebuilt/;;;","16/Mar/18 2:37 AM;andkononykhin;[~gudkov] [~sergey.minaev] [~faisal00813] No activity from me here until final directory structure is approved;;;","16/Mar/18 6:42 PM;faisal00813;[~gudkov] Can you give approval for the directory structure?;;;","20/Mar/18 10:12 PM;gudkov;I believe we need to change the structure. The reasons are:

1. We need the way to reproduce any old build. So we need to keep all history of pre-built deps
2. I don't see any reasons to divide dependencies by release channels especially if we keep history and master dependencies will be rc and stable dependencies soon.

I suggest the following:

indy-sdk-prebuilt-deps
 ├── andorid

         ├── 02/03/2017

         ├── 03/03/2018
         ├── ...

├── ios

├── windows

Use the date when new dependencies were introduced as version.

[~sergey.minaev] [~faisal00813]

What do you think?;;;","21/Mar/18 4:12 PM;faisal00813;[~gudkov] How about build number rather than the date. I think build number or artifact version number will be more *conventional*.

If the dependencies change for a new version of artifact we create a new folder with the new version number and add new deps to it.;;;","21/Mar/18 10:04 PM;gudkov;> I think build number or artifact version number will be more *conventional*.

We don't have any versioning systems for these dependencies. And we don't have build number.

Date here is just some natural version in fact.

[~faisal00813];;;","21/Mar/18 10:16 PM;faisal00813;I was referring to the version number of libindy
like 
├── andorid

         ├── 1.3.1

         ├── ...
         ├── ...

├── ios

├── windows

subdir 1.3.1 will hold the dependencies required for building libindy v1.3.1

Sorry if I was not clear earlier.;;;","22/Mar/18 12:53 PM;gudkov;But we don’t plan to add dependencies for each version. I expect only few folders at all. Once we need new dependency we create new folder, but it’s really rarely case. Also all builds in master branch have the same version (build number only changed). 

 

[~faisal00813] ^;;;","22/Mar/18 3:24 PM;faisal00813;I am finding it difficult to understand what the date as a directory name will help the developer understand about dependencies.

Let us look at the options
# android/02_03_2017 - this directory contains deps for all versions of lib indy published after 02/03/2017
# android/1.3.1 - this directory contains deps for all versions of libindy >1.3.1
# android/openssl0.9_libsodium_1.1 - this directory contains deps mentioned in the dir name and does not correlate with the version of libindy

I prefer option 2 but does not have any strong feelings against option 1 also.
[~gudkov] Your call.;;;","22/Mar/18 9:39 PM;gudkov;[~faisal00813]

I we discussed internally and prefer modified option 3

```

android
      ├── deps

            ├── x86

                  ├── libsodium_1.0.12.gzip

                  ├── libsodium_1.0.15.gzip

ios

windows

```;;;","22/Mar/18 9:42 PM;gudkov;[~faisal00813] I suggest you to prepare android folder content and ask Andrey. K to upload. 

Also with this directory structure we don't need to perform IS-585 urgently as it will not break current builds.;;;","04/Apr/18 12:59 AM;faisal00813;[~andkononykhin] Please find the link to zip file with a directory structure as mentioned above. https://drive.google.com/open?id=1KFISjdQi8v5l3CUfr0IGEmDV97fCWOTt;;;","05/Apr/18 2:07 AM;andkononykhin;[~faisal00813] Done. https://repo.sovrin.org/test/sdk-prebuilt-deps/;;;","18/Apr/18 10:51 PM;gudkov;[~faisal00813] Could you validate this?;;;","19/Apr/18 1:46 AM;faisal00813;I can validate the structure of the directory uploaded.;;;","19/Apr/18 1:49 AM;faisal00813;I believe the structure is as expected.;;;",,,,,,
Update Jenkins file for windows to use new deps folder,IS-585,28466,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,faisal00813,faisal00813,13/Mar/18 3:08 PM,27/Mar/18 8:45 PM,28/Oct/23 2:49 AM,27/Mar/18 8:45 PM,,,,,,,,0,,,,,"When the windows dependencies will be moved to a new folder structure as a part of IS-584, existing Jenkins build pipeline for windows target will fail.
Update the Jenkins file according to the new folder structure.",,,,,,,,,,,IS-584,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz4f:",,,,,,18.06,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,faisal00813,gudkov,,,,,,,,,,"27/Mar/18 8:43 PM;gudkov;Structure proposed in IS-584 is compatible with current approach. Sp we can postpone this.;;;","27/Mar/18 8:43 PM;gudkov;I suggest to close the ticket for now. We don't need any refactoring.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add libzmq dependency for indy-cli,IS-586,28511,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,VladimirWork,VladimirWork,14/Mar/18 7:09 PM,16/May/18 8:43 PM,28/Oct/23 2:49 AM,23/Apr/18 6:06 PM,,,1.4,,,,,0,TShirt_M,,,,"Build Info:
indy-cli 1.3.1~410

Steps to Reproduce:
1. Install libindy and indy-cli from master.
2. Run indy-cli.

Actual Results:
{noformat}
indy-cli: error while loading shared libraries: libzmq.so.5: cannot open shared object file: No such file or directory
{noformat}

Expected Results:
indy-cli should run normally.

Workaround:
{noformat}
apt-get install -y libzmq3-dev
{noformat}
or
{noformat}
apt-get install -y libzmq5
{noformat}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz507:",,,,,,18.05,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,VladimirWork,zhigunenko.dsr,,,,,,,,,"16/Apr/18 9:49 PM;gudkov;[~Artemkaaas] Can you provide correct close info and link to PRs?;;;","20/Apr/18 11:57 PM;gudkov;[~VladimirWork] Can you just check it with the latest master?;;;","23/Apr/18 6:06 PM;zhigunenko.dsr;Current master _libindy_ package depends on _libzmq5_;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
A Trustee needs to be able to restart the pool in critical situations,IS-587,28516,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,ashcherbakov,ashcherbakov,14/Mar/18 11:07 PM,15/May/18 8:06 PM,28/Oct/23 2:49 AM,08/May/18 10:50 PM,,,1.5,,,,,0,,,,,We need to support RESTART_POOL request in libindy and CLI,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1173,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz7fz:",,,,,,18.06,18.07,18.08 Wallets+,EV 18.09,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,ashcherbakov,gudkov,ozheregelya,sergey.minaev,SergeyPalamarchuk,zhigunenko.dsr,,,,,,"28/Mar/18 12:34 AM;SergeyPalamarchuk;Json format of request restart pool transaction :

{{\{ }}

{{    ""operation"":}}{{\{ }}

{{        ""type"" : 118,}}
{{        ""action"" : (May be start or cancel),}}
{{        ""schedule : (Time in json format)""}}

{{    }, }}

{{    ""identifier"": (Did of transaction submitter),}}

{{    ""reqId"": (Id number of request),}}

{{    ""protocolVersion"": 1, }}

{{    ""signature"":  (Submitter's signature)}}

{{}}} 

Json format of reply on restart pool transaction :

{{\{}}

{{    ""op"": ""REPLY""}}

{{    ""result"" : \{}}{{    }}

{{        ""operation"":}}{{\{}}

{{            ""type"" : 118, }}

{{            ""action"" : (May be start or cancel), }}

{{            ""schedule : (Time in json format)""}}

{{        },}}

{{    ""isSuccess"": true or false, }}

{{    ""msg"": (Error message),}}

{{    ""identifier"": (Did of transaction submitter),}}

{{    ""reqId"": (Id number of request),}}

{{    ""protocolVersion"": 1,}}

{{    ""signature"":  (Submitter's signature)}}

{{    }}}{{    }}

{{}}} ;;;","17/Apr/18 10:04 PM;SergeyPalamarchuk; 

Changes:
 - Add restart pool transaction for indy-sdk and wrappers for python, iOs, java and cli.

PR:

[https://github.com/hyperledger/indy-sdk/pull/609]

 

Version:
 - master#472

Risk:
 * Med

After ticket INDY-1173 has been tested and merged with master, need add ignored tests.(ticket is-648);;;","19/Apr/18 10:04 PM;gudkov;[~sergey.minaev] Can you start validation and re-assign to QA after basic validation?;;;","20/Apr/18 7:31 PM;ozheregelya;[~gudkov], [~sergey.minaev], What is the current status of pool-restart? As I can see, this command is available in 1.3.1~477 version of indy-cli. So, is it ready to testing?;;;","20/Apr/18 11:48 PM;gudkov;[~ozheregelya] I believe yes. We can start validation that it is possible to reboot nodes with CLI.;;;","25/Apr/18 10:54 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.3.1~489

*Reason for rejection:*
_CLI ledger pool-restart action=cancel_ cannot be performed without _datetime_ despite of help content (marked as optional) and work logic;;;","26/Apr/18 6:58 PM;ozheregelya;One more thing. Copy-paste mistake in description:

{code:java}
indy> ledger pool-restart help 
Command:
	ledger pool-restart - Send instructions to nodes to update themselves.
{code}
""Send instructions to nodes to *restart* themselves."" should be instead ""update"".;;;","28/Apr/18 7:48 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~20 
libindy 1.3.1~495

Actual results:
* mistype in help fixed
* ""cancel"" still required _datetime_
{code}
pool(p1):wallet(w1):did(V4S...e6f):indy> ledger pool-restart action=cancel
Transaction has been rejected: validation error [ClientPoolRestartOperation]: empty string (datetime=)
{code}

;;;","28/Apr/18 8:19 PM;sergey.minaev;It's significant to use updated version of libindy too. Also I suggest to run indy-cli with `RUST_LOG=info` to obtain more context;;;","03/May/18 3:46 AM;ozheregelya;`RUST_LOG=info` or `RUST_LOG=trace` don't give additional information:
{code:java}
pool(p1):wallet(wa):did(V4S...e6f):indy> ledger pool-restart action=start datetime=2020-01-25T12:49:05.258870+00:00
 INFO|indy::commands | src/commands/mod.rs:104 | LedgerCommand command received
 INFO|ledger_command_executor | src/commands/ledger.rs:277 | BuildPoolRestartRequest command received
 INFO|indy::commands::ledger | src/commands/ledger.rs:616 | build_pool_restart_request >>> submitter_did: ""V4SGRU86Z58d6TV7PBUe6f"", action: ""start"", datetime: Some(""2020-01-25T12:49:05.258870+00:00"")
 INFO|indy::commands::ledger | src/commands/ledger.rs:622 | build_pool_config_request <<< res: ""{\""reqId\"":1525286480016039243,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""type\"":\""118\"",\""action\"":\""start\"",\""datetime\"":\""2020-01-25T12:49:05.258870+00:00\""},\""protocolVersion\"":1}""
 INFO|indy::commands | src/commands/mod.rs:104 | LedgerCommand command received
 INFO|ledger_command_executor | src/commands/ledger.rs:194 | SignAndSubmitRequest command received
TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1
TRACE|indy::services::pool | src/services/pool/mod.rs:308 | cmd [[123, 34, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114, 34, 58, 34, 86, 52, 83, 71, 82, 85, 56, 54, 90, 53, 56, 100, 54, 84, 86, 55, 80, 66, 85, 101, 54, 102, 34, 44, 34, 111, 112, 101, 114, 97, 116, 105, 111, 110, 34, 58, 123, 34, 97, 99, 116, 105, 111, 110, 34, 58, 34, 115, 116, 97, 114, 116, 34, 44, 34, 100, 97, 116, 101, 116, 105, 109, 101, 34, 58, 34, 50, 48, 50, 48, 45, 48, 49, 45, 50, 53, 84, 49, 50, 58, 52, 57, 58, 48, 53, 46, 50, 53, 56, 56, 55, 48, 43, 48, 48, 58, 48, 48, 34, 44, 34, 116, 121, 112, 101, 34, 58, 34, 49, 49, 56, 34, 125, 44, 34, 112, 114, 111, 116, 111, 99, 111, 108, 86, 101, 114, 115, 105, 111, 110, 34, 58, 49, 44, 34, 114, 101, 113, 73, 100, 34, 58, 49, 53, 50, 53, 50, 56, 54, 52, 56, 48, 48, 49, 54, 48, 51, 57, 50, 52, 51, 44, 34, 115, 105, 103, 110, 97, 116, 117, 114, 101, 34, 58, 34, 51, 118, 105, 72, 53, 80, 114, 109, 110, 109, 89, 80, 49, 85, 107, 80, 116, 55, 116, 85, 55, 75, 119, 107, 56, 99, 55, 57, 114, 87, 49, 49, 116, 114, 56, 99, 78, 85, 51, 86, 118, 116, 85, 53, 70, 55, 78, 110, 51, 54, 68, 116, 52, 50, 80, 101, 90, 84, 122, 70, 82, 106, 57, 83, 104, 49, 76, 118, 49, 105, 52, 49, 55, 54, 50, 118, 100, 104, 57, 69, 51, 52, 105, 90, 103, 53, 117, 122, 34, 125], [7, 0, 0, 0]]
 INFO|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:185 | cmd ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""action\"":\""start\"",\""datetime\"":\""2020-01-25T12:49:05.258870+00:00\"",\""type\"":\""118\""},\""protocolVersion\"":1,\""reqId\"":1525286480016039243,\""signature\"":\""3viH5PrmnmYP1UkPt7tU7Kwk8c79rW11tr8cNU3VvtU5F7Nn36Dt42PeZTzFRj9Sh1Lv1i41762vdh9E34iZg5uz\""}""
 INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node1 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""action"":""start"",""datetime"":""2020-01-25T12:49:05.258870+00:00"",""type"":""118""},""protocolVersion"":1,""reqId"":1525286480016039243,""signature"":""3viH5PrmnmYP1UkPt7tU7Kwk8c79rW11tr8cNU3VvtU5F7Nn36Dt42PeZTzFRj9Sh1Lv1i41762vdh9E34iZg5uz""}
 INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node2 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""action"":""start"",""datetime"":""2020-01-25T12:49:05.258870+00:00"",""type"":""118""},""protocolVersion"":1,""reqId"":1525286480016039243,""signature"":""3viH5PrmnmYP1UkPt7tU7Kwk8c79rW11tr8cNU3VvtU5F7Nn36Dt42PeZTzFRj9Sh1Lv1i41762vdh9E34iZg5uz""}
 INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node4 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""action"":""start"",""datetime"":""2020-01-25T12:49:05.258870+00:00"",""type"":""118""},""protocolVersion"":1,""reqId"":1525286480016039243,""signature"":""3viH5PrmnmYP1UkPt7tU7Kwk8c79rW11tr8cNU3VvtU5F7Nn36Dt42PeZTzFRj9Sh1Lv1i41762vdh9E34iZg5uz""}
 INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node3 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""action"":""start"",""datetime"":""2020-01-25T12:49:05.258870+00:00"",""type"":""118""},""protocolVersion"":1,""reqId"":1525286480016039243,""signature"":""3viH5PrmnmYP1UkPt7tU7Kwk8c79rW11tr8cNU3VvtU5F7Nn36Dt42PeZTzFRj9Sh1Lv1i41762vdh9E34iZg5uz""}
TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:346 | get_zmq_poll_timeout first_event Tm { tm_sec: 30, tm_min: 41, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 17017325 }
TRACE|indy::services::pool | src/services/pool/mod.rs:347 | get_zmq_poll_timeout now_utc Tm { tm_sec: 20, tm_min: 41, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 17081375 }
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout diff Duration Duration { secs: 9, nanos: 999935950 }
TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff ms 9999
TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1
 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node4 {""reqId"":1525286480016039243,""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""op"":""REQACK""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:72 | TransactionHandler::process_ack: >>> ack: Response { req_id: 1525286480016039243 }, raw_msg: ""{\""reqId\"":1525286480016039243,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""op\"":\""REQACK\""}""
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:75 | TransactionHandler::process_ack: update timeout for req_id: 1525286480016039243
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80 | TransactionHandler::process_ack: <<<
TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:346 | get_zmq_poll_timeout first_event Tm { tm_sec: 0, tm_min: 43, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 23562465 }
TRACE|indy::services::pool | src/services/pool/mod.rs:347 | get_zmq_poll_timeout now_utc Tm { tm_sec: 20, tm_min: 41, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 23583124 }
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 999979341 }
TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff ms 99999
TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1
 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node3 {""op"":""REQACK"",""reqId"":1525286480016039243,""identifier"":""V4SGRU86Z58d6TV7PBUe6f""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:72 | TransactionHandler::process_ack: >>> ack: Response { req_id: 1525286480016039243 }, raw_msg: ""{\""op\"":\""REQACK\"",\""reqId\"":1525286480016039243,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\""}""
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:75 | TransactionHandler::process_ack: update timeout for req_id: 1525286480016039243
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80 | TransactionHandler::process_ack: <<<
TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:346 | get_zmq_poll_timeout first_event Tm { tm_sec: 0, tm_min: 43, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 23661644 }
TRACE|indy::services::pool | src/services/pool/mod.rs:347 | get_zmq_poll_timeout now_utc Tm { tm_sec: 20, tm_min: 41, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 23677232 }
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 999984412 }
TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff ms 99999
TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1
 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node4 {""result"":{""action"":""start"",""datetime"":""2020-01-25T12:49:05.258870+00:00"",""type"":""118"",""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""reqId"":1525286480016039243},""op"":""REPLY""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:84 | TransactionHandler::process_reply: >>> req_id: 1525286480016039243, raw_msg: ""{\""result\"":{\""action\"":\""start\"",\""datetime\"":\""2020-01-25T12:49:05.258870+00:00\"",\""type\"":\""118\"",\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""reqId\"":1525286480016039243},\""op\"":\""REPLY\""}""
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:104 | TransactionHandler::process_reply: reply_cnt: 0, f: 1
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:107 | TransactionHandler::process_reply: Try to verify proof and signature
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:255 | TransactionHandler::parse_reply_for_proof_checking: >>> json_msg: Object({""action"": String(""start""), ""datetime"": String(""2020-01-25T12:49:05.258870+00:00""), ""identifier"": String(""V4SGRU86Z58d6TV7PBUe6f""), ""reqId"": Number(1525286480016039243), ""type"": String(""118"")})
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:258 | TransactionHandler::parse_reply_for_proof_checking: xtype: ""118""
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:267 | TransactionHandler::parse_reply_for_proof_checking: <<< type not supported
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:140 | TransactionHandler::process_reply: consensus_reached false
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:157 | TransactionHandler::process_reply: <<<
TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:346 | get_zmq_poll_timeout first_event Tm { tm_sec: 0, tm_min: 43, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 23661644 }
TRACE|indy::services::pool | src/services/pool/mod.rs:347 | get_zmq_poll_timeout now_utc Tm { tm_sec: 20, tm_min: 41, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 24560674 }
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 999100970 }
TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff ms 99999
TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1
 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node3 {""op"":""REPLY"",""result"":{""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""action"":""start"",""reqId"":1525286480016039243,""type"":""118"",""datetime"":""2020-01-25T12:49:05.258870+00:00""}}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:84 | TransactionHandler::process_reply: >>> req_id: 1525286480016039243, raw_msg: ""{\""op\"":\""REPLY\"",\""result\"":{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""action\"":\""start\"",\""reqId\"":1525286480016039243,\""type\"":\""118\"",\""datetime\"":\""2020-01-25T12:49:05.258870+00:00\""}}""
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:104 | TransactionHandler::process_reply: reply_cnt: 1, f: 1
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:140 | TransactionHandler::process_reply: consensus_reached true
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:157 | TransactionHandler::process_reply: <<<
TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >>
 INFO|indy::commands | src/commands/mod.rs:104 | LedgerCommand command received
 INFO|ledger_command_executor | src/commands/ledger.rs:202 | SubmitAck command received
Restart pool request has been sent to Ledger.
Metadata:
+------------------------+---------------------+
| Identifier | Request ID |
+------------------------+---------------------+
| V4SGRU86Z58d6TV7PBUe6f | 1525286480016039243 |
+------------------------+---------------------+
Data:
+--------+----------------------------------+
| Action | Datetime |
+--------+----------------------------------+
| start | 2020-01-25T12:49:05.258870+00:00 |
+--------+----------------------------------+
pool(p1):wallet(wa):did(V4S...e6f):indy> TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1
 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node2 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""op"":""REQACK"",""reqId"":1525286480016039243}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:72 | TransactionHandler::process_ack: >>> ack: Response { req_id: 1525286480016039243 }, raw_msg: ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""op\"":\""REQACK\"",\""reqId\"":1525286480016039243}""
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80 | TransactionHandler::process_ack: <<<
TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1
 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node2 {""op"":""REPLY"",""result"":{""action"":""start"",""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""datetime"":""2020-01-25T12:49:05.258870+00:00"",""type"":""118"",""reqId"":1525286480016039243}}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:84 | TransactionHandler::process_reply: >>> req_id: 1525286480016039243, raw_msg: ""{\""op\"":\""REPLY\"",\""result\"":{\""action\"":\""start\"",\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""datetime\"":\""2020-01-25T12:49:05.258870+00:00\"",\""type\"":\""118\"",\""reqId\"":1525286480016039243}}""
 WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:87 | TransactionHandler::process_reply: <<< No pending command for request
TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1
 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node1 {""reqId"":1525286480016039243,""op"":""REQACK"",""identifier"":""V4SGRU86Z58d6TV7PBUe6f""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:72 | TransactionHandler::process_ack: >>> ack: Response { req_id: 1525286480016039243 }, raw_msg: ""{\""reqId\"":1525286480016039243,\""op\"":\""REQACK\"",\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\""}""
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80 | TransactionHandler::process_ack: <<<
TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1
 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node1 {""op"":""REPLY"",""result"":{""action"":""start"",""type"":""118"",""datetime"":""2020-01-25T12:49:05.258870+00:00"",""reqId"":1525286480016039243,""identifier"":""V4SGRU86Z58d6TV7PBUe6f""}}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:84 | TransactionHandler::process_reply: >>> req_id: 1525286480016039243, raw_msg: ""{\""op\"":\""REPLY\"",\""result\"":{\""action\"":\""start\"",\""type\"":\""118\"",\""datetime\"":\""2020-01-25T12:49:05.258870+00:00\"",\""reqId\"":1525286480016039243,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\""}}""
 WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:87 | TransactionHandler::process_reply: <<< No pending command for request
TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >>
pool(p1):wallet(wa):did(V4S...e6f):indy> 
pool(p1):wallet(wa):did(V4S...e6f):indy> 
pool(p1):wallet(wa):did(V4S...e6f):indy> 
pool(p1):wallet(wa):did(V4S...e6f):indy> 
pool(p1):wallet(wa):did(V4S...e6f):indy> ledger pool-restart action=cancel
No required ""datetime"" parameter present.{code};;;","03/May/18 9:20 PM;sergey.minaev;[~ozheregelya] please specify environment for your last logs.;;;","03/May/18 9:23 PM;sergey.minaev;[~ozheregelya] please make sure, that both libindy and CLI are RC 1.4.0 20 ;;;","03/May/18 9:51 PM;ozheregelya;[~sergey.minaev], environment:
libindy 1.3.1~495
indy-cli 1.3.1~495
indy-node 1.3.396;;;","03/May/18 11:32 PM;ozheregelya;[~sergey.minaev], 
retested on libindy and indy-cli 1.4.0~20:
{code:java}
pool(p1):wallet(wa):did(V4S...e6f):indy> INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node3 {""op"":""REPLY"",""result"":{""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""type"":""118"",""datetime"":""2020-01-25T12:49:05.258870+00:00"",""reqId"":1525357686282126174,""action"":""start""}}
 WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:87 | TransactionHandler::process_reply: <<< No pending command for request
 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node1 {""reqId"":1525357686282126174,""op"":""REQACK"",""identifier"":""V4SGRU86Z58d6TV7PBUe6f""}
 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node1 {""op"":""REPLY"",""result"":{""reqId"":1525357686282126174,""action"":""start"",""type"":""118"",""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""datetime"":""2020-01-25T12:49:05.258870+00:00""}}
 WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:87 | TransactionHandler::process_reply: <<< No=start datetime=2020-01-25T12:49:05.258870+00:00^C
pool(p1):wallet(wa):did(V4S...e6f):indy> ledger pool-restart action=cancel
 INFO|indy::commands | src/commands/mod.rs:104 | LedgerCommand command received
 INFO|ledger_command_executor | src/commands/ledger.rs:277 | BuildPoolRestartRequest command received
 INFO|indy::commands::ledger | src/commands/ledger.rs:616 | build_pool_restart_request >>> submitter_did: ""V4SGRU86Z58d6TV7PBUe6f"", action: ""cancel"", datetime: Some("""")
 INFO|indy::commands::ledger | src/commands/ledger.rs:622 | build_pool_config_request <<< res: ""{\""reqId\"":1525357708900123396,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""type\"":\""118\"",\""action\"":\""cancel\"",\""datetime\"":\""\""},\""protocolVersion\"":1}""
 INFO|indy::commands | src/commands/mod.rs:104 | LedgerCommand command received
 INFO|ledger_command_executor | src/commands/ledger.rs:194 | SignAndSubmitRequest command received
 INFO|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:185 | cmd ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""action\"":\""cancel\"",\""datetime\"":\""\"",\""type\"":\""118\""},\""protocolVersion\"":1,\""reqId\"":1525357708900123396,\""signature\"":\""utHXUQcoGXTwQcwWRoCt2Wzpt7HtvQK5mykCqyKMJfFhjtPbj884BmKgqLm9WZy51ZrFyBvojaQtVBKE3hqRwta\""}""
 INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node4 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""action"":""cancel"",""datetime"":"""",""type"":""118""},""protocolVersion"":1,""reqId"":1525357708900123396,""signature"":""utHXUQcoGXTwQcwWRoCt2Wzpt7HtvQK5mykCqyKMJfFhjtPbj884BmKgqLm9WZy51ZrFyBvojaQtVBKE3hqRwta""}
 INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node1 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""action"":""cancel"",""datetime"":"""",""type"":""118""},""protocolVersion"":1,""reqId"":1525357708900123396,""signature"":""utHXUQcoGXTwQcwWRoCt2Wzpt7HtvQK5mykCqyKMJfFhjtPbj884BmKgqLm9WZy51ZrFyBvojaQtVBKE3hqRwta""}
 INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node2 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""action"":""cancel"",""datetime"":"""",""type"":""118""},""protocolVersion"":1,""reqId"":1525357708900123396,""signature"":""utHXUQcoGXTwQcwWRoCt2Wzpt7HtvQK5mykCqyKMJfFhjtPbj884BmKgqLm9WZy51ZrFyBvojaQtVBKE3hqRwta""}
 INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node3 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""action"":""cancel"",""datetime"":"""",""type"":""118""},""protocolVersion"":1,""reqId"":1525357708900123396,""signature"":""utHXUQcoGXTwQcwWRoCt2Wzpt7HtvQK5mykCqyKMJfFhjtPbj884BmKgqLm9WZy51ZrFyBvojaQtVBKE3hqRwta""}
 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node1 {""reqId"":1525357708900123396,""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""reason"":""client request invalid: InvalidClientRequest('validation error [ClientPoolRestartOperation]: empty string (datetime=)',)"",""op"":""REQNACK""}
 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node2 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""reqId"":1525357708900123396,""op"":""REQNACK"",""reason"":""client request invalid: InvalidClientRequest('validation error [ClientPoolRestartOperation]: empty string (datetime=)',)""}
 INFO|indy::commands | src/commands/mod.rs:104 | LedgerCommand command received
 INFO|ledger_command_executor | src/commands/ledger.rs:202 | SubmitAck command received
Transaction has been rejected: validation error [ClientPoolRestartOperation]: empty string (datetime=)
pool(p1):wallet(wa):did(V4S...e6f):indy> INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node4 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""op"":""REQNACK"",""reqId"":1525357708900123396,""reason"":""client request invalid: InvalidClientRequest('validation error [ClientPoolRestartOperation]: empty string (datetime=)',)""}
 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node3 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""reqId"":1525357708900123396,""reason"":""client request invalid: InvalidClientRequest('validation error [ClientPoolRestartOperation]: empty string (datetime=)',)"",""op"":""REQNACK""}{code}
So, as I can see, it's a problem on node side.;;;","08/May/18 10:50 PM;ozheregelya;It was discussed with team, the issue will be fixed on node side and tested in scope of INDY-1173.;;;",,,,,,,,,,,,,,,
A Steward needs to be able to get validator-info from all nodes,IS-588,28518,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,ashcherbakov,ashcherbakov,14/Mar/18 11:11 PM,27/Jul/18 9:51 PM,28/Oct/23 2:49 AM,28/May/18 11:14 PM,,,1.5,,,,,0,,,,,We need to support GET_VALIDATOR_INFO request in libindy and CLI,,,,,,,,,,,INDY-1363,,,,INDY-1184,,,,,,IS-648,,,,,,,,,,,IS-734,IS-735,IS-736,IS-799,IS-843,IS-844,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc5z:",,,,,,18.06,18.07,EV 18.10 Stability and VC,18.08 Wallets+,EV 18.09,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,ashcherbakov,ckochenower,gudkov,sergey.minaev,SergeyPalamarchuk,zhigunenko.dsr,,,,,,"20/Apr/18 6:56 PM;SergeyPalamarchuk;Changes:

Added new transaction get validator info that return accumulated information from all nodes.
PR:
 * https://github.com/hyperledger/indy-sdk/pull/659

Risk factors:
 * Current implementation doesn't cover connection cases with pool by tests so it may be some problems with it. 
 * Before including ignored test need implementation get validator info for indy pool(ticket-1184).   

Risk:
 * Medium;;;","25/May/18 9:38 PM;sergey.minaev;build version : 1.4.0 531;;;","25/May/18 9:44 PM;gudkov;[~ashcherbakov] Could you organize validation?;;;","28/May/18 10:33 PM;zhigunenko.dsr;*Environment:*
indy-node 1.3.427
indy-plenum 1.2.369
libindy 1.4.0~533
indy-cli 1.4.0~533

Tested in INDY-1363 scope

These cases may mislead the maintainer:
* run _ledger get-validator_ info when one node disconnected - there is no message that info is not fetched from node
* run _ledger get-validator_ info when one node stopped - there is no message that info is not fetched from node
* run _ledger get-validator_ info when one node demoted - info from demoted node is still available;;;","07/Jul/18 7:05 AM;ckochenower;10 Validator node cluster
5 Client nodes

Client Environment (indy-cli invoked from here):
{noformat}
$ apt list --installed | grep indy

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

indy-cli/xenial,now 1.4.0~586 amd64 [installed,upgradable to: 1.5.0~614]
libindy/xenial,now 1.4.0~586 amd64 [installed,upgradable to: 1.5.0~614]
libindy-crypto/xenial,now 0.4.1~46 amd64 [installed,upgradable to: 0.4.1~47]

$ pip3 freeze | grep indy
python3-indy==1.4.0.dev586
{noformat}

Node Environment:
{noformat}
$ apt list --installed | grep indy

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

indy-anoncreds/xenial,now 1.0.32 amd64 [installed]
indy-node/xenial,now 1.4.480 amd64 [installed,upgradable to: 1.4.493]
indy-plenum/xenial,now 1.4.419 amd64 [installed,upgradable to: 1.4.435]
libindy/xenial,now 1.4.0 amd64 [installed,upgradable to: 1.5.0]
libindy-crypto/xenial,now 0.4.1 amd64 [installed]
python3-indy-crypto/xenial,xenial,now 0.4.1 amd64 [installed]

$ pip3 freeze | grep indy
indy-anoncreds==1.0.32
indy-anoncreds-dev==1.0.32
indy-crypto==0.4.1
indy-node==1.4.480
indy-node-dev==1.3
indy-plenum==1.4.419
-e git+https://github.com/hyperledger/indy-plenum.git@5ccb5e9a275275503a0806474ae293f46bcd79b7#egg=indy_plenum_dev
{noformat}

When running `ledger get-validator-info` from indy-cli on one of the client nodes, it executes in 4 to 6 seconds when all 10 validator nodes are reachable and the indy-node service is running. It takes 1 minute 44 seconds or more when one or more of the validator node's indy-node services is brought down.

Is this expected behavior? If not, I would like to log a ticket.;;;","09/Jul/18 5:15 PM;sergey.minaev;[~ckochenower] yes, it's expected behavior
Libindy waits responses from all validators to return single (aggregated) result to application. As one or more nodes are offline, the result will be returned on timeout (about 100sec, default timeout).;;;","11/Jul/18 1:35 AM;ckochenower;Thank you for the response [~sergey.minaev]. I have created an improvement request to allow the default timeout to be overridden from `indy-cli get-validator-info`.

https://jira.hyperledger.org/browse/IS-799;;;",,,,,,,,,,,,,,,,,,,,,,,
Revocation: Change abstraction for tails acсess,IS-589,28523,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,15/Mar/18 1:24 AM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,13/Apr/18 9:06 PM,,,1.4,,,,,0,,,,,"We need to perform some refactoring of Anoncreds API to correspond the latest design:
 - tails_reader abstraction should be replaced with blob_storage_reader abstraction

The main purpose is doesn't force one revocation workflow, but be able to implement new approaches without breaking API changes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzz513:",,,,,,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"16/Apr/18 9:45 PM;gudkov;- The implemented solution looks ok;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds API: Avoid persisting of CredOffer and CredRequest,IS-590,28527,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,15/Mar/18 2:37 AM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,13/Apr/18 9:06 PM,,,1.4,,,,,0,,,,,"After discussion with Deniel we decided to don't persist intermediate steps entities. They can be persisted on application level if needed and naturally maped to each other by Topic-ID of agents communication protocol.

API must be as state less as possible, except secrets and credentials.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzz51b:",,,,,,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"16/Apr/18 9:46 PM;gudkov;- The implemented solution looks ok;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds API: API simplification and entities renaming,IS-591,28528,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,15/Mar/18 2:41 AM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,13/Apr/18 9:06 PM,,,1.4,,,,,0,,,,,"Latest Anoncreds design proposal suggests some API simplification and entities renaming. Main reasons are:

1. Better understanding by developers
2. Avoid forcing CL-specific API",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzz51j:",,,,,,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"16/Apr/18 9:46 PM;gudkov;- The implemented solution looks ok;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Anoncreds API: Docs , GSG and samples update",IS-592,28529,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,15/Mar/18 3:11 AM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,13/Apr/18 9:07 PM,,,1.4,,,,,0,,,,,"We need to update according to our latest changes:
 - Getting Started Guide update
 - All anoncreds related docs and diagrams
 - Java and Python revocation samples",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzz51r:",,,,,,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"10/Apr/18 10:04 PM;Artemkaaas;Implemented in this PR: [https://github.com/hyperledger/indy-sdk/pulls.];;;","16/Apr/18 9:46 PM;gudkov;- The implemented solution looks ok for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Revocation: Medium cases integration tests,IS-593,28530,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,15/Mar/18 3:13 AM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,16/Apr/18 9:44 PM,,,1.4,,,,,0,,,,,We need to implement medium cases integration tests for Revocation functionality. Note that we need medium cases for libindy only. Wrappers should provide high-cases only.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzz527:",,,,,,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"16/Apr/18 9:47 PM;gudkov;- We got tests coverage for main revocation cases;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Revocation: Indy Node integration,IS-594,28534,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,15/Mar/18 4:03 AM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,13/Apr/18 9:07 PM,,,1.4,,,,,0,,,,,"I am expecting here:
 - Demo test for libindy and each wrapper that covers complete Anoncreds workflow with Node transactions",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz51z:",,,,,,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"16/Apr/18 9:47 PM;gudkov;- The implemented solution looks ok for me
- We got demo tests for libindy and all wrappers;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intro to New CLI ,IS-595,28601,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,SeanBohan_Sovrin,SeanBohan_Sovrin,16/Mar/18 10:17 PM,26/Jul/18 6:34 PM,28/Oct/23 2:49 AM,26/Jul/18 6:34 PM,,,,,,,,0,,,,,"Need an introduction to the New Indy CLI and a ""how-to"" for using it. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-320,,,,,,,,,,"1|hzz1mv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,SeanBohan_Sovrin,,,,,,,,,,"26/Jul/18 6:34 PM;gudkov;We have document https://github.com/hyperledger/indy-sdk/blob/master/cli/README.md that is referenced from main readme. Also it references the list of supported command from design document.

We can consider this as done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Libindy-based load test hangs after returning 307 error,IS-596,28636,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,ozheregelya,ozheregelya,19/Mar/18 12:06 AM,21/May/18 10:52 PM,28/Oct/23 2:49 AM,21/May/18 10:52 PM,,,,,,,,0,,,,,"Steps to Reproduce:
1. Run load test:
{code:java}
for s in `seq 1 2000` ; do python3 Perf_Add_nyms.py -n 500 -s 5 &>load_out.txt ; done{code}
Actual Results:
{code:java}
_indy_loop_callback: Function returned b'{""result"":{""reqId"":1521336430121822811,""txnTime"":1521336430,""signature"":""59JDxoGumAgzrBLmqcP5LJ38fQd4kA7nJ65QM4C2nRcAKNLb2pJ9JjR9oNeCe7fyuNJLZK3igvrfjJKt23Kdgc7h"",""type"":""1"",""auditPath"":[""9D3b534tAiuWnrkfKagbKdjFXnvyTUhpw7TDjooi9vbX"",""7XPRYpFhAaRpPMSsiCYXpektfaVgxfXPzpa4FSgjnk12"",""CNtm6AHLqN8YENHH7ej1uWkYyAAD8vDXs2zXJACQSRuU"",""Dz5DLFmgasKwezfbWhAh2PtSUjksh7mffMnpew8BBxkw"",""73htxaNp7Y3Hoq4beXhhxmUqjLx2pd4UqpFN8BLDKr7v"",""4fkd5QTvzssyi4gtDWPptS3j8ReaKyQ6bt5hHMUXPdDG"",""EuGtrxBLTCwUVe31t3YU8yi2HZ4WVtZNvKHMjZdjPyAo""],""dest"":""HaX2pHifFw59CH92e65EC3"",""seqNo"":37960,""rootHash"":""3vretHAe8VT8D5uioCeF2WL6VmSNL8YnwCikHPY3sQaJ"",""signatures"":null,""identifier"":""Th7MpTaRZVRYnPiabds81Y""},""op"":""REPLY""}'
_indy_loop_callback: Function returned (b'2WuCpFipjxzmzUWdseGkJu', b'puhGdn5UYcr7bYZziPGjf9JF5xdGXEXAdF1yjy6F8zf')
_indy_loop_callback: Function returned b'{""reqId"":1521336431546944698,""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""operation"":{""dest"":""2WuCpFipjxzmzUWdseGkJu"",""type"":""1""},""protocolVersion"":1}'
_indy_loop_callback: Function returned b'{""result"":{""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""type"":""1"",""txnTime"":1521336431,""rootHash"":""DCB4maWDXKwsenWiUo88BvG1UckihMy9rwzxamGPoBht"",""signatures"":null,""reqId"":1521336431546944698,""auditPath"":[""BU4TYhQvbSSQuURiCNXvZQWFy9nRWCMypoLWS9NQcWMQ"",""Dz5DLFmgasKwezfbWhAh2PtSUjksh7mffMnpew8BBxkw"",""73htxaNp7Y3Hoq4beXhhxmUqjLx2pd4UqpFN8BLDKr7v"",""4fkd5QTvzssyi4gtDWPptS3j8ReaKyQ6bt5hHMUXPdDG"",""EuGtrxBLTCwUVe31t3YU8yi2HZ4WVtZNvKHMjZdjPyAo""],""dest"":""2WuCpFipjxzmzUWdseGkJu"",""seqNo"":37961,""signature"":""WLqhzES9g4gCFuU79BrwEbVBkuhSXdYQz8UwBNqarMYPZCrgfUrUsyeKab2TnZXPkVS1S6UScjg6XHJJR7e7V3h""},""op"":""REPLY""}'
_indy_loop_callback: Function returned (b'XGffeuUAxcJsZcH6Z379m', b'HVu5tcRQD7LZEnKFxhdQaY8F1UozexrzT9CdddV27td')
_indy_loop_callback: Function returned b'{""reqId"":1521336433005465858,""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""operation"":{""dest"":""XGffeuUAxcJsZcH6Z379m"",""type"":""1""},""protocolVersion"":1}'
_indy_loop_callback: Function returned error 307
Exception in callback _indy_loop_callback(274, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62
handle: <Handle _indy_loop_callback(274, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62>
Traceback (most recent call last):
 File ""/usr/lib/python3.5/asyncio/events.py"", line 125, in _run
 self._callback(*self._args)
 File ""/usr/local/lib/python3.5/dist-packages/indy/libindy.py"", line 70, in _indy_loop_callback
 future.set_exception(IndyError(ErrorCode(err)))
 File ""/usr/lib/python3.5/enum.py"", line 241, in __call__
 return cls.__new__(cls, value)
 File ""/usr/lib/python3.5/enum.py"", line 476, in __new__
 raise ValueError(""%r is not a valid %s"" % (value, cls.__name__))
ValueError: 307 is not a valid ErrorCode{code}
Expected Results:
Load test should work.

Debug output of hanged load test with debug logs attached.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Mar/18 12:06 AM;ozheregelya;load_out.txt;https://jira.hyperledger.org/secure/attachment/14795/load_out.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz9rz:",,,,,,18.06,18.07,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,ozheregelya,,,,,,,,,,"15/May/18 8:32 PM;esplinr;[~ozheregelya] Is this still a problem with the 1.4 SDK release and the Indy Node from the Master branch?;;;","16/May/18 6:35 PM;ozheregelya;This version of load scripts works only with 1.3 version. New load scripts will be implemented soon, so I think this ticket can be closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need to remove TGB role from libindy and indy-cli,IS-597,28651,,Task,Complete,IS,Indy SDK,software,resplin,,,Low,Invalid,,VladimirWork,VladimirWork,19/Mar/18 9:24 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,We are still able to add TGB role via indy-cli (master) and libindy (master) still supports it so we need to remove this role from everywhere.,,,,,,,,,,,,,,,,,,,,,,,,,IS-504,,,,,,,INDY-1230,,,,,,"19/Mar/18 9:23 PM;VladimirWork;schema.PNG;https://jira.hyperledger.org/secure/attachment/14798/schema.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1zr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,VladimirWork,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jenkins can't resolve extrenal hostnames.,IS-598,28724,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,Artemkaaas,Artemkaaas,21/Mar/18 4:24 PM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,16/Apr/18 9:48 PM,,,1.4,,,,,0,,,,,"We often have failure Jenkins builds with the common cause: ""Jenkins can't resolve hostnames such as Maven, crates.io, pip"".

Example links to these cases:
[https://ci.evernym.com/blue/organizations/jenkins/Indy%20SDK%20CI/detail/PR-584/1/pipeline/13/]
[https://ci.evernym.com/blue/organizations/jenkins/Indy%20SDK%20CI/detail/PR-580/8/pipeline/99]
https://ci.evernym.com/blue/organizations/jenkins/Indy%20SDK%20CI/detail/PR-580/8/pipeline/250",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz52f:",,,,,,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,andkononykhin,Artemkaaas,gudkov,,,,,,,,,"23/Mar/18 12:20 AM;andkononykhin;I was able to localize the issue on one of jenkins agents and reproduced it manually running docker container on it. For now it's clear that it caused by usage of specific docker network subnet. I tested with different subnets including one suggested in IS-521 but no luck so far. I will investigate the issue deeper asap.;;;","23/Mar/18 4:35 PM;andkononykhin;After some research I found the following things:
 * all dns issues appeared on only three of jenkins agents: 12, 24 and 25
 * after some tries on these machines I got the following error *docker: Error response from daemon: grpc: the connection is unavailable.* According to [https://github.com/moby/moby/issues/31849] it's a kind of issue which for now could only be fixed by docker service restart: *systemctl restart docker*. sudo is not enough for that there (seems configured so by AWS)
 * from within docker containers on other agents I was able to get dns responses even using user-defined bridge docker network

Thus, I was wrong in my previous comment: custom subnet is not the reason of failures, but seems docker daemon from some time have been working wrong.

How to fix: need to restart agents 12, 24 and 25 to make docker daemon restarted as well.
[~dfarns] Could you restart these agents?;;;","24/Mar/18 1:56 PM;andkononykhin;[~dfarns] restarted docker services. Now it works.;;;","24/Mar/18 2:01 PM;andkononykhin;Problem reason:
 - indy sdk ci pipelines failed because of hostnames were not resolved

Changes:
 - restarted docker services on the part of jenkins agents

Risk factors:
 - Nothing is expected.

Risk:
 - Low

Recommendations for QA: do the following sequence of steps
 * review resent PR builds on Jenkins and check that there are no dns problems on any Jenkins agents;;;","16/Apr/18 9:48 PM;gudkov;- We don't see this problem now for few weeks. So can consider it as solved.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Investigate Windows & Mac Installer for Indy Wallet,IS-599,28735,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,SeanBohan_Sovrin,SeanBohan_Sovrin,21/Mar/18 11:27 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzk5r:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,SeanBohan_Sovrin,,,,,,,,,,"26/Jul/18 6:31 PM;gudkov;[~SeanBohan_Sovrin] [~resplin] Could you provide more details about this ticket? We don't provide wallet application in my vision.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Load test fails with timeout error,IS-600,28800,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Invalid,,ozheregelya,ozheregelya,23/Mar/18 11:45 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"Load test output:
{code:java}
======== Created NYM request...
_indy_loop_callback: Function returned b'{""result"":{""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""seqNo"":69157,""signature"":""uS7ex9tf1B5XKGgYX7on9YBqfMPdxvpKio2kiibpd3
GmJuqbKohbnhPqVoUaNvJZgsyChzdroCqm9uSSXqnEzmq"",""reqId"":1521799295295701355,""dest"":""5dTgz9qtfGkMJSziJgR6Xq"",""auditPath"":[""DNqmoGGTgpiBBAciPXesQMZrDc869zbHSp3dTU
9CCH96"",""84y14BEtKJVhvzxk9jcUkShSiLBCQwmLgBHDfSVzq6FF"",""HXuMghQ8oWzhPY9a1e6zeKDqDh47m4Y74S4XkDNfViu4"",""5zzz6XrU7YDqKfKcir5xcwFSn14Cb8BrSPDknTRBcpTe"",""FXgXuJuBy
wh96dcSzHBompV5W6mCafbhThpMSRGm19n5"",""79rKLpcLZWVvnLFPGobnVzUqWSjjNHAGViUwNgQSzdgT""],""txnTime"":1521799295,""rootHash"":""3aVbsYzWtiN84xYxiaW9kL5ZC14pYUk13Q2ekBC14
Rhn"",""signatures"":null,""type"":""1""},""op"":""REPLY""}'
 ======== Submitted NYM request
_indy_loop_callback: Function returned (b'APSapr2CQwpa3r8z6WE8CY', b'67jrf4UCHzAenHzyT596gh4C4cTZS92rZFHw5HrqNbmc')
 ======== DID69081: APSapr2CQwpa3r8z6WE8CY 
_indy_loop_callback: Function returned b'{""reqId"":1521799296030170739,""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""operation"":{""dest"":""APSapr2CQwpa3r8z6WE8CY"",""type""
:""1""},""protocolVersion"":1}'
 ======== Created NYM request...
_indy_loop_callback: Function returned b'{""result"":{""signatures"":null,""signature"":""25oUYjwbpNto8bb9dU8NTphd8Y5wvhmUin6AJUWAhXm9eQUtfc9bYC2Vb8vd1q1KVJEQDtYCSqjw
eA8SyxpCAqTq"",""txnTime"":1521799296,""type"":""1"",""reqId"":1521799296030170739,""seqNo"":69158,""rootHash"":""6YSHtbLR4XPqxvdbTW1ybvn353cPKGW3KrwCW8cy98J7"",""identifier"":
""Th7MpTaRZVRYnPiabds81Y"",""auditPath"":[""F7NhGpzu3cjjpvCVdp4SodsUkKBKkp1kpDgQHkJxLR4W"",""DNqmoGGTgpiBBAciPXesQMZrDc869zbHSp3dTU9CCH96"",""84y14BEtKJVhvzxk9jcUkShSiL
BCQwmLgBHDfSVzq6FF"",""HXuMghQ8oWzhPY9a1e6zeKDqDh47m4Y74S4XkDNfViu4"",""5zzz6XrU7YDqKfKcir5xcwFSn14Cb8BrSPDknTRBcpTe"",""FXgXuJuBywh96dcSzHBompV5W6mCafbhThpMSRGm19n5
"",""79rKLpcLZWVvnLFPGobnVzUqWSjjNHAGViUwNgQSzdgT""],""dest"":""APSapr2CQwpa3r8z6WE8CY""},""op"":""REPLY""}'
 ======== Submitted NYM request
_indy_loop_callback: Function returned (b'93BvgPLfWVtWHZEDLTCN3i', b'5P68jssRddPmoHMqNjfcFi6Nr5fE6vK9ZsDKvpo6ny8w')
 ======== DID69082: 93BvgPLfWVtWHZEDLTCN3i 
_indy_loop_callback: Function returned b'{""reqId"":1521799296982578065,""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""operation"":{""dest"":""93BvgPLfWVtWHZEDLTCN3i"",""type""
:""1""},""protocolVersion"":1}'
 ======== Created NYM request...
_indy_loop_callback: Function returned b'{""result"":{""signatures"":null,""dest"":""93BvgPLfWVtWHZEDLTCN3i"",""txnTime"":1521799300,""auditPath"":[""AXPu3KeHaa4cNFSL5kG7mG
Yubc6ifvRLVo16mmESKDMJ"",""DNqmoGGTgpiBBAciPXesQMZrDc869zbHSp3dTU9CCH96"",""84y14BEtKJVhvzxk9jcUkShSiLBCQwmLgBHDfSVzq6FF"",""HXuMghQ8oWzhPY9a1e6zeKDqDh47m4Y74S4XkDNf
Viu4"",""5zzz6XrU7YDqKfKcir5xcwFSn14Cb8BrSPDknTRBcpTe"",""FXgXuJuBywh96dcSzHBompV5W6mCafbhThpMSRGm19n5"",""79rKLpcLZWVvnLFPGobnVzUqWSjjNHAGViUwNgQSzdgT""],""reqId"":152
1799296982578065,""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""type"":""1"",""rootHash"":""JAL5PKmUUZ3sDKCEbKrkC1pGpPZAYaQG4xYEdQ6N1mpt"",""signature"":""3FnW8mh6y1AWDTZ861p5tv
LxeapeGbYh9SSKNmpCv8jN6kDmJg2Bm6H5QS8R481nT4czwRXKcXu4U6SXqv4gyY6s"",""seqNo"":69159},""op"":""REPLY""}'
 ======== Submitted NYM request
_indy_loop_callback: Function returned (b'5Hi3oGkLzBxMTeURecMZJF', b'3LZ9DJdtzHYx1moW6Q251BcbXruCSnXLZ8UttmF3TaGK')
 ======== DID69083: 5Hi3oGkLzBxMTeURecMZJF 
_indy_loop_callback: Function returned b'{""reqId"":1521799302157613423,""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""operation"":{""dest"":""5Hi3oGkLzBxMTeURecMZJF"",""type""
:""1""},""protocolVersion"":1}'
 ======== Created NYM request...
_indy_loop_callback: Function returned error 307
Exception in callback _indy_loop_callback(207253, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62
handle: <Handle _indy_loop_callback(207253, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62>
Traceback (most recent call last):
 File ""/usr/lib/python3.5/asyncio/events.py"", line 125, in _run
 self._callback(*self._args)
 File ""/usr/local/lib/python3.5/dist-packages/indy/libindy.py"", line 70, in _indy_loop_callback
 future.set_exception(IndyError(ErrorCode(err)))
 File ""/usr/lib/python3.5/enum.py"", line 241, in __call__
 return cls.__new__(cls, value)
 File ""/usr/lib/python3.5/enum.py"", line 476, in __new__
 raise ValueError(""%r is not a valid %s"" % (value, cls.__name__))
ValueError: 307 is not a valid ErrorCode
^CTraceback (most recent call last):
 File ""Perf_Add_nyms.py"", line 204, in <module>
 loop.run_until_complete(add_nyms(results.p, results.n, results.i, results.s))
 File ""/usr/lib/python3.5/asyncio/base_events.py"", line 375, in run_until_complete
 self.run_forever()
 File ""/usr/lib/python3.5/asyncio/base_events.py"", line 345, in run_forever
 self._run_once()
 File ""/usr/lib/python3.5/asyncio/base_events.py"", line 1276, in _run_once
 event_list = self._selector.select(timeout)
 File ""/usr/lib/python3.5/selectors.py"", line 441, in select
 fd_event_list = self._epoll.poll(timeout, max_ev)
KeyboardInterrupt{code}
Nodes logs:
https://drive.google.com/file/d/1JOMG6ezqAkDEQTXRsL5eb11pHFL7KIT0/view?usp=sharing",,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1180,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz2tj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ozheregelya,,,,,,,,,,,"23/Mar/18 11:46 PM;ozheregelya;The issue was created in wrong project by mistake.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Ability to control pool response timeout and number of attempts to resend request in case of fails,IS-601,28911,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,ozheregelya,dsurnin,dsurnin,27/Mar/18 5:47 PM,01/Aug/18 9:44 PM,28/Oct/23 2:49 AM,01/Aug/18 8:26 PM,,,1.6.0,,,,,0,,,,,"It would be helpful to control (read and write) timeout value for pool response and number of attempts to resend request in case of fail.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-820,IS-834,IS-603,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzzjlb:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,dsurnin,ozheregelya,sergey.minaev,,,,,,,,,"23/Jul/18 8:29 PM;sergey.minaev;PR with update
https://github.com/hyperledger/indy-sdk/pull/972;;;","23/Jul/18 8:30 PM;sergey.minaev;Build version 1.5.0 master 637;;;","23/Jul/18 8:31 PM;sergey.minaev;Changes:
new fields are added to config for pool open connection:
- timeout
- extended_timeout
- conn_limit
- conn_active_timeout;;;","25/Jul/18 7:02 PM;sergey.minaev;Recommendation for QA:
I suggest to check whole complex of new config parameters, see IS-834;;;","01/Aug/18 8:26 PM;ozheregelya;Will be tested in scope of IS-834.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Ledger API: Filtering of old state proofs,IS-602,28923,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,gudkov,gudkov,27/Mar/18 9:21 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"For now if we send 2 transactions immediately:

1. NYM did
2. GET NYM did

The 2 can return ""Not found"". The reason is that we can accept state proof from node with outdated state. This behavior is expected RBFT feature, but we can implement efficient workaround:

- Result of NYM returns timestamp
- We can remember this timestamp in opened pool context and filter all responses with outdated timestamp

To be reliable solution we need to implement https://jira.hyperledger.org/browse/INDY-1200 first",,,,,,,,,,,INDY-1200,,,,,,,,,,,,,,IS-954,,IS-581,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-57,,,,,,,,,,"1|hzwwc7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"10/Dec/18 9:13 PM;sergey.minaev;Close this ticket in favor of IS-954;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Ability to choose which node to sent request to in case of BLS enabled,IS-603,28924,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ozheregelya,dsurnin,dsurnin,27/Mar/18 9:29 PM,01/Aug/18 9:44 PM,28/Oct/23 2:49 AM,01/Aug/18 8:26 PM,,,,,,,,0,,,,,It should be possible to choose which node to use during submit req via api,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-601,,,,,IS-834,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzzjlj:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,dsurnin,gudkov,ozheregelya,sergey.minaev,,,,,,,"27/Mar/18 9:34 PM;gudkov;[~dsurnin]

Could you describe use case for this in more details?;;;","24/Jul/18 11:58 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/978;;;","25/Jul/18 2:09 PM;Artemkaaas;Changes: The format of `config` parameter in `indy_open_pool_ledger` was updated API function to specify names of nodes which will have a priority during request sending.

Build version: master-646;;;","25/Jul/18 7:02 PM;sergey.minaev;Recommendation for QA:
I suggest to check whole complex of new config parameters, see IS-834;;;","01/Aug/18 8:26 PM;ozheregelya;Will be tested in scope of IS-834.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Anoncreds API: Support versioning of Anoncreds entities/transactions,IS-604,28926,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,27/Mar/18 9:36 PM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,13/Apr/18 9:05 PM,,,1.4,,,,,0,,,,,"We need to support Anoncreds transactions and protocol entities versioning for smooth integration with Indy Node without breaking changes:

- Node supports old versions of SCHEMA and CRED_DEF transactions only and we don't plan to perform breaking changes for few month
- But new Anoncreds API uses new versions of SCHEMA and CRED_DEF transactions

We suggest the following:

- all anoncreds calls should support old and new version of Anoncreds transactions. There will be internal calls \{entity}_to_sdk_version() that will be used to update version of Anoncreds entity to the current sdk version.
- Transaction builders should also accept any version of anoncreds entity and convert it to version supported by ledger by calling \{entity}_to_ledger_version()",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz50n:",,,,,,18.06,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"05/Apr/18 9:02 PM;Artemkaaas;Anoncreds public entities such as Schema, CredentialDefinition, RevocationRegistry were represented as enums of possible versions (currently it consists of one).
This changes implemented in this PR: [https://github.com/hyperledger/indy-sdk/pull/550];;;","16/Apr/18 9:45 PM;gudkov;- The implemented solution looks ok
- It doesn't solves all versioning problems, but provides infrastructure to solve it later in a correct way.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Investigate DID Design for SDK,IS-605,28928,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,SeanBohan_Sovrin,SeanBohan_Sovrin,27/Mar/18 10:35 PM,10/Oct/19 9:05 PM,28/Oct/23 2:49 AM,15/Feb/19 6:48 PM,,,,,,,,0,,,,,"The SDK needs to support the standard for DID Doc.

*Acceptance Criteria*
* Investigate the DID Doc standard.
* Create a Plan of Attack (POA) for bringing our implementation inline with the standard.
* Create the relevant issues.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1247,IS-1119,IS-451,INDY-1028,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1403,,,,,,,,,,"1|hzwrhj:910g",,,,,,Ev 19.03,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,SeanBohan_Sovrin,sergey.minaev,,,,,,,,,,"15/Feb/19 6:47 PM;sergey.minaev;Initial design has been created for internal team discussions.
We are going to continue our work in scope of IS-1119 and publish the POA and/or HIPE for community discussion.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a description at the top of the indy-sdk repository on github,IS-606,28933,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,esplinr,mdb,mdb,27/Mar/18 11:02 PM,31/Jul/18 4:28 AM,28/Oct/23 2:49 AM,31/Jul/18 2:00 AM,,,,,,,,0,,,,,"There is no description for the indy-sdk repository at the top of the page. Perhaps just repeating the first line of the readme would be useful for people who have just landed on the page. Something like ""This is the official SDK for [Hyperledger Indy|https://www.hyperledger.org/projects], which provides a distributed-ledger-based foundation for [self-sovereign identity|https://sovrin.org/]. """,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjmn:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,esplinr,gudkov,mdb,,,,,,,,,"26/Jul/18 8:49 PM;gudkov;[~esplinr] Could you handle this?;;;","27/Jul/18 2:18 AM;esplinr;We should also do Hyperledger/indy-node while we are at it.

Here are my recommended descriptions:
* indy-node: The server portion of a distributed ledger purpose-built for decentralized identity. 
* indy-sdk: Everything needed to build applications that interact with an Indy distributed identity ledger.;;;","28/Jul/18 12:02 AM;gudkov;[~esplinr] We updated descriptions. Could you validate this?;;;","31/Jul/18 2:00 AM;esplinr;This looks good. Thank you.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
cargo build command fails on libzmq dependancy,IS-607,28959,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,mdb,mdb,29/Mar/18 2:13 AM,26/Jul/18 6:28 PM,28/Oct/23 2:49 AM,26/Jul/18 6:28 PM,,,,,,,,0,LibIndy,,,,"Repro steps: clone a fresh repository of indy-sdk on new ubuntu VM. run _cargo build_ in the libindy directory.

 

stack trace:

error: failed to run custom build command for `{{zmq-sys v0.8.2}}`
process didn't exit successfully: `{{/home/bcsadmin/indy-sdk/libindy/target/debug/build/zmq-sys-5993ac7ad3aa9f46/build-script-build}}` (exit code: 101)
--- stderr
thread 'main' panicked at 'Unable to locate libzmq:
`{{""pkg-config"" ""--libs"" ""--cflags"" ""libzmq >= 3.2""}}` did not exit successfully: exit code: 1
--- stderr
Package libzmq was not found in the pkg-config search path.
Perhaps you should add the directory containing `libzmq.pc'
to the PKG_CONFIG_PATH environment variable
No package 'libzmq' found
', /root/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-sys-0.8.2/[build.rs:31|http://build.rs:31/]:16
note: Run with `{{RUST_BACKTRACE=1}}` for a backtrace.

warning: build failed, waiting for other jobs to finish...
error: build failed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz3i7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,mdb,SteveGoob,,,,,,,,,"29/Apr/18 7:09 AM;SteveGoob;This issue was fixed for me after installing the libzmq3-dev package on ubuntu. From what I understand, it is in the works to eventually remove this dependency, but we jumped the gun in removing it as a prerequisite for the lib. We should include officially it until we are ready to remove it.;;;","26/Jul/18 6:27 PM;gudkov;Build documentation clearly says that  libzmq3-dev must be installed. We can consider this as done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Merge IS-417 in RC/Stable,IS-608,29019,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,SeanBohan_Sovrin,faisal00813,faisal00813,30/Mar/18 7:03 PM,26/Jul/18 6:24 PM,28/Oct/23 2:49 AM,26/Jul/18 6:24 PM,,,,,,,,0,,,,,"IS-417 deals with removing zmq-pw as dependency and is necessary for building libindy for android.

For TDE we are building Android support in LibVCX which is dependant on RC of Libindy with IS-417.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz3r3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,faisal00813,gudkov,,,,,,,,,,"30/Mar/18 7:03 PM;faisal00813;[~avkrishnan] ^;;;","26/Jul/18 6:24 PM;gudkov;It is done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancement,IS-609,29122,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,04/Apr/18 5:37 PM,08/Oct/19 11:06 PM,28/Oct/23 2:49 AM,27/Aug/18 11:19 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-7,,Wallet Enhancement,Done,,,,,,,,"1|hzz4gv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Design,IS-610,29123,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,04/Apr/18 5:39 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,24/Apr/18 5:33 PM,,,1.5,,,,,0,,,,,"We need to finalize design for our Wallet Enhancement plans:
* Better encryption on libindy level
* Replacing of plugged wallet concept with plugged storage concept
* Efficient and flexible search with tags
* Ability to store 3d-party non-secrets in the wallet

We already have some design vision, but still need:

* Design wallet barrier, how to split secrets and 3d-party non-secrets
* Finalize storage interface
* Finalize internal wallet service interface
* Updates to existing Wallet endpoints
* register_wallet_storage endpoint",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzz4w7:",,,,,,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"06/Apr/18 9:04 PM;gudkov;Design was provided in PR: https://github.com/hyperledger/indy-sdk/pull/564;;;","06/Apr/18 9:05 PM;gudkov;[~dkulic] Could you review the design?;;;","24/Apr/18 5:33 PM;gudkov;- Design  was merged to master
- Darko approved this design;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Integration of WalletService to libindy codebase,IS-611,29125,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,04/Apr/18 6:09 PM,25/May/18 7:48 PM,28/Oct/23 2:49 AM,25/May/18 7:48 PM,,,1.5,,,,,0,,,,,"We have WalletService and WalletStorage interfaces in private codenase and need to integrate it to libindy development process. 

For the beginning to long-living feature branch.

It can require some refactoring and fixes to WalletService/WalletStorage interfaces",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzwsqv:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"25/May/18 12:21 AM;sergey.minaev;The main issue was lifetime problem of opened cursors. Here is a PR this fix
https://github.com/hyperledger/indy-sdk/pull/779;;;","25/May/18 7:47 PM;gudkov;We have clean build on all platforms in branch https://github.com/hyperledger/indy-sdk/tree/feature/wallet_storage_integration

We can consider it as done. Merge will be performed after https://jira.hyperledger.org/browse/IS-716 will be done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Integration of Darko's team changes,IS-612,29126,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,04/Apr/18 6:12 PM,25/May/18 7:48 PM,28/Oct/23 2:49 AM,25/May/18 7:47 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzwsr3:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"24/May/18 11:40 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/792;;;","25/May/18 7:48 PM;gudkov;We have clean build on all platforms in branch https://github.com/hyperledger/indy-sdk/tree/feature/wallet_storage_integration

We can consider it as done. Merge will be performed after https://jira.hyperledger.org/browse/IS-716 will be done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Integration of wallet encryption code  to libindy codebase,IS-613,29127,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,Artemkaaas,gudkov,gudkov,04/Apr/18 6:15 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzzc8v:",,,,,,EV 18.10 Stability and VC,EV 18.09,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,0.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Wallet API refactoring,IS-614,29128,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,04/Apr/18 6:38 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,24/Apr/18 4:27 PM,,,1.5,,,,,0,,,,,"Wallet API requires to be adopted to new wallet concept:
* create_wallet/open_wallet will get updated params
* register_wallet_type will be replaced with register_storage_type call",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzz4wn:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"24/Apr/18 12:33 AM;Artemkaaas;Implemented if PR: https://github.com/hyperledger/indy-sdk/pull/660;;;","24/Apr/18 4:26 PM;gudkov;- PR merged to https://github.com/hyperledger/indy-sdk/tree/feature/wallet_storage_integration
- Code looks ok
- It should help Darko's team in integration;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Integration of WalletService changes to DID commands,IS-615,29129,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,04/Apr/18 6:42 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,24/Apr/18 4:27 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzz4xr:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"24/Apr/18 4:21 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/660;;;","24/Apr/18 4:27 PM;gudkov;- PR merged to https://github.com/hyperledger/indy-sdk/tree/feature/wallet_storage_integration
- Code looks ok
- It should help Darko's team in integration;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Integration of WalletService changes to Crypto commands,IS-616,29130,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,04/Apr/18 6:42 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,24/Apr/18 4:27 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzz4xj:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"24/Apr/18 4:21 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/660;;;","24/Apr/18 4:27 PM;gudkov;- PR merged to https://github.com/hyperledger/indy-sdk/tree/feature/wallet_storage_integration
- Code looks ok
- It should help Darko's team in integration;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Integration of WalletService changes to Ledger commands,IS-617,29131,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,04/Apr/18 6:43 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,24/Apr/18 4:28 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzz4xz:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"24/Apr/18 4:23 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/660;;;","24/Apr/18 4:28 PM;gudkov;- PR merged to https://github.com/hyperledger/indy-sdk/tree/feature/wallet_storage_integration
- Code looks ok
- It should help Darko's team in integration;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Integration of WalletService changes to Pairwise commands,IS-618,29132,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,04/Apr/18 6:43 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,24/Apr/18 4:28 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzz4y7:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"24/Apr/18 4:23 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/660;;;","24/Apr/18 4:28 PM;gudkov;- PR merged to https://github.com/hyperledger/indy-sdk/tree/feature/wallet_storage_integration
- Code looks ok
- It should help Darko's team in integration;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Integration of WalletService changes to Pool commands,IS-619,29133,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,04/Apr/18 6:43 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,24/Apr/18 4:28 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzz4yf:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"24/Apr/18 4:23 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/660;;;","24/Apr/18 4:28 PM;gudkov;- PR merged to https://github.com/hyperledger/indy-sdk/tree/feature/wallet_storage_integration
- Code looks ok
- It should help Darko's team in integration;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Integration of WalletService changes to Wallet commands,IS-620,29134,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,04/Apr/18 6:44 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,24/Apr/18 4:27 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzz4wv:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"24/Apr/18 12:33 AM;Artemkaaas;Implemented if PR: https://github.com/hyperledger/indy-sdk/pull/660;;;","24/Apr/18 4:27 PM;gudkov;- PR merged to https://github.com/hyperledger/indy-sdk/tree/feature/wallet_storage_integration
- Code looks ok
- It should help Darko's team in integration;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Integration of WalletService changes to Anoncreds commands,IS-621,29135,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,Artemkaaas,gudkov,gudkov,04/Apr/18 6:45 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzzc93:",,,,,,EV 18.10 Stability and VC,EV 18.09,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,0.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"28/Apr/18 10:57 PM;gudkov;For current moment this ticket looks redundant. I close this in favor of IS-612;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Fix regressions in integration tests,IS-622,29136,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,gudkov,gudkov,04/Apr/18 6:51 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzzc9r:",,,,,,EV 18.10 Stability and VC,EV 18.09,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,0.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"28/Apr/18 11:00 PM;gudkov;For current moment this ticket looks redundant. I close this in favor of IS-624;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Integration tests for new Wallet API,IS-623,29137,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,gudkov,gudkov,04/Apr/18 6:54 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzzc9j:",,,,,,EV 18.10 Stability and VC,EV 18.09,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,0.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"28/Apr/18 10:59 PM;gudkov;For current moment this ticket looks redundant. I close this in favor of IS-624;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Review test procedure after integration,IS-624,29138,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,04/Apr/18 6:54 PM,25/May/18 7:48 PM,28/Oct/23 2:49 AM,25/May/18 7:48 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzwsrb:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"24/May/18 11:40 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/792;;;","25/May/18 7:48 PM;gudkov;We have clean build on all platforms in branch https://github.com/hyperledger/indy-sdk/tree/feature/wallet_storage_integration

We can consider it as done. Merge will be performed after https://jira.hyperledger.org/browse/IS-716 will be done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Uncomment indy_issuer_create_schema API call,IS-625,29182,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,Artemkaaas,Artemkaaas,05/Apr/18 10:23 PM,26/Jul/18 6:29 PM,28/Oct/23 2:49 AM,26/Jul/18 6:29 PM,,,,,,,,0,,,,,"Libindy has API call to create Credential Schema according to the new design: [https://github.com/hyperledger/indy-node/blob/master/design/anoncreds.md.]

But this function is commented because new approach is not implemented in Indy-Node yet. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz4pz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,,,,,,,,,,,"26/Jul/18 6:28 PM;Artemkaaas;Done in the scope of IS-594;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool refresh hanging,IS-626,29199,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,anikitinDSR,dsurnin,dsurnin,06/Apr/18 1:22 AM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,16/Apr/18 10:06 PM,,,1.4,,,,,0,,,,,"Sometimes poll_refresh call is hanging during the tests.
test is simple:
 1 - create pool
 2 - send node upgrade txn with node port changed
 3 - call pool refresh

According to rust logs

```
{""op"":""CATCHUP_REQ"",""ledgerId"":0,""seqNoStart"":8,""seqNoEnd"":5,""catchupTill"":5}
message_processor.py        29 WARNING  Beta discarding message CATCHUP_REQ{'seqNoStart': 8, 'catchupTill': 5, 'ledgerId': 0, 'seqNoEnd': 5} because Invalid range
message_processor.py        29 WARNING  Gamma discarding message CATCHUP_REQ{'seqNoStart': 6, 'catchupTill': 5, 'ledgerId': 0, 'seqNoEnd': 5} because Invalid range
message_processor.py        29 WARNING  Delta discarding message CATCHUP_REQ{'seqNoStart': 7, 'catchupTill': 5, 'ledgerId': 0, 'seqNoEnd': 5} because Invalid range
WARN|indy::services::pool::catchup |       src/services/pool/catchup.rs:307 | Fail to continue catch-up response(s) not received from nodes with idx {1, 0, 3, 2}. Node will be blacklisted and catchup will be restarted
thread '<unnamed>' panicked at 'attempt to divide by zero', src/services/pool/catchup.rs:180:23
note: Run with `RUST_BACKTRACE=1` for a backtrace.
```

After some debug with Artem we found that sdk blacklisted all the nodes and it caused division by zero. Artem tried to fix it and send PR https://github.com/hyperledger/indy-sdk/pull/628
But it looks like the actual reason is nodes do not send CATCHUP_REP to sdk.

In nodes's logs we have

```
2018-04-05 18:35:18,597 | DEBUG    | node.py              (1714) | processClientInBox | BetaC processing b'l/Uy>7Vln6nE]w&&^T!}S{WJR9y%!pN3#:uSa)$%' request CATCHUP_REQ{'seqNoStart': 8, 'catchupTill': 5, 'ledgerId': 0, 'seqNoEnd': 5}
2018-04-05 18:35:18,597 | DEBUG    | ledger_manager.py    ( 430) | processCatchupReq | Beta received catchup request: CATCHUP_REQ{'seqNoStart': 8, 'catchupTill': 5, 'ledgerId': 0, 'seqNoEnd': 5} from b'l/Uy>7Vln6nE]w&&^T!}S{WJR9y%!pN3#:uSa)$%'
2018-04-05 18:35:18,597 | WARNING  | message_processor.py (  29) | discard | Beta discarding message CATCHUP_REQ{'seqNoStart': 8, 'catchupTill': 5, 'ledgerId': 0, 'seqNoEnd': 5} because Invalid range
```

And it corresponds to rust logs.
So some strange request were generated.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz52n:",,,,,,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dsurnin,gudkov,sergey.khoroshavin,,,,,,,,,"06/Apr/18 8:56 PM;gudkov;Cause:

- Incorrect logic in catch up for some cases
- In case of PoolTerminate error application should try again

Fixes:
- Corrected catch up logic

PR: https://github.com/hyperledger/indy-sdk/pull/630
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Payments Interface,IS-627,29209,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,eramitg,gudkov,gudkov,06/Apr/18 9:07 PM,08/Oct/19 11:05 PM,28/Oct/23 2:49 AM,20/Sep/19 11:49 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-9,,Payments Interface,Done,,,,,,,,"1|hzy40v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,eramitg,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: Design Tokens Interface,IS-628,29210,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,06/Apr/18 9:08 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,24/Apr/18 5:21 PM,,,1.5,,,,,0,,,,,"Design Tokens Interface:

* Payment API
* Payment Handler API finalization
* Handlers Infrastructure design",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz4wf:",,,,,,18.07,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"16/Apr/18 9:39 PM;gudkov;[~steptan] [~kdenhartog] [~danielhardman] 

Design PR about Payment API and Payment Method API it libindy: https://github.com/hyperledger/indy-sdk/pull/640

Let's discuss;;;","18/Apr/18 10:50 PM;gudkov;PR was updated with our latest vision. https://github.com/hyperledger/indy-sdk/pull/640

[~steptan]  Can you verify this or assign someone to verify from your team?;;;","24/Apr/18 5:20 PM;gudkov;- PR was merged to master
- Also we got positive feedback from Tokens team;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: Handlers infrastructure,IS-629,29211,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,06/Apr/18 9:10 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,24/Apr/18 4:38 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz4x3:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"23/Apr/18 9:39 PM;gudkov;[~sergey.minaev] Could you point to the code implemented?;;;","24/Apr/18 4:38 PM;gudkov;- Code was merged to https://github.com/hyperledger/indy-sdk/tree/feature/payments
- It provides necessary infrastructure to start payments development for Voronezh and Utah teams.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: 3d party non-secrets wallet interface,IS-630,29212,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,06/Apr/18 9:11 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,25/Apr/18 9:31 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz53b:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"25/Apr/18 8:58 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/677;;;","25/Apr/18 9:31 PM;gudkov;PR merged to wallet_storage_integration branch. The solution looks ok for me and corresponds the design.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: Payment address calls,IS-631,29213,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,06/Apr/18 9:12 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,25/Apr/18 9:30 PM,,,1.5,,,,,0,,,,,"Implement calls:
* create_payment_address
* list_payment_addresses",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz4vr:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,KitHat,,,,,,,,,,"25/Apr/18 8:58 PM;KitHat;PR: [https://github.com/hyperledger/indy-sdk/pull/680#event-1593837618]
PR merged;;;","25/Apr/18 9:30 PM;gudkov;The solution looks ok for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: Add request fees call,IS-632,29214,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,06/Apr/18 9:14 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,25/Apr/18 9:31 PM,,,1.5,,,,,0,,,,,"Implement methods:

* add_request_fees
* parse_response_with_fees",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz52v:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,KitHat,,,,,,,,,,"25/Apr/18 9:04 PM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/680
PR merged;;;","25/Apr/18 9:30 PM;gudkov;The solution looks ok for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Token Interface: Tokens-related transactions builders,IS-633,29215,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,06/Apr/18 9:18 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,25/Apr/18 9:31 PM,,,1.5,,,,,0,,,,,"Implement calls:
* build_payment_txn
* build_fees_txn
* build_get_fees_txn
* build_get_utxo_txn
* build_mint_txn",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz533:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,KitHat,,,,,,,,,,"25/Apr/18 9:04 PM;KitHat;PR: [https://github.com/hyperledger/indy-sdk/pull/680]
PR merged;;;","25/Apr/18 9:31 PM;gudkov;The solution looks ok for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: Register tokens handler call,IS-634,29216,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,06/Apr/18 9:20 PM,15/May/18 8:09 PM,28/Oct/23 2:49 AM,24/Apr/18 4:38 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz4xb:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"23/Apr/18 9:39 PM;gudkov;[~sergey.minaev] Could you point to the code implemented?;;;","24/Apr/18 4:38 PM;gudkov;- Code was merged to https://github.com/hyperledger/indy-sdk/tree/feature/payments
- It provides necessary infrastructure to start payments development for Voronezh and Utah teams.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: Null payment handler for tests,IS-635,29217,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,gudkov,gudkov,06/Apr/18 9:22 PM,15/May/18 8:06 PM,28/Oct/23 2:49 AM,08/May/18 8:51 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz7fr:",,,,,,18.08 Wallets+,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,KitHat,,,,,,,,,,"26/Apr/18 8:42 PM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/711;;;","08/May/18 8:51 PM;gudkov;Looks ok for the beginning;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: 3d party non-secrets wallet interface integration tests,IS-636,29218,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,06/Apr/18 9:25 PM,15/May/18 8:06 PM,28/Oct/23 2:49 AM,07/May/18 9:25 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz7fb:",,,,,,18.08 Wallets+,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"27/Apr/18 12:39 AM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/688;;;","07/May/18 9:26 PM;gudkov;The solution looks ok for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: Payment address calls integration tests,IS-637,29220,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,gudkov,gudkov,06/Apr/18 9:26 PM,15/May/18 8:06 PM,28/Oct/23 2:49 AM,10/May/18 7:58 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz7dz:",,,,,,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,KitHat,,,,,,,,,,"08/May/18 7:24 PM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/730;;;","10/May/18 7:58 PM;gudkov;Solution look ok for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: Register tokens handler call integration tests,IS-638,29221,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,gudkov,gudkov,06/Apr/18 9:27 PM,15/May/18 8:06 PM,28/Oct/23 2:49 AM,10/May/18 7:58 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz7dr:",,,,,,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,KitHat,,,,,,,,,,"08/May/18 7:25 PM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/730;;;","10/May/18 7:58 PM;gudkov;Solution look ok for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: Add request fees call integration tests,IS-639,29225,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,gudkov,gudkov,06/Apr/18 9:46 PM,15/May/18 8:06 PM,28/Oct/23 2:49 AM,10/May/18 7:58 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz7e7:",,,,,,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,KitHat,,,,,,,,,,"08/May/18 7:25 PM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/730;;;","10/May/18 7:58 PM;gudkov;Solution look ok for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Token Interface: Tokens-related transactions builders integration tests,IS-640,29226,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,06/Apr/18 9:48 PM,15/May/18 8:06 PM,28/Oct/23 2:49 AM,10/May/18 7:58 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz7ef:",,,,,,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"08/May/18 7:49 PM;Artemkaaas;Implemented in PR: [https://github.com/hyperledger/indy-sdk/pull/730];;;","10/May/18 7:58 PM;gudkov;Solution look ok for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhancements and fixes for libindy wrappers,IS-641,29319,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,VladimirWork,VladimirWork,VladimirWork,11/Apr/18 7:19 PM,11/Aug/18 4:26 PM,28/Oct/23 2:49 AM,11/Aug/18 4:26 PM,,,,,,,,0,,,,,"1. Change ""their_vk"" and ""my_vk"" to ""sender_vk"" and ""recipient_vk"" in libindy wrappers because it leads to human errors.
2. Change encryption methods signatures' return values to *tuple* instead of *bytes* in python wrapper.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Aug/18 4:25 PM;VladimirWork;IS-641.PNG;https://jira.hyperledger.org/secure/attachment/15525/IS-641.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjgv:",,,,,,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,esplinr,sergey.minaev,VladimirWork,,,,,,,,"26/Apr/18 10:06 PM;esplinr;[~VladimirWork] Can you give more information about why this would be helpful for the users of the library? Can it be done in a backwards compatible way?;;;","07/May/18 6:34 PM;VladimirWork;[~esplinr] ""their_vk"" and ""my_vk"" are *relative* names so in single test case ""my_vk"" can be used as sender verkey in one place as well as recipient verkey in another place (and I saw several errors in post-install automation tests like ""we put _my_vk_ variable into function because it requires sender verkey and we used _my_vk_ as sender verkey previously but *in this step* _my_vk_ is *recipient* verkey because now I *receive* message in this step) so I think it will be reasonable to use *absolute* naming (""sender_vk"" and ""recipient_vk"") in functions' signatures. Also we have the wrong returned type in signatures now (item 2).

> Can it be done in a backwards compatible way?
All this changes should be done in variables names and types that functions take and return only so I think all this changes will be backward compatible because they will cause *no functional changes* in indy-sdk.;;;","01/Aug/18 4:40 PM;sergey.minaev;[~VladimirWork] please re-check. Most probably it already done.;;;","01/Aug/18 11:08 PM;VladimirWork;[~sergey.minaev] 1st item is ok but in 2nd item we still have ""bytes"" in API documentation, but actually return ""tuple"" of integers.;;;","08/Aug/18 9:26 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1051;;;","09/Aug/18 11:44 PM;Artemkaaas;Build version: master-701;;;","11/Aug/18 4:25 PM;VladimirWork;Build Info:
libindy 1.6.1~701
python3-indy 1.6.1.dev701

Actual Results:
 !IS-641.PNG|thumbnail! ;;;",,,,,,,,,,,,,,,,,,,,,,,
Add contributor onboarding steps for those who want to contribute from the community,IS-642,29327,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,mdb,mdb,12/Apr/18 2:15 AM,02/Aug/18 3:14 PM,28/Oct/23 2:49 AM,01/Aug/18 9:30 PM,,,,,,,,0,,,,,"I've recently onboarded myself onto the hyperledger indy-sdk, and I've documented all the challenging steps (setting up gpg commits, building libindy, pointing people to the right getting-started guide). I'll submit a readme document for contributors to be onboarded without as much headache.",,,,,,,,,,,,,,,IS-739,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjlz:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,gudkov,mdb,ozheregelya,zhigunenko.dsr,,,,,,,,"26/Jul/18 8:49 PM;gudkov;Contribution guide was merged, but we need the link and corresponded section in the main README.md;;;","28/Jul/18 1:11 AM;gudkov;* Added How To Contribute section of README.md
* Added MAINTAINERS.md
* Removed contributor-resources.md as the same info is present in MAINTAINERS.md

https://github.com/hyperledger/indy-sdk/pull/997;;;","28/Jul/18 1:11 AM;gudkov;[~esplinr] You may want to update maintainers list. Could you review it?;;;","02/Aug/18 3:14 PM;zhigunenko.dsr;*Reason to Done:*
There is no typos or broken links;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Revocation: handle State Proofs for Revocation transactions,IS-643,29348,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,sergey.minaev,sergey.minaev,12/Apr/18 10:31 PM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,25/Apr/18 9:53 PM,,,1.4,,,,,0,,,,,"There are new transaction types for Revocation and state proof logic in SDK should be updated to handle its.
For special case with multiply stateproof in one response please see dedicated ticket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-466,,,,,,,,,,"1|hzz4vj:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,SeanBohan_Sovrin,sergey.minaev,,,,,,,,,"14/Apr/18 6:25 AM;SeanBohan_Sovrin;need more information/description please;;;","25/Apr/18 9:48 PM;sergey.minaev;PR https://github.com/hyperledger/indy-sdk/pull/682

Changes:
added handling GET_ revocation transactions resposnes for state proof except specific case with multiply replies for GET_REVOCATION_REGISTER_DELTA

Version:
1.3.1 494+;;;","25/Apr/18 9:53 PM;gudkov;PR merged. The solution looks good for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"Logging: By default, no logs should be written to stdout",IS-644,29358,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,mgbailey,mgbailey,13/Apr/18 1:04 AM,31/Aug/18 6:02 PM,28/Oct/23 2:49 AM,31/Aug/18 6:02 PM,,,1.7.0,,,,,0,,,,,"Currently log messages from the libindy library are written to stdout by default.  This can be modified by setting environment variables, but this should not be the default. If logging is not otherwise configured in an application that uses libindy, it should be sent to a default file or it should be silent.

Proper configuration of logging should be documented.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-896,,,,,,,,,,"1|hzwv3b:",,,,,,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,esplinr,gudkov,mgbailey,SeanBohan_Sovrin,,,,,,,"14/Apr/18 6:24 AM;SeanBohan_Sovrin;[~nage] - thoughts?;;;","20/Apr/18 6:23 AM;esplinr;We spoke with Nathan. We agree with Mike's assessment, and will look to address this in an upcoming release of the SDK.;;;","31/May/18 4:28 PM;gudkov;It is closely related to IS-2;;;","23/Aug/18 9:18 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1069;;;","31/Aug/18 6:02 PM;gudkov;By default now logs are hidden;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Synchronize SDK and crypto pipelines.,IS-645,29382,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Invalid,,sergey.minaev,sergey.minaev,13/Apr/18 11:08 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz3rb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"26/Jul/18 6:24 PM;gudkov;I believe pipelines are ok now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
nonce not threadsafe in Indy SDK,IS-646,29396,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,VladimirWork,krw910,krw910,14/Apr/18 5:27 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,help-wanted,,,,"Ticket information from Nathan

From @ianco: “Hi @nage, regarding the discussion that started last week on threading …  We have 6 “issuers” that create claims, and one “holder” that acts as a master claim repository and “prover”.  When each “issuer” creates a claim, it first creates a claim offer, send that to the “prover” (TheOrgBook), which responds with a claim request.  The “issuer” validates the claim request and sends the claim.  Part of this process is the creation and validation of a nonce.

In the indy-sdk, in create_claim_offer(), the issuer creates a nonce and adds it to the wallet.  The nonce id is based on the issuer did and schema key.  Then, in new_claim(), the nonce is retrieved and validated.

I believe that the threading issue we are having is that when the issuer is trying to issue multiple claims concurrently, the second nonce is stepping on the first.”",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc9b:",,,,,,EV 18.10 Stability and VC,EV 18.09,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,krw910,sergey.minaev,VladimirWork,,,,,,,,"17/Apr/18 10:27 PM;esplinr;This issue requires us to reproducing it before we can investigate it further, but this sprint our team is focused on the next release. We'll add this to the planning for the sprint starting on April 25.

If someone else could reproduce and investigate this issue, it will increase our ability to deal with it in the next sprint.;;;","17/Apr/18 10:42 PM;VladimirWork;FYI [~sergey.minaev] [~Artemkaaas] [~ozheregelya] [~zhigunenko.dsr];;;","17/Apr/18 10:50 PM;sergey.minaev;[~krw910] [~VladimirWork] [~esplinr] this issue is not actual for latest master with Revocation changes.;;;","18/May/18 9:25 PM;esplinr;Our changes in the 1.4 release for wallet storage changed the way the nonce is stored. Because we changed the way that a nonce is added to the wallet, this issue is no longer applicable.

Thanks for the issue report.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
[Release] Indy SDK release notes and migration guide,IS-647,29419,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,16/Apr/18 9:35 PM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,27/Apr/18 1:59 AM,,,1.4,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-650,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz4uv:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,ozheregelya,zhigunenko.dsr,,,,,,,,"18/Apr/18 12:37 AM;Artemkaaas;Implemented in this PR:https://github.com/hyperledger/indy-sdk/pull/657;;;","23/Apr/18 9:38 PM;gudkov;PR was merged. Just look to PR for the list of added files.;;;","24/Apr/18 9:50 PM;zhigunenko.dsr;migration-guide.md - mistype in ""Pyton"";;;","26/Apr/18 7:12 PM;ozheregelya;Migration guide document looks fine besides this misprint. So, after fix misprint this ticket can be moved to ""Done"".;;;","27/Apr/18 1:59 AM;ozheregelya;Misprint fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
A steward needs to be able to get validator-info from all nodes,IS-648,29443,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,SergeyPalamarchuk,SergeyPalamarchuk,17/Apr/18 9:04 PM,26/Apr/18 9:53 PM,28/Oct/23 2:49 AM,26/Apr/18 9:53 PM,,,,,,,,0,,,,,We need improvement for get validator-info that it can fetch replay from all nodes after timeout event was occured. And also need add ignored tests.,,,,,,,,,,,,,,,,,,,,,,,,,IS-588,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww8n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,SergeyPalamarchuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Crypto does not have an associated license,IS-649,29459,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,zhigunenko.dsr,krw910,krw910,18/Apr/18 6:01 AM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,26/Apr/18 11:14 PM,,,1.4,,,,,0,,,,,"A HyperLedger architect pointed out that we do not have a license in the Lib Indy Crypto repository on GitHub.

Acceptance Criteria:
 * A LICENSE.txt file exists in the root of the source repository containing the Apache 2 license.
 * This follows the same process as our other repositories.
 * Other HyperLedger Indy repositories are audited to make sure they also have proper license files.

Notes:
 * Does not require a new release of LibIndy",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-938,IS-670,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwu7b:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,krw910,zhigunenko.dsr,,,,,,,,,"19/Apr/18 9:13 PM;gudkov;1. I looked to repos:
- indy-crypto doesn't have license
- indy-plenum has no copyright in license
- indy-node and indy-sdk are ok

2. I added license to indy-crypto https://github.com/hyperledger/indy-crypto/pull/104

3. I added license to indy-plenum https://github.com/hyperledger/indy-plenum/pull/639

Note to qa:
- It would be nicee to check license for all packages we provide (debs, pipy, maven, cargo and etc...)

Now waiting for merge of PRs.;;;","20/Apr/18 12:11 AM;gudkov;PRs merged. [~krw910] can you validate this?;;;","24/Apr/18 9:28 PM;zhigunenko.dsr;*Sources* (license file with copyright):
indy-crypto - OK
indy-plenum - OK
indy-node - OK
indy-sdk - OK

*Deb's* (via _apt show_):
indy-anoncreds - License Apache 2.0
indy-node - License Apache 2.0
indy-plenum - License Apache 2.0
libindy - no info about license
libindy-crypto - no info about license
python3-indy-crypto - License MIT/Apache-2.0

*PyPi* (search by indy keyword and [maintainer|https://pypi.org/user/evernym]):
anoncreds (+dev) - Apache 2.0
indy-anoncreds (+dev) - Apache 2.0
indy-crypto (+ authz) - MIT/Apache-2.0
indy-node (+dev +authz) - Apache 2.0
indy-plenum (+dev +authz) - Apache 2.0
indy-sdk - MIT/Apache-2.0
plenum (+dev) - Apache 2.0
python3-indy (+authz-rc) - MIT/Apache-2.0
sovrin (+dev) - Apache 2.0
sovrin-client-dev - Apache 2.0

indynotifieremail - no license
sovringui - no license
sovrin_installer - no license
sovrinnotifieremail - no license
sovrinnotifierawssns - Apache 2.0

*Maven* (from pom.xml):
indy - MIT/Apache-2.0

*Cargo* (search by indy keyword):
indy - MIT/Apache-2.0
indy-crypto - MIT/Apache-2.0
indy-sdk - MIT/Apache-2.0

[~sergey.minaev]  [~Artemkaaas]  [~gudkov]
please notify if any artifacts are missed;;;","26/Apr/18 11:14 PM;zhigunenko.dsr;Amending has moved to IS-670;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
DOC: Request for release notes on Indy-SDK 1.4.0,IS-650,29483,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,TechWritingWhiz,VladimirWork,VladimirWork,18/Apr/18 11:13 PM,15/May/18 8:03 PM,28/Oct/23 2:49 AM,28/Apr/18 3:12 AM,,,1.4,,,,,0,,,,,"This ticket should contain link to Libindy migration Guide as soon as this guide will be in master (now it is available in https://github.com/Artemkaaas/indy-sdk/blob/7b79324e49ce75fa95db9c51f644f32bb12803bc/doc/migration-guide.md).

UPD: Migration Guide has been merged to master. Link: https://github.com/hyperledger/indy-sdk/blob/master/doc/migration-guide.md",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-647,IS-653,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzz7gn:",,,,,,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,ozheregelya,TechWritingWhiz,VladimirWork,,,,,,,,,"26/Apr/18 7:07 PM;ozheregelya;[~TechWritingWhiz], it was discussed with [~krw910] that for current release it will be enough to have this migration guide instead of usual release notes.;;;","28/Apr/18 3:12 AM;TechWritingWhiz;The requirements of this ticket seem to be fulfilled. Closing the ticket.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Return different error codes in case NACK/ACK was provided or not,IS-651,29507,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,dsurnin,dsurnin,19/Apr/18 9:25 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"For the moment libindy has different waiting timeout values for NACK/ACK and REPLY responses, but returns the same ret code - pool timeout error.

It would be better to create different ret codes for cases NACK/ACK received or not.
Absence of NACK/ACK response for write txn most likely means that pool have not received request at all and client app should resend the same req.
If ACK were received but REPLY timeout expired client could send just read req to find out whether it were written or not",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwrhj:91",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dsurnin,gudkov,,,,,,,,,,"20/Dec/18 7:12 PM;gudkov;Now we have different behavior. Libindy always return Success and provides Node response to user. As result this ticket is invalid for the moment.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: Design CLI payments support,IS-652,29514,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,19/Apr/18 10:47 PM,15/May/18 8:06 PM,28/Oct/23 2:49 AM,08/May/18 8:48 PM,,,1.5,,,,,0,,,,,"CLI must be the tool that allows to produce the most of payment operations. We need to define:

- The list of payment related commands
- Design how to load payment plugins",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz7ev:",,,,,,18.08 Wallets+,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"28/Apr/18 9:50 PM;gudkov;Design provided in PR https://github.com/hyperledger/indy-sdk/pull/697;;;","08/May/18 8:51 PM;gudkov;Design was presented to Alex, Stephen and libsovtoken team.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Release Indy SDK 1.4 with revocation support,IS-653,29554,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,20/Apr/18 11:39 PM,15/May/18 8:03 PM,28/Oct/23 2:49 AM,11/May/18 6:28 PM,,,1.4,,,,,0,,,,,"We need to release new Libindy with:
* Revocation
* CLI
* New crypto API
* A lot of bugfixes

What we need for release:
* Decide what version we need to release with Nathan: will be LibIndy 1.4
* Merge current opened PRs for documentation
* Switch to Stable Node version
* Update release notes
** This release is not recommended for use in production. We do not yet have a migration process between versions and we know wallet format changes are coming.
** Release notes need to clarify that anoncred format changed, and anoncreds have to be reissued.
** Release notes need to clarify that there will be format changes in LibIndy 1.5: plugable storage and new encryption format
* Acceptance testing

Note:
* Official publication of the release will wait until we have approval from Nathan.",,,,,,,,,,,IS-675,,,,,,,,,,,,,,,,IS-650,,,,,IS-654,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzz7dj:",,,,,,18.08 Wallets+,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,esplinr,gudkov,sergey.minaev,,,,,,,,,"20/Apr/18 11:56 PM;gudkov;[~resplin] We have a point here ""Decide what version we need to release with Nathan"". Can you handle this?;;;","23/Apr/18 10:57 PM;esplinr;Updates:
* The next release will be SDK 1.4, confirmed by Nathan on April 20.
* This release will require new wallets, because of the support for credentials. There is not currently a migration to the new wallet format.
* We want to postpone the release until the additional changes for the storage and encryption layers are completed because they will also impact wallet formats and we can manage that upgrade a single time. (See IS-654)
* This story is to prepare a Beta Release for use by other development teams, but we will wait for the official release until the other changes to the wallet format are complete. We updated the title of the story.;;;","26/Apr/18 1:08 AM;esplinr;My apologies, but we are going to take another change in tactics:
* After consultation with stakeholders, we are comfortable releasing SDK 1.4 even with the breaking changes to the wallet format. We will highlight in the release notes that persistent credentials should not be created until after the release of SDK 1.5.
* This story is still to prepare the release, but not actually release it. The official release should wait for approval of stakeholders (Nathan and the Indy Working Group)

In the future, we will endeavor to plan sufficiently in advance so as not to change requirements at the last minute like this.;;;","10/May/18 7:27 PM;sergey.minaev;New Stable 1.4 release is published https://github.com/hyperledger/indy-sdk/releases/tag/v1.4.0;;;","11/May/18 6:28 PM;gudkov;Release was accepted by QA. We can consider it as done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Tool for LibIndy wallet migration to new format,IS-654,29565,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Invalid,,esplinr,esplinr,21/Apr/18 4:12 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"*Story*

As a developer contributing to LibIndy, I want to know that I can change the wallet format in a manner that does not permanently invalidate all existing wallets.

As a user of a wallet for Indy Agent created by LibIndy, I want a smooth migration from my existing wallet format to the wallet format used by future versions so that I can upgrade with minimal hassle.

*Acceptance Criteria*
 * The first time a wallet is accessed from a client leveraging the libraries in Indy SDK, it should be upgraded to the current format.
 * The upgrade should occur in a non-destructive way. The upgraded wallet should be a copy of the previous wallet and be stored alongside the previous wallet.
 * A warning log message should be generated.
 * SDK documentation is updated to reflect that this will occur.

*Notes*
 * There is a wallet upgrade necessary in LibIndy 1.5 due to the storage of credentials, plugable persistence layer, and the new encryption methods. We don't have to manage this upgrade as we are not aware of anyone with durable credentials in their wallet and we will notify people in the Release Notes for LibIndy 1.4, the working group calls, chat, and the mailing list.
 * We need a process in place so people know we won't break them in the future. That process consists of an export / import mechanism in LibIndy 1.5, and a potential tool to automate the process. (We need to check that the new export / import mechanism is sufficient for this use case.)
 * Old anoncreds from LibIndy 1.3 will not be upgraded. A warning should be issued that they are not compatible and must be reissued.
 * This story does not consider imports from the wallets created by legacy Python CLI, as the export / import process currently in place should continue to function.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-653,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzzj4n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,gudkov,,,,,,,,,,"26/Jul/18 6:29 PM;gudkov;[~esplinr] Can we close this?;;;","27/Aug/18 11:19 PM;esplinr;After surveying our existing user base, we concluded that this backwards incompatible change can be safely deployed. We have implemented a wallet import / export mechanism that can be used to create a migration tool should one become necessary in the future.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance: libindy should use pong time to select nodes for catchup requests,IS-655,29628,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,dsurnin,dsurnin,24/Apr/18 5:02 PM,08/Oct/19 11:13 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"*Task Overview*
For the moment sdk choose which node to send catchup req to randomly. It would be better to reorder node list according to pong time and does not send catchup req at all if pong is absent. Probably reorder logic could be applied to the nodes who send consistency proof as well - those who send it ordered higher.

Without ordering according to pongs some tests in indy-plenum project could failed randomly and must be rerun.

*Acceptance Criteria*
* Corresponded code is written
* Integration tests are written and passed
* Code is merged and master build with the changes is issued

Note:  It can be efficient to implement together with IS-570",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1397,,,,,,,,,,"1|hzwwdb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dsurnin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iOS wrapper: Tests refactoring,IS-656,29629,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,Artemkaaas,Artemkaaas,24/Apr/18 5:30 PM,15/May/18 8:08 PM,28/Oct/23 2:49 AM,25/Apr/18 9:30 PM,,,1.4,,,,,0,,,,,"We need to refactor iOS wrapper integration tests

Motivation: iOS wrapper integration tests are bad quality. 
We spend much more time to add/change tests here than for Python/Java.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz4vz:",,,,,,18.08 Wallets+,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"25/Apr/18 8:13 PM;Artemkaaas;Implemented in PR:https://github.com/hyperledger/indy-sdk/pull/681;;;","25/Apr/18 9:30 PM;gudkov;The solution looks ok for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Prepare the 1.5 release of IndySDK,IS-657,29642,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,esplinr,esplinr,24/Apr/18 10:38 PM,04/Jul/18 5:20 AM,28/Oct/23 2:49 AM,02/Jul/18 10:23 PM,,,1.5,,,,,0,,,,,"*Task Overview*
Perform all necessary tasks in order to release LibIndy 1.5

*Acceptance Criteria*
* Code is tested
* Release is tagged
* Release notes are drafted
* Release notes are reviewed by Docs and Product Management

*Notes*
* Release notes need to highlight the wallet format changes (see IS-654)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzze0n:",,,,,,EV 18.12 Release New Wallet,EV 18.13,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,esplinr,gudkov,sergey.minaev,zhigunenko.dsr,,,,,,,,"27/Jun/18 7:42 PM;sergey.minaev;New release candidate build is 1.5.0 RC 2;;;","28/Jun/18 4:12 PM;gudkov;new Indy SDK stable 1.5.0 has been published for libindy, CLI, libnullpay and java, python wrappers.
Changelog: https://github.com/hyperledger/indy-sdk/blob/rc/CHANGELOG.md
Migration guide: https://github.com/hyperledger/indy-sdk/blob/rc/doc/migration-guide-1.4.0-1.5.0.md

iOS pods will be available soon.;;;","02/Jul/18 5:47 PM;zhigunenko.dsr;https://repo.sovrin.org/ios/libindy/stable/indy-objc/ -has been missed- fixed
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
PoolLedger: Design StateProof logic for new use cases,IS-658,29663,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,sergey.minaev,sergey.minaev,25/Apr/18 7:12 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"This ticket is aggregation of new use cases near state proofs, which wasn't be considered in initial approach.
 # Multiply StateProofs in single response
 # Plugged StateProof checking (parsing?)
 # Predefined (on Request) path in Trie",,,,,,,,,,,INDY-1125,,,,,,,,,,,,,,,,IS-643,,,,,IS-706,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww8v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Design] LibIndy architecture needs for Enterprise use cases,IS-659,29669,,Epic,To Develop,IS,Indy SDK,software,resplin,,,High,,,esplinr,esplinr,25/Apr/18 10:46 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"*Story*
 As a developer building an Enterprise Agent, LibIndy should be as useful for my project as it is when building a Consumer Agent in order to reduce the cost of getting my project live on an Indy network.

Key differences between an Enterprise and Consumer Agent:
 * Enterprise Agents communicate with lots of other agents in parallel.
 * Enterprise Agents need to segment secrets from a large number of individuals (i.e. multiple wallets)

*Acceptance Criteria*
 * High performance: needs to handle lots of transactions in multiple threads
 * Scale-able secret storage: backed by a database
 TODO: What other deficiencies exist?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-7,,Enterprise LibIndy,To Do,,,,,,,,"1|hzy3wf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance: Design multi-threaded LibIndy,IS-660,29670,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,gudkov,esplinr,esplinr,25/Apr/18 10:50 PM,23/Aug/18 10:39 PM,28/Oct/23 2:49 AM,20/Aug/18 5:38 PM,,,1.7.0,,,,,0,,,,,"*Story*
As a developer building an Enterprise Agent, I want LibIndy to manage agent communication in separate threads so that it can handle concurrent communication in an efficient manner.

This story is about design how-to achieve this goal.

*Acceptance Criteria*
* Design is created and approved
* Implementation scope is defined
* Corresponded user stories created
* Design should allow libIndy simultaneously communicate with 10s of other agents without a reduction in performance.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-898,IS-899,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-659,,,,,,,,,,"1|hzwv5j:",,,,,,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.14,EV 18.17,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,esplinr,gudkov,sergey.khoroshavin,,,,,,,,,"26/Apr/18 12:30 AM;gudkov;I spend some time yesterday and today to investigate tokio.rs and future-rs (basic part of tokio that will be soon part of standard lib) and seems we can perform this refactoring in 1-2 weeks:

- API layer can be leaved without changes
- CommandExecutor will use ""channel"" from future-rs instead of std, but interface is quite similar
- CommandExecutor will execute handler of stream of commands as the main async task on the thread pool (by default 1 thread, but we can allow configuration with env variable)
- CryptoService and AnoncredsService will manage dedicated thread pool to handle cpu-intensive operations. Methods will return Future instead of result, changes will be very small
- For default wallet we can just use thread pool with one thread leaving the code without big changes
- PoolService will be leaved without changes with some thin infrastructure added to return Future instead of Result
- The most of refactoring will be needed in command layer. Instead of synchronous code for each command we will need to compose futures received from different services

The main question is how to handle pluggable wallet. There are 2 options:

1. Make interface asynchronous. It is quite easy to implement on libindy side.
2. Leave interface without changes, but claim that it must be thread safe. In this case we can use thread pool with configurable amount of threads.

I vote for option 1. (edited);;;","28/Apr/18 11:08 PM;gudkov;[~danielhardman] [~dkulic] [~esplinr] [~rajesh.kalaria]

Here are results of our performance testing https://docs.google.com/spreadsheets/d/1MHqpA_gEw69pWJtJo7aFoaf8Hu0qMQgIBoeK5JPnM5g/edit#gid=0

sqlsypher based wallet seems too slow, but new wallet that Darko's team is creating seems performant enough to provide acceptable performance in one libindy thread.
;;;","01/Jun/18 11:02 PM;gudkov;There is a HIPE with proposal https://github.com/hyperledger/indy-hipe/pull/16/files;;;","04/Jun/18 8:22 PM;gudkov;[~danielhardman] [~esplinr] I formalized my proposal. We need to start some approval process. 

Do you have ideas how we can move it forward?;;;","02/Jul/18 9:12 PM;sergey.khoroshavin;[~sergey.minaev] [~gudkov]

Recently I've looked into code of Indy SDK (besides just being curious I was interested if it is possible to create memory-effective multithreaded load script with current libindy) and one thing took my attention: https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/commands/mod.rs#L63
1. There is just one command executor guarded by mutex, which can potentially become bottleneck - and as I learned later there are already some proposals to fix this
2. Sender part of Rust's mpsc channel is guarded by mutex as well. This a bit bugged me, because usual way to use mpsc's channels when there are multiple producers is to clone senders, not share them. Given that rust mutex is implemented using plain pthread_mutex, and mpsc is using lock-free queue there is quite high chance that moving sender out of mutex and placing it in thread_local storage can noticeably reduce thread contention on libindy's client side.
3. There are several approaches described in https://github.com/hyperledger/indy-hipe/pull/16/files, one of them proposes to explicitly create command executors and provide handles to them, but states that in order to get benefit applications need deep refactoring. I think that it's possible to use work-stealing thread pool inside libindy to run several command executor threads and get benefits without refactoring of application code - or I might be missing something.;;;","20/Aug/18 5:36 PM;gudkov;* Corresponded HIPE with design was created and accepted https://github.com/hyperledger/indy-hipe/tree/master/text/0012-concurrency-improvement
* Corresponded implementation user stories were created (IS-898, IS-899);;;",,,,,,,,,,,,,,,,,,,,,,,,
Payments Interface: Java wrapper,IS-661,29672,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,gudkov,gudkov,25/Apr/18 10:59 PM,15/May/18 8:06 PM,28/Oct/23 2:49 AM,08/May/18 8:52 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz7fj:",,,,,,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,KitHat,,,,,,,,,,"26/Apr/18 4:58 PM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/684;;;","08/May/18 8:52 PM;gudkov;Looks ok for the beginning;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Payment Interface: Python wrapper,IS-662,29673,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,25/Apr/18 10:59 PM,21/May/18 9:41 PM,28/Oct/23 2:49 AM,21/May/18 9:41 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz9rr:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"15/May/18 7:04 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/750;;;","17/May/18 11:23 PM;Artemkaaas;Implemented in PR: [https://github.com/hyperledger/indy-sdk/pull/750]
Build version: master 517 ;;;","21/May/18 9:41 PM;gudkov;Implementation seems ok for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Payments Interface: iOS wrapper,IS-663,29674,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,25/Apr/18 11:00 PM,21/May/18 9:40 PM,28/Oct/23 2:49 AM,21/May/18 9:40 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz9rj:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"15/May/18 7:04 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/750;;;","17/May/18 11:23 PM;Artemkaaas;Implemented in PR: [https://github.com/hyperledger/indy-sdk/pull/750]
Build version: master 517 ;;;","21/May/18 9:40 PM;gudkov;Implementation seems ok for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Publish to indy.ReadTheDocs.io,IS-664,29675,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,mdb,esplinr,esplinr,25/Apr/18 11:02 PM,11/Oct/19 9:12 PM,28/Oct/23 2:49 AM,11/Oct/19 9:12 PM,,,,,,,,0,,,,,"*Story*
 As a consumer of the Indy ecosystem, I want to the documentation to be easy to find and easy to use so that I can quickly get my questions answered and be productive with the SDK.

*Acceptance Criteria*
 * Documentation exists within the /docs/ folder of the LibIndy source code repository.
 * Documentation should be divided based on the target audience: contributors, users, and business folk.

*Notes*
 * HIPE PR: https://github.com/hyperledger/indy-hipe/pull/63",,,,,,,,,,,,,,,,,,INDY-1294,,,,,,,,,,,,,,IS-815,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-320,,,,,,,,,,"1|hzwqr6:",,,,,,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dbluhm,esplinr,,,,,,,,,,"24/Jul/19 3:35 AM;dbluhm;Sorry, accidentally took ownership. Is this issue still relevant?;;;","11/Oct/19 9:12 PM;esplinr;Publishing to ReadTheDocs.io works, but there is additional work that should be done in separate tickets.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: CLI user should be able to manage payment addresses in CLI,IS-666,29678,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,26/Apr/18 12:25 AM,24/May/18 10:12 PM,28/Oct/23 2:49 AM,24/May/18 7:43 PM,,,1.5,,,,,0,,,,,"As Indy Developer i need to be able to manage payment addresses through CLI.

*Acceptance Criteria*
* CLI provides commands for PA creation and listing
* It works with libnullpay
* It works on Windows and Ubuntu",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz7db:",,,,,,EV 18.10 Stability and VC,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"07/May/18 9:39 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/717;;;","10/May/18 7:59 PM;gudkov;After release we can merge it to master and start validation by QA team;;;","23/May/18 5:41 PM;Artemkaaas;Build version: master 527 ;;;","24/May/18 7:41 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~529 
libnullpay 0.1.0~529

*Performed tests* (both Win and Linux):
* show payment addresses list without open wallet - corresponding error
* show empty payment addresses list - corresponding message
* show non-empty payment addresses list - correct list of addresses
* create new payment address without seed - unique addresses are created
* create new payment address with seed - nullpay hasn't supported seeds, unique addresses are created;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: CLI user should be able to register custom payments and wallets pluggins,IS-667,29679,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,26/Apr/18 12:26 AM,24/May/18 10:12 PM,28/Oct/23 2:49 AM,24/May/18 7:50 PM,,,1.5,,,,,0,,,,,"As Indy CLI User i need to be able to register custom pluggins.

*Acceptance Criteria*
* CLI provides the way to register custom pluggins
* It works with libnullpay
* It works on Windows and Ubuntu",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz7d3:",,,,,,EV 18.10 Stability and VC,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"07/May/18 9:39 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/717;;;","10/May/18 7:59 PM;gudkov;After release we can merge it to master and start validation by QA team;;;","24/May/18 7:50 PM;zhigunenko.dsr;*Environment:*
libnullpay(win) 0.1.0-529
libnullpay(ubuntu) 0.1.0-529
indy-cli(ubuntu) 1.4.0~529
indy-cli(win) 1.4.0~529

libnullpay successfully attached to CLI, at least one implimented method (payment-adress create) successfully called from CLI;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: CLI user should be able to assign fees to Ledger transactions,IS-668,29680,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,26/Apr/18 12:29 AM,25/May/18 5:34 PM,28/Oct/23 2:49 AM,25/May/18 5:34 PM,,,1.5,,,,,0,,,,,"As Indy CLI User i need to be able to assign fees to domain transactions.

*Acceptance Criteria*
* CLI provides the way to assign fees to domain transactions
* It works with libnullpay
* It works on Windows and Ubuntu",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-720,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz7cf:",,,,,,EV 18.10 Stability and VC,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"07/May/18 9:39 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/717;;;","10/May/18 7:59 PM;gudkov;After release we can merge it to master and start validation by QA team;;;","23/May/18 5:41 PM;Artemkaaas;Build version: master 527 ;;;","25/May/18 5:34 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0-530 (both Win and Ubuntu)
libnullpay 1.4.0-530 (both Win and Ubuntu)

*Test results:*
* ledger set-fees-prepare (without DID) - corresponding error
* ledger set-fees-prepare (with DID, without params) - corresponding error
* ledger set-fees-prepare (with DID, with payment method only) - corresponding error
* ledger set-fees-prepare (with empty _fees=_) - {color:red}SET_FEES transaction has been created{color} (moved to IS-720)
* ledger set-fees-prepare with all correct params - the fee was set / updated
* ledger set-fees-prepare help - correct output

* ledger get-fees help - correct output
* ledger get-fees (without payment method) - corresponding message
* ledger get-fees (with wrong payment method) - corresponding message
* ledger get-fees (empty list) - corresponding message
* ledger get-fees (non-empty list) - correct output with current values;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Tokens Interface: CLI user should be able to send payment-related transactions,IS-669,29681,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,26/Apr/18 12:34 AM,25/May/18 9:18 PM,28/Oct/23 2:49 AM,25/May/18 9:18 PM,,,1.5,,,,,0,,,,,"As Indy Developer i need to be able to send payment related transactions.

*Acceptance Criteria*
* CLI provides commands for sending get_utxo, mint, xfer, fees, set_fees transactions
* It works with libnullpay
* It works on Windows and Ubuntu",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-722,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz7cn:",,,,,,EV 18.10 Stability and VC,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"04/May/18 10:42 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/717;;;","10/May/18 7:59 PM;gudkov;After release we can merge it to master and start validation by QA team;;;","23/May/18 5:41 PM;Artemkaaas;Build version: master 527 ;;;","25/May/18 8:22 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0-530 (both Win and Ubuntu)
libnullpay 1.4.0-530 (both Win and Ubuntu)

*Actual results:*
ledger mint-prepare (without opened wallet) - corresponding error
ledger mint-prepare (with opened wallet, without wallet) - corresponding error
ledger mint-prepare (with opened wallet, without wallet) - corresponding error
ledger mint-prepare outputs= (without active did) - corresponding error
ledger mint-prepare outputs= (with did, without outputs parameter) - corresponding error
ledger mint-prepare outputs= (with did, with empty outputs) - corresponding error
ledger mint-prepare (with empty payment address) - corresponding error
ledger mint-prepare (with non-integer token amount) - corresponding error
ledger mint-prepare (without extra or with empty extra) - correct result
ledger mint-prepare (with correct data and multiple recipients) - correct result

ledger get-utxo (without opened pool) - corresponding error
ledger get-utxo (with pool, without opened wallet) - corresponding error
ledger get-utxo (with wallet, without active did) - corresponding error
ledger get-utxo (with wallet, without active did) - corresponding error
ledger get-utxo (with did, without payment_address) - corresponding error
ledger get-utxo (for address with utxo) - correct list
ledger get-utxo (for address without utxo) - corresponding message

ledger payment (without opened pool) - corresponding error
ledger payment (with pool, without opened wallet) - corresponding error
ledger payment (with wallet, without active did) - corresponding error
ledger payment (with did, without outputs) - corresponding error
ledger payment (with did, with empty outputs) - corresponding error
ledger payment (negative token amount in inputs/outputs) - {color:red}wrong error message ""Outputs list is empty""{color} (moved to IS-722)
ledger payment (multiple UTXO in inputs, multiple payment addresses in outouts) - correct output
ledger payment (send output begger than multiple UTXO in inputs, multiple payment addresses in outputs) - corresponding message

ledger sign-multi (without opened wallet) - corresponding error
ledger sign-multi (without params) - corresponding error
ledger sign-multi (with incorrect JSON) - corresponding error
ledger sign-multi (with correct json) - transaction has been signed

ledger nym did (without new fields) - transaction has been written to ledger
ledger nym did (with correct input and output) - transaction has been written to ledger;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add missing licenses,IS-670,29720,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,26/Apr/18 11:11 PM,10/Aug/18 4:34 PM,28/Oct/23 2:49 AM,10/Aug/18 4:34 PM,,,1.6.2,,,,,0,,,,,"These binary artifacts do not contain a license. We should add one:

Deb's (via apt show):
* libindy
* libindy-crypto

PyPi (search by indy keyword and maintainer):
* indynotifieremail

iOS pods:
* libindy-objc.zip and
* libindy.tar.gz doesn't contain any mention of license

Note:
There are also some Sovrin artifacts that do not have license files in the binary distribution:
* sovringui
* sovrin_installer
* sovrinnotifieremail",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-649,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww1r:",,,,,,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,sergey.minaev,zhigunenko.dsr,,,,,,,,,"05/Aug/18 7:28 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1025
Changes: Added `copyright` file contained `Apache 2.0` license for the following Debian packages:
* Libindy
* Libnullpay
* IndyCli
* Libindy-Crypto

Added license file to iOS pods;;;","08/Aug/18 9:23 PM;sergey.minaev;Will be available in nearest build 1.6.1 master 690 (or newest) ;;;","09/Aug/18 6:05 PM;zhigunenko.dsr;*Actual results:*
libindy-crypto 0.4.2~59 hasn't copyright file (and wasn't added in PR);;;","09/Aug/18 6:39 PM;Artemkaaas;Fixed fo Libindy-crypto in PR: https://github.com/hyperledger/indy-crypto/pull/123;;;","09/Aug/18 11:42 PM;Artemkaaas;Build-version: master-60;;;","10/Aug/18 4:34 PM;zhigunenko.dsr;*Actual results:*
Checked out on libindy-crypto 0.4.2~60 ;;;",,,,,,,,,,,,,,,,,,,,,,,,
Enterprise Libindy: Implement load test that simulates agency load,IS-671,29724,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,27/Apr/18 12:30 AM,15/May/18 8:06 PM,28/Oct/23 2:49 AM,07/May/18 9:25 PM,,,1.5,,,,,0,,,,,"Add load test into libindy for one of agency scenario:
* multiply agents use their own wallets
* encrypt (decrypt) fixed size data in parallel

Test should measure average delay for SDK API call",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz7gf:",,,,,,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"28/Apr/18 12:17 AM;sergey.minaev;PR with load test: https://github.com/hyperledger/indy-sdk/pull/694
Some testing results: https://docs.google.com/spreadsheets/d/1MHqpA_gEw69pWJtJo7aFoaf8Hu0qMQgIBoeK5JPnM5g;;;","07/May/18 9:25 PM;gudkov;Test looks ok for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java wrapper:Support non-secrets API,IS-672,29726,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,27/Apr/18 12:39 AM,15/May/18 8:06 PM,28/Oct/23 2:49 AM,08/May/18 8:52 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz7f3:",,,,,,18.08 Wallets+,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"28/Apr/18 11:09 PM;Artemkaaas;Implemented in PR:https://github.com/hyperledger/indy-sdk/pull/688;;;","08/May/18 8:52 PM;gudkov;Looks ok for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Getting Started Jupyter/IPython notebook unable to connect to test pool,IS-673,29910,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,gudkov,mdb,mdb,03/May/18 1:29 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,1.5,,,,,0,getting-started,python-SDK,sdk,TShirt_L,"# clone indy-sdk, and navigate to doc/getting-started/
 # run command `sudo docker-compose up` and open up corresponding jupyter notebook
 # run the code in jupyter. It prints:

{code:java}
Getting started -> started Open Pool Ledger
 
_indy_loop_callback: Function returned error 307
 
--------------------------------------------------------------------------- Getting started -> started
Open Pool Ledger

_indy_loop_callback: Function returned error 307

---------------------------------------------------------------------------
IndyError                                 Traceback (most recent call last)
<ipython-input-2-058169a37fe4> in <module>()
    785     loop = asyncio.new_event_loop()
    786     asyncio.set_event_loop(loop)
--> 787     loop.run_until_complete(run())
    788     time.sleep(1)  # FIXME waiting for libindy thread complete

/usr/lib/python3.5/asyncio/base_events.py in run_until_complete(self, future)
    385             raise RuntimeError('Event loop stopped before Future completed.')
    386 
--> 387         return future.result()
    388 
    389     def stop(self):

/usr/lib/python3.5/asyncio/futures.py in result(self)
    272             self._tb_logger = None
    273         if self._exception is not None:
--> 274             raise self._exception
    275         return self._result
    276 

/usr/lib/python3.5/asyncio/tasks.py in _step(***failed resolving arguments***)
    239                 result = coro.send(None)
    240             else:
--> 241                 result = coro.throw(exc)
    242         except StopIteration as exc:
    243             self.set_result(exc.value)

<ipython-input-2-058169a37fe4> in run()
     13     pool_config = json.dumps({""genesis_txn"": '/home/indy/sandbox/pool_transactions_genesis'})
     14     await pool.create_pool_ledger_config(pool_name, pool_config)
---> 15     pool_handle = await pool.open_pool_ledger(pool_name, None)
     16 
     17     print(""=============================="")

/usr/local/lib/python3.5/dist-packages/indy/pool.py in open_pool_ledger(config_name, config)
     80                         c_config_name,
     81                         c_config,
---> 82                         open_pool_ledger.cb)
     83 
     84     logger.debug(""open_pool_ledger: <<< res: %r"", res)

/usr/lib/python3.5/asyncio/futures.py in __iter__(self)
    359         if not self.done():
    360             self._blocking = True
--> 361             yield self  # This tells Task to wait for completion.
    362         assert self.done(), ""yield from wasn't used with future""
    363         return self.result()  # May raise too.

/usr/lib/python3.5/asyncio/tasks.py in _wakeup(self, future)
    294     def _wakeup(self, future):
    295         try:
--> 296             future.result()
    297         except Exception as exc:
    298             # This may also be a cancellation.

/usr/lib/python3.5/asyncio/futures.py in result(self)
    272             self._tb_logger = None
    273         if self._exception is not None:
--> 274             raise self._exception
    275         return self._result
    276 

IndyError: ErrorCode.PoolLedgerTimeout


{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/May/18 2:58 AM;mdb;Node1.log;https://jira.hyperledger.org/secure/attachment/14950/Node1.log","08/May/18 2:58 AM;mdb;Node2.log;https://jira.hyperledger.org/secure/attachment/14951/Node2.log","08/May/18 2:58 AM;mdb;Node3.log;https://jira.hyperledger.org/secure/attachment/14952/Node3.log","08/May/18 2:58 AM;mdb;Node4.log;https://jira.hyperledger.org/secure/attachment/14953/Node4.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzca7:",,,,,,EV 18.10 Stability and VC,EV 18.09,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,EV 18.15,EV 18.16,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,gudkov,mdb,ozheregelya,spivachuk,,,,,,,"05/May/18 1:23 AM;gudkov;Information about environment and logs from docker compose will be useful to understand the problem;;;","05/May/18 1:25 AM;gudkov;[~ozheregelya] [~zhigunenko.dsr] Coud you check this?;;;","05/May/18 1:29 AM;gudkov;According to logs seems pool is unavailable. It can be some issue with environment or some deployment problem in pool. It could be nice to get shell to indy-node container and check the logs.;;;","05/May/18 1:30 AM;mdb;Have you been able to repro the bug on your own machine? How should I find the logs?;;;","05/May/18 1:33 AM;spivachuk;[~mdb] You can find the node logs on the node machine in the directory {{/var/log/indy/<NETWORK_NAME>/}};;;","08/May/18 1:59 AM;mdb;[~zhigunenko.dsr] Any progress on this?;;;","08/May/18 2:30 AM;ozheregelya;[~mdb], 
We have tried to reproduce this issue. On current master version Getting Started works without any errors.;;;","08/May/18 2:47 AM;mdb;Here are the steps I followed to get the error:
 # clone fresh indy-sdk master branch
 # navigate to doc/getting-started
 # run `sudo docker-compose up`
 # run the jupyter notebook.

After about 15 seconds, I get the PoolLedgerTimeout error posted above.

 

I'm following this guide: [https://github.com/hyperledger/indy-sdk/blob/master/doc/getting-started/run-getting-started.md] on Ubuntu 16.04.

Have I missed any steps that are required for this to run correctly?;;;","08/May/18 3:00 AM;mdb;I've attached my node logs. Any help or advice you can give is much appreciated. There is one line that looked like an error to me:
{code:java}
Node4.log:

2018-05-07 17:41:21,058 | INFO     | zstack.py            ( 722) | transmit | Remote Node1 is not connected - message will not be sent immediately.If this problem does not resolve itself - check your firewall settings
2018-05-07 17:41:21,086 | INFO     | node.py              (1538) | validateNodeMsg | Node4 received node message from Node2: MESSAGE_REQUEST{'params': {'ledgerId': 1}, 'msg_type': 'LEDGER_STATUS'}
2018-05-07 17:41:21,087 | INFO     | node.py              (1538) | validateNodeMsg | Node4 received node message from Node3: MESSAGE_REQUEST{'params': {'ledgerId': 1}, 'msg_type': 'LEDGER_STATUS'}
2018-05-07 17:41:21,087 | INFO     | node.py              (1538) | validateNodeMsg | Node4 received node message from Node2: MESSAGE_RESPONSE{'msg': {'viewNo': None, 'ledgerId': 1, 'txnSeqNo': 10, 'merkleRoot': 'FeNkRyvAYaL8q4Rvi13LU6YhwuTnh7oJ8B9UK8AppC3j', 'ppSeqNo': None}, 'params': {'ledgerId': 1}, 'msg_type': 'LEDGER_STATUS'}

{code};;;","08/May/18 3:32 AM;ozheregelya;[~mdb],
According to attached logs, it looks like pool was successfully configured, but had received no messages. Also nodes use 127.0.0.1 instead of 10.0.0.2.
It got me thinking that this logs are from another pool. Are these logs from _indy_pool_ docker container?;;;","08/May/18 4:11 AM;mdb;Yes, they are from the indy_pool docker container. I'm running this off of my Ubuntu 16.04 partition and not on a VM. Do I need to change anything in the docker-compose.yml so that this runs correctly on the host OS?;;;","08/May/18 9:15 PM;gudkov;[~mdb] I suggest the following:

Stop and remove all containers and images related to indy and start from scratch. indy-pool dockerfile contains pool_ip argument. 

As we can see your pool is configured to listen 127.0.0.1 that is incorrect configuration for getting started environment. 

before you start again run ```docker ps -a``` and ```docker images```.  Check that there are no any indy related containers and images.;;;","09/May/18 6:19 AM;mdb;I've done what you suggested, and started from scratch. I still get the same error. How can I change my pool so that it is listening on the correct configuration? I have a couple different people who are struggling with this problem.;;;","10/May/18 6:38 PM;gudkov;[~mdb] Seems the only way to proceed is provide us access to your environment. We can try to setup zoom call together.;;;","25/May/18 9:29 PM;gudkov;[~mdb] Hi, Do you still have this problem? ;;;","08/Jun/18 9:51 PM;esplinr;We can't reproduce this issue, and haven't heard back from the reporter, so we're closing this as ""invalid"". (We need to improve the resolution states in JIRA.);;;",,,,,,,,,,,,,,
Support new transaction format,IS-674,29912,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ashcherbakov,ashcherbakov,ashcherbakov,03/May/18 5:23 PM,24/May/18 1:20 AM,28/Oct/23 2:49 AM,23/May/18 9:39 PM,,,1.5,,,,,0,,,,,"In the scope of INDY-1123, we've been changing the format of transactions:
see https://github.com/hyperledger/indy-node/blob/master/docs/transactions-new.md#common-structure

We need to support it in SDK in a way that both old and new formats are supported.
This is needed to be able to use SDK in tests on Node.

Please note that format of Requests is not changed.",,,,,,,,,,,,,,,INDY-1319,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz9lz:",,,,,,EV 18.10 Stability and VC,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,ashcherbakov,,,,,,,,,,"15/May/18 3:47 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/725 
Build version: master 511 
Implemented handling of Pool Ledger responses to Post transactions in a backward compatible way.;;;","23/May/18 9:39 PM;ashcherbakov;The tests in plenum pass.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Review Anoncreds JSONs format for correctness data representation,IS-675,29913,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,sergey.minaev,sergey.minaev,03/May/18 7:04 PM,15/May/18 8:03 PM,28/Oct/23 2:49 AM,10/May/18 7:53 PM,,,1.4,,,,,0,,,,,"In both SDK and Crypto  JSON is used represent Anoncreds data. There are some places where we use JSON object, but data (values of fields) should be ordered.

In scope of this ticket our approach should be reviewed. Possible problems and scope of refactoring should be determined. If applicable, low-level tests should be added to illustrate error scenario.",,,,,,,,,,,,,,,IS-653,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-89,,,,,,,,,,"1|hzz7en:",,,,,,EV 18.09,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"10/May/18 6:22 PM;sergey.minaev;Only one place in code was found in appropriate master branch : order for attributes in KeyCorrectnessProof.

Changes:
- switch representation in KeyCorrectnessProof from JSON object to array

Versions:
 * stable 0.4.1
 * master 0.4.1-45;;;","10/May/18 7:53 PM;gudkov;Looks ok for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance: Understand why tails generation seems too slow,IS-676,29919,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,03/May/18 9:48 PM,21/May/18 10:36 PM,28/Oct/23 2:49 AM,21/May/18 9:38 PM,,,1.5,,,,,0,,,,,"We got the following feedback from community:

Generating tails files takes a *LOOOONG* time. I average about 0.25 sec per maximum credential limit (for issue on demand -- by default is slower) on an Ubuntu 16 VM with 4GB RAM. For example, suppose a medium-sized province may need up to 4 million drivers licences. That's eleven days of compute time, however we want to split it up (more, smaller tails files mean shorter, more frequent delays in credential generation). A developer innocently using the default value of 100000 can effectively hang his box for 7 hours. Surely that can't be the design intent, but I don't see what else I should have done.

Is it expected that indy-sdk will only run on big iron? I don't know what we've specified on the server side for production, but this single operation is MANY ORDERS of magnitude more expensive than anything else in the toolkit, so supporting revocation might bring the house down, yet this is definitely a feature we need.

Does it work appreciably faster for anyone out there, and if so what parameters work well for you? Or else, what is a good tactic to pre-compute tails files before an existing revocation registry is full? Again I come back to needing a way to query how many credentials are issued against an existing revocation registry _(although that might degrade non-correlation? My grasp of the information theory here is sketchy)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-703,,,,,,,,,,"1|hzz9mn:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,esplinr,gudkov,sergey.minaev,sklump,,,,,,,,"04/May/18 10:51 PM;esplinr;This was reported on RocketChat by [~sklump]. The team that implemented revocation functionality did not complete performance testing before they turned their focus to ledger stability. They expect to return to this work later in 2018. In the meantime, people will need to spend the computing resources to generate a tails file for the initial credentials that they will be issuing.

[~sklump] How much does this issue impact you? Is your team in a position to help troubleshoot the issue?;;;","05/May/18 12:38 AM;sklump;[~esplinr]

The issue prevents us from going to production. Unfortunately we don't have the crypto/mathematics+Rust expertise to troubleshoot this issue.

We can operate with demonstrators for now, but once we need millions of revocable credentials, we cannot present the current state as a solution.

What I can do is to identify exactly where in the process the bottleneck resides. I will keep you up to date, probably early next week, as I dig into it.;;;","05/May/18 3:51 AM;sklump;in `libindy/src/commands/anoncreds/tails.rs` : 
 ```
 pub fn store_tails_from_generator(service: Rc<BlobStorageService>,
                                   writer_handle: i32,
                                   rtg: &mut RevocationTailsGenerator) -> Result<(String, String), CommonError> \{
     trace!(""store_tails_from_generator ---> start"");

    let blob_handle = service.create_blob(writer_handle)?;

    let mut hasher = sha2::Sha256::default();

    //FIXME store version/tag/meta at start of the Tail's BLOB

    error!("".. .. store tails 3"");
     let mut num = 0;
     while let Some(tail) = rtg.next()? \{
         error!("".. .. .. \{}! .0"", num);
         let tail_bytes = tail.to_bytes()?;
         error!("".. .. .. \{}! .1"", num);
         hasher.process(tail_bytes.as_slice());
         error!("".. .. .. \{}! .2"", num);
         service.append(blob_handle, tail_bytes.as_slice())?;
         error!("".. .. .. \{}! .3"", num);
         num += 1;
         error!("".. .. .."");
     }

    error!("".. .. store tails 4"");
     let res = service.finalize(blob_handle).map(|(location, hash)| (location, hash.to_base58()))?;

    trace!(""finalize ---> end"");
     Ok(res)
 }
 ```

It appears that the bulk of the operation is spent in rtg.next() – the output visibly pauses, and it is not possible to stop execution without landing, between
 ```
 .. .. ..
 ```
 and
 ```
 .. .. .. <num>! .0
 ```

I couldn't figure out where the random tails generator resides, so this is as far as I can trace it at the moment. My rust is pretty close to hello world level, so I didn't build a timer. In any case, the call to rtg.next() appears to be the worst offender.

Hope that helps!;;;","11/May/18 12:07 AM;gudkov;[~sergey.minaev] [~esplinr] I suggest to do intial research on this task. 

The main purpose is to understand is performance limited by CL math or it is some problem in our code.

After we finish the initial research we can define additional tasks;;;","14/May/18 11:15 PM;sergey.minaev;[~gudkov] After additional discussion in rocket.chat with Stephen we determine the reason of unacceptable timings in his environment. It was default build type by cargo (`debug`). It can be slower in 100+ times. I'm going to add some comments in main readme about debug build performance issue and close this bug.;;;","14/May/18 11:21 PM;sergey.minaev;BTW: there is potential to improve performance for tails generation: use some pre-calculated values. It will complicate the code a bit. As for now, I don't see any reason to spent time for this improvement.;;;","15/May/18 12:44 AM;gudkov;[~sergey.minaev] what is actual performance with release build? How fast we can generate tails for rev reg with 100000 capacity?;;;","15/May/18 5:32 PM;sergey.minaev;The [load test|https://github.com/hyperledger/indy-crypto/blob/870e7be3b438e0991e060a0a60c8d2a58a0cdfc4/libindy-crypto/src/cl/prover.rs#L1467-L1496] provided by [~Artemkaaas] is more or less actual. For 100_000 capacity creation will require a few hundreds of seconds. ;;;","15/May/18 9:07 PM;sklump;I get about 266 seconds (04:26) to generate a tails file on 100000 credentials. My VM runs Ubuntu 16.04 and has 4096 MB of RAM.;;;","16/May/18 5:23 PM;sergey.minaev;I've update how-to-build section in our readme about default cargo build performance
https://github.com/hyperledger/indy-sdk/pull/758
https://github.com/hyperledger/indy-crypto/pull/110;;;","16/May/18 5:47 PM;gudkov;[~sklump] Are you ok with results? If so could you move this ticket to a Done state?;;;","21/May/18 9:38 PM;gudkov;No answer for a week. We can assume it is ok.;;;",,,,,,,,,,,,,,,,,,
Unable to send more than 11 connection request concurrently,IS-677,29924,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,rajesh.kalaria,viswa0269,viswa0269,03/May/18 10:59 PM,26/Jul/18 9:31 PM,28/Oct/23 2:49 AM,26/Jul/18 9:18 PM,,,,,,,,0,,,,," STEPS TO REPRODUCE:

1.Install jmeter 4.0 and open it (edited)
 2.open the test plan SendInvite (attached in bug)
 3.Edit the environment and file path for performance data in the test plan
 4.Replace the library folder of Jmeter with attached library in bug(path in mac os:/usr/local/Cellar/jmeter/4.0/libexec/lib)
 5. Run the test plan

 

RESULT  : Internal error is displayed

 

 Library : https://drive.google.com/open?id=1bgbkMiAIsP13I9qnvr6Gt-ExR1k_9jVT

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/May/18 11:39 PM;viswa0269;SendInvite.jmx;https://jira.hyperledger.org/secure/attachment/14938/SendInvite.jmx",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjq7:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ankur.mshra89,avkrishnan,esplinr,gudkov,rajesh.kalaria,viswa0269,,,,,,"04/May/18 3:17 PM;avkrishnan;Added [~rajesh.kalaria] to add details.;;;","04/May/18 3:20 PM;rajesh.kalaria;FYI: I had a discussion with Slava regarding this and he suggested me to use different libindy from wallet_storage_integration feature branch. I have started on it (facing some issuing in getting the manually built library loading, once I get through it, I'll test if I see improvements on that branch as Slava suggested). Will keep updating this ticket with my progress;;;","04/May/18 10:25 PM;esplinr;After seeing the details of this issue, we do not think this is the same problem as we were discussing that the wallet struggles with concurrent connections (IS-660).

We suspect that this is caused by the slow performance of opening a wallet: the decryption is rather expensive. We see that the wallet implementation being provided by [~dkulic]'s team has improved performance in this area. The next step would be to try and reproduce this issue on that wallet. [~rajesh.kalaria] is planning to do that test.;;;","05/May/18 12:12 AM;slafranca;I spent some time creating a similar test using the libvcx SDK and the VCX python wrapper.  I created a script that will simultaneously launch connections (using python multiprocess). 
 Anything over 10 connections causes exceptions and libvcx stops responding.  I am using libindy_1.3.0 and vcx-0.1.9093651.  I am testing in a virtual environment I created with a vagrant script.  I have a single enterprise that creates multiple unique connections.  All the enterprise connections use the same wallet, on the agency side each connection has it's own wallet.;;;","15/May/18 8:26 PM;esplinr;[~rajesh.kalaria]: Have you been able to reproduce this behavior with the new wallet from [~dkulic]'s team?

Do you need any help?;;;","26/Jul/18 9:18 PM;gudkov;Comment from Rajesh:

> no, we are good on that now;;;",,,,,,,,,,,,,,,,,,,,,,,,
Trying to run the indy sdk CLI results in a segmentation fault on MacOS.,IS-678,29927,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,RyanWest,RyanWest,RyanWest,04/May/18 12:01 AM,23/May/18 9:48 AM,28/Oct/23 2:49 AM,23/May/18 9:48 AM,,,,,,,,0,build,cli,help-wanted,,"Running MacOS High Sierra 10.13.4

Following instructions given on [https://github.com/hyperledger/indy-sdk#how-to-start-local-nodes-pool-with-docker] under sections 'MacOS', 'How to start local nodes pool with docker', and 'Docker port mapping on MacOS'. 

For Docker Port mapping on MacOS, I wasn't exactly sure which IP to use to replace in '{{9701 = <your_docker_ip>:9701', so I tried using both my host IP and 10.0.0.2 from '}}{{docker run -d --ip=""10.0.0.2"" --net=indy_pool_network indy_pool'. Docker seems to be running fine but I'm not sure if I have the right address.}}

In either case, building indy-cli is fine (I have to use 'RUSTFLAGS=""-L ../libindy/target/debug"" cargo build' but then it compiles), but when I actually run ./indy-cli in cli/target/debug, it always results in 'Segmentation fault: 11'.

LLDB's output is so: 

Process 18544 stopped
 * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)
 frame #0: 0x0000000100388219 indy-cli`je_arena_dalloc_small [inlined] je_arena_dalloc_bin(tsdn=0x000000010440d008, arena=0x656d61635f007965, chunk=0x0000000103600000, ptr=0x0000000103702da0, pageind=<unavailable>) at arena.c:2994 [opt]
 Target 0: (indy-cli) stopped.",,,,,,,,,,,,,,,,,,,,,,,,,IS-60,IS-533,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-60,,,,,,,,,,"1|hzz993:",,,,,,SovrinFoundation 18.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,RyanWest,,,,,,,,,,"04/May/18 10:12 PM;esplinr;Thanks for reporting this problem [~RyanWest]. We are aware that Indy SDK CLI doesn't currently run on MacOS. We'll add this bug to the epic and work on it when start that effort.;;;","23/May/18 9:46 AM;RyanWest;One of the updates to indy-sdk must have fixed whatever bug was happening. I've also installed a lot of dependencies for other repos such as indy-plenum and indy-crypto, but the segmentation fault is gone and I can use indy cli as normal now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve Jupyter getting-started guide to include text descriptions and diagrams,IS-679,29939,,Improvement,In Progress,IS,Indy SDK,software,resplin,,,Medium,,mdb,mdb,mdb,04/May/18 7:25 AM,02/Oct/20 6:11 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"Follow my work here: [https://github.com/michaeldboyd/indy-sdk/tree/feature/jupyter-guide/doc/getting-started]

I would like to build an interactive getting-started guide that modularizes the current Jupyter notebook file and adds all the in depth descriptions of the getting-started.md.

This guide could potentially be deployed in the cloud and used at events or presentations.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|i002ys:i",,,,,,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mdb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Re-struct rotate key how-to in Python,IS-680,29982,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,trthhrtz,trthhrtz,trthhrtz,06/May/18 10:47 PM,08/May/18 8:30 PM,28/Oct/23 2:49 AM,07/May/18 11:42 PM,,,,,,,,0,documentation,,,,"Java version is available here: [https://github.com/hyperledger/indy-sdk/blob/master/doc/how-tos/rotate-key/java/README.md]

Python version is here: [https://github.com/hyperledger/indy-sdk/tree/master/doc/how-tos/rotate-key/python]

However, the Python version does not have structure as the first how-to: [https://github.com/hyperledger/indy-sdk/blob/master/doc/how-tos/write-did-and-query-verkey/README.md|https://github.com/hyperledger/indy-sdk/blob/master/doc/how-tos/write-did-and-query-verkey/python/README.md]

In particular, it does not have: README, template and steps files.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz7g7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,trthhrtz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Payments API: Transactions multi-signatures support,IS-681,29998,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,07/May/18 9:46 PM,21/May/18 10:01 PM,28/Oct/23 2:49 AM,21/May/18 9:37 PM,,,1.5,,,,,0,,,,,"Payments-related transactions for minting or setting of txns fees can require multi-signature. Indy Node supports multi-signatures and we need to provide this functionality in SDK:

* I expect that there will be dedicated API endpoint called indy_multi_sign_request
* High and medium tests coverage will be provided",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz9m7:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"15/May/18 7:04 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/750;;;","21/May/18 9:37 PM;gudkov;Implementation seems ok for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Payments CLI: CLI tests for pluggins support,IS-682,30000,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,07/May/18 9:59 PM,24/May/18 10:12 PM,28/Oct/23 2:49 AM,24/May/18 8:03 PM,,,1.5,,,,,0,,,,,We need to provide integration tests for CLI plugging loading functionality.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz7cv:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"23/May/18 2:09 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/780;;;","23/May/18 5:40 PM;Artemkaaas;Build version: master 527 ;;;","24/May/18 12:35 AM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~527
libnullpay 0.1.0~527

*Actual results:*
CLI command _load-plugin_ 
* without required params - corresponding error is shown
* {color:red}with correct params - not working{color}
* command help - all correct

CLI command _payment-address_
* help - all correct

CLI command _payment-address create_
* help - all correct
* run without opened wallet - corresponding error is shown
* run with opened wallet without params - corresponding error is shown
* run with corrected params - {color:red}n/a{color}

CLI command _payment-address list_
* help - all correct
* run without opened wallet - corresponding error is shown
* run with opened wallet without adresses - ok
* run with opened wallet with adresses - {color:red}n/a{color};;;","24/May/18 8:03 PM;zhigunenko.dsr;Environment:
indy-cli 1.4.0~529
libnullpay 0.1.0~529

Actual results:
CLI command load-plugin
* with correct params - plugin succesfully attached

CLI command payment-address create
* run with corrected params - address created and saved in wallet

CLI command payment-address list
run with opened wallet with adresses - stored addresses are shown;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Payments CLI: CLI tests for transactions fees functionality,IS-683,30001,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,07/May/18 10:01 PM,24/May/18 1:20 AM,28/Oct/23 2:49 AM,23/May/18 7:45 PM,,,1.5,,,,,0,,,,,We need to provide integration tests for CLI transactions fees functionality.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz9lb:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"23/May/18 2:09 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/780;;;","23/May/18 5:42 PM;Artemkaaas;Build version: master 527 ;;;","23/May/18 7:44 PM;gudkov;Tests look of for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Payments CLI: CLI tests for payments-related transactions,IS-684,30002,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,07/May/18 10:04 PM,24/May/18 1:20 AM,28/Oct/23 2:49 AM,23/May/18 7:45 PM,,,1.5,,,,,0,,,,,We need to provide integration tests for CLI payments-related transactions commands,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz9lj:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"23/May/18 2:09 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/780;;;","23/May/18 5:41 PM;Artemkaaas;Build version: master 527 ;;;","23/May/18 7:45 PM;gudkov;Tests look of for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Payments CLI: CLI tests for payment address managing commands,IS-685,30008,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,07/May/18 11:10 PM,24/May/18 1:20 AM,28/Oct/23 2:49 AM,23/May/18 7:45 PM,,,1.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz9lr:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"23/May/18 2:09 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/780;;;","23/May/18 5:41 PM;Artemkaaas;Build version: master 527 ;;;","23/May/18 7:45 PM;gudkov;Tests look of for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Update test pool dockerfile to create test pool and agents,IS-686,30011,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,SteveGoob,SteveGoob,SteveGoob,08/May/18 2:14 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"Currently, the getting started guide does not do much by the way of explaining how to set up the test network, (nodes and agents for the nodes). This is probably a good thing, because setting up nodes is outside the scope of indy-sdk. The goal here is to create a dockerfile that generates the test network w/ agents properly, so that the user can dive right into the getting started guide.

 

UPDATE: The maintainers on Github have directed me to dockerfiles in indy-node that already fills this role.",,,21600,21600,,0%,21600,21600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwwhr:",,,,,,SovrinFoundation 18.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,gudkov,SteveGoob,,,,,,,,,"15/May/18 3:31 PM;gudkov;For the current moment GSG is available as:

1. Libindy sample: indy-sdk\samples\python\src\getting_started.py
2. Jupyter script: C:\workspace\src\indy-sdk\doc\getting-started\getting-started.ipynb

- To run 1 you just need the pool from indy-sdk\ci\indy-pool.dockerfile
- To run 2 we already have docker-compose script that starts all environment

I don't understand why we need something additional. ;;;","15/May/18 9:07 PM;esplinr;[~SteveGoob] Can you clarify what is lacking in the current docker deployment and how your pull request improves it?;;;","22/May/18 1:56 AM;SteveGoob;So sorry for the late reply! I've been awfully sick this past week.

Good to know about that python script, I was not aware of that. However, it looks to me like the script goes beyond setting up the pool and goes through Alice's part too. The goal of this script was to create a docker pool that has Faber, Acme, and Thrift all set up by default, so that the user can jump right in as Alice.

I not completely sure of how this will be used, but [~mdb] has plans for the getting started guide and would like to have this dockerfile for what he's trying to do. I don't know the exact details, so I'm just trying to get it into the repo so that he can use it for what he needs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Add structure to the 'Save Schema and Credential Definition' how-to in Python,IS-687,30014,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,trthhrtz,trthhrtz,trthhrtz,08/May/18 3:31 AM,22/Jul/18 3:25 PM,28/Oct/23 2:49 AM,22/Jul/18 3:24 PM,,,,,,,,0,documentation,samples,,,"Java version is available here: [https://github.com/hyperledger/indy-sdk/tree/master/doc/how-tos/save-schema-and-cred-def/java]

Python version is here: [https://github.com/hyperledger/indy-sdk/tree/master/doc/how-tos/save-schema-and-cred-def/python]

However, the Python version does not have a structure as the first how-to: [https://github.com/hyperledger/indy-sdk/blob/master/doc/how-tos/write-did-and-query-verkey/README.md|https://github.com/hyperledger/indy-sdk/blob/master/doc/how-tos/write-did-and-query-verkey/python/README.md]

In particular, it does not have README, template and steps files.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwuyn:",,,,,,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,trthhrtz,,,,,,,,,,,"22/Jul/18 3:25 PM;trthhrtz;https://github.com/hyperledger/indy-sdk/commit/f72811d8b8f1ee58f9227d51f264e62831d85dab#diff-b5d007352644a8fd599b63253f454922;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fedora Packaging and Build,IS-688,30020,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Low,Duplicate,dbluhm,dbluhm,dbluhm,08/May/18 5:27 AM,09/Oct/19 12:20 AM,28/Oct/23 2:49 AM,09/Oct/19 12:19 AM,,,,,,,,0,devops,,,,"Improve indy-sdk experience on fedora through adding it to the CD Pipeline and improving build instructions.

 

Description of process from [~andkononykhin]:
{quote}We discussed the topic with the sdk team. Seems for now it's better to split Fedora support into two major steps (two separate PRs):

1. Prepare necessary infrastructure
     - prepare Fedora-based `dockerfile` like these: [https://github.com/hyperledger/indy-sdk/tree/master/libindy/ci].
     As of now the same dockerfile is used for both CI and CD (packaging).
     - add RPM specs (done as you said)
     - test everything locally
     - update docs with information on how to test on and package for Fedora (seems you have already created a related PR)

2. Update CI/CD pipelines
     - CI [https://github.com/hyperledger/indy-sdk/blob/master/Jenkinsfile.ci]
     - CD [https://github.com/hyperledger/indy-sdk/blob/master/Jenkinsfile.cd]

The second step will have to be postponed until we overcome issues with performance on Jenkins agents we currently have. It would be great if you create the PR for that as well but it is not going to be merged until mentioned issues are resolved.
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,IS-1318,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwwbz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dbluhm,,,,,,,,,,,"20/Jun/18 11:48 AM;dbluhm;Due to other more pressing tasks, this has been put on hold.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resolve Fedora 28 build issues,IS-689,30022,30020,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dbluhm,dbluhm,dbluhm,08/May/18 5:48 AM,20/Jun/18 11:47 AM,28/Oct/23 2:49 AM,20/Jun/18 11:47 AM,,,,,,,,0,,,,,"Primarily issues related to libsodium >= 1.0.16, which seems to have removed crypto methods that are used in libindy.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz953:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,dbluhm,SteveGoob,,,,,,,,,,"11/May/18 7:37 AM;dbluhm;Libsodium issues are known. I am trying to open up discussion with the community on possible solutions. I'll probably bump this back to the next Sprint.;;;","22/May/18 3:48 AM;SteveGoob;Turns out that libsodium is causing issues with ubuntu 18.04 too. libsodium18 is no longer supported in ubuntu but is required for the libindy package;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Become familiar with indy-sdk nodeJS wrapper and use the nodejs getting-started guide to prepare to make reference agent. ,IS-690,30041,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,dbluhm,mdb,mdb,09/May/18 2:19 AM,24/Jul/19 3:32 AM,28/Oct/23 2:49 AM,24/Jul/19 3:32 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqr7:",,,,,,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dbluhm,mdb,,,,,,,,,,"24/Jul/19 3:32 AM;dbluhm;Old issue; no longer relevant.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
--network parameter of read_ledger doesn't work,IS-691,30068,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,ozheregelya,ozheregelya,10/May/18 1:45 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"Steps to Reproduce:
1. Setup the pool with 'sandbox' network in config and write some txns.
2. Run `sudo su - indy -c ""read_ledger --type domain --network sandbox""`.
=> Read_ledger works fine, sandbox domain ledger is shown.
3. Run `sudo su - indy -c ""read_ledger --type domain --count --network live""`.
=> Sandbox domain ledger is shown.
Expected: error should be shown.

4. Stop indy-node, rename `/var/lib/indy/sandbox` to `/var/lib/indy/live`.
5. Run `sudo su - indy -c ""read_ledger --type domain --count --network live""`.
=> 
{code:java}
root@fef6dd9bf54e:/var/lib/indy# sudo su - indy -c ""read_ledger --type domain --network live""
Traceback (most recent call last):
File ""/usr/local/bin/read_ledger"", line 161, in <module>
ledger_data_dir = get_ledger_dir(args.node_name, args.client_name, args.network)
File ""/usr/local/bin/read_ledger"", line 75, in get_ledger_dir
dirs = os.listdir(config_helper.ledger_data_dir)
FileNotFoundError: [Errno 2] No such file or directory: '/var/lib/indy/sandbox/data'
 
{code}
Actual Results:
Read_ledger works only with network specified in indy_config.py.

Expected Results:
It should work with network specified in --network parameter (ideally, value from indy_config.py should be used as default value of --network parameter if it is not specified), or --network parameter should be removed from script parameters.",indy-node 1.3.405,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz9f3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ozheregelya,,,,,,,,,,,"10/May/18 1:45 AM;ozheregelya;Ticket was created by mistake in wrong project.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong URL provided for Jupiter in Getting Started,IS-692,30078,,Bug,To Develop,IS,Indy SDK,software,resplin,,,High,,,ozheregelya,ozheregelya,10/May/18 5:41 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"Environment:
libindy 1.4.0
{noformat}
me@me-VirtualBox:~/indy-sdk$ dpkg -l | grep docker
ii docker-compose 1.8.0-2~16.04.1 all Punctual, lightweight development environments using Docker
ii docker-engine 17.05.0~ce-0~ubuntu-xenial amd64 Docker: the open-source application container engine
ii python-docker 1.9.0-1~16.04.1 all Python wrapper to access docker.io's control socket
ii python-dockerpty 0.4.1-1~16.04.1 all Pseudo-tty handler for docker Python client (Python 2.x){noformat}
Steps to Reproduce: 
1. Clone indy-sdk, and navigate to doc/getting-started/
2. Run command `sudo docker-compose up` 

Actual Results:
{code:java}
Creating indy_pool
Creating getting_started
Attaching to indy_pool, getting_started
indy_pool | 2018-05-09 17:12:23,300 CRIT Set uid to user 1000
getting_started | [I 17:12:23.915 NotebookApp] Writing notebook server cookie secret to /home/indy/.local/share/jupyter/runtime/notebook_cookie_secret
getting_started | [I 17:12:24.136 NotebookApp] Serving notebooks from local directory: /home/indy
getting_started | [I 17:12:24.136 NotebookApp] 0 active kernels
getting_started | [I 17:12:24.136 NotebookApp] The Jupyter Notebook is running at:
getting_started | [I 17:12:24.136 NotebookApp] http://b50bcde6227e:8888/?token=b074d4ff0e8f90fdfb39f02a923950fb7d16a101c2ae55cc
getting_started | [I 17:12:24.137 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
getting_started | [W 17:12:24.137 NotebookApp] No web browser found: could not locate runnable browser.
getting_started | [C 17:12:24.137 NotebookApp] 
getting_started | 
getting_started | Copy/paste this URL into your browser when you connect for the first time,
getting_started | to login with a token:
getting_started | http://b50bcde6227e:8888/?token=b074d4ff0e8f90fdfb39f02a923950fb7d16a101c2ae55cc&token=b074d4ff0e8f90fdfb39f02a923950fb7d16a101c2ae55cc{code}
Expected Results:
0.0.0.0 should be in URL instead of container ID.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz9gv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,ozheregelya,,,,,,,,,,"10/May/18 4:55 PM;gudkov;[~ozheregelya] Have you tried to open this url?;;;","10/May/18 11:49 PM;ozheregelya;Yes. It doesn't work as is, but it works after replacing of container ID with 0.0.0.0 or 127.0.0.1.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Payments API: Better error handling in Payments API,IS-693,30092,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,gudkov,gudkov,10/May/18 8:48 PM,21/May/18 10:01 PM,28/Oct/23 2:49 AM,21/May/18 9:37 PM,,,1.5,,,,,0,,,,,"We discussed that some error cases must be checked on libindy level (not on pluggin level):

- Payment method consistency
- Inputs and outputs aren't empty
- Inputs and outputs are unique
- Outputs amount is less than inputs amount

We also need define error codes for:

- No PA key in the wallet
- Insufficient funds for fees",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz9mf:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,KitHat,,,,,,,,,,"11/May/18 10:16 PM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/745;;;","18/May/18 1:30 AM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/745
Build version: master-515;;;","21/May/18 9:37 PM;gudkov;Implementation seems ok for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Payments CLI: Better error handling in CLI payments commands,IS-694,30093,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,10/May/18 8:59 PM,31/May/18 10:36 PM,28/Oct/23 2:49 AM,31/May/18 9:48 PM,,,1.5,,,,,0,,,,,CLI should differentiate all payments related errors. See IS-694 results to get errors list,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-721,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzzc5r:",,,,,,EV 18.10 Stability and VC,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"23/May/18 2:10 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/780;;;","23/May/18 5:42 PM;Artemkaaas;Build version: master 527 ;;;","26/May/18 12:12 AM;zhigunenko.dsr;*Environment:*
 indy-cli 1.4.0-530 (both Win and Ubuntu)
 libnullpay 1.4.0-530 (both Win and Ubuntu)

*Additional error messages:*
 * _Plugin has not been loaded_ - successfully received
 * _No method were scraped or more than one were scraped (payment)_ - successfully received
 * _Invalid format of command params (payment)_ - successfully received
 * _Invalid format of Fees: Amount must be integer_ - successfully received
 * _Invalid format of Inputs: Amount must be integer_ - successfully received
 * _Invalid format of Outputs: Amount must be integer_ - successfully received

*Error codes:*
 _WalletInvalidHandle = 200_ - error cannot be obtained
 _WalletTypeAlreadyRegisteredError = 202_ - error cannot be obtained
 _WalletNotFoundError = 204_ - successfully received
 _WalletIncompatiblePoolError = 205_ - error cannot be obtained (current pool closed and corresponding pool opened)
 _WalletAlreadyOpenedError_ = 206 - error cannot be obtained (wallet closed and reopened)
 _WalletAccessFailed = 207_ - successfully received
 _DidAlreadyExistsError = 600_ - error cannot be obtained
 _PaymentUnknownMethodError = 700_ - successfully received
 _PaymentIncompatibleMethodsError = 701_ - error cannot be obtained
 _PaymentInsufficientFundsError = 702_ - successfully received
 _Unknown UTXO_ - {color:#FF0000}error cannot be obtained (link between utxo and wallet is not checked now){color}

*Existing errors:*
 * _Connect to unknown pool_ - {color:#ff0000}_Indy SDK error occurred PoolLedgerNotCreatedError_ instead of human-readable message{color} (moved to IS-721)
 * _Open unknown wallet_ - corresponding error;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Libnullpay: libnulpay should provide experience similar to real payments system,IS-695,30094,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,10/May/18 9:18 PM,26/May/18 12:46 AM,28/Oct/23 2:49 AM,25/May/18 9:28 PM,,,1.5,,,,,0,,,,,Currently libnullpay,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-723,IS-724,IS-726,IS-727,IS-728,IS-729,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzwsrj:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,gudkov,KitHat,zhigunenko.dsr,,,,,,,,,"23/May/18 5:47 PM;KitHat;Implemented in PRs:
https://github.com/hyperledger/indy-sdk/pull/780
https://github.com/hyperledger/indy-sdk/pull/787;;;","24/May/18 4:32 PM;KitHat;Build version: master-529;;;","25/May/18 8:30 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0-530 (both Win and Ubuntu)
libnullpay 1.4.0-530 (both Win and Ubuntu)

*Inconsistencies in libnullpay and CLI:*
-1) _payment_address_ as parameter and _payment-address_ as command- Expected behaviour
2) current functionality cannot match link between NYM and internal constant 1 (from _constants.rs_) when user set or get fee (moved to IS-723)
{code}
Examples:
	ledger set-fees-prepare payment_method=sov fees=NYM:100,ATTRIB:200
{code}
3) fee can be set below zero - if it is valid case, some warning message still needed (Moved to IS-724
-4) no role restrictions for fee setting- It should be checked on ledger side
5) connected pool is not required for fee setting 
6) connected pool is not required for token emission
7) token emission has nothing to do with multi-signature (two separate commands, UTXO added to addresses right after emission transaction)
8) connected pool is not required for multi-signature
5-8 are moved to IS-728
9) In _ledger mint-prepare outputs=_ amount can be set below zero, but there is no warning/error message. UTXO with negative amount was not created (moved to IS-725)
-10) Double send to single payment address during single mint-prepare transaction has unclear default error message. On the other hand it's possible to send mint-prepare to the same address many times- For now it is expected. We already have a ticket about custom error messages support
11) user can use input UTXO with amount lower than transaction fee requires (moved to IS-726)
-12) ledger payment inputs - amount can be set below zero- Recheck
-13) ledger payment - *;* separator available in inputs, not in outputs- Recheck
14) ledger payment - there is no local check that UTXO from input is related to wallet (IS-727)
-15) double UTXO send in the same payment has unclear default error message- Expected behaviour
-16) double usage of the same adresses in payment outputs has unclear default error message- Expected behaviour
-17) there is no mechanism to fee withdrawal if during transaction user doesn't set input/output (no default wallet or something else)- Up to ledger
-18) ledger nym with outputs bigger than inputs marked as sent without any error (in fact tokens weren't moved)- Recheck
-19) unknown behavior of plugin when pool in _read-only_ mode (unable to reproduce sutiation now)- Not in scope of tested tickets
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Payment Interface: Windows packages for libnullpay,IS-696,30102,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,10/May/18 11:30 PM,24/May/18 7:23 PM,28/Oct/23 2:49 AM,24/May/18 7:23 PM,,,1.5,,,,,0,,,,,"As Indy Developer i need libnullpay to be available as a Windows package.

*Acceptance Criteria*
* Package build script is written
* Package build script is integrated to CI
* Package can be successfully installed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz9kn:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"17/May/18 9:07 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/765;;;","23/May/18 5:42 PM;Artemkaaas;Build version: master 527 ;;;","24/May/18 7:23 PM;zhigunenko.dsr;tested on _libnullpay 0.1.0-529_;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Payment Interface: Ubuntu packages for libnullpay,IS-697,30103,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,10/May/18 11:30 PM,24/May/18 5:45 PM,28/Oct/23 2:49 AM,24/May/18 5:45 PM,,,1.5,,,,,0,,,,,"As Indy Developer i need libnullpay to be available as a Ubuntu package.

*Acceptance Criteria*
* Package build script is written
* Package build script is integrated to CI
* Package can be successfully installed
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz9kv:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"17/May/18 9:07 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/765;;;","24/May/18 12:38 AM;zhigunenko.dsr;*Environment:*
libnullpay 0.1.0~527

*Actual results:*
deb package is not contains libnullpay.so;;;","24/May/18 5:45 PM;zhigunenko.dsr;Fixed in 0.1.0~529;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Payment Interface: Payment tests should be based on mocks instead of libnullpay,IS-698,30133,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,gudkov,gudkov,11/May/18 6:50 PM,21/May/18 9:40 PM,28/Oct/23 2:49 AM,21/May/18 9:40 PM,,,1.5,,,,,0,,,,,"Currently we mix 2 concepts in libnullpay:

1. Behavior that emulates real payment system
2. Mocks

This solutions causes some technical and dev-UX problems:

- Mixing multiple conceptions
- Non-obvious for developers
- Cyclic dependencies
- Over-complicated builds

We discussed the following solution:

1. Remove mocks functionality from libnullpay
2. Make libnullpay dedicated top level artifact
3. Move mocks to libindy tests
4. Adopt tests to use mocks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzz9rb:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,KitHat,,,,,,,,,,"14/May/18 8:31 PM;KitHat;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/752;;;","18/May/18 1:31 AM;KitHat;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/752
Build version: master-515;;;","21/May/18 9:40 PM;gudkov;Implementation seems ok for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"Become literate with ideas in, collect resources for, and make a plan for getting the CII badge",IS-699,30146,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,SteveGoob,SteveGoob,SteveGoob,12/May/18 3:08 AM,12/Jun/18 5:09 AM,28/Oct/23 2:49 AM,12/Jun/18 5:09 AM,,,,,,,,0,,,,,"Link to the google doc for the status of progress towards the badge

https://docs.google.com/spreadsheets/d/1-XYNH2ZZkkHSUEFH-lKy_78WdicdZ_WBs2ufnWmNQBw/edit?usp=sharing",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz9xz:",,,,,,SovrinFoundation 18.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,SteveGoob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Filesystem paths need to be configurable,IS-700,30199,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,lodo1995,lodo1995,15/May/18 6:49 PM,15/Aug/19 2:45 PM,28/Oct/23 2:49 AM,15/Aug/19 2:45 PM,,,,,,,,0,,,,,"h2. Problem statement

Currently the paths where configurations and wallets are searched for and saved to are hard-coded in {{EnvironmentUtils::indy_home_path}} and similar functions.
h2. Possible use cases
 # Some of my wallets need to reside outside my user folder, for the following possible reasons:
 ## I need to keep them in an external storage medium (e.g. USB key) for security and/or portability
 ## I need to share them with other users (so put them in a folder shared with other users)
 # My filesystem does not have that hard-coded path (e.g. Android)

Currently for use case 1 I need to mount the external/shared directory into the user home folder, while for use case 2 I need to clone the repo, change the hardcoded paths and recompile everything.
h2. Proposed solution 1

It would be better to have the following system to set the indy home path:
 # An API (e.g. {{indy_set_home_path(const char*)}}); if this API has not been called yet when the path is needed, then
 # An environment variable (e.g. {{INDY_HOME_PATH}}); if this variable is not set then
 # A default system-specific path (as implemented now).

It would be even better to have the above system available at finer granularity, so that {{EnvironmentUtils::<whatever>_home_path}} (where {{<whatever>}} is currently either wallet or pool) can be controlled in the following ways:
 # An API (e.g. {{indy_set_<whatever>_path(const char*)}}); if this API has not been called yet when the path is needed, then
 # An environment variable (e.g. {{INDY_<WHATEVER>_PATH}}); if this variable is not set then
 # The current default {{<EnvironmentUtils::indy_home_path>/<whatever>}}, where {{EnvironmentUtils::indy_home_path}} can be controlled as explained above.

If this is to be implemented, the ability to set the temporary directory in the same way as explained above for the home directory would make the feature more complete, but is arguably less useful in practical scenarios.
h2. Proposed solution 2 (just a sketch, based on the wallet storage proposal)

Filesystem management should not be done by {{libindy}}. Based on the single responsibility principle, this is outside its scope. The storage layer (which is controlled by the application) should take care of this. Thus, when creating a wallet, {{libindy}} should just ask the storage layer to create a wallet, and not store anything by itself. When listing wallets, {{libindy}} should ask all registered storage handlers to list the wallets they manage, and not look anything up by itself. And so on. In this way, storage layers would be responsible for all filesystem accesses, abstracting the filesystem away from libindy.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-781,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwvvb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,faisal00813,gudkov,lodo1995,,,,,,,,"31/May/18 6:59 PM;gudkov;[~lodo1995] What if we just add INDY_HOME env variable that will be checked first in EnvironmentUtils::indy_home_path. It can solve Android problem without big expenses for introducing new API and all wrappers update. API for configuration is also good idea, but it will require more time to be aligned and implemented.;;;","31/May/18 7:33 PM;lodo1995;[~gudkov] It wouldn't really solve the Android issue, as official support for modifying environment variables has only been added with API level 21. Apparently there is a hidden API the works from level 18. For lower levels, as far as I know, one must resort to other unreliable hacks. Anyway, I now think that whatever solution is to be implemented, it should not be a configuration of libindy itself, but a configuration of the storage layer, which should handle all filesystem communication on behalf of libindy. In short, I now think that the second approach would be cleaner in terms of modularization and pluggability.;;;","04/Jul/18 4:51 PM;faisal00813;[~gudkov] While I agree with your idea of using the `INDY_HOME ` variable for storing the path, this would not work completely in the scenario in Android where we have multiple apps on same device using libindy and each app writes config to the same folder. This will be a leakage problem.
I like the second proposal by [~lodo1995] where file-system responsibility is delegated to another layer/module and also acknowledge that it will be a big change.;;;","04/Jul/18 6:34 PM;gudkov;[~faisal00813] [~lodo1995]  This issue will be solved in libindy 1.6 as part of https://jira.hyperledger.org/browse/IS-781

Default wallet storage will provide ""path"" parameter that points to root wallets directory. Also it corresponds the idea of ""delegated to another layer/module"" as wallet storage will be completely responsible on wallet data location.;;;","15/Aug/19 2:44 PM;Artemkaaas;The issue was done in the scope of IS-781;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Credential filtering doesn't work,IS-701,30425,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sklump,Artemkaaas,Artemkaaas,21/May/18 4:49 PM,24/May/18 8:04 PM,28/Oct/23 2:49 AM,24/May/18 8:04 PM,,,,,,,,0,,,,,"[~sklump] reported in RocketChat the following issue:
 Hi folks, I notice that the filter doesn't work in **anoncreds.prover_get_credentials()**. Passing no filter works great - all creds come back. However, in the test code, after adding Alex, the following code returns an empty list.
{code:java}
filt = json.dumps({'schema_name': 'gvt', 'schema_version': '1.0'}) gvt_creds = json.loads(await anoncreds.prover_get_credentials(prover_wallet_handle, filt)) print('Government creds: {}'.format(ppjson(gvt_creds)))
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz9l3:",,,,,,EV 18.10 Stability and VC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,sklump,,,,,,,,,"21/May/18 4:52 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/774;;;","21/May/18 10:11 PM;Artemkaaas;Build version: master 522;;;","23/May/18 7:46 PM;gudkov;[~sklump] Are you satisfied with this fix?;;;","23/May/18 9:19 PM;sklump;[~gudkov] It looks good to me, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
INDY CLI Payment tests fail on Amazon Linux,IS-702,30432,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,Artemkaaas,Artemkaaas,21/May/18 8:34 PM,29/Jun/18 5:04 AM,28/Oct/23 2:49 AM,28/Jun/18 4:11 PM,,,,,,,,0,,,,,"Indy CLI tests fail after loading of Nullpay plugin
{code:java}
running 128 tests
test command_executor::tests::_trim_quites_works ... ok
test command_executor::tests::_unescape_works ... ok
test command_executor::tests::execute_works ... ok
test commands::common::tests::load::load_works ...  INFO|indy::commands                |                src/commands/mod.rs:130 | PaymentsCommand command received
TRACE|indy::commands::payments      |           src/commands/payments.rs:211 | register_method >>> type_: ""null"", methods: PaymentsMethod { create_address: 0x7f75de77c090, add_request_fees: 0x7f75de797730, parse_response_with_fees: 0x7f75de775920, build_get_utxo_request: 0x7f75de78cef0, parse_get_utxo_response: 0x7f75de7a8bc0, build_payment_req: 0x7f75de7a3bb0, parse_payment_response: 0x7f75de7888e0, build_mint_req: 0x7f75de7a6cf0, build_set_txn_fees_req: 0x7f75de784750, build_get_txn_fees_req: 0x7f75de78d880, parse_get_txn_fees_response: 0x7f75de7a64e0 }
TRACE|indy::commands::payments      |           src/commands/payments.rs:216 | register_method << res: Ok(())
ok
test commands::did::tests::did_list::list_works ... error: process didn't exit successfully: `/var/lib/jenkins/workspace/Indy_SDK_CI_PR-767-G5DGNUD37GXVWDTBXUYRNISRQDEQOHKYR6XD3ODIKLHMJIDEKPGQ/cli/target/debug/deps/indy_cli-31aafbfd830b270f` (signal: 11, SIGSEGV: invalid memory reference)

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze1b:",,,,,,EV 18.12 Release New Wallet,EV 18.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,sergey.minaev,,,,,,,,,"26/Jun/18 7:17 PM;sergey.minaev;https://github.com/nagisa/rust_libloading/issues/41 describes similar scenario. Type of dltest library (used in sample from the issue) is dylib and after changing to cdylib the issue is not reproduced. But if we complicate dltest a bit (e.g. add println) - same problem appears again.;;;","27/Jun/18 12:13 AM;sergey.minaev;PR with fix https://github.com/hyperledger/indy-sdk/pull/909;;;","27/Jun/18 7:37 PM;sergey.minaev;Fix version: 1.4.0 master 607;;;","28/Jun/18 4:11 PM;gudkov;Tests pass for now and CI build is re-stored.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Performance and concurency,IS-703,30440,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,21/May/18 10:36 PM,08/Oct/19 11:14 PM,28/Oct/23 2:49 AM,08/Oct/19 11:14 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-6,,Performance,Done,,,,,,,,"1|hzy3yv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance: libindy should re-request only missed catch-up chunks,IS-704,30441,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,21/May/18 10:56 PM,06/Jul/18 10:22 PM,28/Oct/23 2:49 AM,06/Jul/18 10:22 PM,,,1.6.0,,,,,0,,,,,"*Task Overview*
For the moment if there is no answer to some catch-up requests libindy just blacklists corresponded nodes and starts catch-up form scratch, but with reduced amount of nodes (request bigger chunks). It is obviously can cause multiple requests to all nodes during catch-up. 

It will be much more efficient to re-request only missed catch-up chunks.

*Acceptance Criteria*
* Corresponded code is written
* Integration tests are written and passed
* Code is merged and master build with the changes is issued


Note:  It can be efficient to implement together with IS-570",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-703,,,,,,,,,,"1|hzzbdr:",,,,,,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"29/Jun/18 5:30 PM;sergey.minaev;For current moment we decide to change SDK behavior in catch-up process:
client will try to get all transactions from single node, if the request is failed, client will re-send it to the next one.
Node ledger is enough small now and such catch-up reply is fit into 1 reply from the Node.
As we will have multiply clients at the same time for real network, this approach will reduce global load for nodes.;;;","29/Jun/18 5:51 PM;sergey.minaev;PR https://github.com/hyperledger/indy-sdk/pull/835
contains new behavior ;;;","06/Jul/18 10:22 PM;gudkov;Functionality is implemented, tested and now present in feature/pool-connections branch. It will be merged together with IS-704;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance: libindy should close pool sockets if connection is unused,IS-705,30443,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ozheregelya,gudkov,gudkov,21/May/18 11:04 PM,26/Jul/18 6:18 PM,28/Oct/23 2:49 AM,19/Jul/18 2:39 AM,,,1.6.0,,,,,0,,,,,"*Task Overview*
For the moment after calling indy_pool_open libindy keeps all Nodes sockets open until calling indy_pool_close. The most of existing apps keep pool opened, but send transactions very rarely. 

It will cause keeping unnecessary connections on Indy Pool side. We need to close sockets if there are no requests to the pool. Also it can be good to don't perform to the whole pool is request allows getting StateProof.

Exact behavior must be defined as design part of this task.

*Acceptance Criteria*
* Design is done (exact behavior is defined)
* Corresponded code is written
* Integration tests are written and passed
* Code is merged and master build with the changes is issued",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-67,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-703,,,,,,,,,,"1|hzwuzj:",,,,,,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,EV 18.13,EV 18.14,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,gudkov,ozheregelya,sergey.minaev,,,,,,,,,"05/Jun/18 11:30 PM;gudkov;There is proposal to changes of pool connection logic in libindy to avoid unnecessary opened connections. https://github.com/hyperledger/indy-sdk/pull/838;;;","03/Jul/18 11:09 PM;sergey.minaev;PR with fix https://github.com/hyperledger/indy-sdk/pull/920;;;","11/Jul/18 9:50 PM;sergey.minaev;Build version 1.5.0 master 619;;;","11/Jul/18 9:55 PM;sergey.minaev;Recommendation for QA:
- in addition for new functionality testing, maximal testing for all network-related functionality is appreciated: different type of requests, network and pool problems simulation, etc;;;","18/Jul/18 11:40 PM;ozheregelya;*Environment:*
 indy-node 1.4.504
 libindy 1.5.0~626

*Steps to Validate:*
 1. Run indy-cli with enabled logging, make sure that pool connections removing works.
 2. Send requests of all available types.
 3. Run the load test.
 4. Run the traffic_shaping.sh on the nodes and run load test.
 5. Try to write txns when the pool is out of consensus.
 6. Check the indy-cli behavior when the pool size is changed.
7. Check the pool connect / pool disconnect commands.

*Actual Results:*
 Pool connections are removed after expiration. Regression testing have not shown any problems.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Payments API: Support of StateProofs for custom transactions,IS-706,30445,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,21/May/18 11:21 PM,08/Jun/18 9:48 PM,28/Oct/23 2:49 AM,07/Jun/18 11:54 PM,,,1.6.0,,,,,0,,,,,"*Task Overview*
Libindy requires custom code to handle StateProofs for each Node request.

Payments transactions will require StateProofs, but will be unknown for libindy. So we need to be able to plug code that handles StateProofs to libindy.

Exact behavior must be defined as design part of this task.

*Acceptance Criteria*
* Design is done (exact behavior is defined)
* Corresponded code is written
* Integration tests are written and passed
* Code is merged and master build with the changes is issued",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzzbef:",,,,,,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"29/May/18 7:05 PM;sergey.minaev;Design PR https://github.com/hyperledger/indy-sdk/pull/807/files;;;","07/Jun/18 9:33 PM;sergey.minaev;Implementation PR
https://github.com/hyperledger/indy-sdk/pull/832;;;","07/Jun/18 9:34 PM;sergey.minaev;Expected build version: 1.4.0 558
No specific manual testing required for functionality.
Only documentation (design and API description) check expected from QA;;;","07/Jun/18 11:54 PM;gudkov;I am ok with provided solution. It solves the problem.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Create checks for warnings in our CI for CII badge,IS-707,30449,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,SteveGoob,SteveGoob,SteveGoob,22/May/18 2:51 AM,30/Jun/18 7:26 AM,28/Oct/23 2:49 AM,30/Jun/18 7:26 AM,,,,,,,,0,,,,,"The CII badge requires that we address all warnings from in the compilation of our code. We should update our CI to check for that.

Follow up: Figure out where document this. Currently our only documentation on how to make a PR is in indy-node",,,,,,,,,,,,,,,IS-739,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-48,,,,,,,,,,"1|hzww6n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,SteveGoob,,,,,,,,,,,"25/May/18 2:54 AM;SteveGoob;After some searching, I found [this|https://users.rust-lang.org/t/how-to-fail-a-build-with-warnings/2687]. Specifically,
{code:none}
#![cfg_attr(feature = ""strict"", deny(warnings))]
{code}
 

The idea of using a rust feature to fail on warnings would be nice, because it would be opt in and enabled by
{code:none}
cargo build --features strict
{code}
 

However, maybe we don't want to fail on all warnings by default... see [here|https://github.com/rust-unofficial/patterns/blob/master/anti_patterns/deny-warnings.md];;;","26/May/18 2:43 AM;SteveGoob;After speaking with Nathan, we decided it would be a better idea to be more heavy-handed with our fatal warnings initially, and scale back as needed. This is the current plan.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crash while consistency proof include empty 'proof' and invalid root_hash,IS-708,30531,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,anikitinDSR,anikitinDSR,23/May/18 9:45 PM,10/Aug/18 8:16 PM,28/Oct/23 2:49 AM,10/Aug/18 8:16 PM,,,1.6.2,,,,,0,,,,,"Thread with pool handler unexpective closed, when node send CatchupReply with end==catchUpTill (last transaction for cathup) with empty ""proof"" and wrong root_hash.

file:
src/services/ledger/merkletree/mod.rs

stack backtrace:
   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace
             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49
   1: std::sys_common::backtrace::_print
             at libstd/sys_common/backtrace.rs:71
   2: std::panicking::default_hook::{{closure}}
             at libstd/sys_common/backtrace.rs:59
             at libstd/panicking.rs:380
   3: std::panicking::default_hook
             at libstd/panicking.rs:396
   4: std::panicking::rust_panic_with_hook
             at libstd/panicking.rs:576
   5: std::panicking::begin_panic
             at libstd/panicking.rs:537
   6: std::panicking::begin_panic_fmt
             at libstd/panicking.rs:521
   7: rust_begin_unwind
             at libstd/panicking.rs:497
   8: core::panicking::panic_fmt
             at libcore/panicking.rs:71
   9: core::panicking::panic
             at libcore/panicking.rs:51
  10: <core::option::Option<T>>::unwrap
             at /checkout/src/libcore/macros.rs:20
  11: indy::services::ledger::merkletree::<impl indy::services::ledger::merkletree::merkletree::MerkleTree>::consistency_proof
             at src/services/ledger/merkletree/mod.rs:94
  12: indy::services::pool::catchup::CatchupHandler::check_cons_proofs
             at src/services/pool/catchup.rs:285
  13: indy::services::pool::catchup::CatchupHandler::catchup_step
             at src/services/pool/catchup.rs:256
  14: indy::services::pool::catchup::CatchupHandler::process_catchup_rep
             at src/services/pool/catchup.rs:217
  15: indy::services::pool::catchup::CatchupHandler::process_msg
             at src/services/pool/catchup.rs:97
  16: indy::services::pool::PoolWorkerHandler::process_msg
             at src/services/pool/mod.rs:83
  17: indy::services::pool::PoolWorker::process_actions
             at src/services/pool/mod.rs:265
  18: indy::services::pool::PoolWorker::_run
             at src/services/pool/mod.rs:245
  19: indy::services::pool::PoolWorker::run
             at src/services/pool/mod.rs:228
  20: indy::services::pool::Pool::new::{{closure}}
             at src/services/pool/mod.rs:430
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 9:54 PM;anikitinDSR;failed_pool_refresh_with_rust_log.log;https://jira.hyperledger.org/secure/attachment/15000/failed_pool_refresh_with_rust_log.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjgn:",,,,,,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,anikitinDSR,Artemkaaas,gudkov,sergey.minaev,zhigunenko.dsr,,,,,,,"01/Jun/18 9:16 PM;gudkov;[~anikitinDSR] What should be expected behavior here?;;;","07/Aug/18 9:47 PM;Artemkaaas;Changes: replaced usages of `unwrap` on `unwrap_opt_or_return`
PR: https://github.com/hyperledger/indy-sdk/pull/1045;;;","08/Aug/18 9:24 PM;sergey.minaev;Will be available in nearest build 1.6.1 master 690 (or newest) ;;;","10/Aug/18 8:16 PM;zhigunenko.dsr;*Actual results:*
* Relevant unit test has been added;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
NodeJS Wrapper: Merge NodeJS wrapper CI PR,IS-709,30578,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,24/May/18 8:42 PM,05/Jun/18 2:29 AM,28/Oct/23 2:49 AM,05/Jun/18 12:58 AM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-271,,,,,,,,,,"1|hzzc4n:",,,,,,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"04/Jun/18 8:44 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/830;;;","05/Jun/18 12:21 AM;Artemkaaas;PR has been merged into master branch. From that moment NodeJs integration tests run as part of Libindy CI pipeline on Ubuntu and Amozon Linux;;;","05/Jun/18 12:58 AM;gudkov;CI performs this checking, solution looks ok for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
NodeJS Wrapper: Merge NodeJS wrapper CD PR,IS-710,30579,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,24/May/18 8:42 PM,18/Dec/18 8:53 PM,28/Oct/23 2:49 AM,18/Dec/18 7:42 PM,,,1.7.0,,,,,0,,,,,Publish artifacts for LibIndy and LibVCX.,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-942,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-271,,,,,,,,,,"1|i00245:",,,,,,EV 18.25,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,esplinr,gudkov,sergey.minaev,,,,,,,,"07/Jun/18 6:41 PM;gudkov;We still waiting for npm credentials and can't start implementation/testing. So i suggest to move it to the next sprint.;;;","07/Dec/18 11:22 PM;esplinr;The Sovrin Foundation should setup the account credentials as they have been the caretakers of other Indy CI / CD pipeline accounts. cc [~SteveGoob] and [~burdettadam];;;","14/Dec/18 7:38 PM;Artemkaaas;We finally got credentials for NPM. 
Test version `indy-sdk-dev-0` has been published from jenkins pipeline successfully.
PR: https://github.com/hyperledger/indy-sdk/pull/715;;;","18/Dec/18 7:42 PM;sergey.minaev;NodeJS artifacts are available on 
https://www.npmjs.com/package/node-vcx-wrapper
and
https://www.npmjs.com/package/indy-sdk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
NodeJS Wrapper: Merge NodeJS wrapper GSG PR,IS-711,30580,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,24/May/18 8:43 PM,06/Jun/18 9:39 PM,28/Oct/23 2:49 AM,06/Jun/18 7:22 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-271,,,,,,,,,,"1|hzzc47:",,,,,,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"05/Jun/18 9:33 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/834;;;","06/Jun/18 7:22 PM;gudkov;CI works fine, solution looks ok for me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
DKMS: Merge multiple Link Secrets PRs,IS-712,30581,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,24/May/18 8:43 PM,12/Jul/18 9:45 PM,28/Oct/23 2:49 AM,06/Jul/18 11:57 PM,,,1.6.0,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-715,,,,,,,,,,"1|hzwv0f:",,,,,,EV 18.13,EV 18.14,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,sergey.minaev,,,,,,,,,,"06/Jun/18 10:16 PM;sergey.minaev;I think our team is blocked on this ticket. In last discussion the author of PR [~MikeLodder] claims that all libindy tests are passed in his environment, but we got failed tests both on Jenkins and on our local machines. [~Artemkaaas] find potential reason for some tests, but I highly recommend to wait one more confirmation from Mike and got clear vision why behavior in his env vs our (and Jenkins) is different.;;;","06/Jul/18 4:08 PM;gudkov;PR reviewed and ready to merge https://github.com/hyperledger/indy-sdk/pull/927;;;","06/Jul/18 11:58 PM;gudkov;PR merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance: Support of short State Proofs,IS-713,30582,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,24/May/18 8:45 PM,08/Oct/19 11:13 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1397,,,,,,,,,,"1|hzww7b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancement: Hardening,IS-714,30583,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,24/May/18 8:46 PM,06/Jun/18 10:46 PM,28/Oct/23 2:49 AM,06/Jun/18 10:46 PM,,,,,,,,0,,,,,"**Acceptance criteria**

- WalletStorage/WalletService/DefaultStorage/PluggableStorage code is carefully reviewed
- Code quality is corresponds to our standards
- Tests coverage is corresponds to our standards",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-5,,,,,,,,,,"1|hzzc33:",,,,,,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"05/Jun/18 1:01 AM;gudkov;[~Artemkaaas] Could you provide corresonded info for validation?;;;","06/Jun/18 10:46 PM;gudkov;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/822;;;","06/Jun/18 10:46 PM;gudkov;I am ok with current solution;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
DKMS Design,IS-715,30584,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,24/May/18 8:57 PM,08/Oct/19 10:59 PM,28/Oct/23 2:49 AM,20/Sep/19 11:42 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ghx-label-3,,DKMS Design,Done,,,,,,,,"1|hzy3vz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancement: Master key generation,IS-716,30585,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,24/May/18 8:59 PM,04/Jun/18 10:35 PM,28/Oct/23 2:49 AM,04/Jun/18 7:17 PM,,,,,,,,0,,,,,"Wallet key for now can't be generated on application side and we need some way to achieve this. I see the following options:

1. indy_create_wallet() instead of consuming key can consume optional seed and return the key
2. We can add dedicated call indy_create_wallet_key()
3. We can generate the key based on pass phrase

Note that only passphrase support will allow to avoid breaking changes

*Acceptance Criteria*
* Design is done (exact behavior is defined)
* Corresponded code is written
* Integration tests are written and passed
* Code is merged and master build with the changes is issued
* iOS, Java, Python wrappers updated
* Community is requested to update NodeJS and .Net wrappers 
* Documentation is updated",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzzc53:",,,,,,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"24/May/18 9:16 PM;gudkov;Note that we need to decide what team should handle coding and testing.;;;","28/May/18 10:08 PM;Artemkaaas;Implemented in PR: [https://github.com/hyperledger/indy-sdk/pull/799].
Implemented usage of sodium crypto_pwhash_argon2i13 function to convert passphrase into a key

 ;;;","04/Jun/18 6:54 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~547
libindy 1.4.0~547

*Unsuitable keys:*
* single space
* four spaces
* _secured key_ phrase
* 'secured key'
* """"
* \1

*Suitable keys* (wallets are created and opened with these keys):
* 1
* !""№;%:?*()
* ''
* 'aaa'
* ""aaa""
* ""aaa aaa""

* ****
* /1
* $2

*Additional info:*
_rekey=_ also checked;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation: Provide getting started guide about payments,IS-717,30588,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,zhigunenko.dsr,zhigunenko.dsr,24/May/18 10:39 PM,20/Sep/19 11:49 PM,28/Oct/23 2:49 AM,20/Sep/19 11:49 PM,,,,,,,,0,,,,,"As Indy CLI User i need all-in-one document about payments (how to set fees, emit tokens, use payment addresses and make payments during work with ledger)

*Acceptance Criteria*
* document about main principles is exists and has links from main documentation
* document about setup and using fees and payments is exists and has links from main documentation. It can be modification of current GSG or separate document. All commands from _001-cli_ and _007-cli-payments_ must be mentioned
* relevant modification of existed GSG Jupiter book or creation of additional book",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-627,,,,,,,,,,"1|hzwvvj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,esplinr,zhigunenko.dsr,,,,,,,,,,"20/Sep/19 11:48 PM;esplinr;The existing documentation appears to be sufficient for the Indy use cases.

https://github.com/hyperledger/indy-sdk/tree/master/docs/design/004-payment-interface
https://github.com/hyperledger/indy-sdk/tree/master/docs/design/006-cli-plugins
https://github.com/hyperledger/indy-sdk/tree/master/docs/design/007-cli-payments

If we decide we need additional documentation, we'll create a new story.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancement: Plugged storage tests,IS-718,30592,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,24/May/18 11:32 PM,06/Jun/18 10:47 PM,28/Oct/23 2:49 AM,06/Jun/18 10:47 PM,,,,,,,,0,,,,,"We need to provide integration/system tests for plugged storage. 

*Acceptance criteria:*
- Coverage should be the same or better than DefaultWallet tests earlier
- Tests should be integration based on libindy API interface
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzzc3z:",,,,,,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"31/May/18 11:30 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/822;;;","06/Jun/18 10:47 PM;gudkov;I am ok with provided solution;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Separate NACK/REJECT responses handling,IS-719,30625,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MattRaffel,sergey.minaev,sergey.minaev,25/May/18 5:22 PM,18/Jan/19 11:54 PM,28/Oct/23 2:49 AM,18/Jan/19 11:54 PM,,,1.8.0,,,,,0,,,,,"Now libindy put together NACK and REJECT responses. It may results in problem, when some nodes responded with NACK, other part with REJECT. The f+1 (summary) response will be returned as total result, but consensus may not be reached neither on NACK or REJECT",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzwrh8:",,,,,,EV 18.25,Ev 19.01,EV 19.02,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,sergey.minaev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CLI processing ""fee="" parameter incorrectly",IS-720,30626,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,25/May/18 5:26 PM,14/Jun/18 9:55 PM,28/Oct/23 2:49 AM,13/Jun/18 6:59 PM,,,,,,,,0,,,,,"*Steps to reproduce:*
1) create fee record with empty _fee_ parameter
pool(p1):wallet(w1):did(9V2...sq6):indy> ledger set-fees-prepare payment_method=null fees=

*Actual result:*
SET_FEES transaction has been created:
    {""reqId"":1527235095469559795,""identifier"":""9V2igLrNiiLSZHDkiqSsq6"",""operation"":{""type"":""3"",""data"":1},""protocolVersion"":1}

*Expected result:*
""Invalid format of Fees: Amount must be integer"" or other message","indy-cli 1.4.0-530 (both Win and Ubuntu)
libnullpay 1.4.0-530 (both Win and Ubuntu)",,,,,,,,,,,,,,,,,,,,,,,,,,IS-668,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze4f:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,zhigunenko.dsr,,,,,,,,,,"09/Jun/18 3:13 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/859;;;","11/Jun/18 3:42 PM;Artemkaaas;build version: master-565;;;","13/Jun/18 6:58 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~566
indy-node 1.4.451
libnullpay 0.1.0~566

*Steps to Validate:*
1. ledger set-fees-prepare payment_method=null fees=
2. set-fees-prepare payment_method=null fees=0
3. ledger set-fees-prepare payment_method=null fees=0.1
4. ledger set-fees-prepare payment_method=null fees=1
5. ledger set-fees-prepare payment_method=null fees=1:0
6. ledger set-fees-prepare payment_method=null fees=1:1
7. ledger set-fees-prepare payment_method=null fees=1:0.1
8. ledger set-fees-prepare payment_method=null fees=1:null
9. ledger get-fees payment_method=null

*Actual Results:*
* Fees have been set
* All wrong commands cause correct error messages
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Basic error handling is broken,IS-721,30629,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,25/May/18 6:49 PM,14/Jun/18 9:55 PM,28/Oct/23 2:49 AM,13/Jun/18 4:58 PM,,,,,,,,0,,,,,"*Environment:*
indy-cli 1.4.0-530 (both Win and Ubuntu)
libnullpay 1.4.0-530 (both Win and Ubuntu)

*Steps to reproduce:*
1) try to connect to unknown pool
*Expected result:*
""Pool isn't found"" message
*Actual result:*
Indy SDK error occurred PoolLedgerNotCreatedError

Also:
* open wallet
* delete wallet",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-694,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze4n:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,zhigunenko.dsr,,,,,,,,,,"09/Jun/18 12:43 AM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/857;;;","11/Jun/18 3:43 PM;Artemkaaas;build version: master-565;;;","13/Jun/18 4:57 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~566
indy-node 1.4.451

*Steps to Validate:*
1. Connect to unknown pool
2. Open unknown wallet
3. Delete unknown wallet
4. Open wallet with wrong key
5. Delete wallet with wrong key

*Actual Results:*
All actions have return corresponding error messages;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Outputs list is empty"" when negative token amount set in ""ledger payment""",IS-722,30631,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,25/May/18 8:27 PM,18/Jun/18 10:32 PM,28/Oct/23 2:49 AM,18/Jun/18 6:38 PM,,,,,,,,0,,,,,"*Steps to reproduce:*
1) send ledger payment with negative token amount in inputs
2) send ledger payment with negative token amount in outputs
*Actual result:*
Error message ""Outputs list is empty""
*Excpected result:*
Error related to amount value","indy-cli 1.4.0-530 (both Win and Ubuntu)
libnullpay 1.4.0-530 (both Win and Ubuntu)",,,,,,,,,,,,,,,,,,,,,,,,,,IS-669,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze3j:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,zhigunenko.dsr,,,,,,,,,,"09/Jun/18 4:29 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/860;;;","15/Jun/18 3:24 PM;Artemkaaas;Changes: corrected handling of `outputs` parameter
Build version: master-568;;;","15/Jun/18 4:57 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~568
indy-node 1.4.462

*Steps to Reproduce:*
1. Rrepare payment address and UTXO
2. _ledger payment inputs=pay:null:1_DpnG5HwEDOrESBX outputs=(pay:null:DpnG5HwEDOrESBX,1.5)_
*Actual Results:*
""Outputs list is empty""
*Expected Results:*
""Invalid format of Outputs: Amount must be integer and greather then 0""

*Additional Information:*
Basic tests with negative amount and omitted ""amount"" parameter are passed;;;","18/Jun/18 1:28 PM;Artemkaaas;Build version: master- 581;;;","18/Jun/18 6:38 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~581

*Steps to Validate:*
1. Rrepare payment address and UTXO
2. _ledger payment inputs=pay:null:1_DpnG5HwEDOrESBX outputs=(pay:null:DpnG5HwEDOrESBX,1.5)_

*Actual Results:*
""Invalid format of Outputs: Amount must be integer and greather then 0"";;;",,,,,,,,,,,,,,,,,,,,,,,,,
Current functionality cannot match link between transaction type and internal constant,IS-723,30637,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,26/May/18 12:20 AM,07/Aug/18 9:54 PM,28/Oct/23 2:49 AM,07/Aug/18 4:00 PM,,,,,,,,0,,,,,"Current help examples:
{code:java}
Examples:
	ledger set-fees-prepare payment_method=sov fees=NYM:100,ATTRIB:200
{code}
Really working example:
{code:java}
ledger set-fees-prepare payment_method=null fees=1:100
{code}

*Should be handled on CLI level*","indy-cli 1.4.0-530 (both Win and Ubuntu)
libnullpay 1.4.0-530 (both Win and Ubuntu)",,,,,,,,,,,,,,,,,,,,,,,,,,IS-695,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjiv:",,,,,,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,zhigunenko.dsr,,,,,,,,,,"06/Aug/18 3:48 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1038;;;","06/Aug/18 11:38 PM;Artemkaaas;Build-version: master-683

;;;","07/Aug/18 4:00 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.1~684

*Steps to Validate:*
ledger set-fees-prepare payment_method=sov fees=NYM:100,ATTRIB:200
ledger get-fees

*Actual results:*
Fees have been set;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Fee can be set below zero,IS-724,30638,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,26/May/18 12:25 AM,10/Aug/18 4:15 PM,28/Oct/23 2:49 AM,10/Aug/18 4:15 PM,,,,,,,,0,,,,,*Should be handled on payment plugin (libnullpay) level*,"indy-cli 1.4.0-530 (both Win and Ubuntu)
libnullpay 1.4.0-530 (both Win and Ubuntu)",,,,,,,,,,,,,,,,,,,,,,,,,,IS-695,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjhr:",,,,,,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,sergey.minaev,zhigunenko.dsr,,,,,,,,,"08/Aug/18 4:20 PM;Artemkaaas;Fixed in https://github.com/hyperledger/indy-sdk/pull/1050;;;","09/Aug/18 8:19 PM;sergey.minaev;Build version: will be available in the first successful build greater then 1.6.1 master 695;;;","10/Aug/18 4:15 PM;zhigunenko.dsr;*Environment:*
1.6.1~701

*Steps to Validate:*
1) set first fee below zero
2) set not first fee below zero
3) set fee equal zero
4) set fee above zero
5) set float fee 

*Actual results:*
Invalid format of Fees: Amount must greater or equal zero;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
ledger mint-prepare outputs= amount can be set below zero,IS-725,30639,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,26/May/18 12:29 AM,07/Aug/18 9:54 PM,28/Oct/23 2:49 AM,07/Aug/18 4:29 PM,,,,,,,,0,TShirt_S,,,,"For single address in output it raised corresponding error, but if negative amount set for second or following address in list it's ignored

UTXO with negative amount was not created","indy-cli 1.4.0-530 (both Win and Ubuntu)
libnullpay 1.4.0-530 (both Win and Ubuntu)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjin:",,,,,,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,sergey.minaev,zhigunenko.dsr,,,,,,,,,"03/Aug/18 9:23 PM;sergey.minaev;Sounds like there is high probability of CLI parser error, so I would like to increase priority;;;","05/Aug/18 7:09 PM;Artemkaaas;Didn't reproduce on the current master branch.
Added correspondent tests in PR: https://github.com/hyperledger/indy-sdk/pull/1037;;;","07/Aug/18 4:29 PM;zhigunenko.dsr;*Environment:*
 libnullpay 1.6.1~684

 *Steps to Validate:*
 ledger mint-prepare outputs=(pay:null:Je8izSTlHvfet0S,1),(pay:null:Je8izSTlHvfet1S,-1)

*Actual results:*
 _Invalid format of Outputs: Amount must be integer and greater then 0_

*Additional info:*
 _ledger mint-prepare outputs=(pay:null:Je8izSTlHvfet0S,0)_ returns _MINT transaction has been created:_ instead of _Invalid format of Outputs: Amount must be integer and greater then 0_;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
User can use input UTXO with amount lower than transaction fee requires,IS-726,30640,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,26/May/18 12:34 AM,18/Jun/18 10:32 PM,28/Oct/23 2:49 AM,18/Jun/18 10:05 PM,,,,,,,,0,,,,,"*Steps to reproduce:*
1) mint utxo with amount N
2) set fee for NYM equal to (N+1)
3) try send nym and set utxo in input

*Actual results:*
NYM has been written in ledger

*Expected result:*
Error about insufficient funds","indy-cli 1.4.0-530 (both Win and Ubuntu)
libnullpay 1.4.0-530 (both Win and Ubuntu)",,,,,,,,,,,,,,,,,,,,,,,,,,IS-695,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze3r:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"18/Jun/18 1:31 PM;Artemkaaas;Changes: added parsing of responses with fees as a step of processing domain transactions.
Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/865

Build version: master-581;;;","18/Jun/18 6:32 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~581

*Steps to Reproduce:*
1. _pool(p1):wallet(w1):did(V4S...e6f):indy> ledger set-fees-prepare payment_method=null fees=1:251_
{code:java}
SET_FEES transaction has been created:
     {""reqId"":1529313416097674143,""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""type"":""3"",""data"":1,""ledgerId"":1},""protocolVersion"":1}
{code}
2. _pool(p1):wallet(w1):did(V4S...e6f):indy> ledger nym did=V4SGRU86Z58d6TV7PBU111_

*Actual Results:*
Transaction has been written

*Expected Results:*
""Insufficient funds"" error

*Additional Information:*
Also these cases have been checked:
* input UTXO with amount lower than transaction fee - ""Insufficient funds"" error
* input UTXO with amount bigger than transaction fee, but lower than transaction fee and outputs - ""Insufficient funds"" error
* input UTXO with amount bigger than transaction fee and outputs - transaction has been sent;;;","18/Jun/18 9:59 PM;gudkov;[~zhigunenko.dsr] I believe there is no acceptable way to solve this case with libnullpay. We can accept it. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
libnullpay must check relation between input UTXO and current wallet,IS-727,30641,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,26/May/18 12:36 AM,19/Jun/18 9:40 PM,28/Oct/23 2:49 AM,19/Jun/18 12:58 AM,,,,,,,,0,,,,,"Acceptance criteria:
* Added checking that each UTXO belongs to one of the payment address in current wallet.
* Transaction mustn't been sent to ledger if the condition is violated 
* Added corresponding error handler (unknown UTXO)",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-695,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze33:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,zhigunenko.dsr,,,,,,,,,,"13/Jun/18 11:01 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/869;;;","18/Jun/18 1:25 PM;Artemkaaas;Changes: Added check that utxo belongs any of payment address in the current wallet
Build version: master - 581;;;","18/Jun/18 5:58 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~581

*Steps to Reproduce:*
1. create wallets A and B
2. open wallet A
3. create payment address
4. mint some utxo
5. open wallet B
6. create payment address
7. mint some utxo
8. send _ledger payment_ transaction with utxo from wallet A

*Actual Results:*
Indy SDK error occurred CommonInvalidState
*Expected Results:*
Error message ""utxo is not according the opened wallet""

*Additional Information:*
These cases are also checked:
nonexistent utxo - ""insufficient funds"" error
nonexistent utxo and existent utxo, sum of existent utxos is lower than outputs - ""insufficient funds"" error
nonexistent utxo and existent utxo, sum of existent utxos is bigger than outputs - transaction has been written utxo)
;;;","18/Jun/18 10:26 PM;Artemkaaas;Build version: master - 586;;;","19/Jun/18 12:58 AM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~586

*Steps to Validate:*
1. create wallets A and B
2. open wallet A
3. create payment address
4. mint some utxo
5. open wallet B
6. create payment address
7. mint some utxo
8. send _ledger payment _transaction with utxo from wallet A

*Actual Results:*
_Input not found_;;;",,,,,,,,,,,,,,,,,,,,,,,,,
libnullpay must require connected pool for some actions,IS-728,30642,,Task,Complete,IS,Indy SDK,software,resplin,,,Low,Invalid,,zhigunenko.dsr,zhigunenko.dsr,26/May/18 12:38 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"1) fee setting 
2) token emission
3) multi-signature",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-695,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww5b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,zhigunenko.dsr,,,,,,,,,,"16/Jul/18 11:01 PM;gudkov;[~zhigunenko.dsr] I believe we don't need pool for this operations. Let's discuss and close this as invalid;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
parse_responce_with_fees must be called after add_request_fees,IS-729,30644,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid: Environment Issue,,zhigunenko.dsr,zhigunenko.dsr,26/May/18 12:45 AM,09/Aug/19 8:26 PM,28/Oct/23 2:49 AM,09/Aug/19 8:26 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-695,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzkd3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,zhigunenko.dsr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Running fabric-ca-server that was built with go get command fails,IS-730,30670,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,aambati,aambati,27/May/18 3:04 AM,27/May/18 3:05 AM,28/Oct/23 2:49 AM,27/May/18 3:05 AM,,,,,,,,0,,,,,"Running fabric-ca-server command that was buit using go get command exits with the following error:

""Version is not set for fabric-ca library""

Reproduce steps:
1. export GOPATH=/tmp/fabric
2. go get -u github.com/hyperledger/fabric-ca/cmd/...
2. fabric-ca-server init -b admin:admin",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcvb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,aambati,,,,,,,,,,,"27/May/18 3:05 AM;aambati;sorry , created in wrong project;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Seeds must be used during payment address generation,IS-731,30680,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,zhigunenko.dsr,zhigunenko.dsr,28/May/18 3:50 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"*Steps to reproduce:*
payment-address create payment_method=null seed=123456789a123456789b
*Actual results:*
each execution generate new random address
*Expected results:*
Each execution generate the same payment address (also with handling  when they are generated for the same wallet)","indy-cli 1.4.0-530 (both Win and Ubuntu)
libnullpay 1.4.0-530 (both Win and Ubuntu)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww73:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,zhigunenko.dsr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Eliminate the correlation between pool and wallet,IS-732,30684,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,28/May/18 8:52 PM,16/Jul/18 10:47 PM,28/Oct/23 2:49 AM,16/Jul/18 10:47 PM,,,,,,,,0,,,,,"There is a request from community:

[~danielhardman] eliminate the relationship between wallets and pools. A wallet should be able to hold info from multiple pools, with the DID method prefix guaranteeing uniqueness (that is, we store ""did:sov:abcxyz"", not just ""abcxzy"" as the wallet key.

Let's start discussion. We need to determine scope and provide acceptance criteria first.",,,,,,,,,,,,,,,,,,,,,,,,,IS-772,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzwv13:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,,,,,,,,,,,"16/Jul/18 10:47 PM;gudkov;Duplicate of https://jira.hyperledger.org/browse/IS-772;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Recover changing of wallet credentials,IS-733,30685,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,Artemkaaas,Artemkaaas,28/May/18 10:44 PM,06/Jun/18 12:06 AM,28/Oct/23 2:49 AM,06/Jun/18 12:06 AM,,,,,,,,0,,,,,"The functionality of changing wallet credentials was broken during the implementation of new default wallet storage.
It is required to recover this functionality and delete #[ignore] from the test: '
indy_open_wallet_works_for_changing_credentials'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc4f:",,,,,,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,zhigunenko.dsr,,,,,,,,,,"05/Jun/18 10:04 PM;zhigunenko.dsr;Implemented in https://github.com/hyperledger/indy-sdk/pull/811;;;","06/Jun/18 12:06 AM;zhigunenko.dsr;""rekey="" has been checked on indy-cli 1.4.0~550;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
get-validator info for disconnected node,IS-734,30687,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,28/May/18 11:05 PM,01/Aug/18 10:59 PM,28/Oct/23 2:49 AM,01/Aug/18 10:59 PM,,,1.6.2,,,,,0,,,,,run ledger get-validator info when one node disconnected - there is no message that info is not fetched from node,"*Environment:*
indy-node 1.3.427
indy-plenum 1.2.369
libindy 1.4.0~533
indy-cli 1.4.0~533",,,,,,,,,,,,,,,,,,,,,,,,,,IS-588,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjqn:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,zhigunenko.dsr,,,,,,,,,,"30/Jul/18 9:19 PM;sergey.minaev;Should be fixed from 1.5.0 - master 619. Re-check with latest version please.;;;","01/Aug/18 8:14 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.1~659

*Actual results:*
Unavailable nodes are marked;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
 ledger get-validator for stopped node,IS-735,30688,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,28/May/18 11:09 PM,07/Aug/18 9:54 PM,28/Oct/23 2:49 AM,03/Aug/18 11:28 PM,,,1.6.2,,,,,0,TShirt_S,,,,Run ledger get-validator info when one node stopped - there is no message that info is not fetched from node,"*Environment:*
indy-node 1.3.427
indy-plenum 1.2.369
libindy 1.4.0~533
indy-cli 1.4.0~533",,,,,,,,,,,,,,,,,,,,,,,,,,IS-588,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjjb:",,,,,,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ckochenower,zhigunenko.dsr,,,,,,,,,,"07/Jul/18 7:00 AM;ckochenower;[~zhigunenko.dsr] - I also noticed that on my 10 node cluster that a `ledger get-validator-info` call takes 4 to 6 seconds to return when all 10 nodes are reachable and the indy-node service is running. However, it takes 1 minute and 44 seconds or more (consistently) if even one of the ten nodes is unreachable or the indy-node service is stopped.;;;","03/Aug/18 11:28 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.1~671

*Actual results:*
Stopped node is marked in JSON as ""timeout"";;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
get-validator info for demoted node,IS-736,30689,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,28/May/18 11:14 PM,13/Aug/18 2:24 PM,28/Oct/23 2:49 AM,07/Aug/18 7:32 PM,,,1.6.2,,,,,0,TShirt_S,,,,run ledger get-validator info when one node demoted - info from demoted node is still available,"*Environment:*
indy-node 1.3.427
indy-plenum 1.2.369
libindy 1.4.0~533
indy-cli 1.4.0~533",,,,,,,,,,IS-867,,,,,,,,,,,,,,,,IS-588,,,,,,,,,,,"03/Aug/18 11:33 PM;zhigunenko.dsr;vldtr;https://jira.hyperledger.org/secure/attachment/15453/vldtr",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjh3:",,,,,,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,zhigunenko.dsr,,,,,,,,,,"03/Aug/18 11:33 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.1~671

*Actual results:*
There is no clear way to realize that node is now demoted (See example file [^vldtr]  - it's hard to understand that node6 is different because of demotion)


;;;","06/Aug/18 7:19 PM;Artemkaaas;The recommended steps to validate:
* Connect to pool
* Get validator info (check node presents)
* Demote node
* Disconnect pool
* Connect to pool
* Get validator info (check node absents)

After IS-867 will be done:   use refresh instead of disconnect/connect;;;","07/Aug/18 5:33 PM;Artemkaaas;Build-version: master-684;;;","07/Aug/18 7:32 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.1~684

*Actual results:*
Demoted node hasn't been included in JSON;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancement: Support new libsodium on Ubuntu,IS-737,30699,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,29/May/18 4:53 PM,04/Jun/18 10:34 PM,28/Oct/23 2:49 AM,04/Jun/18 5:22 PM,,,,,,,,0,,,,,"Libsoium 1.0.14 is needed for crypto_pwhash (and xchacha), but only old version is available in Ubuntu 10.04 (our main linux platform for the moment). I suggest the following:

- Add optional sodium_static feature to libindy build. Modify build.rs to try link statically if sodium_static is enabled
- sodium_static can be disabled by default
- Update CI/CD pipelines to install Libsoium 1.0.14 from sources inside of Docker
- Update CI/CD pipelines to build libindy with sodium_static=true
- Modify libindy debian package by removing libsodium dependency (or make it optional)
- Update build instruction for Ubuntu",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc5j:",,,,,,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"30/May/18 11:00 PM;Artemkaaas;Implemented in https://github.com/hyperledger/indy-sdk/pull/806;;;","04/Jun/18 5:22 PM;zhigunenko.dsr;Dependencies have been checked on libindy 1.4.0~547;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to restart pool (with or without datetime parameter),IS-738,30701,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,29/May/18 5:45 PM,14/Jun/18 9:55 PM,28/Oct/23 2:49 AM,13/Jun/18 5:51 PM,,,,,,,,0,,,,,"*Steps to reproduce:*
did new seed=000000000000000000000000Trustee1
did use V4SGRU86Z58d6TV7PBUe6f
ledger pool-restart action=start

*Expected results:*
restart is scheduled or ""no datetime"" error message

*Actual results:*
{code}
TRACE|indy::api::ledger             |                  src/api/ledger.rs:1044| indy_build_pool_restart_request: >>> submitter_did: 0x7fb88cc34240, action: 0x7fb88cc35558, datetime: 0x7fb88cc354b0
TRACE|indy::api::ledger             |                  src/api/ledger.rs:1051| indy_build_pool_restart_request: entities >>> submitter_did: ""V4SGRU86Z58d6TV7PBUe6f"", action: ""start"", datetime: Some("""")
TRACE|indy::api::ledger             |                  src/api/ledger.rs:1068| indy_build_pool_restart_request: <<< res: Success
 INFO|indy::commands                |                src/commands/mod.rs:110 | LedgerCommand command received
 INFO|ledger_command_executor       |             src/commands/ledger.rs:293 | BuildPoolRestartRequest command received
DEBUG|indy::commands::ledger        |             src/commands/ledger.rs:697 | build_pool_restart_request >>> submitter_did: ""V4SGRU86Z58d6TV7PBUe6f"", action: ""start"", datetime: Some("""")
TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:390 | validate_did >>> did: ""V4SGRU86Z58d6TV7PBUe6f""
TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:402 | validate_did <<< res: ()
 INFO|indy::services::ledger        |         src/services/ledger/mod.rs:273 | build_pool_restart >>> identifier: ""V4SGRU86Z58d6TV7PBUe6f"", action ""start"", datetime Some("""")
 INFO|indy::services::ledger        |         src/services/ledger/mod.rs:283 | build_pool_restart <<< request: ""{\""reqId\"":1527582893502521457,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""type\"":\""118\"",\""action\"":\""start\"",\""datetime\"":\""\""},\""protocolVersion\"":1}""
DEBUG|indy::commands::ledger        |             src/commands/ledger.rs:703 | build_pool_config_request  <<< res: ""{\""reqId\"":1527582893502521457,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""type\"":\""118\"",\""action\"":\""start\"",\""datetime\"":\""\""},\""protocolVersion\"":1}""
TRACE|indy::api::ledger             |                  src/api/ledger.rs:1061| indy_build_pool_restart_request: request_json: ""{\""reqId\"":1527582893502521457,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""type\"":\""118\"",\""action\"":\""start\"",\""datetime\"":\""\""},\""protocolVersion\"":1}""
TRACE|indy::api::ledger             |                  src/api/ledger.rs:42  | indy_sign_and_submit_request: >>> pool_handle: 2, wallet_handle: 3, submitter_did: 0x7fb88cc34240, request_json: 0x7fb88c6361e0
TRACE|indy::api::ledger             |                  src/api/ledger.rs:49  | indy_sign_and_submit_request: entities >>> pool_handle: 2, wallet_handle: 3, submitter_did: ""V4SGRU86Z58d6TV7PBUe6f"", request_json: ""{\""reqId\"":1527582893502521457,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""type\"":\""118\"",\""action\"":\""start\"",\""datetime\"":\""\""},\""protocolVersion\"":1}""
TRACE|indy::api::ledger             |                  src/api/ledger.rs:68  | indy_sign_and_submit_request: <<< res: Success
 INFO|indy::commands                |                src/commands/mod.rs:110 | LedgerCommand command received
 INFO|ledger_command_executor       |             src/commands/ledger.rs:202 | SignAndSubmitRequest command received
DEBUG|indy::commands::ledger        |             src/commands/ledger.rs:344 | sign_and_submit_request >>> pool_handle: 2, wallet_handle: 3, submitter_did: ""V4SGRU86Z58d6TV7PBUe6f"", request_json: ""{\""reqId\"":1527582893502521457,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""type\"":\""118\"",\""action\"":\""start\"",\""datetime\"":\""\""},\""protocolVersion\"":1}""
TRACE|indy::commands::ledger        |             src/commands/ledger.rs:360 | _sign_request >>> wallet_handle: 3, submitter_did: ""V4SGRU86Z58d6TV7PBUe6f"", request_json: ""{\""reqId\"":1527582893502521457,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""type\"":\""118\"",\""action\"":\""start\"",\""datetime\"":\""\""},\""protocolVersion\"":1}""
TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:141 | sign >>> my_key: Key { verkey: ""GJ1SzoWzavQYfNL9XkaJdrQejfztN4XqdsiV4ct3LXKL"", signkey: ""xt19s1sp2UZCGhy9rNyb1FtxdKiDGZZPQ4HE7gcnS8BV8xho5wQnCBjgpqBf522RWEYgPDL7rpn9GFz3XXgcaHk"" }, doc: [105, 100, 101, 110, 116, 105, 102, 105, 101, 114, 58, 86, 52, 83, 71, 82, 85, 56, 54, 90, 53, 56, 100, 54, 84, 86, 55, 80, 66, 85, 101, 54, 102, 124, 111, 112, 101, 114, 97, 116, 105, 111, 110, 58, 97, 99, 116, 105, 111, 110, 58, 115, 116, 97, 114, 116, 124, 100, 97, 116, 101, 116, 105, 109, 101, 58, 124, 116, 121, 112, 101, 58, 49, 49, 56, 124, 112, 114, 111, 116, 111, 99, 111, 108, 86, 101, 114, 115, 105, 111, 110, 58, 49, 124, 114, 101, 113, 73, 100, 58, 49, 53, 50, 55, 53, 56, 50, 56, 57, 51, 53, 48, 50, 53, 50, 49, 52, 53, 55]
TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:161 | sign <<< signature: [179, 225, 236, 115, 166, 150, 223, 15, 9, 144, 137, 237, 139, 78, 112, 35, 171, 219, 180, 166, 46, 250, 139, 253, 228, 38, 29, 106, 209, 128, 130, 85, 231, 200, 110, 34, 161, 159, 124, 201, 126, 155, 212, 184, 119, 188, 42, 92, 2, 30, 101, 161, 64, 182, 219, 166, 243, 154, 116, 59, 67, 62, 61, 6]
TRACE|indy::commands::ledger        |             src/commands/ledger.rs:409 | _sign_request <<< res: ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""action\"":\""start\"",\""datetime\"":\""\"",\""type\"":\""118\""},\""protocolVersion\"":1,\""reqId\"":1527582893502521457,\""signature\"":\""4bbPBisaTR78R1QvqAzSJfMB7WSkzWVbsfn7fby4gCgFFXdkw5nnnk7nRUgWgbGT13YMesF4RcEGXmHcpdszKYsw\""}""
DEBUG|indy::commands::ledger        |             src/commands/ledger.rs:418 | submit_request >>> handle: 2, request_json: ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""action\"":\""start\"",\""datetime\"":\""\"",\""type\"":\""118\""},\""protocolVersion\"":1,\""reqId\"":1527582893502521457,\""signature\"":\""4bbPBisaTR78R1QvqAzSJfMB7WSkzWVbsfn7fby4gCgFFXdkw5nnnk7nRUgWgbGT13YMesF4RcEGXmHcpdszKYsw\""}""
TRACE|indy::services::pool          |           src/services/pool/mod.rs:294 | zmq poll 1
TRACE|indy::services::pool          |           src/services/pool/mod.rs:311 | cmd [[123, 34, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114, 34, 58, 34, 86, 52, 83, 71, 82, 85, 56, 54, 90, 53, 56, 100, 54, 84, 86, 55, 80, 66, 85, 101, 54, 102, 34, 44, 34, 111, 112, 101, 114, 97, 116, 105, 111, 110, 34, 58, 123, 34, 97, 99, 116, 105, 111, 110, 34, 58, 34, 115, 116, 97, 114, 116, 34, 44, 34, 100, 97, 116, 101, 116, 105, 109, 101, 34, 58, 34, 34, 44, 34, 116, 121, 112, 101, 34, 58, 34, 49, 49, 56, 34, 125, 44, 34, 112, 114, 111, 116, 111, 99, 111, 108, 86, 101, 114, 115, 105, 111, 110, 34, 58, 49, 44, 34, 114, 101, 113, 73, 100, 34, 58, 49, 53, 50, 55, 53, 56, 50, 56, 57, 51, 53, 48, 50, 53, 50, 49, 52, 53, 55, 44, 34, 115, 105, 103, 110, 97, 116, 117, 114, 101, 34, 58, 34, 52, 98, 98, 80, 66, 105, 115, 97, 84, 82, 55, 56, 82, 49, 81, 118, 113, 65, 122, 83, 74, 102, 77, 66, 55, 87, 83, 107, 122, 87, 86, 98, 115, 102, 110, 55, 102, 98, 121, 52, 103, 67, 103, 70, 70, 88, 100, 107, 119, 53, 110, 110, 110, 107, 55, 110, 82, 85, 103, 87, 103, 98, 71, 84, 49, 51, 89, 77, 101, 115, 70, 52, 82, 99, 69, 71, 88, 109, 72, 99, 112, 100, 115, 122, 75, 89, 115, 119, 34, 125], [8, 0, 0, 0]]
 INFO|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:222 | cmd ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""operation\"":{\""action\"":\""start\"",\""datetime\"":\""\"",\""type\"":\""118\""},\""protocolVersion\"":1,\""reqId\"":1527582893502521457,\""signature\"":\""4bbPBisaTR78R1QvqAzSJfMB7WSkzWVbsfn7fby4gCgFFXdkw5nnnk7nRUgWgbGT13YMesF4RcEGXmHcpdszKYsw\""}""
 INFO|indy::services::pool          |           src/services/pool/mod.rs:552 | RemoteNode::send_str Node1 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""action"":""start"",""datetime"":"""",""type"":""118""},""protocolVersion"":1,""reqId"":1527582893502521457,""signature"":""4bbPBisaTR78R1QvqAzSJfMB7WSkzWVbsfn7fby4gCgFFXdkw5nnnk7nRUgWgbGT13YMesF4RcEGXmHcpdszKYsw""}
 INFO|indy::services::pool          |           src/services/pool/mod.rs:552 | RemoteNode::send_str Node2 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""action"":""start"",""datetime"":"""",""type"":""118""},""protocolVersion"":1,""reqId"":1527582893502521457,""signature"":""4bbPBisaTR78R1QvqAzSJfMB7WSkzWVbsfn7fby4gCgFFXdkw5nnnk7nRUgWgbGT13YMesF4RcEGXmHcpdszKYsw""}
 INFO|indy::services::pool          |           src/services/pool/mod.rs:552 | RemoteNode::send_str Node4 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""action"":""start"",""datetime"":"""",""type"":""118""},""protocolVersion"":1,""reqId"":1527582893502521457,""signature"":""4bbPBisaTR78R1QvqAzSJfMB7WSkzWVbsfn7fby4gCgFFXdkw5nnnk7nRUgWgbGT13YMesF4RcEGXmHcpdszKYsw""}
 INFO|indy::services::pool          |           src/services/pool/mod.rs:552 | RemoteNode::send_str Node3 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""action"":""start"",""datetime"":"""",""type"":""118""},""protocolVersion"":1,""reqId"":1527582893502521457,""signature"":""4bbPBisaTR78R1QvqAzSJfMB7WSkzWVbsfn7fby4gCgFFXdkw5nnnk7nRUgWgbGT13YMesF4RcEGXmHcpdszKYsw""}
TRACE|indy::services::pool          |           src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 3, tm_min: 35, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 504551004 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 53, tm_min: 34, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 504840900 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 9, nanos: 999710104 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 9999
TRACE|indy::services::pool          |           src/services/pool/mod.rs:294 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node2 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""op"":""REQACK"",""reqId"":1527582893502521457}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:72  | TransactionHandler::process_ack: >>> ack: ResponseV0(ResponseV0 { req_id: 1527582893502521457 }), raw_msg: ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""op\"":\""REQACK\"",\""reqId\"":1527582893502521457}""
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:75  | TransactionHandler::process_ack: update timeout for req_id: 1527582893502521457
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80  | TransactionHandler::process_ack: <<<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 33, tm_min: 36, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 508164195 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 53, tm_min: 34, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 508317682 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 999846513 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 99999
TRACE|indy::services::pool          |           src/services/pool/mod.rs:294 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node2 {""result"":{""reqId"":1527582893502521457,""action"":""start"",""datetime"":"""",""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""type"":""118""},""op"":""REPLY""}
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:84  | TransactionHandler::process_reply: >>> req_id: 1527582893502521457, raw_msg: ""{\""result\"":{\""reqId\"":1527582893502521457,\""action\"":\""start\"",\""datetime\"":\""\"",\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""type\"":\""118\""},\""op\"":\""REPLY\""}"", src_ind: 1
TRACE|indy::services::pool          |           src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 33, tm_min: 36, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 508164195 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 53, tm_min: 34, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 509348587 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 998815608 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 99998
TRACE|indy::services::pool          |           src/services/pool/mod.rs:294 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node3 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""reqId"":1527582893502521457,""op"":""REQACK""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:72  | TransactionHandler::process_ack: >>> ack: ResponseV0(ResponseV0 { req_id: 1527582893502521457 }), raw_msg: ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""reqId\"":1527582893502521457,\""op\"":\""REQACK\""}""
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:75  | TransactionHandler::process_ack: update timeout for req_id: 1527582893502521457
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80  | TransactionHandler::process_ack: <<<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 33, tm_min: 36, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 517726787 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 53, tm_min: 34, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 517738681 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 999988106 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 99999
TRACE|indy::services::pool          |           src/services/pool/mod.rs:294 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node3 {""op"":""REPLY"",""result"":{""action"":""start"",""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""reqId"":1527582893502521457,""type"":""118"",""datetime"":""""}}
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:84  | TransactionHandler::process_reply: >>> req_id: 1527582893502521457, raw_msg: ""{\""op\"":\""REPLY\"",\""result\"":{\""action\"":\""start\"",\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""reqId\"":1527582893502521457,\""type\"":\""118\"",\""datetime\"":\""\""}}"", src_ind: 3
TRACE|indy::services::pool          |           src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 33, tm_min: 36, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 517726787 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 53, tm_min: 34, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 518904962 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 998821825 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 99998
TRACE|indy::services::pool          |           src/services/pool/mod.rs:294 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node1 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""reqId"":1527582893502521457,""op"":""REQACK""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:72  | TransactionHandler::process_ack: >>> ack: ResponseV0(ResponseV0 { req_id: 1527582893502521457 }), raw_msg: ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""reqId\"":1527582893502521457,\""op\"":\""REQACK\""}""
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:75  | TransactionHandler::process_ack: update timeout for req_id: 1527582893502521457
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80  | TransactionHandler::process_ack: <<<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 33, tm_min: 36, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 519600104 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 53, tm_min: 34, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 519640501 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 999959603 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 99999
TRACE|indy::services::pool          |           src/services/pool/mod.rs:294 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node4 {""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""reqId"":1527582893502521457,""op"":""REQACK""}
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:72  | TransactionHandler::process_ack: >>> ack: ResponseV0(ResponseV0 { req_id: 1527582893502521457 }), raw_msg: ""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""reqId\"":1527582893502521457,\""op\"":\""REQACK\""}""
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:75  | TransactionHandler::process_ack: update timeout for req_id: 1527582893502521457
TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80  | TransactionHandler::process_ack: <<<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 33, tm_min: 36, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 520394148 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 53, tm_min: 34, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 520402379 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 999991769 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 99999
TRACE|indy::services::pool          |           src/services/pool/mod.rs:294 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node1 {""result"":{""type"":""118"",""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""datetime"":"""",""reqId"":1527582893502521457,""action"":""start""},""op"":""REPLY""}
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:84  | TransactionHandler::process_reply: >>> req_id: 1527582893502521457, raw_msg: ""{\""result\"":{\""type\"":\""118\"",\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""datetime\"":\""\"",\""reqId\"":1527582893502521457,\""action\"":\""start\""},\""op\"":\""REPLY\""}"", src_ind: 0
TRACE|indy::services::pool          |           src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 33, tm_min: 36, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 520394148 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 53, tm_min: 34, tm_hour: 8, tm_mday: 29, tm_mon: 4, tm_year: 118, tm_wday: 2, tm_yday: 148, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 521307287 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 999086861 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 99999
TRACE|indy::services::pool          |           src/services/pool/mod.rs:294 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node4 {""result"":{""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""action"":""start"",""reqId"":1527582893502521457,""datetime"":"""",""type"":""118""},""op"":""REPLY""}
DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:84  | TransactionHandler::process_reply: >>> req_id: 1527582893502521457, raw_msg: ""{\""result\"":{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""action\"":\""start\"",\""reqId\"":1527582893502521457,\""datetime\"":\""\"",\""type\"":\""118\""},\""op\"":\""REPLY\""}"", src_ind: 2
 INFO|indy::commands                |                src/commands/mod.rs:110 | LedgerCommand command received
 INFO|ledger_command_executor       |             src/commands/ledger.rs:210 | SubmitAck command received
TRACE|indy::api::ledger             |                  src/api/ledger.rs:60  | indy_sign_and_submit_request: request_result_json: ""{\""Node1\"":\""{\\\""result\\\"":{\\\""type\\\"":\\\""118\\\"",\\\""identifier\\\"":\\\""V4SGRU86Z58d6TV7PBUe6f\\\"",\\\""datetime\\\"":\\\""\\\"",\\\""reqId\\\"":1527582893502521457,\\\""action\\\"":\\\""start\\\""},\\\""op\\\"":\\\""REPLY\\\""}\"",\""Node2\"":\""{\\\""result\\\"":{\\\""reqId\\\"":1527582893502521457,\\\""action\\\"":\\\""start\\\"",\\\""datetime\\\"":\\\""\\\"",\\\""identifier\\\"":\\\""V4SGRU86Z58d6TV7PBUe6f\\\"",\\\""type\\\"":\\\""118\\\""},\\\""op\\\"":\\\""REPLY\\\""}\"",\""Node3\"":\""{\\\""op\\\"":\\\""REPLY\\\"",\\\""result\\\"":{\\\""action\\\"":\\\""start\\\"",\\\""identifier\\\"":\\\""V4SGRU86Z58d6TV7PBUe6f\\\"",\\\""reqId\\\"":1527582893502521457,\\\""type\\\"":\\\""118\\\"",\\\""datetime\\\"":\\\""\\\""}}\"",\""Node4\"":\""{\\\""result\\\"":{\\\""identifier\\\"":\\\""V4SGRU86Z58d6TV7PBUe6f\\\"",\\\""action\\\"":\\\""start\\\"",\\\""reqId\\\"":1527582893502521457,\\\""datetime\\\"":\\\""\\\"",\\\""type\\\"":\\\""118\\\""},\\\""op\\\"":\\\""REPLY\\\""}\""}""
TRACE|indy::services::pool          |           src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:241 | zmq poll loop >>
Invalid data has been received: ErrorImpl { code: Message(""missing field `op`""), line: 1, column: 681 }
{code}
","indy-anoncreds 1.0.32
indy-node 1.3.427
indy-plenum 1.2.369
libindy 1.4.0~533
libindy-crypto 0.4.1~46
python3-indy-crypto 0.4.1
indy-cli 1.4.0~533",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze47:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,zhigunenko.dsr,,,,,,,,,,"09/Jun/18 12:34 AM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/855;;;","11/Jun/18 3:42 PM;Artemkaaas;Corrected parsing of Node response.

build version: master-565;;;","13/Jun/18 5:51 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~566
indy-node 1.4.451

*Steps to Validate:*
1. ledger pool-restart action=start
2. ledger pool-restart action=start datetime=0
3. ledger pool-restart action=start datetime=2016-01-01T00:00:00.000000+00:00
4. ledger pool-restart action=start datetime=2020-01-01T00:00:00.000000+00:00
5. ledger pool-restart action=cancel datetime=2020-01-01T00:00:00.000000+00:00

*Actual Results:*
* Pool restarts successfully or corresponding messages have been logged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Have documentation show we fail on build warnings,IS-739,30726,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,esplinr,SteveGoob,SteveGoob,30/May/18 4:05 AM,11/Oct/19 12:14 AM,28/Oct/23 2:49 AM,11/Oct/19 12:14 AM,,,,,,,,0,,,,,"This is a follow up ticket to IS-707

Basically, we need to have somewhere where we tell developers to not have warnings in their code.",,,,,,,,,,,IS-707,IS-642,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww6v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,SteveGoob,,,,,,,,,,"11/Oct/19 12:13 AM;esplinr;I added this information to the wiki:

[https://wiki.hyperledger.org/display/indy/How+to+Contribute];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy-cli can't connect to the pool after changes in transactions format,IS-740,30741,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,VladimirWork,ozheregelya,ozheregelya,30/May/18 10:13 PM,04/Jun/18 10:50 PM,28/Oct/23 2:49 AM,04/Jun/18 10:50 PM,,,,,,,,0,,,,,"*Environment:*
indy-cli 1.4.0~536 (also reproduces with 1.4.0~539 versions)
libindy 1.4.0~536
indy-node 1.3.433 (docker pool)

*Steps to Reproduce:*
1. Setup the docker pool.
2. Copy genesis file from the pool to the client machine.
3. Run the indy-cli.
4. Create pool with copied genesis file
pool create p1 gen_txn_file=/var/lib/indy/sandbox/pool_transactions_genesis
=> Pool successfully created.
5. Try to connect to the pool.

*Actual Result:*
Error message appear: Indy SDK error occurred CommonInvalidState

*Expected Result:*
Pool connect should work.

*Additional Information:*
{code:java}
indy> pool connect p2
TRACE|indy::api::pool | src/api/pool.rs:111 | indy_open_pool_ledger: <<< res: Success
INFO|indy::commands | src/commands/mod.rs:118 | PoolCommand command received
DEBUG|indy::commands::pool | src/commands/pool.rs:153 | open >>> name: ""p2"", config: None
DEBUG|indy::commands::pool | src/commands/pool.rs:168 | open <<<
INFO|indy::services::pool | src/services/pool/mod.rs:552 | RemoteNode::send_str Node1 pi
INFO|indy::services::pool | src/services/pool/mod.rs:552 | RemoteNode::send_str Node2 pi
INFO|indy::services::pool | src/services/pool/mod.rs:552 | RemoteNode::send_str Node3 pi
INFO|indy::services::pool | src/services/pool/mod.rs:552 | RemoteNode::send_str Node4 pi
TRACE|indy::services::pool | src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 34, tm_min: 47, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 878073092 }
TRACE|indy::services::pool | src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 44, tm_min: 46, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 881199387 }
TRACE|indy::services::pool | src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 49, nanos: 996873705 }
TRACE|indy::services::pool | src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 49996
TRACE|indy::services::pool | src/services/pool/mod.rs:294 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node4 po
INFO|indy::services::pool | src/services/pool/mod.rs:552 | RemoteNode::send_str Node4 {""op"":""LEDGER_STATUS"",""txnSeqNo"":4,""merkleRoot"":""5cmY3S5wAi1Ns5Yv4kKAsQf9vch9D416sFbHjYwPU3Nz"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null}
TRACE|indy::services::pool | src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 34, tm_min: 47, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 878073092 }
TRACE|indy::services::pool | src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 44, tm_min: 46, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 922781589 }
TRACE|indy::services::pool | src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 49, nanos: 955291503 }
TRACE|indy::services::pool | src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 49955
TRACE|indy::services::pool | src/services/pool/mod.rs:294 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node2 po
INFO|indy::services::pool | src/services/pool/mod.rs:552 | RemoteNode::send_str Node2 {""op"":""LEDGER_STATUS"",""txnSeqNo"":4,""merkleRoot"":""5cmY3S5wAi1Ns5Yv4kKAsQf9vch9D416sFbHjYwPU3Nz"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null}
TRACE|indy::services::pool | src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 34, tm_min: 47, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 878073092 }
TRACE|indy::services::pool | src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 44, tm_min: 46, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 927656565 }
TRACE|indy::services::pool | src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 49, nanos: 950416527 }
TRACE|indy::services::pool | src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 49950
TRACE|indy::services::pool | src/services/pool/mod.rs:294 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node3 po
INFO|indy::services::pool | src/services/pool/mod.rs:552 | RemoteNode::send_str Node3 {""op"":""LEDGER_STATUS"",""txnSeqNo"":4,""merkleRoot"":""5cmY3S5wAi1Ns5Yv4kKAsQf9vch9D416sFbHjYwPU3Nz"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null}
TRACE|indy::services::pool | src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 34, tm_min: 47, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 878073092 }
TRACE|indy::services::pool | src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 44, tm_min: 46, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 931918010 }
TRACE|indy::services::pool | src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 49, nanos: 946155082 }
TRACE|indy::services::pool | src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 49946
TRACE|indy::services::pool | src/services/pool/mod.rs:294 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node1 po
INFO|indy::services::pool | src/services/pool/mod.rs:552 | RemoteNode::send_str Node1 {""op"":""LEDGER_STATUS"",""txnSeqNo"":4,""merkleRoot"":""5cmY3S5wAi1Ns5Yv4kKAsQf9vch9D416sFbHjYwPU3Nz"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null}
TRACE|indy::services::pool | src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 34, tm_min: 47, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 878073092 }
TRACE|indy::services::pool | src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 44, tm_min: 46, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 932148363 }
TRACE|indy::services::pool | src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 49, nanos: 945924729 }
TRACE|indy::services::pool | src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 49945
TRACE|indy::services::pool | src/services/pool/mod.rs:294 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node4 {""ledgerId"":0,""viewNo"":null,""op"":""LEDGER_STATUS"",""merkleRoot"":""CfUGd4gvKyGT3SgCUEaxEDxrWd5CSh8f5iJsQ5dJmFSZ"",""txnSeqNo"":4,""ppSeqNo"":null}
TRACE|indy::services::pool | src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 34, tm_min: 47, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 878073092 }
TRACE|indy::services::pool | src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 44, tm_min: 46, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 937027787 }
TRACE|indy::services::pool | src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 49, nanos: 941045305 }
TRACE|indy::services::pool | src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 49941
TRACE|indy::services::pool | src/services/pool/mod.rs:294 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node2 {""ledgerId"":0,""txnSeqNo"":4,""merkleRoot"":""CfUGd4gvKyGT3SgCUEaxEDxrWd5CSh8f5iJsQ5dJmFSZ"",""op"":""LEDGER_STATUS"",""ppSeqNo"":null,""viewNo"":null}
TRACE|indy::services::pool | src/services/pool/mod.rs:247 | zmq poll loop <<
TRACE|indy::services::pool | src/services/pool/mod.rs:241 | zmq poll loop >>
TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout first_event Tm { tm_sec: 34, tm_min: 47, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 878073092 }
TRACE|indy::services::pool | src/services/pool/mod.rs:350 | get_zmq_poll_timeout now_utc Tm { tm_sec: 44, tm_min: 46, tm_hour: 12, tm_mday: 30, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 149, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 940978955 }
TRACE|indy::services::pool | src/services/pool/mod.rs:352 | get_zmq_poll_timeout diff Duration Duration { secs: 49, nanos: 937094137 }
TRACE|indy::services::pool | src/services/pool/mod.rs:354 | get_zmq_poll_timeout diff ms 49937
TRACE|indy::services::pool | src/services/pool/mod.rs:294 | zmq poll 1
INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node3 {""ledgerId"":0,""op"":""LEDGER_STATUS"",""merkleRoot"":""CfUGd4gvKyGT3SgCUEaxEDxrWd5CSh8f5iJsQ5dJmFSZ"",""viewNo"":null,""txnSeqNo"":4,""ppSeqNo"":null}
TRACE|indy::services::pool | src/services/pool/mod.rs:245 | process_actions - Invalid library state: Ledger merkle tree doesn't acceptable for current tree.
INFO|indy::commands | src/commands/mod.rs:118 | PoolCommand command received
INFO|indy::commands::pool | src/commands/pool.rs:67 | OpenAck handle 1, pool_id 2, result Err(CommonError(InvalidState(""Ledger merkle tree doesn\'t acceptable for current tree."")))
ERROR|indy::errors::indy | src/errors/indy.rs:73 | Casting error to ErrorCode: Invalid library state: Ledger merkle tree doesn't acceptable for current tree.
TRACE|indy::api::pool | src/api/pool.rs:104 | indy_open_pool_ledger: pool_handle: 0
Indy SDK error occurred CommonInvalidState
indy> ERROR|indy::services::pool | src/services/pool/mod.rs:431 | Pool worker thread finished with error CommonError(InvalidState(""Ledger merkle tree doesn\'t acceptable for current tree."")){code}",,,,,,,,,,,,,,,INDY-1348,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc4v:",,,,,,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,ozheregelya,VladimirWork,,,,,,,,"01/Jun/18 7:05 PM;Artemkaaas;Performed the following steps to check:
 Run indy pool :
 indy_plenum_ver=1.2.377
 indy_node_ver=1.3.433
 Connected to indy_node docker container, copied pool_transactions_genesis from /var/lib/indy/sandbox/
 Tried to open pool -> got the same the error:
 Ledger merkle tree doesn\'t acceptable for current tree.

The reason is that txnMetadata::seqNo is absentee in genesis transactions.
 I added corresponded seqNo's to every transaction -> successfully connected to pool;;;","01/Jun/18 9:19 PM;gudkov;As result Indy SDK behavior is valid and we have invalid test cases and most probably bug in Indy Node.;;;","04/Jun/18 10:50 PM;VladimirWork;Build Info:
indy-node 1.3.439
indy-cli 1.4.0~547

Steps to Validate:
1. Setup the docker pool.
2. Copy genesis file from the pool to the client machine.
3. Run the indy-cli.
4. Create pool with copied genesis file
pool create p1 gen_txn_file=/var/lib/indy/sandbox/pool_transactions_genesis
=> Pool successfully created.
5. Try to connect to the pool.

Actual Results:
Pool connecting / wallet creating / NYMs' sending and getting works normally.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction format modification possibly cause damage to Getting Started Guide,IS-741,30750,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,zhigunenko.dsr,zhigunenko.dsr,31/May/18 12:05 AM,04/Jun/18 10:35 PM,28/Oct/23 2:49 AM,01/Jun/18 11:22 PM,,,,,,,,0,,,,,"Origin: https://github.com/hyperledger/indy-sdk/issues/817

*Steps to reproduce:*
just run Jupiter notebook from https://github.com/hyperledger/indy-sdk/blob/master/doc/getting-started/run-getting-started.md

*Actual result:*
{code}
`IndyError Traceback (most recent call last)
in run()
25 await wallet.create_wallet(pool_name, steward_wallet_name, None, None,
---> 26 None)
27 except IndyError as ex:

/usr/local/lib/python3.5/dist-packages/indy/wallet.py in create_wallet(pool_name, name, xtype, config, credentials)
51 c_credentials,
---> 52 create_wallet.cb)
53

/usr/lib/python3.5/asyncio/futures.py in iter(self)
362 assert self.done(), ""yield from wasn't used with future""
--> 363 return self.result() # May raise too.
364

/usr/lib/python3.5/asyncio/futures.py in result(self)
273 if self._exception is not None:
--> 274 raise self._exception
275 return self._result

IndyError: ErrorCode.CommonInvalidParam6`
{code}

*Expected result:*
Jupiter GSG output","indy-node 1.3.425
indy-plenum 1.2.369
libindy 1.4.0~540",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc5b:",,,,,,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"31/May/18 4:30 PM;gudkov;[~zhigunenko.dsr] The problem doesn't relate to transactions format at all. It is regression related to new wallet. Now credentials param is Mandatory.;;;","31/May/18 4:40 PM;Artemkaaas;Updated Java/Python samples and Python Getting-Started in PR: https://github.com/hyperledger/indy-sdk/pull/819;;;","01/Jun/18 11:22 PM;zhigunenko.dsr;*Environment:*
libindy 1.4.0~546

Successfully fixed. Github issuer has been notified;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Libindy not in ubuntu xenial repositories or pip,IS-742,30695,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,EvelynEvergreene,EvelynEvergreene,EvelynEvergreene,29/May/18 10:17 AM,21/Sep/18 5:04 PM,28/Oct/23 2:49 AM,26/Jul/18 9:09 PM,,,,,,,,0,build-system,devops,Documentation,quality,"Libindy not in ubuntu xenial repositories or pip

Searches in newly formatted Ubuntu 16.04 LTS released virtual machines reveal that Libindy is not accessible in ubuntu xenial apt repositories following the install instructions located on the github page for installing INDY-SDK. 

[https://github.com/hyperledger/indy-sdk]

\{\{sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88

sudo add-apt-repository ""deb [https://repo.sovrin.org/sdk/deb] xenial \{release channel}"" }}

\{\{sudo apt-get update }}

{{sudo apt-get install -y libindy}}
---------------------------------------------------------------------------------------------------------------------------------

eva@ubuntu:~$ sudo apt search indy
Sorting... Done
Full Text Search... Done
indy-anoncreds/xenial,now 1.0.32 amd64 [installed,automatic]
Anonymous credentials

indy-node/xenial,now 1.3.429 amd64 [installed,automatic]
Indy node

indy-plenum/xenial,now 1.2.375 amd64 [installed,automatic]
Plenum Byzantine Fault Tolerant Protocol

libindy-crypto/xenial,now 0.4.0 amd64 [installed,automatic]
This is the shared crypto libirary for Hyperledger Indy components.

libindy-crypto-dev/xenial 0.2.0 amd64
This is the shared crypto libirary for Hyperledger Indy components.

python3-indy-crypto/xenial,now 0.4.1 amd64 [installed,automatic]
This is the official wrapper for Hyperledger Indy Crypto library ([https://www.hyperledger.org/projects]).

xindy/xenial 2.4-1.3 amd64
index generator for structured documents like LaTeX or SGML

xindy-rules/xenial,xenial 2.4-1.3 all
rule files for xindy",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjpz:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,EvelynEvergreene,gudkov,sergey.minaev,,,,,,,,,"26/Jul/18 6:36 PM;sergey.minaev;[~EvelynEvergreene] I can't reproduce the error in my environment. Please share content of your `/etc/apt/sources.list`;;;","26/Jul/18 6:40 PM;sergey.minaev;[~EvelynEvergreene] please not, that ""{{\{release channel\}}}"" is placeholder and should be replaced by one of the available release channels as it described in readme;;;","26/Jul/18 8:54 PM;gudkov;I am closing this. [~EvelynEvergreene] If you still have problems with this just contact me or Sergey Minaev in slack. We will help you with correct commands.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Android: Review and merge Android Build PR,IS-743,30880,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,05/Jun/18 4:42 PM,29/Jun/18 5:06 AM,28/Oct/23 2:49 AM,28/Jun/18 10:40 PM,,,,,,,,0,,,,,"We need review and merge Android Build PR.

*Acceptance criteria*

- Code reviewed to satisfy indy-sdk architecture, code style and quality standards
- Build process tested
- Documentation validated
- Produced artifacts validated
- PR merged",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze13:",,,,,,EV 18.12 Release New Wallet,EV 18.13,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"15/Jun/18 9:20 PM;gudkov;I done initial review. Waiting for feedback from PR sender.;;;","28/Jun/18 10:40 PM;gudkov;PR was reviewed and merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
indy_create_and_store_credential_def: `support_revocation` is documented as optional but is actually mandatory,IS-744,30884,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,05/Jun/18 9:36 PM,19/Jun/18 9:40 PM,28/Oct/23 2:49 AM,19/Jun/18 7:58 PM,,,,,,,,0,,,,,"From the documentation in api/anoncreds.rs:
{code:java}
 config_json: type-specific configuration of credential definition as json:
 - 'CL':
   - support_revocation: whether to request non-revocation credential (optional, default false)
{code}
But if config_json is left empty, as the documentation suggests, the following error pops up:
{code:java}
Invalid structure: Cannot deserialize CredentialDefinitionConfig: InvalidStructure(""missing field `support_revocation` at line 1 column 2"")
{code}
This is due to the fact that in domain/anoncreds/credential_definition.rs CredentialDefinitionConfig::support_revocation has type bool instead of Option<bool>.

*Origin:*
https://github.com/hyperledger/indy-sdk/issues/829",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze2n:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,zhigunenko.dsr,,,,,,,,,,"15/Jun/18 3:21 PM;Artemkaaas;Changes: 
* support_revocation was set as optional filed. 
* config_json was set as optional parameter
Fixed in PR: [https://github.com/hyperledger/indy-sdk/pull/856]

Build version: master-568;;;","15/Jun/18 5:24 PM;zhigunenko.dsr;No way to check via CLI. Issuer reaction is expected;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support Indy-Node 1.3.440,IS-745,30886,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,05/Jun/18 10:33 PM,08/Jun/18 8:11 PM,28/Oct/23 2:49 AM,08/Jun/18 8:11 PM,,,,,,,,0,,,,,"Indy-Node 1.3.440 has pool_genesis_transactions file in the different format. 
It is required to update genesis transactions in Libindy/wrappers/samples",,,,,,,,,,,,,,,IS-746,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbev:",,,,,,EV 18.11 Payments/Performance,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"07/Jun/18 8:26 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/844;;;","08/Jun/18 7:42 PM;Artemkaaas;Master build version: 560;;;","08/Jun/18 8:11 PM;gudkov;Tests with 1.3.440 are passed and we can consider it as done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Support new format of replies on write transactions,IS-746,30890,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,VladimirWork,VladimirWork,05/Jun/18 11:50 PM,14/Jun/18 9:55 PM,28/Oct/23 2:49 AM,14/Jun/18 4:52 PM,,,,,,,,0,,,,,"Build Info:
indy-node 1.3.440 master
indy-cli 1.4.0~551 master

Steps to Reproduce:
1. Install 1.3.440 pool.
2. Send any of writing txn (NYM, ATTRIB, SCHEMA, CRED_DEF) via ~551 indy-cli.
3. Check indy-cli data/metadata output.

Actual Results:
There are empty data/metadata fields in indy-cli (but all this fields are present in pool responce json and can be got by any of GET txns, see screenshots).

Expected Results:
Data/metadata fields should be filled according to pool responce info.",,,180,180,,0%,180,180,,,IS-745,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jun/18 11:48 PM;VladimirWork;nym_empty.PNG;https://jira.hyperledger.org/secure/attachment/15049/nym_empty.PNG","05/Jun/18 11:48 PM;VladimirWork;schema_empty.PNG;https://jira.hyperledger.org/secure/attachment/15048/schema_empty.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze3z:",,,,,,EV 18.11 Payments/Performance,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,ozheregelya,VladimirWork,zhigunenko.dsr,,,,,,,,"07/Jun/18 8:26 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/844;;;","08/Jun/18 7:44 PM;Artemkaaas;Cli was updated to work with both reply formats of a write transaction 
Master build version: 560;;;","10/Jun/18 1:18 AM;zhigunenko.dsr;*Environment:*
indy-node 1.3.448
libindy 1.4.0~562

*Steps to Validate:*
Run Jupyter GSG

*Actual Results:*
{code:java}
Getting started -> started
Open Pool Ledger

_indy_loop_callback: Function returned error 307

---------------------------------------------------------------------------
IndyError                                 Traceback (most recent call last)
<ipython-input-1-cf352738fe1d> in <module>()
    796     loop = asyncio.new_event_loop()
    797     asyncio.set_event_loop(loop)
--> 798     loop.run_until_complete(run())
    799     time.sleep(1)  # FIXME waiting for libindy thread complete

/usr/lib/python3.5/asyncio/base_events.py in run_until_complete(self, future)
    385             raise RuntimeError('Event loop stopped before Future completed.')
    386 
--> 387         return future.result()
    388 
    389     def stop(self):

/usr/lib/python3.5/asyncio/futures.py in result(self)
    272             self._tb_logger = None
    273         if self._exception is not None:
--> 274             raise self._exception
    275         return self._result
    276 

/usr/lib/python3.5/asyncio/tasks.py in _step(***failed resolving arguments***)
    239                 result = coro.send(None)
    240             else:
--> 241                 result = coro.throw(exc)
    242         except StopIteration as exc:
    243             self.set_result(exc.value)

<ipython-input-1-cf352738fe1d> in run()
     14     pool_config = json.dumps({""genesis_txn"": '/home/indy/sandbox/pool_transactions_genesis'})
     15     await pool.create_pool_ledger_config(pool_name, pool_config)
---> 16     pool_handle = await pool.open_pool_ledger(pool_name, None)
     17 
     18     print(""=============================="")

/usr/local/lib/python3.5/dist-packages/indy/pool.py in open_pool_ledger(config_name, config)
     80                         c_config_name,
     81                         c_config,
---> 82                         open_pool_ledger.cb)
     83 
     84     logger.debug(""open_pool_ledger: <<< res: %r"", res)

/usr/lib/python3.5/asyncio/futures.py in __iter__(self)
    359         if not self.done():
    360             self._blocking = True
--> 361             yield self  # This tells Task to wait for completion.
    362         assert self.done(), ""yield from wasn't used with future""
    363         return self.result()  # May raise too.

/usr/lib/python3.5/asyncio/tasks.py in _wakeup(self, future)
    294     def _wakeup(self, future):
    295         try:
--> 296             future.result()
    297         except Exception as exc:
    298             # This may also be a cancellation.

/usr/lib/python3.5/asyncio/futures.py in result(self)
    272             self._tb_logger = None
    273         if self._exception is not None:
--> 274             raise self._exception
    275         return self._result
    276 

IndyError: ErrorCode.PoolLedgerTimeout
{code}
;;;","11/Jun/18 4:17 PM;Artemkaaas;Did not reproduce on the current master branch;;;","14/Jun/18 4:45 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~566
indy-node 1.4.457


*Steps to Validate:*
Send these commands
{code:java}
ledger nym did=V4SGRU86Z58d6TV7PBU111 verkey=~CoRER63DVYnWZtK8uAzNbx role=STEWARD
ledger nym did=V4SGRU86Z58d6TV7PBU112 
ledger attrib did=V4SGRU86Z58d6TV7PBUe6f enc=aa3f41f619aa7e5e6b6d0d
ledger schema name=gvt version=1.0 attr_names=name,age
ledger cred-def schema_id=1 signature_type=CL primary={""n"":""1"",""s"":""2"",""rms"":""3"",""r"":{""age"":""4"",""name"":""5""},""rctxt"":""6"",""z"":""7""}
{code}

*Actual Results:*
Response contains all filled fields;;;",,,,,,,,,,,,,,,,,,,,,,,,,
indy_build_get_txn_request should support ledger_id,IS-747,30905,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,vladan.divac,vladan.divac,06/Jun/18 6:06 AM,19/Jun/18 9:40 PM,28/Oct/23 2:49 AM,19/Jun/18 7:44 PM,1.4,,1.5,,,,,0,quality,,,,"SDK API call to build transaction read request *indy_build_get_txn_request* does not support to specify ledger_id as an argument.

It defaults to always read transactions from domain ledger.

We should be able to specify which ledger we want to read transactions from.

GET_TXN command on indy-node supports specifying ledger_id (Pool=0; Domain=1; Config=2)

Use case:
We want to write a script which would traverse through the pool ledger and retrieve some information about active/deleted validators (similar to what get_validator_info is doing, but with different output format)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze2v:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,vladan.divac,zhigunenko.dsr,,,,,,,,,"08/Jun/18 11:07 PM;Artemkaaas;Implemented in PR: Implemented in PR: [https://github.com/hyperledger/indy-sdk/pull/852];;;","09/Jun/18 12:34 AM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/856;;;","18/Jun/18 1:27 PM;Artemkaaas;Changes: Added parameter `ledger_type` to `build_get_txn_request` function.
Build version: master-581;;;","19/Jun/18 7:44 PM;zhigunenko.dsr;No way to check this via CLI
Functionality has been covered by integration tests

https://github.com/hyperledger/indy-sdk/blob/3dd21fb921a8a46c68043aa26474ba3fda4dbb83/wrappers/python/tests/ledger/test_submit_request.py#L363
https://github.com/hyperledger/indy-sdk/blob/3dd21fb921a8a46c68043aa26474ba3fda4dbb83/wrappers/python/tests/ledger/test_submit_request.py#L384
https://github.com/hyperledger/indy-sdk/blob/3dd21fb921a8a46c68043aa26474ba3fda4dbb83/wrappers/python/tests/ledger/test_build_get_txn_request.py#L24
https://github.com/hyperledger/indy-sdk/blob/3dd21fb921a8a46c68043aa26474ba3fda4dbb83/wrappers/java/src/test/java/org/hyperledger/indy/sdk/ledger/GetTxnRequestTest.java#L28
https://github.com/hyperledger/indy-sdk/blob/3dd21fb921a8a46c68043aa26474ba3fda4dbb83/wrappers/ios/libindy-pod/Indy-demoTests/Case%20Tests/Ledger/LedgerBuildRequest.mm#L621
https://github.com/hyperledger/indy-sdk/blob/3dd21fb921a8a46c68043aa26474ba3fda4dbb83/libindy/tests/ledger.rs#L945
https://github.com/hyperledger/indy-sdk/blob/3dd21fb921a8a46c68043aa26474ba3fda4dbb83/libindy/tests/ledger.rs#L953
https://github.com/hyperledger/indy-sdk/blob/3dd21fb921a8a46c68043aa26474ba3fda4dbb83/libindy/src/services/ledger/mod.rs#L825;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As an app using LibIndy, I need to be able to work with both IndyNode 1.3 and IndyNode 1.4",IS-748,30934,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,VladimirWork,ashcherbakov,ashcherbakov,07/Jun/18 4:29 PM,21/Jun/18 9:55 PM,28/Oct/23 2:49 AM,21/Jun/18 6:47 PM,,,,,,,,0,,,,,"As Indy Node 1.4 release contains breaking changes, it can work with the new clients supporting this changes only.

So, all requests from libindy to the pool need to be sent with a new protocolVersion.

*Acceptance criteria:*
 * there is a global property PROTOCOL_VERSION in libindy which is used in every request to the pool (Request and LedgerStatus messages)
 * by default PROTOCOL_VERSION=1 (for IndyNode 1.3, old one), so that by default LibIndy 1.5 will work with IndyNode 1.3, but not with IndyNode 1.4.
 * add a method `indy_set_protocol_version()` (should be called during initialization of the app) which will set global PROTOCOL_VERSION which is passed to all requests
 * add a check to `indy_open_pool`:
 ** if PROTOCOL_VERSION=1, and the passed genesis txn file is in a new (1.4) format - raise an Error which will say to the user to call `indy_set_protocol_version(2)`
 ** if PROTOCOL_VERSION=2, and the passed genesis txn file is in old (1.3) format - raise an Error which will say to the user to call `indy_set_protocol_version(1)`
 * use PROTOCOL_VERSION=2 and the latest master in all integration tests",,,,,,,,,,,,,,,INDY-1393,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/18 6:19 PM;VladimirWork;IS-748_case2.PNG;https://jira.hyperledger.org/secure/attachment/15156/IS-748_case2.PNG","20/Jun/18 10:52 PM;VladimirWork;Node1.log;https://jira.hyperledger.org/secure/attachment/15127/Node1.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze27:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,ashcherbakov,VladimirWork,,,,,,,,,"09/Jun/18 6:13 PM;ashcherbakov;Please try with indy-node 1.3.450;;;","13/Jun/18 5:41 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/868;;;","18/Jun/18 1:35 PM;Artemkaaas;Changes: Added global property PROTOCOL_VERSION to specify the version of IndyNode wich Libindy works. Added API function indy_set_protocol_version to set protocol version. Build version: master-586;;;","20/Jun/18 7:47 PM;VladimirWork;{color:#14892c}1. Pool 1.3 (last stable) works with SDK 1.5 (last master) - works{color}
{color:#14892c}2. Pool 1.4 (last master) doesn't work with SDK 1.4 (last stable) - doesn't work and raises ""Make sure that the latest LibIndy is used and `set_protocol_version(2)` is called"" on txn sending{color}
{color:#14892c}3. Pool 1.4 (last master) doesn't work with SDK 1.5 (last master) without `set_protocol_version(2)` - doesn't work and raises ErrorCode.PoolIncompatibleProtocolVersion{color}
{color:#14892c}4. Pool 1.4 (last master) works SDK 1.5 (last master) with `set_protocol_version(2)` - works{color};;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enhancements: Merge Import/Export PRs,IS-749,30960,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,08/Jun/18 9:05 PM,18/Jun/18 10:32 PM,28/Oct/23 2:49 AM,18/Jun/18 5:53 PM,,,1.5,,,,,0,,,,,"We need review and merge Wallet Import/Export PRs.

*Acceptance criteria*

- Code reviewed to satisfy indy-sdk architecture, code style and quality standards
- Documentation validated
- PR merged",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze3b:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"18/Jun/18 5:53 PM;gudkov;PRs were reviewed, merged, integration tests provided and CI pass. So we can consider this as Done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Concern with BLS signature implementation,IS-750,30961,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,Artemkaaas,esplinr,esplinr,08/Jun/18 9:45 PM,31/Jul/18 4:28 AM,28/Oct/23 2:49 AM,30/Jul/18 9:33 PM,1.3,,1.6.2,,,,,0,,,,,"Details are contained here:

https://docs.google.com/document/d/14wcYSn9XXX6-0M5le1icT6N-funiB7K9cActzYfILto/edit",,,,,,,,,,,,,,,INDY-1389,,,,,,,,,,,,IS-848,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjmf:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,esplinr,lovesh,sergey.minaev,,,,,,,,,"15/Jun/18 12:04 AM;lovesh;Please keep me in loop on this;;;","26/Jun/18 12:47 AM;lovesh;Please see the update in the doc;;;","29/Jun/18 6:42 AM;lovesh;Please see the short term and long term solution in the doc;;;","30/Jun/18 12:53 AM;lovesh;The PoA has been approved. Check the doc.;;;","30/Jul/18 9:32 PM;sergey.minaev;Crypto changes was reviewed by [~MikeLodder]. Usage of it should be verified in scope of INDY-1389. Integration with Indy-Node will be done separately (IS-848), so this ticket can be considered as done;;;",,,,,,,,,,,,,,,,,,,,,,,,,
[intermittent] Error 304 when processing ledger txns with libnullpay,IS-751,30970,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,DouglasWightman,DouglasWightman,09/Jun/18 3:04 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"Periodically we receive error 304 when running tests against libindy and libnullpay (using version 129b813d6b247a14b869759bdfe56ad15b2fabbc).  It happens for random transactions and we're not sure what causes it.  This only happens 10% of the time.  I'm attaching a log file that captures the error.

In our test we create a pool, wallet, set fees and mint some tokens, then we proceed to write a schema to the ledger.  This is using a docker instance created from the ""ci"" directory in indy-sdk.

Please let me know if we are doing something incorrect in our usage of libindy and libnullpay.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/18 3:03 AM;DouglasWightman;fail.log;https://jira.hyperledger.org/secure/attachment/15087/fail.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww4f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,DouglasWightman,sergey.minaev,,,,,,,,,,"26/Jun/18 10:10 PM;sergey.minaev;In the attached log I see out-date response from Node. Previous write request is finished, but not applied for every nodes, failed read request is based on reply from the node which hasn't applied latest write request yet.
So in current approach SDK can't avoid error, but we can discuss error code. But in any case application should try to re-request data if received reply seems outdated.;;;","07/Aug/18 11:20 PM;sergey.minaev;After discussion with Douglas we decide to close with bug as invalid. As this is expected behavior of libindy ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation for Windows NodeJS wrapper,IS-752,30972,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,zhigunenko.dsr,zhigunenko.dsr,09/Jun/18 6:20 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,help-wanted,,,,"* Installatoin guide is not adapted for Windows terminal (file changes are required)
* 3-rd party software configuration is not described (missing npm packages, Visual Studio)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzegn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Specia1,zhigunenko.dsr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve Write a DID and Query Its Verkey how-to in Python,IS-753,30982,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,kdenhartog,trthhrtz,trthhrtz,11/Jun/18 3:21 PM,17/Jun/18 4:42 PM,28/Oct/23 2:49 AM,17/Jun/18 4:42 PM,,,,,,,,0,,,,,"To make existing how-to version work and provide common errors guide for newcomers.

PR: https://github.com/hyperledger/indy-sdk/pull/864",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwuyf:",,,,,,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,trthhrtz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Code coverage tools to our CI,IS-754,30987,,New Feature,Code Review,IS,Indy SDK,software,resplin,,,Medium,Done,SteveGoob,SteveGoob,SteveGoob,12/Jun/18 4:12 AM,11/Oct/19 9:21 PM,28/Oct/23 2:49 AM,06/Aug/19 11:15 PM,,,,,,,,0,,,,,"For the CII badge, we need to maintain some code coverage metrics.

[kcov|https://github.com/SimonKagstrom/kcov] might be a good tool for this because it is language agnostic, (will work with both rust and python).

For rust specifically, [this|https://stackoverflow.com/questions/32521800/why-does-kcov-calculate-incorrect-code-coverage-statistics-for-rust-programs#38371687] might be something to keep in mind when implementing it",,,,,,,,,,,,,,,,,,INDY-1408,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwrhj:910sx0f",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,SteveGoob,,,,,,,,,,"06/Aug/19 11:16 PM;esplinr;Static code analysis is run, but the errors are currently ignored.;;;","07/Aug/19 2:46 AM;SteveGoob;Actually [~esplinr], this is about code coverage metrics, not static analysis. I'm going to switch this back to being in Review since my [PR|https://github.com/hyperledger/indy-sdk/pull/1591] for this functionality is still awaiting approval. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Check for evidence of adherance to our testing policy,IS-755,30988,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,SteveGoob,SteveGoob,SteveGoob,12/Jun/18 4:25 AM,11/Apr/19 6:50 AM,28/Oct/23 2:49 AM,11/Apr/19 6:50 AM,,,,,,,,0,,,,,The CII requires us to have evidence that our testing policy has been followed.,,,,,,,,,,,,,,,,,,INDY-1409,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-48,,,,,,,,,,"1|hzww5j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,SteveGoob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add static analysis to our indy-sdk CI ,IS-756,30993,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,SteveGoob,SteveGoob,SteveGoob,12/Jun/18 6:06 AM,11/Apr/19 6:48 AM,28/Oct/23 2:49 AM,11/Apr/19 6:48 AM,,,,,,,,0,devops,,,,"For the CII badge, we need to add static analysis to indy-sdk

Thoughts:
* Clippy? Looks like a linter on steroids. Does that count?
* I don't really see anything other than linters... hmm...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-48,,,,,,,,,,"1|hzww67:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,SteveGoob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Investigate potential for dynamic analysis in CI,IS-757,30994,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,SteveGoob,SteveGoob,SteveGoob,12/Jun/18 6:09 AM,10/Oct/19 9:57 PM,28/Oct/23 2:49 AM,,,,,,,,,0,devops,,,,CII standards suggest implementing dynamic analysis on our projects. Look into this to see if this an option and would help us.,,,,,,,,,,,,,,,,,,INDY-1407,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-524,,,,,,,,,,"1|hzww6f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,SteveGoob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python-agent - Message structure.,IS-758,30996,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dbluhm,burdettadam,burdettadam,12/Jun/18 9:44 AM,29/Jun/18 2:44 AM,28/Oct/23 2:49 AM,29/Jun/18 2:44 AM,,,,,,,,0,quality,,,,"The python agent currently stores a DID as a key identifier for a connection. There has been discussion to store a nonce instead. Type is a ambiguous topic currently, but must be stored.
 Message structure should reflect something similar to this.
 \{
     id :< nonce | DID >,

     type : ,

     message : ,
 }",,,,,,,,,,,,,,,,,,,,,,,,,,,IA-2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz93j:",,,,,,SF INDY AgentCredentials 18.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,burdettadam,,,,,,,,,,,"29/Jun/18 2:44 AM;burdettadam;This issue now lives as IA-6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python-agent - Web socket repaint on change.,IS-759,30997,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,mdb,burdettadam,burdettadam,12/Jun/18 9:54 AM,29/Jun/18 2:46 AM,28/Oct/23 2:49 AM,29/Jun/18 2:46 AM,,,,,,,,0,,,,,"Currently python-agent does not update a browser's window after a change has occurred, a manual refresh is required. Python-agent interface would improve if the server would update the browser's window over its web socket. ",,,,,,,,,,,,,,,,,,,,,,,,,,,IA-2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz93r:",,,,,,SF INDY AgentCredentials 18.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,burdettadam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python-agent - Create a message timeline display. ,IS-760,30998,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,burdettadam,burdettadam,12/Jun/18 10:14 AM,29/Jun/18 6:22 AM,28/Oct/23 2:49 AM,29/Jun/18 6:22 AM,,,,,,,,0,,,,,"Python-agent needs a message timeline display. This will be used to display a connection's timeline which may include, connection request date, connection accepted date, and an ordered list of messages in plain text with corresponding timestamps.",,,,,,,,,,,,,,,,,,,,,,,,,,,IA-2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz94f:",,,,,,SF INDY AgentCredentials 18.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,burdettadam,,,,,,,,,,,"29/Jun/18 6:22 AM;burdettadam;This now lives as IA-11.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve MacOS documentation for new developers,IS-761,30999,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dbluhm,RyanWest,RyanWest,12/Jun/18 1:50 PM,24/Jul/19 3:30 AM,28/Oct/23 2:49 AM,24/Jul/19 3:30 AM,,,,,,,,0,mac,,,,"We plan to rewrite the support guide for running different major components of indy-sdk on a mac. This includes building libindy, building and running the CLI, and successfully running the getting started Python file.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqr7:i",,,,,,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dbluhm,RyanWest,,,,,,,,,,"20/Jun/18 12:12 PM;dbluhm;Nathan tested our document and was able to successfully run the getting started guide. There were failing tests but they did not appear to affect anything in the GSG.

[~nage] also mentioned that this would be a good PR to get in before the release of 1.5.

Since you're a collaborator on my fork, [~RyanWest], would you be willing to submit that PR? (I think you can, at least – I might be mistaken);;;","24/Jul/19 3:30 AM;dbluhm;Old issue; completed some time ago.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy-cli can't connect to the pool on windows 7,IS-762,31004,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,zhigunenko.dsr,ozheregelya,ozheregelya,12/Jun/18 9:52 PM,03/Aug/18 3:20 PM,28/Oct/23 2:49 AM,03/Aug/18 3:20 PM,,,1.6.2,,,,,0,,,,,"Steps to Reproduce:
1. Download indy-cli for windows [https://repo.sovrin.org/windows/indy-cli/master/1.4.0-565/
]2. Setup the docker pool (from indy-node docker files).
3. Copy genesis file from one of the nodes.
4. Run indy-cli.
5. Create the pool and try to connect it.

Actual Results:
Error ""Indy SDK error occurred Common InvalidState"" appear. Logs:
{code:java}
indy> pool create olya gen_txn_file=K:/develop/dalet/hackathon/pool_transactions_genesis_olya INFO|indy::commands | src\commands\mod.rs:108 | PoolCommand command received INFO|pool_command_executor | src\commands\pool.rs:55 | Create command received TRACE|indy::services::pool | src\services\pool\mod.rs:575 | PoolService::create olya with config Some(""{\""genesis_txn\"":\""K:/develop/dalet/hackathon/pool_transac tions_genesis_olya\""}"") ←[1;32mPool config ""olya"" has been created←[0m indy> 

pool connect olya INFO|indy::commands | src\commands\mod.rs:108 | PoolCommand command received INFO|pool_command_executor | src\commands\pool.rs:63 | Open command received DEBUG|zmq |C:\Users\jenkins.cargo\registry\src\github.com-1ecc6299db9ec823\zmq-0.8.2\src\lib.rs:410 | context dropped ERROR|indy::services::pool | src\services\pool\mod.rs:428 | Pool worker thread finished with error CommonError(InvalidState(""MerkleTree contains invalid data Syn tax(\""missing field data\"")"")) INFO|indy::commands | src\commands\mod.rs:108 | PoolCommand command received INFO|indy::commands::pool | src\commands\pool.rs:67 | OpenAck handle 3, pool_id 4, result Err(CommonError(InvalidState(""MerkleTree contains invalid data Sy ntax(\""missing field data\"")""))) ERROR|indy::errors::indy | src\errors\indy.rs:68 | Casting error to ErrorCode: Invalid library state: MerkleTree contains invalid data Syntax(""missing f ield data"") DEBUG|zmq |C:\Users\jenkins.cargo\registry\src\github.com-1ecc6299db9ec823\zmq-0.8.2\src\lib.rs:503 | socket dropped←[1;31mIndy SDK error occurred Common InvalidState←[0m
{code}
 

Expected Results:
Pool connect should work.","Windows 7
indy-cli 1.4.0~566
indy-node 1.3.450",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww47:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ozheregelya,zhigunenko.dsr,,,,,,,,,,"03/Aug/18 3:20 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.1-671 for Win
Windows 7 32x/64x

*Steps to Validate:*
1. Run artifact
2. create pool (genesis file is taken from AWS pool with 25 nodes)
3. connect to pool
4. create and open wallet
5. try send NYM
6. read default Trustee NYM

*Actual results:*
Artifact isn't compatible with 32-bit version
On 64-bit version connection with pool has been established, nym has been read, nym writing has been failed because pool already lost its consensus (""Response hasn't been received"")

FYI [~Artemkaaas];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python-agent - Timeline for each connection,IS-763,31011,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,burdettadam,burdettadam,13/Jun/18 1:23 AM,29/Jun/18 5:40 AM,28/Oct/23 2:49 AM,29/Jun/18 5:40 AM,,,,,,,,0,,,,,Each established connection needs a coordinating timeline that will be displayed when a connection is selected.,,,,,,,,,,,,,,,,,,,,,,,,,,,IA-2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz947:",,,,,,SF INDY AgentCredentials 18.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,burdettadam,,,,,,,,,,,"29/Jun/18 5:40 AM;burdettadam;This now lives as IA-10.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python-agent - Connections display,IS-767,31016,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,trthhrtz,burdettadam,burdettadam,13/Jun/18 2:03 AM,29/Jun/18 7:37 AM,28/Oct/23 2:49 AM,29/Jun/18 7:37 AM,,,,,,,,0,,,,,"Python-agent needs a place to list a users connections.  Each connection has a status, requested, request, established.  When a connection state is request, there should be a button that allows a user to accept that connection. Connections should have a button to reject a connection no matter what state it is in. 
When a connection is displayed there should be a visual representation of its state, this could be a shading for requested and request connections with established not shaded. ",,,,,,,,,,,,,,,,,,,,,,,,,,,IA-2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz94n:",,,,,,SF INDY AgentCredentials 18.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,burdettadam,,,,,,,,,,,"29/Jun/18 7:36 AM;burdettadam;This now lives as IA-12, IA-13, IA-14.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python-agent - Open wallet page.,IS-768,31017,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dbluhm,burdettadam,burdettadam,13/Jun/18 2:35 AM,29/Jun/18 2:47 AM,28/Oct/23 2:49 AM,29/Jun/18 2:47 AM,,,,,,,,0,,,,,When you first hit Python-agent home page you should be greeted with a open wallet page. This open wallet page should require a wallet name and passphrase.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz93z:",,,,,,SF INDY AgentCredentials 18.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,burdettadam,dbluhm,,,,,,,,,,"14/Jun/18 6:36 AM;dbluhm;I created this page and pushed to dbluhm/indy-agent.

It could probably use some style changes but it works.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve Rotate-key how-to in Python,IS-769,31024,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,kdenhartog,trthhrtz,trthhrtz,13/Jun/18 2:01 PM,17/Jun/18 4:42 PM,28/Oct/23 2:49 AM,17/Jun/18 4:42 PM,,,,,,,,0,,,,,"Improve readme, add common errors, improve extra example of rotate_key (which is now in the old folder)

 

PR: https://github.com/hyperledger/indy-sdk/pull/871",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwuyv:",,,,,,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,trthhrtz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
need to prove correctness of how-to code with each checkin,IS-770,31033,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,danielhardman,danielhardman,14/Jun/18 12:36 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,1,help-wanted,,,,"Today, the content under  [doc/how-tos|https://github.com/hyperledger/indy-sdk/tree/master/doc/how-tos] is stale and inaccurate. We can fix it once, but it will always be in danger of growing stale without us noticing, unless we force it to be updated regularly.

I suggest that we write a test that runs as part of the build, that works like this:
 # Each how-to folder should follow a convention for how its sample code is named. I suggest that the convention be: have a file named ""template.<py|java|js|cs|etc>"" that has comments like ""//code for step 1 goes here""; also have files named ""step1.<ext>"", ""step2.<ext>"", and so forth. You can see something that roughly matches this convention in https://github.com/hyperledger/indy-sdk/tree/master/doc/how-tos/issue-credential/java
 # Have the test find each folder like this, and build a composite file by opening the template file and adding in the snippets from each step. Call the new file ""combined.<ext>"" and save it somewhere.
 # Compare ""combined.<ext>"" with the other file in this folder, which is the hand-combined version of the sample code (in [https://github.com/hyperledger/indy-sdk/tree/master/doc/how-tos/issue-credential/java,] this would be the file named IssueCredential.java). These two files should be identical except for whitespace. If they are not, the test should fail with a message saying that the hand-written file is not the same as the algorithmically built combined.<ext>.
 # Assuming we pass step 3, if the folder of code is for a compiled language, check to see if combined.<ext> compiles. If yes, consider the how-to code valid.
 # For interpreted languages like python, check to see if combined.<ext> runs in a limited way. (Since some of these scripts would require a full pool to be running when the code executes, it's not clear to me whether we can afford to run the script to completion. I think the minimum goal would be to prove the same things that a compiled language would tell us–that all the methods exist and that we have the correct number of parameters to each. Possibly we could do this by simply finding method names and making sure they exist in the .py file we imported, or by doing a help() call on each method name to see if we're calling it correctly.) If combined.<ext> seems reasonable, consider the how-to code valid.
 # The test should pass if it encounters no cases where the how-to sample code is considered invalid.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-320,,,,,,,,,,"1|hzzeov:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,danielhardman,trthhrtz,,,,,,,,,,"22/Jul/18 7:16 PM;trthhrtz;[~danielhardman], should some particular programming language and testing framework be used?(or bash?);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
automate validity checking of how-to sample code,IS-771,31034,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,danielhardman,danielhardman,14/Jun/18 12:39 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,help-wanted,,,,"Do this ticket after IS-770.

Hook up the test written in IS-770 such that it will be run automatically and regularly. The simplest way to do this would be to hook it to continuous integration–but that may be impractical if the test requires compilers that are not present on some dev machines. Possibly we could make the IS-770 test exercise whatever compilers are present, but not fail on ones that are missing? Or possibly we could make the IS-770 test run automatically but not with every checkin, on a specialized machine?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-320,,,,,,,,,,"1|hzzep3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,danielhardman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove association between wallet and pool,IS-772,31036,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,danielhardman,danielhardman,14/Jun/18 12:54 AM,16/Jul/18 10:47 PM,28/Oct/23 2:49 AM,06/Jul/18 9:11 PM,,,1.6.0,,,,,0,,,,,"Today, our wallet interface assumes that each wallet will be associated with exactly one pool. I think this is unnecessarily rigid. I want the same wallet to be able to store DIDs, keys, and other day from more than one pool. This will allow us to use our wallet to interoperate with other ledger types besides Indy, and will allow someone to conduct test transactions and real transactions without changing wallets. It is related to the backlog item (please confirm we have such an item in our backlog) to support fully qualified DIDs.

The association between a wallet and a pool should be implicit; we should store DID values fully qualified, and the prefixes on the DID value should tell us which pool the DID is associated with.

This change will also help us when we implement microledgers (which may have an association with a pool that is non-obvious).",,,,,,,,,,,,,,,,,,,,,IS-732,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwuzb:",,,,,,EV 18.13,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,danielhardman,gudkov,,,,,,,,,,"05/Jul/18 8:08 PM;gudkov;https://github.com/hyperledger/indy-sdk/pull/925/files;;;","06/Jul/18 9:11 PM;gudkov;Solution implemented, covered by tests and artifacts produced.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation - Improve indy-sdk getting started,IS-773,31037,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,mdb,burdettadam,burdettadam,14/Jun/18 1:41 AM,11/Oct/19 9:13 PM,28/Oct/23 2:49 AM,11/Oct/19 9:13 PM,,,,,,,,0,,,,,"Getting started documentation could improve by:

- adding instructions on how to use the most recent stable releases for provided examples.

- removing assumptions, for example, the provided coding examples language is not clearly stated, the reader must make the assumption that the examples are python using the indy-sdk.

- having a ""10 minutes to success"" intro which is a copy paste script with comments.

- clearly referencing other useful code like the indy-cli.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqr8:",,,,,,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,burdettadam,esplinr,,,,,,,,,,"11/Oct/19 9:13 PM;esplinr;We expect that most users of Indy will start with an Aries Agent or Framework, rather than directly starting with Indy.

The Indy-SDK getting started guide will be deprecated and we will need new documentation for people starting with the Aries project.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Building libindy requires ncurses-devel on Fedora,IS-774,31043,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,SteveGoob,SteveGoob,14/Jun/18 3:51 AM,10/Oct/19 9:45 PM,28/Oct/23 2:49 AM,10/Oct/19 9:45 PM,,,,,,,,0,help-wanted,,,,"^^

this ought to added to the fedora/rhel build documentation",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwvv3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,esplinr,SteveGoob,,,,,,,,,,"10/Oct/19 9:45 PM;esplinr;We don't think this applies to current releases of Indy SDK. If it still a problem, please reopen the issue with updated details.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make indy_crypto_auth_decrypt clear on application layers verification requirements,IS-775,31048,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,devin-fisher,devin-fisher,14/Jun/18 5:22 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,," 

indy_crypto_auth_decrypt and its associated function indy_crypto_auth_crypt provide two important data protection:
 * Confidentiality - using a shared key (diffie hellman key exchange), only two parties can read the plain text
 * Integrity - These functions can verify that the message was not tampered with.

*But* these two functions do not enforce *source authentication.* In particular, indy_crypto_auth_decrypt does not check the sender's verkey is a trusted verkey. That task is left to the application layer (by design).

 

This creates two issues:
 # the function name indy_crypto_auth_decrypt implies (to me) that authentication verified and enforced (with that function name, I would expect it to fail if the message was not from the expected source). Of course, the function don't have enough information to enforce this. And I'm not suggesting it should. The issue is on the implied functionality. Additionally, the function documentation could be more clear about its limitations.
 # Code reuse. Since all applications of libindy will have the need to do this verification ( I don't think there is a common use-case for not checking), this functionality will have to be continually rewritten. This code will be fairly high stakes. 

Solution Ideas:
 # Introduce a higher level API that includes verification. Provide expected verkey or eventually, a micro-ledger to check against.
 # Improve documentation for indy_crypto_auth_decrypt and indy_crypto_auth_crypt to re-enforce the contract with the application layer.
 # Consider changing the API name to something that doesn't imply features it doesn't have. I don't have a better name and of course, this would require deprecating the old and all that mess. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzer3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,devin-fisher,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet - Export/Import functionality,IS-777,31055,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,VladimirVujovic,VladimirVujovic,14/Jun/18 5:03 PM,30/Jun/18 12:39 AM,28/Oct/23 2:49 AM,29/Jun/18 6:21 PM,,,1.6.0,,,,,0,,,,,"*Story*

As a developer building applications that are using wallet, I need to have functionality for export and import contents of the wallet so I can build backup/restore feature in my applications. 

This functionality will allow application users to backup and move their wallet data to different agency or device.

*Acceptance criteria*
 * public API functions for export exist
 ** result of the export API functionality is encrypted file
 ** file is encrypted with encryption key
 ** exported file contains all wallet data
 ** export API function supports taking path and passphrase for deriving encryption key

 * public API function for import exist
 ** import API function supports taking path to the file for import and passphrase for deriving decryption key
 ** import API function will throw an error if tried on a non-empty wallet
 ** import API function supports taking new master key for importing to a new wallet

 * Export/import API functionality works on all storage implementations (default, plugged)

*Notes*

Design document: https://github.com/dkulic/indy-sdk/blob/1f7b0bddb5ac2958bff46847faa6946702f0cdfc/doc/design/009-wallet-export-import/README.md

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzze0v:",,,,,,EV 18.13,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,VladimirVujovic,VladimirWork,zhigunenko.dsr,,,,,,,,,"29/Jun/18 6:15 PM;VladimirWork;Export/import functionality for enterprise (aurora) wallet has been tested by Darko's team.;;;","29/Jun/18 6:21 PM;zhigunenko.dsr;API calls have beed tested via CLI (IS-778) and have sufficient test coverage (IS-779)
Warning: there is no way to check import/export for payment addresses in wallet (libnullpay doesn't store any data in wallet);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet - Export/Import functionality in Indy CLI,IS-778,31056,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,VladimirVujovic,VladimirVujovic,14/Jun/18 6:07 PM,21/Jun/18 11:43 PM,28/Oct/23 2:49 AM,21/Jun/18 11:43 PM,,,,,,,,0,,,,,"*Story*

As Indy CLI user, I need to have the option of exporting contents my wallet to encrypted file and creating and importing wallet from exported file.

*Acceptance criteria*
- User is able to call export functionality in CLI and give passphrase for deriving encryption key and path as parameters

- User is able to call import functionality in CLI and give passphrase for deriving decryption key and path as parameters


*Notes*
This functionality needs to be built based on https://jira.hyperledger.org/browse/IS-777",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzze1r:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,VladimirVujovic,zhigunenko.dsr,,,,,,,,,"19/Jun/18 10:27 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/884;;;","21/Jun/18 11:43 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0-596 (Ubuntu / Windows)

*Steps to Validate:*
1. Fill wallet A by DIDs on Linux
2. Export wallet A 
3. Import wallet A on Windows
4. Fill wallet A by DIDs on Windows
5. Export wallet B 
6. Import wallet B on Linux

*Actual Results:*
Wallet content successfully moved

*Additional Information:*
Also these cases have been checked:
- omitted  _export_path_ parameter
- empty _export_path_
- omitted  _export_key_ parameter
- empty _export_key_
- no opened wallet when _export_
- deferred _export_key_ input during export and import
- import broken file
- import without name
- import with existing wallet name
- import the same backup twice
- import with wrong _export_key_
- import with wrong _key_ - imported but not open;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet - Export/Import functionality in wrappers,IS-779,31058,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,VladimirVujovic,VladimirVujovic,14/Jun/18 6:16 PM,22/Jun/18 12:08 AM,28/Oct/23 2:49 AM,22/Jun/18 12:08 AM,,,,,,,,0,,,,,"*Story*

As a developer building applications that are using wallet, I need to have functionality for export and import contents of the wallet so I can build backup/restore feature in my applications.

This functionality will allow application users to backup and move their wallet data to different agency or device.

*Acceptance criteria*
- Functionality based on the IS-777 ticket is available on wrappers",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzze1z:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,VladimirVujovic,zhigunenko.dsr,,,,,,,,,"20/Jun/18 7:16 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/887;;;","22/Jun/18 12:08 AM;zhigunenko.dsr;*Environment:*
libindy 1.4.0-596

*Test coverage:*
https://github.com/hyperledger/indy-sdk/blob/91690e2864bd1fabb0de0013c96c90c98e3996d6/wrappers/ios/libindy-pod/Indy-demoTests/Case%20Tests/Wallet/WalletHighCases.m#L279
https://github.com/hyperledger/indy-sdk/blob/91690e2864bd1fabb0de0013c96c90c98e3996d6/wrappers/ios/libindy-pod/Indy-demoTests/Case%20Tests/Wallet/WalletHighCases.m#L316
https://github.com/hyperledger/indy-sdk/blob/91690e2864bd1fabb0de0013c96c90c98e3996d6/wrappers/java/src/test/java/org/hyperledger/indy/sdk/wallet/ExportWalletTest.java#L18
https://github.com/hyperledger/indy-sdk/blob/91690e2864bd1fabb0de0013c96c90c98e3996d6/wrappers/java/src/test/java/org/hyperledger/indy/sdk/wallet/ExportWalletTest.java#L27
https://github.com/hyperledger/indy-sdk/blob/91690e2864bd1fabb0de0013c96c90c98e3996d6/wrappers/java/src/test/java/org/hyperledger/indy/sdk/wallet/ImportWalletTest.java#L17
https://github.com/hyperledger/indy-sdk/blob/91690e2864bd1fabb0de0013c96c90c98e3996d6/wrappers/java/src/test/java/org/hyperledger/indy/sdk/wallet/ImportWalletTest.java#L38
https://github.com/hyperledger/indy-sdk/blob/91690e2864bd1fabb0de0013c96c90c98e3996d6/wrappers/python/tests/wallet/test_export_wallet.py#L11
https://github.com/hyperledger/indy-sdk/blob/91690e2864bd1fabb0de0013c96c90c98e3996d6/wrappers/python/tests/wallet/test_export_wallet.py#L17
https://github.com/hyperledger/indy-sdk/blob/91690e2864bd1fabb0de0013c96c90c98e3996d6/wrappers/python/tests/wallet/test_import_wallet.py#L11
https://github.com/hyperledger/indy-sdk/blob/91690e2864bd1fabb0de0013c96c90c98e3996d6/wrappers/python/tests/wallet/test_import_wallet.py#L32;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add `tag` to cred_def_id,IS-780,31087,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,VladimirWork,VladimirWork,15/Jun/18 7:44 PM,21/Jun/18 9:55 PM,28/Oct/23 2:49 AM,21/Jun/18 7:46 PM,,,,,,,,0,,,,,We should add `tag` parameter to cred_def_id since it is supported on the indy-node side.,,,,,,,,,,,,,,,INDY-1355,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze2f:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,VladimirWork,zhigunenko.dsr,,,,,,,,,,"20/Jun/18 6:21 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.4.0~590
indy-node 1.4.467

*Steps to Reproduce:*
1. prepare pool and wallet
2. _ ledger cred-def schema_id=1 signature_type=CL primary={""n"":""1"",""s"":""2"",""rms"":""3"",""r"":{""age"":""4"",""name"":""5""},""rctxt"":""6"",""z"":""7""}_
*Actual Results:*
Transaction has been rejected: validation error [ClientClaimDefSubmitOperation]: empty string (tag=)
*Expected Results:*
Tag is optional

*Additional info:*
* Client can send cred-def with the same tag. It will rotate current record in ledger
* Also _get-cred-def_ with tag parameter for existed and non-existed records are checked;;;","20/Jun/18 7:26 PM;zhigunenko.dsr;CLI help has been fixed in
https://github.com/hyperledger/indy-sdk/pull/889;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet API: Wallet should be accessible in a cluster,IS-781,31089,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,15/Jun/18 9:35 PM,06/Jul/18 9:11 PM,28/Oct/23 2:49 AM,06/Jul/18 9:11 PM,,,1.5,,,,,0,,,,,"Current Wallet API design doesn't satisfy enterprise use case when application is distributed between nodes in cluster:

{quote}Say, I have two node clusters: node1 and node2

Now say, someone hit an agent api, which went to ‘node1’, and it created a wallet w1 (wallet content storage is off course mysql which is shared between ‘node1’ and ‘node2’). What happens is that on whichever node, first time wallet gets created, it creates related config files on local file storage system as well. For example, in this example scenario, since wallet was created on ‘node1’, here are files which I see on ‘node1’:

    ~/.indy_client/wallet/w1
        -rw-r--r--  1 ashokwaghmare  staff   205B Jun 12 16:32 config.json
-rw-r--r--  1 ashokwaghmare  staff   118B Jun 12 16:32 wallet.json

Here are contents of those files
cat config.json
{""db_name"":""wallet"",""port"":3306,""read_host"":""127.0.0.1"",""salt"":[40,173,109,87,96,106,221,67,3,77,160,231,140,53,229,119,111,156,62,144,53,211,215,186,39,15,34,213,146,219,157,251],""write_host"":""127.0.0.1""}%      ➜  817733b2a75bffe66d4825330651b7ab4c3a2bd796b9b5aed98382dc74d8c00a

cat wallet.json
{""pool_name"":""default_pool"",""type"":""aurora"",""name"":""817733b2a75bffe66d4825330651b7ab4c3a2bd796b9b5aed98382dc74d8c00a""}%    ➜  817733b2a75bffe66d4825330651b7ab4c3a2bd796b9b5aed98382dc74d8c00a

So, ‘node1’, knows where is the wallet w1 (from config.json file).

But, when next request goes to ‘node2’, and if same wallet w1 is needed, it doesn’t have those two config files (although a blank directory with wallet-name w1 does exists), and it doesn’t find wallet there.{quote}

We discussed different options and current vision is the following:

- libindy shouldn't have any persistent state related to wallet configuration
- wallet_create function should stop creating of wallet.json/config.json files
- wallet_open function should accept wallet configuration as a single json. This json should provide all information about wallet configuration, wallet storage configuration and placement inside of storage. 
- libindy should stop be responsible for discovering of existing wallets. Corresponded endpoints should be deprecated. 
- Indy CLI should manage the list of wallets on an application level",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-609,,,,,,,,,,"1|hzwuz3:",,,,,,EV 18.13,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"05/Jul/18 8:08 PM;gudkov;Implemented as part of https://github.com/hyperledger/indy-sdk/pull/925/files;;;","06/Jul/18 9:11 PM;gudkov;Solution implemented, covered by tests and artifacts produced.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Config.json is created before storage is successfully created ,IS-782,31091,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,esplinr,nemanja.veskovic,nemanja.veskovic,15/Jun/18 10:41 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"when creating a wallet, file config.json gets created before storage creation.
I've tried it with pluggable aurora storage. After that `config.json` is used for actions like deleteWallet and similar.


This is a bad design because config.json should only be created after successful creation of wallet (including storage too) meaning in this case after aurora storage successfully create storage part",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwwfb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,nemanja.veskovic,,,,,,,,,,"26/Jul/18 7:27 PM;gudkov;It is non-relevant now as libindy stateless according to wallet configs;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Security: Wrap all secrets to structs with automatic zeroing on Drop,IS-783,31122,,Task,In Progress,IS,Indy SDK,software,resplin,,,Medium,,,Artemkaaas,Artemkaaas,17/Jun/18 8:26 PM,08/Aug/18 8:37 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"Secrets in memory should be wiped as soon as possible.

It is much better for all return values in this [module|https://github.com/hyperledger/indy-sdk/tree/master/libindy/src/utils/crypto] to add wrapper types like it has been done in this [PR|https://github.com/hyperledger/indy-sdk/pull/833].

It allows clean memory the proper way.

It required changes in both indy-crypto and indy-sdk

Major note from [~MikeLodder] IS-785
{quote} We should double check that libindy does indeed erase memory when disposing of private keys. It looks like it assumes that Rust zeros RAM when dropping variables. If you move around a value it will only get dropped in the last spot it ended up and the rest keep copies until they're overwritten by other data. The way to work around this usually is to box the data, as moving around a pointer won't leak the actual data, and Drop can clear that only copy (assuming nobody else accessed it improperly and caused copies on their own). If you move a value, it gets copied to another location in memory and the old value is never dropped. Tons of things move in Rust, and auditing for it is likely to be fairly involved. At least this is what I have observed with Rust. {quote}",,,,,,,,,,,,,,,,,,,,,IS-785,,,,,,IS-787,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww53:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,Artemkaaas,MikeLodder,,,,,,,,,,"26/Jul/18 12:08 AM;MikeLodder;That will help and is a good start.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
anoncreds.prover_store_credential fails with indy.error.IndyError: ErrorCode.CommonInvalidParam8,IS-784,31078,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,,smithbk,smithbk,15/Jun/18 2:42 AM,21/Jun/18 12:57 AM,28/Oct/23 2:49 AM,21/Jun/18 12:57 AM,,,,,indycrypto,,,0,,,,,"I am using the stable branch of indy-sdk.  Specifically, my dockerfile has the following:

{code}
RUN pip3 install -U \
        pip \
        setuptools \
        python3-indy==1.3.1-dev-469

RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88 \
    && add-apt-repository ""deb https://repo.sovrin.org/sdk/deb xenial stable"" \
    && apt-get update \
    && apt-get install -y \
    libindy
{code}

Here is my code trying to store the credential:

{code}
    async def store_credential(self, req_json, req_metadata_json, cred_json, cred_def, issuer_name):
        logger.debug(""Storing credential issued by {}: {}, {}, {}, {}"".format(
            issuer_name, req_json, req_metadata_json, cred_json, cred_def))
        await anoncreds.prover_store_credential(
            self.wallet, None, req_json, req_metadata_json, cred_json, cred_def, None)
{code}

And here is the full stack trace with some appropriate logging:

{code}
DEBUG:root:Storing credential issued by faber: {""prover_did"":""7RiBxX7sVbBVXmh8ZbbwR8"",""cred_def_id"":""F1EV3bTy3p8SZwFmqtwJJm:3:CL:31"",""blinded_ms"":{""u"":""71667514445095340043613242882435996987056251222635843983415114789577194120114152683423100696715470469283124078031129014613444044286202051920809596167949610306936660652723108519157891694463032712783511637313587268575222398121323719265869267890065152194323255084101744307724721831585756725438239378671801019366520555577684411834256202595476488142867592854221597808195472489975719827459862000289957394348728042566782276796338393043166931241546966247072032040296314248641763085867807585858250528263502500881030593520064775877450912752817754000492164983638315184737075914470617217971981510404748701621437911173183021994942"",""ur"":null},""blinded_ms_correctness_proof"":{""c"":""110950433797662478496501242700821790613180509559719834036106509544027568060683"",""v_dash_cap"":""3596512252602614913331909373069591868504098606241383921465866579244565894217471181740493960888802912037684685318069526232006755191067996327512945404847716316715217237109126188508690977393743580234218242370328219802215713428974242060995164108604404850278597522527359083600689973137259490867161057361067476464775290877175411213407095050758462212922543598759997022435312890931789932940378212505737837413342566865829760316753391534629505776811345552387190957607241901578603376283600487111934375791762528168322238187326141495188627205369265366127051544836896878465667459548737627656013183875300044956119750315988412325701475533312374691916735942462771332717001608298652743537631049194219443716406950009997941370992951394794"",""ms_cap"":""1251991127336617486958562862233176826619726633030282440515199713000086470175252907949160647524226933745732938219587887223274133076190914679536063164718508696174356618979984875727""},""nonce"":""173687719437673394550474""}, {""master_secret_blinding_data"":{""v_prime"":""32415486172514512595862682189683670864679510103912513205312449571087607819967292797840361107334252669153568126222590532308255334758028797614689927176842838404725224164524389342212527390312912441361902325623563912629944184962108909970779146185705556339068282033842970233183429407376339836634794609394849351351235064144195231070339268458603194135001161934512726823431348322248942124238810169204062651932184596978641379539054105116401038301630371458984895500555156677918103771955986289301520475294187098585571226082792952354917086970010314904629080560632145269891878917435117169225865098438237297073737477476288127709362863539015812324676603826"",""vr_prime"":null},""nonce"":""173687719437673394550474"",""master_secret_name"":""1980a715-94ce-46be-a22d-1cfa12f90fd9""}, {""schema_id"":""K4GJ6BuZb3ppkdYvreu1oN:2:Transcript:1.1"",""cred_def_id"":""F1EV3bTy3p8SZwFmqtwJJm:3:CL:31"",""rev_reg_id"":null,""values"":{""last_name"":{""raw"":""Garcia"",""encoded"":""5321642780241790123587902456789123452""},""status"":{""raw"":""graduated"",""encoded"":""2213454313412354""},""ssn"":{""raw"":""123-45-6789"",""encoded"":""3124141231422543541""},""degree"":{""raw"":""Bachelor of Science, Marketing"",""encoded"":""12434523576212321""},""first_name"":{""raw"":""Alice"",""encoded"":""1139481716457488690172217916278103335""},""year"":{""raw"":""2015"",""encoded"":""2015""},""average"":{""raw"":""5"",""encoded"":""5""}},""signature"":{""p_credential"":{""m_2"":""104848717308916283369655913789504019030418109841338592754757435815945982181402"",""a"":""74588854834649846022262571363741590393679308848150895291762424098285055442949633206740103485255369766018844213467653902552601763085709615394592057955170081132702859134598021594631397777717316474854128329044957815086847073921858608261691495139162211190678284443926041048013606039558952241908124177881445689939561379771569832748540487687969482278834196400092561229735125284273233966020337794125863479926766450127766026286139439984291349306083005473777329761265589608417094881734494793004430534121260265213773509448528824994555058299183462065703098797531500043938685922257633511864213244742966030537972857398654116473942"",""e"":""259344723055062059907025491480697571938277889515152306249728583105665800713306759149981690559193987143012367913206299323899696942213235956742929952323763151664832303300364958501189"",""v"":""7456043300903864894654053154602307862572371137780370542985126903962302561403830691418053666112309956993665838732668860972257081838852122304962121620821178587288580536489251848869340994596159020272644102877370530068555577421379943372257439836909461782902800222173456724977776225342757747547213187339624014606234541967289615126767112426008232805103624026010464952312268786032279753222368261304192547114985934054341797174899121674157822787432502984036082585327567532333686854944922100125420043632953305209457131451157536543883903506952216394590967932617350820546373530757115129615302886786563205581905203603314814119489081427580743754112437858105091512783252985349135772105979311386809997225712875513038846266512241120219612657597577599427007466899624439382671111626300200337367457156196699002492472494921242064317650857751""},""r_credential"":null},""signature_correctness_proof"":{""se"":""15171958138762633657680952653213687586756969672973999714734971091737414220302580214202928574312592324627654921715770402980881214153977888861142561982354462823370820012233067016001441036218398741728682280813025177756773941419368265546765027294238426228982329673632580180593725064727339112136249453728454766887911683877062358783006433216660961759784893598712665210674181047125131165138562237481463674488320087242471013899703870298362571580493963304159548808117871177656159191000033968700575761222915993078680555734603633011547429756663154288790216707711357789777840297819469670209876898939655155019940965106887224068821"",""c"":""7785635275125490401551044875993341200857731679008919044002045833999856205636""},""rev_reg"":null,""witness"":null}, {""ver"":""1.0"",""id"":""F1EV3bTy3p8SZwFmqtwJJm:3:CL:31"",""schemaId"":""31"",""type"":""CL"",""tag"":"""",""value"":{""primary"":{""n"":""87042352283125702201222994739792011577246442900480237747195498118301342886769589717500080363930683577407476632185632264177715279486693223852142603202698578187066638709295939144791152349442919241107907012159152763664594308401107171631541017013387731259225180844124629579923267464400509284385949557040491630182266633744179289430003885071722354248040140457172151920884429799048215444485698892260190336226130603541498545045118008916787819970105855575377133895680441617884835923519364838756147345266514144902609069188609763901874604550712817342136492972834547787892175917579727644793990796182418718716629215667999360692849"",""s"":""44293639653933011999414136616973656161307001617173689084520832615125827153374241073957591632548253294665872644184333933843120604496193859176945469626742793895221783845042637090695048110999633899199332249927229645786491908930529907621485291788243765577441359976985708751839626839071733514275208013780425350605204685137088590993321038375639876521194838475236788055838857288969205543651593951051858218865632608798151739754141304189510242477661896696068476873114607951048852711440101448327528173162617074871158882557805353164651601689989209801842674387886483036732494977917777106453184120790623745881205188307944583492679"",""rms"":""14597103765587236235708505984702810018247924418806974945541504294417773078799479786842266227589265767779114939553300027609086821101813007192617256352966893569593462286967943844366893523141323276268829327902878860477527677087059262089770210432615522782435878828052378458694881255412921229322666318105704516487562005467549399780194382431758854469973753730136159595465430578119817354898660229960978618803199411770670289376757285393175921209189807865262925892464824212369383952673173140254948582238958857044725775510310879811355154685595748175661288113986141527671668894507792050945050807747819731552495320487620148378942"",""r"":{""first_name"":""28816739437504607748652666317752028528053529430458958128189114223125191930339162310377631766343868471700578117106207397080489700837393114154640719467781449235595841380482803693759123596435686105124840872663568228726386306450674301108096480880102761205114828010352696568730173660952827171040189988990413961812761629211307677101670352940783656282720852453289093657167922764972419672101345982885396168131913602787557744859768578520053380694878340762142732936190852941017915947069548294052761347412481501459441050949314134499458572660329091458854148853978065805645899303194272751755166405912911649968419170071487978487165"",""degree"":""45273808525113614949308454607080522370430940935937622264813518847906545265752687365518395595337254349623625032366275413512547183863400661816991967731752184576954798317391776595354952071585401257563920682892691639817410161726803407920385721356296727859360937024958031745193394691283897711777671741482223035536387134841134612296658624942742912146717456645256971190335097001495977938689046967914126854027784359227246948412938257018720200928583489395187907568170722415098585188046869464513666737543553625893020315703691001371271210585716755532737051419277597794483769592317908189847925014464613693298014649685823399989514"",""status"":""80031316411260299958041774448469197999227143128728392362216770593404035544935005028446827634197343326751214401063733553128413633082392631875108687543707866491541192869650275287667770932110008394643299167548683436979497050731717727391647952118943091886450208141888374711484901037040872228773159040558920377853351423559785590965229266413674089718814780112431510685763784053943824302941043724706097322896135950482300824895108414229463957114755170061281146931601407341936088243170703111967346977636399181885152977640988734263142112746806846265740751937786358275739346009103277857898996738363740319615970135699531937526448"",""last_name"":""218782308394964704868449504794881448655977402918623210849153028450526279494862363007981202863390677312733392362989021304282513165622441156535239185927684181253576503649637514759983304864825818475225518361911282082165982974992913994320035495116821845067365083611996232590749716924815457360366668750462001445187120860154175172025840139513105685553297094452470672626050416865947496011058479329293085948171975061186235510759669154826831786489184342724379986944357379518437007187795606831390908638623245169725553968916373537705874849318874120600517488034482890009872354323088302948365266707069169610798089433949714427856"",""average"":""56434998258397049080770501972189261024225421060174743228575891818756184802948900547140521743978123882616487969394451887013282083237319546389644740715503542281268922307535966477381761396801748008572771791887136759184707316497907350078499790173723226122607901839670119237799426981371089244950917765264084504529422057951384364818983772623492354830133190760641095917710952274687829379926182375033795385680254231645803715837029148540530172238538604578999395273465299124342069807087538482936155964771678663337476142068973627767911025259050612739325681106346847731869643071612879543807212215423296180028607071606577870533438"",""ssn"":""85951975222454758101686397556978373784215820008390272791483077692786170632009315956219710656941034920618909300554845947855586891342996290146741311324520316894953304150753377749587552713649880475671311174284198246667817231933043788409071960617477247666934054278967948920520511171610147273949602268168105398334071012217283723855743339407280338807002120142040633976697171215850924072202831239828061856700636562885479003513190754390990433461936306272021770448782438331954014028037689209483317042794151158260268565766396659844671557520044541944537059107772725466139809763215389044451948676070803334857397152318109423614447"",""year"":""47313856984448781634572919724441360028738127796690592703907288909801829888136692359787120366551701644071925679882932277924431639753344416119936621428405668565088362047315174141927842810392038797546054720520308944222395349947465095911265079380630568484000491888050414775419148627309420170782210227975430385816518395565038499831778172184339167846757872914527631381360610441631680276634379647900569898726522659967482533839721821963815092531469625468757118470259363269773905523093023072001741476523266631474505538713475482162003788371171519248378152035512685467813151335849829500195328252106755782072377263548981274922431""},""rctxt"":""53069999836420527352488579053213029536823108301261417131747518599881938938734152564666829194699548624225556550451799241278985416861315202188367174903547428066434998284171308897690872627326421954888470745298771427547068940091687296451922095367872694913714531194496179097534786449564992634442480135364733339683460205607601450466968050381232972462767687735298468291413140218236423917287539437415964440019622972885627414341716397137186018910224043023614052992165109574925620243246379845970474954096360624014954862967526703903483331624274274248184952910901468632554939476865755832120207613898057174372951599847855629083814"",""z"":""63464461366076168948656472917791685375493878049112164079471699274219180719962511394145648408521870920666795972005496196780164791543572661104364438048667763165954573448174715325148271844743164962986943224124361469358750544692800759733846564006920687117500475217899822181737476702689329951187970031154829420458037215856464829846911144751961250276158074765296622692623607893065007182598508421798346072111697917298559915406562500347667967560127755677377433751658259420076451315534700710214430227296248495940087174669918703760691298009247069477663613893446877057662623664637062107901766211859484009928595286332326598133649""}}}
DEBUG:indy.anoncreds:prover_store_credential: Creating callback
DEBUG:indy.libindy:create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
DEBUG:indy.libindy:create_cb: <<< res: <CFunctionType object at 0x7f83840865c0>
DEBUG:indy.libindy:do_call: >>> name: indy_prover_store_credential, args: (c_int(3), None, c_char_p(50693536), c_char_p(50697520), c_char_p(50725280), c_char_p(50747488), None, <CFunctionType object at 0x7f83840865c0>)
DEBUG:indy.libindy:do_call: Function indy_prover_store_credential returned err: 107
WARNING:indy.libindy:_do_call: Function indy_prover_store_credential returned error 107
DEBUG:indy.libindy:do_call: <<< <Future finished exception=IndyError(<ErrorCode.CommonInvalidParam8: 107>,)>
ERROR:flask.app:Exception on /api/v1/credentials [POST]
Traceback (most recent call last):
  File ""/usr/local/lib/python3.5/dist-packages/flask/app.py"", line 2292, in wsgi_app
    response = self.full_dispatch_request()
  File ""/usr/local/lib/python3.5/dist-packages/flask/app.py"", line 1815, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/usr/local/lib/python3.5/dist-packages/flask/app.py"", line 1718, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/usr/local/lib/python3.5/dist-packages/flask/_compat.py"", line 35, in reraise
    raise value
  File ""/usr/local/lib/python3.5/dist-packages/flask/app.py"", line 1813, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/usr/local/lib/python3.5/dist-packages/flask/app.py"", line 1799, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/usr/local/lib/python3.5/dist-packages/eve/endpoints.py"", line 58, in collections_endpoint
    response = post(resource)
  File ""/usr/local/lib/python3.5/dist-packages/eve/methods/common.py"", line 297, in rate_limited
    return f(*args, **kwargs)
  File ""/usr/local/lib/python3.5/dist-packages/eve/auth.py"", line 78, in decorated
    return f(*args, **kwargs)
  File ""/usr/local/lib/python3.5/dist-packages/eve/methods/common.py"", line 1176, in decorated
    getattr(app, event_name + '_' + resource)(*rh_params)
  File ""/usr/local/lib/python3.5/dist-packages/events/events.py"", line 95, in __call__
    f(*a, **kw)
  File ""/home/indy/bin/api.py"", line 63, in pre_credentials_post
    cred = agent.accept_credential_offer(req.json)
  File ""/home/indy/bin/agent.py"", line 251, in accept_credential_offer
    req_json, req_metadata_json, cred_json, cred_def, their_name))
  File ""/home/indy/bin/agent.py"", line 22, in await
    return loop.run_until_complete(coroutine)
  File ""/usr/lib/python3.5/asyncio/base_events.py"", line 387, in run_until_complete
    return future.result()
  File ""/usr/lib/python3.5/asyncio/futures.py"", line 274, in result
    raise self._exception
  File ""/usr/lib/python3.5/asyncio/tasks.py"", line 239, in _step
    result = coro.send(None)
  File ""/home/indy/bin/agent.py"", line 382, in store_credential
    self.wallet, None, req_json, req_metadata_json, cred_json, cred_def, None)
  File ""/usr/local/lib/python3.5/dist-packages/indy/anoncreds.py"", line 618, in prover_store_credential
    prover_store_credential.cb)
  File ""/usr/lib/python3.5/asyncio/futures.py"", line 363, in __iter__
    return self.result()  # May raise too.
  File ""/usr/lib/python3.5/asyncio/futures.py"", line 274, in result
    raise self._exception
indy.error.IndyError: ErrorCode.CommonInvalidParam8
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze4v:",,,,,,EV 18.12 Release New Wallet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,smithbk,,,,,,,,,,"20/Jun/18 7:34 PM;gudkov;[~smithbk] You use stable libindy with a master version of python wrapper. Most probably they expects different amount of store_credential params. I suggest to switch to the last release or master version for both packages.;;;","21/Jun/18 12:57 AM;smithbk;Thanks.  The following worked.

{code}
RUN pip3 install -U \
        pip \
        setuptools \
        python3-indy==1.4.0

RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88 \
    && add-apt-repository ""deb https://repo.sovrin.org/sdk/deb xenial stable"" \
    && apt-get update \
    && apt-get install -y \
    libindy=1.4.0
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Security: Zeroing Memory for private keys,IS-785,31151,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,MikeLodder,MikeLodder,19/Jun/18 4:17 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"We should double check that libindy does indeed erase memory when disposing of private keys. It looks like it assumes that Rust zeros RAM when dropping variables. If you move around a value it will only get dropped in the last spot it ended up and the rest keep copies until they're overwritten by other data. The way to work around this usually is to box the data, as moving around a pointer won't leak the actual data, and Drop can clear that only copy (assuming nobody else accessed it improperly and caused copies on their own). If you move a value, it gets copied to another location in memory and the old value is never dropped. Tons of things move in Rust, and auditing for it is likely to be fairly involved. At least this is what I have observed with Rust.",,,,,,,,,,,,,,,,,,,,,,,,,IS-783,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww3z:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,gudkov,MikeLodder,sergey.minaev,,,,,,,,,"20/Jun/18 7:38 PM;gudkov;[~MikeLodder] [~esplinr] Seems like duplicate for https://jira.hyperledger.org/browse/IS-783;;;","24/Jul/18 11:15 PM;sergey.minaev;Story points are set to 0 as for duplicate;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add encode/decode functions to Indy-SDK for credential attributes,IS-786,31159,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,swcurran,swcurran,19/Jun/18 6:48 AM,01/Apr/20 11:46 PM,28/Oct/23 2:49 AM,,,,,,,,,3,,,,,"In the current implementation of Indy-SDK, a credential to be created is passed to the Indy-SDK from a caller as a list of attributes with a raw and encoded value, something like this:

 

{{ ""attrs"": \{ }}

{{    ""attr1"" : }}{{\{""raw"": ""value1"", ""encoded"": ""value1_as_int"" },}}

{{    ""attr2"" : \{""raw"": ""value2"", ""encoded"": ""value2_as_int"" }}}

}

There are two challenges with this:
 # The encoding/decoding methods are left to the caller to define and use.  For example, the BC Gov VON-Agent implementation uses [this code to encode/decode|[https://von-agent.readthedocs.io/en/latest/_modules/von_agent/codec.html?highlight=codec]] the attributes.  This will cause interoperability problems between systems if different agent implementations use different encoding/decoding methods.
 # The ""raw"" value can be unrelated to the encoded value and is never checked by the Indy-SDK model against the encoded value. This makes it possible to put in one value in the raw version, have the user see that and thinks that is what is being conveyed, but the encoded version could be different.

At minimum, we'd like to see the ""encode""/""decode"" routines be within the Indy-SDK, so that it's not left to the callers to do potentially incompatible encodings. 

Ideally, the caller would only send in the raw value and Indy-SDK would do the encoding of the raw values as part of the Credential Creation process.

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-856,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1545,,,,,,,,,,"1|hzwrhj:910sx39",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,DucaDellaForcoletta,esplinr,gudkov,ignisvulpis,MikeLodder,sklump,swcurran,vladan.divac,vsudip,,,"19/Jun/18 8:27 PM;gudkov;[~danielhardman] [~nage] [~esplinr] As i understand we plan to support this in the future, but it will require introduction of more complex schemas infrastructure that will define measurement units and encryption rules. 

Without enhancement of schemas infrastructure this request look hard to design as encryption can be different for different use cases.;;;","20/Jun/18 12:04 AM;swcurran;That's more complicated than I expected. I was thinking that the caller might have to pass in a datatype for the handling, but not much more than that. Not sure where encryption comes into it at this level.

If such complexity is required, the need for it to be in Indy-SDK is higher.  Perhaps the approach is to add a call now with a versioning mechanism and a simple implementation so that the implementation can be evolved in the future.;;;","06/Aug/18 10:51 PM;ignisvulpis;This topic is coming up in rocket chat again and again. Developers are confused.

In Indy we even have the same value encoded as different values:
 # ""Alex"" 12345 [https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/services/anoncreds/prover.rs#L468""|https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/services/anoncreds/prover.rs#L468]
 # ""Alex"" 1139481716457488690172217916278103335 [https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/utils/anoncreds.rs#L525]
 # ""Alex"" 1139481716457488690172217916278103335 [https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/demo.rs#L220]

I don't think that measurement units are that important. If a schema defines something to be a number in one measurement unit than that is it. I see no need to introduce the possibility that a claim value is in seconds and the prove request requests that value in milliseconds. The schema defines exactly the measurement unit and the values in claims and proves are number in that one unit.

The most important requirement seems to be that integers are encoded as, well, integers. (Although von_agent restricts this to -2^32 to 2^32)

The only thing implemented in indy-crypto is ""GE"". So another requirement on encode is that if v1 > v2 (""Alexander"" > ""Alex"") then encoded(""Alexander"") > encoded(""Alex"")

What is the downside to put the von_agent::encode/decode into Rust and expose the two in the api?

 

 ;;;","09/Aug/18 7:39 PM;sklump;[~ignisvulpis], GE predicate only works on (signed) 32-bit integers, because it requires that the encoded value be the same as the raw. There is no ordering for any other data type, as far as I know.;;;","09/Aug/18 11:45 PM;ignisvulpis;[~sklump] true, although it probably does not hurt to implement a 'reference' encoding with this ordering requirement. Seems easy for BigIntegers if we remove the CODE for them and is probably useful for Strings as well (later). Anyway, I would rather have one reference implementation without this requirement than none.;;;","10/Aug/18 12:03 AM;sklump;It is not at all clear to me how to guarantee ordering on string encoding. Remember, ""9"" > ""10"". Do not become hypnotized by the notation; '>' lexicographically is not the same thing as numerically. Similarly for float encoding; e.g., -2147483648.000000000000000000...1f is going encode to something bigger than 0.0f or else the encoded ordering principle will break elsewhere.;;;","10/Aug/18 1:04 AM;ignisvulpis;I don't see the ""9"">""10"" as a problem because then the type should have been int anyway. The problem with string sorting is different in different cultures and languages but I would (arrogantly) not care about it now and go for the utf-8 (ISO-Latin) sorting [https://en.wikipedia.org/wiki/Alphabetical_order]

 


2018-08-09 17:04 GMT+02:00 Stephen Klump (JIRA) <[jira@hyperledger.org|mailto:jira@hyperledger.org]>:;;;","10/Aug/18 1:14 AM;sklump;There is no 'should'. E.g., attribute nickname values ""41"" and ""43"" for ex-US presidents Bush Sr. and Jr., or civic numbers from street addresses ""1"", ""2"", ... they must be strings or else they could not accommodate ""1A"" or ""2 1/2"".

Once we go into encoded space, the only ordering that applies is the ordering for trivial encodings; i.e., those that match their decoded values. It's like ordering the complex numbers - works fine for the subset where the _i_ coefficient is zero.

I have been assuming UTF-8 throughout too.;;;","14/Aug/18 12:17 AM;swcurran;[~gudkov] [~esplinr] - we now have two implementations of encode/decode - one in Java in the Indy-SDK wrapper (by [~ignisvulpis]) and one on top of the Python wrapper in VON_Anchor (by [~sklump] [https://github.com/PSPC-SPAC-buyandsell/von_anchor/blob/master/von_anchor/codec.py]). Axel and Stephen have been working together on the implementations to try to align them.  There are complexities in this :).

My question is what's next? Should a rust developer take the python/Java implementations and create a rust implementation?  Another option is putting the python implementation into the python wrapper.  Should someone in the node world look at the two implementations and start one there?

What do you think is the best approach?

 

Thanks!;;;","21/Sep/18 8:17 PM;gudkov;PoC from community: PR is here: https://github.com/hyperledger/indy-sdk/pull/1048;;;","21/Sep/18 9:39 PM;sklump;A brief history follows, for posterity.

In the beginning, there was the requirement to encode all strings as numeric strings, but outside the range of int32. To allow for predicates in the indy-sdk, 32-bit integers had to encode to themselves and so the whole int32 space was reserved for 32-bit integers.

Then because of python, null values encoded to the 'None' string, so decoding the encoded value produced a string that could also have been literally the 'None': not great for ORM-like processing that took values from a proof on one cred def and applied it to attributes for another. The system needed a sentinel to mark the null value.

Similarly, sentinels for True and False disambiguated booleans from their stringified (python) equivalents, and then floats came along.

If I were doing it from first principles, I would have just implemented, where 'raw' and 'encoded' have their indy-sdk meaning and 'orig' means the typed value in the data model:
orig -> raw:
* 1: The raw value is the stringified orig value (exception: empty string '' for null).

orig -> encoded:
* 1: Is orig an int32? If so, stringify it and return the result.
* 2: JSON-dump orig to string (on utf-8 encoding), build an int from the bytes, add maxint32 and return.

encoded -> orig:
* 1: is encoded a string with numeric value in int32? If so, return its int value.
* 2: Subtract maxint32, build a string (on utf-8 encoding) corresponding to its bytes, JSON-load and return.

By the time this simpler approach dawned on me, unfortunately Mr. Axel Nennker had already invested his sweat and tears into reproducing the original algorithm to match encoded values across the Python/Java divide (floats were evil). And modern JSON tools may not be available, or may be overly heavy, for the micro-platforms to which Mr. Nennker is porting. So this approach may not be as universal as it appears at first glance.;;;","01/Nov/18 5:42 AM;MikeLodder;I reported this over a year ago. I can't find the issue so I wonder if it was closed. I recommended that it be fixed in indy-crypto so all the library callers have to pass is the revealed attribute values and the proof to the verification logic and it would check it. During issuance the issuer should just pass in the string values and indy-crypto would handle mapping them to numbers.

What I'm curious about is why I can't find my original issue and where did it go? I labeled it as high priority because this attack allows any prover to lie about their non-numeric attributes.;;;","02/Nov/18 9:47 AM;swcurran;[~MikeLodder] - [~sklump] has put in a HIPE and has code for this.  It would be really nice to get some ideas on direction about this.  [~danielhardman] commented on the HIPE to say it is insufficient because of the lack of potential ZKP support.  What flexibility should be added so that we can go further than this?  Have others thought of what can/should be done?

The answer to Daniel's question on the HIPE is that we have nothing now so we have no chance at interoperability - every Dev is making up their own solution (as Stephen and Axel have both done). Using Stephen's solution would give Devs an appropriate API (encode with only raw data input, and decode) to use going forward, and we can add what's needed to make the encoding ZKP-friendlier in the future.  I think (not certain) Stephen put in a ""version"" mechanism in the encode so that we should be able to improve the capability later.  I'm guessing the more useful capabilities would require enhancements to the schema object - adding in claim metadata to make improved ZKP opportunities possible.

Those I've talked to in the Dev community to see this and pack/unpack as two of the most glaring omissions from the current SDK.  Progress on this would be really helpful. ;;;","02/Nov/18 9:17 PM;sklump;My current partial implementation includes a version prefix. However, I had never realized the 256-bit limit for encodings. As it stands my current approach has a flaw in that it exposes an overload attack.  Some have proposed using a straight SHA-256 encoding on raw input (excluding 32-bit ints), and that would work, but preclude a version prefix.

A fundamental question is: is encoding a one-way function or is it intended to be reversible? Is it a requirement to be able to recover the raw or the original* from the encoding? If not, I would lean toward stringify-and-SHA-256, with the method for stringification being in the schema metadata (e.g., how to stringify a quaternion, complex number, RGB value, currency value ""$0.05"" Ontario vs. ""0,05$"" Québec).

\* I've used terms:
  - the _original_ as the input, before any contact with indy, potentially having any type
  - the _raw_ as indy-sdk terms it, necessarily stringified (indy-sdk raises exceptions for anything but a string for a raw value in the attribute value JSON encoding);;;","10/Oct/19 8:56 PM;esplinr;This will be addressed as we implement Rich Schemas as part of the W3C Verifiable Credentials. Most of this work will likely be done on the Aries Tier.;;;",,,,,,,,,,,,,,,
Security: Avoid secrets tracing,IS-787,31210,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,gudkov,gudkov,20/Jun/18 7:41 PM,07/Aug/18 9:54 PM,28/Oct/23 2:49 AM,07/Aug/18 7:01 PM,,,1.6.2,,,,,0,,,,,"Today we found multiple cases when libindy prints secrets if trace log level is enabled. I suggest the following:

- Review the code and find all places
- Introduce secret_debug! macro that will allow debug printing of secrets in test builds only. Log all secrets only with this macro if needed
- ASAP wrap secrets to structs with modified Debug trait implemented similar to !secret_debug macro. It will allow safe logging of these structs. 

This behavior should be implemented in both libindy and indy-crypto (consider to split it into 2 tasks)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-783,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjif:",,,,,,EV 18.15,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,VladimirWork,zhigunenko.dsr,,,,,,,,"30/Jul/18 6:00 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1000
Changes:
    Added secret! a macro that allows proper logging secret data
    Used `Derivative` external crate that allows excluding a field from default `Debug` implementation.
Here is the list of data has been hidden:
   WalletApi: credentials, export/import config_json
   CryptoAPi:  key_info_json,  signkey
   DidApi: did_info_json,  identity_json
   AnoncredsApi: 
         Prover: master_secret
         Issuer: Private keys,  data related to Prover;;;","02/Aug/18 10:27 PM;zhigunenko.dsr;*Environment:*
libindy 1.6.1~665

*Steps to Validate:*
run _RUST_LOG=trace python3.5 perf_processes.py -g pool_transactions_genesis -c 1 -k ""[\""nym\"",\""schema\"",\""cred_def\"",\""attrib\"",\""revoc_reg_def\"",\""revoc_reg_entry\"" ,\""get_nym\"",\""get_schema\"",\""get_attrib\"",\""get_cred_def\"",\""get_revoc_reg\"",\""get_revoc_reg_delta\""]""_

*Actual results:*
It requires new indy-crypto version

Now some data are exposed:
RevocationKeyPrivate{gamma: GroupOrderElement{bn: 34407A2FA131B0 A430AE373ED089 FB90D6567B3A16 7D87AD98714087 44C76BA}},;;;","07/Aug/18 6:48 PM;VladimirWork;Build Info:
libindy 1.6.1~684 python3-indy 1.6.1.dev684

Steps to Validate:
1. Run RUST_LOG=trace python3.5 perf_processes.py -g pool_transactions_genesis -c 1 -k ""[\""nym\"",\""schema\"",\""cred_def\"",\""attrib\"",\""revoc_reg_def\"",\""revoc_reg_entry\"" ,\""get_nym\"",\""get_schema\"",\""get_attrib\"",\""get_cred_def\"",\""get_revoc_reg\"",\""get_revoc_reg_delta\""]""

Actual Results:
There are no private keys or other secrets in trace log.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
libnullpay ledger fees coming back different,IS-788,31252,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,zhigunenko.dsr,DouglasWightman,DouglasWightman,21/Jun/18 5:59 AM,05/Jul/18 9:12 PM,28/Oct/23 2:49 AM,05/Jul/18 9:12 PM,,,,,,,,0,,,,,"libvcx is testing getting transactions fees from the ledger using libnullpay.  To do this we first set some fees and then query to get them back.  This was working until we tried build 586 and the list of fees we get back is different from the list of fees we set.   Here is the output from the test:
{noformat}
setting fees: {""0"":1, ""1"":1, ""101"":2, ""102"":42, ""103"":1999998889, ""104"":0, ""105"":0, ""106"":0, ""107"":0, ""108"":0, ""109"":0, ""110"":0, ""111"":0, ""112"":0, ""113"":0, ""114"":0, ""115"":0, ""116"":0, ""117"":0, ""118"":0, ""119"":0}

returned fees: {""116"":0,""118"":0,""110"":0,""109"":0,""111"":0,""NYM"":1,""104"":0,""103"":1999998889,""107"":0,""106"":0,""CRED_DEF"":42,""119"":0,""108"":0,""114"":0,""113"":0,""112"":0,""105"":0,""117"":0,""SCHEMA"":2,""115"":0,""0"":1}{noformat}
The fees we get back have the string representation.  Is this expected?  Looking at the libnullpay tests it seems the tests recently changed the static FEES string.  Is this expected?  Should libvcx use the strings (SCHEMA, CRED_DEF, NYM, for example) or should it use the numbers (1, 101, 102, for example)?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze0f:",,,,,,EV 18.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,DouglasWightman,KitHat,zhigunenko.dsr,,,,,,,,,"21/Jun/18 5:46 PM;KitHat;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/893;;;","22/Jun/18 11:54 PM;KitHat;Available in master-597;;;","05/Jul/18 9:12 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.5.0~614
indy-cli 1.5.0~614

*Steps to validate:*
ledger set-fees-prepare payment_method=null fees=1:1
ledger set-fees-prepare payment_method=null fees=ATTRIB:2
ledger set-fees-prepare payment_method=null fees=101:3,CRED_DEF:4
ledger set-fees-prepare payment_method=null fees=101:5,CRED_DEF:6

*Actual results:*
All fees have been set;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
panic in prover_create_proof,IS-789,31267,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,gudkov,smithbk,smithbk,21/Jun/18 11:28 PM,26/Jul/18 9:31 PM,28/Oct/23 2:49 AM,25/Jul/18 6:33 PM,1.5,,1.6.2,,indycrypto,,,0,TShirt_S,,,,"I'm using v1.4.0 as follows in docker. 

{code}
RUN pip3 install -U \
        pip \
        setuptools \
        python3-indy==1.4.0

RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88 \
    && add-apt-repository ""deb https://repo.sovrin.org/sdk/deb xenial stable"" \
    && apt-get update \
    && apt-get install -y \
    libindy=1.4.0
{code}

And here are the logs with the panic:

{code}
TRACE|indy::services::anoncreds::prover|   src/services/anoncreds/prover.rs:248 | _prepare_credentials_for_proving >>> requested_credentials: RequestedCredentials { self_attested_attributes: {""attr6_referent"": ""123-456-7890""}, requested_attributes: {""attr5_referent"": RequestedAttribute { cred_id: ""8591bcac-ee7d-4bef-ba7e-984696440b30"", timestamp: None, revealed: true }, ""attr1_referent"": RequestedAttribute { cred_id: ""8591bcac-ee7d-4bef-ba7e-984696440b30"", timestamp: None, revealed: true }, ""attr4_referent"": RequestedAttribute { cred_id: ""8591bcac-ee7d-4bef-ba7e-984696440b30"", timestamp: None, revealed: true }, ""attr2_referent"": RequestedAttribute { cred_id: ""8591bcac-ee7d-4bef-ba7e-984696440b30"", timestamp: None, revealed: true }, ""attr3_referent"": RequestedAttribute { cred_id: ""8591bcac-ee7d-4bef-ba7e-984696440b30"", timestamp: None, revealed: true }}, requested_predicates: {""attr2_referent"": ProvingCredentialKey { cred_id: ""8591bcac-ee7d-4bef-ba7e-984696440b30"", timestamp: None }} }, proof_req: ProofRequest { nonce: BigNumber { openssl_bn: 1529590177320 }, name: ""Job-Application"", version: ""0.1"", requested_attributes: {""attr6_referent"": AttributeInfo { name: ""phone_number"", restrictions: None, non_revoked: None }, ""attr4_referent"": AttributeInfo { name: ""status"", restrictions: Some([Filter { schema_id: None, schema_issuer_did: None, schema_name: None, schema_version: None, issuer_did: None, cred_def_id: Some(""yDYXVNuFHE2GLDNVs3iai:3:CL:31"") }]), non_revoked: None }, ""attr3_referent"": AttributeInfo { name: ""degree"", restrictions: Some([Filter { schema_id: None, schema_issuer_did: None, schema_name: None, schema_version: None, issuer_did: None, cred_def_id: Some(""yDYXVNuFHE2GLDNVs3iai:3:CL:31"") }]), non_revoked: None }, ""attr1_referent"": AttributeInfo { name: ""first_name"", restrictions: None, non_revoked: None }, ""attr5_referent"": AttributeInfo { name: ""ssn"", restrictions: Some([Filter { schema_id: None, schema_issuer_did: None, schema_name: None, schema_version: None, issuer_did: None, cred_def_id: Some(""yDYXVNuFHE2GLDNVs3iai:3:CL:31"") }]), non_revoked: None }, ""attr2_referent"": AttributeInfo { name: ""last_name"", restrictions: None, non_revoked: None }}, requested_predicates: {""predicate1_referent"": PredicateInfo { name: ""average"", p_type: "">="", p_value: 4, restrictions: Some([Filter { schema_id: None, schema_issuer_did: None, schema_name: None, schema_version: None, issuer_did: None, cred_def_id: Some(""yDYXVNuFHE2GLDNVs3iai:3:CL:31"") }]), non_revoked: None }}, non_revoked: None }
thread '<unnamed>' panicked at 'called `Option::unwrap()` on a `None` value', libcore/option.rs:335:21
stack backtrace:
   0: <unknown>
   1: <unknown>
   2: <unknown>
   3: <unknown>
   4: std::panicking::rust_panic_with_hook
   5: <unknown>
   6: std::panicking::begin_panic_fmt
   7: rust_begin_unwind
   8: core::panicking::panic_fmt
   9: core::panicking::panic
  10: <unknown>
  11: <unknown>
  12: <unknown>
  13: <unknown>
  14: <unknown>
  15: __rust_maybe_catch_panic
  16: <unknown>
  17: <unknown>
  18: start_thread
  19: clone
TRACE|indy::services::pool          |           src/services/pool/mod.rs:291 | zmq poll 1
TRACE|indy::services::pool          |           src/services/pool/mod.rs:308 | cmd [[101, 120, 105, 116]]
TRACE|indy::services::pool          |           src/services/pool/mod.rs:242 | process_actions - Pool work terminated
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjof:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Artemkaaas,gudkov,sergey.minaev,smithbk,,,,,,,,"22/Jun/18 4:08 AM;smithbk;I found it.  The requested_predicate name did not match.  But still, I think it should provide a better error rather than panic'ing and requiring looking at the code to figure out.;;;","12/Jul/18 8:37 PM;sergey.minaev;For developers: it may be https://github.com/hyperledger/indy-sdk/blob/f58e5fde80b71f0dc99ee60ad86c8b3634f8e341/libindy/src/services/anoncreds/prover.rs#L262;;;","12/Jul/18 8:38 PM;sergey.minaev;[~gudkov] [~esplinr] I suggest to include this ticket in the nearest sprint if it wouldn't be fixed during IS-790;;;","24/Jul/18 11:57 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/979;;;","25/Jul/18 2:06 PM;Artemkaaas;Changes: replaced usages of `unwrap` on try macros
Build version: master-646;;;","25/Jul/18 6:33 PM;gudkov;PR merged. Test passed.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Wallet Enchancement: Integrate tags-based search to Anoncreds workflow,IS-790,31290,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,22/Jun/18 6:52 PM,19/Jul/18 9:15 PM,28/Oct/23 2:49 AM,19/Jul/18 9:14 PM,,,1.6.0,,,,,0,,,,,"Wallet support efficient search based on tags, but credentials filtering code doesn't benefit from it and uses old inefficient approach. We need to integrate tags based search to Anoncreds workflow.

PoA:
 - store_credential call should also create tags for credential object:
 - schema_id (encrypted)
 - schema_issuer_did (encrypted)
 - schema_name (encrypted)
 - schema_version (encrypted)
 - issuer_did (encrypted)
 - cred_def_id (encrypted)
 - raw attribute (encrypted) - *discuss with Daniel and others*
 - user defined tags - *discuss with Daniel and others*
 - get_credentials should support wql in filter parameter
 - get_credentials_for_proof_req should support additional filter parameter with optional custom wql for each attribute in proof request - discuss with Daniel and others
 - Also we need to update get_credentials and indy_prover_create_proof to return iterator instead of the whole list of values. Iterator for indy_prover_create_proof will be a bit complex as we need dedicated iteration over each attribute in proof request.
 - Logic of credential search should create the most selective wql query based on stored tags and apply additional filter if needed during lazy iteration",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwuzz:",,,,,,EV 18.14,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,Artemkaaas,gudkov,swcurran,,,,,,,,,"23/Jun/18 3:41 AM;swcurran;Our (BC Gov) thoughts on the last two items are as follows:
 - get_credentials should support wql in filter parameter

For this one, we would want the return value from the get_credentials function be compatible with the return result of the get_credentials_for_proof_req and that either can be used subsequent on an  [indy_prover_create_proof|https://github.com/hyperledger/indy-sdk/blob/a0473562bed41bf6fdcdd6ee2cd7222a18186bf5/libindy/src/api/anoncreds.rs#L1105]. That would allow us to use that call to get the credentials filtered at the wallet level for use in creating a Proof.
 - get_credentials_for_proof_req should support additional filter parameter with custom wql - discuss with Daniel and others

Assuming we can use ""get_credentials"" in the proof flow, I would suggest that a little more time/consideration be taken to figure the right solution for this. Our thinking is that the filtering needs to be within the Proof Request JSON itself, so that the Verifier can specify it.  How to do that in an possibly interoperable way - e.g. potentially possible with other Identity Solutions would be good.

Note that being able to do wallet-level filtering for Proofs is absolutely crucial for us, so if a revised get_credentials still cannot be used in a Proof flow, then the proposed update to get_credentials_for_proof_req (within or outside of a Proof Request data structure) is crucial.;;;","10/Jul/18 10:08 PM;gudkov;[~swcurran] [~danielhardman] [~Artemkaaas]
{quote}For this one, we would want the return value from the get_credentials function be compatible with the return result of the get_credentials_for_proof_req and that either can be used subsequent on an indy_prover_create_proof. That would allow us to use that call to get the credentials filtered at the wallet level for use in creating a Proof.
{quote}
*get_credentials* and *prover_create_proof* have different mission. The first one filters the credentials, but second one filters the credential for each attribute in proof request. User can create aggregated proof that for each attribute uses different credentials. *get_credentials* returns list of *Credential Info* records, *indy_prover_create_proof* returns the map were for each attribute in proof request present exactly same list of *Credential Info* records.

Both results are compatible with *create_proof* function and contains enough information for proof creation after corresponded filtering on application level.
{quote}Our thinking is that the filtering needs to be within the Proof Request JSON itself
{quote}
Usually proof request doesn't contain values of attributes and Verifier don't know values of attributes. As result I am really not sure that we need to include additional values filtering to Proof Request. But now i see that it isn't good idea to add single wql parameter to *get_credentials_for_proof_req* as we need dedicated wql restriction for each attribute. We still need additional filter, but i suggest to define dedicated wql query for each attribute:

{{filter = \{}}
  'attr1': wql1,
  'attr2': wql2,
};;;","10/Jul/18 10:11 PM;gudkov;[~swcurran] [~danielhardman] [~Artemkaaas]

Also we need to update get_credentials and indy_prover_create_proof to return iterator instead of the whole list of values. Iterator for indy_prover_create_proof will be a bit complex as we need dedicated iteration over each attribute in proof request.;;;","11/Jul/18 12:49 AM;swcurran;[~gudkov] I think you mean that *get_credentials* and *get_credentials_for_proof_req* have different missions, which makes sense.  So is the solution going to be to include a wql filter to both calls so that the wallet results can reflect that?  Or are you saying we (the application) will have to write a filter to convert the output of *get_credentials* to match the input required by *prover_create_proof*?

Re: Proof Request.  We do think that in some cases the Verifier will know enough about what they are after to specify in the Proof Request attributes and needed values. While not the common case, it will be needed.  Agree that a single wql specification will not be useful.  What we would really like to see is that instead of a proof request being a list of attributes each from a credential, that a proof request be a list of credential specifications and a group of attributes associated with each credential. In that case, the wql would obviously be associated with the credential.

We are not worried about making the Proof Request change in this ticket.  Our plan is to have the Verifier include the wql in our Proof Request, and then have the Prover extract the wql and remove it from the Proof Request to be acceptable to Indy-SDK.  That way we can play with the Proof Request a bit and propose something to the community.;;;","18/Jul/18 2:37 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/940
Build version: master-625
 Changes: 
 * `indy_prover_store_credential` API call was updated to create tags for a stored credential object.
 * Added two chains of APIs related to credentials search that allows fetching records by batches:
 ** Simple credentials search - `indy_prover_search_credentials` - `indy_prover_fetch_credentials` - `indy_prover_close_credentials_search`
 ** Search credentials for proof request - `indy_prover_search_credentials_for_proof_req` - `indy_prover_fetch_credentials_for_proof_req` - `indy_prover_close_credentials_search_for_proof_req`
 * All search functions support wql queries;;;","19/Jul/18 9:15 PM;gudkov;Required API was implemented, covered by tests and tests passed.;;;",,,,,,,,,,,,,,,,,,,,,,,,
"Wallet Import / Export should not be ""experimental""",IS-791,31298,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,esplinr,esplinr,22/Jun/18 11:09 PM,20/Jul/18 8:38 PM,28/Oct/23 2:49 AM,20/Jul/18 8:38 PM,,,1.6.0,,wallet,,,0,,,,,"*Acceptance Criteria*
* Evaluate what additional changes are needed to have confidence in the Wallet Import / Export -- specifically with the file format
* Remove any comment that mentions it being experimental
* Remove any mention of it being experimental from the release notes",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwuzr:",,,,,,EV 18.14,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,esplinr,gudkov,,,,,,,,,,"06/Jul/18 4:12 PM;gudkov;Additional notes:

daniel.hardman [4:38 PM]
Before I forget, I would like to recommend that the import/export functions for wallets be modified as follows:
1. add a parameter that is a progress callback, so that very large wallets can be handled with some idea of how far into the process we are;
2. Allow the application to bundle other things into the wallet data, besides the data that the wallet knows about (so the application could back up some external files along with the wallet, if needed)


vyacheslav.gudkov [4:50 PM]
Hi, What is priority for these improvements? the point 1 seems feasible, but i am not sure that we ready for point 2 right now. We need some generic vision how to reference external data from the wallet that we don't have for the moment.

I can just create Jira stories related to this.

slackbot [4:50 PM]
daniel.hardman has snoozed notifications. Send one anyway? Send notification

daniel.hardman [7:01 PM]
The goal would be to modify the API quickly, but not implement any functionality for it. In other words, we want to allocate params in the functions, but ignore them, so we don’t have to change the function signature later.;;;","19/Jul/18 6:53 PM;gudkov;Changed export file format:
 * Use MsgPack instead of custom entities serialization to be more reliable and allow extend-ability in backward compatible way
 * Changed header format to be more reliable and allow extend-ability in backward compatible way
 * Use STOP message to make sure that there was no truncation of export file

Removed EXPERIMENTAL notice for import/export API endpoints.

PR with changes:

[https://github.com/hyperledger/indy-sdk/pull/968/files]

We found the way for getting progress and cancellation in backward compatible way. There are dedicated stories:

https://jira.hyperledger.org/browse/IS-831
 https://jira.hyperledger.org/browse/IS-832;;;","20/Jul/18 8:38 PM;gudkov;Experimental warnings were removed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
did.key_for_did returns incorrect error for nonexistent DID,IS-792,31337,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,VladimirWork,VladimirWork,25/Jun/18 6:27 PM,28/Jun/18 1:34 AM,28/Oct/23 2:49 AM,27/Jun/18 8:24 PM,,,,,,,,0,TShirt_S,,,,"Build Info:
indy-node 1.4.477
libindy 1.4.0~596
python3-indy 1.4.0.dev596

Steps to Reproduce:
1. Create and open pool and wallet.
2. Call `did.key_for_did` for valid DID that doesn't present in wallet and ledger.

Actual Results:
{noformat}
TRACE|indy::commands::did           |                src/commands/did.rs:550 | Invalid structure: data did not match any variant of untagged enum Reply
ERROR|indy::errors::indy            |                 src/errors/indy.rs:73  | Casting error to ErrorCode: Invalid library state: Invalid GetNymReplyResult json: InvalidStructure(""data did not match any variant of untagged enum Reply"")
TRACE|indy::api::did                |                     src/api/did.rs:300 | indy_key_for_did: key: """"
IndyError: ErrorCode.CommonInvalidState
{noformat}

Expected Results:
WalletNotFoundError (204) should be returned.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze1j:",,,,,,EV 18.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,VladimirWork,,,,,,,,,,"25/Jun/18 6:33 PM;sergey.minaev;I'm not sure about 204 is the best error code for this scenario. Actually there is no requested DID also in the ledger, not just in the wallet. 204 is correct error code for KeyForLocalDID call.
BTW InvalidState is incorrect error here;;;","25/Jun/18 9:20 PM;sergey.minaev;After discussion with Slava we decide to return 212 error as temporary solution and add appropriate comment for this case. Probably, ItemNotFound will became common error, not just wallet error.;;;","26/Jun/18 5:14 PM;sergey.minaev;PR with fix https://github.com/hyperledger/indy-sdk/pull/904
Fix version: master 1.4.0-604
Changes: return WalletItemNotFound (212) instead of InvalidState;;;","27/Jun/18 8:24 PM;VladimirWork;Build Info:
indy-node 1.4.470
libindy 1.4.0~605
python3-indy 1.4.0.dev605

Steps to Validate:
1. Create and open pool and wallet.
2. Call `did.key_for_did` for valid DID that doesn't present in wallet and ledger.

Actual Results:
{noformat}
TRACE|indy::commands::did           |                src/commands/did.rs:545 | _get_nym_ack >>> wallet_handle: 3, get_nym_reply_result: Ok(""{\""op\"":\""REPLY\"",\""result\"":{\""data\"":null,\""identifier\"":\""3fyKjNLV6foqDxoEbBiQhY\"",\""type\"":\""105\"",\""dest\"":\""3fyKjNLV6foqDxoEbBiQhY\"",\""seqNo\"":null,\""state_proof\"":{\""multi_signature\"":{\""participants\"":[\""Node4\"",\""Node3\"",\""Node2\""],\""signature\"":\""R7HLiMwmFh5hzs7jkzvs5JBxcWQThdj17bztKdQj6DRnDdnVzhfdyfpzsvbZHFAVjLkTtbHPhVFaqrqbF11NVsp5sT1ghgyrP5v6YTjod9SR6pS45BaGeD2C4FdupZbqJmGVQWuwJ4aFsHaQP5qrMXdU4ogJ1RgCFRhJgPQUZcApGf\"",\""value\"":{\""timestamp\"":1530027887,\""pool_state_root_hash\"":\""H59VbR38tmmnyyDovb65XGB1jGv4Z8e4hbXcwurwDRBb\"",\""state_root_hash\"":\""GwvsXxrLAYqpg2QmDXe1HeNsJuCRRxgbdRv9dmDZZRW\"",\""txn_root_hash\"":\""EkAAgte9pyEHpDA1BvuswGqtQxkvxpPs9yjJn5f9QKsc\"",\""ledger_id\"":1}},\""proof_nodes\"":\""+QOo+QGRoFO6njmm+jSFPiYl0J8gDs5rXlyvB0wPnOaSPOE01b8qoCRrkPoJJsDOYhsTcefJRPzhi0c3OsuIXmClRILScKFVoBAQl6iGdT+RPppqALuRsYOrtSSacblYrK1aZiMAZ52voIFjFgU6a1VEXSCR2XpugiQrs564Bd0h\\/pWcUMnRv+eroCaWNdQlDcG7lM6HjGQ1wOduMUFACjnqC3akv8GaDnf8oFbaqDP5cAUDMK7ZHjFXGuBgFgT8TT4I\\/84BvHprERfCoN1y2Tkpgb4xTjhg1nO3i6qA0v5cO0dsoQ9pb9RpFuofgKBLJw5NNJjV4kGenC1nXgkkZ7STyo5A6MxJHI1c3\\/m0G4CAoL8QgC6a78sPnRhjdbUStwqlPP4TOGrPyYC4FAYtN\\/A9oApPgooeo5yhtCSmQrp9oQGH8pBYgf+wP6a2sjj80NAUgKA0p3RBUZRmMZVbLPFNGd+LI8hJA5VChFp2jMScDGZQ\\/6CtyRhicU8eRxNBrbcu5FGqTbLyQnPb4yt8LPhshaxqN4D5AhGgGgcd4St7pk6WFtJsg69pcVywhUyEGR126kWbB1IsYGig9SlSGRa6Pl3VK06PhZoClXn41W5ABvKBmpxMqqVKc+ughCtDNBiluc553NwvRL0K1kC1ebxdgSnzAuL8yyf5aFagmQ3GeunWIQ30zNnjVwJfj0yIdVBFUuPS9pIk1hunGJWgcBfg35txNsnDf7tahYBuN+AIwV+IoSXsPXJYFHwXoEqg33dwNGmFZ3lMyhj5MDYMC6X1c0MJJ79u50re4Um\\/ej2gAHvXydCefa3b2rTi3buOsJ2wiSxEU9kNgy0iIOwBzeCgUln9I5xKMbPvTCMXmbgFWpzDQIujH9gX228nILNZ\\/GGgPOvYc0ZogXQhrGJXNV7NBeVR6bWAmCZ2RQ8LIMZZCfWgGTowPXz2LDS6P46oawD2CDBxrpBG+PusJC+mn\\/2rZH+gopPbRLKuKue8pKcHAalIPPOiNlEO8SuMpDurzD3AGoKgpwuIzEXnHg+iNx4Lu2LCgshZhSlyFfqmhB+RrOuzaXOgqYaKSf4NipD2vSfTxVHLL9GLHkJ5LxNOQaUd9o8SVQ6gy1LcTp6\\/\\/O50dQHgLZSTclozM3Mg8C83vQC3PUyr8K2gIabaqBVdhYFMuXpuivbFPB0L3aJ3zaDOlwelU+O+e2ug4JCABf3E6TGjUKprYg66guL2\\/s7rlYKYfGHe1SeeJI+A\"",\""root_hash\"":\""GwvsXxrLAYqpg2QmDXe1HeNsJuCRRxgbdRv9dmDZZRW\""},\""reqId\"":1530098503143894156,\""txnTime\"":null}}"")
ERROR|indy::errors::indy            |                 src/errors/indy.rs:73  | Casting error to ErrorCode: Item not found
TRACE|indy::api::did                |                     src/api/did.rs:300 | indy_key_for_did: key: """"
IndyError: ErrorCode.WalletItemNotFound
------------------------------ Captured log call -------------------------------
libindy.py                  72 WARNING  _indy_loop_callback: Function returned error 212
--------------------------- Captured stdout teardown ---------------------------
6: failed
Message: ErrorCode.WalletItemNotFound
{noformat}
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Standardize the wallet export serialization format,IS-793,31342,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,esplinr,esplinr,25/Jun/18 11:45 PM,27/Jul/18 4:59 AM,28/Oct/23 2:49 AM,24/Jul/18 5:06 PM,,,1.6.0,,wallet,,,0,,,,,"The experimental wallet export format currently uses a non-standard serialization process. It should be changed to use the same message pack as the rest of LibIndy.

 

*Work Involved*
 * Create and review Plan of Attack
 * Implement and test the changes
 * Initiate standardization process (separate ticket)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjnj:",,,,,,EV 18.14,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,esplinr,gudkov,zhigunenko.dsr,,,,,,,,,"06/Jul/18 10:40 PM;gudkov;Additional notes:

daniel.hardman [4:38 PM]
Before I forget, I would like to recommend that the import/export functions for wallets be modified as follows:
1. add a parameter that is a progress callback, so that very large wallets can be handled with some idea of how far into the process we are;
2. Allow the application to bundle other things into the wallet data, besides the data that the wallet knows about (so the application could back up some external files along with the wallet, if needed)

vyacheslav.gudkov [4:50 PM]
Hi, What is priority for these improvements? the point 1 seems feasible, but i am not sure that we ready for point 2 right now. We need some generic vision how to reference external data from the wallet that we don't have for the moment.

I can just create Jira stories related to this.

slackbot [4:50 PM]
daniel.hardman has snoozed notifications. Send one anyway? Send notification

daniel.hardman [7:01 PM]
The goal would be to modify the API quickly, but not implement any functionality for it. In other words, we want to allocate params in the functions, but ignore them, so we don’t have to change the function signature later.
;;;","19/Jul/18 6:52 PM;gudkov;Changed export file format:
 * Use MsgPack instead of custom entities serialization to be more reliable and allow extend-ability in backward compatible way
 * Changed header format to be more reliable and allow extend-ability in backward compatible way
 * Use STOP message to make sure that there was no truncation of export file

Removed EXPERIMENTAL notice for import/export API endpoints.

PR with changes:

[https://github.com/hyperledger/indy-sdk/pull/968/files]

We found the way for getting progress and cancellation in backward compatible way. There are dedicated stories:

https://jira.hyperledger.org/browse/IS-831
https://jira.hyperledger.org/browse/IS-832;;;","20/Jul/18 9:09 PM;gudkov;[~zhigunenko.dsr] I suggest to re-check this with CLI interface.;;;","24/Jul/18 5:05 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.5.643 (Windows)
indy-cli 1.5.643 (Ubuntu)

*Steps to Validate:*
1. Open CLI on Ubuntu
2. Create DID with and without metadata
3. Backup wallet to file
4. Open CLI on Windows
5. Restore wallet from backup
6. Check that DID's still exist
7. Backup wallet to file
8. Restore wallet from backup on Ubuntu
9. Check that DID's still exist

*Actual results:*
DID's haven't been corrupted;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Payments API should not be ""experimental""",IS-794,31343,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,25/Jun/18 11:49 PM,26/Jul/18 9:31 PM,28/Oct/23 2:49 AM,24/Jul/18 7:31 PM,,,1.6.0,,payments,,,0,,,,,"*Acceptance Criteria*
 * Evaluate what additional changes are needed to have confidence in the Payments API
 * Remove any comment that mentions it being experimental
 * Remove any mention of it being experimental from the release notes",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-819,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjon:",,,,,,EV 18.14,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,esplinr,gudkov,,,,,,,,,"24/Jul/18 2:29 PM;Artemkaaas;Changes: Removed EXPERIMENTAL notice from endpoints.
Build version: master-643;;;","24/Jul/18 7:32 PM;gudkov;Verification: EXPERIMENTAL comments removed. Corresponded info added to release notes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Prepare the 1.6 release of IndySDK,IS-795,31345,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,esplinr,esplinr,25/Jun/18 11:57 PM,04/Oct/18 4:29 AM,28/Oct/23 2:49 AM,30/Jul/18 6:54 PM,,,1.6.0,,,,,0,,,,,"*Task Overview*
 Perform all necessary tasks in order to release LibIndy 1.6

*Acceptance Criteria*
 * Code is tested
 * Release is tagged
 * Release notes are drafted
 * Release notes are reviewed by Docs and Product Management
 * A new release of Indy-Crypto is part of this release

*Notes*",,,,,,,,,,,IS-822,,,,,,,IS-1024,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-294,,,,,,,,,,"1|hzzjn3:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,esplinr,gudkov,zhigunenko.dsr,,,,,,,,,"26/Jul/18 9:09 PM;gudkov;Rc 1.6 is out and we started validation;;;","30/Jul/18 4:58 PM;zhigunenko.dsr;-All artifacts and docs for 1.6.1 are available, excluding IOS artifacts- fixed
FYI [~sergey.minaev];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stop using indy_crypto JSONENCODABLE,IS-796,31403,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,ignisvulpis,ignisvulpis,27/Jun/18 5:57 PM,30/Jul/18 9:31 PM,28/Oct/23 2:49 AM,27/Jul/18 11:07 PM,,,1.6.0,,,,,0,,,,,"indy_crypto::JsonEncodable is used in many places in libindy.

e.g.: [https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/commands/did.rs#L28]

 

I suggest stop doing that. Why?:
 # indy-crypto is for crypto and it is not indy-utils. Why is JSONENCODABLE there anyway?
 # Any extern crate use in libindy is a liability. Libindy is depending on that crate (obviously)
 # Errors raised by these methods are IndyCryptoErrors which libindy then has to map to its own errors.
 # serde_json provides everything libindy needs.
 # serde_json is kind of part of rust, so support for serde_json is high. If serde_json advances then libindy might directly profit from that.
 # libindy code is easier to read because many developers know serde_json anyway and so developers do not have to look at indy-crypto whether there are subtle differences.

 

This PR [https://github.com/hyperledger/indy-sdk/pull/886] mostly gets rid of map_err but also it shows that serde_json is all that libindy needs.

[https://github.com/hyperledger/indy-crypto/blob/master/libindy-crypto/src/utils/json.rs] provides two methods that can easily be replaced by serde_json methods. Also it provides two types JsonEncodable and JsonDecodable which can be replaced by serde_json types as well.

 

For reason 1. I would deprecate indy-crypto/utils/json.rs

[~danielhardman]

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjmv:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,ignisvulpis,,,,,,,,,,"16/Jul/18 11:16 PM;gudkov;We also consider this as a problem;;;","25/Jul/18 11:47 PM;gudkov;Implemented in PRs:

https://github.com/hyperledger/indy-sdk/pull/986/files
https://github.com/hyperledger/indy-crypto/pull/119;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
_indy_loop_callback: Function returned error 112     Error occurred: ErrorCode.CommonInvalidState,IS-797,31444,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,Xzccc,Xzccc,28/Jun/18 10:15 PM,29/Jun/18 12:11 PM,28/Oct/23 2:49 AM,29/Jun/18 12:11 PM,,,,,,,,0,,,,,"I install the indy-sdk follow the url:[https://github.com/hyperledger/indy-sdk/blob/master/doc/ubuntu-build.md]
 And run the pool successfully by
 {{docker run -itd -p 9701-9708:9701-9708 indy_pool}}
 Then I follow the doc Write a DID and Query Its Verkey and touch the write_did.py.
 However, when I run write_did.py, an error occurred:

 
{code:java}
root@lab:/opt/python_indy# python3 write_did.py
1. Create new pool ledger configuration to connect to ledger.
2. Open ledger and get handle
_indy_loop_callback: Function returned error 112 Error occurred: ErrorCode.CommonInvalidState
{code}
{code:java}
root@lab:/opt/python_indy# docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 
3066c713c8f0 indy_pool ""/usr/bin/supervisord"" 11 hours ago Up 11 hours 0.0.0.0:9701-9708->9701-9708/tcp laughing_ardinghelli{code}
part of write_did.py code as shown in picture.

Thanks a lot!","OS:Ubuntu 16.04

Python version:3.5.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/18 10:10 PM;Xzccc;image-2018-06-28-21-10-53-967.png;https://jira.hyperledger.org/secure/attachment/15195/image-2018-06-28-21-10-53-967.png","28/Jun/18 10:18 PM;Xzccc;screenshot-1.png;https://jira.hyperledger.org/secure/attachment/15196/screenshot-1.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgiv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Xzccc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot migrate DIDs wrom old CLI,IS-798,31487,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Invalid,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,29/Jun/18 6:06 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"New import/export functionality had replace existing DID migration mechanism (https://github.com/hyperledger/indy-sdk/blob/b4a2bb82087e2eafe5e55bddb20a3069e5fb7d0b/cli/README.md#old-python-based-cli-migration) from old CLI.
_wallet export_ now require _key_ and _export_key_
So we need separate command for migration

","indy-cli 1.5.0~610
indy-node 1.3.62 - 1.4.66",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgon:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,zhigunenko.dsr,,,,,,,,,,,"24/Jul/18 9:22 PM;zhigunenko.dsr;*Reason to Invalid:*
Ticket was created by mistake;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Produce pure JSON output from `ledger get-validator-info`,IS-799,31495,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ozheregelya,ckochenower,ckochenower,30/Jun/18 12:59 AM,03/Aug/18 10:26 PM,28/Oct/23 2:49 AM,03/Aug/18 7:06 PM,,,1.6.2,,,,,0,,,,,"Indy CLI provides a way to get validator info using `ledger get-validator-info`. The output is a mix of text and JSON output. The following three changes are recommended to provide a more programatic use of the output:

1. Produce pure JSON output in the form:

{code}
{
  ""Node1"": {...},
  ""Node2"": {...},
  ...
  ""NodeN"": {...}
}
{code}
",,,,,,,,,,,,,,,,,,IS-843,IS-844,,,,,,,,IS-588,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjkf:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,ckochenower,esplinr,gudkov,ozheregelya,sergey.minaev,,,,,,"10/Jul/18 8:51 AM;ckochenower;[~krw910] - The lack of at least #3 in the description significantly slows down chaos experiment development. Any experiment that shuts down the indy-node service or blocks the node port on at least one node in the cluster causes `ledger get-validator-info` to wait until the default timeout (""about 100 seconds"") before the experiment can proceed any further.;;;","24/Jul/18 10:26 PM;esplinr;[~anikitinDSR]: Is this issue still valid? I thought we had fixed this.;;;","25/Jul/18 12:12 AM;gudkov;[~esplinr] It is still valid. Also it is much better to split into 3 different tickets.;;;","31/Jul/18 6:09 AM;esplinr;I split this into different tickets;;;","01/Aug/18 1:54 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1012;;;","01/Aug/18 10:49 PM;sergey.minaev;Build version 1.6.1 master 665;;;","02/Aug/18 8:14 PM;ozheregelya;Environment:
indy-cli 1.6.1~665
libindy 1.6.1~665
indy-node 1.5.534

Reason for Rejection:
`ledger get-validator-info` output is not a valid json.

Steps to Reproduce:
1. Run `ledger get-validator-info` command in indy-cli.

Actual Results:
Output format is
{code}
{
  Node10: {...}
  Node17: {...}
  ...
  NodeX: {...}
}
{code}
Expected Results:
Output format should be 
{code}
{
  ""Node1"": {...},
  ""Node2"": {...},
  ...
  ""NodeN"": {...}
}
{code}
Node names should be in quotes, and ',' should be at the end of each line (exclude the last one). Lines should be ordered by node name.;;;","02/Aug/18 8:53 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1022;;;","03/Aug/18 2:46 PM;Artemkaaas;Build-version: master-671;;;","03/Aug/18 6:24 PM;ozheregelya;Environment:
 indy-cli 1.6.1~671
 libindy 1.6.1~671
 indy-node 1.5.539

Steps to Validate:
 1. Run `ledger get-validator-info` command in indy-cli.

Actual Results:
 Output is a valid JSON in format
{code:java}
{
  ""Node17"": {...},
  ""Node10"": {...},
  ...
  ""NodeX"": {...}
}{code}
[~ckochenower], is nodes order important for you?;;;","03/Aug/18 7:04 PM;sergey.minaev;[~ozheregelya] I suggest to not block this ticket for Corin response. If order is important we can do it as part of IS-843;;;","03/Aug/18 7:06 PM;ozheregelya;[~sergey.minaev], ok, I'll move this one to Done.;;;","03/Aug/18 10:26 PM;ckochenower;[~ozheregelya] - Order is not important in my use cases.;;;",,,,,,,,,,,,,,,,,
Ledger merkle tree doesn\'t acceptable for current tree,IS-800,31524,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Invalid,ashcherbakov,smithbk,smithbk,02/Jul/18 11:30 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,indycrypto,,,0,,,,,"I get the following error when trying to open the pool ledger file.
{code:java}
DEBUG:indy.libindy:do_call: Function indy_open_pool_ledger returned err: 0
DEBUG:indy.libindy:do_call: <<< <Future pending>
 INFO|indy::services::pool          |           src/services/pool/mod.rs:549 | RemoteNode::send_str Node3 pi
 INFO|indy::services::pool          |           src/services/pool/mod.rs:549 | RemoteNode::send_str Node2 pi
 INFO|indy::services::pool          |           src/services/pool/mod.rs:549 | RemoteNode::send_str Node1 pi
 INFO|indy::services::pool          |           src/services/pool/mod.rs:549 | RemoteNode::send_str Node4 pi
TRACE|indy::services::pool          |           src/services/pool/mod.rs:238 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:346 | get_zmq_poll_timeout first_event Tm { tm_sec: 57, tm_min: 12, tm_hour: 2, tm_mday: 2, tm_mon: 6, tm_year: 118, tm_wday: 1, tm_yday: 182, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 275673370 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:347 | get_zmq_poll_timeout now_utc Tm { tm_sec: 7, tm_min: 12, tm_hour: 2, tm_mday: 2, tm_mon: 6, tm_year: 118, tm_wday: 1, tm_yday: 182, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 278826921 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout diff Duration Duration { secs: 49, nanos: 996846449 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff ms 49996
TRACE|indy::services::pool          |           src/services/pool/mod.rs:291 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node3 po
 INFO|indy::services::pool          |           src/services/pool/mod.rs:549 | RemoteNode::send_str Node3 {""op"":""LEDGER_STATUS"",""txnSeqNo"":4,""merkleRoot"":""9fz6UuY8gaGyiRFsKykhKtZrtZrgVKJxEdhwqTMUWyeX"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null}
TRACE|indy::services::pool          |           src/services/pool/mod.rs:244 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:238 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:346 | get_zmq_poll_timeout first_event Tm { tm_sec: 57, tm_min: 12, tm_hour: 2, tm_mday: 2, tm_mon: 6, tm_year: 118, tm_wday: 1, tm_yday: 182, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 275673370 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:347 | get_zmq_poll_timeout now_utc Tm { tm_sec: 7, tm_min: 12, tm_hour: 2, tm_mday: 2, tm_mon: 6, tm_year: 118, tm_wday: 1, tm_yday: 182, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 310223078 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout diff Duration Duration { secs: 49, nanos: 965450292 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff ms 49965
TRACE|indy::services::pool          |           src/services/pool/mod.rs:291 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node2 po
 INFO|indy::services::pool          |           src/services/pool/mod.rs:549 | RemoteNode::send_str Node2 {""op"":""LEDGER_STATUS"",""txnSeqNo"":4,""merkleRoot"":""9fz6UuY8gaGyiRFsKykhKtZrtZrgVKJxEdhwqTMUWyeX"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null}
TRACE|indy::services::pool          |           src/services/pool/mod.rs:244 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:238 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:346 | get_zmq_poll_timeout first_event Tm { tm_sec: 57, tm_min: 12, tm_hour: 2, tm_mday: 2, tm_mon: 6, tm_year: 118, tm_wday: 1, tm_yday: 182, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 275673370 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:347 | get_zmq_poll_timeout now_utc Tm { tm_sec: 7, tm_min: 12, tm_hour: 2, tm_mday: 2, tm_mon: 6, tm_year: 118, tm_wday: 1, tm_yday: 182, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 317435273 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout diff Duration Duration { secs: 49, nanos: 958238097 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff ms 49958
TRACE|indy::services::pool          |           src/services/pool/mod.rs:291 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node2 {""ledgerId"":0,""merkleRoot"":""AsBGPwMzHjDGhpjtLwpqF4wfvNGLsm4516Ybz3py5XiF"",""op"":""LEDGER_STATUS"",""viewNo"":null,""ppSeqNo"":null,""txnSeqNo"":4}
TRACE|indy::services::pool          |           src/services/pool/mod.rs:244 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:238 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:346 | get_zmq_poll_timeout first_event Tm { tm_sec: 57, tm_min: 12, tm_hour: 2, tm_mday: 2, tm_mon: 6, tm_year: 118, tm_wday: 1, tm_yday: 182, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 275673370 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:347 | get_zmq_poll_timeout now_utc Tm { tm_sec: 7, tm_min: 12, tm_hour: 2, tm_mday: 2, tm_mon: 6, tm_year: 118, tm_wday: 1, tm_yday: 182, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 328726453 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout diff Duration Duration { secs: 49, nanos: 946946917 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff ms 49946
TRACE|indy::services::pool          |           src/services/pool/mod.rs:291 | zmq poll 3
 INFO|indy::services::pool          |           src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node3 {""merkleRoot"":""AsBGPwMzHjDGhpjtLwpqF4wfvNGLsm4516Ybz3py5XiF"",""txnSeqNo"":4,""op"":""LEDGER_STATUS"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null}
 INFO|indy::services::pool          |           src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node1 po
 INFO|indy::services::pool          |           src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node4 po
 INFO|indy::services::pool          |           src/services/pool/mod.rs:549 | RemoteNode::send_str Node1 {""op"":""LEDGER_STATUS"",""txnSeqNo"":4,""merkleRoot"":""9fz6UuY8gaGyiRFsKykhKtZrtZrgVKJxEdhwqTMUWyeX"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null}
 INFO|indy::services::pool          |           src/services/pool/mod.rs:549 | RemoteNode::send_str Node4 {""op"":""LEDGER_STATUS"",""txnSeqNo"":4,""merkleRoot"":""9fz6UuY8gaGyiRFsKykhKtZrtZrgVKJxEdhwqTMUWyeX"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null}
TRACE|indy::services::pool          |           src/services/pool/mod.rs:244 | zmq poll loop <<
TRACE|indy::services::pool          |           src/services/pool/mod.rs:238 | zmq poll loop >>
TRACE|indy::services::pool          |           src/services/pool/mod.rs:346 | get_zmq_poll_timeout first_event Tm { tm_sec: 57, tm_min: 12, tm_hour: 2, tm_mday: 2, tm_mon: 6, tm_year: 118, tm_wday: 1, tm_yday: 182, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 275673370 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:347 | get_zmq_poll_timeout now_utc Tm { tm_sec: 7, tm_min: 12, tm_hour: 2, tm_mday: 2, tm_mon: 6, tm_year: 118, tm_wday: 1, tm_yday: 182, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 339145907 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:349 | get_zmq_poll_timeout diff Duration Duration { secs: 49, nanos: 936527463 }
TRACE|indy::services::pool          |           src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff ms 49936
TRACE|indy::services::pool          |           src/services/pool/mod.rs:291 | zmq poll 1
 INFO|indy::services::pool          |           src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node4 {""txnSeqNo"":4,""viewNo"":null,""op"":""LEDGER_STATUS"",""merkleRoot"":""AsBGPwMzHjDGhpjtLwpqF4wfvNGLsm4516Ybz3py5XiF"",""ledgerId"":0,""ppSeqNo"":null}
TRACE|indy::services::pool          |           src/services/pool/mod.rs:242 | process_actions - Invalid library state: Ledger merkle tree doesn't acceptable for current tree.
ERROR|indy::services::pool          |           src/services/pool/mod.rs:428 | Pool worker thread finished with error CommonError(InvalidState(""Ledger merkle tree doesn\'t acceptable for current tree.""))
 INFO|indy::commands                |                src/commands/mod.rs:108 | PoolCommand command received
 INFO|indy::commands::pool          |               src/commands/pool.rs:67  | OpenAck handle 1, pool_id 2, result Err(CommonError(InvalidState(""Ledger merkle tree doesn\'t acceptable for current tree."")))
ERROR|indy::errors::indy            |                 src/errors/indy.rs:68  | Casting error to ErrorCode: Invalid library state: Ledger merkle tree doesn't acceptable for current tree.
DEBUG:indy.libindy:_indy_callback: >>> command_handle: 1, err 112, args: (0,)
DEBUG:indy.libindy:_indy_callback: <<<
DEBUG:indy.libindy:_indy_loop_callback: >>> command_handle: 1, err 112, args: (0,)
WARNING:indy.libindy:_indy_loop_callback: Function returned error 112
{code}
The following is the pool_transactions_genesis file. I confirmed this file is the same on both the nodes and the client where this error is occurring. And I am also able to connect from my client machine to port 9711 (and others) of 172.30.201.215.
{code:java}
# cat pool_transactions_genesis 
{""data"":{""alias"":""Node1"",""blskey"":""4N8aUNHSgjQVgkpm8nhNEfDf6txHznoYREg9kirmJrkivgL4oSEimFF6nsQ6M41QvhM2Z33nves5vfSn9n1UwNFJBYtWVnHYMATn76vLuL3zU88KyeAYcHfsih3He6UHcXDxcaecHVz6jhCYz1P2UZn2bDVruL5wXpehgBfBaLKm3Ba"",""client_ip"":""172.30.201.215"",""client_port"":9712,""node_ip"":""172.30.201.215"",""node_port"":9711,""services"":[""VALIDATOR""]},""dest"":""Gw6pDLhcBcoQesN72qfotTgFa7cbuqZpkX3Xo6pLhPhv"",""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""txnId"":""fea82e10e894419fe2bea7d96296a6d46f50f93f9eeda954ec461b2ed2950b62"",""type"":""0""}
{""data"":{""alias"":""Node2"",""blskey"":""37rAPpXVoxzKhz7d9gkUe52XuXryuLXoM6P6LbWDB7LSbG62Lsb33sfG7zqS8TK1MXwuCHj1FKNzVpsnafmqLG1vXN88rt38mNFs9TENzm4QHdBzsvCuoBnPH7rpYYDo9DZNJePaDvRvqJKByCabubJz3XXKbEeshzpz4Ma5QYpJqjk"",""client_ip"":""172.30.201.215"",""client_port"":9714,""node_ip"":""172.30.201.215"",""node_port"":9713,""services"":[""VALIDATOR""]},""dest"":""8ECVSk179mjsjKRLWiQtssMLgp6EPhWXtaYyStWPSGAb"",""identifier"":""EbP4aYNeTHL6q385GuVpRV"",""txnId"":""1ac8aece2a18ced660fef8694b61aac3af08ba875ce3026a160acbc3a3af35fc"",""type"":""0""}
{""data"":{""alias"":""Node3"",""blskey"":""3WFpdbg7C5cnLYZwFZevJqhubkFALBfCBBok15GdrKMUhUjGsk3jV6QKj6MZgEubF7oqCafxNdkm7eswgA4sdKTRc82tLGzZBd6vNqU8dupzup6uYUf32KTHTPQbuUM8Yk4QFXjEf2Usu2TJcNkdgpyeUSX42u5LqdDDpNSWUK5deC5"",""client_ip"":""172.30.201.215"",""client_port"":9716,""node_ip"":""172.30.201.215"",""node_port"":9715,""services"":[""VALIDATOR""]},""dest"":""DKVxG2fXXTU8yT5N7hGEbXB3dfdAnYv1JczDUHpmDxya"",""identifier"":""4cU41vWW82ArfxJxHkzXPG"",""txnId"":""7e9f355dffa78ed24668f0e0e369fd8c224076571c51e2ea8be5f26479edebe4"",""type"":""0""}
{""data"":{""alias"":""Node4"",""blskey"":""2zN3bHM1m4rLz54MJHYSwvqzPchYp8jkHswveCLAEJVcX6Mm1wHQD1SkPYMzUDTZvWvhuE6VNAkK3KxVeEmsanSmvjVkReDeBEMxeDaayjcZjFGPydyey1qxBHmTvAnBKoPydvuTAqx5f7YNNRAdeLmUi99gERUU7TD8KfAa6MpQ9bw"",""client_ip"":""172.30.201.215"",""client_port"":9718,""node_ip"":""172.30.201.215"",""node_port"":9717,""services"":[""VALIDATOR""]},""dest"":""4PS3EDQ3dW1tci1Bp6543CfuuebjFrg36kLAUcskGfaA"",""identifier"":""TWwCRQRZ2ZHMJFn9TzLp7W"",""txnId"":""aa5e817d7cc626170eca175822029339a444eb0ee8f0bd20d3b0b76e566fb008"",""type"":""0""}
{code}
Release info from my pool container is:
{code:java}
# apt list | grep indy

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

indy-anoncreds/xenial,now 1.0.11 amd64 [installed,automatic]
indy-node/xenial,now 1.3.62 amd64 [installed,automatic]
indy-plenum/xenial,now 1.2.42 amd64 [installed,automatic]
libindy-crypto/xenial,now 0.4.0 amd64 [installed,automatic]
libindy-crypto-dev/xenial 0.1.6 amd64
python3-indy-crypto/xenial,now 0.4.1 amd64 [installed,automatic]
xindy/xenial 2.4-1.3 amd64
xindy-rules/xenial 2.4-1.3 all
{code}
And release info from my client is:
{code:java}
jj{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgtj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashcherbakov,gudkov,sergey.minaev,smithbk,VladimirWork,,,,,,,"02/Jul/18 10:01 PM;gudkov;What you mean on the ""latest stable sovrin releases""? Could you provide exact version numbers?;;;","03/Jul/18 2:49 AM;smithbk;Here is the dockerfile for my node pool, installing from ""xenial stable""
{code}
FROM ubuntu:16.04

RUN apt-get update && apt-get -y dist-upgrade && apt-get -y autoremove && apt-get clean
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88
RUN apt-get install -y software-properties-common python-software-properties
RUN add-apt-repository ""deb https://repo.sovrin.org/deb xenial stable""
RUN apt-get install -y apt-transport-https
RUN apt-get update -y
RUN apt-get upgrade -y
RUN apt-get install -y ntp pciutils iptables curl \
                        iputils-ping net-tools telnet debsigs \
                        debsig-verify vim pwgen python-pip python3-pip \
                        python3.5-dev libsodium18 sovrin supervisor \
                        sudo
{code}

And from my node pool container:
{code}
# apt list | grep indy

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

indy-anoncreds/xenial,now 1.0.11 amd64 [installed,automatic]
indy-node/xenial,now 1.3.62 amd64 [installed,automatic]
indy-plenum/xenial,now 1.2.42 amd64 [installed,automatic]
libindy-crypto/xenial,now 0.4.0 amd64 [installed,automatic]
libindy-crypto-dev/xenial 0.1.6 amd64
python3-indy-crypto/xenial,now 0.4.1 amd64 [installed,automatic]
xindy/xenial 2.4-1.3 amd64
xindy-rules/xenial 2.4-1.3 all
{code}

And here is my client dockerfile:
{code}
FROM ubuntu:16.04

ENV LC_ALL=""C.UTF-8""
ENV LANG=""C.UTF-8""
ENV SHELL=""/bin/bash""

# Install environment
RUN apt-get update -y && apt-get install -y \
	wget \
	python3.5 \
	python3-pip \
	python-setuptools \
	apt-transport-https \
	ca-certificates \
	software-properties-common \
	net-tools \
	curl \
	telnet \
	nano \
        vim

RUN pip3 install -U \
	pip \
	setuptools \
	python3-indy==1.4.0

RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88 \
    && add-apt-repository ""deb https://repo.sovrin.org/sdk/deb xenial stable"" \
    && apt-get update \
    && apt-get install -y \
    libindy=1.4.0
{code}

And version packages from my client container:
{code}
# apt list | grep indy

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

indy-cli/xenial 1.5.0 amd64
libindy/xenial 1.5.0 amd64 [upgradable from: 1.4.0]
libindy-crypto/xenial 0.4.1 amd64
libindy-crypto-dev/xenial 0.4.1 amd64
libindy-dev/xenial 1.5.0 amd64
python3-indy-crypto/xenial 0.4.1 amd64
xindy/xenial 2.4-1.3 amd64
xindy-rules/xenial 2.4-1.3 all
{code}

;;;","09/Jul/18 7:31 PM;sergey.minaev;From trace I see that mentioned genesis transactions are used only on client side. But not on pool side:


{code:java}
INFO|indy::services::pool          |           src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node2 {""ledgerId"":0,""merkleRoot"":""AsBGPwMzHjDGhpjtLwpqF4wfvNGLsm4516Ybz3py5XiF"",""op"":""LEDGER_STATUS"",""viewNo"":null,""ppSeqNo"":null,""txnSeqNo"":4}
{code}

The `AsBGPwMzHjDGhpjtLwpqF4wfvNGLsm4516Ybz3py5XiF` hash doesn't correspond to `pool_transactions_genesis` in ticket description
At pool there is different set for some reason. Please fix it to avoid the Invalid state error.;;;","09/Jul/18 8:22 PM;sergey.minaev;[~zhigunenko.dsr] [~VladimirWork] did we have any problems related to reading genesis file on Node side at 1.3.62 version?;;;","09/Jul/18 9:00 PM;smithbk;Thanks Sergey, but I'm going to need more help in debugging this.  Why would the pool hash be different?  The  /var/lib/indy/sandbox/pool_transactions_genesis file on the pool side is the same as the pool_transactions_genesis file used by the client.  In fact, I have a file service running on the pool node to return this file to the client.  So what else could cause the hash to be different?

BTW, which field of the pool_transactions_genesis file is the merkleRoot hash from the trace statement supposed to match?;;;","09/Jul/18 9:05 PM;VladimirWork;[~sergey.minaev] > did we have any problems related to reading genesis file on Node side at 1.3.62 version?
No.;;;","09/Jul/18 10:57 PM;sergey.minaev;From RocketChat :

Dockerfile
{code:java}
FROM ubuntu:16.04
RUN apt-get update && apt-get -y dist-upgrade && apt-get -y autoremove && apt-get clean
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88
RUN apt-get install -y software-properties-common python-software-properties
RUN add-apt-repository ""deb https://repo.sovrin.org/deb xenial stable""
RUN apt-get install -y apt-transport-https
RUN apt-get update -y
RUN apt-get upgrade -y
RUN apt-get install -y ntp pciutils iptables curl \
                        iputils-ping net-tools telnet debsigs \
                        debsig-verify vim pwgen python-pip python3-pip \
                        python3.5-dev libsodium18 sovrin supervisor \
                        sudo


RUN echo '[supervisord]\n\
logfile = /tmp/supervisord.log\n\
logfile_maxbytes = 50MB\n\
logfile_backups=10\n\
logLevel = error\n\
pidfile = /tmp/supervisord.pid\n\
nodaemon = true\n\
minfds = 1024\n\
minprocs = 200\n\
umask = 022\n\
### user = indy\n\
identifier = supervisor\n\
directory = /tmp\n\
nocleanup = true\n\
childlogdir = /tmp\n\
strip_ansi = false\n\
\n\
[program:node1]\n\
command=start_indy_node Node1 9711 9712\n\
directory=/home/indy\n\
stdout_logfile=/tmp/node1.log\n\
stderr_logfile=/tmp/node1.log\n\
\n\
[program:node2]\n\
command=start_indy_node Node2 9713 9714\n\
directory=/home/indy\n\
stdout_logfile=/tmp/node2.log\n\
stderr_logfile=/tmp/node2.log\n\
\n\
[program:node3]\n\
command=start_indy_node Node3 9715 9716\n\
directory=/home/indy\n\
stdout_logfile=/tmp/node3.log\n\
stderr_logfile=/tmp/node3.log\n\
\n\
[program:node4]\n\
command=start_indy_node Node4 9717 9718\n\
directory=/home/indy\n\
stdout_logfile=/tmp/node4.log\n\
stderr_logfile=/tmp/node4.log\n\
\n\
[program:fileserver]\n\
command=python3 -m http.server\n\
directory=/var/lib/indy\n\
stdout_logfile=/tmp/fileserver.log\n\
stderr_logfile=/tmp/fileserver.log' >> /etc/supervisord.conf

### USER indy

RUN awk '{if (index($1, ""NETWORK_NAME"") != 0) {print(""NETWORK_NAME = \""sandbox\"""")} else print($0)}' /etc/indy/indy_config.py> /tmp/indy_config.py
RUN mv /tmp/indy_config.py /etc/indy/indy_config.py

COPY bin/* /home/indy/bin/

EXPOSE 9711 9712 9713 9714 9715 9716 9717 9718 8000

CMD [""/home/indy/bin/start-pool""]
{code}
;;;","09/Jul/18 10:57 PM;sergey.minaev;
{code:java}
$ cat start-pool 
#!/bin/bash
IP=$(ip a | perl -lne 'print $1 if /([0-9.]+).*global/')
/home/indy/bin/generate_indy_pool_transactions --nodes 4 --clients 5 --nodeNum 1 2 3 4 --ips=""$IP,$IP,$IP,$IP""
/usr/bin/supervisord -c /etc/supervisord.conf
{code}
;;;","09/Jul/18 10:59 PM;sergey.minaev;Changed portsStart in generation script:

{code:none}
$ cat generate_indy_pool_transactions 
#!/usr/bin/python3

from plenum.common.test_network_setup import TestNetworkSetup

from indy_common.config_util import getConfig
from indy_common.config_helper import ConfigHelper, NodeConfigHelper
from indy_common.txn_util import getTxnOrderedFields
import logging


portsStart = 9710
nodeParamsFileName = 'indy.env'


if __name__ == ""__main__"":
    logger = logging.getLogger()
    logger.disabled = True
    TestNetworkSetup.bootstrapTestNodes(getConfig(), portsStart, nodeParamsFileName,
                                        getTxnOrderedFields(), ConfigHelper, NodeConfigHelper)
{code}
;;;","09/Jul/18 11:05 PM;ashcherbakov;[~smithbk]
Genesis txn file is used during the first initialization of the node only. So, if you edited genesis txn file after you started the node, you would need to clear the node (ledger) data so this is re-created from genesis file. Service restart will be needed as well.;;;","10/Jul/18 6:36 AM;smithbk;[~ashcherbakov] Thanks, but I didn't edit the genesis txn file.;;;","10/Jul/18 4:49 PM;ashcherbakov;ok, but the genesis txn file contains custom ports (starting from 9710). How did you edit `generate_indy_pool_transactions ` script and when did you run it?;;;","10/Jul/18 9:01 PM;smithbk;I hope the following clarifies the steps that I took.

First, the reason that I changed the standard ports is because port 9702 is used by kubernetes in `docker edge`, so I changed the ports to start at 9710 instead of 9701.  I did this by modifying the `portsStart` variable in the `generate_indy_pool_transactions` script as shown in Sergey's last post, but is here again.
{code}
$ cat generate_indy_pool_transactions 
#!/usr/bin/python3

from plenum.common.test_network_setup import TestNetworkSetup

from indy_common.config_util import getConfig
from indy_common.config_helper import ConfigHelper, NodeConfigHelper
from indy_common.txn_util import getTxnOrderedFields
import logging


portsStart = 9710
nodeParamsFileName = 'indy.env'


if __name__ == ""__main__"":
    logger = logging.getLogger()
    logger.disabled = True
    TestNetworkSetup.bootstrapTestNodes(getConfig(), portsStart, nodeParamsFileName,
                                        getTxnOrderedFields(), ConfigHelper, NodeConfigHelper)
{code}

I included this modified `generate_indy_pool_transactions` script in my image at `/home/indy/bin/generate_indy_pool_transactions`.
I call this script when my container is starting from the `start-pool` script which is executed as the dockerfile's CMD:
{code}
CMD [""/home/indy/bin/start-pool""]
{code}
For the complete dockerfile, see Sergey's 3rd to the last post.
And my `start-pool` script is in Sergey's 2nd to the last post, but here it is again also:
{code}
$ cat start-pool 
#!/bin/bash
IP=$(ip a | perl -lne 'print $1 if /([0-9.]+).*global/')
/home/indy/bin/generate_indy_pool_transactions --nodes 4 --clients 5 --nodeNum 1 2 3 4 --ips=""$IP,$IP,$IP,$IP""
/usr/bin/supervisord -c /etc/supervisord.conf
{code}

Note that my start-pool script dynamically computes it public IP address as the container is starting, which is then passed to my modified `generate_indy_pool_transactions` script.  I then start all 4 nodes via supervisord.  The `/etc/supervisord.conf` is created by the dockerfile which Sergey posted earlier, but I'm including below again.

{code}
FROM ubuntu:16.04
RUN apt-get update && apt-get -y dist-upgrade && apt-get -y autoremove && apt-get clean
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88
RUN apt-get install -y software-properties-common python-software-properties
RUN add-apt-repository ""deb https://repo.sovrin.org/deb xenial stable""
RUN apt-get install -y apt-transport-https
RUN apt-get update -y
RUN apt-get upgrade -y
RUN apt-get install -y ntp pciutils iptables curl \
                        iputils-ping net-tools telnet debsigs \
                        debsig-verify vim pwgen python-pip python3-pip \
                        python3.5-dev libsodium18 sovrin supervisor \
                        sudo


RUN echo '[supervisord]\n\
logfile = /tmp/supervisord.log\n\
logfile_maxbytes = 50MB\n\
logfile_backups=10\n\
logLevel = error\n\
pidfile = /tmp/supervisord.pid\n\
nodaemon = true\n\
minfds = 1024\n\
minprocs = 200\n\
umask = 022\n\
### user = indy\n\
identifier = supervisor\n\
directory = /tmp\n\
nocleanup = true\n\
childlogdir = /tmp\n\
strip_ansi = false\n\
\n\
[program:node1]\n\
command=start_indy_node Node1 9711 9712\n\
directory=/home/indy\n\
stdout_logfile=/tmp/node1.log\n\
stderr_logfile=/tmp/node1.log\n\
\n\
[program:node2]\n\
command=start_indy_node Node2 9713 9714\n\
directory=/home/indy\n\
stdout_logfile=/tmp/node2.log\n\
stderr_logfile=/tmp/node2.log\n\
\n\
[program:node3]\n\
command=start_indy_node Node3 9715 9716\n\
directory=/home/indy\n\
stdout_logfile=/tmp/node3.log\n\
stderr_logfile=/tmp/node3.log\n\
\n\
[program:node4]\n\
command=start_indy_node Node4 9717 9718\n\
directory=/home/indy\n\
stdout_logfile=/tmp/node4.log\n\
stderr_logfile=/tmp/node4.log\n\
\n\
[program:fileserver]\n\
command=python3 -m http.server\n\
directory=/var/lib/indy\n\
stdout_logfile=/tmp/fileserver.log\n\
stderr_logfile=/tmp/fileserver.log' >> /etc/supervisord.conf

### USER indy

RUN awk '{if (index($1, ""NETWORK_NAME"") != 0) {print(""NETWORK_NAME = \""sandbox\"""")} else print($0)}' /etc/indy/indy_config.py> /tmp/indy_config.py
RUN mv /tmp/indy_config.py /etc/indy/indy_config.py

COPY bin/* /home/indy/bin/

EXPOSE 9711 9712 9713 9714 9715 9716 9717 9718 8000

CMD [""/home/indy/bin/start-pool""]
{code};;;","10/Jul/18 9:37 PM;ashcherbakov;Can you please go to a node and run `read_ledger --type=pool` to see the content of the pool ledger? It should be equal to the genesis txn file.
;;;","10/Jul/18 9:39 PM;ashcherbakov;Also we noticed that you run `sovrin`, not `indy-node`. I think it's more valid to run indy-node in your case, since sovrin is a product with defined genesis txns not assuming any custom ones.
So, you can try
{code}
RUN apt-get install -y ntp pciutils iptables curl \
                        iputils-ping net-tools telnet debsigs \
                        debsig-verify vim pwgen python-pip python3-pip \
                        python3.5-dev libsodium18 indy-node supervisor \
                        sudo
{code}
;;;","11/Jul/18 12:06 AM;smithbk;Thanks.  I see the problem now.  The container must have been restarted by the cloud provider and restarted with a different IP addr.
 
{code}
# read_ledger --type pool
[1,{""data"":{""alias"":""Node1"",""blskey"":""4N8aUNHSgjQVgkpm8nhNEfDf6txHznoYREg9kirmJrkivgL4oSEimFF6nsQ6M41QvhM2Z33nves5vfSn9n1UwNFJBYtWVnHYMATn76vLuL3zU88KyeAYcHfsih3He6UHcXDxcaecHVz6jhCYz1P2UZn2bDVruL5wXpehgBfBaLKm3Ba"",""client_ip"":""172.30.201.203"",""client_port"":9712,""node_ip"":""172.30.201.203"",""node_port"":9711,""services"":[""VALIDATOR""]},""dest"":""Gw6pDLhcBcoQesN72qfotTgFa7cbuqZpkX3Xo6pLhPhv"",""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""txnId"":""fea82e10e894419fe2bea7d96296a6d46f50f93f9eeda954ec461b2ed2950b62"",""type"":""0""}]
[2,{""data"":{""alias"":""Node2"",""blskey"":""37rAPpXVoxzKhz7d9gkUe52XuXryuLXoM6P6LbWDB7LSbG62Lsb33sfG7zqS8TK1MXwuCHj1FKNzVpsnafmqLG1vXN88rt38mNFs9TENzm4QHdBzsvCuoBnPH7rpYYDo9DZNJePaDvRvqJKByCabubJz3XXKbEeshzpz4Ma5QYpJqjk"",""client_ip"":""172.30.201.203"",""client_port"":9714,""node_ip"":""172.30.201.203"",""node_port"":9713,""services"":[""VALIDATOR""]},""dest"":""8ECVSk179mjsjKRLWiQtssMLgp6EPhWXtaYyStWPSGAb"",""identifier"":""EbP4aYNeTHL6q385GuVpRV"",""txnId"":""1ac8aece2a18ced660fef8694b61aac3af08ba875ce3026a160acbc3a3af35fc"",""type"":""0""}]
[3,{""data"":{""alias"":""Node3"",""blskey"":""3WFpdbg7C5cnLYZwFZevJqhubkFALBfCBBok15GdrKMUhUjGsk3jV6QKj6MZgEubF7oqCafxNdkm7eswgA4sdKTRc82tLGzZBd6vNqU8dupzup6uYUf32KTHTPQbuUM8Yk4QFXjEf2Usu2TJcNkdgpyeUSX42u5LqdDDpNSWUK5deC5"",""client_ip"":""172.30.201.203"",""client_port"":9716,""node_ip"":""172.30.201.203"",""node_port"":9715,""services"":[""VALIDATOR""]},""dest"":""DKVxG2fXXTU8yT5N7hGEbXB3dfdAnYv1JczDUHpmDxya"",""identifier"":""4cU41vWW82ArfxJxHkzXPG"",""txnId"":""7e9f355dffa78ed24668f0e0e369fd8c224076571c51e2ea8be5f26479edebe4"",""type"":""0""}]
[4,{""data"":{""alias"":""Node4"",""blskey"":""2zN3bHM1m4rLz54MJHYSwvqzPchYp8jkHswveCLAEJVcX6Mm1wHQD1SkPYMzUDTZvWvhuE6VNAkK3KxVeEmsanSmvjVkReDeBEMxeDaayjcZjFGPydyey1qxBHmTvAnBKoPydvuTAqx5f7YNNRAdeLmUi99gERUU7TD8KfAa6MpQ9bw"",""client_ip"":""172.30.201.203"",""client_port"":9718,""node_ip"":""172.30.201.203"",""node_port"":9717,""services"":[""VALIDATOR""]},""dest"":""4PS3EDQ3dW1tci1Bp6543CfuuebjFrg36kLAUcskGfaA"",""identifier"":""TWwCRQRZ2ZHMJFn9TzLp7W"",""txnId"":""aa5e817d7cc626170eca175822029339a444eb0ee8f0bd20d3b0b76e566fb008"",""type"":""0""}]
{code}


;;;",,,,,,,,,,,,,,
Create a constant invalid wallet handle,IS-801,31603,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ignisvulpis,ignisvulpis,ignisvulpis,03/Jul/18 10:28 PM,02/Aug/19 5:23 PM,28/Oct/23 2:49 AM,02/Aug/19 5:23 PM,,,,,,,,0,,,,,"Currently the tests generate an invalid wallet handle by adding one to the current wallet handle
{quote}let invalid_wallet_handle = wallet_handle + 1
{quote}
e.g. at [https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/did.rs#L158]

Some code even adds 100 to the current wallet handle.
{quote}let invalid_wallet_handle = wallet_handle + 100;
{quote}
[https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/anoncreds.rs#L73]

 

How about creating a constant INVALID_WALLET_HANDLE in api/mod.rs ? I would put it there because there is one other use for an invalid_handle that is when a method is supposed to return a handle but an error occurred. Then an invalid handle should be returned too. Currently i32 0 is returned in that error case.

 

This could be implemented in sequence utils by changing it so that it never return the invalid value.
{quote} 

const _INVALID_ID : i32 = 0;

impl SequenceUtils \{
    pub fn get_next_id() -> i32 \{
        let id = (IDS_COUNTER.fetch_add(1, Ordering::SeqCst) + 1) as i32;
        if id == _INVALID_ID \{
          (IDS_COUNTER.fetch_add(1, Ordering::SeqCst) + 1) as i32
        } else \{
          id
        }
    }
}

pub const INVALID_ID : i32 = _INVALID_ID;
{quote}
 

In api/mod.rs there would be definition of an invalid wallet handle.

pub const INVALID_WALLET_HANDLE : i32 = INVALID_ID;

 

Then we could replace all occurrences of wallet_handle + X by INVALID_WALLET_HANDLE.

Of course the same issue applies to other handles too like e.g. pool_handle",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwspb:",,,,,,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ignisvulpis,,,,,,,,,,,"02/Aug/19 5:22 PM;ignisvulpis;This is already done, see https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/api/mod.rs#L28;;;","02/Aug/19 5:23 PM;ignisvulpis;This was done

https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/api/mod.rs#L28;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
IO error during storage operation: cannot start a transaction within a transaction,IS-802,31666,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,gudkov,rajeshkalaria,rajeshkalaria,05/Jul/18 7:33 PM,12/Jul/18 9:45 PM,28/Oct/23 2:49 AM,09/Jul/18 6:43 PM,,,,,,,,0,,,,,"I am using libindy=1.5.0 and wallet type is default

When I was running all of agency's unit tests, at one point (which was trying to use Did.storeTheirDid operation, it was failing with this error ""WalletStorageException: Storage error occurred during wallet operation"".

But I don't have more clue about what exactly is going wrong, can we fix this to return little detailed cause.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwv0n:",,,,,,EV 18.14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gudkov,rajeshkalaria,,,,,,,,,,"05/Jul/18 11:11 PM;rajeshkalaria;Here are details logs related to the error:

 

TRACE|indy::api::crypto             |                  src/api/crypto.rs:274 | indy_crypto_verify: entities >>> signer_vk: ""5dszRBEEktHp3jDF6NTKw31smnyazWb9d5hB2GmvqLQd"", message_raw: [76, 116, 69, 103, 72, 121, 100, 66, 120, 56, 117, 113, 51, 67, 69, 57, 97, 98, 105, 116, 72, 82, 66, 113, 90, 52, 77, 52, 117, 86, 90, 57, 109, 100, 89, 86, 110, 115, 69, 100, 56, 85, 101, 50, 82, 112, 105, 84, 118, 107, 88, 65, 106, 110, 81, 85, 119, 55, 115, 116, 50, 109, 71, 65, 114, 81], message_len: 66, signature_raw: [80, 156, 4, 203, 26, 222, 180, 208, 197, 111, 22, 88, 77, 17, 79, 13, 231, 227, 48, 26, 126, 93, 76, 154, 114, 31, 42, 156, 110, 84, 84, 66, 202, 172, 61, 139, 95, 11, 230, 16, 150, 116, 249, 71, 150, 134, 158, 50, 138, 116, 125, 218, 176, 71, 49, 28, 230, 103, 172, 226, 77, 69, 110, 12], signature_len: 64

TRACE|indy::api::crypto             |                  src/api/crypto.rs:291 | indy_crypto_verify: <<< res: Success

 INFO|indy::commands                |                src/commands/mod.rs:110 | CryptoCommand command received

 INFO|indy::commands::crypto        |             src/commands/crypto.rs:104 | CryptoVerify command received

DEBUG|indy::commands::crypto        |             src/commands/crypto.rs:166 | crypto_verify >>> their_vk: ""5dszRBEEktHp3jDF6NTKw31smnyazWb9d5hB2GmvqLQd"", msg: [76, 116, 69, 103, 72, 121, 100, 66, 120, 56, 117, 113, 51, 67, 69, 57, 97, 98, 105, 116, 72, 82, 66, 113, 90, 52, 77, 52, 117, 86, 90, 57, 109, 100, 89, 86, 110, 115, 69, 100, 56, 85, 101, 50, 82, 112, 105, 84, 118, 107, 88, 65, 106, 110, 81, 85, 119, 55, 115, 116, 50, 109, 71, 65, 114, 81], signature: [80, 156, 4, 203, 26, 222, 180, 208, 197, 111, 22, 88, 77, 17, 79, 13, 231, 227, 48, 26, 126, 93, 76, 154, 114, 31, 42, 156, 110, 84, 84, 66, 202, 172, 61, 139, 95, 11, 230, 16, 150, 116, 249, 71, 150, 134, 158, 50, 138, 116, 125, 218, 176, 71, 49, 28, 230, 103, 172, 226, 77, 69, 110, 12]

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:366 | validate_key >>> vk: ""5dszRBEEktHp3jDF6NTKw31smnyazWb9d5hB2GmvqLQd""

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:386 | validate_key <<< res: ()

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:169 | verify >>> their_vk: ""5dszRBEEktHp3jDF6NTKw31smnyazWb9d5hB2GmvqLQd"", msg: [76, 116, 69, 103, 72, 121, 100, 66, 120, 56, 117, 113, 51, 67, 69, 57, 97, 98, 105, 116, 72, 82, 66, 113, 90, 52, 77, 52, 117, 86, 90, 57, 109, 100, 89, 86, 110, 115, 69, 100, 56, 85, 101, 50, 82, 112, 105, 84, 118, 107, 88, 65, 106, 110, 81, 85, 119, 55, 115, 116, 50, 109, 71, 65, 114, 81], signature: [80, 156, 4, 203, 26, 222, 180, 208, 197, 111, 22, 88, 77, 17, 79, 13, 231, 227, 48, 26, 126, 93, 76, 154, 114, 31, 42, 156, 110, 84, 84, 66, 202, 172, 61, 139, 95, 11, 230, 16, 150, 116, 249, 71, 150, 134, 158, 50, 138, 116, 125, 218, 176, 71, 49, 28, 230, 103, 172, 226, 77, 69, 110, 12]

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:189 | verify <<< valid: true

DEBUG|indy::commands::crypto        |             src/commands/crypto.rs:172 | crypto_verify <<< res: true

TRACE|indy::api::crypto             |                  src/api/crypto.rs:284 | indy_crypto_verify: valid: true

TRACE|indy::api::crypto             |                  src/api/crypto.rs:266 | indy_crypto_verify: >>> signer_vk: 0x7ff56403d9e0, message_raw: 0x7ff564079c70, message_len: 66, signature_raw: 0x7ff564079cc0, signature_len: 64

TRACE|indy::api::crypto             |                  src/api/crypto.rs:274 | indy_crypto_verify: entities >>> signer_vk: ""5UuNmKbKqUBcnmQDpea4EVT8Yfi7gTDNfs8FXS7ZW65F"", message_raw: [65, 50, 113, 71, 114, 57, 105, 86, 86, 114, 87, 115, 110, 51, 83, 119, 83, 50, 114, 103, 55, 119, 53, 118, 87, 78, 90, 50, 54, 77, 88, 107, 121, 100, 74, 115, 118, 100, 97, 84, 74, 55, 77, 111, 52, 65, 116, 102, 78, 70, 113, 74, 57, 69, 84, 120, 83, 117, 69, 99, 120, 119, 85, 89, 88, 109], message_len: 66, signature_raw: [66, 67, 238, 46, 182, 232, 177, 2, 154, 248, 152, 220, 189, 35, 78, 99, 22, 121, 4, 252, 83, 0, 23, 255, 66, 67, 199, 33, 99, 187, 69, 107, 101, 40, 155, 252, 43, 22, 20, 39, 137, 173, 139, 126, 32, 56, 16, 26, 34, 188, 202, 228, 17, 193, 246, 71, 2, 62, 72, 169, 68, 132, 159, 0], signature_len: 64

TRACE|indy::api::crypto             |                  src/api/crypto.rs:291 | indy_crypto_verify: <<< res: Success

 INFO|indy::commands                |                src/commands/mod.rs:110 | CryptoCommand command received

 INFO|indy::commands::crypto        |             src/commands/crypto.rs:104 | CryptoVerify command received

DEBUG|indy::commands::crypto        |             src/commands/crypto.rs:166 | crypto_verify >>> their_vk: ""5UuNmKbKqUBcnmQDpea4EVT8Yfi7gTDNfs8FXS7ZW65F"", msg: [65, 50, 113, 71, 114, 57, 105, 86, 86, 114, 87, 115, 110, 51, 83, 119, 83, 50, 114, 103, 55, 119, 53, 118, 87, 78, 90, 50, 54, 77, 88, 107, 121, 100, 74, 115, 118, 100, 97, 84, 74, 55, 77, 111, 52, 65, 116, 102, 78, 70, 113, 74, 57, 69, 84, 120, 83, 117, 69, 99, 120, 119, 85, 89, 88, 109], signature: [66, 67, 238, 46, 182, 232, 177, 2, 154, 248, 152, 220, 189, 35, 78, 99, 22, 121, 4, 252, 83, 0, 23, 255, 66, 67, 199, 33, 99, 187, 69, 107, 101, 40, 155, 252, 43, 22, 20, 39, 137, 173, 139, 126, 32, 56, 16, 26, 34, 188, 202, 228, 17, 193, 246, 71, 2, 62, 72, 169, 68, 132, 159, 0]

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:366 | validate_key >>> vk: ""5UuNmKbKqUBcnmQDpea4EVT8Yfi7gTDNfs8FXS7ZW65F""

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:386 | validate_key <<< res: ()

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:169 | verify >>> their_vk: ""5UuNmKbKqUBcnmQDpea4EVT8Yfi7gTDNfs8FXS7ZW65F"", msg: [65, 50, 113, 71, 114, 57, 105, 86, 86, 114, 87, 115, 110, 51, 83, 119, 83, 50, 114, 103, 55, 119, 53, 118, 87, 78, 90, 50, 54, 77, 88, 107, 121, 100, 74, 115, 118, 100, 97, 84, 74, 55, 77, 111, 52, 65, 116, 102, 78, 70, 113, 74, 57, 69, 84, 120, 83, 117, 69, 99, 120, 119, 85, 89, 88, 109], signature: [66, 67, 238, 46, 182, 232, 177, 2, 154, 248, 152, 220, 189, 35, 78, 99, 22, 121, 4, 252, 83, 0, 23, 255, 66, 67, 199, 33, 99, 187, 69, 107, 101, 40, 155, 252, 43, 22, 20, 39, 137, 173, 139, 126, 32, 56, 16, 26, 34, 188, 202, 228, 17, 193, 246, 71, 2, 62, 72, 169, 68, 132, 159, 0]

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:189 | verify <<< valid: true

DEBUG|indy::commands::crypto        |             src/commands/crypto.rs:172 | crypto_verify <<< res: true

TRACE|indy::api::crypto             |                  src/api/crypto.rs:284 | indy_crypto_verify: valid: true

2018-07-05 19:34:15.884 [actorSpecSystem46644-akka.actor.default-dispatcher-3] DEBUG c.e.agency.common.vault.WalletAPI - about to store their key => wallet name: 51ce4d101cf1f71be5f40fe14c57b21a6ccdf63c065bd7c86a7f17da4ed50d12, key: StoreTheirKeyParam(MEWn6Vh1KsdkSZvHTvuGQG,C2c5BptNrcgb9usyck8TKNhq3xFmMvZZA3SZpmW4kLXP)

2018-07-05 19:34:15.885 [actorSpecSystem46644-akka.actor.default-dispatcher-3] DEBUG c.e.agency.common.vault.WalletAPI - about to store their key => wallet name: 51ce4d101cf1f71be5f40fe14c57b21a6ccdf63c065bd7c86a7f17da4ed50d12, key: StoreTheirKeyParam(A2qGr9iVVrWsn3SwS2rg7w,5vWNZ26MXkydJsvdaTJ7Mo4AtfNFqJ9ETxSuEcxwUYXm)

TRACE|indy::api::did                |                     src/api/did.rs:222 | indy_store_their_did: >>> wallet_handle: 3, identity_json: 0x7ff564046200

TRACE|indy::api::did                |                     src/api/did.rs:227 | indy_store_their_did: entities >>> wallet_handle: 3, identity_json: ""\{\""did\"":\""MEWn6Vh1KsdkSZvHTvuGQG\"",\""verkey\"":\""C2c5BptNrcgb9usyck8TKNhq3xFmMvZZA3SZpmW4kLXP\""}""

TRACE|indy::api::did                |                     src/api/did.rs:242 | indy_store_their_did: <<< res: Success

 INFO|indy::commands                |                src/commands/mod.rs:122 | DidCommand command received

 INFO|indy::commands::did           |                src/commands/did.rs:156 | StoreTheirDid command received

DEBUG|indy::commands::did           |                src/commands/did.rs:285 | store_their_did >>> wallet_handle: 3, their_did_info_json: ""\{\""did\"":\""MEWn6Vh1KsdkSZvHTvuGQG\"",\""verkey\"":\""C2c5BptNrcgb9usyck8TKNhq3xFmMvZZA3SZpmW4kLXP\""}""

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:125 | create_their_did >>> their_did_info: TheirDidInfo \{ did: ""MEWn6Vh1KsdkSZvHTvuGQG"", verkey: Some(""C2c5BptNrcgb9usyck8TKNhq3xFmMvZZA3SZpmW4kLXP"") }

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:366 | validate_key >>> vk: ""C2c5BptNrcgb9usyck8TKNhq3xFmMvZZA3SZpmW4kLXP""

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:386 | validate_key <<< res: ()

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:137 | create_their_did <<< did: TheirDid \{ did: ""MEWn6Vh1KsdkSZvHTvuGQG"", verkey: ""C2c5BptNrcgb9usyck8TKNhq3xFmMvZZA3SZpmW4kLXP"" }

ERROR|indy::errors::indy            |                 src/errors/indy.rs:73  | Casting error to ErrorCode: Item already exists

TRACE|indy::api::did                |                     src/api/did.rs:235 | indy_store_their_did:

TRACE|indy::api::did                |                     src/api/did.rs:222 | indy_store_their_did: >>> wallet_handle: 3, identity_json: 0x7ff56407a760

TRACE|indy::api::did                |                     src/api/did.rs:227 | indy_store_their_did: entities >>> wallet_handle: 3, identity_json: ""\{\""did\"":\""A2qGr9iVVrWsn3SwS2rg7w\"",\""verkey\"":\""5vWNZ26MXkydJsvdaTJ7Mo4AtfNFqJ9ETxSuEcxwUYXm\""}""

TRACE|indy::api::did                |                     src/api/did.rs:242 | indy_store_their_did: <<< res: Success

 INFO|indy::commands                |                src/commands/mod.rs:122 | DidCommand command received

 INFO|indy::commands::did           |                src/commands/did.rs:156 | StoreTheirDid command received

DEBUG|indy::commands::did           |                src/commands/did.rs:285 | store_their_did >>> wallet_handle: 3, their_did_info_json: ""\{\""did\"":\""A2qGr9iVVrWsn3SwS2rg7w\"",\""verkey\"":\""5vWNZ26MXkydJsvdaTJ7Mo4AtfNFqJ9ETxSuEcxwUYXm\""}""

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:125 | create_their_did >>> their_did_info: TheirDidInfo \{ did: ""A2qGr9iVVrWsn3SwS2rg7w"", verkey: Some(""5vWNZ26MXkydJsvdaTJ7Mo4AtfNFqJ9ETxSuEcxwUYXm"") }

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:366 | validate_key >>> vk: ""5vWNZ26MXkydJsvdaTJ7Mo4AtfNFqJ9ETxSuEcxwUYXm""

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:386 | validate_key <<< res: ()

TRACE|indy::services::crypto        |         src/services/crypto/mod.rs:137 | create_their_did <<< did: TheirDid \{ did: ""A2qGr9iVVrWsn3SwS2rg7w"", verkey: ""5vWNZ26MXkydJsvdaTJ7Mo4AtfNFqJ9ETxSuEcxwUYXm"" }

ERROR|indy::errors::indy            |                 src/errors/indy.rs:73  | {color:#ff0000}*Casting error to ErrorCode: Wallet storage error occurred. Description: IO error during storage operation: cannot start a transaction within a transaction*{color}

TRACE|indy::api::did                |                     src/api/did.rs:235 | indy_store_their_did:;;;","05/Jul/18 11:51 PM;rajeshkalaria;[~gudkov]

Able to reproduce the issue:

1. Try 'storeTheirDid' operation with say did1 and verkey1

2. Repeat above operation (with same did and ver key used in #1) but this time catch and swallow the exception (it will throw the exception WalletItemAlreadyExistsException)

3. Then, now if you try 'storeTheirDid' operation (either with same did and verkey or you can choose different did and verkey), it fails with error 'Storage error occurred during wallet operation.';;;","06/Jul/18 11:13 PM;gudkov;Was able to reproduce this with the test.;;;","07/Jul/18 12:13 AM;gudkov;Cause:

- Our custom transaction object doesn't perform transaction rollback on Drop that causes the issue. As result any unsuccessful write to the wallet causes this error

Changes:

- Added the tests that reproduces IS-802
- Implemented rollback and corresponded Drop behavior for transaction object.

PR:

- https://github.com/hyperledger/indy-sdk/pull/929;;;","09/Jul/18 6:43 PM;gudkov;PR merged, tests passed;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Make a plan for merging libvcx into Indy SDK,IS-803,31671,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,jankokrstic,VladimirVujovic,VladimirVujovic,05/Jul/18 9:09 PM,04/Sep/18 9:52 PM,28/Oct/23 2:49 AM,04/Sep/18 9:52 PM,,,,,,,,0,,,,,"As part of the efforts to open source libvcx and for libvcx API to become the default interface for most developers interacting with Indy, we want to migrate libvcx into Indy SDK repo. 

This ticket is for creating a plan to migrate libvcx to Indy SDK repo

 *Acceptance criteria*
 - Understand hipe process: [https://github.com/hyperledger/indy-hipe]
 - Understand libvcx source code: [https://github.com/evernym/sdk]
 - Identify which community meetings/groups to engage
 - Meet with Slava and Doug and *agree on design* and the next steps",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwv6n:",,,,,,EV 18.14,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,VladimirVujovic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet API: Review error handling for plugable storage,IS-804,31673,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,05/Jul/18 9:52 PM,29/Oct/18 5:06 AM,28/Oct/23 2:49 AM,25/Jul/18 6:33 PM,,,1.6.2,,,,,0,,,,,"From Rajesh:

```
Hey guys, any idea when can I get ""WalletStorageException: Storage error occurred during wallet operation"" type of error. I am getting it during ""storeTheirDid"" operation, but it is not failing always, just in one condition. I am not able to find out more detail about that error. Wondering if any of you have any idea already?
```

Just looked to PluggedStorage code. Seems it doesn't provide correct errors handling for all cases. For example, 

""add"" always return PluggedStorageError instead of analyzing results. Also WalletStorageError seems redundantly as it always converts to WalletError.

We need to fix this behavior as errors required recovery from application aren't propagated.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1045,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjpb:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,Artemkaaas,gudkov,,,,,,,,,,"05/Jul/18 9:57 PM;gudkov;Seems like duplicate for IS-802;;;","06/Jul/18 3:36 PM;gudkov;Now i see that IS-804 is different. We can fix concrete bug in IS-802 and perform enhancements in IS-804 separately.;;;","24/Jul/18 11:57 PM;Artemkaaas;Everything looks okay. PluggedStorageError contains error_code which is sent up.
The ticket should be closed.;;;","25/Jul/18 6:33 PM;gudkov;I agree with Artem;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Android: Merge Android CD PR,IS-806,31694,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,06/Jul/18 4:09 PM,26/Jul/18 9:31 PM,28/Oct/23 2:49 AM,26/Jul/18 5:23 PM,,,1.6.0,,,,,0,,,,,"We need review and merge Android CD PR.

Acceptance criteria

- Code reviewed to satisfy indy-sdk architecture, code style and quality standards
- Build process tested
- Documentation validated
- Produced artifacts validated
- PR merged

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjo7:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,gudkov,,,,,,,,,,,"26/Jul/18 5:23 PM;gudkov;PR was merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Ability to list pool ledger configurations,IS-807,31724,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,gudkov,burdettadam,burdettadam,07/Jul/18 3:08 AM,26/Jul/18 9:31 PM,28/Oct/23 2:49 AM,25/Jul/18 11:43 PM,,,,,,,,0,,,,,"As a developer I want to be able to check if a pool ledger configuration exists so that I do not have to do error based logic.

An example of the new API function name could be indy_list_pool_ledger_config, which would return a list of pool ledger configurations",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-90,,,,,,,,,,"1|hzzjpr:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,burdettadam,gudkov,,,,,,,,,,"25/Jul/18 11:43 PM;gudkov;[~burdettadam] We already have corresponded function in libindy https://github.com/hyperledger/indy-sdk/blob/3f303d8531644db362c2762f1c4997be0c1de540/libindy/src/api/pool.rs#L163;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Underscore One (_1) Appended to Names of Self Attested Attributes,IS-808,31687,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,jjensenevernym,jjensenevernym,06/Jul/18 6:19 AM,08/Aug/18 12:22 AM,28/Oct/23 2:49 AM,08/Aug/18 12:22 AM,,,,,,,,0,,,,,"Using libindy 1.3.0 with libvcx 0.1.6927859-bc2e466. An _1 appears to be appended to attribute names on self attested attributes. Example:

\{
  ""attr_info"": \{
    ""name"": ""Favorite Color_1"",
    ""type"": ""self_attested"",
    ""value"": ""Blue""
  }
 }

The attribute was specified as 

\{
  ""name"": ""Favorite Color""
 },

The appended underscore and number are causing trouble for a client. Is this appending intentional or a bug? Is it predictable? Will it always be ""_1"" or might it be ""_2"" or ""_n"" and if so under what circumstances?

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/18 6:27 AM;jjensenevernym;run.py;https://jira.hyperledger.org/secure/attachment/15320/run.py","17/Jul/18 6:27 AM;jjensenevernym;transcript_proof_request_json.txt;https://jira.hyperledger.org/secure/attachment/15321/transcript_proof_request_json.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzjjj:",,,,,,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jjensenevernym,sergey.minaev,,,,,,,,,,"12/Jul/18 8:46 PM;sergey.minaev;[~jjensenevernym] please provide steps to reproduce the issue by calls of IndySDK (if it possible)
PS: v1.3.0 of libindy is about 7-8 months old and doesn't recommended to use;;;","17/Jul/18 6:30 AM;jjensenevernym;I'm attaching a sample from the libvcx Python wrapper. The VCX developers tell me the renaming is happening in libindy. Below is the output. The first set shows the proof content when the user has a credential. The second set shows the proof content when self attested attributes are provided.


Retrieving Proof
[
 \{
 ""attr_info"": \{
 ""name"": ""Major"",
 ""type"": ""revealed"",
 ""value"": ""Finance""
 },
 ""credential_uuid"": ""claim::56a23164-81a8-478e-9f74-fcf976a06fbb"",
 ""issuer_did"": ""QkzKmJJ82c4C9V7r1Pww87"",
 ""schema_seq_no"": 1424
 },
 \{
 ""attr_info"": \{
 ""name"": ""GPA"",
 ""type"": ""revealed"",
 ""value"": ""4.0""
 },
 ""credential_uuid"": ""claim::56a23164-81a8-478e-9f74-fcf976a06fbb"",
 ""issuer_did"": ""QkzKmJJ82c4C9V7r1Pww87"",
 ""schema_seq_no"": 1424
 }
]
Proof Received and verified!


Retrieving Proof
[
 \{
 ""attr_info"": \{
 ""name"": ""Major_0"",
 ""type"": ""self_attested"",
 ""value"": ""Physics""
 }
 },
 \{
 ""attr_info"": \{
 ""name"": ""GPA_1"",
 ""type"": ""self_attested"",
 ""value"": ""3.8""
 }
 }
]
Proof Received but not verified.;;;","26/Jul/18 9:02 PM;sergey.minaev;[~jjensenevernym] I reviewed 1.3.0 codebase and didn't find any appending _0 or _1 suffixes. And I have some doubts is renaming on libindy or vcx side...
There is 2 options to continue investigation for this ticket.
1) ask vcx developers to provide minimal test which can show renaming on libindy side.
2) provide full isolated or public-access example. I can build vcx mentioned version and try to run it, but appropriate environment is required. In current sample you use some vcx config but it missed and may be use some private agency (?)

;;;","26/Jul/18 9:18 PM;sergey.minaev;Moreover I see some appending in vcx codebase
https://github.com/evernym/sdk/blob/bc2e466a6f8caf6ba03a69dacb1b84835f9f71bf/vcx/libvcx/src/messages/proofs/proof_request.rs#L167 and https://github.com/evernym/sdk/blob/bc2e466a6f8caf6ba03a69dacb1b84835f9f71bf/vcx/libvcx/src/messages/proofs/proof_request.rs#L184
It seems like constructing of attr_referent. And somewhere it moved to name filed in attribute. It may be on vcx or libindy side. But libindy do nothing this self-attested.

And again 1.3.0 is very-very old and out-of-date version of libindy;;;","03/Aug/18 8:59 PM;sergey.minaev;[~jjensenevernym] do you have any updates for this ticket? I hear about some changes in libvcx, it this problem was on vcx side and we should close this one ticket?;;;","07/Aug/18 12:27 AM;jjensenevernym;Thank you Sergey. I've spoken with the VCX team and they confirm this ticket can now be closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,
"ErrorCode: Invalid library state: MerkleTree contains invalid data Syntax(""missing field `data`"")",IS-809,31751,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,smithbk,smithbk,smithbk,10/Jul/18 1:00 PM,12/Jul/18 2:04 PM,28/Oct/23 2:49 AM,12/Jul/18 2:04 PM,,,,,indycrypto,,,0,,,,,"I'm getting the following error when trying to connect to my node pool.

{code}
 INFO|indy::commands                |                src/commands/mod.rs:108 | PoolCommand command received
TRACE|indy::services::pool          |           src/services/pool/mod.rs:575 | PoolService::create test with config Some(""{\""genesis_txn\"": \""/home/indy/sandbox/pool_transactions_genesis\""}"")
 INFO|indy::commands                |                src/commands/mod.rs:108 | PoolCommand command received
ERROR|indy::services::pool          |           src/services/pool/mod.rs:428 | Pool worker thread finished with error CommonError(InvalidState(""MerkleTree contains invalid data Syntax(\""missing field `data`\"")""))
 INFO|indy::commands                |                src/commands/mod.rs:108 | PoolCommand command received
 INFO|indy::commands::pool          |               src/commands/pool.rs:67  | OpenAck handle 1, pool_id 2, result Err(CommonError(InvalidState(""MerkleTree contains invalid data Syntax(\""missing field `data`\"")"")))
ERROR|indy::errors::indy            |                 src/errors/indy.rs:68  | Casting error to ErrorCode: Invalid library state: MerkleTree contains invalid data Syntax(""missing field `data`"")
_indy_loop_callback: Function returned error 112
Traceback (most recent call last):
  File ""/home/indy/bin/start-client"", line 5, in <module>
    NodePool('test')
  File ""/home/indy/bin/util.py"", line 12, in __call__
    Singleton, cls).__call__(*args, **kwargs)
  File ""/home/indy/bin/node_pool.py"", line 28, in __init__
    self.async_init(pool_file=pool_file, cfg=cfg))
  File ""/usr/lib/python3.5/asyncio/base_events.py"", line 387, in run_until_complete
    return future.result()
  File ""/usr/lib/python3.5/asyncio/futures.py"", line 274, in result
    raise self._exception
  File ""/usr/lib/python3.5/asyncio/tasks.py"", line 241, in _step
    result = coro.throw(exc)
  File ""/home/indy/bin/node_pool.py"", line 42, in async_init
    await self.async_open_pool(cfg)
  File ""/home/indy/bin/node_pool.py"", line 60, in async_open_pool
    self.handle = await pool.open_pool_ledger(self.name, json.dumps(cfg))
  File ""/usr/local/lib/python3.5/dist-packages/indy/pool.py"", line 82, in open_pool_ledger
    open_pool_ledger.cb)
  File ""/usr/lib/python3.5/asyncio/futures.py"", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File ""/usr/lib/python3.5/asyncio/tasks.py"", line 296, in _wakeup
    future.result()
  File ""/usr/lib/python3.5/asyncio/futures.py"", line 274, in result
    raise self._exception
indy.error.IndyError: ErrorCode.CommonInvalidState
{code}

In order to reproduce this error:
1. Unzip the attached bug.zip file and cd to the 'bug' directory
2. Run `docker-compose up -d`
   The pool container starts successfully but the client container fails with the above error.
   To see the error:
3. Run `docker ps -a` to get the <CONTAINER ID> of the client container
4. Run `docker logs <CONTAINER ID>` to see the error

In addition to debugging this issue, please provide recommendations for how I can change my pool and client dockerfiles to be version locked.  These (or similar) dockerfiles used to work, but apparently something changed in the stable release to break this.  I would like to avoid such breaks in the future.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/18 1:01 PM;smithbk;bug.zip;https://jira.hyperledger.org/secure/attachment/15278/bug.zip","11/Jul/18 9:46 PM;smithbk;bug2.zip;https://jira.hyperledger.org/secure/attachment/15290/bug2.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww3r:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,smithbk,,,,,,,,,,"10/Jul/18 11:54 PM;sergey.minaev;[~smithbk] After brief review I see at least one problem: you have fixed version of libindy on client side, but non-locked version on pool: sovrin package without version.
Most probably you have installed latest indy-node and genesis transactions from it doesn't compatible with old IndySDK;;;","11/Jul/18 9:56 PM;smithbk;Thanks Sergey, but am still confused.  I redid pool/dockerfile based on https://github.com/hyperledger/indy-sdk/blob/v1.5.0/ci/indy-pool.dockerfile (see the bug2.zip attachment) but am now getting the following error.  Can you provide a complete pool and client dockerfile which work with each other based on a stable, locked version?  Or tell me how to change the pool/dockerfile and/or client/dockerfile in bug2.zip?

{code}
 INFO|indy::commands                |                src/commands/mod.rs:118 | PoolCommand command received
DEBUG|indy::commands::pool          |               src/commands/pool.rs:139 | create >>> name: ""test"", config: Some(""{\""genesis_txn\"": \""/home/indy/sandbox/pool_transactions_genesis\""}"")
TRACE|indy::services::pool          |           src/services/pool/mod.rs:724 | PoolService::create test with config Some(""{\""genesis_txn\"": \""/home/indy/sandbox/pool_transactions_genesis\""}"")
DEBUG|indy::commands::pool          |               src/commands/pool.rs:143 | create << res: ()
TRACE|indy::api::pool               |                    src/api/pool.rs:47  | indy_create_pool_ledger_config:
TRACE|indy::api::pool               |                    src/api/pool.rs:90  | indy_open_pool_ledger: >>> config_name: 0x7f6175440370, config: 0x7f61720bee90
TRACE|indy::api::pool               |                    src/api/pool.rs:96  | indy_open_pool_ledger: entities >>> config_name: ""test"", config: Some(""{\""genesis_txn\"": \""/home/indy/sandbox/pool_transactions_genesis\""}"")
TRACE|indy::api::pool               |                    src/api/pool.rs:111 | indy_open_pool_ledger: <<< res: Success
 INFO|indy::commands                |                src/commands/mod.rs:118 | PoolCommand command received
DEBUG|indy::commands::pool          |               src/commands/pool.rs:159 | open >>> name: ""test"", config: Some(""{\""genesis_txn\"": \""/home/indy/sandbox/pool_transactions_genesis\""}"")
DEBUG|indy::commands::pool          |               src/commands/pool.rs:174 | open <<<
ERROR|indy::services::pool          |           src/services/pool/mod.rs:577 | Pool worker thread finished with error PoolIncompatibleProtocolVersion(""Libindy PROTOCOL_VERSION is 1 but Pool Genesis Transactions are of version 1.4.Call indy_set_protocol_version(2) to set correct PROTOCOL_VERSION"")
 INFO|indy::commands                |                src/commands/mod.rs:118 | PoolCommand command received
 INFO|indy::commands::pool          |               src/commands/pool.rs:69  | OpenAck handle 1, pool_id 2, result Err(PoolIncompatibleProtocolVersion(""Libindy PROTOCOL_VERSION is 1 but Pool Genesis Transactions are of version 1.4.Call indy_set_protocol_version(2) to set correct PROTOCOL_VERSION""))
ERROR|indy::errors::indy            |                 src/errors/indy.rs:73  | Casting error to ErrorCode: Pool Genesis Transactions are not compatible with Protocol version Libindy PROTOCOL_VERSION is 1 but Pool Genesis Transactions are of version 1.4.Call indy_set_protocol_version(2) to set correct PROTOCOL_VERSION
TRACE|indy::api::pool               |                    src/api/pool.rs:104 | indy_open_pool_ledger: pool_handle: 0
{code};;;","11/Jul/18 10:23 PM;sergey.minaev;https://github.com/hyperledger/indy-sdk/blob/v1.5.0/doc/migration-guide-1.4.0-1.5.0.md#pool-api;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
DID API: Allow to use multiple key pairs with one DID,IS-810,31757,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,10/Jul/18 10:26 PM,10/Oct/19 9:06 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"[from Daniel] On a recent agent call, it became clear that we need to try hard to dramatically speed up our ability to support the semantics of multiple keys for a single DID (one being a cloud key, one being the key of the agency's message routing inbox, and one or more being edge keys). This is a precursor to full microledger support with AuthZ policies, where each DID has different keys (some edge, maybe one a cloud). If we don't figure out a way to do a super simple form of this soon (e.g., in indy-sdk 1.6), we may experience a very painful divergence as existing A2A explorations force a different DID for each agent due to the restriction that each DID can only have one keypair at a time.

[from Slava] Libindy already provides call *indy_create_key* that allows creation of key/pairs. Important point that keys now don't have a name and identified by verkey. 
 All crypto functions are completely keys based and don't know anything about DID. Roughly libindy mostly allow to solve the problem already.

The only problem is mapping between DID and set of key. For the main key libindy stores the mapping in wallet and allow to get DID key by calling *key_for_did* endpoint and we need similar behavior for secondary keys. Right now application can store this mapping in DID metadata with *indy_set_did_metadata*, but i more like more standard approach for this and suggest to add new endpoints:
 - *indy_asso**c**iate_key*(did, keyname, verkey)
 - *indy_get_**associated**_key*(did, keyname) -> key
 - *indy_get_**associated**_keys*(did) -> keys

*indy_get_**associated**_key_* _and  *indy_get*_*associated**_keys* can look for association stored in the wallet and if not found lookup ledger with GET_ATTRIB transaction that is similar on what ** *indy_key_for_d**id* endpoint is doing.

To standardize the way how keys are stored on the ledger we can add corresponded transaction builders and parsers:
 - *indy_build_associated_keys_request*(did, keys)
 - *indy_build_get_associated_keys_request*(did) -> req
 - *indy_parse_get_associated_keys_request*(req) -> keys

format of keys param can be the same as *indy_get_associated_keys* returns.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1403,,,,,,,,,,"1|hzwrhj:910sx3i",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8.0,,,,,,,,,,,,esplinr,gudkov,kdenhartog,swcurran,,,,,,,,"10/Jul/18 10:28 PM;gudkov;[~danielhardman] [~kdenhartog] [~esplinr] ^;;;","17/Jul/18 4:27 AM;kdenhartog;Started working on how we can approach this design and realized our decision about Agent IDs will affect this. I'll write up a proposal for us to work from there based upon [~gudkov] original outline in the comments above. Link to the outline here: https://docs.google.com/document/d/1PvTfVgj2CEBozZb6HeZMQ0ab_zu2zd7tBbH8Hnq3mFM/edit#heading=h.z11ylw9dvvdx;;;","02/Aug/18 10:20 PM;esplinr;We need to compare this approach with the microledger work done by [~lovesh].;;;","31/Aug/18 4:26 PM;gudkov;[~kdenhartog] Do you have any progress here?;;;","07/Sep/18 7:00 AM;kdenhartog;[~gudkov] I haven't had any progress here. I have been working in IndySDK on JWM features currently. [~swcurran] or [~mhailstone] would you have anyone available to build this feature? I'd be willing to pair program in the beginning with someone who wants to build it, but I don't have the bandwidth to work on this right now.;;;","08/Sep/18 3:19 AM;swcurran;I think this is a very high priority item, so am surprised to see it is just a ""Medium"".  I think most (all?) of the Agent2Agent capabilities we want to build are predicated on having full DIDDoc functionality in place - not just multiple keys. I would definitely like to see the scope and priority of this bumped.  As such, I don't think this is just a ""support multiple keys"" request, but a balance of planning and coding.  For example,
 * does Indy Node need to be updated, or does Indy-SDK just use conventions and make use of the ATTRIB key/value pairs to implement DIDDoc support?  I suspect so, but it should be stated by those that fully understand the ramifications.
 * how Agents are expected to use the Indy-SDK calls to implement the RSM.

 

As far as resources - we don't have access to resources that can implement that right now.  I can help to spec out what is needed, but the important work - the coding is not something we can provide.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Getting-Started guide in RC branch broken during incorrect IndySDK version,IS-811,31778,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,VladimirWork,sergey.minaev,sergey.minaev,11/Jul/18 7:12 PM,17/Jul/18 7:40 PM,28/Oct/23 2:49 AM,17/Jul/18 7:40 PM,,,,,,,,0,TShirt_S,,,,There is incorrect versions locking in GSG dockerfile.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwv07:",,,,,,EV 18.14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sergey.minaev,VladimirWork,,,,,,,,,,"11/Jul/18 7:14 PM;sergey.minaev;PR with fix https://github.com/hyperledger/indy-sdk/pull/937;;;","11/Jul/18 9:48 PM;sergey.minaev;release tag (https://github.com/hyperledger/indy-sdk/blob/v1.5.0/) has been moved.
There is no changes in any published artifacts, only documentation update

Recommendation for QA:
- main: check GSG from RC branch or stable tag
- regression: re-check samples as potentially affected by indy-node update (dockerfile from latest RC against 1.5.0 stable SDK);;;","17/Jul/18 7:40 PM;VladimirWork;Build Info:
libindy 1.5.0 stable
indy-node 1.4.66 stable

Steps to Validate:
1. Check GSG from RC branch or stable tag.
2. Re-check samples as potentially affected by indy-node update (dockerfile from latest RC against 1.5.0 stable SDK).

Actual Results:
GSG from RC branch works against 1.4.66 stable pool. RC samples (java/python) works against 1.5.0 stable libindy/wrappers and 1.4.66 stable pool.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
libnullpay fees API sequence needs independent signing,IS-812,31806,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,DouglasWightman,DouglasWightman,12/Jul/18 4:19 AM,03/Aug/18 6:00 PM,28/Oct/23 2:49 AM,03/Aug/18 6:00 PM,,,,,,,,0,,,,,"When paying fees using libnullpay the following API sequence is used:

1) build_request (NYM, SCHEMA, CRED_DEF for example)

2) indy_add_request_fees

3) indy_sign_and_submit_request

However, the signing of the fees and the signing of the request should be independent.  The following API sequence is used in libsovtoken and should be copied by libnullpay:

1) build_request (NYM, SCHEMA, CRED_DEF for example)

2) indy_sign_request

3) indy_add_request_fees

4) indy_submit_request",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,"1|hzzjk7:",,,,,,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,DouglasWightman,sergey.minaev,zhigunenko.dsr,,,,,,,,,"27/Jul/18 5:33 PM;sergey.minaev;indy_sign_request (and sign and submit ver) previously included field {{fees}} from payment plugin to data to sign
After fix https://github.com/hyperledger/indy-sdk/pull/991 this field skipped and result of both sequences of steps will be same as {{fees}} doesn't signed by DID

Build version 1.6.0 RC 9

Recommendation for QA:
one of the possible scenario to verify is 
- call build any request firstly
-- sign, then add_fee
-- add_fee, then sign
- both output should be same
;;;","03/Aug/18 6:00 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.1~671
libnullpay 1.6.1~671
libindy 1.6.1~665

*Steps to Validate:*
1. setup pool and load libnullpay plugin
2. run these commands
{code}
ledger nym did=VsKV7grR1BUE29mG2Fm2kX fees_inputs=pay:null:111_rBuQo2A1sc9jrJg fees_outputs=(pay:null:FYmoFw55GeQH7SRFa37dkx1d2dZ3zUF8ckg7wmL7ofN4,100)
ledger custom {""reqId"":1533285471763231290,""identifier"":""V4SGRU86Z58d6TV7PBUe6f"",""operation"":{""data"":1,""ledgerId"":1,""type"":3},""protocolVersion"":2} sign=true
{code}

*Actual results:*
Both requests have the same signature _91ZPsuLxMQTefFAZjPMCtopT8M2EMnew5iZNjixXuV9N3DyVR8jSKbi7e2NqK37GbGSFk9hNk3fBnGiv975Wkz3_;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
indy-crypto python wrapper debian package should depend on specific version of libindy-crypto,IS-813,31813,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,andkononykhin,andkononykhin,12/Jul/18 7:58 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,crypto,,,,"As of now debian package for python wrapper of indy-crypto is built without explicitly specified version of [libinfy-crypto|https://github.com/hyperledger/indy-crypto/blob/640186b3f3b60ca3565bef1251a77233db208bfd/wrappers/python/ci/python-wrapper-deb-build-and-upload.sh#L33]. It might lead to run-time issues in future.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzifj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,andkononykhin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Explore token work through the Indy CLI,IS-814,31817,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,VladimirWork,VladimirWork,12/Jul/18 10:22 PM,14/Jul/18 12:42 AM,28/Oct/23 2:49 AM,14/Jul/18 12:42 AM,,,,,,,,0,,,,,"*Things needed*
1 - Wallet with payment address
2 - At least 4 trustees on the ledger. The default is just one so you will need to add at least 3 more.
3 - Payment ledger (all token plugins described below)
4 - Indy-cli to mint tokens to the ledger.

*Github Repositories:*
sovtoken and sovtokenfees: https://github.com/evernym/plugin/tree/master
LibSovToken: https://github.com/evernym/libsovtoken/tree/master/doc

*.deb packages:*
LibSovToken: https://repo.corp.evernym.com/deb/pool/main/libs/libsovtoken/
sovtoken: https://repo.corp.evernym.com/deb/pool/main/s/sovtoken/
sovtokenfees: https://repo.corp.evernym.com/deb/pool/main/s/sovtokenfees/

*Additional instructions:*
{noformat}
##First, trust our internal Certificate Authority
sudo mkdir -p /usr/local/share/ca-certificates
cat <<EOF | sudo tee /usr/local/share/ca-certificates/Evernym_Root_CA.crt
-----BEGIN CERTIFICATE-----
MIIFJTCCAw2gAwIBAgIUMI0Z8YSLeRq8pZks40O3Dq2m8TIwDQYJKoZIhvcNAQEL
BQAwGjEYMBYGA1UEAxMPRXZlcm55bSBSb290IENBMB4XDTE3MTAxMTIwMTAxMFoX
DTQ3MTAwNDIwMTAzOVowGjEYMBYGA1UEAxMPRXZlcm55bSBSb290IENBMIICIjAN
BgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA1kjmtmMfLJfsqUNaco44N3brW8Vu
b02lAeEwbxc65mwfAG8kAjW7kYhI/fDXFOYXUvoa3Dg7bFeEatdIjHOahZssGM27
HsQZ4PfRhPE6HtXFszmDwXWuEekVxoyueTqL7ExnNZ+BRTXvPfm5nw1E7L3o3xHF
GSOtWFCyHfKd1LwMKzAVSjxlawEZnfk3WK3NxrC4UYMlQaDme7m3rCMfO+KBQk69
bFXsgn6/EihVeQ8T1+T8gogofzh5b4Z7kS6e6GMqotbGFg4agejkRVsIglSpaQLk
2Ztn/MP1dwgyvO4uvplB4sxZSC2FhhovlwPETmbKsnpj020+m0+YU4FPKwjroMiH
tP//YqiNKsLxtjhffW7XFToyy0qQttW5RMWnyx4MXs9Hwcy29gY1izeGMSzz3zV5
HG8JSJikuYbYiGJRVS0egovkVjja6lrVk0Q4Hm5pbw4l7LYCd6bkDLMsRaS1QnWs
9iz6XEf5SpIu1FuqHmlhj1ABehUyGIg5oC6egML3q78yk0mCW523qMFa9Kjnk871
mmXSCn3p/3DCrwWYfpcibxtVaKyJj6ISYIcl+Zu65Uzmhf+nj56x3gkNgEOva7JS
Xge+FxPxsaXBGyeSH09nNIoNmh/UucuzpNY2UyCpJuqXHtR5jaACSdsqNxG8tcDg
K9v98D/DFiShghECAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF
MAMBAf8wHQYDVR0OBBYEFOrH4oUpB94gNDNqdGG92kdVZ3qkMB8GA1UdIwQYMBaA
FOrH4oUpB94gNDNqdGG92kdVZ3qkMA0GCSqGSIb3DQEBCwUAA4ICAQCwjN3ggZ98
BXT39fKkCX3FHb0++aFcIyMKWrcZIpYrl3GoZsNKZK4QNQ+uJOP8xmqgyrCoMfch
VIGPQ0RDN/IzqCLhc/U3pDmk2hXa3xTxD3gpCQZ6Bz04KlcLfZd5jzbI741bVDyF
a1n46bEyuqV4SsNJWI/FGokJCNcZH66njBQBaQAccZ7xB9vWU9yjIYtGQDDvSm6J
SC2knrQri0vv4QLUSc1LS6AlWWSQxcCpcdO+OzIFGsf5bVmYN6J4R3COY5NyQ+yn
pOSN2NOh5h3ZrYAxm3i4Il0orVLveVcTVDGeAgZUII4YLJi/01RHGqit3aCuApSh
bzFTZ5FldFss+JX9iAhqpFDbHLgae0F3QmYEnGilt/PzO4j23QJo3FZKeruQLH7P
L9aOgN6S2+Akbbm9YTc59yzU5TZMxANwTdaYFWFqk/8nKgZiBR1l8jnWTlWnm86A
qVssH3DLKwiYrWSOHRzGuN5BmPXxxtKQJlwAXt0wJE3puUkaJSRo7CJQ3QNMoKDe
OjzXc9WvkFIXr3Eui8UTiHB/WT7N4o8hmVN404akGfWE0YNwRVfWpjGdew6g0tZi
lFnjUUk49av67um43JHcinT5NFPuleZzkjaL/D8ueOrjXQDy05rwVdgmw9pXog4B
Tw6APXtEnjfD2H8HOpOX/7ef4gWK0O1Q7A==
-----END CERTIFICATE-----
EOF

sudo update-ca-certificates

##Trust our gpg signing key
curl https://repo.corp.evernym.com/repo.corp.evenym.com-sig.key | sudo apt-key add -

##Add the agency-dev repo
cat <<EOF | sudo tee /etc/apt/sources.list.d/agency-dev_repo.corp.evernym.com.list
deb https://repo.corp.evernym.com/deb evernym-agency-dev-ubuntu main
EOF
{noformat}

*Minting*
You should be able to mint tokens through the Indy-CLI. A demo was shown on the 6th of July using the Indy-CLI to mint tokens.
https://drive.google.com/file/d/1m1MPfHTfWOUHRBFSJAYfR3amZ-H-6l74/view",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jul/18 9:04 PM;VladimirWork;minting.PNG;https://jira.hyperledger.org/secure/attachment/15311/minting.PNG","13/Jul/18 9:04 PM;VladimirWork;payment.PNG;https://jira.hyperledger.org/secure/attachment/15312/payment.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,,No,,,"1|hzzig7:",,,,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,VladimirWork,,,,,,,,,,,"14/Jul/18 12:41 AM;VladimirWork;All packages were installed successfully. Client and ledger plugins works. The only issue is private repos so sshuttle via sshuttle-helper should be run to get GPG and packages (and sshuttle-helper is also private repo so now we should configure valid git account on node to clone sshuttle-helper repo then configure ssh valid account to run sshuttle and then we can import GPG and get packages using common way `apt install`) so I configure it on single machine, load deb packages and copy them to all nodes since this is a faster way.

Indy CLI commands sequence to reproduce token minting:
{noformat}
load-plugin library=libsovtoken.so initializer=sovtoken_init
wallet create w1 key=key
wallet open w1 key=key
payment-address create payment_method=sov
pool create p1 gen_txn_file=/home/indy/docker_gen
pool connect p1
did new seed=000000000000000000000000Trustee1
did new seed=000000000000000000000000Trustee2
did new seed=000000000000000000000000Trustee3
did new seed=000000000000000000000000Trustee4
did use V4SGRU86Z58d6TV7PBUe6f
ledger nym did=LnXR1rPnncTPZvRdmJKhJQ verkey=~RTBtVN3iwcFhbWZzohFTMi role=""TRUSTEE""
ledger nym did=PNQm3CwyXbN5e39Rw3dXYx verkey=~AHtGeRXtGjVfXALtXP9WiX role=""TRUSTEE""
ledger nym did=KMSWjAnqdwgLRc5yZBygcA verkey=~SYaYSBf1ngDyM4VtKf7nxW role=""TRUSTEE""
ledger mint-prepare outputs=(<payment_address>,100)
ledger sign-multi txn=<previous_txn_result>
did use LnXR1rPnncTPZvRdmJKhJQ
ledger sign-multi txn=<previous_txn_result>
did use PNQm3CwyXbN5e39Rw3dXYx
ledger sign-multi txn=<previous_txn_result>
did use KMSWjAnqdwgLRc5yZBygcA
ledger sign-multi txn=<previous_txn_result>
did use V4SGRU86Z58d6TV7PBUe6f
ledger custom <previous_txn_result>
ledger get-utxo payment_address=<payment_address>
{noformat};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Read The Docs File Structure ,IS-815,31840,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dbluhm,burdettadam,burdettadam,13/Jul/18 7:03 AM,24/Jul/19 3:33 AM,28/Oct/23 2:49 AM,24/Jul/19 3:33 AM,,,,,,,,0,,,,,"Story: As ""read the docs"", I want a certain file structure, so that I can easily build and host documentation. 

Note: This task includes adding links to current documentation for the newly hosted read the docs and any needed file structure change.

How to demo: show the updated readme with a link to read the docs",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-664,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,IS-320,,,No,,,,No,,,"1|hzwqr8:i",,,,Unset,,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,burdettadam,dbluhm,,,,,,,,,,"24/Jul/19 3:33 AM;dbluhm;Old issue; work on the read the docs site ought to be brought up in more specific issues.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
10 Minutes To Success ,IS-816,31844,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,burdettadam,burdettadam,13/Jul/18 7:34 AM,11/Oct/19 9:14 PM,28/Oct/23 2:49 AM,11/Oct/19 9:14 PM,,,,,,,,0,,,,,"Story: As a person, I would like to consume Indy SDK getting started without knowledge about docker or Indy node.

Note: This could be implemented using a genesis file that points to the test pool network. 

How to demo: Ask a person to work through the getting started and report a time shorter than ten minutes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,IS-320,,,No,,,,No,,,"1|hzwqr9:",,,,Unset,,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,burdettadam,esplinr,,,,,,,,,,"11/Oct/19 9:14 PM;esplinr;We expect that new users of Indy will start with an Aries Agent or Aries Framework. Therefore, the getting started documentation will need to be created in that project and will require a different architecture than the current Indy docs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance Tests for Wallet Default Storage,IS-817,31846,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,donqui,,13/Jul/18 8:53 AM,12/Sep/19 12:57 AM,28/Oct/23 2:49 AM,30/Aug/18 7:21 PM,,,1.6.4,,wallet,,,0,,,,,"*Task Overview*
 At this moment there are no performance tests for the Default Storage of the Indy SDK Wallet. Without these tests it will be hard to monitor if there are performance regressions with new code changes/re-factors.

Output of this ticket should be a Performance Test Harness that tests the performance of the Wallet Default Storage.

*Acceptance Criteria*
 * Performance test harness created

 * Reports on performance generated and published

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,,No,,,"1|hzwv5r:",,,,Unset,,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,,8.0,Unset,,,,,,,,,,,esplinr,gudkov,swcurran,,,,,,,,,"24/Jul/18 10:18 PM;esplinr;[~swcurran] I believe that your team has done some performance testing of the new wallet. Can you share your results in this ticket so that others benefit?;;;","25/Jul/18 11:23 PM;swcurran;Hi [~esplinr] - nothing to report as yet.  [~sklump] is working on integrating the features into our code base (now called von-anchor).  We've not yet done any performance testing, but will keep you up to date on what is found.;;;","17/Aug/18 10:57 PM;swcurran;Lots more to come, but starting on some performance testing.  We ran a developer laptop (MacBook) based test last night and loaded about 27,000 credentials into an instance of TheOrgBook.  I don't think we pulled any data out of the wallet yet.  Everything, including the Indy Nodes (which after start up would have been doing nothing - only about 15 transactions run against them), were running locally.

At the 11 hour mark, something went off the rails, but no idea yet where that happened.

Nothing yet to report on pulling data out of the wallet.;;;","25/Aug/18 7:49 AM;swcurran;We've continued to make progress and are running tests regularly. In the test running all components (Issuer, Holder, Verifier and Ledger) we loaded about 160k credentials in about 11 hours - about 238/min or ~4/sec.  While doing loading, we were running interactive proof requests that responded promptly.  We're pretty happy with those results. Next step is to put the apps on our OpenShift PaaS and see what performance we get.  I believe that was a single threaded test.  We have run a multi-threaded test that gave us about a 40% performance improvement.

The test includes our software (VON-Anchor - like libVCX, but in python) wrapping the Indy-SDK as the core of both agents.  The applications:
 * have a supply of JSON plaintext data for the credentials.
 * generate the credentials using Indy-SDK
 * send the credential to the Holder (TheOrgBook)
 * process the credential to extract claim data and load into TheOrgBooks search database
 * invoke Indy-SDK to store the credential in the default wallet.

The proof process is:
 * Hitting an API on TheOrgBook and passing in a credential ID
 * Constructing a proof request based on the credential type and ID
 * Completing a proof, including using Indy-SDK to get the credential from the wallet.

Proof performance is under a second.

So...all good so far.;;;","30/Aug/18 7:21 PM;gudkov;Benchmark for basic wallet operations was implemented in https://github.com/hyperledger/indy-sdk/pull/1102;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Proof of Correctness needs to be added for Revocation,IS-818,31864,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,High,,MikeLodder,MikeLodder,MikeLodder,14/Jul/18 1:26 AM,02/Aug/19 4:57 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"Right now there is no proof of correctness for revocation key creation like there currently is for primary credential keys.

This is important because it helps Holders to know that the Issuer cannot compute the discrete log of the generators. If Issuers could, they can change which attribute is at a given position and commit to different values and otherwise be malicious.

This needs to happen before production.",,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,,No,,,"1|hzww8f:",,No,,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,DucaDellaForcoletta,gudkov,MikeLodder,,,,,,,,,"26/Jul/18 9:33 PM;gudkov;[~MikeLodder] Are you working on this?;;;","26/Jul/18 11:29 PM;MikeLodder;Yes we are working on the math now. Once the math has been approved I will put this in indy-crypto and submit a PR. This does not need to happen before TDE.;;;","02/Aug/19 4:57 PM;DucaDellaForcoletta;Plan for this feature?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Payment API: API should be more generic,IS-819,31912,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,gudkov,gudkov,16/Jul/18 8:53 PM,26/Jul/18 9:31 PM,28/Oct/23 2:49 AM,24/Jul/18 11:39 PM,,,1.6.0,,,,,0,,,,,"Current Payment API in libindy forces UTXO based payments approach and it is hard to use with non-UTXO based payments. We need to make the API more generalized to support non-UTXO based crypto payments and traditional payments like VISA.

 

The following changes are suggested:
 - Instead of ""TXO/UTXO"" abstraction used as payment inputs use ""Source"" abstraction.

 - Instead of ""TXO/UTXO"" abstraction used as payment outputs use ""Receipt"" abstraction.

 - Rename get_utxo endpoint to get_sources endpoint

 - Add build_verify_payment_req(receipt) and parse_verify_payment_resp(resp) endpoints

 - Add OperationNotSupported error code as some operations like minting can't be supported by new payment methods",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-794,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,,No,,,"1|hzzjnr:",,,,Unset,Not Required,EV 18.14,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,5.0,Unset,,,,,,,,,,,Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"20/Jul/18 3:59 PM;Artemkaaas;All points have been implemented in PR: [https://github.com/hyperledger/indy-sdk/pull/962];;;","24/Jul/18 2:29 PM;Artemkaaas;Changes:
 * Changed the format of input and output parameters.
 * Changed format of result values of `indy_parse_response_with_fees` and `indy_parse_payment_response` API functions.
 * Renamed `indy_build_get_utxo_request` and `indy_parse_get_utxo_response` API functions to `get_sources`
 * Added `indy_build_verify_payment_req` and `indy_parse_verify_payment_response` API functions.

Build version: master-643;;;","24/Jul/18 11:39 PM;zhigunenko.dsr;*Environment:*
indy-cli                   1.5.0~643
libnullpay                   1.5.0~643

*Steps to Validate:*
Check cases from https://docs.google.com/document/d/1_7e2J-mIj7IxLABcd1ue1SJtXzYUPiHx4RrvXuWL2ds/edit#;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Too small response timeouts ,IS-820,31954,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,dsurnin,ashcherbakov,ashcherbakov,17/Jul/18 6:23 PM,19/Jul/18 4:46 PM,28/Oct/23 2:49 AM,19/Jul/18 4:46 PM,1.6.0,,1.6.0,,,,,0,,,,,"After recent re-factorings, the timeouts for Replies were decreased to 5/10 (ACK/Reply) from 10/50.

This is not enough for IndyNode tests and on production during high load (especially if view change happens in between).

We need to revert the timeouts as a minimum. IS-601 could also be very helpful.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-601,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,,No,,,"1|hzwv0v:",,,,Unset,Unset,EV 18.14,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,ashcherbakov,sergey.minaev,,,,,,,,,,"18/Jul/18 11:55 PM;sergey.minaev;PR with fix https://github.com/hyperledger/indy-sdk/pull/954;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Libsovtoken, Libindy, and Libnullpay all use env_logger which can only be initialized once",IS-821,31958,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,ryanmarsh,ryanmarsh,17/Jul/18 8:35 PM,26/Jul/18 9:31 PM,28/Oct/23 2:49 AM,23/Jul/18 11:38 PM,,,,,,,,0,,,,,"A failure happens when libnullpay or libsovtoken are initialized. They both use env_logger which is already initialized by libindy. These are the messages from [~gudkov]:

In ideal design logger implementation must be configured by application only and libraries should use logger facede (log crate). Unfortunately now we don't have infrastructure for this. I believe it is problem that must be solved. I suggest to create ticket in IS JIRA.

As a quick-fix we can remove logger initialization in libnullpay (or use it for tests only). As next fix we can implement more tricky logger initialization in libindy, libnullpay and libsovtolen.

And reliable fix will be moving logger initialization to an application level.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,,No,,,"1|hzzjov:",,,,Unset,Unset,EV 18.14,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,gudkov,ryanmarsh,,,,,,,,,,"21/Jul/18 12:11 AM;gudkov;Seems it is related to the case when libindy and libnullpay linked statically.

Form log crate issue thread:

> The dynamic library will have its own copy of the logging backend (e.g. env_logger) which also needs to be initialized, but once that happens it should work just fine!

> If the plugin and main program both dynamically link the log crate, they should be able to share a logger as well.;;;","21/Jul/18 1:12 AM;gudkov;Changes:

* Don't allow crash in logger::init in libindy, libnullpay and cli
* Simplified logger init code
* Use the same version of log and env_logger for libindy, libnullpay and cli
* Called cargo update for cli and libnullpay
* Fixed (enabled) logger in cli
* Notified Nikita about necessity to apply this fix to libsovtoken

PR:
https://github.com/hyperledger/indy-sdk/pull/975;;;","23/Jul/18 11:38 PM;gudkov;- Checked multiple logger initialization for both dynamic and static builds. For all it is ok.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
IndyCrypto master has broken backward compatibility with latest stable (0.4.1),IS-822,31966,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,VladimirWork,sergey.minaev,sergey.minaev,17/Jul/18 10:49 PM,26/Jul/18 9:31 PM,28/Oct/23 2:49 AM,23/Jul/18 6:29 PM,,,,,indycrypto,,,0,,,,,"Steps to reproduce:
Issuer use stable 0.4.1: 
- create credential definition
- store key correctness proof
- publish cred def to the ledger

Issuer provide credential offer to Prover

Prover use latest master: 
 - fetch credential definition from the ledger,
 - try to process credential offer and create credential request

Actual result:
creation credential request is failed on key correctness proof verification

Expected result:
create credential request call should be successful ",,,,,,,,,,,,,,,IS-795,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,,No,,,"1|hzzjp3:",,,,Unset,Unset,EV 18.14,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,sergey.minaev,VladimirWork,,,,,,,,,,"17/Jul/18 10:53 PM;sergey.minaev;Here is a PR with simple test. String constants are fetched from 0.4.1 output.
https://github.com/hyperledger/indy-crypto/pull/114
UPD: merged to master: https://github.com/hyperledger/indy-crypto/blob/master/libindy-crypto/src/cl/prover.rs#L1582;;;","17/Jul/18 11:24 PM;sergey.minaev;[~esplinr] [~gudkov] I think this ticket is a blocker for coming IndySDK release.;;;","23/Jul/18 6:28 PM;VladimirWork;Build Info:
indy-node 1.5.67 (rc)
Client #1: libindy 1.5.0 libindy-crypto 0.4.1 (stable)
Client #2: libindy 1.5.0~635 libindy-crypto 0.4.1~55 (master)

Steps to Validate:
Client #1:
{noformat}
import asyncio
import json
from indy import wallet, pool, ledger, anoncreds, did

async def stable_steps():
	await pool.set_protocol_version(2)
	pool_config = json.dumps({""genesis_txn"": str('/var/lib/indy/sandbox/pool_transactions_genesis')})
	await pool.create_pool_ledger_config('pool1', pool_config)
	pool_handle = await pool.open_pool_ledger('pool1', pool_config)
	wallet_credential = json.dumps({""key"": str('key')})
	await wallet.create_wallet('pool1', 'wallet1', None, None, wallet_credential)
	wallet_handle = await wallet.open_wallet('wallet1', None, wallet_credential)
	test_did, test_vk = await did.create_and_store_my_did(wallet_handle, ""{}"")
	trustee_did, trustee_vk = await did.create_and_store_my_did(wallet_handle, json.dumps({""seed"": str('000000000000000000000000Trustee1')}))
	req = await ledger.build_nym_request(trustee_did, test_did, test_vk, None, 'TRUSTEE')
	await ledger.sign_and_submit_request(pool_handle, wallet_handle, trustee_did, req)
	schema_id, schema_json = await anoncreds.issuer_create_schema(test_did, 'schema_name', '1.0', '[""age"", ""sex"", ""height"", ""name""]')
	req = await ledger.build_schema_request(test_did, schema_json)
	schema_result = await ledger.sign_and_submit_request(pool_handle, wallet_handle, test_did, req)
	schema_json = json.loads(schema_json)
	schema_json['seqNo'] = json.loads(schema_result)['result']['txnMetadata']['seqNo']
	schema_json = json.dumps(schema_json)
	cred_def_id, cred_def_json = await anoncreds.issuer_create_and_store_credential_def(wallet_handle, test_did, schema_json, 'tag', None, None)
	req = await ledger.build_cred_def_request(test_did, cred_def_json)
	await ledger.sign_and_submit_request(pool_handle, wallet_handle, test_did, req)
	offer = await anoncreds.issuer_create_credential_offer(wallet_handle, cred_def_id)
	print(offer)
	
if __name__ == '__main__':
	asyncio.get_event_loop().run_until_complete(stable_steps())

{noformat}

Client #2:
{noformat}
import asyncio
import json
from indy import wallet, pool, ledger, anoncreds, did

async def master_steps():
	await pool.set_protocol_version(2)
	# offer = {...} <<< insert printed offer from Client #1
	pool_config = json.dumps({""genesis_txn"": str('/var/lib/indy/sandbox/pool_transactions_genesis')})
	await pool.create_pool_ledger_config('pool1', pool_config)
	pool_handle = await pool.open_pool_ledger('pool1', pool_config)
	wallet_config = json.dumps({""id"": str('wallet1')})
	wallet_credential = json.dumps({""key"": str('key')})
	await wallet.create_wallet(wallet_config, wallet_credential)
	wallet_handle = await wallet.open_wallet(wallet_config, wallet_credential)
	await anoncreds.prover_create_master_secret(wallet_handle, 'ms')
	trustee_did, trustee_vk = await did.create_and_store_my_did(wallet_handle, json.dumps({""seed"": str('000000000000000000000000Trustee1')}))
	req = await ledger.build_get_cred_def_request(trustee_did, offer['cred_def_id'])
	res = await ledger.sign_and_submit_request(pool_handle, wallet_handle, trustee_did, req)
	cred_def_id, cred_def_json = await ledger.parse_get_cred_def_response(res)
	cred_req_json, cred_req_metadata_json = await anoncreds.prover_create_credential_req(wallet_handle, trustee_did, json.dumps(offer), cred_def_json, 'ms')
	print(cred_req_json)
	print('-------')
	print(cred_req_metadata_json)

if __name__ == '__main__':
	asyncio.get_event_loop().run_until_complete(master_steps())

{noformat}

Actual Results:
Client #2 calls `anoncreds.prover_create_credential_req` without any errors:
{noformat}
{""prover_did"":""V4SGRU86Z58d6TV7PBUe6f"",""cred_def_id"":""T2wdSKoiCVBmmvzzqbeuBi:3:CL:28:tag"",""blinded_ms"":{""u"":""908632363407662565636378481527271181855568351332694551910746854373383341545192341789010814307252893299543525171753198793802004355447073684047921691496263448920826195557996302212045500899298992531583744158732014531082797857295104908245471019906852222980989187736597810022312570354283286872898535847205807205818680924265134627993127116464328388197213912415399801650307322529772137224037495432115902602240917459258114458314121627385028586696246618476495538946922016211527564893441850994321074040341507991261872854485588534309163521939772589299643353197386480895833438211099166048508311960867749707551894328883265137204"",""ur"":null,""hidden_attributes"":[""master_secret""],""committed_attributes"":{}},""blinded_ms_correctness_proof"":{""c"":""107336504840417264129996400583229058024590722581280030623757275828252744378970"",""v_dash_cap"":""1521137975893278844133402000559980625621059129947650250478279556308662471975360046151272096593592956543102836894953033460869098522327211284650634148342253122986738401632529506321989441768982473135227865059837704995439720009667822271243709205129061311944757840018181761961585341235678132028409890022323417895885539767861992878313699906991241324652733434465430835937478491204845382301266505021583873293508256213001650712781492916939907437355010660592061276542153130161021399087848710879474488085811494765409465720744075451520894659135621633506422110205062405751941815705201483515042996532808841707176763358023886503215911758290115863558184858116811941707283809081759322123175674125019208050192532131983485848857019146656"",""m_caps"":{""master_secret"":""6382972028241248243629784353573309173147460341496272182104540113253389987592534434076611398768408559439002806114694208751163328645772288087634165102593979595133512969573769513062""},""r_caps"":{}},""nonce"":""408410274383359033499425""}
-------
{""master_secret_blinding_data"":{""v_prime"":""14171674195604127264309949039462323504228987429990059016240452289312248795308812585694474384861298026385465570418978410115908733617937312801827989926058535256268505773515973077247284956855399303489532118397281447253097995843507404219747392962877653469219011566558663300119140316807898186057982379195133774532273305377608615944677558965862601450107765314320225764493095740510205603127389287945935359250902946793181253824969609618196406132509302210705731547824538094138819378918166530570980675636801658225693616827697756864764887852907634236099867509609003018241447432944667875474320004000911457429496989792893198055649543433166885351725039115"",""vr_prime"":null},""nonce"":""408410274383359033499425"",""master_secret_name"":""ms""}
{noformat}
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Static Analysis Bugs,IS-823,31989,,Bug,To Develop,IS,Indy SDK,software,resplin,,,High,,,burdettadam,burdettadam,18/Jul/18 4:42 AM,08/Oct/19 11:54 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"Story:As server running static analysis, I want no breaking errors in the static analysis, so that I can run more meaningful tests. 
 Related tasks:
 * Raw pointer passed into public function. - IS-824
 * Bad Comparison - IS-825
 * Clone on a double-reference sdk - IS-826
 * Clone on a double-reference cli - IS-830

Note: How to demo: Run static analysis with out any errors. For example.
{code:java}
 cargo +nightly clippy {code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,IS-1401,,,No,,,Unset,No,,,"1|hzzj07:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,burdettadam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Raw pointer passed into public function.,IS-824,31991,31989,Sub-task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,burdettadam,burdettadam,18/Jul/18 4:50 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"in /libindy/src/utils/byte_array.rs (line 11) there is a micro check_useful_c_byte_array, that causes this error: this public function dereferences a raw pointer but is not marked `unsafe` . A solution is needed to resolve this error.

Raw error message: 
{code}
error: this public function dereferences a raw pointer but is not marked `unsafe`
   --> src/utils/byte_array.rs:11:64
    |
11  |         let $ptr = unsafe { $crate::std::slice::from_raw_parts($ptr, $len as usize) };
    |                                                                ^^^^
    | 
   ::: src/api/crypto.rs:208:5
    |
208 |     check_useful_c_byte_array!(message_raw, message_len, ErrorCode::CommonInvalidParam4, ErrorCode::CommonInvalidParam5);
    |     --------------------------------------------------------------------------------------------------------------------- in this macro invocation
    |
    = note: #[deny(not_unsafe_ptr_arg_deref)] on by default
    = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#not_unsafe_ptr_arg_deref
{code}

Because `check_useful_c_byte_array` is a macro, the error is additionally replicated in these places:

{code}
::: src/api/crypto.rs:270:5
::: src/api/crypto.rs:271:5
::: src/api/crypto.rs:340:5
::: src/api/crypto.rs:408:5
::: src/api/crypto.rs:471:5
::: src/api/crypto.rs:533:5
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzj0n:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,burdettadam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad Comparison,IS-825,31992,31989,Sub-task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,rasviitanen,burdettadam,burdettadam,18/Jul/18 4:56 AM,22/May/19 2:21 AM,28/Oct/23 2:49 AM,22/May/19 2:21 AM,,,1.9.0,,,,,0,,,,,"In /libindy/src/services/pool/catchup.rs:24:8 there is a if statement that causes this error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false

The raw error message:
{code:java}
error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
  --> src/services/pool/catchup.rs:24:8
   |
24 |     if txns_cnt <= 0 {
   |        ^^^^^^^^^^^^^
   |
   = note: #[deny(absurd_extreme_comparisons)] on by default
   = help: because 0 is the minimum value for this type, the case where the two sides are not equal never occurs, consider using txns_cnt == 0 instead
   = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#absurd_extreme_comparisons
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzj0v:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,burdettadam,esplinr,,,,,,,,,,"22/May/19 2:21 AM;esplinr;PR:  https://github.com/hyperledger/indy-sdk/pull/1639;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clone on a double-reference in sdk,IS-826,31994,31989,Sub-task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,ignisvulpis,burdettadam,burdettadam,18/Jul/18 5:03 AM,20/Aug/19 11:21 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"In src/services/wallet/storage/default/mod.rs:299:53 there is a if block that causes this error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type.

 

The raw error message:
{code:java}
error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type
   --> src/services/wallet/storage/default/mod.rs:299:53
    |
299 |         let type_ = if options.retrieve_type { Some(type_.clone()) } else { None };
    |                                                     ^^^^^^^^^^^^^
    |
    = note: #[deny(clone_double_ref)] on by default
    = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#clone_double_ref
help: try dereferencing it
    |
299 |         let type_ = if options.retrieve_type { Some(&(*type_).clone()) } else { None };
    |                                                     ^^^^^^^^^^^^^^^^^
help: or try being explicit about what type to clone
    |
299 |         let type_ = if options.retrieve_type { Some(&[u8]::clone(type_)) } else { None };
    |                                                     ^^^^^^^^^^^^^^^^^^^
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzj1b:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,burdettadam,ignisvulpis,,,,,,,,,,"20/Aug/19 11:21 PM;ignisvulpis;Fixed in https://github.com/hyperledger/indy-sdk/pull/1838;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple Clone on a double-reference in CLI,IS-830,31999,31989,Sub-task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,burdettadam,burdettadam,18/Jul/18 5:36 AM,01/Aug/19 5:51 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"In /cli/src/commands/wallet.rs there is multiple clone on double-reference, see errors below.
{code:java}
error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type
  --> src/commands/wallet.rs:46:44
   |
46 |         let config: String = json!({ ""id"": id.clone(), ""storage_type"": storage_type, ""storage_config"": storage_config }).to_string();
   |                                            ^^^^^^^^^^
   |
   = note: #[deny(clone_double_ref)] on by default
   = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#clone_double_ref
help: try dereferencing it
   |
46 |         let config: String = json!({ ""id"": &(*id).clone(), ""storage_type"": storage_type, ""storage_config"": storage_config }).to_string();
   |                                            ^^^^^^^^^^^^^^
help: or try being explicit about what type to clone
   |
46 |         let config: String = json!({ ""id"": &str::clone(id), ""storage_type"": storage_type, ""storage_config"": storage_config }).to_string();
   |                                            ^^^^^^^^^^^^^^^

error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type
  --> src/commands/wallet.rs:47:50
   |
47 |         let credentials: String = json!({ ""key"": key.clone() }).to_string();
   |                                                  ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#clone_double_ref
help: try dereferencing it
   |
47 |         let credentials: String = json!({ ""key"": &(*key).clone() }).to_string();
   |                                                  ^^^^^^^^^^^^^^^
help: or try being explicit about what type to clone
   |
47 |         let credentials: String = json!({ ""key"": &str::clone(key) }).to_string();
   |                                                  ^^^^^^^^^^^^^^^^

error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type
   --> src/commands/wallet.rs:285:53
    |
285 |         let export_config: String = json!({ ""path"": export_path.clone(), ""key"": export_key.clone() }).to_string();
    |                                                     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#clone_double_ref
help: try dereferencing it
    |
285 |         let export_config: String = json!({ ""path"": &(*export_path).clone(), ""key"": export_key.clone() }).to_string();
    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^
help: or try being explicit about what type to clone
    |
285 |         let export_config: String = json!({ ""path"": &str::clone(export_path), ""key"": export_key.clone() }).to_string();
    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^

error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type
   --> src/commands/wallet.rs:285:81
    |
285 |         let export_config: String = json!({ ""path"": export_path.clone(), ""key"": export_key.clone() }).to_string();
    |                                                                                 ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#clone_double_ref
help: try dereferencing it
    |
285 |         let export_config: String = json!({ ""path"": export_path.clone(), ""key"": &(*export_key).clone() }).to_string();
    |                                                                                 ^^^^^^^^^^^^^^^^^^^^^^
help: or try being explicit about what type to clone
    |
285 |         let export_config: String = json!({ ""path"": export_path.clone(), ""key"": &str::clone(export_key) }).to_string();
    |                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^

error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type
   --> src/commands/wallet.rs:332:44
    |
332 |         let config: String = json!({ ""id"": id.clone(), ""storage_type"": storage_type, ""storage_config"": storage_config }).to_string();
    |                                            ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#clone_double_ref
help: try dereferencing it
    |
332 |         let config: String = json!({ ""id"": &(*id).clone(), ""storage_type"": storage_type, ""storage_config"": storage_config }).to_string();
    |                                            ^^^^^^^^^^^^^^
help: or try being explicit about what type to clone
    |
332 |         let config: String = json!({ ""id"": &str::clone(id), ""storage_type"": storage_type, ""storage_config"": storage_config }).to_string();
    |                                            ^^^^^^^^^^^^^^^

error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type
   --> src/commands/wallet.rs:333:50
    |
333 |         let credentials: String = json!({ ""key"": key.clone() }).to_string();
    |                                                  ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#clone_double_ref
help: try dereferencing it
    |
333 |         let credentials: String = json!({ ""key"": &(*key).clone() }).to_string();
    |                                                  ^^^^^^^^^^^^^^^
help: or try being explicit about what type to clone
    |
333 |         let credentials: String = json!({ ""key"": &str::clone(key) }).to_string();
    |                                                  ^^^^^^^^^^^^^^^^

error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type
   --> src/commands/wallet.rs:334:53
    |
334 |         let import_config: String = json!({ ""path"": export_path.clone(), ""key"": export_key.clone() }).to_string();
    |                                                     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#clone_double_ref
help: try dereferencing it
    |
334 |         let import_config: String = json!({ ""path"": &(*export_path).clone(), ""key"": export_key.clone() }).to_string();
    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^
help: or try being explicit about what type to clone
    |
334 |         let import_config: String = json!({ ""path"": &str::clone(export_path), ""key"": export_key.clone() }).to_string();
    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^

error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type
   --> src/commands/wallet.rs:334:81
    |
334 |         let import_config: String = json!({ ""path"": export_path.clone(), ""key"": export_key.clone() }).to_string();
    |                                                                                 ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#clone_double_ref
help: try dereferencing it
    |
334 |         let import_config: String = json!({ ""path"": export_path.clone(), ""key"": &(*export_key).clone() }).to_string();
    |                                                                                 ^^^^^^^^^^^^^^^^^^^^^^
help: or try being explicit about what type to clone
    |
334 |         let import_config: String = json!({ ""path"": export_path.clone(), ""key"": &str::clone(export_key) }).to_string();
    |                                        ^^^^^^^^^^^^^^^
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzj1r:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,burdettadam,ignisvulpis,,,,,,,,,,"01/Aug/19 5:51 PM;ignisvulpis;Should be fixed when [https://github.com/hyperledger/indy-sdk/pull/1774] is merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Long API calls should support cancellation,IS-831,32032,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,19/Jul/18 12:03 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"We have some API calls that can be executed significant time. For example:
 * Wallet export/import
 * RevReg generation

We need have ability to cancel these calls. I suggest the following:
 * Keep C API as is without additional cbs or params
 * Add indy_cancel(cmd_handle) endpoint
 * For each wrapper analyze ability of cancellation through asyncio API (Future.cancel()). If it is impossible for some wrappers than we can add similar ""ext"" method for each important endpoint that exposes cmd_handle.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-832,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzj47:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,8.0,Unset,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Long API calls should support progress reporting,IS-832,32034,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,19/Jul/18 12:30 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"We have some API calls that can be executed significant time. For example:
 * Wallet export/import
 * RevReg generation

We need have ability to get progress for these calls. I suggest the following:
 * Keep C API as is without additional cbs or params
 * Add indy_get_progress(cmd_handle) endpoint
 * For each wrapper analyze ability of progress reporting without API changes(extension of Future or Promise can be returned). If it is impossible for some wrappers than we can add similar ""ext"" method for each important endpoint that exposes cmd_handle.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-831,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzj4f:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,8.0,Unset,,,,,,,,,,,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Explore load test behavior in case of read requests and lots of connections,IS-833,32085,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,ozheregelya,ozheregelya,ozheregelya,20/Jul/18 10:27 PM,01/Aug/18 9:44 PM,28/Oct/23 2:49 AM,31/Jul/18 10:22 PM,,,,,,,,0,,,,,"When the load test runs on 10 machines with 450 clients, part of clients fails with timeout errors during connection the clients. libindy=1.5.0~626, indy-node=1.5.515
Need to understand why we fails with timeout.",,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1503,,,,,IS-834,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzjlr:",,,,Unset,Unset,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),ozheregelya,sergey.minaev,,,,,,,,,,"20/Jul/18 10:34 PM;ozheregelya;Load test for reading was running with following parameters:
 python3 perf_processes.py -g ~/pool_transactions_genesis -m t -c 450 -t 1 -n 1 -k nym -r 1

Information about previous test runs with old libindy versions: [https://docs.google.com/spreadsheets/d/1DTjDsLSysFBiKU-9z4-IzunJk4wEy44hE_PGZYxnN_8/edit#gid=1813415708];;;","30/Jul/18 7:45 PM;sergey.minaev;[~ozheregelya] please re-check with one of the latest version. Stable 1.6.1 or 1.6.1 - master - xxx;;;","31/Jul/18 10:21 PM;ozheregelya;Environment:
indy-node 1.5.527
libindy 1.6.1~655

Both of 
{code:java}
python3 perf_processes.py -g ~/stab_transactions_genesis -m t -c 450 -t 1 -n 1 -k nym{code}
and 
{code:java}
python3 perf_processes.py -g ~/stab_transactions_genesis -m t -c 450 -t 1 -n 1 -k get_nym {code}
from 10 machines running simultaneously worked fine.

The maximal amount of clients were tried is
{code:java}
python3 perf_processes.py -g ~/stab_transactions_genesis_new -m t -c 1000 -t 1 -n 1 -k get_nym -r 1{code}
from 10 machines. On clear environment it worked without timeout errors.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Pool API: Pool should support more flexible timeouts,IS-834,32126,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,ozheregelya,gudkov,gudkov,23/Jul/18 9:33 PM,03/Aug/18 11:56 AM,28/Oct/23 2:49 AM,02/Aug/18 6:41 AM,,,,,,,,0,,,,,"During pool load testing with new sdk we found that a lot of catch-up requests were failed with timeout. We need more flexible configuration of timeouts with dedicated values for:

* ledger status
* acks
* read requests
* write requests

Also we need to determine good default values for these timeouts that will good feed low and high load use cases well.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-603,IS-601,IS-833,,,IS-859,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzjkn:",,,,Unset,Unset,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,ozheregelya,sergey.minaev,,,,,,,,,"25/Jul/18 7:07 PM;sergey.minaev;Here is a summary for IS-601 IS-603 and this one.

Changes:
- open pool call now consumes config parameter with follow items
- - timeout  - default timeout for network request
- - extended_timeout - second timeout, used in 2 cases: if for some request libindy recieve ACK from node it will wait additional extended_timeout seconds. And receiving ledger status before catch-up wait extended_timeout from start
- - preordered_nodes - array of nodes aliases which will be used for priority sending requests

Build version with all 3 ticket fixes: 1.5.0 master 646;;;","25/Jul/18 7:11 PM;sergey.minaev;PR with fix https://github.com/hyperledger/indy-sdk/pull/978;;;","26/Jul/18 7:18 AM;ozheregelya;First round of load testing was performed with changed timeout. 
As the intermediate results it can be said that load test works better with new values of timeouts. For instance, in case of libindy 1.5.0~644 several hundreds txns were failed with timeout error (but actually were written), in case of libindy 1.5.0~648 no txns were failed with timeout. Version of libindy was the only difference in these tests. For details see [Load and Performance|https://docs.google.com/spreadsheets/d/1DTjDsLSysFBiKU-9z4-IzunJk4wEy44hE_PGZYxnN_8/edit#gid=1813415708] spreadsheet (yellow section ""_indy-node_ _1.5.67 RC | libindy 1.5.0~610 vs libindy 1.5.0~640+ (after connection changes)_"").;;;","02/Aug/18 6:41 AM;ozheregelya;Environment:
libindy 1.6.1~659
indy-node 1.5.534

Case 1:
Steps to Validate:
1. Setup the pool.
2. Start the load test with custom pool config (-p ""\{\""timeout\"": 50, \""extended_timeout\"": 150}"").
3. Stop more than F nodes.

Actual Results:
Timeout error returns after $(extended_timeout) seconds.

Case 2:
Steps to Validate:
1. Setup the pool.
2. Start the load test with custom pool config (-p ""\{\""timeout\"": 50, \""extended_timeout\"": 150}"").
3. During test running start traffic_shaping script on all nodes.

Actual Results:
Timeout error returns after $(timeout) seconds.

Case 3:
Steps to Validate:
1. Setup the pool.
2. Start the load test with custom pool config (-p ""\{\""preordered_nodes\"": [\""Node1\"", \""Node6\""]}"").
3. Stop the first node from preordered_nodes list.
=> Requests are send to the second node from the list after timeout from the first one.
4. Stop the second node from preordered_nodes list.
=> Requests are send to the random node if all nodes in list were not answered during timeout.

Actual Results:
Preordered_nodes list works.

Additional Information:
Ticket for default values: IS-859.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
CI/CD: Fix failing unit tests on Android Emulator and use it in Android CI,IS-835,32153,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,faisal00813,faisal00813,24/Jul/18 7:30 PM,28/Sep/18 9:36 PM,28/Oct/23 2:49 AM,28/Sep/18 9:36 PM,,,,,,,,0,,,,,"As of now, the unit tests are failing on the emulator/device. The code needed to push the tests on the emulator and execute them is present. But this is disabled in the CI pipeline, due to the failure of tests.",,,,,,,,,,,,,,,,,,,,,IS-960,,,,,,IS-582,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-222,,,No,,,Unset,No,,,"1|hzwv4f:",,,,Unset,Unset,EV 18.19,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,faisal00813,,,,,,,,,,"27/Sep/18 5:18 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1153;;;","28/Sep/18 9:36 PM;Artemkaaas;Updated CI and CD pipelienes to run unit and interaction tests on Android emulator.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for Android armv7 and x86_64,IS-836,32155,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,faisal00813,faisal00813,faisal00813,24/Jul/18 7:40 PM,08/Aug/18 6:31 PM,28/Oct/23 2:49 AM,08/Aug/18 6:31 PM,,,1.6.2,,,,,0,,,,,Support for armv7 and x86_64 architecure.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-222,,,No,,,Unset,No,,,"1|hzwsp3:",,,,Unset,Unset,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),faisal00813,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy-cli not allowing re-connect to pool after exiting.,IS-837,32171,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,zhigunenko.dsr,EvelynEvergreene,EvelynEvergreene,25/Jul/18 5:12 AM,26/Jul/18 9:31 PM,28/Oct/23 2:49 AM,25/Jul/18 8:05 PM,1.5,,1.5,,,,,0,,,,,"indy-cli 1.5.0 not allowing user to reconnect to pool.
{code:java}
// vagrant@indyCli2:~$ rm -r .indy_client/pool/stn
vagrant@indyCli2:~$ indy-cli
indy> pool create stn gen_txn_file=pool_transactions_STN_genesis
Pool config ""stn"" has been created
indy> pool connect stn protocol-version=1
Pool ""stn"" has been connected
pool(stn):indy> pool disconnect
Pool ""stn"" has been disconnected
indy> exit
Goodbye...
vagrant@indyCli2:~$ indy-cli
indy> pool connect stn
Pool ""stn"" are not compatible with Protocol Version ""2"".
indy> pool connect stn protocol-version=1
Pool ""stn"" has not been connected.
indy>
{code}
 ","STN, which is a protocol_version=1 pool, currently",,,,,,,,,,,,,,INDY-1520,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzjpj:",,,,Unset,Unset,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,EvelynEvergreene,gudkov,mgbailey,sergey.minaev,zhigunenko.dsr,,,,,,"25/Jul/18 6:15 AM;EvelynEvergreene;Only affects 1.5.0 to lower version pools, confirmed by vagrant local node pool with 1.5.0.;;;","25/Jul/18 2:15 PM;gudkov;[~EvelynEvergreene] Could you provide “Expected Behaviour”? In your logs i see 100% correct behaviour:

1. You connected with protocol version 1
2. You tryied to connecto with protocol version 2 (default) and got error as pool only supports v1
3. You connected with protocol version 1

What you don’t like here?;;;","25/Jul/18 3:52 PM;Artemkaaas;[~gudkov] you did not notice that the last line:
{code:java}
Pool ""stn"" has NOT been connected. {code}
[~EvelynEvergreene] I reproduced your steps with genesis transactions.
Libindy stable 1.5.0 - did not connect as you.
Libindy master 646 - successfully connected.



 ;;;","25/Jul/18 6:32 PM;gudkov;[~zhigunenko.dsr] We need validation according to current master;;;","25/Jul/18 6:41 PM;sergey.minaev;I've rechecked twice by using https://github.com/hyperledger/indy-sdk/blob/master/cli/cli.dockerfile with stable and master sources (1.5.0 stable and 1.5.0~646 master) and both configuration are working well in described sequence of steps.

{code}
root@ab98ccf1de15:/# indy-cli 
indy> pool create stn gen_txn_file=stn
Pool config ""stn"" has been created
indy> pool connect stn protocol-version=1
Pool ""stn"" has been connected
pool(stn):indy> pool disconnect 
Pool ""stn"" has been disconnected
indy> exit
Goodbye...
root@ab98ccf1de15:/# indy-cli 
indy> pool connect stn
Pool ""stn"" are not compatible with Protocol Version ""2"".
indy> pool connect stn protocol-version=1
Pool ""stn"" has been connected
pool(stn):indy> 
{code}

[~EvelynEvergreene] may be it was local problem with stn network or with your network connection? or some major steps are missed in ticket description. ;;;","25/Jul/18 8:03 PM;zhigunenko.dsr;*Environment:*
indy-node 1.4.62 (4 nodes in separate docker containers)
libindy 1.5.0

*Steps to Validate:*
1) run _indy-cli_
2) _pool create stn gen_txn_file=pool_transactions_genesis_
3) _pool connect stn protocol-version=1_
4) exit CLI and re-run
5) _pool connect stn protocol-version=1_

*Actual results:*
The pool was connected with both the first and the second attempt

[~EvelynEvergreene] please use _RUST_LOG=trace indycli_ if you still have connection problem;;;","26/Jul/18 3:24 AM;mgbailey;I suspect that the problem is in the stable release, but not in the current master.;;;",,,,,,,,,,,,,,,,,,,,,,,
CLI should only keep keys hidden in interactive mode,IS-838,32214,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,kdenhartog,kdenhartog,26/Jul/18 8:09 AM,10/Aug/18 5:13 PM,28/Oct/23 2:49 AM,10/Aug/18 5:13 PM,,,1.6.2,,,,,0,,,,,"Currently when opening the wallet there is an option ""wallet open <wallet name> key=<my key>"" which remains in the cli history log until closed. This option should be removed to prevent shoulder surfing attacks.

The ""wallet open <wallet name> key"" command prevents shoulder surfing attacks and should be the only option.

Additionally, when calling ""wallet open <wallet name> key"" and then the key is entered incorrectly, the incorrect key is echoed back to the user. This should be replaced with a more generic message which doesn't echo back the previously key that was entered incorrectly.

We should also make sure this pattern isn't being used in other parts of the CLI.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-273,,,No,,,Unset,No,,,"1|hzzjhj:",,,,Unset,Unset,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,kdenhartog,sergey.minaev,zhigunenko.dsr,,,,,,,"26/Jul/18 5:34 PM;gudkov;[~kdenhartog] I completely agreed with second part that echoing key is a wrong behavior, but i am thinking that we need to keep ability to provide key as part of command because it is deeply used in automation. I suggest the following:

1. Keep ability to provide secrets in command line only for BATCH mode and remove this ability in INTERACTIVE mode.
2. Avoid echoing of secrets in error messages

Also current behaviour corresponds to initial requirements and i suggest to consider this as a new future in Jira.;;;","26/Jul/18 5:49 PM;sergey.minaev;[~kdenhartog] [~gudkov] I have some doubts about first part: current behavior is something like widely-used practice. If you check a large amount of bash utils the behavior will be exactly same - there are 2 options:
- if you would like to security - you have to specify just parameter key for password
- if you would like to history - you can plaintext password in command line and it will be stored.

and as Slava mentioned plaintext password is helpful feature for batch mod. And my opinion it's not so good idea to make different behavior in batch and interactive;;;","26/Jul/18 11:25 PM;kdenhartog;[~gudkov] [~sergey.minaev] That sounds like a good plan to me. Out of personal preference, I'd like to see INTERACTIVE mode set as default so a user gets the security by default and can enable BATCH mode. I'm not sure hat the tradeoffs to this are though, so I'll defer to your expertise if this is the right way toappto app it.;;;","02/Aug/18 9:20 PM;sergey.minaev;Interactive or batch modes is not something can be switched. There are 2 ways to run CLI
1) interactive. Just run indy-cli executable and got Indy cli to input commands
2) batch. Pass path to script file at run of CLI - indy-cli will consume and run commands from the file and execute commands without user interaction.

For the second one plaintext password is must have for automation tasks.
For the first one, CLI provide both capabilities (plaintext and hidden password). As it common way for CLI utils in general I suggest the following:

1) no changes in batch mode.
2) keep possibility of both variants for interactive,
3) but force users to secure-way: remove any mentions from documentation or help about plaintext password in interactive
4) remove echo of incorrect key

[~kdenhartog] are you OK with this plan?;;;","08/Aug/18 12:03 AM;kdenhartog;Yeah, this looks like a good plan to me.;;;","08/Aug/18 3:15 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1049;;;","09/Aug/18 8:18 PM;sergey.minaev;Documentation already present in master and ready to verification.

Build will be available soon. Please use any version greater then 1.6.1 master 696;;;","10/Aug/18 5:13 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.1~701

*Steps to Validate:*
1) check CLI help
2) check manuals
3) create wallet
4) open wallet
5) export / import wallet
6) delete wallet
7) check direct key input

*Actual results:*
Functionality is alright;;;",,,,,,,,,,,,,,,,,,,,,,
Android CD should reuse binaries from test step in publish step,IS-839,32226,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,zhigunenko.dsr,sergey.minaev,sergey.minaev,26/Jul/18 5:55 PM,03/Aug/18 8:17 PM,28/Oct/23 2:49 AM,03/Aug/18 8:17 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzjgf:",,,,Unset,Unset,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,zhigunenko.dsr,,,,,,,,,,"26/Jul/18 6:30 PM;sergey.minaev;This is high-priority as:
- significantly slow-down CD process and it's critical for current Jenkins
- binaries in published artifacts now may be different against tested ;;;","02/Aug/18 6:56 PM;sergey.minaev;Applied from master 665

Recommendation for QA:
Please just check pipeline steps on Jenkins. From this build publishing step for android should take few seconds;;;","03/Aug/18 8:17 PM;zhigunenko.dsr;*Steps to Validate:*
Open BlueOcean

*Actual results:*
Publishing steps are now added after testing steps;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"get-creds panics when req-attr, req-pred specs cite different cred def ids",IS-840,32239,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sklump,sklump,27/Jul/18 12:04 AM,27/Jul/18 2:30 AM,28/Oct/23 2:49 AM,27/Jul/18 2:30 AM,1.5,1.6.0,1.5,1.6.0,,,,0,anoncreds,prover,,,"Operating on indy-sdk-1.5.0-dev-651, I send it into a rust panic when I call `anoncreds.prover_get_credentials_for_proof_req()` for a proof request on `requested_attributes` specifications on attributes restricted to one cred def id but a `requested_predicates` specifying a minimum value for an attribute from another cred def id.

It worked fine before the indy-sdk series that allowed WQL search on wallet credentials. Offensive proof request follows.

```
\{
    ""name"": ""proof_req"",
    ""version"": ""0.0"",
    ""nonce"": ""1532615113"",
    ""requested_attributes"": \{
        ""16_legalName_uuid"": \{
            ""name"": ""legalName"",
            ""non_revoked"": \{
                ""to"": 1532615103,
                ""from"": 1532615103
            },
            ""restrictions"": [
                \{
                    ""cred_def_id"": ""WgWxqztrNooG92RXvxSTWv:3:CL:16:0""
                }
            ]
        }
    },
    ""requested_predicates"": \{
        ""15_jurisdictionId_uuid"": \{
            ""name"": ""jurisdictionId"",
            ""restrictions"": [
                \{
                    ""cred_def_id"": ""WgWxqztrNooG92RXvxSTWv:3:CL:15:0""
                }
            ],
            ""non_revoked"": \{
                ""to"": 1532615103,
                ""from"": 1532615103
            },
            ""p_value"": 1,
            ""p_type"": "">=""
        }
    }
}
```

With RUST_LOG=debug, RUST_BACKTRACE=full, output follows:
```
DEBUG|indy::commands::anoncreds::prover|   src/commands/anoncreds/prover.rs:463 | get_credentials_for_proof_req >>> wallet_handle: 69, proof_req_json: ""\{\""requested_attributes\"": \{\""16_legalName_uuid\"": \{\""non_revoked\"": \{\""to\"": 1532615426, \""from\"": 1532615426}, \""restrictions\"": [

\{\""cred_def_id\"": \""WgWxqztrNooG92RXvxSTWv:3:CL:16:0\""}

], \""name\"": \""legalName\""}}, \""nonce\"": \""1532615441\"", \""version\"": \""0.0\"", \""name\"": \""proof_req\"", \""requested_predicates\"": \{\""15_jurisdictionId_uuid\"": \{\""p_type\"": \"">=\"", \""non_revoked\"": \{\""to\"": 1532615426, \""from\"": 1532615426}, \""restrictions\"": [

\{\""cred_def_id\"": \""WgWxqztrNooG92RXvxSTWv:3:CL:15:0\""}

], \""name\"": \""jurisdictionId\"", \""p_value\"": 1}}}""
DEBUG|indy::commands::anoncreds::prover|   src/commands/anoncreds/prover.rs:779 | _query_requested_credentials >>> wallet_handle: 69, query_json: ""\{\""attr::legalname::marker\"":\""1\"",\""$or\"":[

\{\""cred_def_id\"":\""WgWxqztrNooG92RXvxSTWv:3:CL:16:0\""}

]}"", predicate_info: None
DEBUG|indy::commands::anoncreds::prover|   src/commands/anoncreds/prover.rs:787 | _query_requested_credentials <<< credentials: [RequestedCredential 
\{ cred_info: CredentialInfo 
\{ referent: ""af6b0157-c4bc-49d7-8af0-a0cc66323993"", attrs: 

\{""legalName"": ""Tart City"", ""sriRegDate"": ""2018-07-26"", ""jurisdictionId"": ""1""}

, schema_id: ""WgWxqztrNooG92RXvxSTWv:2:sri:1.0"", cred_def_id: ""WgWxqztrNooG92RXvxSTWv:3:CL:16:0"", rev_reg_id: Some(""WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:16:0:CL_ACCUM:0""), cred_rev_id: Some(""2"") }, interval: Some(NonRevocedInterval 

\{ from: Some(1532615426), to: Some(1532615426) }

) }]
DEBUG|indy::commands::anoncreds::prover|   src/commands/anoncreds/prover.rs:779 | _query_requested_credentials >>> wallet_handle: 69, query_json: ""\{\""attr::jurisdictionid::marker\"":\""1\"",\""$or\"":[

\{\""cred_def_id\"":\""WgWxqztrNooG92RXvxSTWv:3:CL:15:0\""}

]}"", predicate_info: Some(PredicateInfo \{ name: ""jurisdictionId"", p_type: GE, p_value: 1, restrictions: Some(Array([Object(

\{""cred_def_id"": String(""WgWxqztrNooG92RXvxSTWv:3:CL:15:0"")}

)])), non_revoked: Some(NonRevocedInterval \{ from: Some(1532615426), to: Some(1532615426) }) })
ERROR|panic                         |/home/sklump/.cargo/registry/src/github.com-1ecc6299db9ec823/log-panics-2.0.0/src/lib.rs:67  | thread 'unnamed' panicked at 'no entry found for key': libcore/option.rs:914
```

In particular, operation gets to this line and crashes on it: [https://github.com/hyperledger/indy-sdk/blob/2f28ac36f807a2cff9b655c58caaf457db6c944d/libindy/src/commands/anoncreds/prover.rs#L785]","ubuntu 16 VM
dockerized indy test pool, TEST_POOL_IP=10.0.0.2",,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzjqf:",,,,Unset,Unset,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sklump,,,,,,,,,,,"27/Jul/18 2:30 AM;sklump;PR#992 fixes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Libindy should check restrictions on requested predicates during validation of proof,IS-841,32249,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,ryanmarsh,Dominic,Dominic,27/Jul/18 5:00 AM,30/Oct/19 3:29 AM,28/Oct/23 2:49 AM,30/May/19 7:31 PM,1.5,,1.9.0,,,,,0,EV-CS,TShirt_L,,,"Restrictions set on requested_predicates during proof validation have no effect. I have tested the following restrictions, and neither worked:
 * issuer_did
 * cred_def_id

*Tested with the python 3.6 wrapper*

Based on [this comment in the source code|https://github.com/hyperledger/indy-sdk/blob/2123d8634692edea58f5cf589609762bea18db64/libindy/src/api/anoncreds.rs#L1118], restrictions on predicates should work.

Example proof request:
{code:javascript}
{
    ""nonce"": ""123432421212"",
    ""name"": ""proof_req_1"",
    ""version"": ""0.1"",
    ""requested_attributes"": {
        ""attr1_referent"": {""name"": ""name""}
    },
    ""requested_predicates"": {
        ""predicate1_referent"": {
            ""name"": ""age"", 
            ""p_type"": "">="", 
            ""p_value"": 18, 
            ""restrictions"": [{""issuer_did"": ""a""}]
        }
    }
}
{code}
Despite there being no issuer with a did of ""a"", the prover will use an attribute that has been signed by another DID to fulfill the predicate. The verifier accepts this proof even though it shouldn't.

_I've attached a sample Python3.6 file that runs through an example of restrictions failing. Assuming you have the python wrapper installed, you should be able to just run it by typing python3.6 <filename.py>_","Ubuntu 16.04
Python 3.6.6
Pip 10.0.1
Libindy 1.5.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/18 4:57 AM;Dominic;negotiate_proof.py;https://jira.hyperledger.org/secure/attachment/15388/negotiate_proof.py",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|i002yt:z",,,,Unset,Unset,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Dominic,esplinr,mgbailey,ryanmarsh,sergey.minaev,,,,,,,"31/Jul/18 7:46 PM;sergey.minaev;Right now libindy checks this restrictions at  `prover_get_credentials_for_proof_req` call on Prover side. And in the attached sample there is no credential reference for the requested predicate.
I can confirm, that anoncreds.verifier_verify_proof doesn't check restriction here. If Prover is cheating (as shown in the sample - provide proof signed by another DID) and verifier just call libindy without additional application-level checks, false-positive result will be returned.
;;;","20/Nov/18 12:03 AM;sergey.minaev;There is one more missed check which is possible to implement on libindy side in theory: in case of non-revoked proof libindy can check matches of allowed interval on verifier side.;;;","06/Mar/19 11:40 PM;esplinr;The Indy community is working on a different approach to defining how proofs are presenting. This issue will be addressed as part of that work. We hope to see results from that effort in the second half of 2019.;;;","22/Mar/19 6:02 AM;esplinr;Evernym's application development team has picked up this issue.;;;","18/Apr/19 7:20 AM;ryanmarsh;https://github.com/hyperledger/indy-sdk/pull/1587;;;","30/Oct/19 2:28 AM;mgbailey;[~esplinr] This is VERY core functionality that has been broken forever. With this ticket, I kept thinking we would see it working any time now... but it has never been actually delivered. [~ryanmarsh] tells me that it seems to have been lost in a refactor. Please reopen and prioritize this for delivery.

 ;;;","30/Oct/19 3:17 AM;esplinr;The code submitted by [~ryanmarsh] as part of PR 1587 is still in Master.

If there is a bug, then we need to understand how to reproduce it.

[~mgbailey] If you see this is broken in a current release, then please open a new ticket with updated instructions for reproducing the problem.;;;","30/Oct/19 3:29 AM;ryanmarsh;[~esplinr] [~mgbailey] Last time I checked, verification was not working. It is as simple as requesting a proof from credential A and providing credential B. If the field name is the same, it will succeed (even though it should fail). [~mgbailey] is able to reproduce this very easily. I have not personally tested this in a while.

 

{{}};;;",,,,,,,,,,,,,,,,,,,,,,
indy-cli must operate with pool config,IS-842,32317,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,ozheregelya,zhigunenko.dsr,zhigunenko.dsr,27/Jul/18 9:29 PM,03/Aug/18 11:56 AM,28/Oct/23 2:49 AM,03/Aug/18 3:49 AM,,,,,,,,0,,,,,Pool config is helpful tool to reproduce complex bugs. So we need to have way to use pool config when we use CLI,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzjl3:",,,,Unset,Unset,EV 18.15,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ozheregelya,sergey.minaev,zhigunenko.dsr,,,,,,,,"01/Aug/18 2:52 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1015;;;","01/Aug/18 10:49 PM;sergey.minaev;Build version 1.6.1 master 665;;;","03/Aug/18 3:49 AM;ozheregelya;Environment:
libindy 1.6.1~665
indy-node 1.5.534

Case 1:
Steps to Validate:
1. Setup the pool.
2. Connect to the pool with custom pool config (timeout=50 extended-timeout=150).
3. Stop more than F nodes.
4. Send transaction.

Actual Results:
Timeout error returns after $(extended_timeout) seconds. (The same timeout for connection to unavailable pool.)

Case 2:
Steps to Validate:
1. Setup the pool.
2. Connect to the pool with custom pool config (timeout=50 extended-timeout=150).
3. Start traffic_shaping script on all nodes.
4. Send transaction.

Actual Results:
Timeout error returns after $(timeout) seconds.

Case 3:
Steps to Validate:
1. Setup the pool.
2. Connect to the pool with custom pool config (preordered-nodes=Node1,Node6).
3. Stop the first node from preordered_nodes list, send txn.
=> Requests are send to the second node from the list after timeout from the first one.
4. Stop the second node from preordered_nodes list, send txn.
=> Requests are send to the random node if all nodes in list were not answered during timeout.

Actual Results:
Preordered_nodes list works.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
get-validator-info for a single node or list of nodes (not all nodes),IS-843,32323,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,ckochenower,esplinr,27/Jul/18 9:51 PM,10/Aug/18 4:49 PM,28/Oct/23 2:49 AM,10/Aug/18 4:49 PM,,,1.6.2,,,,,0,,,,,"Indy CLI provides a way to get validator info using `ledger get-validator-info`. The output is a mix of text and JSON output. The following three changes are recommended to provide a more programatic use of the output:

2. An optional parameter to retrieve a single node or a list of node validator info.

`ledger get-validator-info Node2` would yield a singleton result.

{code}
{...}
{code}

Note that the node name/alias is not a key in the dict. Just Node2's validator info is returned. The assumption here is that the caller is explicitly asking for just Node2's validator info in the result.

`ledger get-validator-info Node2 Node8` would yield:

{code}
{
  ""Node2"": {...},
  ""Node8"": {...}
}
{code}
",,,,,,,,,,,,,,,,,,,,IS-799,,,,,,,IS-588,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww1j:",,,,,,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,Artemkaaas,ckochenower,esplinr,gudkov,sergey.minaev,zhigunenko.dsr,,,,,,"08/Aug/18 9:24 PM;sergey.minaev;Will be available in nearest build 1.6.1 master 690 (or newest) ;;;","08/Aug/18 9:25 PM;Artemkaaas;PR: https://github.com/hyperledger/indy-sdk/pull/1032;;;","09/Aug/18 5:49 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.1~691

*Steps to reproduce:*
Type alias for non existent node

*Actual results:*
{code}
ERROR|indy::errors::indy            |                 src/errors/indy.rs:73  | Casting error to ErrorCode: Invalid structure: Unknown node present in list to send [""Node5""], known nodes are [""Node3"", ""Node4"", ""Node1"", ""Node2""]
TRACE|indy::api::ledger             |                  src/api/ledger.rs:174 | indy_submit_action: request_result_json: """"
{code}
*Invalid format of command params. Please check format of posted JSONs, Keys, DIDs and etc...*

We need separate error message for unknown node name

*Additional information:*
* ""Node1"": Timeout, (timeout without quotes) is not valid JSON structure. ""Timeout"" will be better;;;","09/Aug/18 6:36 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1058;;;","09/Aug/18 11:43 PM;Artemkaaas;Build version: master-701;;;","10/Aug/18 4:49 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.1~701

*Actual results:*
- JSON has been fixed
- Error message has been added;;;",,,,,,,,,,,,,,,,,,,,,,,,
get-validator-info timeout,IS-844,32324,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,ckochenower,esplinr,27/Jul/18 9:51 PM,09/Aug/18 5:50 PM,28/Oct/23 2:49 AM,09/Aug/18 5:50 PM,,,1.6.2,,,,,0,,,,,"Indy CLI provides a way to get validator info using `ledger get-validator-info`. The output is a mix of text and JSON output. The following change is recommended to provide a more programatic use of the output:

An optional parameter to override the default timeout ([""about 100 seconds""|https://jira.hyperledger.org/browse/IS-588?focusedCommentId=47083&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-47083]) when a node does not respond with validator info. As would be the case when a node is offline, unreachable, etc.

`ledger get-validator-info node-response-timeout=10` would yield a response excluding validator-info from nodes that do not respond within 10 seconds.",,,,,,,,,,,,,,,,,,,,IS-799,,,,,,,IS-588,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzww1b:",,,,,,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,ckochenower,esplinr,gudkov,sergey.minaev,zhigunenko.dsr,,,,,,,"27/Jul/18 9:59 PM;gudkov;[~ckochenower] Indy SDK supports timeout per opened pool, but not per request. Will it work for you? It will work the way:

```
cli>pool connect config={timeout: 10, extended_timeout:10}
```

and all requests will have 10 sec timeout. We need to expose these timeouts in cli

;;;","08/Aug/18 9:24 PM;sergey.minaev;Will be available in nearest build 1.6.1 master 690 (or newest) ;;;","08/Aug/18 9:26 PM;sergey.minaev;PR: https://github.com/hyperledger/indy-sdk/pull/1032;;;","09/Aug/18 5:50 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.1~691

*Actual results:*
Custom timeout works, help has been updated

*Additional information:*
timeout break JSON validation. It will be fixed in scope of IS-843;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Error generating proof is observed when 30-40 attributes are fulfilled and sent from connect.me,IS-845,32389,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,NagaDurga,viswa0269,viswa0269,30/Jul/18 3:35 PM,28/Sep/18 9:23 PM,28/Oct/23 2:49 AM,28/Sep/18 9:23 PM,,,,,,,,0,,,,,"On receiving the proof request which contains around 30-40 attributes (autofilled + self attested) and on fulfilling and sending the attributes, the time taken to see the success prompt in connect.me is around 3 mins and more. After that, an error ""Error generating proof, please try again"" is observed.

Recording: https://drive.google.com/open?id=1TZyI6neRIUWxV-fgsVOxMWHdn5lNY70M",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-887,,,,,,"31/Jul/18 12:15 AM;viswa0269;IMG_0200.PNG;https://jira.hyperledger.org/secure/attachment/15423/IMG_0200.PNG","20/Sep/18 5:57 PM;gudkov;Sub-Tasks0.url;https://jira.hyperledger.org/secure/attachment/15841/Sub-Tasks0.url","13/Aug/18 7:22 PM;NagaDurga;proof generating error.rtf;https://jira.hyperledger.org/secure/attachment/15545/proof+generating+error.rtf",,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv7b:",,,,Unset,Unset,EV 18.19,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,avkrishnan,esplinr,gudkov,NagaDurga,sergey.minaev,viswa0269,,,,,"30/Jul/18 9:29 PM;Artemkaaas;We wrote 2 tests in Libindy  - [https://github.com/Artemkaaas/indy-sdk/blob/bugfix/big-proof/libindy/tests/anoncreds.rs#L5819]
 * Primary Proof. One credential. Proof request contains 3 self-attested attributes, 37 revealed attributes from this credentials
Results:

{code:java}
Time prover_get_credentials_for_proof_req Duration { secs: 0, nanos: 28462881 }
Time prover_create_proof Duration { secs: 0, nanos: 29663167 }
Time verifier_verify_proof Duration { secs: 0, nanos: 25492160 }{code}
 * Primary Proof.  Five same credentials. Proof request contains 3 self-attested attributes, 37 revealed attributes from 5 different credentials
Results:

{code:java}
Time prover_get_credentials_for_proof_req Duration { secs: 0, nanos: 113216821 }
Time prover_create_proof Duration { secs: 0, nanos: 373353170 }
Time verifier_verify_proof Duration { secs: 0, nanos: 333423834 }{code}
If you want we will write a test in Libindy xCode wrapper.  But it's unlikely will be slower more than 1000 times.
You can provide a more detailed description than a video with the hung screen. We will write the same test.;;;","30/Jul/18 9:50 PM;viswa0269;I had created a proof request with 10 self attested attributes and 30 autofilled attributes. In this 30 autofilled attributes, the attribute values were stored from 5-6 different schemas that were created.Moreover while sending the proof request, I had selected attribute values by swiping towards left or right in the proof request UI that was received in connect.me.;;;","30/Jul/18 10:45 PM;Artemkaaas;Please share connect.me and Libindy logs. (use RUST_LOG=trace)
And on the video we see only 5 attributes. Why do you speak about 40?;;;","31/Jul/18 12:15 AM;viswa0269;Yeah the error was observed with just 5 attributes in the video. But I was able to observe the same with 40 as well. Attaching the snapshot for the same. we are unable to guess the pattern as to when the error might be observed.;;;","31/Jul/18 1:45 AM;viswa0269;Are you using local docker instance or a dev pool running? For this issue, create different schema and different claim def with same attributes and then choose attributes from different credentials. Similarly create different schema and different claim def and then pick and choose attributes from different credentials.;;;","31/Jul/18 5:08 AM;sergey.minaev;{quote}Are you using local docker instance or a dev pool running?{quote}
for tests we are using local docker instance of nodes pool;;;","31/Jul/18 5:13 AM;sergey.minaev;[~viswa0269] please specify steps to reproduce in minimal scenario. Is 2 schemas, 2 cred def and 2 credential (totally) enough? Is libindy 1.6.1 used here? Which version of VCX is used?;;;","31/Jul/18 5:16 PM;viswa0269;[~sergey.minaev] App is using libindy 1.6.1 and vcx version 0.1.2097319+338ad01. Verity UI uses libindy 1.5.0~619 and vcx version 0.1.17053972-DF31E48.

 It would be better to have 5 schemas/cred def/credentials from different issuers having same attributes. Proof request template can contain these 5 autofilled attributes along with some self attested attributes.

 ;;;","31/Jul/18 7:11 PM;Artemkaaas;I wrote the [test according to your scenarion|https://github.com/Artemkaaas/indy-sdk/blob/bugfix/big-proof/libindy/tests/anoncreds.rs#L6140]:
5 different schemas, 5 different credential definitions, 5 different credentials that contain the same field. a proof request contains  12 requested attributes self-attested and autofilled.
It works.
Here are the time results:

{code:java}
Time prover_get_credentials_for_proof_req Duration { secs: 0, nanos: 5476832 }
Time prover_create_proof Duration { secs: 0, nanos: 93479123 }
Time verifier_verify_proof Duration { secs: 0, nanos: 78838641 }
{code}


;;;","31/Jul/18 7:16 PM;Artemkaaas;There are following  ways to solve your problem:
* try to reproduce full scenario from scratch. 
* try to reproduce scenario from scratch on devices with the same Libindy versions.  Libindy 1.6.1 is preferable
* attach Libindy logs;;;","31/Jul/18 7:24 PM;sergey.minaev;[~viswa0269] current description isn't enough to determine a problem reason. It may be some issue in code of application, wrapper, VCX, libindy. Or may be in network communication. I suggest to follow Artem's comment above. At least start from scratch and attach libindy logs with *trace* level. May be it allow us suggest something before new Verity UI will be available with 1.6.1 libindy;;;","13/Aug/18 7:23 PM;NagaDurga;please review  [^proof generating error.rtf] . ;;;","14/Aug/18 10:14 PM;sergey.minaev;[~DouglasWightman] there is error hiding in VCX, please fix it: https://github.com/evernym/sdk/blob/master/vcx/libvcx/src/disclosed_proof.rs#L223

[~NagaDurga] btw bug in VCX is not a root of the problem. It just hide error on previous step. VCX try to fetch credential definitions from the ledger with id {{V4SGRU86Z58d6TV7PBUe6f:3:CL:180:tag1}} and ledger response with not found. Is this credential definition present in ledger? How this credential definition is posted to the ledger?;;;","17/Aug/18 6:20 PM;NagaDurga;nice catch [~sergey.minaev]. Thank u;;;","21/Aug/18 2:49 PM;viswa0269;[~DouglasWightman] Can you take a look at this ?;;;","21/Aug/18 4:55 PM;NagaDurga;[~sergey.minaev] I can confirm that credential definition was created and written by verity-ui to the ledger.  ;;;","22/Aug/18 4:59 PM;avkrishnan;https://evernym.atlassian.net/browse/EN-770 opened to track the issue in SDK.;;;","27/Aug/18 4:50 PM;gudkov;[~avkrishnan] [~NagaDurga] Do you have any updates after fixes in vcx?;;;","29/Aug/18 2:51 AM;NagaDurga;When proof generated contains credential attributes from multiple credential.(Proof has 10 attribute and credential from 4 different credential). Error is being reproduced in IOS and android release build. However when tried to run in trace/debug mode error is not being reproduced. Working on to get better logs;;;","29/Aug/18 9:22 PM;gudkov;The problem can be related to sending of GET request to ledger immediately after write. Node can return outdated state in this case application should re-run GET request.

[~DouglasWightman] Could you re-check this?;;;","29/Aug/18 10:01 PM;gudkov;According to initial logs one node in pool is outdated for 2 hours. It can be the cause of getting outdated result.;;;","31/Aug/18 10:18 PM;esplinr;We can't reproduce this issue. We suspect it is related to stale results being returned (IS-887). We'll return this to the backlog.;;;","06/Sep/18 10:15 PM;esplinr;We believe that this is best addressed in the credential exchange library. After that work is done, we will re-evaluate if further changes are required in libindy.;;;","17/Sep/18 9:22 PM;NagaDurga;Hi, [~esplinr]. Can you suggest next steps for this. Should there be a new ticket on  credential exchange library, that will handle the issue.;;;","17/Sep/18 9:45 PM;gudkov;[~NagaDurga] [~krw910] I see that referenced ticket https://evernym.atlassian.net/browse/EN-770 as resolved. 

Do you still experience any problem here or we can close this ticket?;;;","17/Sep/18 9:48 PM;NagaDurga;yes just now QA [~viswa0269] reproduced the error. ;;;","18/Sep/18 12:37 AM;gudkov;[~NagaDurga] If so why EN-770 was closed? ;;;","18/Sep/18 12:58 AM;NagaDurga;new one was opened https://evernym.atlassian.net/browse/EN-824;;;","20/Sep/18 5:59 PM;gudkov;> yes just now QA viswarajan Lakshminarayanan reproduced the error. 

[~NagaDurga] Do you have logs from this case? We can't move with old logs as they mask the problem due error in vcx.;;;","28/Sep/18 9:22 PM;gudkov; [~esplinr] I suggest to close this partucaular issue as we don't plan to implement workaround on our side. Instead of this we will provide instruments for freshness control that ConnectMe and VCX teams should consume, but it is a feature story and isn't the direct bug in Indy SDK.

[~NagaDurga] On your side you already have issues to control the progress.;;;"
OS permission error observed on creating pool config,IS-846,32392,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,viswa0269,viswa0269,viswa0269,30/Jul/18 4:28 PM,29/Aug/18 8:29 PM,28/Oct/23 2:49 AM,29/Aug/18 8:29 PM,,,1.6.4,,,,,0,,,,,"During the first install, while calling VCX_INIT with the pool key and wallet key that is stored in the phone, the following error attached in the screenshot is observed. After calling VCX_INIT thrice, then it gets succeeded. The same is not being observed with other devices.

Permission to write and read file is allowed by user. On Java side we are able to create a file before calling this API which inturn calls create pool config API. We verified by going in device file explorer and can see directory and files created by Java code. Also, wallet creation works fine which happens before pool config creation and we can see wallet directory being created in Android storage. However, it fails to create only pool config.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jul/18 5:08 PM;viswa0269;android_connectme_log.rtf;https://jira.hyperledger.org/secure/attachment/15426/android_connectme_log.rtf","31/Jul/18 9:58 PM;NagaDurga;naga_android_rust_log.rtf;https://jira.hyperledger.org/secure/attachment/15428/naga_android_rust_log.rtf","30/Jul/18 4:27 PM;viswa0269;pool_error.png;https://jira.hyperledger.org/secure/attachment/15416/pool_error.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv5z:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,NagaDurga,sergey.minaev,viswa0269,,,,,,,,"30/Jul/18 7:51 PM;sergey.minaev;[~viswa0269] please provide correct description: at least specify versions, environment, clarify phrase ""The same is not being observed with other devices."" ...;;;","30/Jul/18 7:59 PM;sergey.minaev;For current description I can say only one thing: it's expected behavior that libindy transfer OS error about non-sufficient permission. If we are talking about latest code-base, please make sure that libindy has write access to {{EXTERNAL_STORAGE}} from environment variables and read access to genesis transaction file (path to it should be specified in {{config}} parameter of {{indy_create_pool_ledger_config}} call);;;","30/Jul/18 8:17 PM;viswa0269;[~sergey.minaev] I mean the issue was observed in a specific device (MOTO E4) but not with other devices being tested.  We are using libindy version 1.6.;;;","30/Jul/18 8:31 PM;sergey.minaev;Ok,  1.6.x libindy attempt to 
- read genesis transactions from path specified in API call config
- try to create directories in {{EXTERNAL_STORAGE}} 
- write some files into sub-directory from step above

If it can not access (read or write), it transfer OS error to application level as we can see in attached log screenshot. Specific place can be determined by setting {{RUST_LOG}} environment variable to {{trace}} in run-time. I've asked Khagesh Sharma to try to do it;;;","31/Jul/18 7:13 PM;sergey.minaev; [^android_connectme_log.rtf] (at the moment of this comment) contains logs of IndySDK default, error (and higher level). To determine a reason of failure please attach trace-level logs;;;","31/Jul/18 9:59 PM;NagaDurga; [^naga_android_rust_log.rtf]  

has logs at trace level. Please check;;;","01/Aug/18 1:41 AM;sergey.minaev;Due to limitation of android logger in Rust it is still not enough. I've performed some changes for debug purposes. Please find branch {{debug/android_create_pool}} in my repo, compile it and run on problem device with trace level of logs. 
https://github.com/jovfer/indy-sdk/tree/debug/android_create_pool;;;","08/Aug/18 10:02 PM;sergey.minaev;[~NagaDurga] [~viswa0269] do you have any updates here? If I understand [~faisal00813] correctly, he has provided special build for this issue logging;;;","15/Aug/18 8:38 PM;gudkov;[~NagaDurga] [~faisal00813] Any news on this?;;;","16/Aug/18 1:54 PM;NagaDurga;will provide new logs on 17 Aug. Sorry for the delay;;;","22/Aug/18 5:00 PM;gudkov;[~NagaDurga] Any news on this?;;;","22/Aug/18 5:12 PM;NagaDurga;will provide updated logs by eod today;;;","23/Aug/18 3:07 AM;NagaDurga;tried reproducing the issue with latest vcx:1.0.0-21-08-2018T10-28@aar . was not able to reproduce the error. Will try tomorrow again and update further;;;","27/Aug/18 10:37 PM;sergey.minaev;I'm able to reproduce only on x86_64 emulator API26 android. And it's seems for me (not a mobile developer) as issue on emulator.

There is copy file operation in libindy create pool config call and java analog of operation is listed below. In my env the java test and libindy fail/succ together. E.g. 
- both *failed* on x86_64 emulator 
- both *successful* on my personal android phone API26 and x86 emulator API 26

{code:java}
    @Test
    public void testFileCopy() throws IOException {
        Log.d(TAG, ""testFileCopy: try manual copy fs operation"");

        try {
            Files.createFile(Paths.get(""/storage/emulated/0/genesis.txn""));
        } catch (IOException ignore) {
        }
        Files.copy(Paths.get(""/storage/emulated/0/genesis.txn""), Paths.get(""/storage/emulated/0/genesisMC.txn""),
                StandardCopyOption.COPY_ATTRIBUTES,
                StandardCopyOption.REPLACE_EXISTING);

        Log.d(TAG, ""testFileCopy: successful manual copy fs operation"");
    }
{code}
;;;","27/Aug/18 10:39 PM;sergey.minaev;[~NagaDurga] please execute the java test analog on your problematic HW devices (not emulators) and let me know is it reproduced or not

FYI [~esplinr] [~avkrishnan];;;","27/Aug/18 10:46 PM;gudkov;[~sergey.minaev] Can we avoid calling of copy syscall and copy content of genesis file manually? ;;;","27/Aug/18 10:52 PM;sergey.minaev;[~gudkov] we can consider this workaround if the issue will be confirmed on real device.;;;","27/Aug/18 11:03 PM;gudkov;[~sergey.minaev] [~danielhardman] 

As i long term solution i suggest to avoid file management on libindy side at all. We can introduce new approach for pool connection that will not touch file system directly. It can be new call:

```
indy_pool_connect(genesis_txns_json, pool_leger_cache_json) -> (pool_handle, updated_pool_leger_cache_json)
```

In this case management of files will be responsibly of an application.

;;;","28/Aug/18 12:20 AM;sergey.minaev;[~gudkov] I think it's bad idea to store large cache in JSON serialized string and force application to handle it;;;","28/Aug/18 7:44 PM;sergey.minaev;PR with workaround about permission copy in libindy https://github.com/hyperledger/indy-sdk/pull/1097;;;","29/Aug/18 8:29 PM;gudkov;Provided workaround fixed the problem on x86_64 emulator for one reproducible case that we know.  I suggest to move it to done. If QA will find another cases i suggest to create new bug.;;;",,,,,,,,,
proof request attribute neither any error or nor get autofilled if there is a case mismatch,IS-847,32393,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Invalid,viswa0269,viswa0269,viswa0269,30/Jul/18 5:27 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"A credential was sent with attribute name as ""ID"" and stored in the app wallet. Now a proof request template was created with attribute name as ""id"" i.e in lower case. The issue is that in connect.me, the attribute does not throw any error or gets autofilled. Rather that proof request becomes invalid or not usable since the SEND button in proof request UI remains disabled.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv1b:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,viswa0269,,,,,,,,,"30/Jul/18 9:55 PM;Artemkaaas;It looks like the problem is not in Libindy. 
We have several tests to check getting credentials for proof request with different cases and spaces:

[https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/anoncreds.rs#L683]
 [https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/anoncreds.rs#L712]
[https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/anoncreds.rs#L1720|https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/anoncreds.rs#L712]
[https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/anoncreds.rs#L2000]
 [https://github.com/hyperledger/indy-sdk/blob/master/libindy/tests/anoncreds.rs#L4405];;;","31/Jul/18 5:16 AM;sergey.minaev;[~viswa0269] please check scenarios mentioned by Artem above. If you have another one please specify explicit steps to reproduce and we will add appropriate test to check libindy.
Also please confirm: is 1.6.1 libindy used? What about VCX version?;;;","31/Jul/18 5:26 PM;viswa0269;[~sergey.minaev] The issue has been created in connect.me. Hence I will mark this as invalid.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate BLS PoP with Indy-Node,IS-848,32402,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,30/Jul/18 6:40 PM,27/Aug/18 5:39 PM,28/Oct/23 2:49 AM,27/Aug/18 5:39 PM,,,1.6.3,,,,,0,,,,,,,,,,,,,,,,INDY-1389,,,,,,,,,,,,,,,,,,,,,IS-750,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzww27:",,,,Unset,Unset,EV 18.16,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,sergey.minaev,,,,,,,,,"24/Aug/18 5:09 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1089;;;","27/Aug/18 4:41 PM;Artemkaaas;Changes: updated version libindy pool to work with the latest version of Indy-Node
Build version: master-720;;;","27/Aug/18 5:39 PM;gudkov;Tests were uncommented, pipeline is green. Can consider this as done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Contribute LibVCX,IS-849,32420,,Epic,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,DouglasWightman,esplinr,esplinr,31/Jul/18 6:03 AM,08/Oct/19 11:06 PM,28/Oct/23 2:49 AM,18/Sep/19 11:03 PM,,,,,libvcx,,,0,,,,,"*Story*
As a developer of solutions on an Indy network, I want a high level API for exchanging credentials so that it is easier to build applications that consume those credentials.

*Acceptance Criteria*
* A HIPE exists explaining libvcx and how it fits into the project
* The Evernym Credential Exchange Library (libvcx) here:
  http://github.com/evernym/sdk
  Should be part of the Indy SDK
* It will live within the Indy SDK GitHub repository:
  http://github.com/hyperledger/indy-sdk
* It will be built as a separate artifact: libvcx
** Use separate build pipelines for libindy and libvcx, in order to avoid blocking both teams and provide fast turn-around for developer builds
** In the future we will evaluate this approach and consider combine into a single artifact
* It will be installed as part of Indy SDK alongside libindy
* Public API documentation exists
* An interim plan for keeping the Hyperledger VCX and internal Evernym SDK development compatible until Evernym teams can switch to the public repository.
* A plan is provided to the Evernym development teams on how they can begin using the indy-sdk repository.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-3,,Contribute Evernym LibVCX,Done,No,,,Unset,No,,,"1|hzzkw7:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,"18/Sep/19 11:03 PM;esplinr;Additional work on LibVCX will be tracked as separate epics.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Publish existing libvcx documentation,IS-850,32421,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MattRaffel,esplinr,esplinr,31/Jul/18 6:08 AM,07/Dec/18 9:04 AM,28/Oct/23 2:49 AM,28/Nov/18 1:48 AM,,,1.7.0,,libvcx,,,0,,,,,"Evernym has internal documentation for libvcx API available here:
http://doc.corp.evernym.com/ 

We need to make this documentation available to the Indy community.

*Acceptance Criteria*
* Documentation exists for the current libvcx API alongside other Indy documentation
* The documentation is available in a text-based format (preferably MarkDown) consumable with other Indy documentation

Not included:
* This task is for existing Evernym documentation. Documentation improvements will be tracked as separate issues.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwvnz:",,,,Unset,Unset,EV 18.24,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,gudkov,,,,,,,,,,"06/Aug/18 11:36 PM;esplinr;Most of that documentation is generated from the API:
{code}
cd evernym/sdk/vcx/libvcx
cargo doc --no-deps
ls target/doc/vcx
{code}

The other documentation is too closely tied to Evernym's products to be useful for the community. We will need to create new documentation.;;;","06/Aug/18 11:42 PM;esplinr;There are additional examples and code tutorials that exist, and are in the process of being updated. We still need to review those documents and contribute the useful ones back to the Indy community after removing references to Evernym's commercial products.;;;","03/Sep/18 4:42 PM;gudkov;[~DouglasWightman] [~esplinr] Do we have any progress with ""additional examples and code tutorials"" update for the moment?;;;","28/Nov/18 1:47 AM;esplinr;Here is our updated tutorial without any dependencies on Evernym products:

https://github.com/hyperledger/indy-sdk/blob/master/vcx/docs/getting-started/getting-started.md;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Dockerized LibVCX build environment,IS-851,32422,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dkulic,esplinr,esplinr,31/Jul/18 6:19 AM,14/Sep/18 8:13 PM,28/Oct/23 2:49 AM,14/Sep/18 8:13 PM,,,2.0.0,,libvcx,,,0,,,,,"*Story*
As a developer building solutions on an Indy network, I want to be able to easily consume LibVCX in my development environment in advance of a LibVCX build pipeline being created.

*Acceptance Criteria*
* A contained environment exists where libVCX can be reproducibly built.

*Notes*
* BC.gov would prefer a dockerized environment published to Docker Hub.
* This is intended to be an interim deliverable. If a full CI / CD pipline can be quickly provided, that would be preferable to delivering this story.
* We should verify whether the current Evernym build Docker is appropriate for use by the Hyperledger community.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwv4n:",,,,Unset,Unset,EV 18.17,EV 18.18,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,esplinr,gudkov,,,,,,,,,"03/Sep/18 10:54 PM;dkulic;https://github.com/hyperledger/indy-sdk/pull/1113;;;","14/Sep/18 8:13 PM;gudkov;Docker file and instruction provided. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI/CD: Provide LibVCX Ubuntu 16.4 CI/CD pipeline branches,IS-852,32423,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,31/Jul/18 6:21 AM,15/Sep/18 1:22 AM,28/Oct/23 2:49 AM,15/Sep/18 1:22 AM,,,,,libvcx,,,0,,,,,"*Description*
LibVCX Ubuntu 16.4 tests and builds should be part of Indy SDK CI/CD pipeline.

*Acceptance Criteria*
* Indy SDK CI/CD pipelines execute tests for libvcx
* Indy SDK CD pipline produces libvcx debs for Ubuntu 16.4 and debs have correct dependencies
* Debs automatically published to Sovrin debian repo

*Notes*
* The Evernym internal Jenkins configuration can be used as a basis for this work.
* We need to minimize dependency on a specific Linux version, as we will soon have to support Ubuntu 18.04 and Red Hat Linux.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwv47:",,,,Unset,Unset,EV 18.18,EV 18.19,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,dkulic,esplinr,gudkov,VladimirWork,,,,,,,"03/Sep/18 4:53 PM;gudkov;[~esplinr]

Some notes here:

- We don't have any Hyperlegder CI infrastructure for SDK builds for the moment. All SDK builds are performed on Evernym infrastructure.
- I believe it is better to include VCX build to existing SDK pipeline. At least for the beginning steps. 
- For ""release"" builds i suggest to re-use existing SDK release process and the same logic of tagging and GH release publishing. For now we provide tags for accepted builds only and update GH manually.
- For SDK pipeline we have dedicated CI build branches for RHEL and Ubuntu. 

As a scope for this ticket i suggest the following:

- CI/CD branches for Ubuntu 16.4 provided for libvcx that share existing SDK CI/CD process
- CI/CD should execute part of vcx tests that doesn't require Evernym infrastructure;;;","06/Sep/18 3:36 PM;Artemkaaas;Implemented the similar approch as for other *indy components: https://github.com/hyperledger/indy-sdk/pull/1115;;;","15/Sep/18 1:22 AM;VladimirWork;Build Info:
libvcx 0.1.2097319~754

Actual Results:
Package was installed successfully via `apt`, all dependent packages were also installed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
JSONObject.similar does not exist in Android,IS-853,32435,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,ignisvulpis,ignisvulpis,31/Jul/18 7:37 PM,06/Aug/19 11:30 PM,28/Oct/23 2:49 AM,06/Aug/19 11:30 PM,,,,,,,,0,,,,,"The tests use JSONObject.similar to compare expected to actual test results.

The method similar does not exist in Android's org.json.JSONObject.

 

I suggest to replace all occurrences of similar be individual asserts for the fields if possible e.g. for String or integer values.

For nested objects bring our own implementation of similar. 
Base to start from is here: [https://github.com/stleary/JSON-java/blob/7a17ae0b3edb9f4fbe811e5333a83e382e115ad6/JSONObject.java#L2029]

 

Something like I suggested in the comments to [https://github.com/hyperledger/indy-sdk/pull/1010#issuecomment-409162986]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwsp1:",,,,Unset,Unset,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,ignisvulpis,,,,,,,,,,"05/Aug/19 2:40 PM;ignisvulpis;Code is here: [https://github.com/stleary/JSON-java/blob/master/JSONObject.java#L2024]

This can be turned into a static function that implements the method on two JSON objects.

The license seems ok.

Alternatively use another library than the Android native one.

 

Although, why use similar?

And, isn't this issue outdated anyway?;;;","06/Aug/19 11:30 PM;esplinr;We agree with [~ignisvulpis], that we don't see any usage of this method in the current Android wrapper.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Libindy acceptance testing improvement,IS-854,32438,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,VladimirWork,VladimirWork,31/Jul/18 9:23 PM,17/Aug/18 1:12 AM,28/Oct/23 2:49 AM,17/Aug/18 1:07 AM,,,,,,,,0,,,,,"Need to implement as a script and run during libindy acceptance testing the next steps:

1. Open pool.
2. Wait for timeout to close client connection.
3. Send 2 GET_NYM txns from n clients simultaneously.
4. Check that we have less than or equal (if n=1) to n number of client connections on each node.
5. Check that we have equal to n total number of client connections to all nodes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzkyn:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),VladimirWork,,,,,,,,,,,"17/Aug/18 1:11 AM;VladimirWork;https://github.com/VladimirWork/tests/blob/master/test_acceptance.py

Client connections count was checked against 4 nodes docker and 25 nodes AWS pool.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
need pack_msg() in SDK,IS-855,32444,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,danielhardman,danielhardman,01/Aug/18 2:26 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"Today, libvcx has a prep_msg() function (I think) that turns a payload into something suitable for transporting over the wire. This function takes a small number of paramters (I think, the DID or verkey of the recipient, and the signing key of the sender), and it encrypts and msgpacks. We want a function in the SDK that is like that (possibly adapted from prep_msg()), but that basically does:

<jose>.base64url(crypt(msg)), where ""crypt"" = authcrypt or anoncrypt, based on some parameter

Eventually, this function will be modified to emit a JWM (the JOSE-oriented standard that Sam and Kyle are working on). This function would be the interoperability point that all agent writers would agree on, that guarantees that over-the-wire transmissions of messages have a common format.

We discussed this function in our agent-to-agent summit, and Sam and Kyle and others may want to add clarifications.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzkzr:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),danielhardman,,,,,,,,,,,"01/Aug/18 8:00 AM;danielhardman;Never mind. This is a dup of IS-786.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
need a library of functions for encoding fields of schema,IS-856,32470,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,danielhardman,danielhardman,01/Aug/18 7:59 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"We need a schema.rs in indy-sdk that helps people work with schema.

The first functions that we should provide are those that transform scalar values into encoded values suitable for inclusion in a CL-signed anoncreds-style credential. For example, we need one or more functions that transform dates into a 256-bit integer – possibly one that has nanosecond precision, one that has second precision, one that has day-only precision. We also need encoding functions that transform floating point into 256-bit integers, functions that transform strings (e.g., into a sha256 hash), etc.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-786,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzkdb:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),danielhardman,sergey.minaev,,,,,,,,,,"01/Aug/18 4:45 PM;sergey.minaev;Seems like duplicate of IS-786;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create tag for revocation registry on anoncreds.prover_store_credential(),IS-857,32482,,Task,Complete,IS,Indy SDK,software,resplin,,,Low,Done,zhigunenko.dsr,sklump,sklump,01/Aug/18 10:06 PM,10/Aug/18 8:27 PM,28/Oct/23 2:49 AM,10/Aug/18 8:15 PM,,,1.6.2,,,,,0,,,,,"I am working with the new anoncreds.prover_store_credential() implementation with its tag creation on storage. I was wondering if it might be possible in future to include a rev_reg_id tag (value None if not present) too?

It would be convenient to be able to search credentials by revocation registry.",,,14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzww2f:",,,,Unset,Unset,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,sklump,zhigunenko.dsr,,,,,,,,"03/Aug/18 11:28 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1035;;;","06/Aug/18 11:37 PM;Artemkaaas;Build-version: master-683;;;","09/Aug/18 8:21 PM;sergey.minaev;[~sklump] would you like to verify this? or our QA will do it;;;","09/Aug/18 9:46 PM;sklump;It works for my use cases, thanks. I'd be more comfortable waiting on your own QA's word too, and it won't cost anything but a little time.;;;","10/Aug/18 8:15 PM;zhigunenko.dsr;*Actual results:*
* Readme has been updated
* Wrappers have been updated
* Relevant unit tests have been added;;;","10/Aug/18 8:27 PM;sklump;Done, please close.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Document libVCX architectural decisions,IS-858,32490,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,DouglasWightman,donqui,,02/Aug/18 4:17 AM,12/Sep/19 12:57 AM,28/Oct/23 2:49 AM,11/Aug/18 12:22 AM,,,,,libvcx,,,0,indy-sdk,,,,"*Introduction*

As a Software Developer I need architectural decisions about libVCX written in a document form so I could share that information with the community,

*Acceptance Criteria*
* Create a document that describes the architectural decisions adopted in libVCX
* Document should be in Markdown
* Document exists in a public location (Evernym/sdk/vcx/doc or Hyperledger/indy-sdk/doc)
* Define the design trade-offs made in development.
* Explaining essential alternative approaches that were not approved (anti-patterns and dead-ends in development)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzzl8f:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,DouglasWightman,,,,,,,,,,"09/Aug/18 10:39 PM;DouglasWightman;The first draft is available in the vcx repo:

https://github.com/evernym/sdk/blob/master/vcx/docs/vcx_arch.md;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Determine optimal default values for pool timeouts,IS-859,32492,,Task,To Develop,IS,Indy SDK,software,resplin,,,High,,,ozheregelya,ozheregelya,02/Aug/18 6:37 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"From IS-834:
{quote}
Also we need to determine good default values for these timeouts that will good feed low and high load use cases well.
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-834,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzkdr:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ozheregelya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a Trustee running POOL_UPGRADE txn, I need to specify top-level package to be upgraded",IS-860,32497,,New Feature,Complete,IS,Indy SDK,software,resplin,,,High,Done,VladimirWork,ashcherbakov,ashcherbakov,02/Aug/18 5:36 PM,10/Aug/18 8:24 PM,28/Oct/23 2:49 AM,10/Aug/18 8:24 PM,,,1.6.2,,,,,0,,,,,Support an optional parameter in POOL_UPGRADE txn to specify the package to be upgraded.,,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1491,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzww0n:",,,,Unset,Unset,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ashcherbakov,dsurnin,VladimirWork,,,,,,,,"02/Aug/18 8:03 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1020
;;;","06/Aug/18 11:39 PM;Artemkaaas;Changes: added `package` param in build_pool_upgrade function
Build-version: master-683

;;;","08/Aug/18 12:21 AM;dsurnin;sdk call was checked

For QA: could you please validate indy-cli supports new param;;;","10/Aug/18 8:24 PM;VladimirWork;It will be checked in scope of INDY-1491.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Load test hangs if there is not enough nodes to connect the pool,IS-861,32500,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,zhigunenko.dsr,ozheregelya,ozheregelya,02/Aug/18 7:48 PM,10/Aug/18 10:09 PM,28/Oct/23 2:49 AM,10/Aug/18 10:09 PM,,,1.6.2,,,,,0,blocked,,,,"Steps to Reproduce:
 1. Setup the pool of 7 nodes.
 2. Stop 5 nodes.
 3. Try to connect to the pool using load test.

Actual Results:
 Load script hangs.

Expected Results:
 Load script should get error and exit.

Logs:
{code:java}
me@me-VirtualBox:~/indy-node/scripts/performance$ RUST_LOG=indy=trace python3 perf_processes.py -g ./pool_transactions_genesis -m t -c 1 -t 1 -n 1 -k get_nym -p ""{\""timeout\"": 50, \""extended_timeout\"": 150, \""preordered_nodes\"": [\""Node1\"", \""Node6\""]}"" -r 1
Number of client          1
Path to genesis txns file ./pool_transactions_genesis
Seed                      000000000000000000000000Trustee1
Batch size                1
Timeout between batches   1.0
Request kind              get_nym
Refresh rate, txns        1
Background tasks          30
Output directory          .
Value Separator           |
Wallet Key                key
Started At                2018-08-01 18:43:20.070129
Mode                      threads
Pool config               {'timeout': 50, 'extended_timeout': 150, 'preordered_nodes': ['Node1', 'Node6']}
Started 1 clients
TRACE|indy::api::pool               |                    src/api/pool.rs:310 | indy_set_protocol_version: <<< res: Success
 INFO|indy::commands                |                src/commands/mod.rs:115 | PoolCommand command received
DEBUG|indy::commands::pool          |               src/commands/pool.rs:228 | set_protocol_version >>> version: 2
DEBUG|indy::commands::pool          |               src/commands/pool.rs:237 | set_protocol_version <<<
TRACE|indy::api::pool               |                    src/api/pool.rs:303 | indy_set_protocol_version:
TRACE|indy::api::pool               |                    src/api/pool.rs:33  | indy_create_pool_ledger_config: >>> config_name: 0x7fa6d240fb10, config: 0x7fa6d23fbd20
TRACE|indy::api::pool               |                    src/api/pool.rs:39  | indy_create_pool_ledger_config: entities >>> config_name: ""pool_3c97853a6a5c82507da6efb2"", config: Some(""{\""genesis_txn\"": \""./pool_transactions_genesis\""}"")
TRACE|indy::api::pool               |                    src/api/pool.rs:54  | indy_create_pool_ledger_config: <<< res: Success
 INFO|indy::commands                |                src/commands/mod.rs:115 | PoolCommand command received
DEBUG|indy::commands::pool          |               src/commands/pool.rs:139 | create >>> name: ""pool_3c97853a6a5c82507da6efb2"", config: Some(""{\""genesis_txn\"": \""./pool_transactions_genesis\""}"")
TRACE|indy::services::pool          |           src/services/pool/mod.rs:62  | PoolService::create pool_3c97853a6a5c82507da6efb2 with config Some(""{\""genesis_txn\"": \""./pool_transactions_genesis\""}"")
DEBUG|indy::commands::pool          |               src/commands/pool.rs:143 | create << res: ()
TRACE|indy::api::pool               |                    src/api/pool.rs:47  | indy_create_pool_ledger_config:
TRACE|indy::api::pool               |                    src/api/pool.rs:89  | indy_open_pool_ledger: >>> config_name: 0x7fa6d240fb10, config: 0x7fa6d2fccaa0
TRACE|indy::api::pool               |                    src/api/pool.rs:95  | indy_open_pool_ledger: entities >>> config_name: ""pool_3c97853a6a5c82507da6efb2"", config: Some(""{\""timeout\"": 50, \""extended_timeout\"": 150, \""preordered_nodes\"": [\""Node1\"", \""Node6\""]}"")
TRACE|indy::api::pool               |                    src/api/pool.rs:110 | indy_open_pool_ledger: <<< res: Success
 INFO|indy::commands                |                src/commands/mod.rs:115 | PoolCommand command received
DEBUG|indy::commands::pool          |               src/commands/pool.rs:159 | open >>> name: ""pool_3c97853a6a5c82507da6efb2"", config: Some(""{\""timeout\"": 50, \""extended_timeout\"": 150, \""preordered_nodes\"": [\""Node1\"", \""Node6\""]}"")
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:456 | Pool::new name pool_3c97853a6a5c82507da6efb2, id 1, config PoolOpenConfig { timeout: 50, extended_timeout: 150, conn_limit: 5, conn_active_timeout: 5, preordered_nodes: [""Node1"", ""Node6""] }
DEBUG|indy::commands::pool          |               src/commands/pool.rs:174 | open <<<
TRACE|indy::services::pool::commander|     src/services/pool/commander.rs:26  | cmd [[99, 111, 110, 110, 101, 99, 116], [1, 0, 0, 0]]
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(CheckCache(1))
TRACE|indy::services::pool::merkle_tree_factory|src/services/pool/merkle_tree_factory.rs:27  | Restoring merkle tree from genesis
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:94  | ZMQNetworker::process_event: nodes_updated [RemoteNode { name: ""Node4"", public_key: [196, 24, 141, 31, 105, 237, 27, 65, 201, 62, 59, 55, 193, 242, 181, 53, 42, 157, 34, 231, 131, 64, 176, 60, 30, 210, 123, 110, 169, 191, 133, 26], zaddr: ""tcp://10.0.0.5:9708"", is_blacklisted: false }, RemoteNode { name: ""Node3"", public_key: [79, 5, 67, 174, 174, 29, 149, 231, 155, 21, 224, 85, 146, 120, 150, 148, 59, 245, 158, 37, 83, 26, 154, 135, 77, 138, 28, 147, 175, 47, 27, 119], zaddr: ""tcp://10.0.0.4:9706"", is_blacklisted: false }, RemoteNode { name: ""Node1"", public_key: [245, 162, 146, 125, 78, 184, 226, 60, 221, 1, 103, 194, 231, 134, 97, 57, 147, 89, 13, 171, 80, 230, 214, 139, 195, 130, 29, 243, 184, 195, 79, 31], zaddr: ""tcp://10.0.0.2:9702"", is_blacklisted: false }, RemoteNode { name: ""Node5"", public_key: [41, 187, 234, 133, 43, 242, 111, 244, 252, 245, 236, 183, 36, 145, 244, 169, 101, 126, 186, 216, 224, 244, 179, 97, 70, 247, 99, 222, 247, 163, 79, 16], zaddr: ""tcp://10.0.0.6:9710"", is_blacklisted: false }, RemoteNode { name: ""Node2"", public_key: [221, 7, 213, 25, 70, 73, 199, 226, 112, 254, 71, 75, 167, 252, 229, 6, 9, 164, 175, 172, 99, 45, 152, 229, 52, 56, 128, 121, 246, 160, 155, 14], zaddr: ""tcp://10.0.0.3:9704"", is_blacklisted: false }, RemoteNode { name: ""Node6"", public_key: [169, 63, 90, 144, 217, 229, 243, 51, 122, 163, 28, 93, 107, 87, 138, 190, 137, 26, 243, 155, 117, 182, 28, 1, 13, 244, 231, 86, 194, 217, 112, 108], zaddr: ""tcp://10.0.0.7:9712"", is_blacklisted: false }]
TRACE|indy::services::pool::request_handler|src/services/pool/request_handler.rs:211 | start catchup, ne: Some(SendAllRequest(""{\""op\"":\""LEDGER_STATUS\"",\""txnSeqNo\"":6,\""merkleRoot\"":\""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo\"",\""ledgerId\"":0,\""ppSeqNo\"":null,\""viewNo\"":null,\""protocolVersion\"":2}"", ""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo"", 150))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:59  | sending new request
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:83  | send request in new conn
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:180 | PoolConnection::new: from nodes [RemoteNode { name: ""Node4"", public_key: [196, 24, 141, 31, 105, 237, 27, 65, 201, 62, 59, 55, 193, 242, 181, 53, 42, 157, 34, 231, 131, 64, 176, 60, 30, 210, 123, 110, 169, 191, 133, 26], zaddr: ""tcp://10.0.0.5:9708"", is_blacklisted: false }, RemoteNode { name: ""Node3"", public_key: [79, 5, 67, 174, 174, 29, 149, 231, 155, 21, 224, 85, 146, 120, 150, 148, 59, 245, 158, 37, 83, 26, 154, 135, 77, 138, 28, 147, 175, 47, 27, 119], zaddr: ""tcp://10.0.0.4:9706"", is_blacklisted: false }, RemoteNode { name: ""Node1"", public_key: [245, 162, 146, 125, 78, 184, 226, 60, 221, 1, 103, 194, 231, 134, 97, 57, 147, 89, 13, 171, 80, 230, 214, 139, 195, 130, 29, 243, 184, 195, 79, 31], zaddr: ""tcp://10.0.0.2:9702"", is_blacklisted: false }, RemoteNode { name: ""Node5"", public_key: [41, 187, 234, 133, 43, 242, 111, 244, 252, 245, 236, 183, 36, 145, 244, 169, 101, 126, 186, 216, 224, 244, 179, 97, 70, 247, 99, 222, 247, 163, 79, 16], zaddr: ""tcp://10.0.0.6:9710"", is_blacklisted: false }, RemoteNode { name: ""Node2"", public_key: [221, 7, 213, 25, 70, 73, 199, 226, 112, 254, 71, 75, 167, 252, 229, 6, 9, 164, 175, 172, 99, 45, 152, 229, 52, 56, 128, 121, 246, 160, 155, 14], zaddr: ""tcp://10.0.0.3:9704"", is_blacklisted: false }, RemoteNode { name: ""Node6"", public_key: [169, 63, 90, 144, 217, 229, 243, 51, 122, 163, 28, 93, 107, 87, 138, 190, 137, 26, 243, 155, 117, 182, 28, 1, 13, 244, 231, 86, 194, 217, 112, 108], zaddr: ""tcp://10.0.0.7:9712"", is_blacklisted: false }]
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:255 | send_request >> pe: Some(SendAllRequest(""{\""op\"":\""LEDGER_STATUS\"",\""txnSeqNo\"":6,\""merkleRoot\"":\""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo\"",\""ledgerId\"":0,\""ppSeqNo\"":null,\""viewNo\"":null,\""protocolVersion\"":2}"", ""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo"", 150))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:317 | _send_msg_to_one_node >> idx 0, req_id BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo, req {""op"":""LEDGER_STATUS"",""txnSeqNo"":6,""merkleRoot"":""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null,""protocolVersion"":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:329 | _get_socket: open new socket for node 0
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:323 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:317 | _send_msg_to_one_node >> idx 1, req_id BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo, req {""op"":""LEDGER_STATUS"",""txnSeqNo"":6,""merkleRoot"":""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null,""protocolVersion"":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:329 | _get_socket: open new socket for node 1
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:323 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:317 | _send_msg_to_one_node >> idx 2, req_id BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo, req {""op"":""LEDGER_STATUS"",""txnSeqNo"":6,""merkleRoot"":""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null,""protocolVersion"":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:329 | _get_socket: open new socket for node 2
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:323 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:317 | _send_msg_to_one_node >> idx 3, req_id BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo, req {""op"":""LEDGER_STATUS"",""txnSeqNo"":6,""merkleRoot"":""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null,""protocolVersion"":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:329 | _get_socket: open new socket for node 3
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:323 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:317 | _send_msg_to_one_node >> idx 4, req_id BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo, req {""op"":""LEDGER_STATUS"",""txnSeqNo"":6,""merkleRoot"":""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null,""protocolVersion"":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:329 | _get_socket: open new socket for node 4
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:323 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:317 | _send_msg_to_one_node >> idx 5, req_id BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo, req {""op"":""LEDGER_STATUS"",""txnSeqNo"":6,""merkleRoot"":""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo"",""ledgerId"":0,""ppSeqNo"":null,""viewNo"":null,""protocolVersion"":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:329 | _get_socket: open new socket for node 5
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:323 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:283 | send_request <<
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:105 | PoolSM: from init to getting catchup target
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(NodeReply(""{\""op\"":\""LEDGER_STATUS\"",\""ppSeqNo\"":null,\""ledgerId\"":0,\""merkleRoot\"":\""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo\"",\""protocolVersion\"":2,\""txnSeqNo\"":6,\""viewNo\"":null}"", ""Node5""))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 0, nanos: 24399219 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << true
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(NodeReply(""{\""ledgerId\"":0,\""txnSeqNo\"":6,\""ppSeqNo\"":null,\""merkleRoot\"":\""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo\"",\""op\"":\""LEDGER_STATUS\"",\""protocolVersion\"":2,\""viewNo\"":null}"", ""Node6""))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 0, nanos: 24624870 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << true
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout(""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo"", ""Node4""))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 150, nanos: 98213207 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << false
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout(""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo"", ""Node1""))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 150, nanos: 98367941 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << false
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout(""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo"", ""Node3""))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 150, nanos: 98455138 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << false
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout(""BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo"", ""Node2""))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 150, nanos: 98537406 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << false
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:127 | removing pool connection 2{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzww0v:",,,,Unset,Unset,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),ozheregelya,sergey.minaev,zhigunenko.dsr,,,,,,,,,"07/Aug/18 7:17 PM;sergey.minaev;PR with fix
https://github.com/hyperledger/indy-sdk/pull/1036
Build version:  > 1.6.1 master 685 (any newest as 685 failed during Jenkins issue) ;;;","10/Aug/18 10:08 PM;zhigunenko.dsr;*Environment:*
sdk artifacts 1.6.1~701

*Steps to Validate:*
1. Setup the pool of 7 nodes.
2. Stop 5 nodes.
3. Try to connect to the pool using load test.

*Actual Results:*
Load script should get error and exit.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"anoncreds prover_{search,fetch}_credentials_for_proof_req ignores restrictions in proof-req",IS-862,32509,,Task,Complete,IS,Indy SDK,software,resplin,,,Low,Done,sklump,sklump,sklump,03/Aug/18 1:07 AM,09/Aug/18 8:20 PM,28/Oct/23 2:49 AM,09/Aug/18 8:20 PM,,,1.6.2,,,,,0,,,,,"I have three cred defs:
* fav-num v1.0: `WgWxqztrNooG92RXvxSTWv:3:CL:178:0` (on schema with attributes 'ident', 'num')
* ident v1.0: `WgWxqztrNooG92RXvxSTWv:3:CL:179:0` (on schema with attributes 'ident', 'regEpoch')
* fav-char v1.0: `WgWxqztrNooG92RXvxSTWv:3:CL:180:0` (on schema with attributes 'ident', 'char').

The wallet has 24 creds on each with ident=0..23, and, for the fav-num creds,
* ident 0..3 have num=0
* ident 4..23 have num > 0.

I build a proof request using only the fav-num cred def; it looks like this:

{code:java}
{
    ""version"": ""0.0"",
    ""requested_attributes"": {
        ""178_ident_uuid"": {
            ""non_revoked"": ...,
            ""restrictions"": [
                {
                    ""cred_def_id"": ""WgWxqztrNooG92RXvxSTWv:3:CL:178:0""
                }
            ],
            ""name"": ""ident""
        }
    },
    ""nonce"": ""1533125655"",
    ""requested_predicates"": {},
    ""name"": ""proof_req""
}
{code}

I search the wallet with the above proof-req and extra WQL dict:

{code:java}
{
    ""178_ident_uuid"": {
        ""$or"": [
            {
                ""attr::ident::value"": 1
            },
            {
                ""attr::num::value"": 0
            }
        ]
    }
}
{code}

After getting the search handle, I tracked what I got back from each call to `anoncreds.prover_fetch_credentials_for_proof_req()` per item referent and got:

{code:java}
.. FETCHED 6 briefs for referent 178_ident_uuid: [
    {
        ""interval"": ...,
        ""cred_info"": {
            ""referent"": ""57877da8-8c78-42a8-bcd1-d05f84240ef8"",
            ""cred_def_id"": ""WgWxqztrNooG92RXvxSTWv:3:CL:178:0"",
            ""attrs"": ...,
            ...
        }
    },
    {
        ""interval"": ...,
        ""cred_info"": {
            ""referent"": ""cabe9a7b-0d90-427b-ab7b-976eebd3cff7"",
            ""cred_def_id"": ""WgWxqztrNooG92RXvxSTWv:3:CL:178:0"",
            ""attrs"": ...,
            ...
        }
    },
    {
        ""interval"": ...,
        ""cred_info"": {
            ""referent"": ""7c1b830c-8b54-443f-8108-ae403a7d3ee8"",
            ""cred_def_id"": ""WgWxqztrNooG92RXvxSTWv:3:CL:179:0"",
            ""attrs"": ...,
            ...
        }
    },
    {
        ""interval"": ...,
        ""cred_info"": {
            ""referent"": ""5461fbb1-2459-43a9-8e93-0c43f25e818b"",
            ""cred_def_id"": ""WgWxqztrNooG92RXvxSTWv:3:CL:180:0"",
            ""attrs"": ...,
            ...
        }
    },
    {
        ""interval"": ...,
        ""cred_info"": {
            ""referent"": ""7e6e8fdd-286a-4317-81d8-0a4ff22dbf2f"",
            ""cred_def_id"": ""WgWxqztrNooG92RXvxSTWv:3:CL:178:0"",
            ""attrs"": ...,
            ...
        }
    },
    {
        ""interval"": ...,
        ""cred_info"": {
            ""referent"": ""9ed40b12-60e0-442a-ab40-ac5ca46e8ffe"",
            ""cred_def_id"": ""WgWxqztrNooG92RXvxSTWv:3:CL:178:0"",
            ""attrs"": ...,
            ...
        }
    }
]
{code}

The proof request clearly identifies the cred-def restriction on each item referent, but the search ignores it in the WQL fetch iteration that the item referent identifies. As I see it, no way should this search have found credentials on the fav-char or ident cred-defs.

For the moment, specifying the restrictions explicitly in the WQL suffices as a workaround.",,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzww1z:",,,,Unset,Unset,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sklump,,,,,,,,,,"03/Aug/18 2:43 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1018
Changes:  The issue was in overriding restrictions by the same type of operators presented in an extra query. We have updated building of common query to put restriction and extra query inside ""$and"" operator.
Build version: master-671;;;","07/Aug/18 7:34 PM;sklump;Thanks, this update picks up the cred def from the proof req as expected.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow ledger queries without an active DID,IS-863,32511,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,03/Aug/18 1:22 AM,19/Oct/18 10:04 PM,28/Oct/23 2:49 AM,11/Sep/18 5:40 PM,,,1.6.5,,libindy,,,0,blocked,,,,"*Story*

As a developer working with an Indy Network,  I should not be required to specify a DID in order to submit a GET transaction to the ledger. The additional stop increases developer frustration with using the network.

 

*Acceptance Criteria*
 * The SDK should always set a fake DID as the ""identifier""
 ** This fake identifier should be easily identifiable as fake, such as all zeros
 * A ticket should be raised in the Indy Node project for the ledger to not require a DID for GET transactions.",,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1067,,,,,,,,,,,"11/Sep/18 5:39 PM;VladimirWork;IS-863.PNG;https://jira.hyperledger.org/secure/attachment/15799/IS-863.PNG","11/Sep/18 12:11 AM;VladimirWork;indy_cli.log;https://jira.hyperledger.org/secure/attachment/15798/indy_cli.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvvr:",,,,Unset,Unset,EV 18.18,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ashcherbakov,esplinr,gudkov,sergey.minaev,VladimirWork,,,,,,"03/Aug/18 5:39 PM;sergey.minaev;[~ashcherbakov] Does current Indy-Node support get requests without ""identifier"" field?;;;","03/Aug/18 5:44 PM;ashcherbakov;No, currently 'identifier' must be specified. But it can be any value, not necessary a valid DID present on the ledger.
So, there are 2 options:

1) Change the node code (may be not a trivial change)

2) SDK always sets some fake DID as 'identifier';;;","03/Aug/18 11:44 PM;esplinr;The second option is acceptable as a medium-term fix. I updated the ticket description.;;;","04/Sep/18 5:41 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1112
Changes: set submitter_did as the optional field for GET request builders. `LibindyDid111111111111` is used as default Libindy DID;;;","04/Sep/18 8:49 PM;gudkov;[~Artemkaaas] As i understand we updated indy cli to don't require did for some operations. Could you describe the changes in more details to help QA?;;;","06/Sep/18 5:25 PM;Artemkaaas;Changes in Indy-Cli :  it is not necessary now to have an active `did` (call `did use`) to be able to call `ledger get-*` commands.;;;","11/Sep/18 12:09 AM;VladimirWork;Build Info:
libindy / indy-cli 1.6.5~748

Steps to Reproduce:
1. `load-plugin library=libnullpay.so initializer=nullpay_init`.
2. Create payment address.
3. Try to get-fees and get-payment-sources without active did in wallet.

Actual Results:
indy@indy-VirtualBox:~$ indy-cli --logger-config ./logger.yml 
Logger has been initialized according to the config file: ""./logger.yml""
indy> pool connect perf
Pool ""perf"" has been connected
pool(perf):indy> wallet open w1 key=key
Wallet ""w1"" has been opened
pool(perf):wallet(w1):indy> load-plugin library=libnullpay.so initializer=nullpay_init
Plugin has been loaded: ""libnullpay.so""
pool(perf):wallet(w1):indy> ledger get-fees payment_method=null
Input not found
pool(perf):wallet(w1):indy> ledger get-payment-sources payment_address=pay:null:e8MD6QlVX4FexgH
Input not found

There are `null` and `0x0` values as `submitter_did` in logs:
{noformat}
2018-09-10T17:36:39.291699818+03:00 [indy::api::payments] TRACE indy::api::payments:indy_build_get_txn_fees_req: >>> wallet_handle: 3, submitter_did: 0x0, payment_method: 0x7f1582635178
2018-09-10T17:36:39.291711142+03:00 [indy::api::payments] TRACE indy::api::payments:indy_build_get_txn_fees_req: entities >>> wallet_handle: 3, submitter_did: None, payment_method: ""null""
2018-09-10T17:36:39.291728723+03:00 [indy::api::payments] TRACE indy::api::payments:indy_build_get_txn_fees_req: <<< res: Success
{noformat}

{noformat}
2018-09-10T17:36:46.843402395+03:00 [indy::api::payments] TRACE indy::api::payments:indy_build_get_payment_sources_request: >>> wallet_handle: 3, submitter_did: 0x0, payment_address: 0x7f1582634340
2018-09-10T17:36:46.843415081+03:00 [indy::api::payments] TRACE indy::api::payments:indy_build_get_payment_sources_request: entities >>> wallet_handle: 3, submitter_did: None, payment_address: ""pay:null:e8MD6QlVX4FexgH""
2018-09-10T17:36:46.843434256+03:00 [indy::api::payments] TRACE indy::api::payments:indy_build_get_payment_sources_request: <<< res: Success
{noformat}

So it looks like get-payment txns still require active did because with active did I get successful results:
{noformat}
pool(perf):wallet(w1):did(V4S...e6f):indy> ledger get-fees payment_method=null
There are no fees
pool(perf):wallet(w1):did(V4S...e6f):indy> ledger get-payment-sources payment_address=pay:null:e8MD6QlVX4FexgH
There are no source's
{noformat}
;;;","11/Sep/18 1:27 AM;gudkov;[~VladimirWork] I believe it is an issue in libnullpay's fakes transactions only. ;;;","11/Sep/18 5:40 PM;VladimirWork;The issue found is not actual for libnullpay 1.6.5~750. !IS-863.PNG|thumbnail! ;;;",,,,,,,,,,,,,,,,,,,,,
Timeout errors infinitely appear in rust logs if indy-cli was not connected to the pool during extended timeout,IS-864,32527,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,ozheregelya,ozheregelya,03/Aug/18 5:35 PM,10/Aug/18 5:01 PM,28/Oct/23 2:49 AM,10/Aug/18 5:01 PM,,,1.6.2,,,,,0,,,,,"Steps to Reproduce:
1. Set up the pool.
2. Start the traffic_shaping.sh on all the nodes.
3. Open indy-cli with RUST_LOG=indy=trace.
4. Connect to the pool with small timeouts.
=> indy-cli can't connect during timeout.

Actual Results:
Following messages infinitely appear in rust logs:
{code:java}
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout("""", """"))
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout("""", """"))
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout("""", """"))
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout("""", """"))
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout("""", """"))
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout("""", """")){code}
It's impossible to exit the cli normal way, ctrl+c results hanging of indy-cli. Only kill the process works.

Expected Results:
Timeout error should appear only once.

Additional Information:
The same case works without any problems without logging.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzww13:",,,,Unset,Unset,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),ozheregelya,sergey.minaev,zhigunenko.dsr,,,,,,,,,"09/Aug/18 7:56 PM;sergey.minaev;PR with fix
https://github.com/hyperledger/indy-sdk/pull/1046

Available from 1.6.1 master 691;;;","10/Aug/18 5:01 PM;zhigunenko.dsr;*Environment:*
indy-cli 1.6.1~701

*Steps to Validate:*
1) Try to connect to pool with trace logs
2) Try to connect to pool without logging

*Actual results:*
Timeout error appears only once.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Research how pool ledger size affect performance,IS-865,32532,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,zhigunenko.dsr,zhigunenko.dsr,03/Aug/18 9:12 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"1. Write 10.000 pool transactions
2. Run load testing with setup that similar for load with known metrics",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,INDY-1118,,,No,,,Unset,No,,,"1|hzzlef:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),zhigunenko.dsr,,,,,,,,,,,"03/Aug/18 9:13 PM;zhigunenko.dsr;*Reason to invalid:*
Wrong project;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
multi-user permission to make payments,IS-866,32547,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,03/Aug/18 11:54 PM,09/Oct/19 12:23 AM,28/Oct/23 2:49 AM,,,,,,wallet,,,0,,,,,"*Story*

As an organization issuing credentials on an Indy Node network, I need multiple trusted people to provide permission in order to make payments in order to secure my organization against theft through a single employee account.

*Acceptance Criteria*
 * A configuration exists where more than one user must approve transfers of tokens.

*Todo*
 * We need to do architecture and UX design of this issue
 ** Is it multiple keys in multiple wallets, or multiple holders necessary to access the token keys in a single wallet?
 * Issues for future work are created (should be an epic?)
 ** only require two users for transfers over a user defined threshold
* Is this work for the wallet (part of Indy SDK) or is it work in the payment ledger (part of the teams implementing specific payment systems)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzww4n:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,"09/Oct/19 12:23 AM;esplinr;Related task for the Sovrin Token:

https://sovrin.atlassian.net/browse/ST-577;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement pool refresh command in CLI,IS-867,32567,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,sergey.minaev,sergey.minaev,06/Aug/18 5:25 PM,07/Aug/18 9:54 PM,28/Oct/23 2:49 AM,07/Aug/18 7:54 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,IS-736,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzjj3:",,,,Unset,Unset,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sergey.minaev,zhigunenko.dsr,,,,,,,,,"06/Aug/18 6:45 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1039
;;;","07/Aug/18 5:33 PM;Artemkaaas;Build-version: master-684;;;","07/Aug/18 7:54 PM;zhigunenko.dsr;*Environment:*
 indy-cli 1.6.1~684

*Steps to Validate:*
 1. Connect to pool with 4 nodes
 2. _ledger get-validator-info_
 3. Demote one node
 4. _ledger get-validator-info_
 5. _pool refresh_
 6. _ledger get-validator-info_
 7. Promote node back
 8. _ledger get-validator-info_
 9. _pool refresh_
 10. _ledger get-validator-info_

*Actual results:*
get-validator-info caught up relevant pool size after _pool refresh_;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Move libvcx code into Hyperledger indy-sdk repo,IS-868,32571,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dkulic,dkulic,dkulic,06/Aug/18 9:48 PM,14/Nov/18 7:03 AM,28/Oct/23 2:49 AM,31/Aug/18 10:16 PM,,,,,libvcx,,,0,,,,,"As part of delivery to comunity, we need to deliver the claims exchange code to the Hyperledger Project.

*Acceptance Criteria*
* Move code and history from the development Git repository to a the Hyperledger repository.
* The development repositories are:
** sdk
*** Moved to hyperledger/indy-sdk/vcx
* The Indy SDK contribution guide should be updated to also include guidelines for community development of  LibVCX.
* VCX documentation should be moved into Hyperledger/indy-sdk/doc

Excluded:
 * This ticket just involves moving the code, it does not include setting up CI/CD pipelines.

Notes:
 * This guide for merging repositories might help:
 [https://stackoverflow.com/questions/1425892/how-do-you-merge-two-git-repositories]

TODO:
 * Nathan George should review and approve this issue before work is started.
 * We need to get access rights from Hyperledger.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzzn1j:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,,,,,,,,,,,"10/Aug/18 9:59 PM;dkulic;https://github.com/hyperledger/indy-sdk/pull/1060;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Migrate Jira issues to Indy,IS-869,32580,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,esplinr,dkulic,dkulic,06/Aug/18 11:26 PM,08/Jan/19 2:11 PM,28/Oct/23 2:49 AM,07/Dec/18 11:03 PM,,,,,libvcx,,,0,,,,,"*Story*
 As a developer using indy-sdk, I need to be able to track the history of libvcx including before it was contributed to Hyperledger by Evernym so that I understand how decisions were made and what additional work is needed.

*Acceptance Criteria*
 Migrate from the internal Evernym EN project to the Hyperledger JIRA Indy SDK project the following types of issues:
 * Open issues
 * Key historical issues containing important information project architecture.
 * Key historical issues containing reasons why actions were not taken.

*Notes*
* We can apply a ""ToIndy"" label to issues that we identify for migration, and then bulk export them as a CSV.
 * We are concerned about exporting the entire project without reviewing each issue and history for public consumption.
 * We are concerned about the difficulty of moving issues between Jira instances with different configurations.
 * Issues that have a specific label can be bulk exported from Jira as a CSV and imported into a different instance. See:
 [https://confluence.atlassian.com/adminjiracloud/importing-data-from-csv-776636762.html]
 * Many of the issues are low value to migrate due to minimal information being included.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwvnr:",,,,Unset,Unset,EV 18.24,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,esplinr,gudkov,MattRaffel,,,,,,,,"24/Oct/18 5:10 PM;gudkov;[~esplinr] [~DouglasWightman] Is this ticket still relevant?;;;","24/Oct/18 6:07 PM;esplinr;This issue is still relevant.

[~DouglasWightman] Can you, or a member of your team, add a ""ToIndy"" label to Evernym JIRA issues that are important for understanding the history and design of LibVCX? Open issues are the most important to migrate so that we can continue the development.;;;","28/Nov/18 11:25 PM;MattRaffel;This is the the current sprint for Dougs team.;;;","04/Dec/18 6:09 AM;MattRaffel;Spoke with Doug, this is done.   Richard, you should be able to find what you need :);;;","04/Dec/18 6:16 PM;gudkov;[~esplinr] Could you verify this?;;;","08/Jan/19 2:11 PM;esplinr;Yes, I have what I need. Thank you [~DouglasWightman] and [~MattRaffel]. I see 62 issues ready to move to Indy.

https://evernym.atlassian.net/issues/?jql=labels%20in%20(ToIndy);;;",,,,,,,,,,,,,,,,,,,,,,,,
VCX: Present on the design and usage of libvcx,IS-870,32581,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,DouglasWightman,dkulic,dkulic,06/Aug/18 11:30 PM,18/Sep/19 10:50 PM,28/Oct/23 2:49 AM,18/Sep/19 10:50 PM,,,,,libvcx,,,0,,,,,"As a Developer building solutions in the Indy ecosystem, I need to understand how to get started with LibVCX.

*Acceptance Criteria*

Record a webinar that covers the following topics:
* Architecture
* Development environment
* Code organization
* Running unit tests
* CI / CD pipeline
* Release history
* Testing history

The webinar should also include time for participant question and answer.

The webinar should be posted on the Evernym YouTube channel.

Session artifacts such as example code and presentation slides should be made available publicly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwvm0:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,esplinr,gudkov,sergey.minaev,,,,,,,,"31/Aug/18 11:01 PM;gudkov;[~esplinr] [~dkulic] I prefer to have this in a Getting Started Guide format as we have for libindy;;;","11/Sep/18 9:28 PM;gudkov;[~esplinr] We have recording form yesterday vcx meeting. We can publish this recording. It doesn't show details about architecture and unti tests, but more info about value and usage. For me it is much more important for start.;;;","05/Dec/18 8:17 PM;sergey.minaev;[~esplinr] [~gudkov] should we close this ticket as done?;;;","18/Sep/19 10:50 PM;esplinr;Video is published:
https://www.youtube.com/watch?v=nFZ__vyv-vY&t=56s;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: libvcx should be compatible with reference Cloud Agents,IS-871,32582,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,,esplinr,esplinr,06/Aug/18 11:38 PM,19/Sep/19 12:20 AM,28/Oct/23 2:49 AM,19/Sep/19 12:20 AM,,,,,libvcx,,,0,,,,,"Currently LibVCX assumes the availability of the commercial Evernym Agency. In order to be part of the Indy SDK, it needs to work without the Evernym Agency, and should function with any agent that is compatible with the Indy Reference Agents.

*Acceptance Criteria*
* LibVCX is interoperable with an Indy Reference Agent in the hyperledger/indy-agent repository.
* Evernym issues exist for restoring interoperability with the Evernym agency.",,,,,,,,,,,IA-49,,,,,,,,,,,,,,IS-920,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwvsn:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
did.set_did_metadata return ErrorCode.WalletItemNotFound,IS-872,32634,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,fabienpe,fabienpe,07/Aug/18 10:33 PM,29/Aug/18 8:30 PM,28/Oct/23 2:49 AM,29/Aug/18 8:30 PM,1.6.0,,1.6.3,,libindy,,,0,,,,,"The attached piece of code fails with `indy.error.IndyError: ErrorCode.WalletItemNotFound`., even though this call is made after `did.store_their_did`. However `did.set_endpoint_for_did` succeeds.","python3-indy 1.6.1

libindy 1.6.1~684

Ubuntu 18.04 LTS",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/18 10:04 PM;fabienpe;bug_report.py;https://jira.hyperledger.org/secure/attachment/15467/bug_report.py",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzjhb:",,,,Unset,Unset,EV 18.16,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,fabienpe,,,,,,,,,,"08/Aug/18 12:46 AM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1047;;;","28/Aug/18 12:05 AM;fabienpe;FYI: With the code update in PR 1047  I do not experience the issue anymore. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Evernym built LibVCX artifacts should be publicly available,IS-873,32635,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,DouglasWightman,esplinr,esplinr,07/Aug/18 10:36 PM,24/Oct/18 6:05 PM,28/Oct/23 2:49 AM,24/Oct/18 6:05 PM,,,,,libvcx,,,0,,,,,"In order to make the LibVCX library available to people quickly, we should upload the most current Evernym release to a public location.

*Acceptance Criteria*
* The most recent Evernym artifacts are available in a public location.
* There is a link to those artifacts from Evernym/sdk/Readme.md",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwvmv:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),DouglasWightman,esplinr,gudkov,,,,,,,,,"08/Aug/18 1:14 AM;DouglasWightman;I spoke to evernym IT and they would need to create a public repo for libvcx artifacts. I think it's the best path to public artifacts that doesn't disrupt current workflows.;;;","24/Oct/18 5:09 PM;gudkov;[~esplinr] [~DouglasWightman] Is this ticket still relevant? We already started producing of community artifacts for some platforms.;;;","24/Oct/18 6:04 PM;esplinr;Correct. This issue is superseded by the availability of libvcx artifacts in Indy SDK.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CI/CD: Provide LibVCX Windows CI/CD pipeline branches,IS-874,32638,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,07/Aug/18 11:11 PM,18/Dec/18 9:09 PM,28/Oct/23 2:49 AM,30/Nov/18 9:26 PM,,,1.7.0,,libvcx,,,0,devops,,,,"*Description*
LibVCX builds and tests for Windows should occur and be tested as part of the Indy SDK CI/CD pipelines.

*Acceptance Criteria*
* Tests executed in CI and CD steps
* Artifacts as zip archive published to repo.sovrin.org",,,,,,,,,,,IS-936,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwvpa:",,,,Unset,Unset,EV 18.24,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,dkulic,esplinr,,,,,,,,,"27/Nov/18 10:56 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1319;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI/CD: Provide LibVCX Android CI/CD pipeline branches,IS-875,32639,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,07/Aug/18 11:19 PM,19/Aug/19 7:25 PM,28/Oct/23 2:49 AM,01/Aug/19 5:45 PM,,,1.11.0,,libvcx,,,0,devops,,,,"*Description*
LibVCX builds and tests for Android should occur and be tested as part of the Indy SDK CI/CD pipelines.

*Acceptance Criteria*
* Tests executed in CI and CD steps
* Artifacts as tar.gz archive published to repo.sovrin.org
* Complete a build of Evernym's Connect.Me with the new artifacts.

*Notes*
* Evernym's official builds will continue to come off of their own build pipeline, but we want to ensure that the Hyperledger pipeline benefits from the Evernym approach.",,,,,,,,,,,,,,,IS-1176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|i00te0:",,,,Unset,Unset,EV 19.04,Indy SDK 19.14,Indy SDK 19.15,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,esplinr,sergey.minaev,,,,,,,,,"27/Jul/19 3:00 PM;sergey.minaev;Implemented in PRs (CI/CD)

[h//github.com/hyperledger/indy-sdk/pull/1729|https://github.com/hyperledger/indy-sdk/pull/1729]

[https://github.com/hyperledger/indy-sdk/pull/1562]

 

[repo.sovrin.org/android/libvcx/master/0.3.2-1216|https://repo.sovrin.org/android/libvcx/master/0.3.2-1216/]

Builds are available at the link above;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI/CD: Provide LibVCX iOS CI/CD pipeline branches,IS-876,32640,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,07/Aug/18 11:19 PM,20/Dec/18 6:27 PM,28/Oct/23 2:49 AM,20/Dec/18 6:27 PM,,,,,libvcx,,,0,devops,,,,"*Description*
LibVCX builds and tests for iOS should occur and be tested as part of the Indy SDK CI/CD pipelines.

*Acceptance Criteria*
* Tests executed in CI and CD steps
* Artifacts as tar.gz archive published to repo.sovrin.org",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|i00246:y",,,,Unset,Unset,EV 18.25,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,dkulic,esplinr,,,,,,,,,"10/Dec/18 7:49 PM;Artemkaaas;Updated CI Pipeline to tun Libvcx test on MacOS. 
CD pipeline wasn't updated because we don't test other artifacts on MacOS.
Done in PR: https://github.com/hyperledger/indy-sdk/pull/1343;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
If no output address provided for payment to hold remaining balance all tokens are lost,IS-877,32650,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,,krw910,krw910,08/Aug/18 6:07 AM,10/Aug/18 9:51 PM,28/Oct/23 2:49 AM,10/Aug/18 9:51 PM,,,,,,,,0,,,,,"When transferring tokens between payment addresses if you fail to include a payment address for the remaining balance from the source you will lose all tokens remaining in that payment address. 

*Example*
Address 1 has 1000 tokens
Address 2 has 0 tokens
I am going to transfer 500 tokens from Address 1 to Address 2

*CLI command*
{code}
ledger payment inputs=<source> outputs=(<Address 2>,500)
{code}
{color:#403294}To be correct it should have been{color}
{code}
ledger payment inputs=<source> outputs=(<Address 1>,500),(<Address 2>,500)
{code}

{color:#DE350B}Issue{color}
No check occurred to make sure my output value matched my input value

{color:#DE350B}Result{color}
Address 1 has 0 tokens
Address 2 has 500 tokens

The lost tokens go to the fees collection

{color:#00875A}Resolution{color}
A balance check should be in place to verify source value matches total output value.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-884,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv1r:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,krw910,sergey.minaev,,,,,,,,,"09/Aug/18 8:34 PM;sergey.minaev;Check like described in the ticket is out of scope of IndySDK. It's up to specific plugin implementation. BTW new error code will be added to IndySDK
PR with fix from [~lovesh] https://github.com/hyperledger/indy-sdk/pull/1057;;;","10/Aug/18 9:51 PM;esplinr;We addressed this concern in the payment plugin for the Sovrin network by causing it to reject transactions that do not balance.

We raised IS-884 to provide some additional guidance to users of the Indy CLI for when they are using other payment systems.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect message returned when payment source does not have enough tokens for transaction,IS-878,32651,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,krw910,krw910,08/Aug/18 6:36 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"I sent a transaction from two sources that one address controlled. 
Source 1 had 1000 tokens
Source 2 had 500 tokens

I transferred successfully from Source 1 and Source 2 to another payment address 1250 tokens.
I then immediately tried sending the same transaction. The sources non longer exist to pull from, but the logs show it is looking to the sequence number where those sources are listed on the ledger.

*The CLI returns the message*
Transaction response has not been received

*The logs on the node show*
will reject

{color:#DE350B}Issue{color}
The correct message should let the user know that they do not have any tokens at that source. The current message makes it look like there is a network or node issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv1z:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),krw910,,,,,,,,,,,"08/Aug/18 11:11 AM;krw910;Turns out the message is correct the system timed out for the response and I have that captured in another ticket.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default Wallet may be slow on mobile device due to filesystem syncs,IS-879,32662,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,dkulic,sergey.minaev,sergey.minaev,08/Aug/18 5:44 PM,04/Sep/18 9:51 PM,28/Oct/23 2:49 AM,04/Sep/18 9:51 PM,,,,,,,,0,,,,,The sqlite3 is used for default wallet implementation and libindy use default connection settings for journal and other filesystem staff. Non-default options should be considered and probably chosen for default wallet.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv6f:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,sergey.minaev,,,,,,,,,,"08/Aug/18 5:46 PM;sergey.minaev;[~dkulic] could you please share you research in this ticket too?;;;","08/Aug/18 6:23 PM;dkulic;Small improvement is seen with journal_mode = WAL and synchronous = FULL options without losing any safety (durability and consistency).

Much higer improvement (order of magnitude) is seen with journal_mode = WAL and synchronous = NORMAL, it guaranties consistency, but it does not guaranties durability, so record may be lost in case of system reset shortly after the record is added to database.;;;","08/Aug/18 6:25 PM;dkulic;The key settings are pragma options `synchronous` and `journal_mode`.

Default values are `NORMAL` and `DELETE` which (just for comparison, on my computer) gives ~10ms time of add key operation.
If changed to `NORMAL` and `TRUNCATE` time is improved to ~7.5ms and it is totally safe
`NORMAL` and `WAL` improves this to ~0.1ms, but does not guaranties durability.
`FULL` and `WAL` is safe and gives time of add record of ~3ms.

I have used some tests created by @artem.ivanov and testing suggests that on most systems deriving the key from passphrase (Argon2) dominates the time taken (it derives twice, one for key used for decryption of export file and second for creating the empty wallet in which data is being imported) but on some mobile devices with slow flash (or maybe even memory cards) the time of writing the data to database is not negligible.

The problem with `NORMAL`+`WAL` is explained in SQLite documentation as: A transaction committed in WAL mode with synchronous=NORMAL might roll back following a power loss or system crash. Transactions are durable across application crashes regardless of the synchronous setting or journal mode.;;;","08/Aug/18 6:27 PM;dkulic;https://github.com/hyperledger/indy-sdk/pull/1052;;;","10/Aug/18 9:06 PM;sergey.minaev;Available from 1.6.1 master 694;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Release: Prepare the 1.7 release of IndySDK,IS-880,32665,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,Artemkaaas,08/Aug/18 7:17 PM,27/Aug/18 5:49 PM,28/Oct/23 2:49 AM,15/Aug/18 4:51 PM,,,,,,,,0,,,,,"Task Overview
Perform all necessary tasks in order to release LibIndy 1.6

Acceptance Criteria

* Code is tested
* Release is tagged
* Release notes are drafted
* Release notes are reviewed by Docs and Product Management
* A new release of Indy-Crypto is part of this release
Notes",,,,,,,,,,,,,,,,,,IS-910,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzji7:",,,,Unset,Unset,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"default storage plugin should be loaded as any other plugin, and use same interface",IS-881,32686,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,danielhardman,danielhardman,09/Aug/18 4:36 AM,10/Sep/19 1:31 AM,28/Oct/23 2:49 AM,10/Sep/19 1:31 AM,,,1.10.0,,,,,0,,,,,"I believe that today, code in our internal wallet layer branches as follows:

if (default storage) {

    do x

} else {

   call the storage plugin that's active

}

This creates a situation where the default storage is never exercised as a storage plugin. We don't notice problems with the storage plugin infrastructure because most of our testing uses the default storage and thus takes an alternate path through the code.

I want the default storage to be loaded like any other plugin, so there is only a single path through the code. I suspect this will be slightly less efficient at runtime, but I don't think that is an important consideration; the value of a single code path and of the default storage telling us whether the storage plugin interface works seems far higher.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1051,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvtg:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),danielhardman,dkulic,esplinr,gudkov,ianco,jankokrstic,,,,,,"26/Oct/18 12:25 AM;ianco;[~danielhardman] please see the test approach outlined in indy-hipe PR 49 (wallet storage plug-in) and the related indy-sdk PR (#1247).  I'm proposing a method to ""shim"" a plug-in into the standard set of unit tests, which should address your concern here, as well as provide a facility to test new plug-ins (without a ton of new effort, since it re-uses existing tests).

 ;;;","26/Oct/18 2:28 AM;gudkov;[~ianco] [~danielhardman] Re-usage of part of current wallet tests as a test harness for walket storage plugin is a good idea, but I don’t like idea of making existing libindy test procedure to be generic over different storage or payment plugins. It will be really hard to explain for storage plugin developers and will not guide in storage plugin development at all as only 2% of tests are about plugin storage. Also it is very hard to consume as you need to work with libindy source code and hack cargo test. 

We can just use existing tests to create dedicated test harness library that can be executed in any language and installed with package manager. It will not cost a lot more as it will be based on the same existing tests, but will provide much better UX and don’t cause indirect hacks to libindy test procedure. ;;;","26/Oct/18 2:37 AM;gudkov;[~danielhardman] In current code base situation between default storage plugin and plugged storage separation is much better than you explained in ticket description. Both implements WalletStorage trait and the most of code is generic over this trait.  The layer of difference is very-very thin. 

Forcing DefaultStorage to be implemented as a C interface will cause 2-3 reallocation of each string in each wallet call and significantly reduce performance for high-load use cases. ;;;","30/Oct/18 1:47 AM;ianco;[~gudkov] thanks for your comments.

FYI regarding performance - we are running the Postgres walet storage as a plugin and haven't seen any noticeable performance impact when running under load.  (I expect that any high-volume/high performance applications will have to run with some storage other than the default SQLite, so will probably be running under the plugged model.)

 ;;;","22/Dec/18 4:38 AM;esplinr;[~danielhardman] and I discussed this issue, and I want to document my current thinking.

[~ianco] We do not expect that you will have a performance impact for the Postgres wallet storage as a plugin. Slava's concern is that the SQLite wallet storage is implemented in Rust and LibIndy is implemented in Rust, but the plugin interface expects a C-callable storage plugin. As a result, moving the default SQLite storage to use the plugin interface will force a conversion from Rust types to C types and back to Rust types. This will have a performance impact.

Daniel agrees that there will be a performance impact, but we don't think it will be enough to negate the benefits of having all storage methods implemented using the same plugin interface.

If our plugin interface is not adequate for implementing the default storage handler, we should reconsider the architecture of the plugin interface.

Having the default SQLite storage method implemented as a plugin does not prevent having tests specific to that storage method.

In my opinion, the default wallet storage should be implemented as a plugin. But migrating the current implementation does not provide much immediate value now that the Postgres and in-memory plugins are available to document and exercise the plugin interface.

We won't be doing this in the short term, but we will keep this story open to re-evaluate implementing after our current batch of work.;;;","10/Sep/19 1:31 AM;ianco;Was updated at some point, I can't remember;;;",,,,,,,,,,,,,,,,,,,,,,,,
Indy-SDK based CLI - Autorun Mode,IS-882,32690,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,zhigunenko.dsr,zhigunenko.dsr,09/Aug/18 4:09 PM,07/Sep/18 8:32 PM,28/Oct/23 2:49 AM,07/Sep/18 8:32 PM,,,,,,,,0,,,,,"For better user friendliness CLI should use mixed start mode
In this mode CLI read commands from certain file (like batch mode) but not closed in the end of file
If file isn't specified - use file with default name from ~/.indy_cli folder (which empty from scratch - and there is no difference relative to current behaviour)

User can preset their own autorun commands like pool connection, wallet opening, DID choise, plugin loading

FYI [~krw910] [~esplinr]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzm5j:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),zhigunenko.dsr,,,,,,,,,,,"07/Sep/18 8:32 PM;zhigunenko.dsr;*Reason to Close:*
Already implemented;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet API. Support simplified pwhash key derivation algorithm,IS-883,32701,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,Artemkaaas,Artemkaaas,10/Aug/18 12:01 AM,15/Aug/18 7:23 PM,28/Oct/23 2:49 AM,15/Aug/18 7:23 PM,,,,,,,,0,,,,,"Updated wallet credentials to support additional parameter `simplified_security`.
Using of this param allows choosing less secured but faster crypto algorithm for master key derivation. (interactive mode instead of moderate)
That allows speed up wallet operations.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Aug/18 7:22 PM;VladimirWork;IS-883.PNG;https://jira.hyperledger.org/secure/attachment/15585/IS-883.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzjjr:",,,,Unset,Unset,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,VladimirWork,,,,,,,,,,"10/Aug/18 12:05 AM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1059;;;","15/Aug/18 5:09 PM;Artemkaaas;Updated wallet credentials to support additional parameter`key_derivation_method` that can be one of 
* ARAGON2I_MOD - used by default
* ARAGON2I_INT - less secured but faster;;;","15/Aug/18 7:23 PM;VladimirWork;Build Info:
libindy 1.6.2 stable
python3-indy 1.6.2 stable

Actual Results:
 !IS-883.PNG|thumbnail! ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"CLI confirmation for ""dangerous"" commands",IS-884,32729,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Low,,,sergey.minaev,sergey.minaev,10/Aug/18 8:55 PM,10/Oct/19 9:42 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,Some operations in CLI may be dangerous. It's nice to have confirmation from user in interactive mode here.,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-877,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-273,,,No,,,Unset,No,,,"1|hzwvti:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,sergey.minaev,,,,,,,,,,"15/Sep/18 7:32 AM;esplinr;[~sergey.minaev] What are the specific commands that you recommend we add a confirmation to?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
libindy don't use state proof way for registered payment transactions,IS-885,32814,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,VladimirWork,sergey.minaev,sergey.minaev,14/Aug/18 8:54 PM,16/Aug/18 1:28 AM,28/Oct/23 2:49 AM,16/Aug/18 1:28 AM,,,,,,,,0,TShirt_S,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/18 1:27 AM;VladimirWork;IS-885.PNG;https://jira.hyperledger.org/secure/attachment/15588/IS-885.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzjjz:",,,,Unset,Unset,EV 18.16,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sergey.minaev,VladimirWork,,,,,,,,,,"14/Aug/18 9:02 PM;sergey.minaev;Build version: stable 1.6.2

Recommendation for QA:
- load plugin for payment with support of custom SP
- enable trace logs for libindy
- check that for payment request with custom SP produce trace with mentioning of {{SendOneRequest}} and {{Resend}} events, not {{SendAllRequest}};;;","16/Aug/18 1:28 AM;VladimirWork;Build Info:
libindy 1.6.2 stable
python3-indy 1.6.2 stable
libsovtoken 0.8.0+28.75

Actual Results:
 !IS-885.PNG|thumbnail! ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
libindy wallet api performance issue,IS-886,32815,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,gudkov,rajeshkalaria,rajeshkalaria,14/Aug/18 8:56 PM,29/Aug/18 8:29 PM,28/Oct/23 2:49 AM,29/Aug/18 8:29 PM,,,1.6.3,,,,,0,,,,,"We are seeing some performance issue with libindy (we are using 1.6.1 as of now).

Imagine, that there are 10 clients, who has libvcx (either via connect.me, verity-ui or some other way), and they all are trying to call libvcx’s *_‘agent provisioning’_* api parallely. It will result into sending all below mentioned agency api calls (sequential for same user, parallel for different users).

For few parallel calls (like till 3-5), we don’t see any issue, but as soon as we start increasing number of parallel requests, we see agency api takes more than expected time and timing out (basically, at takes good amount of time like 5 seconds, 10 seconds, 15 seconds etc at different wallet operations mentioned below). Based on my log analysis, one or other libindy api calls (mentioned below) are talking time (this is still initial investigation). I have tried to switch from ‘mysql’ to ‘default’ wallet type just to see if there is any significant difference. But even with ‘default’ wallet type, we are seeing the same issue.

Intel(R) Core(TM) i7-4700HQ CPU @ 2.40GHz 

We are only opening the wallet once (whether its agency’s wallet or user’s wallet)

 

Test results with different scenario:
 # When we only switched to libindy 1.6.2 (from 1.6.1) with default wallet, issue was still reproducing (so in a way we didn't see any observable difference)
 # Then when I added `key_derivation_method` = `ARAGON2I_INT` in credentials param {color:#0747a6}with 'default' wallet type{color}, {color:#de350b}only 10 parallel requests (the test case which we were trying from the beginning) works fine{color} (although api response time was still high, but somehow it was not that big enough and things were working fine).
 # When added `key_derivation_method` = `ARAGON2I_INT` in credentials param {color:#0747a6}with 'mysql' wallet type{color}, {color:#de350b}only 20-25 parallel requests (the test case which we were trying from the beginning) works fine{color} (although api response time was still high, but somehow it was not that big enough and things were working fine)

Indications:
 # Based on above test results, it seems core issue is still with libindy/wallet.
 # We can't use 'default' wallet, so for us, problem is still the same.

 

------------------------------------------------------------------------------------------------------------

Below are the sequential api call libvcx makes for its *_‘agent provisioning’_* api.

For each below mentioned agency api, I have mentioned what are the wallet operation, which wallet it uses to help you/us troubleshoot the issue.

 

*Connect*

    anon decrypt (uses agency agent wallet)

    auth decrypt (uses agency agent wallet)

    create new key (uses agency agent wallet)

    store their key (uses agency agent wallet)

    auth crypt response msg (uses agency agent wallet)

 

*Signup*

    anon decrypt (uses agency agent wallet)

    auth decrypt (uses agency agent wallet)

    auth crypt response msg (uses agency agent wallet)

 

*CreateAgent (will create and open a new wallet)*

    anon decrypt (uses agency agent wallet)

    auth decrypt (uses agency agent wallet)

    create new key (uses user agent wallet)

    store their key (uses user agent wallet)

    auth crypt response msg (uses agency agent wallet)

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv67:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,rajeshkalaria,,,,,,,,,,"15/Aug/18 9:21 PM;gudkov;[~rajeshkalaria] what are your target values?;;;","17/Aug/18 12:09 AM;rajeshkalaria;[~gudkov], 100 such use cases should work fine parallely?;;;","22/Aug/18 6:30 PM;rajeshkalaria;[~gudkov], although you guys are working on IS-897, and it may improve things for sure, I just wanted to mention that in our use case (which is mentioned in this story), if we try 50 (or 100) parallel requests, there will be that many new wallets will get created and opened. So, we'll have to still wait and see how much IS-897 fix will improve our use case.;;;","27/Aug/18 5:04 PM;gudkov;After IS-897 fixes we got the following feedback:

rajesh.kalaria [3:24 PM]
@vyacheslav.gudkov, I was integrating the changes and yes, now I don't see any libindy api call taking time, mostly all under 200-400 mills I guess
Now I am doing some refactoring in my code whereever it is taking time to make those agency api response time faster
so as of now, I don't see any issue in libindy calls, thanks guys
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Design for ""freshness"" in communication with IndyNode",IS-887,32816,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,sergey.minaev,sergey.minaev,14/Aug/18 9:07 PM,12/Oct/18 7:18 PM,28/Oct/23 2:49 AM,12/Oct/18 7:11 PM,,,1.7.0,,,,,0,,,,,"Problem:
 Indy Nodes can reply with outdated information for consequence read request after write (if this write affects on read result).

Scenario:
 - client send write request to all nodes
 - client collect f+1 consensus for successful write
 - client send read request and collect f+1 outdated response from other nodes
 - libindy pass outdated response to application

Possible solutions:
 1) libindy can try to guarantee increasing sequence of timestamp in node responses

Acceptance criteria:

- Design is done, documented and approved
- Implementation tickets created",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-845,,,,,IS-953,IS-954,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv53:",,,,Unset,Unset,EV 18.17,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),avkrishnan,gudkov,sergey.minaev,,,,,,,,,"01/Oct/18 12:44 PM;avkrishnan;[~gudkov] [~sergey.minaev] Any tentative estimate on when this fix would be available for consumption by vcx and app?;;;","10/Oct/18 10:44 PM;gudkov;[~danielhardman] [~sergey.minaev] [~avkrishnan] [~ashcherbakov] 

I added my latest vision to the document https://docs.google.com/document/d/1F_VqJDqxNN7GtUooO1owKDDPWT-ol0JlLh_8q_vArQk/edit#
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Payment API: Better support of currency units (denominations),IS-888,32820,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,MattRaffel,MattRaffel,14/Aug/18 11:52 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"h3. Description

Assumptions:
 * amounts (such as tokens) may have multiple units (denominations)
 * indy-sdk is payment agnostic so it doesn't understand how amounts can be converted between units

Payment Plugins will provide methods for use by UI to distinguish between whole and fractional tokens.

h3. Acceptance Criteria
 # get_amount_for_display & get_amount_for_display correctly calls payment plugin handlers
 # registration methods for payment handlers provided (how needs to be communicated to libsovtoken team)
 # libnullpay implements get_amount_for_display & get_amount_for_display  
 # unit tests
 # integration

_Corresponding work in libsovtoken_: [TOK-365|https://evernym.atlassian.net/browse/TOK-365] [TOK-366|https://evernym.atlassian.net/browse/TOK-366]

_Reference_: [POA|https://docs.google.com/document/d/1XE39fKefG-MROcACPIxwToWkldllVo6hkUiYokkZJB8/edit]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwyu7:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,MattRaffel,,,,,,,,,,"22/Aug/18 8:40 PM;esplinr;After a lot of discussion, it is clear that we don't yet know how people are going to interact with payments in GUI applications. We are going to wait for people to implement a few applications, and then evaluate what patterns emerge and what additional work the SDK should do to make it easier.

I'll remove this from the sprint.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As user running indy-cli, I need information about which nodes are available",IS-889,32842,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,ozheregelya,ozheregelya,15/Aug/18 7:06 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,Need to implement indy-cli command like `ping` to be able to know if some nodes are unavailable.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzmtb:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ozheregelya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging: Libindy python wrapper should integrate libindy logger with python logging facade,IS-890,32865,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,16/Aug/18 7:41 PM,31/Aug/18 1:08 AM,28/Oct/23 2:49 AM,31/Aug/18 1:08 AM,,,1.7.0,,,,,0,,,,,"Libindy Python wrapper should register python logger with libindy logging API to pipe logs from libindy into python logging facade.  In this case libindy logging will look for application as logging from regular python library and logging configuration will be significantly simplified.

Acceptance criteria:
 - Integration is implemented
 - Documentation is provided
 - Migration guide is updated
 - Manual testing is performed
 - Dependent teams (Indy Node) are notified about expected changes",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-896,,,No,,,Unset,No,,,"1|hzwv2f:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,,"22/Aug/18 9:06 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1069;;;","31/Aug/18 1:08 AM;gudkov;API implemented and tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging: Libindy java wrapper should integrate libindy logger with slf4j logging facade,IS-891,32866,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,16/Aug/18 7:41 PM,31/Aug/18 1:08 AM,28/Oct/23 2:49 AM,31/Aug/18 1:08 AM,,,1.7.0,,,,,0,,,,,"Libindy Java wrapper should register slf4j logger with libindy logging API to pipe logs from libindy into slf4j logging facade.  In this case libindy logging will look for application as logging from regular java library and logging configuration will be significantly simplified.

Acceptance criteria:
 - Integration is implemented
 - Documentation is provided
 - Migration guide is updated
 - Manual testing is performed
 - Dependent teams (Rajesh) are notified about expected changes",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-896,,,No,,,Unset,No,,,"1|hzwv3j:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,,"22/Aug/18 9:06 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1069;;;","31/Aug/18 1:08 AM;gudkov;API implemented and tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging: Libnullpay should reuse logger from libindy,IS-892,32869,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,16/Aug/18 8:11 PM,31/Aug/18 1:10 AM,28/Oct/23 2:49 AM,31/Aug/18 1:10 AM,,,1.7.0,,,,,0,,,,,"Libnullpay now uses own instance of env_logger to write logs. Libindy plugins should re-use logger from libindy. Libnullpay can get the logger by calling indy_get_logger API.



Acceptance criteria:
 - Integration is implemented in TDD approach
 - Documentation is provided
 - Manual testing is performed
 - Dependent teams (Sovtoken, Storage) are notified about expected changes

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-896,,,No,,,Unset,No,,,"1|hzwv3r:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,,"22/Aug/18 9:06 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1069;;;","31/Aug/18 1:09 AM;gudkov;API implemented and tested;;;","31/Aug/18 1:10 AM;gudkov;API implemented and tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging: Better logging for Indy CLI,IS-893,32871,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,gudkov,gudkov,16/Aug/18 8:15 PM,03/Sep/18 7:05 PM,28/Oct/23 2:49 AM,03/Sep/18 6:57 PM,,,1.7.0,,,,,0,,,,,"Current Indy CLI logging have the following problems:
 - It allows put logs to stdout/stderr only, but QA much more wants logging to file
 - It use it's own logger without piping logs from libindy. It just looks as the same logger because logs are written in the same format to stdout/stderr

We need the following:
 - Indy CLI should use libindy logging API to pipe logs from libindy into logger configured by Indy CLI
 - Indy CLI should use more flexible logger (log4rs?) that will allow writing logs to rotated file and to stdout/stderr
 - Indy CLI should provide the way to change logger configuration



Acceptance criteria:
 - Integration is implemented in TDD approach
 - Documentation is provided
 - Manual testing is performed
 - Dependent teams (Indy Node, QA, Customer) are notified about expected changes",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-921,,,,,,"01/Sep/18 12:55 AM;VladimirWork;IS-893.PNG;https://jira.hyperledger.org/secure/attachment/15766/IS-893.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-896,,,No,,,Unset,No,,,"1|hzwv2v:",,,,Unset,Unset,EV 18.17,EV 18.18,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,VladimirWork,,,,,,,,,"22/Aug/18 9:08 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1069;;;","01/Sep/18 12:55 AM;VladimirWork;We have *white* error strings from logger when we adding invalid parameter to .yml followed by successful green string so it's hard to see that we got some errors in config:  !IS-893.PNG|thumbnail! ;;;","03/Sep/18 6:53 PM;VladimirWork;Build Info:
indy-cli 1.6.4~740

Steps to Validate:
0. Create logger config file.
1. Enable logger for indy-cli using logger config file.
2. Run indy-cli and check that log file is created and contains info.
3. Check that there is no sensitive data in log file.

Actual Results:
Logger works as expected.;;;","03/Sep/18 7:05 PM;VladimirWork;Minor issue found is reported as separate ticket IS-921.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Logging: Indy Crypto should provide API for logger configuration that can be integrated with application logging approach.,IS-894,32873,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,16/Aug/18 8:27 PM,31/Aug/18 1:07 AM,28/Oct/23 2:49 AM,31/Aug/18 1:07 AM,,,1.7.0,,,,,0,,,,,"For the current moment Indy Crypto is linked with simple logger that outputs logs to stdout/stderr, but best practice for libraries is to use logger that will be provided by application to re-use application logging facilities.

We suggest the following:
 -  Indy Crypto should provide set_logger call that will allow application to register logging callbacks
 - or development purposes Indy Crypto should also provide set_default_logger call that will allow to register simple logger bundled with Indy Crypto. We can keep the same logger behavior as we have for now. I only suggest to disable logging by default.
 - Also we need to make Rust interface logging compatible with libindy. For now they are use different log crate version.

Acceptance criteria:
 - Follow design in IS-2
 - API is implemented with TDD aprroach
 - Good integration tests coverage is provided
 - Documentation is provided
 - Dependent teams (Indy Node) are notified about expected changes",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-896,,,No,,,Unset,No,,,"1|hzwv2n:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,,"22/Aug/18 9:07 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-crypto/pull/125;;;","31/Aug/18 1:07 AM;gudkov;API implemented and tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging: Indy Crypto python wrapper should integrate indy crypto logger with python logging facade,IS-895,32874,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,16/Aug/18 8:27 PM,31/Aug/18 1:07 AM,28/Oct/23 2:49 AM,31/Aug/18 1:07 AM,,,1.7.0,,,,,0,,,,,"Indy Crypto Python wrapper should register python logger with Indy Crypto logging API to pipe logs from Indy Crypto into python logging facade.  In this case Indy Crypto logging will look for application as logging from regular python library and logging configuration will be significantly simplified.

Acceptance criteria:
 - Integration is implemented
 - Documentation is provided
 - Migration guide is updated
 - Manual testing is performed
 - Dependent teams (Indy Node) are notified about expected changes",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-896,,,No,,,Unset,No,,,"1|hzwv33:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,,"22/Aug/18 9:08 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-crypto/pull/125;;;","31/Aug/18 1:07 AM;gudkov;API implemented and tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging,IS-896,32877,,Epic,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,16/Aug/18 9:32 PM,08/Oct/19 10:47 PM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-9,,Logging,Done,No,,,Unset,No,,,"1|hzzmxj:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wallet API: Move key derivation functionality to dedicated API endpoint,IS-897,32889,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,gudkov,gudkov,17/Aug/18 12:40 AM,27/Aug/18 11:21 PM,28/Oct/23 2:49 AM,27/Aug/18 11:21 PM,,,1.6.3,,,,,0,,,,,"For the current moment wallet create/open/delete/export/import functions consume passphrase and perform key derivation with aragon2i/aragon2m.

Depending on hardware aragon2 can require significant time for key derivation and significantly reduce performance of mobile and especially enterprise agents.

Key derivation isn't needed if key (or passphrase for now) is stored in secure enclave that is a common case for mobile and especially enterprise agents.

I suggest the following:

1. Move key derivation to the dedicated endpoint: indy_derive_wallet_key(config) -> key
 2. config will allow to choice between different derivation methods (random/aragon2i/aragon2m)
 3. Force create/open/delete/export/import functions to consume raw key instead of passphrase
4. Indy CLI should provide an option to choice key derriviation method (raw, argon2i, argon2m) 

Acceptance criteria:
 - Changes implemented in libindy and python/java/iOS/nodejs wrappers
 - Documentation updated
 - Migration guide updated
 - Test procedure updated

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-45,,,No,,,Unset,No,,,"1|hzzn07:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,VladimirWork,,,,,,,,,"27/Aug/18 4:28 PM;Artemkaaas;Changes:
    Added separate API function  `indy_generate_wallet_key` to generate a random wallet master key.
    Updated `key_derivation_method` parameter of  wallet `credentials to accept the addition type - `RAW`. By using this type, the result of `indy_generate_wallet_key` function can be passed as a wallet master key (key derivation will be skipped).;;;","27/Aug/18 5:43 PM;gudkov;Also we added key_derivation_method to all wallet related commands in cli to support different key derivation methods. QA team need to test this interfaces carefully.;;;","27/Aug/18 10:13 PM;VladimirWork;Build Info:
libindy / indy-cli 1.6.2~721
python3-indy 1.6.2.dev721

Steps to Validate:
1. Get base58 wallet key using generate_wallet_key method of python wrapper.
2. Create/open/close/delete wallet with key_derivation_method=raw and wallet key from previous step using indy-cli/python wrapper.
3. Create/open/close/delete wallets with other derivations methods using indy-cli.

Actual Results:
All actions with wallet work normally.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance: Implement concurrency improvements Step 2,IS-898,33038,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,gudkov,gudkov,20/Aug/18 5:28 PM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,libindy,,,0,,,,,"Implement concurrency improvements Step 2 described in corresponded HIPE: [https://github.com/hyperledger/indy-hipe/tree/master/text/0012-concurrency-improvement]


* Add configurable dedicated thread pool for inexpensive crypto
* Add configurable dedicated thread pool for expensive crypto
* Add dedicated thread for default wallet storage (we don't need pool as sqlite serializes queries)
* Async interface for pluggable storage (as result threading will be responsibility of storage implementation)
* All commands will be split to parts and each part will be executed on corresponded thread pool. As results there will be no command executor thread locking. As each thread pool will allow configuration application can create good threads configuration for maximum throughput and concurrency.

As managing of each command as STM will cause significant amount of boilerplate we can consider switching to more modern async-io approach (Futures, Promises, Async/Await). For example all, internal interfaces can return tokio.rs Future created with single-shot tokio channel message from thread pool. CommandExecutor will be tokio stream that handles composed Futures.

Acceptance criteria:

* Proposed solution implemented in libindy with TDD approach
* Automated test procedure provided
* Changes documented
* Migration guide updated
* Release notes updated",,,,,,,,,,,,,,,,,,IS-899,,,,,,,,,IS-660,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-659,,,No,,,Unset,No,,,"1|hzzomv:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance: Implement concurrency improvements Step 1,IS-899,33039,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,20/Aug/18 5:28 PM,12/Oct/18 9:11 PM,28/Oct/23 2:49 AM,12/Oct/18 9:11 PM,,,1.7.0,,libindy,,,0,,,,,"Implement concurrency improvements Step 1 described in corresponded HIPE: [https://github.com/hyperledger/indy-hipe/tree/master/text/0012-concurrency-improvement]

 * Implement usage of thread pool for the most expensive crypto.
 * Make size of this pool configurable

The main idea here is provide very small libindy refactoring. Make thread pool for long crypto operations and refactor corresponded commands to be STMs similar to ledger_send command. As result long blocking command will be executed on this thread pool and normal commands can be executed in parallel.

Acceptance criteria:

* Proposed solution implemented in libindy with TDD approach
* Automated test procedure provided
* Changes documented
* Migration guide updated
* Release notes updated",,,,,,,,,,,,,,,,,,,,IS-898,IS-966,,,,,,IS-660,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-659,,,No,,,Unset,No,,,"1|hzwv4v:",,,,Unset,Unset,EV 18.18,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,,"27/Sep/18 2:33 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1133;;;","11/Oct/18 8:51 PM;Artemkaaas;Changes: 
* Used thread pool to perform key derivation and calculation of credential definition.
* Added `indy_set_runtime_config` API function to set size of thread pool.
Build version: master-787;;;","12/Oct/18 9:11 PM;gudkov;Build issued, tests passed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy Java Wrapper eats the exception when it can't load libindy via jna,IS-900,33036,,Bug,New,IS,Indy SDK,software,resplin,,,Medium,,ignisvulpis,ignisvulpis,ignisvulpis,20/Aug/18 3:18 PM,29/Jan/20 12:22 AM,28/Oct/23 2:49 AM,,,,,,,,,0,help-wanted,,,,"Created from [https://github.com/hyperledger/indy-sdk/issues/966]

In java static blocks are not allowed to throw checked exceptions, so LibIndy is catching it.

LibIndy could throw a RuntimeException and force the application to crash. This not nice behavior if Indy support is an optional feature of the app.

 

I suggest to delete the static block and tell all applications that they should call some version of init(). Additionally all methods could check for the api being null and try to init() then.
[https://github.com/hyperledger/indy-sdk/blob/master/wrappers/java/src/main/java/org/hyperledger/indy/sdk/LibIndy.java#L181]
That would throw an exception that the app CAN catch.

//cc [~sergey.minaev]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwrhj:910sx0900009eoaiifohzzw",,,,Unset,Unset,Indy Aries 19.26,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,ignisvulpis,,,,,,,,,,"10/Jan/20 9:38 PM;Artemkaaas;Hello, [~ignisvulpis]

What do you mean by `Indy support is an optional feature of the app`?

You can get a runtime exception only after calling any Indy function. Otherwise, your app should work.
 I wrote a sample to confirm it. 
So, if indy is an optional library there are should not be problems.

We can't force calling `init()` function because it is a breaking change and anyway runtime exception still must be handled. 
I think we can delete catching of UnsatisfiedLinkError from the static block if it will be clearer.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy CLI does not see wallets created by Indy SDK,IS-901,33046,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,ckochenower,ckochenower,21/Aug/18 1:56 AM,19/Sep/18 11:34 PM,28/Oct/23 2:49 AM,19/Sep/18 11:34 PM,,,,,,,,0,,,,,"Indy CLI does not see wallets created by Indy SDK.

Steps to reproduce:

1. Login to a client with indy-cli and Indy SDK (python wrappers) installed. We will assume user `ubuntu`. By default, wallets will be created in /home/ubuntu/.indy_client/wallet.
2. Use Indy SDK to create a wallet with name ""chaosindy"". Once created, the contents of ~/.indy_client will be the following:
{code}
.
└── wallet
    └── chaosindy
        └── sqlite.db
{code}

3. Use Indy CLI to list all wallets. The following will be displayed:
{code}
indy> wallet list
There are no wallets
{code}

4. Try to create a wallet named ""chaosindy"" using Indy CLI. The following will be displayed:
{code}
indy> wallet create chaosindy key=chaosindy
Wallet ""chaosindy"" already exists
{code}

The following screenshot depicts the overall results. indy-cli is running in the terminal on the left and `cd ~/.indy_client && watch -n2 'tree'` is being run in the terminal on the right.

 !Screen Shot 2018-08-20 at 10.48.10 AM.png|thumbnail!  

Note that wallets that are created with Indy CLI have no problems when used by Indy SDK. This is strictly a problem encountered when trying to use wallets created by Indy SDK within Indy CLI.","$ pip3 freeze | grep indy
python3-indy==1.5.0.dev620

$ sudo apt list --installed | grep indy
indy-cli/xenial,now 1.6.1~701 amd64 [installed,upgradable to: 1.6.2~713]
libindy/xenial,now 1.6.1~701 amd64 [installed,upgradable to: 1.6.2~713]
libindy-crypto/xenial,now 0.4.1~53 amd64 [installed,upgradable to: 0.4.3]",,,,,,,,,,,,,,,,,,,,,,,,,,IS-988,,,,,,,,,,,"21/Aug/18 2:00 AM;ckochenower;Screen Shot 2018-08-20 at 10.48.10 AM.png;https://jira.hyperledger.org/secure/attachment/15715/Screen+Shot+2018-08-20+at+10.48.10+AM.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv7j:",,,,Unset,Unset,EV 18.19,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ckochenower,gudkov,,,,,,,,,,"22/Aug/18 5:13 PM;gudkov;Our chat with [~ckochenower]:

```
vyacheslav.gudkov [1 day ago]
@corin.kochenower It is expected. CLI stores additional metadata to lookup wallets and can find only wallet created by CLI. Indy SDK doesn't store this metadata and relies on application in this.


corin.kochenower [1 day ago]
I see. I'm not sure how many users are going to be managing wallets from both Indy SDK AND indy-cli on the same client.

Anyone who knows where the wallets are stored may be confused if they see a ~/.indy_client/wallet/<name> and Indy CLI says the wallet does not exist.


vyacheslav.gudkov [1 day ago]
To solve this we can add additional command to indy cli. Like wallet connect that will allow creation of wallet configuration for existing wallet.


corin.kochenower [1 day ago]
If we do that, I also recommend that `wallet list` list wallets that exist that are not ""connected"" (don't have metadata). Otherwise, the user of indy-cli would have to reconcile differences outside of the CLI interface.


corin.kochenower [1 day ago]
Maybe a `wallet list all` or something like that.


vyacheslav.gudkov [1 day ago]
It is impossible to find unconnected wallets. Wallet can be stored by any path or in MySQL database.


corin.kochenower [1 day ago]
Ah! True... Sounds like my suggestion will only work for wallets stored in Indy CLI's default location. (edited)


corin.kochenower [1 day ago]
I'm educated and unstuck now. Not sure how many others will get hung up on this.
```;;;","19/Sep/18 11:34 PM;gudkov;[~ckochenower]

I created the story IS-988 about implementation wallet attach/detach commands that will solve the issue. If wallet was created outside user can call wallet attach and provide configuration. After this wallet will look like created with CLI. 

Closing the issue in favor of story as i already implemented these commands.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default wallet does not close opened sqlite files,IS-902,33063,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Invalid,,nemanja.veskovic,nemanja.veskovic,21/Aug/18 6:32 PM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,libindy,wallet,,0,,,,,"In a longevity test for wallet I have a scenario where N threads creates X wallets ( where N>1, X>1 and N < X) and performs this set of actions

Each of N threads performs actions on a distinct subset of range [1, X] each having X/N wallets in a range
 # Pick random wallet from a range X~n~ , X~n+1~ - 1 where X~n~ is first wallet from range for that thread and X~n+1~ - 1 is the last wallet from the range
 # Create wallet if not already created
 # Add some item
 # Search items
 # Update item
 # Sometimes delete item
 # Close wallet
 # Repeat steps 1-7

Expected result: wallet storage files should be closed after step 7. and at every point of test run there should be a maximum of N storage files opened (maximum 1 storage per thread)

 

Actual result: wallet storage files remains opened causing system to get in state where there are too many files opened

 

In my test
 N = 25
 X = 4000
 count for each X~n~ , X~n+1~ - 1 = 1600

Here is the result of number of opened files for java process (pid is 19033)
{code:java}
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
64
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
80
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
92
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
96
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
100
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
100
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
100
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
100
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
100
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
100
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
100
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
100
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
100
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
100
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
104
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
108
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
140
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
164
[ec2-user@ip-10-31-2-197 libindy]$ lsof -p 19033 | grep ""/home/ec2-user/.indy_client/wallet/WalletLongevityTest"" | wc -l
188
 {code}",EC2 instance,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzznhr:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nemanja.veskovic,,,,,,,,,,,"21/Aug/18 8:33 PM;nemanja.veskovic;I'll close this down as invalid because test was not closing wallet searches in the run

here is the PR that should solve this

https://github.com/evernym/mysql-wallet-storage/pull/61;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Expose (did, verkey) generation from a seed at the SDK layer",IS-903,33079,,Improvement,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,ckochenower,ckochenower,22/Aug/18 5:05 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"indy.did.create_and_store_my_did both creates a (did, verkey) pair from an optional seed AND adds the did and verkey to a given wallet (handle).

The python wrapper...

https://github.com/hyperledger/indy-sdk/blob/f8de2c1e23e62670373d9fcea8695786c7422db9/wrappers/python/indy/did.py#L10

...calls the API...

https://github.com/hyperledger/indy-sdk/blob/f8de2c1e23e62670373d9fcea8695786c7422db9/libindy/src/api/did.rs#L48

...which in turn calls the ""Command"" to create and store a did...

https://github.com/hyperledger/indy-sdk/blob/f8de2c1e23e62670373d9fcea8695786c7422db9/libindy/src/commands/did.rs#L193

This command creates a did, verkey pair from an optional seed using a ""crypto_service"":

https://github.com/hyperledger/indy-sdk/blob/f8de2c1e23e62670373d9fcea8695786c7422db9/libindy/src/commands/did.rs#L204

The command only adds the did, verkey pair to the given wallet if and only if it does not already exist.

https://github.com/hyperledger/indy-sdk/blob/f8de2c1e23e62670373d9fcea8695786c7422db9/libindy/src/commands/did.rs#L204

There are use cases where all the SDK caller has is a seed. The caller does not know the did or the verkey, but needs the did and verkey to complete an operation.

It would be useful if the crypto_service.create_my_did functionality could be exposed at the SDK wrapper level so uses of the SDK can convert a seed to a did, verkey pair if the pair exists in a wallet or not.",,,,,,,,,,,,,,,,,,,,,,,,,,,INDY-1609,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzznjj:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ckochenower,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOS Wrapper: Remove from IOS wrapper registerWalletType,IS-904,33115,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,22/Aug/18 8:59 PM,30/Mar/19 1:10 PM,28/Oct/23 2:49 AM,31/Aug/18 1:12 AM,1.5,,1.6.4,,,,,0,help-wanted,,,,"This function should have been removed in Indy SDK 1.5 when we took the new approach to wallet storage:

indy-sdk/wrappers/ios/libindy-pod/Indy/Wrapper/IndyWallet.mm
Line 29 in 78cd762
 - (void)registerWalletType:(NSString *)type 

See:

https://github.com/hyperledger/indy-sdk/issues/1073",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzn0f:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,gudkov,,,,,,,,,"27/Aug/18 6:56 PM;Artemkaaas;Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1094/files;;;","31/Aug/18 1:12 AM;gudkov;API calls were removed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indy SDK support for Ubuntu 18.04,IS-905,33116,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,esplinr,esplinr,22/Aug/18 9:15 PM,19/Aug/19 7:20 PM,28/Oct/23 2:49 AM,06/Aug/19 12:33 AM,,,1.11.1,,build-delivery-pipelines,,,0,devops,,,,"*Acceptance Criteria*
* All components of Indy SDK should support Ubuntu 18.04.
* Support for Ubuntu 16.04 needs to continue (hardware updates end in October 2019 and security ends June 2021)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-906,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwrhj:910sx0900c",,,,Unset,Unset,Indy SDK 19.15,Indy SDK 19.16,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,VladimirWork,,,,,,,,"26/Jul/19 7:36 PM;sergey.minaev;Probably we can avoid local libsodium and use system default for Ubuntu 18.04;;;","01/Aug/19 5:24 PM;Artemkaaas;There are artifacts built within a test pipeline: https://repo.sovrin.org/sdk/lib/apt/bionic/test/
The final version of the pipeline will be merged later;;;","06/Aug/19 12:33 AM;VladimirWork;Build Info:
ubuntu 18.04
libindy=1.10.1~8
indy-cli=1.10.1~8
libnullpay=1.10.1~8
libvcx=0.3.2~8

Actual Results:
All packages was installed successfully. CLI works as expected.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Update build infrastructure docker images to use Ubuntu 18.04,IS-906,33117,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,esplinr,22/Aug/18 9:19 PM,19/Aug/19 7:20 PM,28/Oct/23 2:49 AM,15/Aug/19 10:12 PM,,,1.11.1,,build-delivery-pipelines,,,0,devops,,,,"Docker images used for continuous integration / continuous delivery (CI / CD) needs to be created for Ubuntu 18.04.

*Notes*
* The current images for Ubuntu 16.04 are a guide for how to proceed.
* We can either create new images or update the Ubuntu 16.04 images.

*TODO*
* We need to ensure sufficient hardware is available to support the additional platform. This will need to be provided by Hyperledger, the Sovrin Foundation, or Evernym.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-905,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwrhj:910sx0900o",,,,Unset,Unset,Indy SDK 19.15,Indy SDK 19.16,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,sergey.minaev,,,,,,,,,"02/Aug/19 10:04 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1765;;;","15/Aug/19 10:11 PM;sergey.minaev;Artifacts for Ubuntu 18.04 are available for new builds. [https://repo.sovrin.org/sdk/lib/apt/bionic/master/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move Linux builds to Hyperledger infrastructure,IS-907,33119,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,esplinr,esplinr,22/Aug/18 9:27 PM,08/Oct/19 10:53 PM,28/Oct/23 2:49 AM,08/Oct/19 10:53 PM,,,,,build-delivery-pipelines,,,0,devops,,,,"Indy SDK builds are currently hosted on Evernym infrastructure, and should move to Hyperledger infrastructure.

*Note*
* The CI / CD pipeline for Indy Node is a good example.
* Evernym infrastructure could continue to be used as a reserve in case of problems with Hyperledger infrastructure.",,,,,,,,,,,,,,,IS-344,,,,,,,,,,,,,,,,,IS-908,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-341,,,No,,,Unset,No,,,"1|hzznmf:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,"08/Oct/19 10:53 PM;esplinr;Instead of moving builds from Evernym to Hyperledger, all builds are now hosted by the Sovrin Foundation.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a plan for Hyperledger builds on non-Linux platforms,IS-908,33120,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Deferred,,esplinr,esplinr,22/Aug/18 9:31 PM,26/Aug/19 11:36 PM,28/Oct/23 2:49 AM,26/Aug/19 11:36 PM,,,,,build-delivery-pipelines,,,0,devops,,,,"Currently Evernym hosts the following builds:
* Android
* iOS
* Windows
* MacOSX

Hyperledger does not have infrastructure for hosting these builds. We should plan with Hyperledger how to proceed.",,,,,,,,,,,,,,,IS-344,,,,,,,,,,,,IS-907,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-341,,,No,,,Unset,No,,,"1|hzwrhj:910sx0900009eoa",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andkononykhin,esplinr,,,,,,,,,,"10/Oct/18 7:16 PM;andkononykhin;Possible options to acquire windows/macos resources on Hyperledger (suggested to explore by Hyperledger admin about a year ago): 
{quote}there is another project using packer for windows minions but it has proved very flaky. We have another project building OSX but they are renting mac minis from macstadium and that additional expense would need to be approved 
{quote} 
{quote}IoTivity is using windows via packer: [https://jenkins.iotivity.org/] for instance 
{quote} 
{quote}it looks like iotivity has an os x builder but it may have been retired. [https://jenkins.iotivity.org/computer/osx-10.10/] 
{quote};;;","26/Aug/19 11:36 PM;esplinr;We have moved all builds from Evernym infrastructure to infrastructure hosted by the Sovrin Foundation. It is working well and we no longer plan to move to Hyperledger resources.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Evaluate plans for improving the speed of builds,IS-909,33121,,Task,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,esplinr,esplinr,22/Aug/18 9:35 PM,09/Aug/19 8:23 PM,28/Oct/23 2:49 AM,,,,,,build-delivery-pipelines,,,0,devops,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzznmv:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,esplinr,,,,,,,,,,"09/Aug/19 8:23 PM;Artemkaaas;[~esplinr] Is it a duplication of IS-1345?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Prepare the 1.6.3 release of IndySDK,IS-910,33241,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,gudkov,27/Aug/18 5:49 PM,30/Aug/18 7:22 PM,28/Oct/23 2:49 AM,29/Aug/18 8:30 PM,,,,,,,,0,,,,,"Task Overview
Perform all necessary tasks in order to release LibIndy 1.6

Release scope:
* New indy_generate_wallet_key API and support of raw keys for wallet create/open/export that solves performance problems of agency (IS-897)
* Fix of IS-872 bug (incorrect set_did_metadata call behavior)
* Fix android build settings that should fix crashes on some platforms

Acceptance Criteria

* Code is tested
* Release is tagged
* Release notes are drafted
* Release notes are reviewed by Docs and Product Management",,,,,,,,,,,,,,,,,,IS-917,,IS-880,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzn0n:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance: Reduce unnesessary memory copy during params deserialization,IS-911,33242,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,27/Aug/18 6:03 PM,29/Aug/18 9:07 PM,28/Oct/23 2:49 AM,29/Aug/18 9:07 PM,,,,,,,,0,Perormance,,,,"Libindy now performs unnecessary memory copy during de-serialization of params:

- It converts null terminated string pointer into String (1 copy)
- It sends string into working thread (2 copy)
- It de-serializes String into struct (3 copy)


We can avoid one copy with the following:

1. Consume null terminated string as reference (CStr)
2. De-serialize referenced string into Struct on API layer
3. Send struct into working thread

The approach is partially implemented in https://github.com/hyperledger/indy-sdk/pull/1079, expect point 1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzn0v:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,,"29/Aug/18 9:07 PM;gudkov;Implemented in https://github.com/hyperledger/indy-sdk/pull/1096/files;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UX: Early static validation,IS-912,33248,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,gudkov,gudkov,27/Aug/18 10:49 PM,30/Aug/19 10:40 PM,28/Oct/23 2:49 AM,29/Aug/19 7:45 PM,,,1.11.1,,,,,0,UX,,,,"For the current moment libindy performs validation of structured params inside of command loop and it sometimes hard for developers to find the cause as requires complex logs analysis. In my vision we can call STATIC-only validation in API layer, but this validation must be defined in domain layer.

I suggest the following:

* We can can define trait Validatable with one method validate() -> Result<(), Error> in utils/validation
* For each domain struct that requires static validation we can implement this trait
* We can define additional macro check_usefull_valid_json! that will also call validate method on domain struct

One addition that i suggest is to return position error instead of CommonInvalidStructure here, but we need consensus here as it is breaking change, but the change is minor and affect only incorrectly written apps that can provide invalid structured jsons.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|i00x1u:i",,,,Unset,Unset,Indy SDK 19.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,sergey.minaev,,,,,,,,,"22/Aug/19 6:35 PM;Artemkaaas;Problem reason:
    - Libindy used to perform validation of structured params inside of command loop.

Changes:
    - Moved validation of params to the macro which is called at the very beginning of a function. 

PR:
    - https://github.com/hyperledger/indy-sdk/pull/1839;;;","29/Aug/19 7:45 PM;sergey.minaev;Merged to master and integration tests are adopted (extended) appropriately ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide option to reduce tags autocreated to reduce overhead in Enterprise scenario,IS-914,33301,,Improvement,To Develop,IS,Indy SDK,software,resplin,,,Medium,,sklump,swcurran,swcurran,29/Aug/18 7:14 AM,09/Aug/19 9:05 PM,28/Oct/23 2:49 AM,,,,,,wallet,,,0,,,,,"We are testing the Indy wallet at scale and finding a that the auto-creation of tags for all claims can in some cases be a detriment. We'd like to see if there can be an option to request that claim tags not be created.  We agree with the choice to make it the default for the more common cases of consumer-type Agents w/wallets, but in our case (TheOrgBook) the very large number of credentials make the tags problematic.

Here are the stats after we loaded about 1M credentials into an instance of TheOrgBook using a test instance of the production source system we'll be using:
 * table items = 3.8 GB (these are the credentials)
 * indexes on items = ~100 MB
 * table tags_encrypted = 3.2 GB
 * indexes on tags_encrypted = ~ 6.2 GB

In the case of TheOrgBook, about 60% of the data is tags, and we don't need them - we're querying using CredentialID (which is working very well!).  We think this will reduce storage requirements and improve processing speed.  We are planning to have a number of ""mass update"" events as we bring on additional services, so speed matters, and we'll have many, many Credentials in the database, making size important.

Would it be reasonable to have an optional parameter on the ""store credential"" call that allows us to provide a (potentially empty) list of claims names to be added as tags?

 

 

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|i002yt:ztzi",,,,Unset,Unset,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,sklump,swcurran,,,,,,,,,"09/Aug/19 8:18 PM;Artemkaaas;[~swcurran]
I guess this functionality was provided in the scope of PR: https://github.com/hyperledger/indy-sdk/pull/1661;;;","09/Aug/19 9:05 PM;sklump;This PR https://github.com/hyperledger/indy-sdk/pull/1661 addresses the issue. Credential attribute tagging policy has been in master since indy-sdk 1.10.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Android: Armv7 build produces broken artifacts for libindy and libnullpay,IS-915,33313,,Bug,Complete,IS,Indy SDK,software,resplin,,,Highest,Done,sergey.minaev,gudkov,gudkov,29/Aug/18 6:23 PM,31/Aug/18 1:12 AM,28/Oct/23 2:49 AM,31/Aug/18 1:12 AM,,,1.6.4,,deployment,,,0,,,,,"Armv7 build produces broken artifacts for libindy and libnullpay. It is reproduced on master from 29 Aug and on 1.6.3 stable. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzn13:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,,"31/Aug/18 1:12 AM;gudkov;It was fixed and validated on 1.6.4 release build;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI hides node error responses,IS-916,33347,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,zhigunenko.dsr,zhigunenko.dsr,30/Aug/18 6:03 PM,06/Sep/18 11:06 PM,28/Oct/23 2:49 AM,06/Sep/18 11:06 PM,,,1.6.5,,,,,0,,,,,"Numerous different Node replies are masked by the one message in CLI (real root cause available only with trace logs)

*Actual results:*
{code}
Invalid format of command params. Please check format of posted JSONs, Keys, DIDs and etc...
pool(p1):wallet(w1):did(V4S...e6f):indy> TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply(""{\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\"",\""reqId\"":1535540990763619226,\""reason\"":\""client request invalid: InvalidClientRequest(\'V4SGRU86Z58d6TV7PBUe6f can have one and only one SCHEMA with name gvt and version 1.0\',)\"",\""op\"":\""REJECT\""}"", ""Node2""))

Invalid format of command params. Please check format of posted JSONs, Keys, DIDs and etc...
pool(p1):wallet(w1):did(V4S...e6f):indy> TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply(""{\""op\"":\""REJECT\"",\""reason\"":\""client request invalid: InvalidClientRequest(\'dest should be added before adding attribute for it\',)\"",\""reqId\"":1535541703423193143,\""identifier\"":\""V4SGRU86Z58d6TV7PBUe6f\""}"", ""Node1""))
{code}

*Expected Results:*
V4SGRU86Z58d6TV7PBUe6f can have one and only one SCHEMA with name gvt and version 1.0

dest should be added before adding attribute for it",indy-cli 1.6.2~723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvyv:",,,,Unset,Unset,EV 18.18,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,zhigunenko.dsr,,,,,,,,,"30/Aug/18 7:17 PM;gudkov;It seems like regression in the latest builds of CLI;;;","03/Sep/18 10:55 PM;Artemkaaas;Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1105
Changes:  Parsing of transaction fees moved below parsing of body;;;","06/Sep/18 11:06 PM;zhigunenko.dsr;*Environment:*
indy-cli                   1.6.5~21
libindy                    1.6.5~21

*Steps to Validate:*
{code:java}
ledger schema name=gvt version=1.0 attr_names=name,age
ledger schema name=gvt version=1.0 attr_names=name,age
ledger attrib did=VsKV7grR1BUE29mG2Fm2kX enc=aa3f41f619aa7e5e6b6d0d
{code}

*Actual Results:*
CLI show ""NodeReply"" content as Error Message.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Prepare the 1.6.4 release of IndySDK,IS-917,33350,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,Artemkaaas,gudkov,30/Aug/18 7:22 PM,31/Aug/18 3:33 PM,28/Oct/23 2:49 AM,31/Aug/18 3:33 PM,,,,,,,,0,,,,,"Task Overview
Perform all necessary tasks in order to release LibIndy 1.6.4

Release scope:
* ARMv7 build fixes
* Workaround for Android file copy permission error
* Minor bugfixes

Acceptance Criteria

* Code is tested
* Release is tagged
* Release notes are drafted
* Release notes are reviewed by Docs and Product Management",,,,,,,,,,,,,,,,,,,,IS-910,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzn1b:",,,,Unset,Unset,EV 18.17,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wallet_open crashes if libindy is linked with the latest libsodium,IS-918,33398,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,31/Aug/18 6:00 PM,13/Sep/18 9:09 PM,28/Oct/23 2:49 AM,13/Sep/18 9:09 PM,,,1.6.5,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvyn:",,,,Unset,Unset,EV 18.18,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,sergey.minaev,,,,,,,,,,"04/Sep/18 8:45 PM;sergey.minaev;PR with fix [https://github.com/hyperledger/indy-sdk/pull/1110]
Build version 1.6.4 master 744

will be available in 1.6.x release branch as part of [https://github.com/hyperledger/indy-sdk/pull/1112] merge

Recommendation for QA:
* check compatibility of wallet export and open from previous master to current one for interactive and moderate mode of key derivation
* (optional) try both version of system libsodium library (1.0.14 as base now and 1.0.16 - the latest one);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade path broken from indy-pool.dockerfile in indy-sdk 1.4.0 to current indy-node protocol version,IS-919,33408,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,sklump,sklump,01/Sep/18 3:09 AM,21/Sep/18 10:03 PM,28/Oct/23 2:49 AM,21/Sep/18 10:03 PM,1.4,1.6.2,,,libindy,,,0,ledger,upgrade,,,"I'm not sure whether this belongs properly in indy-node or indy-sdk.

I need to simulate:
 * running current von_anchor (based on current indy-sdk) on the existing sovrin node pool, which runs indy-node 1.3.62
 * generating some credentials in indy-sdk 1.6.x wallets
 * upgrading the node pool
 * working with the credentials to create and verify proof, make sure nothing breaks

before the SLN upgrade runs for real.

I've had to tweak the indy-pool.dockerfile a bit to get it to build, using versions on which indy-node 1.3.62 depends:
 ```
 ARG indy_plenum_ver=1.2.42
 ARG indy_anoncreds_ver=1.0.11
 ARG indy_node_ver=1.3.62
 ARG python3_indy_crypto_ver=0.4.1
 ARG indy_crypto_ver=0.4.0

RUN apt-get update -y && apt-get install -y \
 python3-base58=0.2.4 \
 indy-plenum=${indy_plenum_ver} \
 indy-anoncreds=${indy_anoncreds_ver} \
 indy-node=${indy_node_ver} \
 python3-indy-crypto=${python3_indy_crypto_ver} \
 libindy-crypto=${indy_crypto_ver} \
 vim
 ```
 (adding python3-base58 version that indy-plenum requires)
 and
 ```
 [program:node1]\n\
 command=start_indy_node Node1 9701 9702\n\
 ...
 ```
 etc (taking out IP addresses).

I build and start the container, get a bash prompt on it as root `docker exec -u root -it jovial_payne bash` and `start_node_control_tool`.

I start the test suite and finish it with

```

in_1_min = '{}+00:00'.format((datetime.utcnow() + timedelta(seconds=60)).isoformat())

req_json = await build_pool_upgrade_request(
      tan.did,
     'upgrade-pool',
     '1.6.71',
     'start',
     'f6f2ea8f45d8a057c9566a33f99474da2e5c6a6604d736121650e2730c6fb0a3',
     None,
     json.dumps(

{         'Gw6pDLhcBcoQesN72qfotTgFa7cbuqZpkX3Xo6pLhPhv': in_1_min,         '8ECVSk179mjsjKRLWiQtssMLgp6EPhWXtaYyStWPSGAb': in_1_min,         'DKVxG2fXXTU8yT5N7hGEbXB3dfdAnYv1JczDUHpmDxya': in_1_min,         '4PS3EDQ3dW1tci1Bp6543CfuuebjFrg36kLAUcskGfaA': in_1_min}

),
     None,
     False,
     True,
     None)
     print('\n\n== 79 == Upgrade request: {}'.format(ppjson(req_json)))

    resp_json = await sign_and_submit_request(tan.pool.handle, tan.wallet.handle, tan.did,  req_json)
     print('\n\n== 80 == Upgrade response: {}'.format(ppjson(resp_json)))
 ```

and the output shows that the request seems OK. In a minute, the output on the docker container shows the node control script attempting to perform the upgrade:
 ```

2018-08-31 17:59:57,895 | DEBUG | __init__.py ( 60) | register | Registered VCS backend: git
 2018-08-31 17:59:57,960 | DEBUG | __init__.py ( 60) | register | Registered VCS backend: hg
 2018-08-31 17:59:58,027 | DEBUG | __init__.py ( 60) | register | Registered VCS backend: svn
 2018-08-31 17:59:58,029 | DEBUG | __init__.py ( 60) | register | Registered VCS backend: bzr
 2018-08-31 17:59:58,176 | INFO | node_control_tool.py ( 75) | __init__ | Node control tool is starting up on localh ost port 30003
 2018-08-31 17:59:59,339 | DEBUG | node_control_tool.py ( 288) | start | Waiting for the next event

2018-08-31 18:03:24,226 | DEBUG | node_control_tool.py ( 297) | start | New connection from ('127.0.0.1', 59466) on f d 4
 2018-08-31 18:03:24,226 | DEBUG | node_control_tool.py ( 288) | start | Waiting for the next event
 2018-08-31 18:03:24,228 | DEBUG | node_control_tool.py ( 305) | start | Received ""b'\{""version"": ""1.6.71""}'"" from ('12 7.0.0.1', 59466) on fd 4
 2018-08-31 18:03:24,228 | DEBUG | node_control_tool.py ( 243) | _process_data | Decoded
 2018-08-31 18:03:24,229 | INFO | node_control_tool.py ( 225) | _upgrade | Trying to upgrade from 1.3.62 to 1.6.71
 2018-08-31 18:03:24,230 | INFO | node_control_tool.py ( 139) | _call_upgrade_script | Upgrading indy node to version 1.6.71, test_mode 0
 2018-08-31 18:03:24,231 | INFO | node_control_tool.py ( 118) | _get_deps_list | Getting dependencies for indy-node=1 .6.71

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

2018-08-31 18:03:28,437 | INFO | node_control_tool.py ( 118) | _get_deps_list | Getting dependencies for indy-plenum =1.6.50

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

2018-08-31 18:03:31,890 | INFO | node_control_tool.py ( 118) | _get_deps_list | Getting dependencies for python3-indy-crypto=0.4.1

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

2018-08-31 18:03:35,382 | INFO | node_control_tool.py ( 118) | _get_deps_list | Getting dependencies for indy-anoncreds=1.0.11

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

+ deps=' indy-anoncreds=1.0.11 python3-indy-crypto=0.4.1 indy-plenum=1.6.50 indy-node=1.6.71'
 + '[' -z ' indy-anoncreds=1.0.11 python3-indy-crypto=0.4.1 indy-plenum=1.6.50 indy-node=1.6.71' ']'
 + echo 'Try to donwload indy version indy-anoncreds=1.0.11 python3-indy-crypto=0.4.1 indy-plenum=1.6.50 indy-node=1. 6.71'
 Try to donwload indy version indy-anoncreds=1.0.11 python3-indy-crypto=0.4.1 indy-plenum=1.6.50 indy-node=1.6.71
 + apt-get -y update
 Hit:1 [http://archive.ubuntu.com/ubuntu] xenial InRelease
 Get:2 [http://security.ubuntu.com/ubuntu] xenial-security InRelease [107 kB]
 Get:3 [http://archive.ubuntu.com/ubuntu] xenial-updates InRelease [109 kB]
 Ign:4 [https://repo.sovrin.org/deb] xenial InRelease
 Hit:5 [http://archive.ubuntu.com/ubuntu] xenial-backports InRelease
 Hit:6 [https://repo.sovrin.org/deb] xenial Release
 Fetched 216 kB in 1s (206 kB/s)
 Reading package lists... Done
 + apt-get --download-only -y --allow-downgrades --allow-change-held-packages install indy-anoncreds=1.0.11 python3-indy- crypto=0.4.1 indy-plenum=1.6.50 indy-node=1.6.71
 Reading package lists... Done
 Building dependency tree
 Reading state information... Done
 indy-anoncreds is already the newest version (1.0.11).
 python3-indy-crypto is already the newest version (0.4.1).
 The following package was automatically installed and is no longer required:
 python3-pkg-resources
 Use 'apt autoremove' to remove it.
 The following NEW packages will be installed:
 python3-pympler
 The following held packages will be changed:
 indy-node indy-plenum
 The following packages will be upgraded:
 indy-node indy-plenum python3-base58
 3 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
 Need to get 1474 kB of archives.
 After this operation, 1192 kB of additional disk space will be used.
 Get:1 [https://repo.sovrin.org/deb] xenial/stable amd64 indy-node amd64 1.6.71 [587 kB]
 Get:2 [https://repo.sovrin.org/deb] xenial/stable amd64 indy-plenum amd64 1.6.50 [735 kB]
 Get:3 [https://repo.sovrin.org/deb] xenial/stable amd64 python3-base58 amd64 1.0.0 [5268 B]
 Get:4 [https://repo.sovrin.org/deb] xenial/stable amd64 python3-pympler amd64 0.5 [147 kB]
 Fetched 1474 kB in 2s (648 kB/s)
 Download complete and in download only mode
 + ret=0
 + '[' 0 -ne 0 ']'
 + '[' '' = '' ']'
 + echo 'Stop indy-node'
 Stop indy-node
 + systemctl stop indy-node
 Failed to connect to bus: No such file or directory
 + echo 'Run indy upgrade to indy-anoncreds=1.0.11 python3-indy-crypto=0.4.1 indy-plenum=1.6.50 indy-node=1.6.71'
 Run indy upgrade to indy-anoncreds=1.0.11 python3-indy-crypto=0.4.1 indy-plenum=1.6.50 indy-node=1.6.71
 + apt-get -y --allow-downgrades --allow-change-held-packages --reinstall install indy-anoncreds=1.0.11 python3-indy-cryp to=0.4.1 indy-plenum=1.6.50 indy-node=1.6.71
 Reading package lists... Done
 Building dependency tree
 Reading state information... Done
 The following package was automatically installed and is no longer required:
 python3-pkg-resources
 Use 'apt autoremove' to remove it.
 The following additional packages will be installed:
 python3-base58 python3-pympler
 The following NEW packages will be installed:
 python3-pympler
 The following held packages will be changed:
 indy-node indy-plenum
 The following packages will be upgraded:
 indy-node indy-plenum python3-base58
 3 upgraded, 1 newly installed, 2 reinstalled, 0 to remove and 0 not upgraded.
 Need to get 46.4 kB/1520 kB of archives.
 After this operation, 1192 kB of additional disk space will be used.
 Get:1 [https://repo.sovrin.org/deb] xenial/stable amd64 indy-anoncreds amd64 1.0.11 [41.0 kB]
 Get:2 [https://repo.sovrin.org/deb] xenial/stable amd64 python3-indy-crypto amd64 0.4.1 [5456 B]
 Fetched 46.4 kB in 0s (48.3 kB/s)
 debconf: delaying package configuration, since apt-utils is not installed
 (Reading database ... 21530 files and directories currently installed.)
 Preparing to unpack .../indy-node_1.6.71_amd64.deb ...
 Unpacking indy-node (1.6.71) over (1.3.62) ...
 Selecting previously unselected package python3-pympler.
 Preparing to unpack .../python3-pympler_0.5_amd64.deb ...
 Unpacking python3-pympler (0.5) ...
 Preparing to unpack .../indy-plenum_1.6.50_amd64.deb ...
 Unpacking indy-plenum (1.6.50) over (1.2.42) ...
 Preparing to unpack .../python3-base58_1.0.0_amd64.deb ...
 Unpacking python3-base58 (1.0.0) over (0.2.4) ...
 Preparing to unpack .../indy-anoncreds_1.0.11_amd64.deb ...
 Unpacking indy-anoncreds (1.0.11) over (1.0.11) ...
 Preparing to unpack .../python3-indy-crypto_0.4.1_amd64.deb ...
 Unpacking python3-indy-crypto (0.4.1) over (0.4.1) ...
 Setting up python3-base58 (1.0.0) ...
 Setting up python3-pympler (0.5) ...
 Setting up python3-indy-crypto (0.4.1) ...
 Setting up indy-plenum (1.6.50) ...
 Setting up indy-anoncreds (1.0.11) ...
 Setting up indy-node (1.6.71) ...
 + ret=0
 + '[' 0 -ne 0 ']'
 2018-08-31 18:03:54,524 | DEBUG | node_control_tool.py ( 170) | _create_backup | Creating backup for 1.3.62
 2018-08-31 18:03:54,664 | INFO | migration_tool.py ( 52) | migrate | Migrating from 1.3.62 to 1.6.71 on Ubunt u
 2018-08-31 18:03:54,668 | DEBUG | migration_tool.py ( 54) | migrate | Found migration scripts: ['1_0_28_to_1_0 _29', '1_1_37_to_1_1_38', '1_1_43_to_1_2_44', '1_2_44_to_1_2_45', '1_2_50_to_1_2_51', '1_2_51_to_1_2_52', '1_3_396_to _1_3_397', '1_3_428_to_1_3_429', '1_3_433_to_1_3_434', '1_4_500_to_1_4_501', 'disabled_1_0_29_to_1_0_28', 'helper_1_0 _28_to_1_0_29', 'helper_1_1_37_to_1_1_38']
 2018-08-31 18:03:54,671 | INFO | migration_tool.py ( 61) | migrate | Following migrations will be applied: [' 1_3_396_to_1_3_397', '1_3_428_to_1_3_429', '1_3_433_to_1_3_434', '1_4_500_to_1_4_501']
 2018-08-31 18:03:54,673 | INFO | migration_tool.py ( 63) | migrate | Applying migration 1_3_396_to_1_3_397
 2018-08-31 18:03:54,674 | INFO | migration_tool.py ( 35) | _call_migration_script | script path /usr/local/li b/python3.5/dist-packages/data/migrations/deb/1_3_396_to_1_3_397.py
 Traceback (most recent call last):
 File ""/usr/local/lib/python3.5/dist-packages/data/migrations/deb/1_3_396_to_1_3_397.py"", line 79, in migrate_storage
 leveldb_storage = KeyValueStorageLeveldbCls(level_db_dir, db_name, read_only=True)
 File ""/usr/local/lib/python3.5/dist-packages/storage/kv_store_leveldb_int_keys.py"", line 12, in __init__
 super().__init__(db_dir, db_name, open, read_only)
 File ""/usr/local/lib/python3.5/dist-packages/storage/kv_store_leveldb.py"", line 22, in __init__
 self.open()
 File ""/usr/local/lib/python3.5/dist-packages/storage/kv_store_leveldb_int_keys.py"", line 16, in open
 'IntegerComparator', integer_comparator))
 leveldb.LevelDBError: IO error: lock /var/lib/indy/sandbox/data/Node4/pool_transactions/LOCK: Resource temporarily unavailable
 None
 Could not open leveldb storage: /var/lib/indy/sandbox/data/Node4/pool_transactions
 Could not migrate pool_transactions, DB path: /var/lib/indy/sandbox/data/Node4/pool_transactions
 Storages migration from LevelDB to RocksDB failed!
 2018-08-31 18:03:55,570 | ERROR | migration_tool.py ( 44) | _call_migration_script | Migration failed: script returned 1
 2018-08-31 18:03:55,571 | DEBUG | node_control_tool.py ( 175) | _restore_from_backup | Restoring from backup for 1.3.62
 2018-08-31 18:03:55,572 | WARNING | node_control_tool.py ( 182) | _restore_from_backup | Copying last_version failed due to [Errno 2] No such file or directory: '/var/lib/indy/sandbox/last_version'
 2018-08-31 18:03:55,572 | WARNING | node_control_tool.py ( 182) | _restore_from_backup | Copying next_version failed due to [Errno 2] No such file or directory: '/var/lib/indy/sandbox/next_version'
 2018-08-31 18:03:55,573 | WARNING | node_control_tool.py ( 182) | _restore_from_backup | Copying upgrade_log failed due to [Errno 2] No such file or directory: '/var/lib/indy/sandbox/upgrade_log'
 2018-08-31 18:03:55,573 | WARNING | node_control_tool.py ( 182) | _restore_from_backup | Copying last_version_file failed due to [Errno 2] No such file or directory: '/var/lib/indy/sandbox/last_version_file'
 2018-08-31 18:03:55,721 | WARNING | node_control_tool.py ( 191) | _restore_from_backup | Copying last_version failed due to [Errno 2] No such file or directory: '/tmp/.indy_tmp/last_version'
 2018-08-31 18:03:55,721 | WARNING | node_control_tool.py ( 191) | _restore_from_backup | Copying next_version failed due to [Errno 2] No such file or directory: '/tmp/.indy_tmp/next_version'
 2018-08-31 18:03:55,722 | WARNING | node_control_tool.py ( 191) | _restore_from_backup | Copying upgrade_log failed due to [Errno 2] No such file or directory: '/tmp/.indy_tmp/upgrade_log'
 2018-08-31 18:03:55,722 | WARNING | node_control_tool.py ( 191) | _restore_from_backup | Copying last_version_file failed due to [Errno 2] No such file or directory: '/tmp/.indy_tmp/last_version_file'
 2018-08-31 18:03:55,726 | ERROR | node_control_tool.py ( 259) | _declare_upgrade_failed | Upgrade from 1.3.62 to 1.6.71 failed: Migration failed: script returned 1
 2018-08-31 18:03:55,726 | ERROR | node_control_tool.py ( 235) | _upgrade | Trying to rollback to the previous version Migration failed: script returned 1
 2018-08-31 18:03:55,727 | INFO | node_control_tool.py ( 225) | _upgrade | Trying to upgrade from 1.3.62 to 1.3.62
 2018-08-31 18:03:55,728 | INFO | node_control_tool.py ( 139) | _call_upgrade_script | Upgrading indy node to version 1.3.62, test_mode 0
 2018-08-31 18:03:55,729 | INFO | node_control_tool.py ( 118) | _get_deps_list | Getting dependencies for indy-node=1.3.62

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

2018-08-31 18:03:59,368 | INFO | node_control_tool.py ( 118) | _get_deps_list | Getting dependencies for indy-plenum=1.2.42

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

2018-08-31 18:04:02,668 | INFO | node_control_tool.py ( 118) | _get_deps_list | Getting dependencies for python3-indy-crypto=0.4.1

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

2018-08-31 18:04:06,156 | INFO | node_control_tool.py ( 118) | _get_deps_list | Getting dependencies for indy-anoncreds=1.0.11

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

+ deps=' indy-anoncreds=1.0.11 python3-indy-crypto=0.4.1 indy-plenum=1.2.42 indy-node=1.3.62'
 + '[' -z ' indy-anoncreds=1.0.11 python3-indy-crypto=0.4.1 indy-plenum=1.2.42 indy-node=1.3.62' ']'
 + echo 'Try to donwload indy version indy-anoncreds=1.0.11 python3-indy-crypto=0.4.1 indy-plenum=1.2.42 indy-node=1.3.62'
 Try to donwload indy version indy-anoncreds=1.0.11 python3-indy-crypto=0.4.1 indy-plenum=1.2.42 indy-node=1.3.62
 + apt-get -y update
 Get:1 [http://security.ubuntu.com/ubuntu] xenial-security InRelease [107 kB]
 Hit:2 [http://archive.ubuntu.com/ubuntu] xenial InRelease
 Get:3 [http://archive.ubuntu.com/ubuntu] xenial-updates InRelease [109 kB]
 Ign:4 [https://repo.sovrin.org/deb] xenial InRelease
 Hit:5 [http://archive.ubuntu.com/ubuntu] xenial-backports InRelease
 Hit:6 [https://repo.sovrin.org/deb] xenial Release
 Fetched 216 kB in 0s (224 kB/s)
 Reading package lists... Done
 + apt-get --download-only -y --allow-downgrades --allow-change-held-packages install indy-anoncreds=1.0.11 python3-indy-crypto=0.4.1 indy-plenum=1.2.42 indy-node=1.3.62
 Reading package lists... Done
 Building dependency tree
 Reading state information... Done
 indy-anoncreds is already the newest version (1.0.11).
 python3-indy-crypto is already the newest version (0.4.1).
 Some packages could not be installed. This may mean that you have
 requested an impossible situation or if you are using the unstable
 distribution that some required packages have not yet been created
 or been moved out of Incoming.
 The following information may help to resolve the situation:

The following packages have unmet dependencies:
 indy-plenum : Depends: python3-base58 (= 0.2.4) but 1.0.0 is to be installed
 E: Unable to correct problems, you have held broken packages.
 + ret=100
 + '[' 100 -ne 0 ']'
 + echo 'Failed to obtain indy-anoncreds=1.0.11 python3-indy-crypto=0.4.1 indy-plenum=1.2.42 indy-node=1.3.62'
 Failed to obtain indy-anoncreds=1.0.11 python3-indy-crypto=0.4.1 indy-plenum=1.2.42 indy-node=1.3.62
 + exit 1

2018-08-31 18:06:31,572 | ERROR | node_control_tool.py ( 259) | _declare_upgrade_failed | Upgrade from 1.3.62 to 1.3.62 failed: upgrade script failed, exit code is 1
 2018-08-31 18:06:31,575 | ERROR | node_control_tool.py ( 235) | _upgrade | Trying to rollback to the previous version upgrade script failed, exit code is 1
 ```

It appears that different packages want different versions of base58 installed at the same time.",ubuntu 16.04,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvyf:",,,,Unset,Unset,EV 18.19,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sklump,VladimirWork,,,,,,,,,,"01/Sep/18 3:22 AM;sklump;If I hot-swap `{{pip install base58==0.2.4}}` underneath the node control tool on the docker container to match the dependency in indy-plenum, the migration script `{{1_3_396_to_1_3_397.py}}` chokes with a stack trace ending in

 

{{```
File ""/usr/local/lib/python3.5/dist-packages/plenum/common/messages/fields.py"", line 350, in Base58Field
    _alphabet = set(base58.alphabet.decode(""utf-8""))
AttributeError: 'str' object has no attribute 'decode'
```}}
and I see that [base58.py|http://base58.py/] v0.2.4 had `{{alphabet}}` as a `{{str}}` where v1.0.0 has it as a `{{bytes}}`.

It could be as simple as finding these and using `{{set(base58.alphabet.decode('utf-8') if isinstance(base58.alphabet, bytes) else base58.alphabet}}` instead, then relaxing the requirements to base58>=0.2.4 throughout?;;;","03/Sep/18 4:57 PM;VladimirWork;[~sklump] indy-pool.dockerfile builds pool in one container with 4 processes of indy-node and it's impossible to perform pool upgrade with this pool since indy-node-control stops indy-node service using systemctl before upgrade and starts it the same way after. If you want to perform pool upgrade you should use this https://github.com/hyperledger/indy-node/tree/master/environment/docker/pool to install fair pool (one node - one docker container, indy-node as system service, not as python process).;;;","21/Sep/18 9:12 PM;sklump;This ticket is kind of an artifact of history now. It might still be interesting to be able to support upgrading the node pool of the indy-pool.dockerfile that indy-sdk includes, but it is not essential, at least for us. For this, it's best to stand up a real indy node pool as Mr. Vladimir Shishkin recommends via indy-node.

It is possible to stand up an indy-node 1.3.62 pool like this:

1:
```
git clone https://github.com/hyperledger/indy-node
cd indy-node
```
2: Apply this diff:
```
--- a/environment/docker/pool/core.ubuntu.dockerfile
+++ b/environment/docker/pool/core.ubuntu.dockerfile
@@ -17,10 +17,10 @@ RUN pip3 install -U \
 setuptools
 RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88
 RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BD33704C
-RUN echo ""deb https://repo.sovrin.org/deb xenial master"" >> /etc/apt/sources.list
-RUN echo ""deb https://repo.sovrin.org/sdk/deb xenial master"" >> /etc/apt/sources.list
+RUN echo ""deb https://repo.sovrin.org/deb xenial stable"" >> /etc/apt/sources.list
+RUN echo ""deb https://repo.sovrin.org/sdk/deb xenial stable"" >> /etc/apt/sources.list
 RUN useradd -ms /bin/bash -l -u $uid indy
-RUN apt-get update -y && apt-get install -y indy-node libindy
+RUN apt-get update -y && apt-get install -y python3-base58=0.2.4 indy-plenum=1.2.42 indy-anoncreds=1.0.11 indy-node=1.3.62 python3-indy-crypto=0.4.1 libindy-crypto=0.4.0 libindy
 RUN pip3 install python3-indy
 USER indy
 WORKDIR /home/indy
diff --git a/environment/docker/pool/pool_start.sh b/environment/docker/pool/pool_start.sh
index 580ed53..140b6f7 100755
--- a/environment/docker/pool/pool_start.sh
+++ b/environment/docker/pool/pool_start.sh
@@ -26,7 +26,7 @@ IFS="",""
 POOL_DATA=($POOL_DATA)

echo ""Creating pool network $POOL_NETWORK_NAME""
-SUBNET=""${BASE_IP}0/8""
+SUBNET=""${BASE_IP}0/24""
 (($(docker network ls -f name=""$POOL_NETWORK_NAME"" | grep -w ""$POOL_NETWORK_NAME"" | wc -l))) && docker network rm ""$POOL_NETWORK_NAME""
 docker network create --subnet=$SUBNET ""$POOL_NETWORK_NAME""
```
3: Make sure no docker network is squatting on `10.0.0.0/24` and
```
cd environment/dockerpool/
./pool_start.sh
```;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: libvcx should use Indy Cloud Agent,IS-920,33421,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,esplinr,esplinr,02/Sep/18 3:38 PM,19/Sep/19 12:20 AM,28/Oct/23 2:49 AM,18/Sep/19 11:00 PM,,,1.11.0,,libvcx,,,0,,,,,"*Description*
LibVCX in the Indy SDK should use the Indy Cloud Agent instead of the dummy Rust agent.",,,,,,,,,,,IA-49,,,,,,,,,,IS-871,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwvs7:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,"18/Sep/19 11:00 PM;esplinr;There is no longer a reference Indy Cloud Agent, but we did remove the clear dependency on the Evernym Agency. Additional work will probably still be needed to make it work with ACA-py or other Aries agents. We will only schedule this work if we identify people who need it done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logger produce poorly readable errors,IS-921,33438,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,VladimirWork,VladimirWork,VladimirWork,03/Sep/18 7:05 PM,27/Sep/18 5:33 PM,28/Oct/23 2:49 AM,27/Sep/18 5:32 PM,,,,,,,,0,help-wanted,,,,"Build Info:
indy-cli 1.6.4~740

Steps to Reproduce:
1. Create logger config file with invalid field:
{noformat}
# Scan this file for changes every 30 seconds
refresh_rate: 30 seconds

appenders:
  indy_cli:
    additive: false
    kind: file
    path: ""log/indy_cli.log""
    append: false
    encoder:
      pattern: ""{d} [{t}] {l} {M}:{m}{n}""

root:
  level: trace
  appenders:
    - indy_cli
{noformat}
2. Run indy-cli with logger.

Actual Results:
White-colored poorly readable error string about unknown field in config file and green string about successful logger initialization. Log file is not created actually.

Expected Results:
Error strings should be red. Maybe it should not be a successful initialization text since logger actually doesn't produce any logs in this case.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-893,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv7z:",,,,Unset,Unset,EV 18.19,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,VladimirWork,,,,,,,,,,"27/Sep/18 5:31 PM;Artemkaaas;Indy-Cli uses lohg4rs as the default logger implementation.
Log4rs initializes logger even if one of appenders has invalid format/parameter.
So, the current behavior is expected.
The only way to solve this problem is to fork log4rs that is too expensive.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Review VCX codebase and VCX integration plan,IS-922,33439,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,esplinr,gudkov,gudkov,03/Sep/18 7:09 PM,16/Nov/18 3:05 AM,28/Oct/23 2:49 AM,14/Sep/18 10:16 PM,,,,,libvcx,,,0,,,,,"To be efficient on libvcx integration we need better understanding of vcx on SDK core team side. I suggest the following:

- Organize knowledge transfer if possible. May be Doug can provide this.
- Review existing code, build infrastructure and available documentation review.
- Identify API groups and covered use cases
- Identify proprietary dependencies
- Identify intersections with libindy
- Identify any problems
- Update vcx integration plan
- Share knowledge inside of SDK team

Acceptance criteria:

- SDK core team should get better understanding of vcx and covered use cases
- We need to have plan of VCX integration as set of well defined tickets in JIRA
- We need to have rough estimation of each steps in this plan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwv3z:",,,,Unset,Unset,EV 18.18,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,,"14/Sep/18 8:15 PM;gudkov;I reviewed vcx and provided a plan and set of tickets:

Lack of any Cloud Agent implementation available (CRITICAL)
  - IS-931: VCX: Provide VCX compatible Indy Cloud Agent
  - IS-920: VCX: libvcx should use Indy Cloud Agent

Lack of documentation for application developers (HIGH)
- IS-923: VCX: Provide VCX end-2-end sample
- IS-935: VCX: Provide Getting Started Tutorial for libvcx

Static binding to sovrin payment plugin (HIGH)
- IS-934: VCX: Avoid VCX compile time linking with payments plugins

Lack of documentation for cloud agent developers (HIGH)
- We can use Indy Cloud Agen (IS-931) as a quick documentation of the protocol

Open-source vcx can’t be consumed by Evernym (HIGH)
- The solution is Indy Cloud Agen (IS-931) should be compatible with Evernym protocol. Switching to community protocol will be done later in parallel with Evernym agency.

Lack of windows support (HIGH)
- IS-936: VCX: VCX should have Windows build

Lack of CI and CD infrastructure (HIGH)
- IS-852: CI/CD: Provide LibVCX Ubuntu 16.4 CI/CD pipeline branches
- IS-874: CI/CD: Provide LibVCX Windows CI/CD pipeline branches
- IS-876: CI/CD: Provide LibVCX iOS CI/CD pipeline branches
- IS-875: CI/CD: Provide LibVCX Android CI/CD pipeline branches
- IS-939: CI/CD: Provide LibVCX Python wrapper CI/CD pipeline branches
- IS-940: CI/CD: Provide LibVCX Java wrapper CI/CD pipeline branches
- IS-941: CI/CD: Provide LibVCX ObjC (iOS) wrapper CI/CD pipeline branches
- IS-942: CI/CD: Provide LibVCX NodeJS wrapper CI/CD pipeline branches

VCX protocol is significantly different from the latest community vision (MEDIUM)
- IS-933: VCX: Indy Cloud Agent should be compatible with reference Edge and Cloud Agents
- IS-871: VCX: libvcx should be compatible with reference Edge and Cloud Agents

Other problems (LOW)
- IS-946: VCX: Provide better integration tests coverage
- IS-949: VCX: Support of credentials revocation
- IS-943: VCX: Concurrency improvments
- IS-947: VCX: Allow to work with wallet storage plugins
- IS-944: VCX: Support multiple wallets
- IS-945: VCX: Allow ledger access in a separate process
- IS-948: VCX: Review VCX error codes
- IS-950: VCX: Provide logging API similar to libindy and bridge to libindy logging facade
- IS-951: VCX: Provide python logger bridging
- IS-952: VCX: Provide Java (slf4j) logger bridging

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Provide VCX end-2-end sample,IS-923,33440,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MattRaffel,gudkov,gudkov,03/Sep/18 7:17 PM,08/Oct/19 10:22 PM,28/Oct/23 2:49 AM,08/Oct/19 10:22 PM,,,,,,,,0,,,,,"We need to create end-2-end sample or test that will explain VCX usage basics and use cases that VCX covered. I suggest the following:

- Use the same Acme/Fiber scenario that we use for libindy
- Adopt this scenario to VCX
- Implement this scenario as a code sample with good comments
- Put it to indy-sdk repo (check with the team for a good folder)

Acceptance criteria:

- Sample is created inside of indy-sdk repo
- There is a reference from README.md to this sample
- There is documentation on how to run this sample",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-935,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvli:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,gudkov,MattRaffel,,,,,,,,,"05/Dec/18 1:27 AM;MattRaffel;[~dkulic] can you provide a PR for this ticket please?;;;","06/Dec/18 4:04 AM;MattRaffel;adding slack comment:
In scope IS-923 please do the following:
• Examine VCX GSG from Darko (PR 1136, IS-935) (read, try to run, figure out what is missed or can be improved)
• compare VCX GSG with Indy GSG
• look at https://github.com/hyperledger/indy-sdk/tree/master/vcx/wrappers/python3/demo as it used as e2e VCX sample multiply times
• Figure out is it possible to use VCX GSG as e2e sample? Should this GSG be updated in direction to be more similar with python demo?;;;","08/Oct/19 10:22 PM;esplinr;The VCX getting started guide is pretty good:

https://github.com/hyperledger/indy-sdk/blob/master/vcx/docs/getting-started/getting-started.md

The Aries community is going to take a different approach, as they will be handling credential exchange in the language libraries instead of the shared libraries. So we won't be doing further LibVCX tutorials.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Timeout flood in CLI,IS-924,33462,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,zhigunenko.dsr,zhigunenko.dsr,04/Sep/18 10:16 PM,27/Sep/18 10:52 PM,28/Oct/23 2:49 AM,27/Sep/18 10:52 PM,,,,,,,,0,,,,,"*Steps to Reproduce:*
1) set up new pool with 7 nodes
2) make sure that all services are started
3) connect CLI to pool (logger are enabled)
4) stop service on Node2
5) stop service on Node3
6) demote Node6

*Actual results:*
After step 3 log file starts to filled by records like this
{code}
2018-09-04T11:28:10.248964338+00:00 [indy::services::pool::pool] WARN indy::services::pool::pool:Unexpected timeout: req_id FCQ43rghEXCPTBQVma5vDh5uBs2KYUaUTecFVyfxhUUr, node_alias Node4
2018-09-04T11:28:10.248984784+00:00 [indy::services::pool::pool] TRACE indy::services::pool::pool:received pool event: Some(Timeout(""FCQ43rghEXCPTBQVma5vDh5uBs2KYUaUTecFVyfxhUUr"", ""Node7""))
{code}

*Additional Info:*
At this moment pool still has worked and was ordering nym transactions from CLI
It looks like most messages were about node 1,4 and 7
","indy-cli 1.6.4-744
indy-node 1.6.73
indy-plenum 1.6.51
Docker pool (7 nodes)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv7r:",,,,Unset,Unset,EV 18.19,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),VladimirWork,zhigunenko.dsr,,,,,,,,,,"27/Sep/18 7:43 PM;VladimirWork;Build Info:
indy-cli 1.6.6~759

Steps to Validate:
1) set up new pool with 7 nodes
2) make sure that all services are started
3) connect CLI to pool (logger are enabled)
4) stop service on Node2 and send NYM txn
5) stop service on Node3 and send NYM txn
6) demote Node6 and send NYm txn

Actual Results:
There are no `Unexpected timeout` entries in logs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Known Critical Severity in 'growl',IS-925,33466,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,tijohnson,tijohnson,04/Sep/18 11:28 PM,05/Sep/18 2:47 AM,28/Oct/23 2:49 AM,05/Sep/18 2:46 AM,,,,,,,,0,,,,,"A GitHub security scan found the following:

We found a potential security vulnerability in a repository for which you have been granted security alert access.

[hyperledger/indy-sdk|https://github.com/hyperledger/indy-sdk]
|Known  *critical severity* security vulnerability detected in growl < 1.10.0 defined in [package-lock.json|https://github.com/hyperledger/indy-sdk/blob/master/vcx/wrappers/node/package-lock.json].|
|[package-lock.json|https://github.com/hyperledger/indy-sdk/blob/master/vcx/wrappers/node/package-lock.json] update suggested: growl ~> 1.10.0.|",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzpdj:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tijohnson,,,,,,,,,,,"05/Sep/18 2:47 AM;tijohnson;Closed this Jira but I opened Issue: https://github.com/hyperledger/indy-sdk/issues/1116;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Android builds should statically link libc,IS-926,33550,,Task,Complete,IS,Indy SDK,software,resplin,,,High,Done,sergey.minaev,esplinr,esplinr,06/Sep/18 10:19 PM,13/Sep/18 9:09 PM,28/Oct/23 2:49 AM,13/Sep/18 9:09 PM,,,1.6.5,,build-delivery-pipelines,,,0,,,,,"Concerns raised by Android developers regarding rustflags for all architectures for libc.

Proposed solution in this pull request:
https://github.com/hyperledger/indy-sdk/pull/1123

We need to evaluate the solution and address it correctly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvz3:",,,,Unset,Unset,EV 18.18,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Release Indy SDK 1.6.5,IS-927,33610,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,gudkov,gudkov,10/Sep/18 5:48 PM,10/Sep/18 5:49 PM,28/Oct/23 2:49 AM,10/Sep/18 5:49 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvzb:",,,,Unset,Unset,EV 18.18,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release: Release Indy SDK 1.6.6,IS-928,33611,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,gudkov,gudkov,10/Sep/18 5:49 PM,13/Sep/18 9:09 PM,28/Oct/23 2:49 AM,13/Sep/18 9:09 PM,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvzj:",,,,Unset,Unset,EV 18.18,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,VladimirWork,,,,,,,,,,"11/Sep/18 12:18 AM;VladimirWork;Samples and GST work well against Ubuntu and Windows but there are some issues with Android so build is still in RC now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support new protocol version. Mediator changes,IS-929,33615,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Highest,Invalid,,Derashe,Derashe,10/Sep/18 9:44 PM,10/Oct/19 9:28 PM,28/Oct/23 2:49 AM,10/Oct/19 9:27 PM,,,,,,,,0,,,,,"For implementing https://jira.hyperledger.org/browse/INDY-1563, indy-node need sdk to support new protocol version.

First, we need to define how urgent this task is.

As a result of POA, we suggesting such a changes:
 * add new field ""submitter"" to common request structure, which will stand for DID of an identity who actually send txn to ledger 
 * add new field ""processor"" specifically for CRED_DEF txn, which will stand for DID of an identity who can send REVOC_REG_DEF 
 * make an interface for user so that he able to make scenarios, described in INDY-1563
 * optionally formatting request that it could contain ""2nd"" or ""3th"" protocol version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvs4:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Derashe,esplinr,gudkov,,,,,,,,,"11/Sep/18 7:48 PM;gudkov;[~esplinr] [~danielhardman] I looks like significant change that can affect the all existing Indy-based software stack include Evernym and BcGov. Should we start more public procedure of these PoA approval like Hipe creation?;;;","10/Oct/19 9:27 PM;esplinr;We ended up taking a different approach to implement approval by a Transaction Endorser / Trust Anchor (what is called here a Mediator).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configure a new OSX node to build INDY SDK ios,IS-930,33654,,Task,Complete,IS,Indy SDK,software,resplin,,,Low,Done,Sergey.Kupryushin,Sergey.Kupryushin,Sergey.Kupryushin,11/Sep/18 7:52 PM,08/Aug/19 10:14 PM,28/Oct/23 2:49 AM,08/Aug/19 10:14 PM,,,,,build-delivery-pipelines,libindy,,0,build-system,devops,,,The build must be able to run on new macos-indy-02 node.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzqdb:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Sergey.Kupryushin,,,,,,,,,,,"25/Sep/18 11:30 PM;Sergey.Kupryushin;macos-indy-02 node was configured. Waiting for end of the build. 

https://ci.evernym.com/job/Indy%20SDK%20CD/job/master/758/consoleFull;;;","26/Sep/18 7:01 AM;Sergey.Kupryushin;ios-test was successful.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Dummy Cloud Agent Boilerplate,IS-931,33658,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,11/Sep/18 9:18 PM,11/Oct/18 5:16 PM,28/Oct/23 2:49 AM,11/Oct/18 5:16 PM,,,,,,,,0,,,,,"As vcx is only part of agents system to play any example it requires access to some Cloud Agent. The only available is Evernym proprietary agency that can’t be used by community.

We can implement simple (Dummy) Cloud Agent and put it into indy-sdk repo near vcx.

The scope of this ticket is about implementation of development infrastructure for this agent. 

*Acceptance criteria:*
* Build works
* Tests run with one command
* Full-stack Boilerplate is implemented
* Can be easily launched as part of Indy SDK CI/CD pipelines 
",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1008,IS-1009,IS-1010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwv87:",,,,Unset,Unset,EV 18.19,Ev 18.20,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,,"04/Oct/18 1:58 PM;gudkov;https://github.com/hyperledger/indy-sdk/pull/1178

It is still non-ideal and requires some cosmetic refactoring, but it exposes working endpoints, illustrates complete async flow and should allow to start messages handling implementation in parallel.;;;","08/Oct/18 9:46 PM;gudkov;I suggest continue Dummy Cloud Agent development in feature branch of indy-sdk repo.;;;","11/Oct/18 5:16 PM;gudkov;Merged to feature/cloud-agent branch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Confusing error from get requests' parsers if ledger entity is not found,IS-932,33682,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,VladimirWork,VladimirWork,12/Sep/18 7:26 PM,25/Oct/18 8:29 PM,28/Oct/23 2:49 AM,25/Oct/18 8:29 PM,,,,,,,,0,TShirt_S,,,,"Build Info:
libindy 1.6.748

Steps to Reproduce:
1. Send get schema / get cred def request with nonexistent schema_id / cred-def_id.
2. Try to parse result using parse_get_schema_response / parse_get_cred_def_response.

Actual Results:
{noformat}
E           indy.error.IndyError: ErrorCode.LedgerInvalidTransaction

/usr/lib/python3.5/asyncio/futures.py:274: IndyError
------------------------------ Captured log call -------------------------------
libindy.py                 153 ERROR    	src/errors/indy.rs:73 | Casting error to ErrorCode: Invalid transaction: Cannot deserialize transaction Response: Error(""data did not match any variant of untagged enum Reply"", line: 0, column: 0)
libindy.py                  85 WARNING  _indy_loop_callback: Function returned error 304
=========================== 1 failed in 2.48 seconds ===========================
Process finished with exit code 0
{noformat}

Expected Results:
*All* existing parsers should return *null(s)* if we parse response for nonexistent entity.",,,,,,,,,,,,,,,,,,,,,IS-974,,,,,,IS-540,,,,,,,,,,,"25/Oct/18 8:26 PM;VladimirWork;IS-932.PNG;https://jira.hyperledger.org/secure/attachment/16169/IS-932.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv73:",,,,Unset,Unset,EV 18.19,Ev 18.20,EV 18.21,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,gudkov,VladimirWork,zhigunenko.dsr,,,,,,,,"09/Oct/18 7:17 PM;gudkov;After review with team we recommend the following behavior:

1. Explicitly return new error code ErrorCode.LedgerNotFound
2. Update wrappers to expose new error code
3. Update CLI to handle new error code
;;;","10/Oct/18 10:12 PM;dkulic;Closing old review: https://github.com/hyperledger/indy-sdk/pull/1168;;;","10/Oct/18 10:13 PM;dkulic;Added new PR: https://github.com/hyperledger/indy-sdk/pull/1208;;;","25/Oct/18 8:08 PM;zhigunenko.dsr;*Environment:*
libindy 1.6.7 ~805
indy-cli 1.6.7 ~805

*Steps to Validate:*
1) get schema / get cred def request with nonexistent schema_id / cred-def_id
2) run corresponding _test_misc_get_nonexistent_ auto-test

*Actual Results:*
- no regression on CLI side
- test passed;;;","25/Oct/18 8:26 PM;VladimirWork; !IS-932.PNG|thumbnail! ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
VCX: dummy agent should be compatible with reference Edge and Cloud Agents,IS-933,33685,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Deferred,,esplinr,gudkov,12/Sep/18 8:25 PM,18/Sep/19 11:02 PM,28/Oct/23 2:49 AM,18/Sep/19 11:02 PM,,,,,libvcx,,,0,,,,,"The dummy agent implemented as part of VCX epic should use Indy Reference Agents interfaces.

*Acceptance Criteria*
* Dummy agent is interoperable with an Indy Reference Agent
* Dummy agent passed interoperability test harness
* Evernym issues exist for restoring interoperability with the Evernym agency.",,,,,,,,,,,IA-49,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwvsf:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,gudkov,,,,,,,,,,"18/Sep/19 11:02 PM;esplinr;I believe that people have been able to get this working with some effort. However, we haven't had requests for making the dummy agent work with other agents as part of the core feature set. If there is a clear need for this work, we will revisit scheduling the work.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Avoid VCX compile time linking with payments plugins,IS-934,33689,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,donqui,gudkov,gudkov,12/Sep/18 8:51 PM,12/Sep/19 12:59 AM,28/Oct/23 2:49 AM,09/Nov/18 5:42 PM,,,,,,,,0,,,,,"Vcx now performs compile time linking with libindy payment plugin. It supports sovtoken and nullpay as compilation options. We can’t use sovtoken in community repo and libnullpay is only for testing. As result community vcx is useless from payments point of view. We need allow developers to use different payment plugins without touching of vcx source code and build configuration.

*Solution*

* Payment plugin linking and initialization should be responsibility of application
* As payment logic is hidden inside of vcx workflow we can allow configuration of what plugin should be used by providing additional option in vcx_init()
* For the future consider to make payment making and verification functionality as a dedicated step in API
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvbr:",,,,Unset,Unset,Ev 18.20,EV 18.21,EV 18.22,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,sergey.minaev,,,,,,,,,,"16/Oct/18 8:12 PM;donqui;PR:  https://github.com/hyperledger/indy-sdk/pull/1223;;;","31/Oct/18 3:41 AM;donqui;libVCX demo changes:  https://github.com/hyperledger/indy-sdk/pull/1255;;;","09/Nov/18 5:42 PM;sergey.minaev;Updated demo with run-time loading was successfully used by [~Artemkaaas] multiply times, so we can consider this ticket as validated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Provide Getting Started Tutorial for libvcx,IS-935,33690,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,12/Sep/18 8:55 PM,27/Sep/18 6:42 PM,28/Oct/23 2:49 AM,27/Sep/18 6:42 PM,,,,,,,,0,,,,,"There is no publicly available documentation that will allow application developers to understand vcx and value that this library provides. I initially tried to understand it by just reading code and docs, but it was slow without understanding of the whole workflow.

*Acceptance Criteria*

* Getting Started Tutorial is provided
* It covers the main workflow details
* It is based on Fiber-Alice sample from IS-923",,,,,,,,,,,,,,,,,,,,,IS-964,,,,,,,,,,,IS-923,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv8f:",,,,Unset,Unset,EV 18.18,EV 18.19,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,,"14/Sep/18 8:26 PM;gudkov;Work is doing in PR: https://github.com/hyperledger/indy-sdk/pull/1136;;;","27/Sep/18 6:42 PM;gudkov;We can't validate it carefully for the moment as there is no working VCX, but we can make deep validation when we implement ticket about end-2-end sample as soon as Dummy Agency will be available. To don't keep it opened for multiple sprints I suggest to move it to done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: VCX should have Windows build,IS-936,33691,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,gudkov,gudkov,gudkov,12/Sep/18 9:28 PM,18/Dec/18 9:09 PM,28/Oct/23 2:49 AM,30/Nov/18 9:26 PM,,,1.7.0,,,,,0,,,,,"VCX can’t be compiled for windows now. There is no documentation, "" LINK : fatal error LNK1189: library limit of 65535 objects exceeded"" bug and no linking config in build.rs

*Solution*
* Research workaround for "" LINK : fatal error LNK1189: library limit of 65535 objects exceeded"" bug
* Fix build.rs
* Provide documentation
",,,,,,,,,,,,,,,IS-874,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvp9:",,,,Unset,Unset,EV 18.24,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,,"29/Nov/18 8:34 PM;gudkov;vcx windows build is working after the latest refactoring. Proof is here https://github.com/hyperledger/indy-sdk/pull/1319;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clarify instructions to replace /path/to add libindy to the path in ubuntu-build.md,IS-937,33705,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,kenebert,kenebert,kenebert,13/Sep/18 4:44 AM,18/Sep/18 7:12 AM,28/Oct/23 2:49 AM,18/Sep/18 7:12 AM,,,,,,,,0,,,,,"The instructions to add libindy to the path do not mention that you should replace /path/to with the real path in the line: 

 

{{echo ""export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/path/to/libindy/target/\{BUILD TYPE}"" >> ~/.bashrc}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwspz:",,,,Unset,Unset,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),kenebert,sergey.minaev,,,,,,,,,,"13/Sep/18 5:56 AM;kenebert;In the file:

indy-skd/doc/ubuntu-build.md
 
Changed:

""Make sure to add the libindy to the path. Using bash:""

to:

""Make sure to add the libindy to the path. Replace {{/path/to}} with the actual path to the libindy directory. Using bash:"";;;","15/Sep/18 12:52 AM;sergey.minaev;The PR https://github.com/hyperledger/indy-sdk/pull/1137/files has been merged;;;","18/Sep/18 7:11 AM;kenebert;The changes are present in the publicly viewable documents. Thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect symbols in indy-cli help (Windows),IS-938,33722,,Bug,Complete,IS,Indy SDK,software,resplin,,,Low,Done,VladimirWork,VladimirWork,VladimirWork,13/Sep/18 7:31 PM,27/Sep/18 11:42 PM,28/Oct/23 2:49 AM,27/Sep/18 11:42 PM,,,,,,,,0,,,,,"Build Info:
Microsoft Windows [Version 10.0.17134.228]
indy-cli 1.6.5~750

Steps to Reproduce:
1. Run `indy-cli --help`.

Actual Results:
There are bad encoded symbols in output (see screenshot).

Expected Results:
There should be no bad encoded symbols in output.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/18 7:31 PM;VladimirWork;win-cli-bug.PNG;https://jira.hyperledger.org/secure/attachment/15808/win-cli-bug.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv6v:",,,,Unset,Unset,EV 18.19,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,VladimirWork,,,,,,,,,"17/Sep/18 7:05 PM;gudkov;Fixed in https://github.com/hyperledger/indy-sdk/pull/1144/files;;;","17/Sep/18 7:07 PM;gudkov;*Fix details*
* Initialize ansi_term from the very beginning
* Check that stdout is terminal in printing macros and disable colors otherwise

*Note for QA*
It will cause changes in reference CLI batch mode outputs
;;;","27/Sep/18 2:34 PM;Artemkaaas;Build version:  master-759;;;","27/Sep/18 11:42 PM;VladimirWork;Build Info:
indy-cli 1.6.5~759

Steps to Validate:
1. Run `indy-cli --help`.
2. Run `indy-cli` and try some valid\invalid commands.

Actual Results:
There are no bad encoded symbols in output.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
CI/CD: Provide LibVCX Python wrapper CI/CD pipeline branches,IS-939,33761,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,gudkov,14/Sep/18 5:01 PM,24/Nov/18 12:06 AM,28/Oct/23 2:49 AM,24/Nov/18 12:06 AM,,,,,libvcx,,,0,devops,,,,"*Description*
LibVCX  Python Wrapper builds should occur and be tested as part of the Indy SDK delivery pipeline.

*Acceptance Criteria*
* Tests executed
* Artifacts published to pypi",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwvev:",,,,Unset,Unset,Ev 18.20,EV 18.22,EV 18.23,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,dkulic,esplinr,gudkov,sergey.minaev,,,,,,,"08/Nov/18 10:35 PM;Artemkaaas;Changes:

Added testing of VCX Python wrapper in CI Pipeline
Added testing of Vcx Python wrappers in CD Pipeline
Added publishing of Vcx Python package in Pypi.

Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1189;;;","19/Nov/18 5:32 PM;Artemkaaas;Build version: master-850;;;","24/Nov/18 12:06 AM;sergey.minaev;builds are available on pypi
https://pypi.org/project/python3-wrapper-vcx/#history;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CI/CD: Provide LibVCX Java wrapper CI/CD pipeline branches,IS-940,33762,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,gudkov,14/Sep/18 5:02 PM,09/Nov/18 5:46 PM,28/Oct/23 2:49 AM,09/Nov/18 5:46 PM,,,,,libvcx,,,0,devops,,,,"*Description*
LibVCX  Java Wrapper builds should occur and be tested as part of the Indy SDK delivery pipeline.

*Acceptance Criteria*
* Tests executed
* Artifacts published to Sovrin maven repo",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwvf3:",,,,Unset,Unset,Ev 18.20,EV 18.22,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,dkulic,esplinr,gudkov,,,,,,,,"08/Nov/18 10:34 PM;Artemkaaas;Changes:

Added testing of VCX Java wrapper in CI Pipeline
Added testing of Vcx Java wrappers in CD Pipeline
Added publishing of Vcx Java package to the same artifactory storage as Libindy.

Implemented in PR: https://github.com/hyperledger/indy-sdk/pull/1201;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI/CD: Provide LibVCX ObjC (iOS) wrapper CI/CD pipeline branches,IS-941,33768,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Deferred,,esplinr,gudkov,14/Sep/18 7:20 PM,18/Sep/19 10:39 PM,28/Oct/23 2:49 AM,18/Sep/19 10:39 PM,,,,,libvcx,,,0,devops,,,,"*Description*
LibVCX  ObjC (iOS) Wrapper builds should occur and be tested as part of the Indy SDK delivery pipeline.

*Acceptance Criteria*
* Tests executed
* Artifacts published to Sovrin maven repo",,,,,,,,,,,,,,,IS-1176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwrhj:9111",,,,Unset,Unset,Ev 19.03,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dkulic,esplinr,gudkov,,,,,,,,,"18/Sep/19 10:39 PM;esplinr;Setting up mobile builds on the Sovrin Foundation infrastructure is proving to be expensive., and LibVCX will probably not continue as part of the new Aries architecture. So we'll only continue this work if someone demonstrates that they need these artifacts.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI/CD: Provide LibVCX NodeJS wrapper CI/CD pipeline branches,IS-942,33769,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,esplinr,gudkov,14/Sep/18 7:22 PM,08/Nov/18 8:34 PM,28/Oct/23 2:49 AM,08/Nov/18 8:34 PM,,,,,libvcx,,,0,devops,,,,"*Description*
LibVCX  NodeJS Wrapper builds should occur and be tested as part of the Indy SDK delivery pipeline.

*Acceptance Criteria*
* Tests executed
* Artifacts published to Sovrin maven repo",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-710,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-849,,,No,,,Unset,No,,,"1|hzwvfb:",,,,Unset,Unset,EV 18.22,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,dkulic,esplinr,gudkov,sergey.minaev,,,,,,,"07/Nov/18 11:48 PM;Artemkaaas;Changes:
* Added testing of VCX Nodejs wrapper  in CI Pipeline
* Added testing of Libindy Nodejs and Vcx Nodejs wrappers in CD Pipeline
* Publishing of Vcx Npm package wasn't implemented because we still don't have a decision about publishing of Npm package for Libindy ( https://jira.hyperledger.org/browse/IS-710).
I suggest to resolve Libindy publishing first and then implement the same approach for Vcx package.

PR: https://github.com/hyperledger/indy-sdk/pull/1200;;;","08/Nov/18 8:33 PM;sergey.minaev;CD now works without publishing. This scope is covered by ticket IS-710;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Concurrency improvments,IS-943,33770,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,gudkov,gudkov,14/Sep/18 7:26 PM,08/Oct/19 10:26 PM,28/Oct/23 2:49 AM,08/Oct/19 10:25 PM,,,,,,,,0,,,,,"*Description*

VCX uses inefficient threads model starting new thread for each call and blocking on waiting results from libindy and tokio. It can cause performance and memory leaks issue for high-load agents. 

Evernym has a version that is based on tokio-rs thread pool, but threadpool significantly helps only if you don't block on long libindy and http calls. Otherwise we will quickly get all threads blocked and poor concurrency as a result.",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-945,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvtc:v",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,gudkov,,,,,,,,,,"08/Oct/19 10:25 PM;esplinr;The Aries community is going to handle credential exchange in the language libraries, and so is not going to continue with LibVCX. The will also likely adopt a different threading model for any shared libraries. Therefore, we won't be making architectural improvements that require significant changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Support multiple wallets,IS-944,33771,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Duplicate,,gudkov,gudkov,14/Sep/18 7:29 PM,08/Oct/19 10:26 PM,28/Oct/23 2:49 AM,08/Oct/19 10:26 PM,,,,,,,,0,,,,,"*Description*

VCX forces usage of one wallet to store identity and credentials keys. Complex IEA workflows require usage of multiple wallets. For example, one wallet stores cred def and second wallet stores Trust Anchor keys. 

We need to provide the way to use multiple wallets in VCX workflow.",,,,,,,,,,,,,,,,,,,,,,,,,IS-1081,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,IS-1080,,,No,,,Unset,No,,,"1|hzzqdj:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Allow ledger access in a separate process,IS-945,33772,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,gudkov,gudkov,14/Sep/18 7:36 PM,08/Oct/19 10:27 PM,28/Oct/23 2:49 AM,08/Oct/19 10:27 PM,,,,,,,,0,,,,,"*Description*

VCX forces crypto and network operations to be executed in one process. Complex IEA workflows require usage of multiple processes. For example, one process creates cred def in wallet and second process posts it to ledger.

We need to define and implement the way how to solve this problem",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-943,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzqdr:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,gudkov,,,,,,,,,,"08/Oct/19 10:27 PM;esplinr;The Aries community is going to handle credential exchange in the language libraries, and so is not going to continue with LibVCX. The will also likely adopt a different threading model for any shared libraries. Therefore, we won't be making architectural improvements that require significant changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Plan for better integration tests coverage,IS-946,33773,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,gudkov,gudkov,14/Sep/18 7:42 PM,26/Feb/19 12:46 AM,28/Oct/23 2:49 AM,15/Feb/19 6:26 PM,,,,,,,,0,,,,,"*Story*
As a developer using released artifacts of LibVCX, I want confidence that the released VCX artifacts work appropriately on all the platforms that are supported so that I can use them with confidence.

*Acceptance Criteria*
* Analyze existing integration test coverage across all supported platforms: Rust, Enterprise Java, Node, IOS, and Android.
* Determine what additional test coverage is needed.
* Review the plan with an architect.
* Create the necessary tickets.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|i00831:",,,,Unset,Unset,Ev 19.03,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),esplinr,gudkov,KitHat,,,,,,,,,"21/Dec/18 11:21 PM;esplinr;Based on IS-1089 and IS-1090, we suspect that LibVCX tests do not exercise the issuer side of the protocol for the Java wrapper. It is likely also a problem with the wrappers for NodeJS, Android, and iOS.;;;","14/Feb/19 9:15 PM;KitHat;First of all, there is some general work to be done:
1) Integration tests are mixed with unit tests. So the logic of initialization for tests is mixed. We should move integration tests into the `tests` directory and leave unit tests in the source code. It needs to be added, integration tests often marked as 
2) Most of the tests don't have negative cases. We need much more of them.
3) Tests need to be separated by functionality they test – if we test some public function it should all be placed in one module (named after that functionality)
(Optional) 4) It might be useful to separate them into additional high-level modules called `medium_cases` and `high_cases` to separate their level of severity.

Now to exact places that are not tested thoroughly:
1) connection
  * vcx_connection_create_with_invite
  * vcx_connection_invite_details

2) credential
  * vcx_credential_get_payment_info

3) disclosed_proof
  * vcx_disclosed_proof_update_state

4) issuer_credential
  * vcx_issuer_credential_update_state

5) wallet
  * vcx_wallet_update_record_tags
  * vcx_wallet_add_record_tags
  * vcx_wallet_delete_record_tags
  * vcx_wallet_open_search
  * vcx_wallet_search_next_records
  * vcx_wallet_search_next_records
  * vcx_wallet_close_search
  * vcx_wallet_validate_payment_address

Moreover there are some functions with no implementation:
* vcx_issuer_get_credential_request
* vcx_issuer_accept_credential
* vcx_issuer_terminate_credential

Other notices:
* vcx_get_logger -- this function is not needed in VCX at all.
  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Allow to work with wallet storage plugins,IS-947,33774,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,14/Sep/18 7:43 PM,20/Dec/18 5:39 PM,28/Oct/23 2:49 AM,20/Dec/18 5:38 PM,,,1.7.0,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1049,IS-1081,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvlz:w",,,,Unset,Unset,EV 18.25,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,,"10/Dec/18 8:27 PM;Artemkaaas;Changes: 
    The field `wallet_type` was added to vcx_config to specify a type of Libindy Wallet Storage to use.
PR: https://github.com/hyperledger/indy-sdk/pull/1342;;;","20/Dec/18 5:39 PM;gudkov;Merged, looks ok;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Review VCX error codes,IS-948,33775,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,MattRaffel,gudkov,gudkov,14/Sep/18 7:44 PM,28/Feb/19 11:20 PM,28/Oct/23 2:49 AM,28/Feb/19 11:20 PM,,,,,,,,0,,,,,"*Description*

During review we found error code that doesn't describe error cause. Like CreateError. I suggest to spend some time to review error codes.",,,,,,,,,,,,,,,IS-1121,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwrhj:910q",,,,Unset,Unset,EV 19.04,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,,"25/Feb/19 3:05 PM;Artemkaaas;There are several points need to be solved:
1) there are a lot of places where top-level function overlaps actual error.
2) there are a lot of *creation errors which don't explain error cause at all.
3) there is a mapping of libindy error on Libvcx error of only small part, for others defined unknown_libndy error.
4) there common object_invalid_handle error and multiply useless *_invalid_handle error. an error message is enough to clarify what handle is invalid.
5) there are lots of useless error code defined.

Note: Solving these points will be *breaking change* for Apps validation that uses Libvcx.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Support of credentials revocation,IS-949,33776,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,dkulic,gudkov,gudkov,14/Sep/18 7:46 PM,15/Feb/19 11:10 PM,28/Oct/23 2:49 AM,15/Feb/19 11:09 PM,,,1.7.0,,,,,0,,,,,"*Description*

VCX should support credentials revocation workflow.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1074,IS-1077,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwsos:",,,,Unset,Unset,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,sergey.minaev,,,,,,,,,,"05/Dec/18 8:44 PM;sergey.minaev;Implementation is done now in code review state. IS-1077 is separate task for review;;;","05/Dec/18 8:45 PM;sergey.minaev;https://github.com/hyperledger/indy-sdk/pull/1267/files;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Provide logging API similar to libindy and bridge to libindy logging facade,IS-950,33777,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,14/Sep/18 7:48 PM,18/Dec/18 9:09 PM,28/Oct/23 2:49 AM,04/Dec/18 7:00 PM,,,1.7.0,,,,,0,,,,,"*Description*

Libindy should provide logger_set call similar to libindy. On initialization vcx should pipe vcx and libindy logs to provided handlers.",,,,,,,,,,,,,,,IS-1104,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|i0000m:i",,,,Unset,Unset,EV 18.24,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,,"03/Dec/18 5:02 PM;Artemkaaas;Done in PR:
https://github.com/hyperledger/indy-sdk/pull/1275
and 
https://github.com/hyperledger/indy-sdk/pull/1331;;;","04/Dec/18 7:00 PM;gudkov;PRs look ok, merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Provide python logger bridging,IS-951,33778,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,14/Sep/18 7:49 PM,18/Dec/18 9:09 PM,28/Oct/23 2:49 AM,07/Dec/18 8:38 PM,,,1.7.0,,,,,0,,,,,VCX python wrapper should automatically pipe vcx and libindy logs to python logger.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|i0000m:y",,,,Unset,Unset,EV 18.24,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,sergey.minaev,,,,,,,,,"05/Dec/18 3:52 PM;Artemkaaas;Done in PRs:
https://github.com/hyperledger/indy-sdk/pull/1275
and 
https://github.com/hyperledger/indy-sdk/pull/1334;;;","07/Dec/18 8:38 PM;sergey.minaev;Proposed solution looks good and now published to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX: Provide Java (slf4j) logger bridging,IS-952,33779,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,gudkov,gudkov,14/Sep/18 7:49 PM,18/Dec/18 9:08 PM,28/Oct/23 2:49 AM,06/Dec/18 11:11 PM,,,1.7.0,,,,,0,,,,,VCX java wrapper should automatically pipe vcx and libindy logs to slf4j .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|i0000m:r",,,,Unset,Unset,EV 18.24,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,,,,,,,,,,"04/Dec/18 8:12 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1335;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Freshness: IndySDK should provide helpers to fetch freshness and timestamp information from ledger responses and transactions,IS-953,33784,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,sergey.minaev,sergey.minaev,14/Sep/18 10:42 PM,18/Dec/18 9:08 PM,28/Oct/23 2:49 AM,30/Nov/18 9:29 PM,,,1.7.0,,,,,0,,,,,"Responses from Indy Node can contains timestamp of state and/or transaction time in different places.

Some parser is required to provide this information by deterministic API. 

*Acceptance criteria*
* New API call indy_get_reponse_metadata created
* It returns seqNo, txn ordering time (if available), the latest txn ordering time from Merkle Proof, the latest txn seqnNo from Merkle Proof (if available)
* API tested and propagated to tier1 wrappers",,,,,,,,,,,,,,,,,,,,,,,,,,,IS-887,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvhg:",,,,Unset,Unset,EV 18.24,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,sergey.minaev,,,,,,,,,"30/Nov/18 3:14 PM;Artemkaaas;Done in PR: https://github.com/hyperledger/indy-sdk/pull/1322;;;","30/Nov/18 9:29 PM;gudkov;Proved tests look good enough and passed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Freshness: IndySDK should be able to filter outdated ledger responses,IS-954,33785,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,KitHat,sergey.minaev,sergey.minaev,14/Sep/18 10:43 PM,01/Feb/19 9:23 PM,28/Oct/23 2:49 AM,01/Feb/19 9:23 PM,,,1.8.0,,,,,0,,,,,"libindy should provide a way for application to require some freshness for particular read request to ledger.

If the required freshness is specified by application, libindy should filter out any outdated responses.

If outdated response is confirmed by strong consensus dedicated error should be returned to application.",,,,,,,,,,,,,,,,,,,,,IS-602,,,,,,IS-887,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|i006vr:",,,,Unset,Unset,EV 19.02,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),KitHat,sergey.minaev,,,,,,,,,,"23/Jan/19 1:30 AM;KitHat;PR: https://github.com/hyperledger/indy-sdk/pull/1431;;;","31/Jan/19 5:32 PM;KitHat;Available in master #958 and in rc
Comments for tests:
You can try to set time on half of nodes for 10 minutes back and try to get a response -- it should have a recent timestamp on answer.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: CLI output contains color codes when stdout is piped to file,IS-955,33817,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,gudkov,gudkov,17/Sep/18 6:39 PM,28/Sep/18 12:58 AM,28/Oct/23 2:49 AM,28/Sep/18 12:58 AM,1.6.6,,,,,,,0,,,,,"*Steps to reproduce*

1. Run any batch file and pipe logs to file
2. Look to produced output
2. Produced output contains ansi term color codes like [1;32mGoodbye...[0m

*Actual result*
Produced output contains ansi term color codes like [1;32mGoodbye...[0m

*Expected result*
No color codes are present

*Note*
Printed tables don't contain color codes as pretty_table crate performs this filtering internally

*Affected versions*
1.6.6
1.6.5-754",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Sep/18 12:55 AM;VladimirWork;IS-955.PNG;https://jira.hyperledger.org/secure/attachment/15884/IS-955.PNG","28/Sep/18 12:58 AM;VladimirWork;IS-955_red.PNG;https://jira.hyperledger.org/secure/attachment/15885/IS-955_red.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvxj:",,,,Unset,Unset,EV 18.19,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,VladimirWork,,,,,,,,,"17/Sep/18 7:07 PM;gudkov;https://github.com/hyperledger/indy-sdk/pull/1144

*Fix details*
* Initialize ansi_term from the very beginning
* Check that stdout is terminal in printing macros and disable colors otherwise

*Note for QA*
It will cause changes in reference CLI batch mode outputs
;;;","27/Sep/18 2:34 PM;Artemkaaas;Build version:  master-759;;;","28/Sep/18 12:58 AM;VladimirWork;Build Info:
libindy / indy-cli 1.6.6~759

Steps to Validate:
1. Run batch file with valid/invalid commands and pipe logs to file.
2. Look to produced output.

Actual Results:
No color codes are present.  !IS-955.PNG|thumbnail!  !IS-955_red.PNG|thumbnail! ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Prove cred_def migration from Indy-node 1.3.62 ,IS-956,33826,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,VladimirWork,VladimirWork,17/Sep/18 11:33 PM,18/Sep/18 4:50 PM,28/Oct/23 2:49 AM,18/Sep/18 4:50 PM,,,,,,,,0,,,,,"Case 1:
1. Create cred_def with tag=`TAG` using libindy 1.6.6.
2. Write it to 1.3.62 ledger.
3. Upgrade pool from 1.3.62 to 1.6.73.
4. Try to read cred_def from 1.6.73 ledger.

Case 2:
1. Create cred_def with random tag using libindy 1.6.6.
2. Write it to 1.3.62 ledger.
3. Upgrade pool from 1.3.62 to 1.6.73.
4. Try to read cred_def from 1.6.73 ledger.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzr6v:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),VladimirWork,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Import wallet fails on android and linux,IS-957,33836,,Bug,Complete,IS,Indy SDK,software,resplin,,,High,Done,ryanmarsh,ryanmarsh,ryanmarsh,18/Sep/18 3:27 AM,25/Sep/18 9:36 PM,28/Oct/23 2:49 AM,25/Sep/18 9:36 PM,1.6.4,,1.6.5,,,,,0,,,,,"A wallet backup was generated on ios (connect.me). This wallet can be imported on ios but fails on android and on a libvcx unit test (linux). 

 

These are the parameters passed to indy_import_wallet:

config: ""\{\""id\"":\""2caeaab5-85fd-2520-93ae-d8edc7f61813-cm-wallet\""}""

credentials: ""\{\""key\"":\""z1I33vILaxGBlJ/X+AcKg9bGX6TIxicHpyU7nOMNy2ZNwA9hWJibYnXfRYGBWWyN3e8dK8IphcQBize+UhybtA==\"",\""storage\"":\""{}\""}""

import_config: ""\{\""key\"":\""673093c329ca555a\"",\""path\"":\""/home/rmarsh/Downloads/restore_dir/ConnectMe.wallet\""}""

 

The Exported wallet is attached.

 

This ticket references https://evernym.atlassian.net/browse/EN-823",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Sep/18 3:27 AM;ryanmarsh;ConnectMe-2018-09-14-15-59-15.zip;https://jira.hyperledger.org/secure/attachment/15820/ConnectMe-2018-09-14-15-59-15.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvxr:",,,,Unset,Unset,EV 18.19,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gudkov,nsivraj,ryanmarsh,sergey.minaev,VladimirWork,,,,,,,"18/Sep/18 6:56 PM;VladimirWork;Build Info:
libindy / indy-cli 1.6.6 (stable)

Actual Results:
indy> wallet import imported key=key export_path=/home/indy/ConnectMe.wallet export_key=673093c329ca555a
{noformat}
TRACE|indy_cli::commands::wallet::import_command|             src/commands/wallet.rs:351 | execute >> ctx CommandContext { main_prompt: RefCell { value: ""indy"" }, sub_prompts: RefCell { value: {} }, is_exit: RefCell { value: false }, int_values: RefCell { value: {} }, string_values: RefCell { value: {} }, plugins: RefCell { value: {} } } params ""_""
TRACE|indy_cli::commands::wallet::import_command|             src/commands/wallet.rs:365 | Wallet::import_wallet try: config {""id"":""imported"",""storage_config"":null,""storage_type"":null}, import_config {""key"":""673093c329ca555a"",""path"":""/home/indy/ConnectMe.wallet""}
TRACE|indy::api::wallet             |                  src/api/wallet.rs:429 | indy_import_wallet: <<< res: Success
 INFO|command_executor              |                src/commands/mod.rs:75  | Worker thread started
 INFO|indy::commands                |                src/commands/mod.rs:123 | WalletCommand command received
DEBUG|wallet_command_executor       |             src/commands/wallet.rs:116 | Import command received
TRACE|indy::commands::wallet        |             src/commands/wallet.rs:226 | _import >>> config: Config { id: ""imported"", storage_type: None, storage_config: None }, credentials: ""_"", import_config: ""_""
TRACE|indy::services::wallet        |         src/services/wallet/mod.rs:451 | import_wallet >>> config: Config { id: ""imported"", storage_type: None, storage_config: None }, credentials: ""_"", export_config: ""_""
TRACE|indy::services::wallet        |         src/services/wallet/mod.rs:101 | create_wallet >>> config: Config { id: ""imported"", storage_type: None, storage_config: None }, credentials: ""_""
TRACE|indy::services::wallet        |         src/services/wallet/mod.rs:193 | open_wallet >>> config: Config { id: ""imported"", storage_type: None, storage_config: None }, credentials: ""_""
TRACE|indy::services::wallet        |         src/services/wallet/mod.rs:246 | open_wallet <<< res: 1
TRACE|indy::services::wallet        |         src/services/wallet/mod.rs:251 | close_wallet >>> handle: 1
TRACE|indy::services::wallet        |         src/services/wallet/mod.rs:258 | close_wallet <<<
TRACE|indy::services::wallet        |         src/services/wallet/mod.rs:139 | delete_wallet >>> config: Config { id: ""imported"", storage_type: None, storage_config: None }, credentials: ""_""
TRACE|indy::services::wallet        |         src/services/wallet/mod.rs:188 | delete_wallet <<<
TRACE|indy::services::wallet        |         src/services/wallet/mod.rs:480 | import_wallet <<<
ERROR|indy::errors::indy            |                 src/errors/indy.rs:73  | Casting error to ErrorCode: Invalid structure: Invalid export file format
TRACE|indy::api::wallet             |                  src/api/wallet.rs:423 | indy_import_wallet: cb command_handle: 1, err: CommonInvalidStructure
TRACE|indy_cli::commands::wallet::import_command|             src/commands/wallet.rs:372 | Wallet::import_wallet return: Err(CommonInvalidStructure)
Can not import Wallet: Invalid file format or encryption key
TRACE|indy_cli::commands::wallet::import_command|             src/commands/wallet.rs:386 | execute << Err(())
{noformat}
;;;","18/Sep/18 10:03 PM;VladimirWork;Some extended logging for the same steps:
{noformat}
2018-09-18T10:58:20.143916566+00:00 [indy::api::logger] TRACE indy::api::logger:indy_set_logger: <<< res: Success
2018-09-18T10:58:46.155096422+00:00 [indy_cli::commands::wallet::import_command] TRACE indy_cli::commands::wallet::import_command:execute >> ctx CommandContext { main_prompt: RefCell { value: ""indy"" }, sub_prompts: RefCell { value: {} }, is_exit: RefCell { value: false }, int_values: RefCell { value: {} }, string_values: RefCell { value: {} }, plugins: RefCell { value: {} } } params {""export_key"": ""673093c329ca555a"", ""export_path"": ""./ConnectMe.wallet"", ""key"": ""key"", ""name"": ""imported""}
2018-09-18T10:58:46.155524049+00:00 [indy_cli::commands::wallet::import_command] TRACE indy_cli::commands::wallet::import_command:Wallet::import_wallet try: config {""id"":""imported"",""storage_config"":null,""storage_type"":null}, import_config {""key"":""673093c329ca555a"",""path"":""./ConnectMe.wallet""}
2018-09-18T10:58:46.155706865+00:00 [indy::api::wallet] TRACE indy::api::wallet:indy_import_wallet: >>> command_handle: 1, config: 0x7fb1cc24fa00, credentials: 0x7fb1cc24fa40, import_config: 0x7fb1cc24fa80, cb: Some(0x55c21b94bf50)
2018-09-18T10:58:46.155926858+00:00 [indy::api::wallet] TRACE indy::api::wallet:indy_import_wallet: params config: Config { id: ""imported"", storage_type: None, storage_config: None }, credentials: Credentials { key: ""key"", rekey: None, storage_credentials: None, key_derivation_method: ARGON2I_MOD, rekey_derivation_method: ARGON2I_MOD }, import_config: ExportConfig { key: ""673093c329ca555a"", path: ""./ConnectMe.wallet"", key_derivation_method: ARGON2I_MOD }
2018-09-18T10:58:46.156289010+00:00 [indy::api::wallet] TRACE indy::api::wallet:indy_import_wallet: <<< res: Success
2018-09-18T10:58:46.156392709+00:00 [command_executor] INFO indy::commands:Worker thread started
2018-09-18T10:58:46.156799843+00:00 [indy::commands] INFO indy::commands:WalletCommand command received
2018-09-18T10:58:46.156852562+00:00 [wallet_command_executor] DEBUG indy::commands::wallet:Import command received
2018-09-18T10:58:46.156952415+00:00 [indy::commands::wallet] TRACE indy::commands::wallet:_import >>> config: Config { id: ""imported"", storage_type: None, storage_config: None }, credentials: Credentials { key: ""key"", rekey: None, storage_credentials: None, key_derivation_method: ARGON2I_MOD, rekey_derivation_method: ARGON2I_MOD }, import_config: ExportConfig { key: ""673093c329ca555a"", path: ""./ConnectMe.wallet"", key_derivation_method: ARGON2I_MOD }
2018-09-18T10:58:46.157047836+00:00 [indy::services::wallet] TRACE indy::services::wallet:import_wallet >>> config: Config { id: ""imported"", storage_type: None, storage_config: None }, credentials: ExportConfig { key: ""673093c329ca555a"", path: ""./ConnectMe.wallet"", key_derivation_method: ARGON2I_MOD }, export_config: ExportConfig { key: ""673093c329ca555a"", path: ""./ConnectMe.wallet"", key_derivation_method: ARGON2I_MOD }
2018-09-18T10:58:46.157147058+00:00 [indy::services::wallet] TRACE indy::services::wallet:create_wallet >>> config: Config { id: ""imported"", storage_type: None, storage_config: None }, credentials: Credentials { key: ""key"", rekey: None, storage_credentials: None, key_derivation_method: ARGON2I_MOD, rekey_derivation_method: ARGON2I_MOD }
2018-09-18T10:58:47.101866480+00:00 [indy::services::wallet] TRACE indy::services::wallet:open_wallet >>> config: Config { id: ""imported"", storage_type: None, storage_config: None }, credentials: Credentials { key: ""key"", rekey: None, storage_credentials: None, key_derivation_method: ARGON2I_MOD, rekey_derivation_method: ARGON2I_MOD }
2018-09-18T10:58:48.069435451+00:00 [indy::services::wallet] TRACE indy::services::wallet:open_wallet <<< res: 1
2018-09-18T10:58:48.977934223+00:00 [indy::services::wallet::export_import] TRACE indy::services::wallet::export_import:Invalid data in crypto chunk
2018-09-18T10:58:48.978224522+00:00 [indy::services::wallet] TRACE indy::services::wallet:close_wallet >>> handle: 1
2018-09-18T10:58:48.978756259+00:00 [indy::services::wallet] TRACE indy::services::wallet:close_wallet <<<
2018-09-18T10:58:48.978848176+00:00 [indy::services::wallet] TRACE indy::services::wallet:delete_wallet >>> config: Config { id: ""imported"", storage_type: None, storage_config: None }, credentials: Credentials { key: ""key"", rekey: None, storage_credentials: None, key_derivation_method: ARGON2I_MOD, rekey_derivation_method: ARGON2I_MOD }
2018-09-18T10:58:49.884286109+00:00 [indy::services::wallet] TRACE indy::services::wallet:delete_wallet <<<
2018-09-18T10:58:49.884507485+00:00 [indy::services::wallet] TRACE indy::services::wallet:import_wallet <<<
2018-09-18T10:58:49.884628431+00:00 [indy::errors::indy] ERROR indy::errors::indy:Casting error to ErrorCode: Invalid structure: Invalid export file format
2018-09-18T10:58:49.884704159+00:00 [indy::api::wallet] TRACE indy::api::wallet:indy_import_wallet: cb command_handle: 1, err: CommonInvalidStructure
2018-09-18T10:58:49.884872870+00:00 [indy_cli::commands::wallet::import_command] TRACE indy_cli::commands::wallet::import_command:Wallet::import_wallet return: Err(CommonInvalidStructure)
2018-09-18T10:58:49.884975356+00:00 [indy_cli::commands::wallet::import_command] TRACE indy_cli::commands::wallet::import_command:execute << Err(())
{noformat}
;;;","19/Sep/18 11:22 PM;sergey.minaev;[~ryanmarsh] could you clarify phrase {quote} This wallet can be imported on ios but fails on android and on a libvcx unit test (linux). {quote}

Do you mean that this wallet + mentioned in this ticket passphrase can be imported on iOS as run of libvcx unit test? Or it's mean that some original user passphrase (consisting with a few words spitted by spaces) can be imported by ConnectMe on iOS?;;;","19/Sep/18 11:53 PM;sergey.minaev;[~ryanmarsh] I can't import attached wallet with passphrase ""673093c329ca555a"" in IndySDK test on iOS (tried on emulator and hw phone).

From my side it seems like attached file or passphrase is incorrect.;;;","20/Sep/18 12:12 AM;ryanmarsh;[~sergey.minaev] A connect.me user can export a wallet with a backup key generated by ""a few words split by spaces"". They can then import that wallet on another ios device. The exported wallet cannot be imported by an android device or by a libvcx unit test run on linux. In the past, an ios device could export a wallet and an android device could import it.

Norm mentioned yesterday in a chat that he thought it could be differences in libraries such as libsodium. Android is using 1.0.14 and ios is using 1.0.16.

I will discuss the potential of a bad passphrase (673093c329ca555a) with some members of the connect.me team.;;;","20/Sep/18 12:16 AM;gudkov;[~ryanmarsh]

We tried all settings on different platforms and with different libsodium. All works fine. We noticed that ConnectMe uses internal key derivation function. We tried to open wallet on iOS with credentials you provided and it fails too. As result it is possible that ConnectMe key derivation function produces different results on different platforms.
;;;","20/Sep/18 12:22 AM;ryanmarsh;[~gudkov] I will pass this information back to the app team. ;;;","20/Sep/18 1:14 AM;sergey.minaev;[~ryanmarsh] one more check from libindy side: I've exported wallet from IndySDK iOS tests on emulator and can import it on linux (via indy-cli). In other words reverse direction also works well at the top of IndySDK artifacts. I suggest try to reproduce issue at the top of libvcx artifacts;;;","20/Sep/18 2:19 AM;ryanmarsh;[~sergey.minaev], Norm and I will write a simple ios integration test around libvcx. I will try to reproduce it on that. I will pass this issue back to the app team if we are unable to reproduce it in our tests.;;;","20/Sep/18 2:58 AM;ryanmarsh;[~sergey.minaev] [~gudkov] We (Norm and I) created a simple ios integration test around libvcx (does not use connect.me). We were able to import the wallet posted in this ticket. We also wrote a test that exported and imported a file on ios which also worked. I then ran that exported wallet through a libvcx import unit test (linux) and it failed with the same error posted above. Libvcx wallet functionality is nothing more than a wrapper. We don't change the data.

The assumption that we came to is that the libvcx.a file produced in the pipeline statically links libsodium, libzmq, openssl which may be different versions than the ones libindy is using. My linux machine uses 1.0.14 of libsodium but the ios artifact uses 1.0.16. I know that [~gudkov] said that different versions of these dependencies shouldn't matter but its the only possibility that we can think of;;;","20/Sep/18 9:09 AM;ryanmarsh;Norm pulled down libindy tests that [~sergey.minaev] provided and confirmed that libindy failed with libsodium 1.0.16 but passed with a wallet exported by 1.0.14.

[~sergey.minaev] [~gudkov] we were able to get import and export to work with connect.me after changing the version of libsodium from 1.0.16 to 1.0.14. I'm not sure why 1.0.16 doesn't work for us. I will update IS-957. Norm was able to export a wallet from ios and import it on Android. I was also able to import it from a libvcx unit test (linux).;;;","20/Sep/18 9:22 PM;nsivraj;I believe this issue can be closed now or moved to testing.;;;","21/Sep/18 1:11 AM;sergey.minaev;I'm able to import attached wallet on modified libindy 1.6.6 with sodium 1.0.16 on my desktop.

But to be able to do it I have reverted important changes which was included into 1.6.5 libindy. In other words I modify 1.6.6 libindy and replace logic for importing wallet by code from 1.6.4. It means what this wallet has been produced by older libindy (<1.6.5) + libsodium 1.0.16.

Also I can confirm that wallet 1.6.4 libindy + libsodium 1.0.16 isn't compatible with other combinations.;;;","21/Sep/18 4:47 AM;ryanmarsh;The libvcx artifact links against libsovtoken 0.9.2. Libsovtoken statically links against libindy 1.6.4 which is causing the problem. When libsovtoken 0.9.3 is released, it should fix the problem. ;;;","21/Sep/18 3:59 PM;sergey.minaev;[~ryanmarsh] I've moved ticket to ""validate"". Please update status after new version will be tested. If it works please move it to done. ;;;",,,,,,,,,,,,,,,
Installing libvcx on ubuntu,IS-958,33853,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,burdettadam,burdettadam,19/Sep/18 2:34 AM,08/Oct/19 10:30 PM,28/Oct/23 2:49 AM,08/Oct/19 10:28 PM,,,,,,,,0,,,,,"I was following the steps in https://github.com/hyperledger/indy-sdk/tree/master/vcx to create the VCX debian package and subsequently installing on the environment via gdebi but have gotten that there's a missing dependency.![image](https://user-images.githubusercontent.com/37392630/45662722-973fc600-bb35-11e8-806f-776e5d181a16.png) How can this be resolved? Also, on https://github.com/hyperledger/indy-sdk/tree/master/vcx under section ""Debians and Artifacts"", what are the provision scripts mentioned in that section?  A bit confused on that section as it mentioned not only the deb but other files which I do not see them in the output folder as well.Assistance on the above much appreciated.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrc7:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,esplinr,,,,,,,,,,"08/Oct/19 10:28 PM;esplinr;We believe that this is working properly now. Please raise a new issue if you can reproduce the problem with a recent release.

We also checked the documentation in order to answer your question, but the documents have evolved enough that I don't think the question applies anymore.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI color-related bugfixes,IS-959,33854,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,burdettadam,burdettadam,19/Sep/18 2:34 AM,28/Sep/18 12:59 AM,28/Oct/23 2:49 AM,28/Sep/18 12:59 AM,,,,,,,,0,,,,,* Initialize ansi_term from the very beginning* Check that stdout is terminal in printing macros and disable colors otherwise,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvy7:",,,,Unset,Unset,EV 18.19,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,VladimirWork,,,,,,,,,"21/Sep/18 7:05 PM;gudkov;Already fixed in scope of IS-938 and IS-955;;;","28/Sep/18 12:59 AM;VladimirWork;IS-938 and IS-955 are checked.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
[WIP] Enable testing on emulator for Android CI.,IS-960,33855,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,burdettadam,burdettadam,19/Sep/18 2:34 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,Signed-off-by: Sergey Minaev <sergey.minaev@dsr-corporation.com>,,,,,,,,,,,,,,,,,,,,,,,,,IS-835,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrcf:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"21/Sep/18 7:07 PM;gudkov;It is dupplicate of IS-835;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Openssl0.10.12,IS-961,33856,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,burdettadam,burdettadam,19/Sep/18 2:34 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"bumped rust openssl version to 0.10.12 which used openssl 1.1.1 which supports ed25519, tls1.3 and has better Android support",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrcn:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"21/Sep/18 8:24 PM;gudkov;Seems like dupplicate for IS-962;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bump rust openssl version to 0.10.x,IS-962,33857,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,burdettadam,burdettadam,19/Sep/18 2:34 AM,11/Oct/18 6:25 PM,28/Oct/23 2:49 AM,08/Oct/18 8:33 PM,,,,,,,,0,pr-review,,,,Currently rust openssl is fixed to version 0.9.24 but the latest version is 0.10.11https://github.com/AxelNennker/indy-sdk/blob/master/libindy/Cargo.toml#L57Also consider using feature vendored at least for cross-compilation.Current openssl version 1.1.1 which has improvements to make compiling for Android simpler and rust openssl uses openssl version 1.1.1.https://github.com/openssl/openssl/blob/master/NOTES.ANDROIDSo bumping rust openssl probably helps compiling for Android.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwv9r:",,,,Unset,Unset,Ev 18.20,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,sergey.minaev,,,,,,,,,,"20/Sep/18 12:50 AM;burdettadam;https://github.com/hyperledger/indy-sdk/pull/1142;;;","08/Oct/18 5:51 PM;sergey.minaev;Waiting master build 770+;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Community PR: VCX support protocol version config,IS-963,33858,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,burdettadam,burdettadam,19/Sep/18 2:34 AM,24/Oct/18 5:02 PM,28/Oct/23 2:49 AM,24/Oct/18 5:02 PM,,,,,,,,0,,,,,"LibVCX can work with protocol-version 2 but the agency that an agent connects to connects to the Sovrin test network which is currently protocol version 1.In order to connect to the STN with VCX then the protocol version needs to be 1, at the moment it is  hardcoded to 2.",,,,,,,,,,,,,,,,,,,,,IS-965,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvvz:",,,,Unset,Unset,EV 18.21,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"21/Sep/18 7:15 PM;gudkov;added pull request #1138 ( https://github.com/hyperledger/indy-sdk/pull/1138 )
regarding this;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[WIP ][VCX] Getting started guide,IS-964,33859,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,burdettadam,burdettadam,19/Sep/18 2:34 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,Signed-off-by: Darko Kulic <darko.kulic@evernym.com>,,,,,,,,,,,,,,,,,,,,,,,,,IS-935,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrcv:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"21/Sep/18 7:12 PM;gudkov;It is dupplicate for IS-935;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
libvcx: protocol version hardcoded,IS-965,33860,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,burdettadam,burdettadam,19/Sep/18 2:34 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,The Protocol version is hardcoded to 2`match Pool::set_protocol_version(2)`This means that you cannot connect to the Sovrin testnetwork which is version 1.If you want to use VCX you have to be connected to the STN.So this version should be defaulted to 1 and be possible to change based on the vcx config.,,,,,,,,,,,,,,,,,,,,,,,,,IS-963,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrd3:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"20/Sep/18 12:52 AM;burdettadam;added pull request #1138 ( https://github.com/hyperledger/indy-sdk/pull/1138 )
regarding this;;;","21/Sep/18 7:16 PM;gudkov;Duplicates IS-963;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
[WIP] Multi-thread libindy for CPU expensive calls,IS-966,33861,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,burdettadam,burdettadam,19/Sep/18 2:34 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,HIPE about [multi-threading in libindy](https://github.com/hyperledger/indy-hipe/tree/master/text/0012-concurrency-improvement).,,,,,,,,,,,,,,,,,,,,,,,,,IS-899,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrdb:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"21/Sep/18 7:18 PM;gudkov;Duplicates IS-899;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Community PR: move Endpoint to API because type safety,IS-967,33862,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,zhigunenko.dsr,burdettadam,burdettadam,19/Sep/18 2:34 AM,22/Oct/18 4:31 PM,28/Oct/23 2:49 AM,22/Oct/18 4:31 PM,,,,,,,,0,,,,,Signed-off-by: Axel Nennker <axel.nennker@telekom.de>- enhance type safety- easier to read api for api usersIn the future add endpoint validity checks to Endpoint::new so the code fails early if an invalide endpoint is passed into the Indy api,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvd3:",,,,Unset,Unset,EV 18.21,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,burdettadam,ignisvulpis,zhigunenko.dsr,,,,,,,,"20/Sep/18 5:28 PM;ignisvulpis;PR is here: https://github.com/hyperledger/indy-sdk/pull/1132;;;","22/Oct/18 3:05 PM;Artemkaaas;Build version: master-800;;;","22/Oct/18 4:31 PM;zhigunenko.dsr;*Reason to Close:*
No additional tests are required. All autotests were passed successfully.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Community PR: validate_did is static,IS-968,33863,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,burdettadam,burdettadam,19/Sep/18 2:34 AM,24/Oct/18 7:50 PM,28/Oct/23 2:49 AM,24/Oct/18 7:50 PM,,,,,,,,0,,,,,Signed-off-by: Axel Nennker <axel.nennker@telekom.de>By turning validate_did into a static method the crypto_services variable is not needed any more and are deleted by this PR where possible.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvdb:",,,,Unset,Unset,EV 18.21,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,ignisvulpis,,,,,,,,,"20/Sep/18 5:27 PM;ignisvulpis;PR is here: https://github.com/hyperledger/indy-sdk/pull/1122

 ;;;","24/Oct/18 7:49 PM;gudkov;I am concerned about having static functions in a service layer as they contradict with the most of patterns for dependency injection and mocking. We don't use it too much for now, but can switch later.

Also we will start usage of different types of DIDs in the near future. As a result we will need access to service state to get correct handler and will need to return back to instance method approach.

I suggest the following:

1. We can keep the code as is.
2. We can move validate method to /utils/did.rs and use it.

Personally i am in favor of approach (1) as the current PR doesn't solve real problems, but can introduce complexity in the future refactorings.

[~ignisvulpis] I am closing this for now. if you still think that approach (2) is significantly better then re-open, but it is better to have it as a new PR.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Community PR: Ledger check json,IS-969,33864,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,burdettadam,burdettadam,19/Sep/18 2:34 AM,24/Oct/18 5:45 PM,28/Oct/23 2:49 AM,24/Oct/18 5:45 PM,,,,,,,,0,,,,,Review and merge PR: https://github.com/hyperledger/indy-sdk/pull/1121,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvcv:",,,,Unset,Unset,EV 18.21,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"24/Oct/18 5:45 PM;gudkov;PR was closed ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX NodeJS Wrapper: Known High Severity Security Vulnerability in 'lodash',IS-970,33865,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,burdettadam,burdettadam,19/Sep/18 2:34 AM,11/Oct/18 9:22 PM,28/Oct/23 2:49 AM,11/Oct/18 9:02 PM,,,,,,,,0,,,,,The GitHub security has found the following issue:We found a potential security vulnerability in a repository for which you have been granted security alert access in hyperledeger/indy-sdkKnown  high severity security vulnerability detected in lodash <4.17.5 defined in: https://github.com/hyperledger/indy-sdk/blob/master/vcx/wrappers/node/package-lock.jsonpackage-lock.json update suggested: lodash ~> 4.17.5.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvwn:",,,,Unset,Unset,Ev 18.20,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"20/Sep/18 12:53 AM;burdettadam;vimmerru, Do we have anyone looking at these errors that just came through?;;;","11/Oct/18 8:22 PM;gudkov;Lodash resolves to 4.17.11 in https://github.com/hyperledger/indy-sdk/commit/471f0d658c96c6a980f4af34fe52cd851f38f1f4#diff-094e5fc3d4197049da95089e8a0aa5a4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX NodeJS Wrapper: Known Low Severity Security Vulnerability in 'debug',IS-971,33866,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,burdettadam,burdettadam,19/Sep/18 2:34 AM,11/Oct/18 9:22 PM,28/Oct/23 2:49 AM,11/Oct/18 9:02 PM,,,,,,,,0,,,,,The GitHub security scan found the following issue:We found a potential security vulnerability in a repository for which you have been granted security alert access.hyperledger/indy-sdkKnown  low severity security vulnerability detected in debug < 2.6.9 defined in: https://github.com/hyperledger/indy-sdk/blob/master/vcx/wrappers/node/package-lock.jsonpackage-lock.json update suggested: debug ~> 2.6.9.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvwv:",,,,Unset,Unset,Ev 18.20,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"11/Oct/18 8:19 PM;gudkov;debug was updated to 3.1.0 in https://github.com/hyperledger/indy-sdk/commit/471f0d658c96c6a980f4af34fe52cd851f38f1f4#diff-094e5fc3d4197049da95089e8a0aa5a4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX NodeJS Wrapper: Known High Severity Security Vulnerability in 'marked',IS-972,33867,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,burdettadam,burdettadam,19/Sep/18 2:34 AM,09/Nov/18 7:24 PM,28/Oct/23 2:49 AM,07/Nov/18 8:14 PM,,,,,,,,0,TShirt_S,,,,A GitHub security scan identified the following issue:We found a potential security vulnerability in a repository for which you have been granted security alert access.hyperledger/indy-sdkKnown high severity security vulnerability detected in marked <0.3.9 defined in: https://github.com/hyperledger/indy-sdk/blob/master/vcx/wrappers/node/package-lock.jsonpackage-lock.json update suggested: marked ~> 0.3.9.These issues were also found:Known moderate severity security vulnerability detected in marked < 0.3.9 defined in package-lock.json. Known moderate severity security vulnerability detected in marked < 0.3.7 defined in package-lock.json.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvfj:",,,,Unset,Unset,EV 18.22,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,DouglasWightman,,,,,,,,,,"11/Oct/18 11:00 PM;DouglasWightman;With the latest merge from evernym/sdk these vulnerabilities are resolved:

 
{noformat}
~/dev/indy-sdk/vcx/wrappers/node $ npm audit
 
 === npm audit security report === 
 
found 0 vulnerabilities
 in 260 scanned packages
{noformat};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VCX NodeJS Wrapper: Known Critical Severity in 'growl',IS-973,33868,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,burdettadam,burdettadam,19/Sep/18 2:34 AM,11/Oct/18 9:22 PM,28/Oct/23 2:49 AM,11/Oct/18 9:02 PM,,,,,,,,0,,,,,A GitHub security scan found the following:```We found a potential security vulnerability in a repository for which you have been granted security alert access.hyperledger/indy-sdkKnown critical severity security vulnerability detected in growl < 1.10.0 defined in:https://github.com/hyperledger/indy-sdk/blob/master/vcx/wrappers/node/package-lock.jsonpackage-lock.json update suggested: growl ~> 1.10.0.```,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvx3:",,,,Unset,Unset,Ev 18.20,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"11/Oct/18 8:16 PM;gudkov;growl was updated to 1.10.5 in https://github.com/hyperledger/indy-sdk/commit/471f0d658c96c6a980f4af34fe52cd851f38f1f4#diff-094e5fc3d4197049da95089e8a0aa5a4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ErrorCode.LedgerInvalidTransaction,IS-974,33869,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,burdettadam,burdettadam,19/Sep/18 2:34 AM,30/Mar/19 5:57 AM,28/Oct/23 2:49 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"Using python version:
Getting error while calling
{noformat}
parse_get_cred_def_response {noformat}
{noformat}
_indy_loop_callback: Function returned error 304
Error occurred: ErrorCode.LedgerInvalidTransaction
{noformat}
 As
{noformat} submit_request{noformat} response data is null
{code:json}
{""result"":{""signature_type"":""CL"",""data"":null,""type"":""108"",""tag"":""governID"",""state_proof"":{""root_hash"":""CAHa6F79nfRe2quf4qdqhNEQj4T2gzFDfJp1yoJr48vq"",""multi_signature"":{""participants"":[""Node4"",""Node2"",""Node3""],""signature"":""QnXzhzzMKeeCtLR5mQ7t13svBMRfFGygzuoH2dxpHpWrDp8you6KyR2aDzWfQ1YdttfN7QshsCgaXi5g1U9MiDfJmtWwSAekD816waf9EG94eni7BjD8pjChzU9a86Dd2xe4mFYDssKqc21wVrSwMYBkMyzo6xfnNiSZiWL59Yvjwd"",""value"":\{""timestamp"":1535264361,""pool_state_root_hash"":""ADNBz2dUcSd2GdKUtEGw2aQCjtqhcQFz1W5DYKYzvcxY"",""state_root_hash"":""CAHa6F79nfRe2quf4qdqhNEQj4T2gzFDfJp1yoJr48vq"",""txn_root_hash"":""8rMnx84d2Yvkn3f5H72qBY9GTrrRfeNgqJSdPmQPMc2K"",""ledger_id"":1}},""proof_nodes"":""+QMo+QERgKAVnj5\/XkTxOz43QLLk7E6SFXQHhviEX5KInw+mqOvypYCAoA2polmma2ST4q\/fsdznOQejkiWoQu64RQX6xcEgVNbTgICAoElXgAjEgDE2OdTvAsIJseMFAaZzzzbOwAf+NoL7flp+oJV5rbFmUQXVZCUwGyRvGOGUlca1vnw\/C6DRlRJPCOqkoLn5igdCRqOvhYpMpC48FCAdCj5YUlhh0fdxiST9EMADoLTBbsJMJR3t8PJvvJyUQTg99A4gqU2Q3IrSBY+jw42roN\/JlMuMa7n6grRe0aDY9QMaVIuEEpSpIaB7CPU5kjTXoILlJ70EBwvft2SHy92Y1iUCsIhh3HYdlh\/xBAk9QiE2gICA+QIRoFibhi6jRo8dsZobdlznDutQqRlPfXF39zqwPjNQiZIZoBlOzJ45WMO9Qo3zODUhI3HANJnrHctZevXR2VuCGO1eoOzh42r38ZiUqLYOgWGupOLqIbNyU3gv7eORbx8zjmBtoIB9QGjXNBJ8P+C9qTbLdPLhgEYlWeZLGIm7yTnu3lxdoCy6AKgXblZdsFHZQh2Psjfivbnuw+Gq6\/B63csz\/w0noFqJA3JwS\/u0bor7MlB8rnLXE8t19NrojAzl6bMCzb4CoLRXRhp4kFp0L+expHeFnZvEkP8w5OgC\/ukSDxyiblHqoPpiBDtA\/6LkofctroljhbH6EodH75zPQOnox1L8yc6QoMZs+4nKOlIuaYlCAZf+zpqBEOoxicwGvmVjsvvYTEtvoLXq1g\/XeYArX9QFdcIpvIp1G8LTPNclRFwogIDMMIaToBXyafzdRyAdNLsyjAPZFsxVA0RF7rKe\/k4g9xv5FhiMoNiH7vqLyyPn0VcWZmIk72o0iVS3dDYdJdw0AaPGoZUAoMU6aJpkrM\/ipERSv5Pk5Cbjepn3oXkAl2bF8ChZ99F0oFsogBtno4zi56NTSydHl9R+LSM\/tqE01JXawKtjve+FoJiIi\/glRQG6F+SwGjSh+MR+gpaFyQYfExYxkWlFM\/kUoFXrn7dfL45kCYFBNWBsOvz4\/bQy\/NnD0A1bCuw5R9QygA==""},""origin"":""VspCEZTw1wnvSybou1TKB4"",""ref"":1,""seqNo"":null,""identifier"":""Th7MpTaRZVRYnPiabds81Y"",""reqId"":1535264371385593370,""txnTime"":null},""op"":""REPLY""}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,IS-932,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrdj:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"20/Sep/18 1:05 AM;burdettadam;vimmerru says, 
""Yes, for now transaction parsers return LedgerInvalidTransaction when there is no corresponded data on the ledger. We plan to change it in the next sprints.""
See https://jira.hyperledger.org/browse/IS-932;;;","21/Sep/18 7:22 PM;gudkov;Dupplicates IS-932;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Better React-Native support,IS-975,33870,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid: Works as Expected,,burdettadam,burdettadam,19/Sep/18 2:34 AM,08/Oct/19 10:33 PM,28/Oct/23 2:49 AM,08/Oct/19 10:33 PM,,,,,,,,0,,,,,I'm trying to create a mobile application for android and ios using react-native. I wanted to use the node.js sdk but it needs C++ and python 2. I also looked at the android and IOS sdk but using the android sdk doesn't look like the best option.Any ideas on how to get started?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrvj:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,esplinr,gudkov,ptab-pawan,sergey.minaev,,,,,,,"20/Sep/18 1:07 AM;burdettadam;lodo1995 commented, 

My team managed to have libindy work on React Native (both iOS and, partially, Android) some time ago. At that time, official support for Android was not there, so we had to do some magic to cross-compile libindy from source. Nowadays, I think you can just use the official build instructions to build libindy for Android. The official iOS wrapper, on the other hand, was already working, more or less.

Coming to the hard part, you have to write the bindings from Android/iOS native code to React-Native yourself. I won't cover this here, as it is well explained in the official React-Native docs (for both [Android|https://facebook.github.io/react-native/docs/native-modules-android] and [iOS|https://facebook.github.io/react-native/docs/native-modules-ios.html]), but basically, you have to write some Java and Objective-C/Swift code, respectively, to bridge the gap between the native libindy and the interpreted React-Native code. This means that you will have to eject from CRNA and manage the folder structure and build process by yourself.;;;","21/Sep/18 7:26 PM;gudkov;For the moment:

- Libindy provides Objective-C and Java Wrappers
- Libindy provides iOS and Android builds

It is enough to significantly easy create React Native App. We can improve this in the future.

I suggest to re-create this bug to low-priority story and may be as for contribution.
;;;","31/May/19 6:00 PM;ptab-pawan;[~burdettadam] , [~gudkov] : 

I am new to Indy-SDK . I need some clarity to consume libIndy iOS in react native app.  I am able to build libIndy with iOS wrapper . Now I want to make direct calls to Indy by  writing the binding methods using   bridging class .Is there a documentation or good read to kick start on this ? 

I suppose I do not need any AgentFramework or LibVCX library to make Indy calls. As I am unable to build libVCX for iOS? Please correct my understanding.
I followed the instructions in : 
[https://hyperledger-indy.readthedocs.io/projects/sdk/en/latest/vcx/wrappers/ios/README.html]
But get the below error with xcode build or manual steps build : 

ld: library not found for -lvcx
clang: error: linker command failed with exit code 1 (use -v to see invocation)

Used git repos from :
1.[https://github.com/hyperledger/indy-sdk/]
2.[https://github.com/evernym/indy-sdk]
3.[https://github.com/evernym/sdk]

[~gudkov] : When you say Libindy provides iOS and Android builds.I suppose you are referring to [https://repo.sovrin.org/] stable builds ? 

 ;;;","01/Jun/19 12:20 AM;sergey.minaev;[~nsivraj] [~ryanmarsh] could you help [~ptab-pawan]  with react native question?


[~ptab-pawan] regarding builds: yes, most probably Vyacheslav means repo.sovrin.org. You can find there all types of builds (master/rc/stable).;;;","13/Aug/19 7:38 PM;ptab-pawan;[~sergey.minaev] , [~nsivraj]  , [~ryanmarsh]  : user : lodo1995([https://github.com/lodo1995])   is not available  to comment on his approach to get libIndy to  work for react native.

I am facing issues while trying to invoke the  libIndy methods using the react native bridging classes . I am using indy sdk 1.8.2 and in my .gradle : implementation 'org.hyperledger:indy:1.8.2'.Has anyone of you tried to  consume libIndy or libVCX in react native app? Please share your thoughts. 

 

My  second approach is to  use libVCX  and use bridging methods instead. Referring to android libVCX from  :  [https://repo.sovrin.org/android/libvcx/rc/0.4.0-81/] and respective libIndy from :  [https://repo.sovrin.org/android/libindy/rc/1.11.0-81/] 

But if I go with the approach, I wont have a libVCX wrapper for my iOS implementation.  

My requirement is to consume indy in react native cross platform app. If there is a better approach, pour in your suggestions. ;;;","02/Sep/19 10:49 PM;sergey.minaev;[~ptab-pawan] there is opensource example [Sovrin Connector APP|https://github.com/sovrin-foundation/connector-app];;;","08/Oct/19 10:33 PM;esplinr;The open source Sovrin Connector app is the best example to follow.

The issue tracker is not the right place for providing detailed guidance on how to use the libraries. It is best to ask on chat.hyperledger.org, or Stack Overflow.;;;",,,,,,,,,,,,,,,,,,,,,,,
Timeout error when trying the NodeJS How To's,IS-976,33871,,Bug,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,burdettadam,burdettadam,19/Sep/18 2:34 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"Hello,Im trying to create an indy project in NodeJS and started with the how to's, but I can a PoolLedgerTimeout every time I try to send something to the Sovrin test network.I tried the fix I found on the sovrin forum (https://forum.sovrin.org/t/indyerror-poolledgertimeout-when-connecting-to-sovrin-sandbox-network/820/4) but unfortunately, this doesn't fix my problem. I tried it with a NYM and a claim.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrdr:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cached libraries don't update on new versions,IS-977,33872,,Bug,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,burdettadam,burdettadam,19/Sep/18 2:34 AM,30/Mar/19 6:04 AM,28/Oct/23 2:49 AM,,,,,,,,,0,,,,,"I was having a problem where the updated API meant the python methods were changed (i.e. create_wallet taking two parameters rather than five) when the update was pushed I was having trouble running my code as the cached library in `/home/user/.local/lib/python3.5/site-packages/indy/` was not updated and was still trying to run the deprecated wrapper.**I fixed my issue by copying the updated wrapper into the cached folder.** I am assuming at some point in the installation of the sdk, or in running the python code the cached folder was created, so it might be worth looking into a way to check that this cached folder is either not created or is updated when needed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrdz:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Linker issue: Providing custom LD_LIBRARY_PATH doesn't work,IS-978,33873,,Bug,In Progress,IS,Indy SDK,software,resplin,,,Medium,,,burdettadam,burdettadam,19/Sep/18 2:34 AM,24/Jun/20 1:39 AM,28/Oct/23 2:50 AM,,,,,,,,,1,,,,,"Hi, I want to play with the SDK but I got stuck.

I've installed xcode, and compiled
{noformat}
libindy{noformat}
following these instructions [https://github.com/hyperledger/indy-sdk/blob/master/doc/mac-build.md]. After I compile libindy in step 5, finishing with following output
{noformat}
 Compiling rust-base58 v0.0.4 Finished dev [unoptimized + debuginfo] target(s) in 11m 12s{noformat}
The artefacts are built in
{noformat}
target{noformat}
subdirectory
{noformat}
~/dev/hyperledger/indy-sdk/libindy/target/debug (master):ls -l
total 1008368
drwxr-xr-x   32 patrikstas  staff       1024 Aug 18 18:16 build
drwxr-xr-x  227 patrikstas  staff       7264 Aug 18 18:20 deps
drwxr-xr-x    2 patrikstas  staff         64 Aug 18 18:16 examples
drwxr-xr-x    4 patrikstas  staff        128 Aug 18 18:19 incremental
-rw-r--r--    2 patrikstas  staff  118999112 Aug 18 18:20 libindy.a
-rw-r--r--    1 patrikstas  staff      11594 Aug 18 18:20 libindy.d
-rwxr-xr-x    2 patrikstas  staff   41140664 Aug 18 18:20 libindy.dylib
-rw-r--r--    2 patrikstas  staff   97980520 Aug 18 18:20 libindy.rlib
drwxr-xr-x    2 patrikstas  staff         64 Aug 18 18:16 native{noformat}
So after having libindy library ready according to the step 5, I am trying to install indy-sdk NPM package. As the artefact is not stored in
{noformat}
/usr/lib/local{noformat}
or so, I am explicitly specifying path to this directory the way it's specified on NPM page, by setting
{noformat}
LD_LIBRARY_PATH{noformat}
pointing to directory containing compiled libindy libraries.
{noformat}
~/dev/hyperledger/indy-test:LD_LIBRARY_PATH=""/Users/patrikstas/dev/hyperledger/indy-sdk/libindy/target/debug"" npm install --save indy-sdk

> indy-sdk@1.6.1 install /Users/patrikstas/dev/hyperledger/indy-test/node_modules/indy-sdk
> node-gyp rebuild

  CXX(target) Release/obj.target/indynodejs/src/indy.o
./Release/.deps/Release/obj.target/indynodejs/src/indy.o.d.raw Stats {
  dev: 16777220,
  mode: 33188,
  nlink: 1,
  uid: 501,
  gid: 20,
  rdev: 0,
  blksize: 4194304,
  ino: 8596009699,
  size: 2597,
  blocks: 8,
  atimeMs: 1534597700000,
  mtimeMs: 1534597700000,
  ctimeMs: 1534597700087.317,
  birthtimeMs: 1534597699905.6628,
  atime: 2018-08-18T13:08:20.000Z,
  mtime: 2018-08-18T13:08:20.000Z,
  ctime: 2018-08-18T13:08:20.087Z,
  birthtime: 2018-08-18T13:08:19.906Z }
  SOLINK_MODULE(target) Release/indynodejs.node
ld: library not found for -lindy
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [Release/indynodejs.node] Error 1
gyp ERR! build error
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack     at ChildProcess.onExit (/Users/patrikstas/.config/yarn/global/node_modules/npm/node_modules/node-gyp/lib/build.js:258:23)
gyp ERR! stack     at emitTwo (events.js:126:13)
gyp ERR! stack     at ChildProcess.emit (events.js:214:7)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:198:12)
gyp ERR! System Darwin 17.6.0
gyp ERR! command ""/Users/patrikstas/.nvm/versions/node/v8.11.3/bin/node"" ""/Users/patrikstas/.config/yarn/global/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"" ""rebuild""
gyp ERR! cwd /Users/patrikstas/dev/hyperledger/indy-test/node_modules/indy-sdk
gyp ERR! node -v v8.11.3
gyp ERR! node-gyp -v v3.6.2
gyp ERR! not ok
npm WARN indy-test@1.0.0 No description
npm WARN indy-test@1.0.0 No repository field.

npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! indy-sdk@1.6.1 install: `node-gyp rebuild`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the indy-sdk@1.6.1 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /Users/patrikstas/.npm/_logs/2018-08-18T13_08_20_536Z-debug.log{noformat}
The strange thing is that it's actually looking for something called `lindy`, not `libindy`, or is it? Out of curiosity, I've tried to rename all those libindy.*** files in target directory respectively to `lindy.***`, but without much success. 
Am I doing something wrong, or is there a problem with the package? Thanks in advance!


Edit: Well, I see now that `-lindy` is specified for node-gyp config here [https://github.com/hyperledger/indy-sdk/blob/master/wrappers/nodejs/binding.gypWhat's] `lindy` then?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzre7:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),AlexanderHoughton,burdettadam,gaurisankarj,JakeZ2020,jrallen,,,,,,,"20/Sep/18 1:41 AM;burdettadam;farskipper commented,
{noformat}
 -lindy {noformat}
is actually
{noformat}
-l{noformat}
followed by
{noformat}
indy{noformat}
because the cpp linker
{noformat}
-l{noformat}
argument expects no space following it.

You shouldn't need to rename any files in the target directory. The linker will expand
{noformat}
indy{noformat}
to look for the OS specific naming conventions. So in your case it will prefix with lib and postfix with
{noformat}
.dylib {noformat}
and find
{noformat}
libindy.dylib{noformat}
Try nuking your
{noformat}
node_modules{noformat}
folder and running this again without the
{noformat}
""{noformat}
{noformat}LD_LIBRARY_PATH=/Users/patrikstas/dev/hyperledger/indy-sdk/libindy/target/debug npm install --save indy-sdk{noformat}
I setup the build script to use {noformat}LD_LIBRARY_PATH{noformat} in a somewhat unconventional way so the {noformat}""{noformat} may be messing it up.;;;","20/Sep/18 1:58 AM;burdettadam;patrik-stas commented,
 [farskipper|https://github.com/farskipper] Thank you for the response Matthew. I am using bash as my shell, so the quotes are pre-processed by bash - I've given it a shot try nevertheless, but with no success.

What turned out to be working was to actually copy libindy.* file to {{/usr/local/lib}}. I am now able to install indy-sdk

 

{{~/dev/hyperledger/indy-test: npm install --save indy-sdk

> indy-sdk@1.6.2 install /Users/patrikstas/dev/hyperledger/indy-test/node_modules/indy-sdk
> node-gyp rebuild

CXX(target) Release/obj.target/indynodejs/src/indy.o
./Release/.deps/Release/obj.target/indynodejs/src/indy.o.d.raw Stats {
dev: 16777220,
mode: 33188,
nlink: 1,
uid: 501,
gid: 20,
rdev: 0,
blksize: 4194304,
ino: 8596120058,
size: 2597,
blocks: 8,
atimeMs: 1534910449000,
mtimeMs: 1534910449000,
ctimeMs: 1534910449159.4302,
birthtimeMs: 1534910448988.1003,
atime: 2018-08-22T04:00:49.000Z,
mtime: 2018-08-22T04:00:49.000Z,
ctime: 2018-08-22T04:00:49.159Z,
birthtime: 2018-08-22T04:00:48.988Z }
SOLINK_MODULE(target) Release/indynodejs.node
npm WARN indy-test@1.0.0 No description
npm WARN indy-test@1.0.0 No repository field.

+ indy-sdk@1.6.2
updated 1 package in 11.211s}}

Anyway, passing LD_LIBRARY_PATH should also work too, right? I tried to run following and your way of parsing LD_LIBRARY_PATH seems to work as expected with my input. Running command

 

{{>: LD_LIBRARY_PATH=""/Users/patrikstas/dev/hyperledger/indy-sdk/libindy/target/debug"" node -e ""console.log((process.env.LD_LIBRARY_PATH || '').split(':').map(a => '-L' + a.trim()).filter(a => a != '-L').join(' '))""}}

prints

 

{{-L/Users/patrikstas/dev/hyperledger/indy-sdk/libindy/target/debug}}

which does indeed contains the compiled indy libraries:

 

{{ls -lah /Users/patrikstas/dev/hyperledger/indy-sdk/libindy/target/debug

total 525712
drwxr-xr-x@ 13 patrikstas staff 416B Aug 22 13:35 .
drwxr-xr-x 4 patrikstas staff 128B Aug 22 13:35 ..
 -rw-r--r-- 1 patrikstas staff 0B Aug 22 13:28 .cargo-lock
drwxr-xr-x 140 patrikstas staff 4.4K Aug 22 13:28 .fingerprint
drwxr-xr-x 32 patrikstas staff 1.0K Aug 22 13:28 build
drwxr-xr-x 227 patrikstas staff 7.1K Aug 22 13:35 deps
drwxr-xr-x 2 patrikstas staff 64B Aug 22 13:28 examples
drwxr-xr-x 4 patrikstas staff 128B Aug 22 13:32 incremental
rw-rr- 2 patrikstas staff 113M Aug 22 13:35 libindy.a
 -rw-r--r-- 1 patrikstas staff 11K Aug 22 13:35 libindy.d
-rwxr-xr-x 2 patrikstas staff 39M Aug 22 13:35 libindy.dylib
 -rw-r--r-- 2 patrikstas staff 93M Aug 22 13:35 libindy.rlib
drwxr-xr-x 2 patrikstas staff 64B Aug 22 13:28 native}}

Well, my personal roadblock is removed by copying files to {{/usr/local/lib}}. If you, or someone would like to investigate this, I'll still be here to assist. Also, to reproduce the issue, make sure you remove indy libraries from any default library paths to (like {{/usr/local/lib}} on Mac).;;;","20/Sep/18 1:59 AM;burdettadam;Patrik-Stas commented,

Few points - I did a few experiments with {{binding.gyp}}

 

{{""link_settings"": \{
        ""libraries"": [
          ""-L<(module_root_dir)"",
          ""<!(node -e 'console.log(\""-L/Users/patrikstas/dev/hyperledger/indy-sdk/libindy/target/debug\"")')"",
          ""-lindy""
        ]
      }}}

This works.

 

{{""link_settings"": \{
        ""libraries"": [
          ""-L<(module_root_dir)"",
          ""<!(LD_LIBRARY_PATH=/Users/patrikstas/dev/hyperledger/indy-sdk/libindy/target/debug node -e \""console.log((process.env.LD_LIBRARY_PATH || '').split(':').map(a => '-L' + a.trim()).filter(a => a != '-L').join(' '))\"")"",
          ""-lindy""
        ]
      }}}

This also works.

So I think the problem is that LD_LIBRARY_PATH is not defined in that given node context. I am not familiar with gyp, but I suppose the solution would be to have something likes this in the gyp file

 

{{""<!(node -e \""console.log((<@(LD_LIBRARY_PATH) || '').split(':').map(a => '-L' + a.trim()).filter(a => a != '-L').join(' '))\"")"",}}

and figure out a way how to pass that variable to gyp-node?;;;","28/Jan/19 7:24 AM;gaurisankarj;Don't go with defining a LD_LIBRARY_PATH env variable, instead copy all your libindy.* files from 
{code:java}
/path/to/libindy/debug/target 
{code}
into 
{code:java}
/usr/local/lib
{code}

You need to run
{code:java}
which python2.7
{code}
, this will give you the python2.7 executable path, then copy the path and paste it in the code below,
{code:java}
npm config set python <path>
{code}
, this sets the env variable for node-gyp.

If that doesn't solve it, in case you have Xcode 10 or above, you need to follow what is given in the below links Readme.md file and install libstdc++ 
{code:java}
https://github.com/Kila2/libstdc-.6.0.9.tbd
{code}
, then run 
{code:java}
sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
{code}


Doing this is what helped me hope it helps you.

;;;","28/Nov/19 6:12 PM;jrallen;Setting LD_LIBRARY_PATH no longer works due to SIP: https://github.com/oracle/node-oracledb/issues/231

I found that ""cp target/debug/libindy.dylib /usr/local/lib"" made a subsequent ""npm install indy-sdk"" work correctly.;;;","23/Jun/20 11:26 AM;AlexanderHoughton;This is happens on Windows because in a Git bash terminal, the LD_LIBRARY_PATH seems to be ignored, although I'm not sure if it's for the same node-oracledb related reason as mentioned above.

I had a look at node_modules\indy-sdk\build\indynodejs.vcxproj in a text editor and found that the following library path is set in AdditionalLibraryDirectories:
 C:\Program Files\Git\Dev\LibIndy\lib

To get the link working, create C:\Program Files\Git\Dev\LibIndy\lib and then copy indy.dll.lib into it.
 Obviously this is not a great solution as this path may change in future updates to the Indy sdk, but this works as a temporary fix.

Hopefully this will help someone.

 ;;;","24/Jun/20 1:39 AM;AlexanderHoughton;I thought I'd managed to get the app to link properly with the above fix, but now I'm getting this on Windows 10:

$ ./run.sh agency01
 yarn run v1.22.4
 $ rm -rf build && yarn compile && node ./build/samples/agency.js
 $ tsc
 J:\aries-framework-javascript-master\node_modules\bindings\bindings.js:121
 throw e;
 ^

*Error: The specified module could not be found.*
 *\\?\J:\aries-framework-javascript-master\node_modules\indy-sd**k\build\Release\indynodejs.node*
 at Object.Module._extensions..node (internal/modules/cjs/loader.js:1021:18)
 at Module.load (internal/modules/cjs/loader.js:811:32)
 at Function.Module._load (internal/modules/cjs/loader.js:723:14)
 at Module.require (internal/modules/cjs/loader.js:848:19)
 at require (internal/modules/cjs/helpers.js:74:18)
 at bindings (J:\Javascript\aries-framework-javascript-master\node_mo
 dules\bindings\bindings.js:112:48)
 at Object.<anonymous> (J:\aries-framework-javascript-mast
 er\node_modules\indy-sdk\src\indyBinding.js:1:37)
 at Module._compile (internal/modules/cjs/loader.js:955:30)
 at Object.Module._extensions..js (internal/modules/cjs/loader.js:991:10)
 at Module.load (internal/modules/cjs/loader.js:811:32)
 error Command failed with exit code 1.
 info Visit [https://yarnpkg.com/en/docs/cli/run] for documentation about this command.

I've Googled a lot and haven't found a solution yet.
 If anyone has found a solution to this I'd be very grateful to hear it.
 For now I'm going to try to move the development to an Ubuntu virtual machine.;;;",,,,,,,,,,,,,,,,,,,,,,,
Credential Definition Bugs,IS-979,33874,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,nikosft,burdettadam,burdettadam,19/Sep/18 2:34 AM,24/Apr/20 10:38 AM,28/Oct/23 2:50 AM,24/Apr/20 10:38 AM,,,,,,,,1,,,,,"I try to build a get credential definition request using the documented API (with a DID and credential def ID, the latter of which is a string that comes from issuing a credential definition based on an existing schema), but the API throws a CommonInvalidStructure error. I am using the Nodejs wrapper (v.1.6.1 ) for LibIndy (v1.6). Could someone look into this?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzref:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,nikosft,,,,,,,,,,"20/Sep/18 2:01 AM;burdettadam;Lodo1995 commented,
Can you post your code here? Both the one to create the credential definition and the one to create the get credential definition request?;;;","20/Sep/18 2:02 AM;burdettadam;arra1997 commented,

Prior to this I created a schema, published it to the chain and was able to retrieve it. Then
To create a credential definition:
 # credential_def = await indy.issuerCreateAndStoreCredentialDef(wallet_handle, verinym['did'], schema_info,'TAG', 'CL', '\{""support_revocation"": false}')
where verinym['did'] is the DID associated with my identity, and schema_info is the second element that comes from issuerCreateSchema()
which successfully creates a credential_definition (with is a 2-tuple (credential_def_id, credential_def_json))

 # Using this credential def, I create a request
let credential_def_request = await indy.buildCredDefRequest(verinym['did'], credential_def[1])
which works well

 # Set credential_def_request['operation']['ref'] to 1 (by default it was 0) to stop the node network from complaining when I publish the request in step 4. I didn't find any method to set this ""ref"" value nor any documentation about what it means, so this might be a separate bug you want to look into

 # Publish credential def by signing and submitting request
let cred_def_res = await indy.signAndSubmitRequest(pool_handle, wallet_handle, verinym['did'], credential_def_request)
which also works

 # Build get credential def request (which fails)
let get_cred_def_request = await indy.buildGetCredDefRequest(verinym['did'], credential_def[0])
where credential_def[0] as explained in step 1 contains the credential_def_id

which fails with a CommonInvalidStructure IndyError.;;;","24/Apr/20 10:33 AM;nikosft;When you are creating issuerCreateAndStoreCredentialDef probably you are using the schema_info from issuerCreateSchema. This is wrong since it is missing the SeqNo. You must first submit the schema to the ledger and then retrieve the  schema_info from there. ;;;","24/Apr/20 10:38 AM;nikosft;The user does not use the schema definition from the ledger. She/He uses the local copy which however does not have the SeqNo and this causes all these problems. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
[Suggestion]: generate API and wrappers from specification file,IS-980,33875,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,burdettadam,burdettadam,19/Sep/18 2:34 AM,30/Mar/19 6:04 AM,28/Oct/23 2:50 AM,,,,,,,,,0,,,,,"As the Indy SDK is evolving quickly, its API changes very frequently.Currently, as no automation is in place, the boilerplate code for each function in `libindy/src/api/*.rs` needs to be manually written. This is sub-optimal not only in principle (all those functions look exactly the same, so they _should_ be automated), but also in practice, as developers might forget some pieces (e.g. some checks) and the addition of new features (e.g. more detailed logging or more runtime checks) becomes a _huge_ task.The absence of automation also means that all the wrappers need to be manually synced with every change. Currently only the NodeJS wrapper uses automation, but the source of that automation still needs to be synced with the API implementation.It might be worth exploring the possibility of defining the names of all functions, their categories (e.g. `anoncreds`, `wallet`, `ledger`, ...), the names and types of their parameters and returned values, in a single specification file, both machine-readable and human-readable (e.g. YAML), and then generate the `libindy/src/api` folder and all wrappers by merging this file with some templates (e.g. [mustache](https://mustache.github.io/)). Thus, this spec file would act as the single source of truth for the API declarations, removing the burden of keeping everything in sync.This would benefit not only the maintenance of the official API and wrappers, but also the maintenance of unofficial and internal bindings that products developed on top of the Indy SDK might need. These unofficial bindings could be generated from the official spec file in the same way as official wrappers are.A further improvement would be the documentation: if the spec file also contained the documentation associated with each function, parameter and return value, this documentation could then not only be automatically embedded in the source code of each wrapper using the most proper way (e.g. Javadoc for Java, docstrings for Python), but also used to generate some nice language-agnostic (or even language-specific, if deemed necessary) HTML documentation, which would be always up to date and could be hosted on GitHub Pages or somewhere else. Currently, no comprehensive and up-to-date documentation of all Indy SDK functions exists.If this approach happens to work well, it can later be extended by adding additional features. One could be declaring all error codes and messages and associating each function with the codes that it might generate. Another could be refining the type declarations for JSON-serialized parameter and return values, associating them with their internal structure, which would benefit the bindings in typed languages.What follows is an example of the YAML specification for the function `indy_create_and_store_my_did`. It is just an example, the actual structure might be different.```yaml- category: did  name: create_and_store_my_did  description: >    Creates keys (signing and encryption keys) for a new    DID (owned by the caller of the library).    ... more documentation here ...  parameters:  - name: wallet    type: handle    description: wallet handle (created by open_wallet)  - name: did_info    type: json    subtype: MyDidInfo    description: identity information  returns:  - name: did    type: did    description: DID generated and stored in the wallet  - name: verkey    type: verkey    description: the verkey associated with the generated DID```",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrvr:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
encode and decode for Attributes,IS-981,33876,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,burdettadam,burdettadam,19/Sep/18 2:34 AM,30/Mar/19 5:57 AM,28/Oct/23 2:50 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,Signed-off-by: Axel Nennker <axel.nennker@telekom.de>Added methods to encode and decode Attributes for https://jira.hyperledger.org/browse/IS-786wrote that the encoding is application specific and the ZKPs don't care as long as the result of the encoding is a string representing a number. @swcurran 's counter argument was that it helps interoperabilty if common values are encoded in a common way.I modelled this along the lines of https://von-agent.readthedocs.io/en/latest/_modules/von_agent/codec.html?highlight=codec but not 100%. Not sure about their float encoding as I think that ife1 = encode(float1) and e2 = encode(float2) and float1 > float2 thenNumber(e1) > Number(e2) etcOf course all wrappers should use the same encoding or use a Rust implementation which is not 100% correct to put into libindy...Should this be introduced then all examples should be changed...,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzren:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,ignisvulpis,,,,,,,,,"20/Sep/18 5:29 PM;ignisvulpis;PR is here: https://github.com/hyperledger/indy-sdk/pull/1048;;;","21/Sep/18 8:16 PM;gudkov;Dupplicates IS-786;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can not install Indy-node,IS-982,33877,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,burdettadam,burdettadam,19/Sep/18 2:34 AM,30/Mar/19 5:57 AM,28/Oct/23 2:50 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"Hi, I am a newbie in this field and cant set up indy-node on my ubuntu 16.04. Could someone provide step by step guideline to set up the indy-node?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrev:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"20/Sep/18 2:03 AM;burdettadam;dklesev commented, 
[https://github.com/hyperledger/indy-sdk/blob/master/README.md#how-to-start-local-nodes-pool-with-docker];;;","20/Sep/18 2:03 AM;burdettadam;h3. *[vsudip|https://github.com/vsudip]* commented,

[dklesev|https://github.com/dklesev] This generates the genesis transaction file in docker instance. Now to get the handle for the pool genesis file is required from indy-sdk api (indy-sdk api is invoked outside of docker container). How can I get hold of genesis transaction ? Or is there anyother way to get handle of pool ledger ?

pool_config = json.dumps(\{'genesis_txn': genesis_file_path})
pool.create_pool_ledger_config(config_name=pool_name, config=pool_config)
pool_handle = await pool.open_pool_ledger(config_name=pool_name, config=None)

Thanks!;;;","20/Sep/18 2:04 AM;burdettadam;h3. *[shubhamm033|https://github.com/shubhamm033]* commented,

Did any of you get the following error?

E: Failed to fetch [https://repo.sovrin.org/deb/pool/xenial/stable/p/python3-rocksdb/python3-rocksdb_0.6.9_amd64.deb] GnuTLS recv error (-9): A TLS packet with unexpected length was received.

I am getting this repeatedly and not able to resolve it.
Any help would be appreciated!!!;;;","20/Sep/18 2:04 AM;burdettadam;h3. *[vsudip|https://github.com/vsudip]* commented,

I haven't faced above error, can you check if above url is accessible and there is no proxy set on your network.;;;","21/Sep/18 7:32 PM;gudkov;We can't reproduce this on our side. I suggest to close this as invalid. If you still have questons ask support in RocketChat.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Community PR: Implemented missing (TODO) code:,IS-983,33878,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,burdettadam,burdettadam,19/Sep/18 2:34 AM,19/Feb/19 7:14 PM,28/Oct/23 2:50 AM,07/Nov/18 11:29 PM,,,,,,,,0,,,,,* prover_get_entities_from_ledger: Added code to create revocation states* verifier_get_entities_from_ledger: Added code to get revocation definitions and revocation registriesSigned-off-by: fabienpe <fabienpe@users.noreply.github.com>,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-1062,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvfr:",,,,Unset,Unset,EV 18.22,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,burdettadam,,,,,,,,,,"07/Nov/18 8:27 PM;Artemkaaas;Current Indy Getting Started Guide reflects only proving of existence user credential (Primary Proof).
This [PR|https://github.com/hyperledger/indy-sdk/pull/1043] doesn't cover `Revocation` scenario completely.
We need to update  `Readme`, `Issuer` and `Prover` parts related to the issuance of a credential to explain `Revocation`.
In the current state, changes in PR don't make any sense for GSG.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NodeJS Wrapper: Issue while installking indy-sdk on WINDOWS,IS-984,33879,,Bug,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,burdettadam,burdettadam,19/Sep/18 2:34 AM,09/Aug/19 8:14 PM,28/Oct/23 2:50 AM,,,,,,,,,1,,,,,"Hi,I am facing Linking error while installing indy-sdk on windows system using following url:https://www.npmjs.com/package/indy-sdkI have installed following pre-requisites:1. C++ Build tools2. Python 2.7Following is the error when i try to install the sdk:```> node-gyp rebuildC:\Users\h\node_modules\indy-sdk>if not defined npm_config_node_gyp (node ""C:\Users\h\AppData\Roaming\npm\node_modules\npm\node_modules\npm-lifecycle\node-gyp-bin\\..\..\node_modules\node-gyp\bin\node-gyp.js"" rebuild )  else (node ""C:\Users\h\AppData\Roaming\npm\node_modules\npm\node_modules\node-gyp\bin\node-gyp.js"" rebuild )Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.  indy.cc  win_delay_load_hook.ccc:\users\h\middleware\node_modules\nan\nan_new.h(208): warningC4244: 'argument': conversion from 'unsigned __int64' to 'double', possible loss of data (compiling source file ..\src\indy.cc) [C:\Users\h\middleware\node_modules\indy-sdk\build\indynodejs.vcxproj]  ..\src\indy.cc(248): note: see reference to function template instantiation 'v8::Local<v8::Number> Nan::New<v8::Numbe  r,unsigned __int64>(A0)' being compiled          with          [              A0=unsigned __int64          ]LINK : warning LNK4044: unrecognized option '/LC:\Users\h\middleware\node_modules\indy-sdk.lib'; ignored [C:\Users\h\middleware\node_modules\indy-sdk\build\indynodejs.vcxproj]LINK : warning LNK4044: unrecognized option '/LC -L\Users\h\Documents\DID\HYPERLEDGER-INDY\libindy\lib\.lib'; ignored [C:\Users\h\middleware\node_modules\indy-sdk\build\indynodejs.vcxproj]LINK : fatal error LNK1181: cannot open input file 'indy.lib' [C:\Users\h\middleware\node_modules\indy-sdk\build\indynodejs.vcxproj]gyp ERR! build errorgyp ERR! stack Error: `C:\Program Files (x86)\MSBuild\14.0\bin\msbuild.exe` failed with exit code: 1gyp ERR! stack     at ChildProcess.onExit (C:\Users\h\AppData\Roaming\npm\node_modules\npm\node_modules\node-gyp\lib\build.js:258:23)gyp ERR! stack     at emitTwo (events.js:125:13)gyp ERR! stack     at ChildProcess.emit (events.js:213:7)gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:200:12)gyp ERR! System Windows_NT 10.0.17134gyp ERR! command ""C:\\Program Files\\nodejs\\node.exe"" ""C:\\Users\\h\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js"" ""rebuild""gyp ERR! cwd C:\Users\h\middleware\node_modules\indy-sdkgyp ERR! node -v v8.8.1gyp ERR! node-gyp -v v3.6.2gyp ERR! not oknpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted {""os"":""darwin"",""arch"":""any""} (current: {""os"":""win32"",""arch"":""x64""})npm ERR! code ELIFECYCLEnpm ERR! errno 1npm ERR! indy-sdk@1.6.1-beta install: `node-gyp rebuild`npm ERR! Exit status 1npm ERR!npm ERR! Failed at the indy-sdk@1.6.1-beta install script.npm ERR! This is probably not a problem with npm. There is likely additional logging output above.npm ERR! A complete log of this run can be found in:npm ERR!     C:\Users\h\AppData\Roaming\npm-cache\_logs\2018-08-02T10_20_40_431Z-debug.log```BRHarshal",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrf3:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),alundeenmsft,Artemkaaas,burdettadam,vaibhav153,,,,,,,,"20/Sep/18 8:40 AM;alundeenmsft;I'm also seeing this same error when trying to run {{npm install indy-sdk}}.

The path reported in the error seems suspicious:

{{LINK : warning LNK4044: unrecognized option '/LC:\Users\user\path\to\project_folder\node_modules\indy-sdk.lib'}}

I wasn't able to find any references to an npm module named {{indy-sdk.lib}}.;;;","16/Jul/19 11:54 AM;vaibhav153;Hello, 

 I am also seeing this same error. Any updates regarding this issue ?;;;","09/Aug/19 8:14 PM;Artemkaaas;The support of NodeJS wrapper was done in PR: https://github.com/hyperledger/indy-sdk/pull/1721 
Indy versions > 1.11.0 should work;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
[WIP] clarify CLI migration aspects,IS-985,33880,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,burdettadam,burdettadam,19/Sep/18 2:34 AM,30/Mar/19 5:57 AM,28/Oct/23 2:50 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,Signed-off-by: Nikita Zhigunenko <nikita.zhigunenko@dsr-corporation.com>,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrfb:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve macOS Documentation,IS-986,33881,,Task,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,burdettadam,burdettadam,19/Sep/18 2:34 AM,10/Sep/19 11:05 PM,28/Oct/23 2:50 AM,10/Sep/19 11:05 PM,,,1.12.0,,,,,0,,,,,"Improves instructions on how to install indy-sdk, run tests, run Docker, and complete the getting started guide in Python on macOS.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwrhj:910sx0900009eo96",,,,Unset,Unset,Indy SDK 19.18,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,burdettadam,sergey.minaev,,,,,,,,,"03/Sep/19 10:03 PM;Artemkaaas;Done in the scope of PR: https://github.com/hyperledger/indy-sdk/pull/1872;;;","10/Sep/19 11:05 PM;sergey.minaev;Merged and available in master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Get Indy errors 308 Pool Incompatible Protocol Version,IS-987,33882,,Bug,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,burdettadam,burdettadam,19/Sep/18 2:34 AM,21/Apr/20 6:12 PM,28/Oct/23 2:50 AM,,,,,,,,,0,,,,,"I create two docker. The first, It for indy_pool. The second, It for DAPP. When I create Pool ledger and steward. I got errors 308.I set static IP & Port for both of It, and It can see each other. The DApp run on real machine, It worked fine. But, The DApp has this error when run on docker container.Thank you.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrfr:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),BatSuperSpiderMan,burdettadam,,,,,,,,,,"20/Sep/18 2:07 AM;burdettadam;h3. *[Alexis-Falquier|https://github.com/Alexis-Falquier]* commented [on Jul 25|https://github.com/hyperledger/indy-sdk/issues/977#issuecomment-407819589]
|I am having the same error when trying to do the 'Write a DID and Query Its Verkey' tutorial. at step 2 ""open ledger and get handle"" I get {{_indy_loop_callback: Function returned error 308
Error occurred: ErrorCode.PoolIncompatibleProtocolVersion}}
I followed all the steps to set up the environment so I do not know what could be causing this
EDIT:
Tomislav solved my issue in the rocketchat
two step solution:
add this line to the script:
{{await pool.set_protocol_version(2)}}
This solved the incompatibleProtocol error but I then had an issue where my script couldn't connect to the nodes, make sure the genesis file is looking at the correct ip (i.e. if you have your nodes running on 127.0.0.1 like I then changed the genesis file appropriately)|;;;","20/Sep/18 2:07 AM;burdettadam;h3. *[nbxtruong|https://github.com/nbxtruong]* commented [on Jul 26|https://github.com/hyperledger/indy-sdk/issues/977#issuecomment-408300952]
|Thank you [@Alexis-Falquier|https://github.com/Alexis-Falquier]
I add this line to the script: await pool.set_protocol_version(2)
and use: npm i [indy-sdk@1.5.0-beta|mailto:indy-sdk@1.5.0-beta]
indy-pool version 1.3
But I have this error: UnhandledPromiseRejectionWarning: TypeError: indy.set_protocol_version is not a function|;;;","20/Sep/18 2:07 AM;burdettadam;h3. *[Alexis-Falquier|https://github.com/Alexis-Falquier]* commented [on Jul 27|https://github.com/hyperledger/indy-sdk/issues/977#issuecomment-408468813]
|I am not sure, it seems you might be using varying / older versions of the sdk / pool which would explain why it says it is not a function, as it might have been added in a newer verison. libindy i believe is in version 1.4 maybe try re-installing everything and building sdk from source to make sure you have the most up to date version of everything.|;;;","20/Sep/18 2:08 AM;burdettadam;h3. *[benjsmi|https://github.com/benjsmi]* commented [on Aug 6|https://github.com/hyperledger/indy-sdk/issues/977#issuecomment-410817107] 
|I'm seeing this same error.
I load the SDK in as a Node object and print out its methods using the {{node}} interpreter from the prompt: {{> const indy = require('indy-sdk');
undefined
> indy
\{ capi:
   { issuerCreateSchema: [Function],
     issuerCreateAndStoreCredentialDef: [Function],
     issuerCreateAndStoreRevocReg: [Function],
     issuerCreateCredentialOffer: [Function],
     issuerCreateCredential: [Function],
     issuerRevokeCredential: [Function],
     issuerMergeRevocationRegistryDeltas: [Function],
     proverCreateMasterSecret: [Function],
     proverCreateCredentialReq: [Function],
     proverStoreCredential: [Function],
     proverGetCredentials: [Function],
     proverGetCredentialsForProofReq: [Function],
     proverCreateProof: [Function],
     verifierVerifyProof: [Function],
     createRevocationState: [Function],
     updateRevocationState: [Function],
     openBlobStorageReader: [Function],
     openBlobStorageWriter: [Function],
     createKey: [Function],
     setKeyMetadata: [Function],
     getKeyMetadata: [Function],
     cryptoSign: [Function],
     cryptoVerify: [Function],
     cryptoAuthCrypt: [Function],
     cryptoAuthDecrypt: [Function],
     cryptoAnonCrypt: [Function],
     cryptoAnonDecrypt: [Function],
     createAndStoreMyDid: [Function],
     replaceKeysStart: [Function],
     replaceKeysApply: [Function],
     storeTheirDid: [Function],
     keyForDid: [Function],
     keyForLocalDid: [Function],
     setEndpointForDid: [Function],
     getEndpointForDid: [Function],
     setDidMetadata: [Function],
     getDidMetadata: [Function],
     getMyDidWithMeta: [Function],
     listMyDidsWithMeta: [Function],
     abbreviateVerkey: [Function],
     signAndSubmitRequest: [Function],
     submitRequest: [Function],
     signRequest: [Function],
     buildGetDdoRequest: [Function],
     buildNymRequest: [Function],
     buildAttribRequest: [Function],
     buildGetAttribRequest: [Function],
     buildGetNymRequest: [Function],
     buildSchemaRequest: [Function],
     buildGetSchemaRequest: [Function],
     parseGetSchemaResponse: [Function],
     buildCredDefRequest: [Function],
     buildGetCredDefRequest: [Function],
     parseGetCredDefResponse: [Function],
     buildNodeRequest: [Function],
     buildGetTxnRequest: [Function],
     buildPoolConfigRequest: [Function],
     buildPoolRestartRequest: [Function],
     buildPoolUpgradeRequest: [Function],
     buildRevocRegDefRequest: [Function],
     buildGetRevocRegDefRequest: [Function],
     parseGetRevocRegDefResponse: [Function],
     buildRevocRegEntryRequest: [Function],
     buildGetRevocRegRequest: [Function],
     parseGetRevocRegResponse: [Function],
     buildGetRevocRegDeltaRequest: [Function],
     parseGetRevocRegDeltaResponse: [Function],
     isPairwiseExists: [Function],
     createPairwise: [Function],
     listPairwise: [Function],
     getPairwise: [Function],
     setPairwiseMetadata: [Function],
     createPoolLedgerConfig: [Function],
     openPoolLedger: [Function],
     refreshPoolLedger: [Function],
     listPools: [Function],
     closePoolLedger: [Function],
     deletePoolLedgerConfig: [Function],
     createWallet: [Function],
     openWallet: [Function],
     listWallets: [Function],
     closeWallet: [Function],
     deleteWallet: [Function],
     path:
      '/home/node/node_modules/indy-sdk/build/Release/indynodejs.node' },
  issuerCreateSchema: [Function: issuerCreateSchema],
  issuerCreateAndStoreCredentialDef: [Function: issuerCreateAndStoreCredentialDef],
  issuerCreateAndStoreRevocReg: [Function: issuerCreateAndStoreRevocReg],
  issuerCreateCredentialOffer: [Function: issuerCreateCredentialOffer],
  issuerCreateCredential: [Function: issuerCreateCredential],
  issuerRevokeCredential: [Function: issuerRevokeCredential],
  issuerMergeRevocationRegistryDeltas: [Function: issuerMergeRevocationRegistryDeltas],
  proverCreateMasterSecret: [Function: proverCreateMasterSecret],
  proverCreateCredentialReq: [Function: proverCreateCredentialReq],
  proverStoreCredential: [Function: proverStoreCredential],
  proverGetCredentials: [Function: proverGetCredentials],
  proverGetCredentialsForProofReq: [Function: proverGetCredentialsForProofReq],
  proverCreateProof: [Function: proverCreateProof],
  verifierVerifyProof: [Function: verifierVerifyProof],
  createRevocationState: [Function: createRevocationState],
  updateRevocationState: [Function: updateRevocationState],
  openBlobStorageReader: [Function: openBlobStorageReader],
  openBlobStorageWriter: [Function: openBlobStorageWriter],
  createKey: [Function: createKey],
  setKeyMetadata: [Function: setKeyMetadata],
  getKeyMetadata: [Function: getKeyMetadata],
  cryptoSign: [Function: cryptoSign],
  cryptoVerify: [Function: cryptoVerify],
  cryptoAuthCrypt: [Function: cryptoAuthCrypt],
  cryptoAuthDecrypt: [Function: cryptoAuthDecrypt],
  cryptoAnonCrypt: [Function: cryptoAnonCrypt],
  cryptoAnonDecrypt: [Function: cryptoAnonDecrypt],
  createAndStoreMyDid: [Function: createAndStoreMyDid],
  replaceKeysStart: [Function: replaceKeysStart],
  replaceKeysApply: [Function: replaceKeysApply],
  storeTheirDid: [Function: storeTheirDid],
  keyForDid: [Function: keyForDid],
  keyForLocalDid: [Function: keyForLocalDid],
  setEndpointForDid: [Function: setEndpointForDid],
  getEndpointForDid: [Function: getEndpointForDid],
  setDidMetadata: [Function: setDidMetadata],
  getDidMetadata: [Function: getDidMetadata],
  getMyDidWithMeta: [Function: getMyDidWithMeta],
  listMyDidsWithMeta: [Function: listMyDidsWithMeta],
  abbreviateVerkey: [Function: abbreviateVerkey],
  signAndSubmitRequest: [Function: signAndSubmitRequest],
  submitRequest: [Function: submitRequest],
  signRequest: [Function: signRequest],
  buildGetDdoRequest: [Function: buildGetDdoRequest],
  buildNymRequest: [Function: buildNymRequest],
  buildAttribRequest: [Function: buildAttribRequest],
  buildGetAttribRequest: [Function: buildGetAttribRequest],
  buildGetNymRequest: [Function: buildGetNymRequest],
  buildSchemaRequest: [Function: buildSchemaRequest],
  buildGetSchemaRequest: [Function: buildGetSchemaRequest],
  parseGetSchemaResponse: [Function: parseGetSchemaResponse],
  buildCredDefRequest: [Function: buildCredDefRequest],
  buildGetCredDefRequest: [Function: buildGetCredDefRequest],
  parseGetCredDefResponse: [Function: parseGetCredDefResponse],
  buildNodeRequest: [Function: buildNodeRequest],
  buildGetTxnRequest: [Function: buildGetTxnRequest],
  buildPoolConfigRequest: [Function: buildPoolConfigRequest],
  buildPoolRestartRequest: [Function: buildPoolRestartRequest],
  buildPoolUpgradeRequest: [Function: buildPoolUpgradeRequest],
  buildRevocRegDefRequest: [Function: buildRevocRegDefRequest],
  buildGetRevocRegDefRequest: [Function: buildGetRevocRegDefRequest],
  parseGetRevocRegDefResponse: [Function: parseGetRevocRegDefResponse],
  buildRevocRegEntryRequest: [Function: buildRevocRegEntryRequest],
  buildGetRevocRegRequest: [Function: buildGetRevocRegRequest],
  parseGetRevocRegResponse: [Function: parseGetRevocRegResponse],
  buildGetRevocRegDeltaRequest: [Function: buildGetRevocRegDeltaRequest],
  parseGetRevocRegDeltaResponse: [Function: parseGetRevocRegDeltaResponse],
  isPairwiseExists: [Function: isPairwiseExists],
  createPairwise: [Function: createPairwise],
  listPairwise: [Function: listPairwise],
  getPairwise: [Function: getPairwise],
  setPairwiseMetadata: [Function: setPairwiseMetadata],
  createPoolLedgerConfig: [Function: createPoolLedgerConfig],
  openPoolLedger: [Function: openPoolLedger],
  refreshPoolLedger: [Function: refreshPoolLedger],
  listPools: [Function: listPools],
  closePoolLedger: [Function: closePoolLedger],
  deletePoolLedgerConfig: [Function: deletePoolLedgerConfig],
  createWallet: [Function: createWallet],
  openWallet: [Function: openWallet],
  listWallets: [Function: listWallets],
  closeWallet: [Function: closeWallet],
  deleteWallet: [Function: deleteWallet] }}}
Everything is there except {{set_protocol_version}}. Odd.
My libindy package is version 1.6.1: {{libindy:
  Installed: 1.6.1
  Candidate: 1.6.1
  Version table:
 *** 1.6.1 500
        500 https://repo.sovrin.org/sdk/deb xenial/stable amd64 Packages
        100 /var/lib/dpkg/status
     1.6.0 500
        500 https://repo.sovrin.org/sdk/deb xenial/stable amd64 Packages
     1.5.0 500
        500 https://repo.sovrin.org/sdk/deb xenial/stable amd64 Packages
     1.4.0 500
        500 https://repo.sovrin.org/sdk/deb xenial/stable amd64 Packages
     1.3.0 500
        500 https://repo.sovrin.org/sdk/deb xenial/stable amd64 Packages
     1.2.0 500
        500 https://repo.sovrin.org/sdk/deb xenial/stable amd64 Packages
     1.1.0 500
        500 https://repo.sovrin.org/sdk/deb xenial/stable amd64 Packages}}|;;;","20/Sep/18 2:08 AM;burdettadam;h3. *[benjsmi|https://github.com/benjsmi]* commented [on Aug 6|https://github.com/hyperledger/indy-sdk/issues/977#issuecomment-410821064]
|Ah, in my case, npm was stuck on installing {{indy-sdk}} package at {{0.2.5}}. If I were you, I'd check to see if {{npm install --save indy-sdk@1.6.1-beta}} does the trick. Or specify it in your package.json. The strange thing is that npmjs.com does show that 1.6.1-beta is the latest release and the default release. Not sure why I ended up with 0.2.5.|;;;","20/Sep/18 2:09 AM;burdettadam;h3. *[benjsmi|https://github.com/benjsmi]* commented [on Aug 6|https://github.com/hyperledger/indy-sdk/issues/977#issuecomment-410822880] 
|{quote}A pre-release version MAY be denoted by appending a hyphen and a series of dot separated identifiers immediately following the patch version. Identifiers MUST comprise only ASCII alphanumerics and hyphen [0-9A-Za-z-]. Identifiers MUST NOT be empty. Numeric identifiers MUST NOT include leading zeroes. Pre-release versions have a lower precedence than the associated normal version. A pre-release version indicates that the version is unstable and might not satisfy the intended compatibility requirements as denoted by its associated normal version. Examples: 1.0.0-alpha, 1.0.0-alpha.1, 1.0.0-0.3.7, 1.0.0-x.7.z.92.{quote}
Indy folks who can maintain NPM package listing: note that because you stuck {{-beta}} on the end of the version, this is _not_ the default version that will be installed when folks do {{npm i indy-sdk}}! I know it's still a beta, but this whole thread/issue exists because people wanted to use a function that's not there in 0.2.5 that wasn't added until 1.5.0 or so and they just installed the default version like I did.|;;;","21/Apr/20 6:12 PM;BatSuperSpiderMan;I am having the same error now *PoolIncompatibleProtocolVersionException:* _The pool genesis transactions are not compatible with protocol version._ I have tried implementing the above solution but since i am a newbie here I didnt understand: 

add this line to the script:
 {{await pool.set_protocol_version(2)}}

Which script are we referring to ?

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,
CLI: CLI should allow to work with wallets created outside of CLI,IS-988,33900,,New Feature,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,VladimirWork,gudkov,gudkov,19/Sep/18 11:09 PM,28/Sep/18 8:58 PM,28/Oct/23 2:50 AM,28/Sep/18 8:58 PM,,,,,,,,0,,,,,"Indy CLI allows to open and list only wallets created through CLI wallet create command, but it is impossible to access wallet created by 3d party application. 

As there is no way to lookup external wallets with libindy we need to help CLI in wallets lookup. I suggest to introduce wallet attach/detach concept and corresponded CLI commands. User can call wallet attach and provide wallet configuration that CLI will store the same way as wallet configuration created with wallet create command.

*Acceptance criteria*
* wallet attach command implemented and tested
* wallet detach command implemented and tested
* CLI doc updated",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IS-901,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvxz:",,,,Unset,Unset,EV 18.19,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,gudkov,VladimirWork,,,,,,,,,"19/Sep/18 11:35 PM;gudkov;Commands implemented and docs updated in PR: https://github.com/hyperledger/indy-sdk/pull/1149;;;","27/Sep/18 2:35 PM;Artemkaaas;Build version:  master-759;;;","28/Sep/18 8:58 PM;VladimirWork;Build Info:
libindy / indy-cli 1.6.6~759

Actual Results:
wallet attach command implemented and tested (/)
wallet detach command implemented and tested (/)
CLI doc updated (/);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
_indy_loop_callback: Function returned error 112,IS-989,33906,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,burdettadam,burdettadam,20/Sep/18 2:36 AM,30/Mar/19 5:57 AM,28/Oct/23 2:50 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"h3. *[xzcccc|https://github.com/xzcccc]* commented [on Jun 28|https://github.com/hyperledger/indy-sdk/issues/914#issue-336612375]
|I install the indy-sdk follow the url:[https://github.com/hyperledger/indy-sdk/blob/master/doc/ubuntu-build.md]
And run the pool successfully by
{{docker run -itd -p 9701-9708:9701-9708 indy_pool}}
Then I follow the doc Write a DID and Query Its Verkey and touch the write_did.py.
However, when I run write_did.py, an error occurred: {{root@lab:/opt/python_indy# python3 write_did.py
1. Create new pool ledger configuration to connect to ledger.

2. Open ledger and get handle

_indy_loop_callback: Function returned error 112
Error occurred: ErrorCode.CommonInvalidState}} {{root@lab:/opt/python_indy# docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                              NAMES
3066c713c8f0        indy_pool           ""/usr/bin/supervisord""   11 hours ago        Up 11 hours         0.0.0.0:9701-9708->9701-9708/tcp   laughing_ardinghelli}}
So how to resolve this error?
Thanks a lot!
My OS:ubuntu 16.04
python version:3.5.2|",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrk7:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,,,,,,,,,,,"20/Sep/18 2:37 AM;burdettadam;h3. *[atyenoria|https://github.com/atyenoria]* commented [on Jun 28|https://github.com/hyperledger/indy-sdk/issues/914#issuecomment-401027760]
|same issue|;;;","20/Sep/18 2:37 AM;burdettadam;h3. *[vimmerru|https://github.com/vimmerru]* commented [on Jun 28|https://github.com/hyperledger/indy-sdk/issues/914#issuecomment-401030623]
|First of all you need to enable logging. set RUST_LOG=trace env variable and try again. After this post logs. Also i suggest to join Rocket Chat.|;;;","20/Sep/18 2:37 AM;burdettadam;h3. *[atyenoria|https://github.com/atyenoria]* commented [on Jun 28|https://github.com/hyperledger/indy-sdk/issues/914#issuecomment-401032923]
|Solved for my env. # docker run -itd -p 9701-9708:9701-9708 indy_pool
 # [https://github.com/hyperledger/indy-sdk/blob/master/ci/indy-pool.dockerfile#L88]
set proper ip
 # [https://github.com/hyperledger/indy-sdk/blob/master/samples/python/src/utils.py#L21]
set proper ip
 # For example, python -m src.ledger
[https://github.com/hyperledger/indy-sdk/tree/master/samples/python]|;;;","20/Sep/18 2:38 AM;burdettadam;h3. *[xzcccc|https://github.com/xzcccc]* commented [on Jun 28|https://github.com/hyperledger/indy-sdk/issues/914#issuecomment-401223076]
|[@atyenoria|https://github.com/atyenoria] I can run the sample of python by python3 -m src.main with ip 127.0.0.1, but I still can't run the write_did.py followed by [https://github.com/hyperledger/indy-sdk/blob/master/doc/how-tos/write-did-and-query-verkey/python/README.md].
Is there any difference between the two?
[!https://user-images.githubusercontent.com/26038528/42068912-3de2f3dc-7b81-11e8-9c22-b9b9e64102e5.png!|https://user-images.githubusercontent.com/26038528/42068912-3de2f3dc-7b81-11e8-9c22-b9b9e64102e5.png]|;;;","20/Sep/18 2:38 AM;burdettadam;h3. *[xzcccc|https://github.com/xzcccc]* commented [on Jun 28|https://github.com/hyperledger/indy-sdk/issues/914#issuecomment-401228805]
|[@vimmerru|https://github.com/vimmerru] I use python logging module and the debug log as follow: {{root@lab420:/opt/python_indy# python3 write_did.py 
DEBUG:asyncio:Using selector: EpollSelector

1. Create new pool ledger configuration to connect to ledger.

DEBUG:indy.pool:delete_pool_ledger_config: >>> config_name: 'pool'
DEBUG:indy.pool:delete_pool_ledger_config: Creating callback
DEBUG:indy.libindy:create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
DEBUG:indy.libindy:create_cb: <<< res: <CFunctionType object at 0x7fb2860f7b38>
DEBUG:indy.libindy:do_call: >>> name: indy_delete_pool_ledger_config, args: (c_char_p(140404776727688), <CFunctionType object at 0x7fb2860f7b38>)
DEBUG:indy.libindy:_load_cdll: >>>
DEBUG:indy.libindy:_load_cdll: Detected OS name: linux
DEBUG:indy.libindy:_load_cdll: Resolved libindy name is: libindy.so
DEBUG:indy.libindy:_load_cdll: <<< res: <CDLL 'libindy.so', handle 25789e0 at 0x7fb285746e48>
DEBUG:indy.libindy:do_call: Function indy_delete_pool_ledger_config returned err: 0
DEBUG:indy.libindy:do_call: <<< <Future pending>
DEBUG:indy.libindy:_indy_callback: >>> command_handle: 0, err 0, args: ()
DEBUG:indy.libindy:_indy_callback: <<<
DEBUG:indy.libindy:_indy_loop_callback: >>> command_handle: 0, err 0, args: ()
DEBUG:indy.libindy:_indy_loop_callback: Function returned None
DEBUG:indy.libindy:_indy_loop_callback <<<
DEBUG:indy.pool:delete_pool_ledger_config: <<< res: None
DEBUG:indy.pool:create_pool_ledger_config: >>> config_name: 'pool', config: '\{""genesis_txn"": ""/opt/indy-sdk/cli/docker_pool_transactions_genesis""}'
DEBUG:indy.pool:create_pool_ledger_config: Creating callback
DEBUG:indy.libindy:create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
DEBUG:indy.libindy:create_cb: <<< res: <CFunctionType object at 0x7fb2860f7d90>
DEBUG:indy.libindy:do_call: >>> name: indy_create_pool_ledger_config, args: (c_char_p(140404776727688), c_char_p(140404679844024), <CFunctionType object at 0x7fb2860f7d90>)
DEBUG:indy.libindy:do_call: Function indy_create_pool_ledger_config returned err: 0
DEBUG:indy.libindy:do_call: <<< <Future pending>
DEBUG:indy.libindy:_indy_callback: >>> command_handle: 1, err 0, args: ()
DEBUG:indy.libindy:_indy_callback: <<<
DEBUG:indy.libindy:_indy_loop_callback: >>> command_handle: 1, err 0, args: ()
DEBUG:indy.libindy:_indy_loop_callback: Function returned None
DEBUG:indy.libindy:_indy_loop_callback <<<
DEBUG:indy.pool:create_pool_ledger_config: <<< res: None
DEBUG:indy.pool:set_protocol_version: >>> protocol_version: 2
DEBUG:indy.libindy:do_call: >>> name: indy_set_protocol_version, args: (2, <CFunctionType object at 0x7fb2860f7b38>)
DEBUG:indy.libindy:do_call: Function indy_set_protocol_version returned err: 0
DEBUG:indy.libindy:do_call: <<< <Future pending>
DEBUG:indy.libindy:_indy_callback: >>> command_handle: 2, err 0, args: ()
DEBUG:indy.libindy:_indy_callback: <<<
DEBUG:indy.libindy:_indy_loop_callback: >>> command_handle: 2, err 0, args: ()
DEBUG:indy.libindy:_indy_loop_callback: Function returned None
DEBUG:indy.libindy:_indy_loop_callback <<<
DEBUG:indy.pool:set_protocol_version: <<< res: None

2. Open ledger and get handle

DEBUG:indy.pool:open_pool_ledger: >>> config_name: 'pool', config: None
DEBUG:indy.pool:open_pool_ledger: Creating callback
DEBUG:indy.libindy:create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
DEBUG:indy.libindy:create_cb: <<< res: <CFunctionType object at 0x7fb283115048>
DEBUG:indy.libindy:do_call: >>> name: indy_open_pool_ledger, args: (c_char_p(140404776727688), None, <CFunctionType object at 0x7fb283115048>)
DEBUG:indy.libindy:do_call: Function indy_open_pool_ledger returned err: 0
DEBUG:indy.libindy:do_call: <<< <Future pending>
DEBUG:indy.libindy:_indy_callback: >>> command_handle: 3, err 112, args: (0,)
DEBUG:indy.libindy:_indy_loop_callback: >>> command_handle: 3, err 112, args: (0,)
WARNING:indy.libindy:_indy_loop_callback: Function returned error 112
DEBUG:indy.libindy:_indy_loop_callback <<<
Error occurred: ErrorCode.CommonInvalidState}}|;;;","20/Sep/18 2:38 AM;burdettadam;h3. *[xzcccc|https://github.com/xzcccc]* commented [on Jun 28|https://github.com/hyperledger/indy-sdk/issues/914#issuecomment-401234329]
|[@atyenoria|https://github.com/atyenoria] [@vimmerru|https://github.com/vimmerru] I have solved this question and Thanks again!|;;;","20/Sep/18 2:38 AM;burdettadam;[@atyenoria|https://github.com/atyenoria] , I am facing the same issue, what ip value do i need to give. Is it docker running IP or ip of the local machine ??;;;","20/Sep/18 2:39 AM;burdettadam;h3. *[nbxtruong|https://github.com/nbxtruong]* commented [on Jul 22|https://github.com/hyperledger/indy-sdk/issues/914#issuecomment-406876701] 
|[@pradeeppadmarajaiah|https://github.com/pradeeppadmarajaiah] You have to set static ip for your docker container and use this IP for all of your application.
[https://stackoverflow.com/questions/39493490/provide-static-ip-to-docker-containers-via-docker-compose]
Or
[https://stackoverflow.com/questions/27937185/assign-static-ip-to-docker-container]|;;;",,,,,,,,,,,,,,,,,,,,,,
Documentation: How-tos are broken and outdated,IS-990,33908,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Won't Do,,burdettadam,burdettadam,20/Sep/18 2:47 AM,10/Oct/19 9:40 PM,28/Oct/23 2:50 AM,10/Oct/19 9:40 PM,,,,,,,,0,help-wanted,,,,"h3. *[Qingbao|https://github.com/Qingbao]* commented [on Jun 25|https://github.com/hyperledger/indy-sdk/issues/906#issue-335394713]
|Current how-tos seem based on 1.3.0 which are not working with 1.4.0, hope can provide more examples with 1.4.0. Or at least give some example JSONs in Libindy migration Guide.|",,,,,,,,,,,,,,,,,,,,,IS-993,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvu7:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,esplinr,,,,,,,,,,"20/Sep/18 2:48 AM;burdettadam;h3. *[jovfer|https://github.com/jovfer]* commented [on Jun 27|https://github.com/hyperledger/indy-sdk/issues/906#issuecomment-400585511] • 
edited 
|Unfortunately main Indy SDK team doesn't support/update how-tos. As result it's may be out-dated.
I can suggest to take a look on samples directory.|;;;","20/Sep/18 2:48 AM;burdettadam;h3. *[vimmerru|https://github.com/vimmerru]* commented [on Jun 27|https://github.com/hyperledger/indy-sdk/issues/906#issuecomment-400603574]
|[@jovfer|https://github.com/jovfer] I believe we support should them and integrate checking to our CI pipeline. There are corresponded tasks and help is wanted.|;;;","20/Sep/18 2:48 AM;burdettadam;h3. *[kdenhartog|https://github.com/kdenhartog]* commented [on Jul 16|https://github.com/hyperledger/indy-sdk/issues/906#issuecomment-405392914]
|I agree [@vimmerru|https://github.com/vimmerru] it would be good to support these. I think the code that runs with them could be system-tests that are ran by the indy-sdk CI/CD pipeline to make sure they are remaining up to date. One problem with this is that if the node side breaks them, there won't be a check for this, but I think we could easily solve this.|
 
 
 ;;;","26/Sep/18 11:48 PM;esplinr;[~burdettadam] This appears to be related to the work your team has been doing. Should we put it in your sprint?;;;","10/Oct/19 9:40 PM;esplinr;All the how-tos should be deprecated and new how-tos should be created that are structured around the Aries project.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
nonce in node getting started,IS-991,33910,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,Artemkaaas,burdettadam,burdettadam,20/Sep/18 2:57 AM,19/Aug/19 7:20 PM,28/Oct/23 2:50 AM,14/Aug/19 7:25 PM,,,1.11.1,,,,,0,,,,,"h3. *[AxelNennker|https://github.com/AxelNennker]* commented [on Jun 22|https://github.com/hyperledger/indy-sdk/issues/897#issue-334774112] • 
edited 
|This line has a constant nonce
[https://github.com/hyperledger/indy-sdk/blob/master/samples/nodejs/gettingStarted.js#L246]
Two questions: # What are the requirements on nonce? Is there a minimum length or an exact length requirement? Some Rust code suggests that some nonces have an exact length.
[https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/utils/crypto/chacha20poly1305_ietf/sodium.rs#L10]
 # In the Rust code there is a method gen_nonce. Would it make sense to expose that to the API and wrappers? If not, would you consider providing random nonce generation examples in all the getting_started guides to help developers generate them and not copying the static ones to production code.

 {{var crypto = require('crypto'),
    biguint = require('biguint-format');
biguint.format(crypto.randomBytes(16), 'dec');}}
There is zero information about what nonce is in [https://www.npmjs.com/package/indy-sdk].|",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|i00upf:zr",,,,Unset,Unset,Indy SDK 19.16,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,burdettadam,,,,,,,,,,"20/Sep/18 3:01 AM;burdettadam;h3. *[AxelNennker|https://github.com/AxelNennker]* commented [13 days ago|https://github.com/hyperledger/indy-sdk/issues/897#issuecomment-419006351]
|The gettingStarted.js is about proof requests and [https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/domain/anoncreds/proof_request.rs#L4] uses indy-crypto:CL: Nonce [https://github.com/AxelNennker/indy-crypto/blob/master/libindy-crypto/src/cl/mod.rs#L27]
I think the other languages should use a similar or the same getNonce.
pub const LARGE_NONCE: usize = 80;
[https://github.com/AxelNennker/indy-crypto/blob/master/libindy-crypto/src/cl/constants.rs#L22]
This is the number of bits of the resulting random BigNumber.
[https://github.com/sfackler/rust-openssl/blob/master/openssl/src/bn.rs#L419]|;;;","09/Aug/19 8:10 PM;Artemkaaas;The function for generation of nonce proper size has added the function in the PR: https://github.com/hyperledger/indy-sdk/pull/1710 
We still need to update samples to use this function.;;;","14/Aug/19 4:29 PM;Artemkaaas;Updated samples in PR: https://github.com/hyperledger/indy-sdk/pull/1814;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Information about not installing too recent libsodium releases can be removed,IS-992,33913,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,burdettadam,burdettadam,20/Sep/18 3:13 AM,09/Nov/18 7:24 PM,28/Oct/23 2:50 AM,09/Nov/18 5:49 PM,,,,,,,,0,TShirt_S,,,,"h3. *[lodo1995|https://github.com/lodo1995]* commented [on Jun 6|https://github.com/hyperledger/indy-sdk/issues/841#issue-329915976]
|The limitation of libsodium <= 1.0.14 does not hold any longer now that sodiumoxide dependency has been updated from 0.0.14 to 0.0.16. It should be removed or at least upgraded to libsodium <= 1.0.16.|",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvfz:",,,,Unset,Unset,EV 18.22,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,burdettadam,,,,,,,,,,"20/Sep/18 3:13 AM;burdettadam;h3. *[vimmerru|https://github.com/vimmerru]* commented [on Jun 6|https://github.com/hyperledger/indy-sdk/issues/841#issuecomment-395108378] • 
edited 
|[@lodo1995|https://github.com/lodo1995] Thanks! Could you send a PR?|;;;","08/Nov/18 10:37 PM;Artemkaaas;The limitation of libsodium was removed, but we left usage of libsodium 1.0.14 in dockerfiles
Done in PR:  https://github.com/hyperledger/indy-sdk/pull/1271;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Can not run the source code of tutorials ""Write a DID and Query Its Verkey"" ",IS-993,33917,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,burdettadam,burdettadam,20/Sep/18 4:35 AM,30/Mar/19 5:57 AM,28/Oct/23 2:50 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"h3. *[nbxtruong|https://github.com/nbxtruong]* commented [on May 15|https://github.com/hyperledger/indy-sdk/issues/762#issue-323439230]  
|I do this [tutorial|https://github.com/hyperledger/indy-sdk/blob/master/doc/how-tos/write-did-and-query-verkey/java/README.md]. I run ""mvn clean install"" It show ""Build Success"" on terminal. I already have libindy.so file in ./lib/
But, When I click button ""Run App"" on Eclipse IDE, It show this [error|https://imgur.com/pTtosrV].
And this is my pom.xml file:
  {{<modelVersion>4.0.0</modelVersion>
<groupId>org.hyperledger.indy-sdk-java</groupId>
<artifactId>indy-sdk-java-sample</artifactId>
<packaging>jar</packaging>
<version>0.0.1</version>
<name>indy-sdk-java</name>
<description>This is the sample of usage java wrapper for Hyperledger Indy SDK.
</description>
<licenses>
	<license>
		<name>MIT/Apache-2.0</name>
		<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		<distribution>repo</distribution>
	</license>
</licenses>

<scm>
	<url>https://github.com/hyperledger/indy-sdk</url>
	<connection>scm:git:git://github.com/hyperledger/indy-sdk.git</connection>
	<developerConnection>scm:git:git@github.com:hyperledger/indy-sdk.git</developerConnection>
</scm>

<properties>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<github.global.server>github</github.global.server>
</properties>

<repositories>
	<repository>
		<id>evernym</id>
		<url>https://repo.evernym.com/artifactory/libindy-maven-local</url>
	</repository>
</repositories>

<build>
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.3</version>
			<configuration>
				<source>1.8</source>
				<target>1.8</target>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-source-plugin</artifactId>
			<version>2.4</version>
			<executions>
				<execution>
					<goals>
						<goal>jar</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>2.18.1</version>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-dependency-plugin</artifactId>
			<version>2.10</version>
			<executions>
				<execution>
					<id>execution</id>
					<phase>package</phase>
					<goals>
						<goal>copy-dependencies</goal>
					</goals>
				</execution>
			</executions>
			<configuration>
				<includeScope>runtime</includeScope>
			</configuration>
		</plugin>

	</plugins>
</build>

<dependencies>
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.12</version>
	</dependency>
	<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-lang3</artifactId>
		<version>3.5</version>
		<scope>compile</scope>
	</dependency>
	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
		<version>2.5</version>
	</dependency>
	<dependency>
		<groupId>org.json</groupId>
		<artifactId>json</artifactId>
		<version>20160810</version>
	</dependency>
	<dependency>
		<groupId>org.hyperledger</groupId>
		<artifactId>indy</artifactId>
		<version>1.4.0</version>
	</dependency>
</dependencies>}}
Help me, I run on Ubuntu 16.04, this is the first time I work with maven.
Thank you.|",,,,,,,,,,,,,,,,,,,,,,,,,IS-990,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvgv:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"20/Sep/18 4:36 AM;burdettadam;h3. *[vsudip|https://github.com/vsudip]* commented [on Jul 20|https://github.com/hyperledger/indy-sdk/issues/762#issuecomment-406590766]
|Can you paste your error here ?|;;;","21/Sep/18 8:34 PM;gudkov;Dupplicates IS-990;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
getting_started.py fails in indy_prover_store_credential,IS-994,33919,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,burdettadam,burdettadam,20/Sep/18 4:40 AM,30/Mar/19 5:57 AM,28/Oct/23 2:50 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"h3. *[srinivasanraghavan|https://github.com/srinivasanraghavan]* commented [on Apr 23|https://github.com/hyperledger/indy-sdk/issues/675#issue-317061330]
|The nodes are set up with the docket compose .. And I am using the master branch
The line anoncreds.prover_store_credential(alice_wallet, None, transcript_cred_request_json,
transcript_cred_request_metadata_json, authdecrypted_transcript_cred_json,
faber_transcript_cred_def, None)
fails with the following exception
Traceback (most recent call last):
File ""/home/srinivasan/ide/pycharm-community-2018.1.1/helpers/pydev/pydevd.py"", line 1664, in 
main()
File ""/home/srinivasan/ide/pycharm-community-2018.1.1/helpers/pydev/pydevd.py"", line 1658, in main
globals = debugger.run(setup['file'], None, None, is_module)
File ""/home/srinivasan/ide/pycharm-community-2018.1.1/helpers/pydev/pydevd.py"", line 1068, in run
pydev_imports.execfile(file, globals, locals) # execute the script
File ""/home/srinivasan/ide/pycharm-community-2018.1.1/helpers/pydev/_pydev_imps/_pydev_execfile.py"", line 18, in execfile
exec(compile(contents+""\n"", file, 'exec'), glob, loc)
File ""/home/srinivasan/code/indy-sdk/samples/python/src/main.py"", line 16, in 
run_coroutine(main)
File ""/home/srinivasan/code/indy-sdk/samples/python/src/utils.py"", line 45, in run_coroutine
loop.run_until_complete(coroutine())
File ""/usr/lib/python3.5/asyncio/base_events.py"", line 387, in run_until_complete
return future.result()
File ""/usr/lib/python3.5/asyncio/futures.py"", line 274, in result
raise self._exception
File ""/usr/lib/python3.5/asyncio/tasks.py"", line 239, in _step
result = coro.send(None)
File ""/home/srinivasan/code/indy-sdk/samples/python/src/main.py"", line 8, in main
await getting_started.run()
File ""/home/srinivasan/code/indy-sdk/samples/python/src/getting_started.py"", line 243, in run
faber_transcript_cred_def, None)
File ""/home/srinivasan/code/indy-sdk/samples/python/venv/lib/python3.5/site-packages/indy/anoncreds.py"", line 618, in prover_store_credential
prover_store_credential.cb)
File ""/usr/lib/python3.5/asyncio/futures.py"", line 363, in *iter*
return self.result() # May raise too.
File ""/usr/lib/python3.5/asyncio/futures.py"", line 274, in result
raise self._exception
indy.error.IndyError: ErrorCode.CommonInvalidParam8|",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrlz:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"20/Sep/18 4:40 AM;burdettadam;h3. *[ArthurManz|https://github.com/ArthurManz]* commented [on Apr 24|https://github.com/hyperledger/indy-sdk/issues/675#issuecomment-384076688]
|Have you tried rebuilding your containers to include all latest changes? I just ran the python Jupyter book and did just worked fine. {{docker rm $(docker ps -qa)
docker rmi $(docker images -qa)
docker-compose up}}|;;;","21/Sep/18 7:45 PM;gudkov;It works fine for us. I suggest to ask in RocketChat if help is still needed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI: many commands missing compared to indy-node CLI,IS-995,33920,,New Feature,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,burdettadam,burdettadam,20/Sep/18 4:42 AM,30/Mar/19 6:04 AM,28/Oct/23 2:50 AM,,,,,,,,,0,,,,,"h3. *[lodo1995|https://github.com/lodo1995]* commented [on Apr 19|https://github.com/hyperledger/indy-sdk/issues/663#issue-315977922]
|According to the [indy-node readme|https://github.com/hyperledger/indy-node/#dependent-projects], the indy-sdk cli should replace the indy-node cli.
But, looking at [the source of the former|https://github.com/hyperledger/indy-node/blob/stable/indy_client/cli/command.py#L18], [the source of the latter|https://github.com/hyperledger/indy-sdk/blob/master/cli/src/main.rs#L55] and [the design document of the latter|https://github.com/hyperledger/indy-sdk/blob/master/doc/cli-design.md#commands], it appears that the indy-sdk cli is still missing many functions.
I found [a jira issue about the overall switch between the two clis|https://jira.hyperledger.org/projects/IS/issues/IS-380?filter=allopenissues], but I didn't manage to understand whether the missing commands will be implemented and, if so, whether they will be available soon or require some more time.|",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrm7:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,,,,,,,,,,,"20/Sep/18 4:43 AM;burdettadam;h3. *[dbluhm|https://github.com/dbluhm]* commented [on Apr 24|https://github.com/hyperledger/indy-sdk/issues/663#issuecomment-384038922]
|I noticed you were able to talk with [@dhh1128|https://github.com/dhh1128] about this on RocketChat. Is there anything you can add here to clarify what seems to be missing?|;;;","20/Sep/18 4:44 AM;burdettadam;h3. *[lodo1995|https://github.com/lodo1995]* commented [on Apr 24|https://github.com/hyperledger/indy-sdk/issues/663#issuecomment-384074938]
|According to the documentation in {{indy-node}}, the CLI implemented there has commands to perform the following actions, which are currently missing from the CLI in this repository: * load a JSON file containing a connection request ({{load <file>}})
 * show a connection / connection request ({{show connection <name>}})
 * accept a connection request ({{accept request from <name>}})
 * check secure agent-to-agent communication channel ({{ping <name>}})
 * show a claim from the wallet or available from a remote agent ({{show claim <name>}})
 * obtain a claim from a remote agent ({{request claim <name>}})
 * show a proof request ({{show proof request <name>}})
 * send a proof to a remote agent ({{send proof <name> to <name>}})

Most of these commands require the implementation of agent-to-agent communication, which is implemented in {{indy-node/indy_client}} (reusing some code from {{indy-plenum}}), but not in {{libindy}}.|;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
GDPR compliance,IS-996,33921,,Improvement,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,,burdettadam,burdettadam,20/Sep/18 4:46 AM,24/Oct/18 10:58 PM,28/Oct/23 2:50 AM,24/Oct/18 10:58 PM,,,,,,,,0,,,,,"h3. *[XeniaGabriela|https://github.com/XeniaGabriela]* commented [on Feb 17|https://github.com/hyperledger/indy-sdk/issues/539#issue-298027261]
|Dear indy team, even though this not an issue, I want to ask if you have investigated your mechanisms according to GDPR. It wood be very helpful for any application with users in the EU considering to integrate indy.
Thanks!|",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrvz:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,esplinr,,,,,,,,,,"20/Sep/18 4:47 AM;burdettadam;h3. *[nage|https://github.com/nage]* commented [on Feb 21|https://github.com/hyperledger/indy-sdk/issues/539#issuecomment-367411139]
|This has been a subject of a lot of discussion in the Identity WG and other places. Marta Piekarska is leading a collaborative effort to build out a paper on how Blockchains in general can address GDPR requirements here:
[https://docs.google.com/document/d/1wnRYOZrGZS6h_-PnJRaq1pAc35GrfGUZcXh46sTHdFQ/edit#heading=h.xlkpssu5kfbq]
Certainly we think that Indy's approach has many advantages when it comes to giving a user the ability to manage data sharing and meet GDPR requirements, but I am not aware of a paper that specifically addresses how Indy or an instance of Indy like Sovrin addresses GDPR requirements, but I could see how we could build out something very useful, and it would be a welcome contribution.|;;;","20/Sep/18 4:47 AM;burdettadam;h3. *[XeniaGabriela|https://github.com/XeniaGabriela]* commented [on Mar 6|https://github.com/hyperledger/indy-sdk/issues/539#issuecomment-370741605]
|I wrote an article about the greatest challenge, Right to Erasure: [https://journal.tiiqu.com/open-questions-about-gdpr-compliance-in-the-context-of-blockchain-technologies-55f51860b048]
While many properties of blockchain are great, this one is the most difficult to solve. It means that no personal data can be uploaded to the chain itself, only verifiers of personal data. The best way to link the verifier to the personal data would be ZKPs, simple hashes are considered pseudonymization, not anonymization, even though this opinion is questionable from a technical point of view (it is equivalent to say that good hashing can be backlinked or well encrypted data isn't private, the hacking procedures are the same...).
So if you implement ZKPs as verifiers on the legder for personal offchain identity data, then you will be in a great position :-)|;;;","24/Oct/18 10:58 PM;esplinr;The approach suggested by Xenia Gabriela is exactly the approach we plan to take. We are updating our recommendations to clarify that personal data should not be on the ledger, just the definitions and public DIDs necessary to verify claims.

Because this issue doesn't require code changes to the Indy SDK, I'm going to close it.

However, I recognize that we need to improve our documentation and dissemination of best practices. That will be tracked separately.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Error descriptions are not exposed on API level,IS-997,33922,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Invalid,,burdettadam,burdettadam,20/Sep/18 4:49 AM,30/Mar/19 5:57 AM,28/Oct/23 2:50 AM,30/Mar/19 5:57 AM,,,,,,,,0,,,,,"h3. *[peacekeeper|https://github.com/peacekeeper]* commented [on May 29, 2017|https://github.com/hyperledger/indy-sdk/issues/19#issue-231944271]
|When errors are raised in the code, they include a description, e.g. in {{build_nym_request}} in {{src/services/ledger/mod.rs}}: {{        let data = match data \{
            Some(d) => Some(NymOperationData::from_json(d)
                .map_err(\|err\| CommonError::InvalidStructure(format!(""Invalid data json: {}"", err.to_string())))?),
            _ => None
        };}}
But the callbacks on the API level only return the {{ErrorCode}} without description, e.g. in {{src/api/ledger.rs}}: {{        cb: Option<extern fn(xcommand_handle: i32, err: ErrorCode,
                request_json: *const c_char)>) -> ErrorCode {}}|",,,,,,,,,,,,,,,,,,,,,,,,,IS-511,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrmf:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,gudkov,,,,,,,,,,"20/Sep/18 4:49 AM;burdettadam;h3. *[dhh1128|https://github.com/dhh1128]* commented [on May 29, 2017|https://github.com/hyperledger/indy-sdk/issues/19#issuecomment-304689220]
|There are two possible approaches: 1) make functions return both an error code and error text, or 2) leave functions returning just an error code, but provide an API that looks up the associated text for an error code.
Posix generally favors error codes without text, and this approach has the advantage that it doesn't create localization problems, so I prefer approach 2. What do others think?|;;;","20/Sep/18 4:49 AM;burdettadam;h3. *[peacekeeper|https://github.com/peacekeeper]* commented [on May 29, 2017|https://github.com/hyperledger/indy-sdk/issues/19#issuecomment-304700670]
|Well the error text can be very dynamic. E.g. in the above example, the API error code for {{InvalidStructure}}is always 110, but the text could be _""Invalid data json: [--detailed JSON parsing error here--]""_ or _""Either raw or hash or enc must be specified""_, etc.
So I think only 1) would work?|;;;","20/Sep/18 4:50 AM;burdettadam;h3. *[dhh1128|https://github.com/dhh1128]* commented [on May 29, 2017|https://github.com/hyperledger/indy-sdk/issues/19#issuecomment-304742696]
|To me, if the same error code can be associated with significantly different error messages, then something is wrong with the design of the source code. An error code should always mean the same thing. For example, ""file not found"" might be the message for an error code, and the specific file might vary, but I wouldn't want the same error code to also mean ""file permission error"". We need the ability to have a KB article about each error code, to be able to seek help with an error code on stack overflow, etc.
If there is consensus about what I'm asserting (and there might not be; I'm curious...), then the only potential variation between error messages for a given code would be the specific context. For example, a ""JSON parsing error"" with code 123 might sometimes be associated with a missing curly brace at position 100, and sometimes with a missing quote mark at position 1000, but it would always be a JSON parsing error.
If that's true, then I think the value of the specific context is debatable. It's nice to return highly specific error messages, and as a programmer, I have appreciated them when APIs have provided them. However, I'm not sure it's worth a significant complication to the API to achieve this; most of the time, the programmer can infer or recreate the context once they know the general problem. If it's a ""file not found"" error, the programmer can figure out which file is missing, and if it's a JSON parsing error, the programmer can parse the JSON independently to discover what's wrong.
The reason I'm pushing back is that I don't think there's a convenient way to return both an error code and a message from every API. If you can think of a clean way to do so, that doesn't add a lot of complication for the caller and the callee, let's explore...|;;;","20/Sep/18 4:50 AM;burdettadam;h3. *[peacekeeper|https://github.com/peacekeeper]* commented [on May 30, 2017|https://github.com/hyperledger/indy-sdk/issues/19#issuecomment-304806936]
|I agree, if the error codes are specific/helpful enough, then this library shouldn't have to expose a detailed error text. Right now, some error codes seem to be pretty broad, e.g. consider some of the error texts associated with {{CryptoInvalidStructure}}: {{mod.rs:
101: return Err(SignusError::CryptoError(CryptoError::InvalidStructure(format!(""Verkey key not found"")))); 
120: return Err(SignusError::CryptoError(CryptoError::InvalidStructure(format!(""Signature key not found"")))); 
130: return Err(SignusError::CryptoError(CryptoError::InvalidStructure(format!(""Public key not found"")))); 
issuer.rs:
76: return Err(CryptoError::InvalidStructure(format!(""List of attribute names is required to setup claim definition""))) 
prover.rs:
130: ok_or(CryptoError::InvalidStructure(""Field v_prime not found"".to_string()))?.v_prime, 
132: .ok_or(CryptoError::InvalidStructure(""Field pkr not found"".to_string()))?, 
134: .ok_or(CryptoError::InvalidStructure(""Field revoc_reg not found"".to_string()))?.accumulator, 
165: return Err(CryptoError::InvalidStructure(""issuer is sending incorrect data"".to_string())); 
242: .ok_or(CryptoError::InvalidStructure(format!(""Schema not found"")))?; 
244: .ok_or(CryptoError::InvalidStructure(format!(""Claim definition not found"")))?; 
252: .ok_or(CryptoError::InvalidStructure(format!(""Predicate not found"")))?; 
264: .ok_or(CryptoError::InvalidStructure(format!(""Attribute not found"")))?; 
300: .ok_or(CryptoError::InvalidStructure(format!(""Attributes for claim {} not found"", claim_uuid)))? 
304: .ok_or(CryptoError::InvalidStructure(format!(""Encoded value not found"")))?; 
350: .ok_or(CryptoError::InvalidStructure(""Revocation registry not found"".to_string()))? 
353: .ok_or(CryptoError::InvalidStructure(""Field public_key_revocation not found"".to_string()))?, 
391: .ok_or(CryptoError::InvalidStructure(format!(""Claim not found"")))?; 
470: return Err(CryptoError::InvalidStructure(""Can not update Witness. I'm revoced."".to_string())) 
484: .ok_or(CryptoError::InvalidStructure(format!(""Key not found {} in tails"", accum.max_claim_num + 1 - j + mut_claim.i)))?)?; 
491: .ok_or(CryptoError::InvalidStructure(format!(""Key not found {} in tails"", accum.max_claim_num + 1 - j + mut_claim.i)))?)?; 
555: .ok_or(CryptoError::InvalidStructure(format!(""Value by key '{}' not found in c1.encoded_attributes"", k)))? 
557: .ok_or(CryptoError::InvalidStructure(format!(""Value not found in c1.encoded_attributes"")))? 
563: return Err(CryptoError::InvalidStructure(""Predicate is not satisfied"".to_string())) 
574: .ok_or(CryptoError::InvalidStructure(format!(""Value by key '{}' not found in u1"", i)))?; 
617: .ok_or(CryptoError::InvalidStructure(format!(""Value by key '{}' not found in eq_proof.mtilde"", k)))?; 
656: .ok_or(CryptoError::InvalidStructure(format!(""Encoded Value not found in init_prook.c1"")))?; 
681: .ok_or(CryptoError::InvalidStructure(format!(""Encoded value not found"")))? 
704: .ok_or(CryptoError::InvalidStructure(format!(""Value by key '{}' not found in init_proof.u_tilde"", i)))?; }}
One simple approach could also be to keep things the way they are, and developers could just turn on logging if they need to see the error text.|;;;","20/Sep/18 4:53 AM;burdettadam;h3. *[vimmerru|https://github.com/vimmerru]* commented [on May 30, 2017|https://github.com/hyperledger/indy-sdk/issues/19#issuecomment-304818643]
|I totally agree that the developer needs some way for better understanding what is wrong. Current error codes design tries to achieve 2 different things: # Provide reasonable codes for validation/error cases that can be recovered by an application. It always well-detailed code. All these codes must be handled by application code and some recovery procedure must be executed. For example, if revocation registry is full libsovrin raises AnoncredsRevocationRegistryFullError and application should create a new revocation registry. This error codes can be handled without additional message as recovery procedure is clear. Actually, assigned message is static.
 # Provide error codes that help developer avoid invalid library usage: pass invalid handle, invalid json, invalid crypto structure and etc... In the most cases, the application should just panic or ask a user to send an error report if this error code was received. Types that libsovrin use (especially Anoncreds) are very complex, validation can't be performed on one code level without breaking code encapsulation and it seems overkill to map each possible validation case to the specific error code. It would be really nice to have a message with details. This message is dynamic and will help a lot to application developer, libsovrin developers and customer support. Also livsovrin have a lot of internal integrity checking and libsovrin error will be also reported as error codes instead of panic.|

We don't actually process user input. So error messages are intended only to developers and i18n ins't required.
We are now performing refactoring of validation logic and error codes. It will be finished soon: # Amount of error codes will be reduced. Similar error code will be grouped if the recovery procedure is the same.
 # Better messages for each error case with propagation history.
 # Avoid implicit error propagation based on low-level messages. Better analysis of each case to determine precondition or invariant case.
 # Error logging will be more flexible. Our plan provides error logging for each internal recovery or error propagation case.

Actually, for me, it looks like this logging can solve this developers problem.|;;;","20/Sep/18 4:58 AM;burdettadam;h3. *[vimmerru|https://github.com/vimmerru]* commented [on May 30, 2017|https://github.com/hyperledger/indy-sdk/issues/19#issuecomment-304821570] • 
edited 
|{quote}To me, if the same error code can be associated with significantly different error messages, then something is wrong with the design of the source code. An error code should always mean the same thing. For example, ""file not found"" might be the message for an error code, and the specific file might vary, but I wouldn't want the same error code to also mean ""file permission error"".{quote}
I am not sure that it is good error codes design. ""file not found"" can be raised in totally different cases with different recovery procedure: # Example one. File name can be provided by application and it is precondition checking that can be recovered.
 # Example two. It can be raised by storage backend and it is invariant checking. Most probable in this case only application panic is possible.

Same with json. We need different error codes for a case when user passed invalid json and for a case when we can't parse value stored in the wallet.
So in error codes design we are more thinking about recovery procedure than propagation of low-level error by specific error code. But this error code information is important for debugging and it would be nice to have detailed error message.|;;;","20/Sep/18 4:59 AM;burdettadam;h3. *[dhh1128|https://github.com/dhh1128]* commented [on May 30, 2017|https://github.com/hyperledger/indy-sdk/issues/19#issuecomment-304960213]
|Here is my current preference, after the discussion that's taken place in the thread so far: # We implement error codes that are granular enough so that when we predict they will require a different response, we return a different code. In other words, code that calls the API should be able to decide how to handle an error using _only_ the code.
 # We associate each error code with a 1- or 2-sentence error message that never varies by context. If we are using the same error code with multiple messages, we need multiple error codes.
 # We use logging for programmers to learn about specific details/context for a given message. All logged messages should include a command_handle so we can associate caller context with callee context.
 # We make sure we expose an API so consumers of the lib can configure logging.|;;;","20/Sep/18 4:59 AM;burdettadam;h3. *[vimmerru|https://github.com/vimmerru]* commented [on May 31, 2017|https://github.com/hyperledger/indy-sdk/issues/19#issuecomment-305244535]
|This plan looks ok for me too.|;;;","20/Sep/18 5:00 AM;burdettadam;h3. [jovfer|https://github.com/jovfer] pushed a commit that referenced this issue [on Aug 7, 2017|https://github.com/hyperledger/indy-sdk/issues/19#ref-commit-949d2a6];;;","20/Sep/18 5:00 AM;burdettadam;h3. *[AxelNennker|https://github.com/AxelNennker]* commented [on Jun 5|https://github.com/hyperledger/indy-sdk/issues/19#issuecomment-394673072]
|The plan is good as long as the application using libindy is in development.
The developer and QA have access to the logs.
When the application is released and logging is turned off and the user calls the hotline then things get complicated/expensive and then a message like '""/sdcard/.indy_client/wallet"" not found' might remind the user to insert the sdcard where the wallets are stored. (Assuming the mobile client to allow the user to choose where to store the wallets (sdcard, usb stick)
There are cases when providing context to the application helps the application to guide the user to do the right thing - which might also be telling him to contact the 3rd party (issuer, verifier, agent, ...) but not the application developer to fix the error.
(I am currently trying to get the unit tests to work on Android and there are a ton of IO_ERROR which do not really help without description)|;;;","20/Sep/18 5:00 AM;burdettadam;h3. *[AxelNennker|https://github.com/AxelNennker]* commented [on Jun 6|https://github.com/hyperledger/indy-sdk/issues/19#issuecomment-395153463] • 
edited 
|Has error_chain been discussed already?
[https://docs.rs/error-chain/0.11.0/error_chain/]
Using error_chain might spare us a lot of boilerplate error handling. I like the principles they adhere to especially: don't loose any information about the error.
The in the last moment when we translate the error to the ErrorCode we loose data but it looks like this would be an improvement to the current error handling implementation.
error-chain is used in Firefox core, too.
e.g. [https://dxr.mozilla.org/mozilla-central/source/media/audioipc/server/src/lib.rs#42]
What do you think?|;;;","20/Sep/18 5:01 AM;burdettadam;h3. [dkulic|https://github.com/dkulic] pushed a commit to dkulic/indy-sdk that referenced this issue [on Aug 14|https://github.com/hyperledger/indy-sdk/issues/19#ref-commit-79efc87];;;","21/Sep/18 8:20 PM;gudkov;Dupplicates IS-511;;;",,,,,,,,,,,,,,,,,
Got error when try to run the example for .Net Core ,IS-998,33925,,Bug,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,burdettadam,burdettadam,20/Sep/18 5:55 AM,30/Mar/19 6:04 AM,28/Oct/23 2:50 AM,,,,,,,,,0,,,,,"h3. *[nbxtruong|https://github.com/nbxtruong]* commented [on Jul 18|https://github.com/hyperledger/indy-sdk/issues/960#issue-342211867] • 
edited 
|I am using: # Docker for setup Ledger work with 4 Node.
 # donet-sdk-2.1
 # package Hyperledger.Indy.Sdk --version 1.4.0
 # Ubuntu 16.04

I have this error at step 10 when try to run [AnonCredsDemo.cs|https://github.com/hyperledger/indy-sdk/blob/master/samples/dotnet/Samples/AnonCredsDemo.cs]. You can check [this screenshot|https://imgur.com/a/HCj7sfX]
[@tmarkovski|https://github.com/tmarkovski] You have updated this example. Can you help me solve this problem?
Thank you|",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzzrn3:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,,,,,,,,,,,"20/Sep/18 5:56 AM;burdettadam;*[tmarkovski|https://github.com/tmarkovski]* commented 

[@nbxtruong|https://github.com/nbxtruong] Which version of libindy do you have installed on your linux machine? The nuget package only works with libindy 1.4.
The samples are updated for 1.5 pending a PR, if you want to check that out. It looks like you are running libindy 1.5, which changed the signature for that particular method.
Note, that in order to use 1.5 wrapper, you will need to build the package yourself, since it's not published to Nuget yet.

[#953|https://github.com/hyperledger/indy-sdk/pull/953];;;","20/Sep/18 5:56 AM;burdettadam;h3. *[nbxtruong|https://github.com/nbxtruong]* commented [on Jul 18|https://github.com/hyperledger/indy-sdk/issues/960#issuecomment-406139691]
|[@tmarkovski|https://github.com/tmarkovski] I build the package by following [this post|https://github.com/hyperledger/indy-sdk/blob/master/doc/ubuntu-build.md]. But, I got error. You can check [this screenshot|https://imgur.com/a/lLQJnUh]
Thank you|;;;","20/Sep/18 5:57 AM;burdettadam;h3. *[tmarkovski|https://github.com/tmarkovski]* commented [on Jul 18|https://github.com/hyperledger/indy-sdk/issues/960#issuecomment-406142120] • 
edited 
|This error is fixed by updating your rust compiler. You're probably using version 1.24. You need at least 1.26. Try running {{rustc -V}} to check. You can update to latest using {{rustup update}}
You can also install pre-compiled library. Here's a docker that I use to install both libindy1.5 and latest dotnet on Ubuntu 16.04. You can run the commands manually.
[https://github.com/streetcrednyc/docker/blob/master/dotnet-indy.dockerfile]|;;;","20/Sep/18 5:57 AM;burdettadam;h3. *[nbxtruong|https://github.com/nbxtruong]* commented [on Jul 18|https://github.com/hyperledger/indy-sdk/issues/960#issuecomment-406151761]
|Thank you [@tmarkovski|https://github.com/tmarkovski] I compile success. But, How I use this package after it compiled. Do I need update [this file|https://github.com/hyperledger/indy-sdk/blob/master/samples/dotnet/Samples/Samples.csproj]. I do not know how to run this example after this package compiled.|;;;","20/Sep/18 5:57 AM;burdettadam;h3. *[tmarkovski|https://github.com/tmarkovski]* commented [on Jul 19|https://github.com/hyperledger/indy-sdk/issues/960#issuecomment-406469679]
|[@nbxtruong|https://github.com/nbxtruong] You should copy the .so file into your library folder, usually /usr/lib under Linux or /usr/local/lib on Mac.|;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Issue about the document,IS-999,33926,,Bug,Complete,IS,Indy SDK,software,resplin,,,Medium,Done,sergey.minaev,burdettadam,burdettadam,20/Sep/18 6:04 AM,09/Nov/18 7:25 PM,28/Oct/23 2:50 AM,09/Nov/18 5:49 PM,,,,,,,,0,TShirt_S,,,,"h3. *[WandyLau|https://github.com/WandyLau]* commented [on Jul 12|https://github.com/hyperledger/indy-sdk/issues/949#issue-340873670]
|The ""get verinym"" 6 point:
[!https://user-images.githubusercontent.com/2303377/42671638-9a298b84-8693-11e8-8867-e4480a7ac2d5.png|width=925!|https://user-images.githubusercontent.com/2303377/42671638-9a298b84-8693-11e8-8867-e4480a7ac2d5.png]
The faber_verykey should be the one included in the faber_did_info, right?
Because the document says, 'ask ledger for the verykey, but I can not get it. there is no verykey on the ledger right now. And the did now here is different from the one before for connecting with steward. Or I missed something? Thanks in advance.|",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|hzwvgf:",,,,Unset,Unset,EV 18.22,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Artemkaaas,burdettadam,,,,,,,,,,"20/Sep/18 6:04 AM;burdettadam;h3. *[WandyLau|https://github.com/WandyLau]* commented [on Jul 20|https://github.com/hyperledger/indy-sdk/issues/949#issuecomment-406556361]
|I still can not get it right now. because the faber key corresponding to this did is not on ledger right now. Why to get it from ledger? It is produced above.|;;;","07/Nov/18 10:47 PM;Artemkaaas;The mistake was fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1272

Steward should ask ledger for verkey corresponding to faber_steward_did.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generate pool_transactions_genesis with DOCKERHOST for indy-pool,IS-1000,33927,,Bug,To Develop,IS,Indy SDK,software,resplin,,,Medium,,,burdettadam,burdettadam,20/Sep/18 6:06 AM,15/Aug/19 2:41 PM,28/Oct/23 2:50 AM,,,,,,,,,0,,,,,"h3. *[vitalrev|https://github.com/vitalrev]* commented [on Jul 12|https://github.com/hyperledger/indy-sdk/issues/943#issue-340614011]
|Currently the docker file names {{ci/indy-pool.dockerfile}} generates indy pool transactions for IP's 127.0.0.1.
{{generate_indy_pool_transactions --nodes 4 --clients 5 --nodeNum 1 2 3 4 --ips=""127.0.0.1,127.0.0.1,127.0.0.1,127.0.0.1""}}
This need to be changed to {{DOCKERHOST}} to generate correct {{pool_transactions_genesis}} files.|

GitHub PR: 
https://github.com/hyperledger/indy-sdk/pull/946",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,,Unset,No,,,"1|i002yt:ztzw",,,,Unset,Unset,CommunityContribution,,,,,,,,,,,,,,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),burdettadam,sergey.minaev,,,,,,,,,,"20/Sep/18 6:06 AM;burdettadam;h3. *[vitalrev|https://github.com/vitalrev]* commented [on Jul 12|https://github.com/hyperledger/indy-sdk/issues/943#issuecomment-404493622]
|I have done this in a feature branch {{feature/gentx_dockerhost}}.
will push and make a pull request...|;;;","20/Sep/18 6:08 AM;burdettadam;in my solution, i generate the {{pool_transactions_genesis}} not at the docker build but later at the docker run,

see PR:
[#946|https://github.com/hyperledger/indy-sdk/pull/946];;;","11/Oct/18 9:27 PM;sergey.minaev;We can't merge this PR as is (some cases in our CI is broken by this changes)
But most probably we will append the PR in scope of supporting multiply windows workers on Jenkins;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
