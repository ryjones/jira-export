Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Inward issue link (Cloners),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Duplicate),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Git Code Review),Outward issue link (Issue split),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Business Value),Custom field (Commit Levels),Custom field (Current Status),Custom field (Design),Custom field (Design Status),Custom field (Documentation Impact),Custom field (Documentation Status),Custom field (Epic Color),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (Executed),Custom field (Found in Commit),Custom field (Function Test Status),Custom field (Must Fix),Custom field (Original story points),Custom field (Parent Link),Custom field (Rank),Custom field (Release Note),Custom field (Release Note Required),Custom field (Root Cause Analysis),Custom field (SDK Impact),Custom field (Sample/Tutorial),Sprint,Sprint,Custom field (Steps to Reproduce),Custom field (Story Points),Custom field (System Test Impact),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Team),Custom field (Test Plan),Custom field (Test Result),Custom field (Test Result Details),Custom field (Test Type),Custom field (Triaged),Custom field (Usage),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Workaround),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitCommitsReferenced),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Update fabric-sdk-java jobs confguration to pull images from nexus,FAB-10184,30354,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,jtclark,rameshthoomu,rameshthoomu,17/May/18 11:41 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,,,,,,,,,,,,fabric-ci,,,,,0,CI_Release,,,,,,"Update fabric-sdk-java job configuration to pull images from nexus and run the e2e tests. This eliminates building docker images happens on every fabric-sdk-java patchsets.

https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/ publishes fabric & fabric-ca  ""stable"" tagged docker images to nexus and pull these images in the SDK jobs to eliminate building docker images again and again.

Note: After this change is merged in CI, SDK's no more clone/pull the fabric and fabric-ca repos and build images on the latest commit but it looks for the ""stable"" image which CI published from the fabric-merge-e2e-x86_64 job.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10068,,,,,,,,,"1|hzzazr:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reorder nodes in configtx based on feedback from Jason,FAB-10185,30355,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,sykesm,sykesm,18/May/18 12:00 AM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,21/May/18 7:25 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzazz:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/May/18 12:06 AM;sykesm;https://gerrit.hyperledger.org/r/21907 [FAB-10185] Reorder for logical consistency;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade Test: Verify ledger state after upgrading to 1.2 binaries,FAB-10187,30360,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,nagap,nagap,nagap,18/May/18 1:16 AM,30/Jul/19 10:52 AM,28/Oct/23 3:03 AM,30/Jul/19 10:52 AM,,,,,,,,,Future,,,fabric-quality,,,,,0,quality,SystemTestcase,,,,,"* In a stateful fabric network i.e fabric network with existing txs, take the backup of the ledger
 * upgrade the binary, mount the backed up volumes 
 * The ledger state should be recovered",,mastersingh24,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10087,,,,,,,,,,,,,,,,,FAB-10631,,,,,,,,,,,,,,,,,,,,,,,,FAB-10085,,,,,,,,,"1|hzzb13:",,,,,,,,,,,,,,,,,,,,,mastersingh24,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 10:52 AM;mastersingh24;old ... done elsewhere;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Service Discovery Performance Traffic 1 chaincode,FAB-10190,30363,,Test Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,dongming,scottz,scottz,18/May/18 1:53 AM,02/Dec/18 3:39 AM,28/Oct/23 3:03 AM,28/Jun/18 5:22 AM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,SystemTestcase,,,,,,"Identify an existing pte traffic test, and write a new one for comparison using Serv Disc. We must configure the network and the pte client to use service discovery, and run the traffic mix in a network that ideally contains many peers and orgs and channels and chaincodes with different endorsement requirements. Details TBD.

This is dependent on:
 # SDK code completion (FAB-8830)
 # PTE client application development for Mutual TLS
 # PTE client application development for using service discovery during initialization and in designing traffic patterns
 # it MAY also require writing a plugin or two for SDK behavior for the service discovery and for handling failures for transaction proposals, but we are hoping to use the default behavior for now

 

Test Name: FAB-10190 performance benchmark: constant run with service discovery

Component: Performance

Description: Performance constant invokes with service discovery

    chaincode: each channel has one chaincode, sample_cc NodeJS, instantiated

    transactions: 4 threads, each thread sends 10,000 invokes to each channel as the following:
 # thread 1 sends to channel 1
 # thread 2 sends to channel 1
 # thread 3 sends to channel 2
 # thread 4 sends to channel 2

    Each invoke has payload size of 1kb-2kb.

Artifact Location: crypto-config

Network Topology: docker containers; 2 channels, 2 organizations, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, with mutual TLS (clientauth)

Event:
          service: FilteredBlock
          listener: block

Client Driver: PTE

Output:
 # The benchmark passes if it completes without any error.
 # The benchmark fails if it encounters error or any event missing.

This testcase has the same setting as -FAB-7334- except the targetPeers in order to see the impact of using service discovery vs designated peers.",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8830,FAB-9925,FABN-274,,,,,,,,,,,,,,,,,,FAB-10191,FAB-10580,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,Automated,,,,,,"1|hzzb1b:",,,,,,,,,,,,,,,,Pass,,System Test,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"27/Jun/18 10:42 PM;dongming;https://gerrit.hyperledger.org/r/#/c/23725/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Service Discovery Chaos test stopping peers,FAB-10191,30364,,Test Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,dongming,scottz,scottz,18/May/18 1:55 AM,02/Dec/18 3:39 AM,28/Oct/23 3:03 AM,28/Jun/18 11:14 PM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,SystemTestcase,,,,,,"In 10190, we plan to revise an existing pte traffic test, to reconfigure the network and the pte client to use service discovery, and run the traffic. In this test, we will rerun 10190 plus restart some peers. However to do so, we need to know what to expect of the SDK behavior (e.g. automatic reselection upon failure if a peer is down, or not), and write pte client application code (possibly a plugin) to make decisions based on the expected behavior (e.g. do we need to abandon and then resend a TX proposal to a different endorser set in certain conditions, if necessary, or, to retrigger the service-discovery-request upon certain conditions and then resubmit TX proposal). Once those things are defined and coded, then we can write a testcase based on proper expectations so we will be able to know whether it passes or fails.

Not sure if all this can get done in v1.2. Extensive testing like this may more likely be done in next release.

 

Test Name: FAB-10191 performance benchmark: service discovery chaos with stopping peers

Component: Performance (robustness)

Description: Performance constant invokes with service discovery chaos test

    chaincode: each channel has one chaincode, sample_cc NodeJS, instantiated

    transactions: 4 threads, each thread sends 1 invoke per 100ms for 1 hour to each channel as the following:
 # thread 1 sends to channel 1
 # thread 2 sends to channel 1
 # thread 3 sends to channel 2
 # thread 4 sends to channel 2

    Each invoke has payload size of 1kb-2kb.

Artifact Location: crypto-config

Network Topology: docker containers; 2 channels, 2 organizations, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, with mutual TLS (clientauth)

Event:
          service: FilteredBlock
          listener: block

Client Driver: PTE

Simultaneously, executing test_chaos.sh to restart all orderers, peers, kafkas, and zookeepers one at a time

Output:
 # The benchmark passes if it completes the transactions resume after containers restored.

 ",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10190,,,FAB-11447,FAB-13007,,,,,,,,,,,,,,,,,,,,,,,FAB-10084,,,Automated,,,,,,"1|hzzb1j:",,,,,,,,,,,,,,,,Pass,,System Test,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"28/Jun/18 5:22 AM;dongming;https://gerrit.hyperledger.org/r/#/c/23757/;;;","29/Aug/18 12:55 AM;scottz;This v1.2 version of this testcase will be enhanced and replaced in v1.3 by FAB-11447;;;","28/Nov/18 8:16 AM;scottz;Intentions for 11447 have evolved to be more complicated, so we will keep 10191 and put it into the daily test suite.

We should enhance it a bit, though, to verify individual transactions on ALL peers. We will use another task for that minor change, but use these existing 10191 test scripts.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Run goAST scan on fabric-ca build for all applicable go packages,FAB-10192,30365,30313,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,18/May/18 2:16 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/May/18 3:54 AM,,,,,,,,,,,,fabric-ci,,,,,0,CI_Adhoc_Req,,,,,,Run goAST scan on fabric-ca build for all applicable go packages. Refer # https://jenkins.hyperledger.org/me/my-views/view/All/job/fabric-goast-weekly-x86_64/,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzb1r:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/May/18 12:59 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/21955/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Make current identity and membership docs available in 1.1 branch,FAB-10194,30367,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,18/May/18 3:28 AM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,18/May/18 9:25 PM,v1.1.0,,,,,,,,v1.1.0,,,fabric-docs,,,,,0,,,,,,,The final edits for identity.md and membership.md are available in master but not in the (current release-1.1 branch). Need to make these available in the v1.1 docs.,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzb27:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/May/18 6:26 AM;joe-alewine;https://gerrit.hyperledger.org/r/c/21921/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Remove ESCC and VSCC out of systemchaincode.html for v1.2,FAB-10198,30372,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,pandrejko,pandrejko,18/May/18 6:44 AM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,22/May/18 3:55 AM,v1.1.0,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,,,,,,,"Remove ESCC and VSCC out of systemchaincode.html for v1.2

 see FAB-9855",,kchristidis,pandrejko,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzb33:",,,,Unset,,,,,,Unset,,,,,,,,,,,kchristidis,pandrejko,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/May/18 3:56 AM;kchristidis;https://gerrit.hyperledger.org/r/c/22073/;;;","22/May/18 3:56 AM;kchristidis;Please set the JIRA fields accordingly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade Test: Verify and assert network components' expected behavior after upgrading to 1.2,FAB-10199,30373,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,nagap,nagap,nagap,18/May/18 7:08 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,20/Jun/18 6:31 AM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,Quality,SystemTestcase,,,,,"* Upgrade orderer (singular, hard upgrade with outage, since only one orderer) but not peers, send transactions successfully from 1.1 to 1.2
 * Upgrade orderer (singular) and all peers, send transactions successfully from 1.1 to 1.2
 * Upgrade orderer (singular) but not peers, send channel config updates to enable new capabilities, and peers should panic  from 1.1 to 1.2
 * Upgrade orderer (singular) and all peers, send channel config updates to enable new capabilities, and send transactions successfully from 1.1 to 1.2
 ** {color:#cccccc}Instructions for executing these test cases should be pretty much similar to those outlined in -FAB-7184- to FAB-7187.{color}

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10087,,,,,,,,,,,,,,,,,FAB-10732,,,,,"20/Jun/18 6:50 AM;nagap;byfn-upgrade-output.log;https://jira.hyperledger.org/secure/attachment/15124/byfn-upgrade-output.log",,,,,,,,,,,,,,,,,,,FAB-10085,,,,,,,,,"1|hzzb3b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update compiled proto files,FAB-10200,30374,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,18/May/18 7:12 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,18/May/18 11:35 AM,,,,,,,,,v1.2.0,,,fabric-common,,,,,0,,,,,,,"Need to update proto files, which got diverged.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzb3j:",,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/May/18 7:13 AM;C0rWin;https://gerrit.hyperledger.org/r/21951;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Improper check (could lead to state fork),FAB-10201,30376,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,ales,manish-sethi,manish-sethi,18/May/18 11:50 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,fabric-peer,,,,,0,stale-item,,,,,,"[https://github.com/hyperledger/fabric/blob/master/core/committer/txvalidator/validator.go#L332]

Though this is correct that `err == nil` indicates the presence of txid but reverse is not true (i.e., `err != nil` does not guarantee the absence of txid, unless the error is specifically of type [https://github.com/hyperledger/fabric/blob/master/common/ledger/blkstorage/blockstorage.go#L47]. For instance, this could be a general filesystem access error.

Any general error should be propagated up and should cause a peer panic since the validation code for the transaction cannot be decided.",,ales,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzb3z:",,,,,,,,,,,,,,,,,,,,,ales,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/May/18 6:30 PM;ales;https://gerrit.hyperledger.org/r/#/c/21979/;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Improve detection of cc invocation after cc upgrade,FAB-10202,30377,36665,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,18/May/18 6:51 PM,16/Jan/19 7:19 PM,28/Oct/23 3:03 AM,16/Jan/19 7:19 PM,,,,,,,,,v2.0.0,,,,,,,,0,,,,,,,"It is important that fabric guarantees the following



""_if a chaincode is upgraded, all subsequent transactions invoking that chaincode must use the new chaincode definition (incl. new code, new endorsement policy, new ESCC/VSCC etc.)""_

 

Currently fabric has 2 ways of doing so:
 # invocations of a chaincode introduce a read dependency in the LSCC namespace for the chaincode definition; if tx_\{i} upgrades the chaincode and tx_\{i+1} invokes the old chaincode, tx_\{i+1} will be marked as invalid because of the MVCC error
 # function _invalidTXsForUpgradeCC_ tracks chaincodes that are invoked after an upgrade, and invalidates transactions based on that

This needs to be restructured for the following reasons:
 * there is no code in the committer checking that appropriate LSCC read dependencies have been introduced for all chaincodes that have been invoked (i.e. for which there is a rwset side-effect)
 * function _invalidTXsForUpgradeCC_ only handles direct chaincode invocations and not chaincodes that are invoked in a chaincode-to-chaincode way

We should either add a check that appropriate LSCC read dependencies have been introduced (and remove invalidTXsForUpgradeCC), or fix invalidTXsForUpgradeCC so that it also handles chaincode-to-chaincode invocations.",,ales,denyeart,DexHunter,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzb47:",,,,Unset,,v2.0,,,,Unset,,,,,,,,,,,ales,denyeart,DexHunter,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/May/18 6:53 PM;ales;[~muralisr], [~jyellick], [~yacovm], [~mastersingh24], [~elli-androulaki], [~angelo.decaro]: thoughts?;;;","18/May/18 10:29 PM;yacovm;First and foremost i think we need to make sure we have a UT that actually checks that read dependency... I skimmed through endorser_test and doesn't look like there is one.
I guess it's introduced via the chaincode definition being retrieved via an SCC call to LSCC.getccdata (by the way... I think that for system chaincodes this doesn't apply.)

As for the restructuring - I guess it makes sense to add a check in the validator, but I'm not sure it's worth to do that for v1.2 as long as we're sure that in v1.0 and v1.1 and v1.2 we add that read dependency.

Long term:

I hate to say this - but I think all these validation checks spread across so many parts of the code (VSCC and vscc_validator, and validator) could use some consolidation.
I think we should think of how to move to a model where all checks are done in VSCC.

As for _invalidTXsForUpgradeCC_  - we also get the read dependency for those in the chaincode code (handler.go:859) so why indeed not remove that upgrade check long term altogether as you suggest? makes sense to me

 

Adding [~denyeart] and [~manish-sethi];;;","24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Set error code and not tx validation code in PostValidation,FAB-10203,30378,28450,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,ales,ales,18/May/18 7:00 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:05 PM,,,,,,,,,,,,,,,,,0,,,,,,,,,ales,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzb4f:",,,,,,Sprint 6 - NextGen Endorseme 2,,,,,,,,,,,,,,,ales,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NodeSDK memory leak,FAB-10204,30379,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,grapebaba,grapebaba,18/May/18 7:19 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:05 PM,,,,,,,,,,,,,,,,,0,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzb4n:",,,,,,,,,,,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade Test: Abort upgrade process at PONR,FAB-10206,30381,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,nagap,nagap,nagap,18/May/18 9:37 PM,30/Jul/19 11:42 AM,28/Oct/23 3:03 AM,30/Jul/19 11:42 AM,,,,,,,,,Future,,,fabric-quality,,,,,0,Quality,SystemTestcase,,,,,"{noformat}
Test Scenario: 
ABORT the upgrade process 
AT the point-of-no-return PONR just after upgrading all fabric components to v1.2 
BUT before any orderer channel reconfiguration (every step up to the point-of-no-return) 
THEN roll back to v1.1 version again.{noformat}
{color:#000000}Refer:{color}
 * [https://docs.google.com/document/d/16ZogU_InYeLZZ8lTGNdBhd4Iosi7T4KP3ppFSEUcI30/edit?ts=5a285ab9#heading=h.gfha2pfdu0uz]
 * [https://github.com/jeffgarratt/fabric-prototype/blob/master/features/upgrade.feature#L519|https://github.com/jeffgarratt/fabric-prototype/blob/master/features/upgrade.feature]
 * {color:#444444}Point Of No Return should be at line 519 in the upgrades file, before the ordering system channel update.{color}",,jyellick,mastersingh24,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10087,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10085,,,,,,,,,"1|hzzb53:",,,,,,,,,,,,,,,,,,,,,jyellick,mastersingh24,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 11:10 AM;jyellick;In the v1.2 upgrade, there is no upgrade to the orderer system channel.  However, you may consider enabling the application v1.2 capability as a PONR for the application channel and its peers.;;;","30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca jobs building and running extraneous things,FAB-10207,30385,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,18/May/18 10:08 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/May/18 12:50 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,CI_Optimization,,,,,,"The fabric-ca end-2-end job needlessly builds the fabric-ca-* images which are never actually used.
It also runs the e2e cli test which is both outdated and does not even exercise the fabric-ca",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzb5b:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/18 11:20 PM;mastersingh24;https://gerrit.hyperledger.org/r/21989;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"peers.md could use a makeover -- grammar, fonts, wording, etc.",FAB-10210,30391,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,rpjday,rpjday,rpjday,19/May/18 1:06 AM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,19/May/18 11:53 AM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,,,,,,,"peers.md could stand some cleanup:
 * wording
 * grammar
 * standardize on em dashes",,denyeart,rpjday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzb67:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,rpjday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/May/18 11:53 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/21997/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Make context deadline timeout variable tunable,FAB-10211,30394,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Duplicate,,SimonOberzan,SimonOberzan,19/May/18 1:55 AM,21/Jul/18 3:47 AM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,,,,,,,,,Future,,,fabric-peer,,,,,0,help-wanted,,,,,,"The [context deadline timeout|https://github.com/hyperledger/fabric/blob/release-1.1/peer/common/peerclient.go#L31] is currently fixed to 3 seconds. In some cases (e.g. when DNS is slow) the connection drops too quickly, so the ability to tune the timeout variable would be great.",,jyellick,SimonOberzan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzb6n:",,,,Unset,,,,,,Unset,,,,,,,,,,,jyellick,SimonOberzan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/May/18 2:10 AM;jyellick;This should be fairly low hanging fruit and would be a good task for someone looking to start contributing to fabric.  The timeout is hardcoded:

https://github.com/hyperledger/fabric/blob/release-1.1/peer/common/peerclient.go#L31
https://github.com/hyperledger/fabric/blob/release-1.1/peer/common/ordererclient.go#L34

So it would hopefully be a fairly simple task to simply override these when a flag is given.;;;","22/May/18 10:59 PM;wlahti;I was thinking the same thing recently as I noticed how slow the tests were running in this area. I created another JIRA and already have a pending CR so I'm going to mark this item as a duplicate of FAB-10247.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
idemixgen not showing proper version info,FAB-10212,30395,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,19/May/18 2:02 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/May/18 7:56 AM,,,,,,,,,v1.2.0,,,fabric-tools,,,,,0,,,,,,,idemixgen currently imports the orderer metadata package.  It actually needs its own in order to work with the current Makefile,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzb6v:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/May/18 2:09 AM;mastersingh24;https://gerrit.hyperledger.org/r/22003;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add output directory option for idemixgen,FAB-10213,30396,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,19/May/18 3:16 AM,21/Jul/18 3:49 AM,28/Oct/23 3:03 AM,19/May/18 7:56 AM,,,,,,,,,v1.2.0,,,fabric-tools,,,,,0,,,,,,,Need to be able to specify an output directory for idemixgen,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10217,,,,,,,,,FAB-10234,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzb73:",,,,Unset,,,,,,Unset,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/May/18 4:00 AM;mastersingh24;https://gerrit.hyperledger.org/r/22005;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
idemix APIs should hide the use of protobufs to CA,FAB-10214,30397,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,smithbk,smithbk,19/May/18 4:11 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-crypto,,,,,0,idemix,stale-item,,,,,"The idemix APIs should hide the use of protobufs in its APIs.
It can do this by:
a) adding XXXToBytes and XXXFromBytes functions for all XXXobjects that are returned.  This allows fabric CA to serialize/deserialize these objects over the wire or when persisting them.  An example is the IssuerKey which fabric CA needs to persist.
b) not use any explicit protobuf structs in any of its function signatures, but just define types such as
         type IdemixIssuerKey interface{}
         func NewIssuerKey(...) (IdemixIssuerKey, error)",,angelo.decaro,elli-androulaki,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwrxr:",,,,Unset,,,,,,Unset,,,,,,,,,,,angelo.decaro,elli-androulaki,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Sep/18 7:01 PM;elli-androulaki;[~smithbk], [~dubovitskaya], [~angelo.decaro] is this tackled already?;;;","12/Sep/18 7:43 PM;smithbk;Given where we are in the v1.3 cycle, I agreed that this could be changed to v1.4.
This means however that, in order to maintain backwards compatibility, that you will need to create additional APIs which don't use protobuf but not change the existing ones.  Obviously they could be deprecated and removed eventually.;;;","10/Dec/18 7:04 PM;angelo.decaro;[~smithbk], I guess this can be closed given that idemix has been integrated in BCCSP (protobuf are not exposed anymore). Correct?;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,
[CI] - Update fabric build script to fix the voting issue,FAB-10215,30398,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,19/May/18 4:37 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,21/May/18 8:46 AM,,,,,,,,,,,,fabric-ci,,,,,0,CI_Adhoc_Req,,,,,,Update fabric build script to fix the voting issue,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10181,,,,,,,,,"1|hzykzj:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/May/18 8:46 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/22007/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"duplicate images built in fabric when make docker-images, using up disk space",FAB-10216,30399,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,19/May/18 5:03 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,13/Jun/18 1:20 AM,,,,,,,,,Not a Bug,v1.2.0,,fabric-build,,,,,0,,,,,,,"With a clean system, in this case using Vagrant, in the fabric directory, ""make docker-images"" produces triples of most images. This uses up so much space. Why are all these necessary?

{{$ docker images}}
 \{\{ REPOSITORY TAG IMAGE ID CREATED SIZE}}
 \{\{ hyperledger/fabric-tools amd64-1.2.0-snapshot-c6d0e6c 085aba8cc114 2 minutes ago 1.46GB}}
 \{\{ hyperledger/fabric-tools amd64-latest 085aba8cc114 2 minutes ago 1.46GB}}
 \{\{ hyperledger/fabric-tools latest 085aba8cc114 2 minutes ago 1.46GB}}
 \{\{ <none> <none> e65b53797477 2 minutes ago 1.82GB}}
 \{\{ hyperledger/fabric-testenv amd64-1.2.0-snapshot-c6d0e6c 741ca3a32d68 4 minutes ago 1.56GB}}
 \{\{ hyperledger/fabric-testenv amd64-latest 741ca3a32d68 4 minutes ago 1.56GB}}
 \{\{ hyperledger/fabric-testenv latest 741ca3a32d68 4 minutes ago 1.56GB}}
 \{\{ hyperledger/fabric-buildenv amd64-1.2.0-snapshot-c6d0e6c accd067a6cf9 4 minutes ago 1.47GB}}
 \{\{ hyperledger/fabric-buildenv amd64-latest accd067a6cf9 4 minutes ago 1.47GB}}
 \{\{ hyperledger/fabric-buildenv latest accd067a6cf9 4 minutes ago 1.47GB}}
 \{\{ hyperledger/fabric-ccenv amd64-1.2.0-snapshot-c6d0e6c bc487e787cb5 4 minutes ago 1.42GB}}
 \{\{ hyperledger/fabric-ccenv amd64-latest bc487e787cb5 4 minutes ago 1.42GB}}
 \{\{ hyperledger/fabric-ccenv latest bc487e787cb5 4 minutes ago 1.42GB}}
 \{\{ hyperledger/fabric-orderer amd64-1.2.0-snapshot-c6d0e6c 310fc04e27fe 7 minutes ago 147MB}}
 \{\{ hyperledger/fabric-orderer amd64-latest 310fc04e27fe 7 minutes ago 147MB}}
 \{\{ hyperledger/fabric-orderer latest 310fc04e27fe 7 minutes ago 147MB}}
 \{\{ hyperledger/fabric-peer amd64-1.2.0-snapshot-c6d0e6c 64232ed4f541 7 minutes ago 154MB}}
 \{\{ hyperledger/fabric-peer amd64-latest 64232ed4f541 7 minutes ago 154MB}}
 \{\{ hyperledger/fabric-peer latest 64232ed4f541 7 minutes ago 154MB}}
 \{\{ hyperledger/fabric-baseimage amd64-0.4.8 308611935930 3 weeks ago 1.39GB}}
 \{\{ hyperledger/fabric-baseos amd64-0.4.8 83b7b016c8e5 3 weeks ago 128MB}}",,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzb7b:",,,,,,,,,,,,,,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/May/18 8:46 PM;mastersingh24;[~scottz] - It's 3 different tags all referencing the same physical image on disk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
idemixgen tool should be able to indicate where the output files should be located,FAB-10217,30400,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,mdr,latitiah,latitiah,19/May/18 5:09 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,,,,,,,,,DUPLICATE,,,,,,,,0,,,,,,,"commit sha: d78039b7da7a02a3d5ba107a6ff1c4315fd11099

The idemixgen tool should be able to indicate where the output files should be located.

Currently, when executing either of the idemixgen commands, the output is always generated in the current directory. We need to be able to indicate where the output files will go from the tool.
",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10213,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzb7j:",,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/May/18 4:57 AM;mastersingh24;this is already done and merged;;;","21/May/18 4:58 AM;mastersingh24;https://gerrit.hyperledger.org/r/22005;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Keys managed by the file based key store shouldn't be executable,FAB-10218,30401,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,19/May/18 5:10 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/May/18 7:47 AM,,,,,,,,,,,,,,,,,0,,,,,,,"bccsp/sw/fileks.go writes its files with permission 0700 - implying they're executable; they're not.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzb7r:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/May/18 5:25 AM;sykesm;https://gerrit.hyperledger.org/r/22011;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Usability: idemixgen user versus admin difference,FAB-10219,30402,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,19/May/18 5:11 AM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-crypto,,,,,0,stale-item,,,,,,"It's not clear how you can tell that you are using an admin setup or a user setup after using the tool. The output all goes to a directory ""user"". How do I know that the admin flag worked as expected?",,denyeart,dubovitskaya,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes,,,,,,,,,,,,"1|hzwqfk:6",,,,No,,To Do,,,1.0,Yes,,,,,,,,,,,denyeart,dubovitskaya,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Sep/18 12:59 PM;denyeart;[~dubovitskaya] What do you want to do for this one?;;;","20/Sep/18 6:26 AM;denyeart;[~latitiah] Can you clarify the impact?  It sounds more like an improvement (Story) than a bug to me, but wanted to hear from you if this fundamentally breaks something.;;;","20/Sep/18 10:06 PM;latitiah;This was opened awhile ago, but I'm fairly certain this is a usability issue and not a fundamental flaw. I will clarify in the summary and change the issue type.;;;","20/Sep/18 11:27 PM;dubovitskaya;I wonder how this is different to X.509 certificate that a user gets. It is also encoded and is unreadable. 

[~adc] please correct me if I am wrong here.;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Allow setup of ginkgo e2e to use kafka,FAB-10220,30403,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,19/May/18 5:13 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,24/May/18 11:52 PM,,,,,,,,,,,,,,,,,0,,,,,,,The ginkgo test setup should be able to use a kafka based orderer network.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzb7z:",,,,Unset,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/May/18 4:01 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/22015/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
integration test should use EventuallyWithOffset in the execute helper,FAB-10221,30404,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,19/May/18 5:26 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/May/18 8:06 PM,,,,,,,,,v1.2.0,,,,,,,,0,,,,,,,We're not currently specifying the offset so it's harder to establish the true cause of the failure.,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzb87:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/May/18 5:31 AM;sykesm;https://gerrit.hyperledger.org/r/22013;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
change omission of max peers to send private data to conservative semantics,FAB-10222,30405,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,19/May/18 6:14 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/May/18 10:04 PM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,"When the collection config specifies max peers, it might be 0.

Currently, gossip assumes that if the max peers is 0 then it was omitted, and just sets the max peers to all the known peers.

 

Since collection membership can change in v1.2, we should be conservative and enforce 0 max peers as 0.",,SjirNijssen,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzb8f:",,,,,,,,,,,,,,,,,,,,,SjirNijssen,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix unaddressed comments from CR 21683,FAB-10229,30413,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,20/May/18 1:11 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,21/May/18 2:48 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzb9z:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/May/18 1:15 AM;sykesm;https://gerrit.hyperledger.org/r/22031;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add self-signed TLS cert generation for java-sdk,FAB-10230,30414,23855,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,20/May/18 1:29 AM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,23/May/18 2:43 AM,,,,,,,,,,,,fabric-sdk-java,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfk:7",,,,,,To Do,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/May/18 1:43 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/22033/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Test: Manually exercise private data chaincode using BYFN network,FAB-10231,30415,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,20/May/18 4:26 AM,23/Jan/19 2:07 PM,28/Oct/23 3:03 AM,04/Jun/18 10:51 PM,,,,,,,,,v1.2.0,,,fabric-ledger,,,,,0,manual-test,,,,,,"These instructions take the dev env single peer test and artifacts from ---------FAB-10162--------- and runs it on top of the BYFN network with 2 orgs of 2 peers each.  It assumes you are already familiar with how to run BYFN with marbles02 chaincode as documented here:

[http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#using-couchdb]

The fabric-samples chaincode with the artifacts is at [https://github.com/hyperledger/fabric-samples/tree/master/chaincode/marbles02_private]

 

cd into fabric-samples/first-network.

Make sure V1_2 capability is set in configtx.yaml.  This is required for the channel to process private data.

Make sure any prior network is brought down:
{code:java}
./byfn.sh -m down{code}
We will spin up the network with docker compose and then run the commands manually.
{code:java}
./byfn.sh -m generate

docker-compose -f docker-compose-cli.yaml up -d

docker exec -it cli bash
{code}
 Or to use couchdb as state database:
{code:java}
./byfn.sh -m generate

docker-compose -f docker-compose-cli.yaml -f docker-compose-couch.yaml up -d

docker exec -it cli bash{code}
Setup channel and join on two peers

 
{code:java}
export CHANNEL_NAME=mychannel

peer channel create -o orderer.example.com:7050 -c mychannel -f ./channel-artifacts/channel.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem  

peer channel join -b mychannel.block

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_LOCALMSPID=""Org2MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt peer channel join -b mychannel.block

peer channel update -o orderer.example.com:7050 -c mychannel -f ./channel-artifacts/Org1MSPanchors.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_LOCALMSPID=""Org2MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt peer channel update -o orderer.example.com:7050 -c mychannel -f ./channel-artifacts/Org2MSPanchors.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
{code}
 

Install chaincode on peer0.org1 and instantiate chaincode on channel
{code:java}
peer chaincode install -n marblesp -v 1.0 -p github.com/chaincode/marbles02_private/go

peer chaincode instantiate -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -v 1.0 -c '{""Args"":[""init""]}' -P ""OR ('Org1MSP.peer','Org2MSP.peer')"" --collections-config /opt/gopath/src/github.com/chaincode/marbles02_private/collections_config.json
{code}
 

Invoke chaincode and query on peer0.org1
{code:java}
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""initMarble"",""marble1"",""blue"",""35"",""tom"",""99""]}'

peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarble"",""marble1""]}' 

peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarblePrivateDetails"",""marble1""]}'
{code}
 
Query on peer0.org1, but using an org2 client, this will fail if memberOnlyRead is set to true (available starting in v1.4...prior to that client access control had to be locked down in chaincode)
{code:java}
CORE_PEER_LOCALMSPID=Org2MSP CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarblePrivateDetails"",""marble1""]}'
{code}

If you want to try an update transaction, do a marble transfer:
{code:java}
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""transferMarble"",""marble1"",""jerry""]}'

peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarble"",""marble1""]}' 

peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarblePrivateDetails"",""marble1""]}'
{code}
  

Query chaincode peer1.org1 - will fail since peer has not yet joined channel
{code:java}
CORE_PEER_ADDRESS=peer1.org1.example.com:7051  peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarblePrivateDetails"",""marble1""]}'{code}
 

Install chaincode and query on peer0.org2 - First query succeeds, second query fails since org2 doesn't have access to collectionMarblePrivateDetails.
{code:java}
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_LOCALMSPID=""Org2MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt peer chaincode install -n marblesp -v 1.0 -p github.com/chaincode/marbles02_private/go   

CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarble"",""marble1""]}'   

CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarblePrivateDetails"",""marble1""]}'{code}

Join peer1.org1, it will catch up to current block height and pull private data as needed, then install chaincode on peer1.org1 and create a new marble on it
{code:java}
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer1.org1.example.com:7051 CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt peer channel join -b mychannel.block

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer1.org1.example.com:7051 CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt peer chaincode install -n marblesp -v 1.0 -p github.com/chaincode/marbles02_private/go  

CORE_PEER_ADDRESS=peer1.org1.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/server.crt peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""initMarble"",""marble30"",""blue"",""35"",""tom"",""99""]}'
{code}

Create a marble from peer0 and from peer1 in the same block
{code:java}
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""initMarble"",""marble40"",""blue"",""35"",""tom"",""99""]}'

CORE_PEER_ADDRESS=peer1.org1.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/server.crt peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""initMarble"",""marble50"",""blue"",""35"",""tom"",""99""]}'
{code}

Update collections_config.json to make Org2MSP.member a member of collectionMarblePrivateDetails.

 Install and upgrade to 2nd version of chaincode:
{code:java}
peer chaincode install -n marblesp -p github.com/chaincode/marbles02_private/go -v 2.0

peer chaincode upgrade -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""init""]}' -P ""OR ('Org0MSP.peer','Org1MSP.peer')"" --collections-config /opt/gopath/src/github.com/chaincode/marbles02_private/collections_config.json -v 2.0{code}
 
Install chaincode v2 and query on peer0.org2 again - If we use Fabric v1.4 or later, it is able to reconcile the data that was missing previously... Now both queries should succeed:
{code:java}
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_LOCALMSPID=""Org2MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt peer chaincode install -n marblesp -v 2.0 -p github.com/chaincode/marbles02_private/go   

CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarble"",""marble1""]}'   

CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarblePrivateDetails"",""marble1""]}'{code}

Invoke to create marble2:
{code:java}
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""initMarble"",""marble2"",""blue"",""35"",""tom"",""99""]}'{code}
Install chaincode and query on peer0.org2 - First query succeeds, second query now succeeds since org2 now has access to collectionMarblePrivateDetails.
{code:java}
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_LOCALMSPID=""Org2MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt peer chaincode install -n marblesp -v 2.0 -p github.com/chaincode/marbles02_private/go   

CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarble"",""marble2""]}'   

CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarblePrivateDetails"",""marble2""]}'{code}
 

Join peer1.org2, it will catch up to current block height and pull private data as needed:
{code:java}
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer1.org2.example.com:7051 CORE_PEER_LOCALMSPID=""Org2MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/ca.crt peer channel join -b mychannel.block{code}
peer1.org2 will have caught up to block height from the join, and attempts to pull the private data with these results:

marble1 - eligible and not purged - pull successful

marble1 private details - wasn't eligible at that block height, doesn't pull

marble2 - eligible and not purged - pull successful

marble2 private details - eligible but will soon be purged (based on default btlPullMargin of 10), doesn't pull

Finally, install chaincode v2 on peer1.org2 and query to confirm the results:
{code:java}
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer1.org2.example.com:7051 CORE_PEER_LOCALMSPID=""Org2MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/ca.crt peer chaincode install -n marblesp -v 2.0 -p github.com/chaincode/marbles02_private/go  

CORE_PEER_ADDRESS=peer1.org2.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/server.crt peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarble"",""marble1""]}'

CORE_PEER_ADDRESS=peer1.org2.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/server.crt peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarblePrivateDetails"",""marble1""]}'

CORE_PEER_ADDRESS=peer1.org2.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/server.crt peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarble"",""marble2""]}'

CORE_PEER_ADDRESS=peer1.org2.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/server.crt peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarblePrivateDetails"",""marble2""]}'{code}
 Now, recall the marble1 private details is still there on peer0.org1:
{code:java}
peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarblePrivateDetails"",""marble1""]}' {code}
marble1 was created at block4 and we are currently at block6 [NOTE, THIS IS NO LONGER CORRECT GIVEN ADDITIONS TO THE ABOVE, NEED TO FIX UP THE SCENARIO...]

Transfer marble2 2 times, this will cause marble1 private details to pass its blockToLive and get purged at block8.
{code:java}
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""transferMarble"",""marble2"",""jerry""]}'{code}
 Confirm marble1 private details is now purged... the query will not find marble1:
{code:java}
peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarblePrivateDetails"",""marble1""]}' {code}
 

Other test variations:

1) Now, re-run entire test with these changes to collections_config.json:
{code:java}
[
 {
     ""name"": ""collectionMarbles"",
     ""policy"": ""OR('Org1MSP.member', 'Org2MSP.member')"",
     ""requiredPeerCount"": 0,
     ""maxPeerCount"": 0,
     ""blockToLive"":1000000
},
 {
     ""name"": ""collectionMarblePrivateDetails"",
     ""policy"": ""OR('Org1MSP.member')"",
     ""requiredPeerCount"": 0,
     ""maxPeerCount"": 0,
     ""blockToLive"":20
 }
]{code}
Since maxPeerCount is 0 it will not disseminate at endorsement time, forcing private data pulls everywhere.  And the blockToLive of 20 means that the collectionMarblePrivateDetails is always available for pull.

 2) Do the upgrade and invoke at the same time, they will appear in the same block and the invoke will therefore get invalidated (transactions cannot appear in the same block as the chaincode's instantiation/upgrade, due to block processing batch processing).

3) Do two invokes at the same time to create different marbles. Check debug log to ensure efficient processing of both transactions in the block.  See defect -FAB-10499- for background.
{code:java}
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""initMarble"",""marble3"",""blue"",""35"",""tom"",""99""]}'
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""initMarble"",""marble4"",""blue"",""35"",""tom"",""99""]}'
 
{code}
 

 

You can generate debug log to see what is going on by setting in peer-base.yaml:
{code:java}
CORE_LOGGING_LEVEL=DEBUG
CORE_LOGGING_GOSSIP=DEBUG{code}
And then see debug highlights to confirm the functioning using key word grep like this:
{code:java}
docker logs peer0.org1.example.com 2>&1 | grep -i -a -E 'private|pvt|privdata|collection|apply'{code}",,avokadokurdu,C0rWin,denyeart,grice_32,GuillaumeTong,MaddaliPadmaja,MichaelWang,pandrejko,rlalgowdar,SjirNijssen,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10162,,,,,,,,,,FAB-9306,,,,,,,,"08/Aug/18 9:56 PM;MaddaliPadmaja;patch0.patch;https://jira.hyperledger.org/secure/attachment/15476/patch0.patch",,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzzadb:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,avokadokurdu,C0rWin,denyeart,grice_32,GuillaumeTong,MaddaliPadmaja,MichaelWang,pandrejko,rlalgowdar,SjirNijssen,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/May/18 12:23 AM;pandrejko;[~denyeart] - Just curious why do we need to run the following  steps? Is there a technical reason why we can't just use the existing BYFN network after running ./byfn.sh -m up? (Just trying to save the end users some work here)

 

./byfn.sh -m generate

peer channel create -o orderer.example.com:7050 -c mychannel -f ./channel-artifacts/channel.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem  

peer channel join -b mychannel.block

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_LOCALMSPID=""Org2MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt peer channel join -b mychannel.block

peer channel update -o orderer.example.com:7050 -c mychannel -f ./channel-artifacts/Org1MSPanchors.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_LOCALMSPID=""Org2MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt peer channel update -o orderer.example.com:7050 -c mychannel -f ./channel-artifacts/Org2MSPanchors.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

FWIW - Ratnaker and I tried the scenario after not running those steps, and so far it is working.

 ;;;","22/May/18 2:53 AM;denyeart;Right, if you do those steps in BYFN, you don't have to re-do them for private data.  But if you jump straight to private data sample without running BYFN scenario first you'll need to run them.;;;","23/May/18 5:38 AM;pandrejko;[~denyeart]

-- Can you provide a use case for purging private data? This capability seems contradictory to an immutable ledger. 

-- How does this affect the auditability of the blockchain if the data disappears?;;;","24/May/18 8:59 PM;C0rWin;[~denyeart] IMO, need to mention where one could find the chaincode itself, e.g.: https://gerrit.hyperledger.org/r/#/c/14769/;;;","25/May/18 2:18 AM;denyeart;[~C0rWin] The sample chaincode has moved to fabric-samples: [https://gerrit.hyperledger.org/r/#/c/22255/];;;","26/May/18 4:12 AM;denyeart;[~pandrejko] The private data may be transaction details between two parties, that they don't want to disclose to others on the channel. The private data is stored in private state database (aka side db) at these two organizations, and subsequent chaincode invocations between these two parties can reference or alter their shared private data.  Throughout these transactions, hashes of the private data are stored on the channel's blockchain. The private data may have a useful life in subsequent chaincode transactions for days or weeks until some logical conclusion of a business process (trade settled, contract fulfilled, etc). After that time, there is no need to keep the private data on their 'side dbs' for the purpose of chaincode transactions, and the parties may want the data to disappear to either save space or ensure it doesn't fall into the wrong hands later.  They will likely keep a copy of the private data in their internal systems regardless. Even after the private data is purged though, the hash of the private data remains on the channel's immutable blockchain, so if for example the parties get in a dispute at some later point in time, or want to transfer an asset to another party, they can share the private data as needed with the 3rd party, and that 3rd party can take a hash of the private data, and confirm that the hash matches the hash that was recorded on the blockchain.  The hash serves as 'evidence' or 'proof' that the private data existed between the parties at a certain point in time.;;;","31/May/18 3:38 AM;yuki-kon;Hello [~denyeart]. I have a question about the design of Side DB.
 I added a new test to the current description. I wanted to see the result of the invoke when org2 doesn't have access to collectionMarblePrivateDetails. After installing chaincode and query on peer0.org2, invoke chaincode on peer0.org2.

A function `initMarble` puts two collections: `collectionMarbles`, `collectionMarblePrivateDetails`. peer0.org2 has access to only `collectionMarbles`.
 According to my test, it seems like that putting data to `collectionMarbles` succeeded and putting data to `collectionMarblePrivateDetails` failed.
 When a function put 2 public data and one of them fails to update, nothing is committed to the ledger. I wonder why one of the putting data succeeded when using Side DB.
 Is this the expected behavior of Side DB?

Before executing the following test scenario, I modified endorsement policy because the current endorsement policy has the wrong org name. ""OR ('Org0MSP.peer','Org1MSP.peer')"" should be updated to ""OR ('Org1MSP.peer','Org2MSP.peer')""

Invoke chaincode on peer0.org2. The proposal response returned status code 200.
{code:java}
$ CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_LOCALMSPID=""Org2MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""initMarble"",""marble2"",""blue"",""35"",""tom"",""99""]}'
(snip)
2018-05-30 17:21:30.803 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> INFO 001 Chaincode invoke successful. result: status:200
{code}
After invoke on peer0.org2, query on peer0.org2. First query succeeded. Second query failed.
{code:java}
$ CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarble"",""marble2""]}'
(snip)
{""docType"":""marble"",""name"":""marble2"",""color"":""blue"",""size"":35,""owner"":""tom""}
 
$ CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarblePrivateDetails"",""marble2""]}'
(snip)
Error: error query chaincode by endorsing: status:500 message:""{\""Error\"":\""Failed to get private details for marble2: GET_STATE failed: transaction ID: c4d9f939a7a287eab92a70b72a26f3358663bc8aeec329db97a0b9c07c57e638: Private data matching public hash version is not available. Public hash version = &version.Height{BlockNum:0x5, TxNum:0x0}, Private data version = (*version.Height)(nil)\""}""
{code}
After that, query on peer0.org1. The result was the same. First query succeeded and second query failed.
{code:java}
$ peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarble"",""marble2""]}'
(snip)
{""docType"":""marble"",""name"":""marble2"",""color"":""blue"",""size"":35,""owner"":""tom""}
 
$ peer chaincode query -C mychannel -n marblesp -c '{""Args"":[""readMarblePrivateDetails"",""marble2""]}'
(snip)
Error: error query chaincode by endorsing: status:500 message:""{\""Error\"":\""Failed to get private details for marble2: GET_STATE failed: transaction ID: e01c03346c688ce9b355131b1cf1226836041e3be8a964bbe6e97f201b2fb1b7: Private data matching public hash version is not available. Public hash version = &version.Height{BlockNum:0x5, TxNum:0x0}, Private data version = (*version.Height)(nil)\""}""
{code};;;","31/May/18 6:40 AM;pandrejko;[~yuki-kon] I also wanted to let you know I am in the process of drafting a tutorial on this topic. It is similar but not identical to what Dave has here. I added you as a reviewer if you are interested. 

[https://gerrit.hyperledger.org/r/#/c/22357/]

 

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-docs-build-x86_64/349/html/private_data_tutorial.html;;;","31/May/18 7:09 AM;yuki-kon;Thank you, [~pandrejko]. I will check the tutorial.;;;","08/Aug/18 9:57 PM;MaddaliPadmaja;There is a subtle discrepancy in the current implementation of marbles private data chaincode. Collections are used to share data among a set of organizations within the channel and also used when transaction data must be kept confidential from ordering service nodes. However, the current chaincode implementation makes it possible for the ordering service node(s) to access the data shared as part of the collection.

The marbles private data sample includes two collections:
 * collectionMarbles - allows all peers in Org1 and Org2 to store marbles private data 'name, owner, color, size' in their side database
 * collectionMarblePrivateDetails - allows only peers in Org1 to store marbles private data 'price' in their side database.

As the two collections are included in the chaincode proposal, the private data is also available to the ordering service node(s). To restrict the data access by the ordering service node(s), we have to pass private data (above collections) in the transient field of the chaincode proposal. With this, only the private data hashes will go through orderer and not the private data itself. The use of the transient field guarantees that the private data content will not be part of the transaction payload and hence the private data will not be available to the ordering service node(s).

We modified the existing marbles02_private chaincode to retrieve the transient field values by calling the GetTransient() API inside chaincode invoke functions. Please find attached patch file(patch0.patch) for details.

Apply patch using
{code:java}
patch -p1 < patch0.patch
{code}
 

Please find modified chaincode invoke commands below

You need to generate marble details(name, color, owner, size and price) as base64 encoded string so that it can be passed as JSON to the peer chaincode invoke's transient parameter.

Transient parameters to create marble
{code:java}
NAME=$(echo marble1 | base64)
COLOR=$(echo blue | base64) 
SIZE=$(echo 35 | base64) 
OWNER=$(echo tom | base64) 
PRICE=$(echo 99 | base64)
{code}
*Invoke transaction to create new marble:*
{code:java}
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""initMarble""]}' --transient ""{\""NAME\"":\""$NAME\"",\""COLOR\"":\""$COLOR\"",\""OWNER\"":\""$OWNER\"",\""SIZE\"":\""$SIZE\"",\""PRICE\"":\""$PRICE\""}"" 
{code}
*Invoke transaction to transfer marble (assign new owner):*

 
{code:java}
NAME=$(echo marble1 | base64)
NEWOWNER=$(echo alice | base64)

peer chaincode invoke -o orderer.example.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""transferMarble""]}' --transient ""{\""NAME\"":\""$NAME\"",\""NEWOWNER\"":\""$NEWOWNER\""}"" {code}
 

*Invoke transaction to transfer all marbles of a certain color*
{code:java}
COLOR=$(echo red | base64)
OWNER=$(echo tom | base64)

peer chaincode invoke -o orderer.example.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp1 -c '{""Args"":[""transferMarblesBasedOnColor""]}' --transient ""{\""COLOR\"":\""$COLOR\"",\""OWNER\"":\""$OWNER\""}"" 

{code}
 

 

*Invoke transaction to delete marble*
{code:java}
NAME=$(echo marble1 | base64)

peer chaincode invoke -o orderer.example.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{""Args"":[""delete""]}' --transient ""{\""NAME\"":\""$NAME\""}""
{code}
 

 ;;;","20/Sep/18 2:56 AM;denyeart;[~MaddaliPadmaja] That's correct, in the real world transient field should be used to pass private data from client to chaincode, so that it doesn't show up in the block.  Private data sample and tutorial will be updated in FAB-12056.;;;","20/Sep/18 12:27 PM;GuillaumeTong;[~MaddaliPadmaja] thank you for this example. A small correction however: 

You said:
{code:java}
NAME=$(echo marble1 | base64)
COLOR=$(echo blue | base64) 
SIZE=$(echo 35 | base64) 
OWNER=$(echo tom | base64) 
PRICE=$(echo 99 | base64){code}
Using echo simply will append a new line to the end of the string output, which can create problems later on in the chaincode (with conversion to numbers for example).

I suggest adding the -n option to echo:
{code:java}
NAME=$(echo -n marble1 | base64)
COLOR=$(echo -n blue | base64) 
SIZE=$(echo -n 35 | base64) 
OWNER=$(echo -n tom | base64) 
PRICE=$(echo -n 99 | base64){code}
 ;;;","23/Jan/19 2:07 PM;denyeart;[~MaddaliPadmaja] [~GuillaumeTong] Private data sample and tutorial has been updated in FAB-12056 to demonstrate passing private data via CLI transient parameter.;;;",,,,,,,,,,,,,,
Test structure for idemixgen runner needs to be updated,FAB-10232,30416,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,20/May/18 6:19 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,20/May/18 7:41 PM,v1.2.0,,,,,,,,v1.2.0,,,,,,,,0,,,,,,,"[https://gerrit.hyperledger.org/r/c/22027/] was merged but contained logic errors around setup and teardown that need to be fixed.

There were also idiomatic structure issues (like missing Describe contexts for each of the operations) that should be addressed.

[https://gerrit.hyperledger.org/r/c/22027/#message-a3310ee2_8f3c2dfa] contains the comments.",,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbaf:",,,,,,,,,,,,,,,,,,,,,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/May/18 7:30 AM;mastersingh24;[~sykesm] - Happy to change / fix this ..... I added comments on the original CR as well, but let me add them here for easier discussion.

Here's the dilemma .... *idemixgen signerconfig* depends on the artifacts generated by *idemixgen ca-genkey* 

So should I have one IT is a context where I call *ca-genkey* by itself and then another context where both are called in the same IT?
Or just go with a single context and IT where both are called and checked serially?  

I cannot create/delete the directory after running *ca-genkey* and then call *signerconfig*;;;","20/May/18 7:31 AM;mastersingh24;I guess the other option is to create an aggregate function which just calls both commands together?;;;","20/May/18 12:24 PM;sykesm;https://gerrit.hyperledger.org/r/22035;;;",,,,,,,,,,,,,,,,,,,,,,,,
Update idemixgen documentation,FAB-10234,30418,,Documentation,Closed,FAB,Fabric,software,denyeart,,,High,Done,joe-alewine,mastersingh24,mastersingh24,20/May/18 8:36 PM,21/Sep/18 11:56 AM,28/Oct/23 3:03 AM,21/Sep/18 11:56 AM,,,,,,,,,v1.3.0,,,fabric-docs,,,,,0,Documentation,,,,,,idemixgen was recently updated so the CLI info in the docs needs to be updated,,baohua,dubovitskaya,joe-alewine,mastersingh24,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10213,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-10120,,,,,,,,,"1|hzwrpj:",,,,Unset,,,,,,Unset,,,,,,,,,,,baohua,dubovitskaya,joe-alewine,mastersingh24,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/18 5:42 AM;baohua;+1, and better with some sample workflow! Thanks!;;;","04/Sep/18 11:10 PM;joe-alewine;Update this in what way? [~dubovitskaya];;;","21/Sep/18 12:05 AM;dubovitskaya;[~joe-alewine] I thought that Gari meant it with respect to gingko. I just pushed a small update...

https://gerrit.hyperledger.org/r/#/c/26382/;;;",,,,,,,,,,,,,,,,,,,,,,,,
Update BYFN to use V1_2 application capability,FAB-10235,30419,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,21/May/18 1:54 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,23/May/18 1:47 AM,,,,,,,,,v1.2.0,,,fabric-samples,,,,,0,,,,,,,"Update BYFN to use V1_2 application capability.

Required for private data collections.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwte7:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
integration-test make target/recipe unnecessaruily builds docker,FAB-10236,30420,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,21/May/18 2:38 AM,21/Jul/18 3:49 AM,28/Oct/23 3:03 AM,21/May/18 10:35 AM,v1.1.0,,,,,,,,v1.2.0,,,fabric-build,,,,,0,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbav:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/May/18 10:35 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/22041/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test verify jobs fail: manifest for hyperledger/fabric-orderer:amd64-1.1.0 not found,FAB-10237,30421,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,sambhavdutt,scottz,scottz,21/May/18 7:58 AM,19/Mar/19 8:12 PM,28/Oct/23 3:03 AM,25/May/18 5:08 AM,,,,,,,,,v1.2.0,,,fabric-build,,,,,0,ci-failure,,,,,,"""make docker"" in the .../hyperledger/fabric-ca/ directory is failing.

`Makefile:128: recipe for target 'build/image/fabric-ca-orderer/.dummy-amd64-1.2.0-snapshot-c583d33' failed`

 

Could the root cause have anything to do with the fact that images are named amd64 instead of x86 ?

Does the fabric-ca still use .../build/image/ instead of .../.build/image/ ?

 

Failure examples, one from the smoke test suite daily run, and one from a patchset verify job:

[https://jenkins.hyperledger.org/view/fabric-smoke/job/fabric-smoke-test-daily-x86_64/138/console]

[https://jenkins.hyperledger.org/job/fabric-test-verify-x86_64/1273/console]

 

Logs from console file:

`05:27:39 Successfully tagged hyperledger/fabric-ca:latest
 05:27:39 docker tag hyperledger/fabric-ca hyperledger/fabric-ca:amd64-1.2.0-snapshot-c583d33
 05:27:39 Copying build/docker/bin/fabric-ca-client to build/image/fabric-ca-orderer/payload
 05:27:39 mkdir -p build/image/fabric-ca-orderer/payload
 05:27:39 cp build/docker/bin/fabric-ca-client build/image/fabric-ca-orderer/payload
 05:27:40 Building docker fabric-ca-orderer image
 05:27:40 docker build -t hyperledger/fabric-ca-orderer --build-arg FABRIC_CA_DYNAMIC_LINK= build/image/fabric-ca-orderer
 05:27:40 Sending build context to Docker daemon 18.46MB

05:27:40 Step 1/6 : FROM *hyperledger/fabric-orderer:amd64-1.1.0*
 05:27:40 *manifest for hyperledger/fabric-orderer:amd64-1.1.0 not found*
 05:27:40 *Makefile:128: recipe for target 'build/image/fabric-ca-orderer/.dummy-amd64-1.2.0-snapshot-c583d33' failed*
 05:27:40 make[1]: *** [build/image/fabric-ca-orderer/.dummy-amd64-1.2.0-snapshot-c583d33] Error 1
 05:27:40 make[1]: Leaving directory '/w/workspace/fabric-smoke-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-ca'
 05:27:40 Makefile:62: recipe for target 'docker-images' failed
 05:27:40 make: *** [docker-images] Error 2
 05:27:40 + exit 1
 05:27:40 Build step 'Execute shell' marked build as failure`

 ",,kchristidis,rameshthoomu,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbb3:",,,,,,,,,,,,,,,,,,,,,kchristidis,rameshthoomu,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,true,"21/May/18 8:27 AM;rameshthoomu;change this line [https://github.com/hyperledger/fabric-test/blob/master/Makefile#L64] to `{{make docker-fabric-ca}}` will fix this issue
 * 
in fabric-ca, `{{make docker}}` builds fabric-ca and fabric-ca-* images.. but after Gari's recent patchset ([https://gerrit.hyperledger.org/r/#/c/21733/)] looks for *amd64-1.1.0* while building fabric-ca-* images
 * 
fabric-ca-* images will fail to build as we didn't published *amd64-1.1.0* tagged images.;;;","21/May/18 8:50 AM;sambhavdutt;The make target has been changed now to 
{code:java}
make docker-fabric-ca
{code}

https://gerrit.hyperledger.org/r/#/c/22045/;;;","22/May/18 1:01 AM;sambhavdutt;[~scottz] 

The last build after the fix for fabric-ca make target failed due to a curl and network issue, 

{code:java}
11:48:12 # cd .; git clone https://github.com/estesp/manifest-tool /opt/gotools/obj/src/github.com/estesp/manifest-tool
11:48:12 Cloning into '/opt/gotools/obj/src/github.com/estesp/manifest-tool'...
11:48:12 error: RPC failed; curl 56 GnuTLS recv error (-54): Error in the pull function.
11:48:12 fatal: The remote end hung up unexpectedly
11:48:12 fatal: early EOF
11:48:12 fatal: index-pack failed
{code}

I retriggered the test and it passed that point this time and started the Behave tests below, so the make didn't fail like it did before

{code:java}
13:59:38 curl -fL https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/chaintool-1.1.1/hyperledger-fabric-chaintool-1.1.1.jar > .build/bin/chaintool
13:59:38   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
13:59:38                                  Dload  Upload   Total   Spent    Left  Speed
13:59:39 
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100 16.4M  100 16.4M    0     0  52.5M      0 --:--:-- --:--:-- --:--:-- 52.7M
13:59:39 chmod +x .build/bin/chaintool
13:59:40 Creating .build/goshim.tar.bz2
13:59:41 mkdir -p .build/image/ccenv/payload
13:59:41 cp .build/docker/gotools/bin/protoc-gen-go .build/bin/chaintool .build/goshim.tar.bz2 .build/image/ccenv/payload
13:59:41 mkdir -p .build/image/ccenv
13:59:41 Building docker ccenv-image
13:59:41 docker build  -t hyperledger/fabric-ccenv .build/image/ccenv
13:59:42 Sending build context to Docker daemon  22.99MB


14:06:10 ========== Behave feature and system tests...
14:06:11 Feature: Bootstrapping Hyperledger Fabric # bootstrap.feature:7
14:06:11   As a user I want to be able to bootstrap my fabric network
14:06:11   @smoke
14:06:11   Scenario: Access to the fabric protobuf files                    # bootstrap.feature:66
14:06:11     Given I test the access to the generated python protobuf files # steps/orderer_impl.py:26
14:06:11     Then there are no errors                                       # steps/basic_impl.py:390
14:06:11 
14:06:11   @smoke
14:06:11   Scenario: Basic operations to create a useful blockchain network  # bootstrap.feature:71
14:06:11     Given I have a bootstrapped fabric network                      # steps/basic_impl.py:178
14:06:11 org1.example.com
14:06:11 org2.example.com
14:06:11 2018-05-21 14:06:11.963 UTC [common/tools/configtxgen] main -> WARN 001 Omitting the channel ID for configtxgen is deprecated. 

{code}

*Build Log*
https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-verify-x86_64/1279/

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/test_results_analyzer/;;;","22/May/18 3:50 AM;kchristidis;[~sambhavdutt]: What is the plan of attack here?;;;","25/May/18 5:08 AM;sambhavdutt;The fabric-ca has been fixed to build the ca images as expected and this make docker has been updated in the fabric-test.
https://gerrit.hyperledger.org/r/#/c/22147/;;;",,,,,,,,,,,,,,,,,,,,,,
Make collection policies filter peer identities instead of principal sets,FAB-10238,30422,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,21/May/18 7:58 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,22/May/18 6:03 AM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"The collection support in the discovery service supports collections by filtering out principal sets that aren't authorized by the principals derived from the policy in the collection config.

This is problematic in cases of when the collection config is defined with principals which have no obvious *IsA* relation with the endorsement policy: 
Consider a case where the endorsement policy is defined with principals of Org1.peer or and org2.peer, and the collection is defined with OUs of Org.

Any principal based policy can't accept nor reject such a scenario, since a peer role is based on an OU that is hidden from the principal itself.

 

Therefore, to support this case - we should move the filtering to the peer identities - instead of filtering the principal sets of the combinations of the endorsement policy, we would simply filter the channel peer membership and remove all peers that the some collection in the invocation chain doesn't authorize.

 ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbbb:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/May/18 8:13 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/22043/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Bug,FAB-10239,30423,,Task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Invalid,,jufeng.yao,jufeng.yao,21/May/18 10:23 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:05 PM,,,,,,,,,,,,,,,,,0,,,,,,,bug,,jufeng.yao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbbj:",,,,,,,,,,,,,,,,,,,,,jufeng.yao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove duplicated checking on TxID,FAB-10240,30424,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,21/May/18 3:30 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,23/May/18 7:34 AM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,Endorser,,,,,,"When doing endorsement, the TxID is checked in core/common/validation/msgvalidation.go, to make sure it equals to SHA256(nonce+creator).

After that, check whether it is empty again in the core/endorser/endorser.go.

However, the later checking actually won't happen because of the previous validation.",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbbr:",,,,,,,,,,,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/May/18 3:35 PM;baohua;https://gerrit.hyperledger.org/r/#/c/22049/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Publish docker images with multi-arch support,FAB-10242,30433,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,21/May/18 8:46 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,23/May/18 3:24 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,CI_Release,,,,,,Publish docker images to hyperledger dockerhub with multi-arch support.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10068,,,,,,,,,"1|hzzbcn:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 3:26 AM;rameshthoomu;Chris pushed this change to release-1.1 branch [https://github.com/hyperledger/fabric/blob/release-1.1/scripts/gen-manifests.sh]

and pushed images with multi-arch manually https://chat.hyperledger.org/channel/fabric-maintainers?msg=kqga4RndmWWsPyy8J;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
introduce collectionConfig and chaincode upgrades in e2e integration test,FAB-10243,30434,30098,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Senthil1,Senthil1,Senthil1,21/May/18 9:28 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,23/Jan/20 7:31 AM,,,,,,,,,Future,,,,,,,,0,stale-item,,,,,,"To test private data feature, we should be able to
 # pass collections config via chaincode instantiation
 # upgrade collections config via chaincode upgrade

Hence, we need to introduce collection config and chaincode upgrades in ginkgo e2e integration test. ",,denyeart,Senthil1,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfk:8",,,,,,To Do,,,,,,,,,,,,,,,denyeart,Senthil1,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 7:51 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/22061/;;;","23/Jan/20 7:31 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Change integration-test target to drive script,FAB-10244,30435,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,21/May/18 9:52 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,25/May/18 2:28 AM,,,,,,,,,,,,,,,,,1,testhelpers,,,,,,"The integration-test target in the makefile that was original delivered was bad and the one that was introduced in --FAB-10236-- isn't much better. Actually, it's broken since test failures don't case the build to fail...

The target should be phony and execute a script (much like unit-tests) that does ""the right thing""(TM).  This should not be to ""exec go test"" in the integration test packages.

Searching for suites is redundant when we have a perfectly acceptable runner (ginkgo) to drive the tests with appropriate parallelization.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbd3:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/May/18 1:11 AM;sykesm;https://gerrit.hyperledger.org/r/22269;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add integration test job in fabric build flow,FAB-10245,30437,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,21/May/18 10:14 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/Jun/18 1:13 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,CI_Adhoc_Req,,,,,,"Add integration test job in fabric build flow. Create a new CI job to run *make integration-test.*

Follow the below steps to create this new CI job.

1) Add this new Gerrit comment after run the smoke tests suite in ci-management/jjb/fabric/shell/fabric-build-script.sh. New Gerrit comment should be ""Run IntegrationTests""

2) Request LF team to create a new Label for this change "" F3-IntegrationTest""

3) New CI job has to pull images from nexus and run the integration tests.",,rameshthoomu,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10181,,,,,,,,,"1|hzzbdb:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/May/18 3:18 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/22215/;;;","29/May/18 11:16 PM;rameshthoomu;As per [Matthew Sykes|https://gerrit.hyperledger.org/r/#/q/owner:sykesmat%2540us.ibm.com+status:open] this job has been disabled for now but it's still in production Jenkins. Observed inconsistency test results after enable this job.

Once [~sykesm] approves will enable this job in production.

Note: The Integration test job will not use ""make integration-test"" target as it will build ccenv image but the fabric build flow will push images from build job and pull these images from nexus in the downstream jobs. So, the IntegrationTest job pull the images and execute go test ./... from integration directory. [~latitiah] ^^;;;","31/May/18 12:24 AM;sykesm;If it's not using the targets established in the build, it's not what we need. Perhaps you want to evaluate and update the makefile target?;;;","31/May/18 6:04 AM;rameshthoomu;Yes.. As CI merge e2e job from master branch publishing ccenv image to nexus.. I will update Integration build to pull ccenv image and run `make integration-test`.. I am seeing below error while running `make integration-test`.
{code:java}
./scripts/run-integration-tests.sh
Running integration tests...
./scripts/run-integration-tests.sh: line 31: ginkgo: command not found
make: *** [integration-test] Error 127{code};;;","19/Jun/18 1:13 AM;rameshthoomu;Integration Tests are now as part of fabric build flow. https://gerrit.hyperledger.org/r/#/c/22737/;;;",,,,,,,,,,,,,,,,,,,,,,
"Create ""F3-IntegrationTest"" label in fabric gerrit configuration",FAB-10246,30438,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,jwagantall,rameshthoomu,rameshthoomu,21/May/18 10:18 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,05/Jun/18 5:56 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,CI_Adhoc_Req,,,,,,"Create *""F3-IntegrationTest""* label in fabric gerrit configuration",,jwagantall,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10181,,,,,,,,,"1|hzzbdj:",,,,,,,,,,,,,,,,,,,,,jwagantall,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/May/18 2:47 AM;jwagantall;Added now.. you can test it and let me know if it works as expected. 

 

It has the same permissions as F3-UnitTest ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Peer CLI clients use hard-coded timeouts,FAB-10247,30442,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,21/May/18 11:00 PM,21/Jul/18 3:47 AM,28/Oct/23 3:03 AM,27/May/18 9:33 PM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"The peer CLI clients for connecting to an endorser, admin server, deliver service, or broadcast service use a hard-coded timeout of 3 seconds. This makes the unit tests that expect failures run exceptionally slow. This task updates the peer clients to use new config values ""peer.client.connTimeout"" and ""orderer.client.connTimeout"" so that tests can explicitly set a lower timeout value. 

Current time to run unit tests locally:

ok github.com/hyperledger/fabric/peer/chaincode 7.987s
ok github.com/hyperledger/fabric/peer/channel 8.639s
ok github.com/hyperledger/fabric/peer/common 6.115s
ok github.com/hyperledger/fabric/peer/node 4.087s

 ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10211,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbdz:",,,,Unset,,,,,,Unset,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/May/18 11:16 PM;wlahti;[https://gerrit.hyperledger.org/r/c/22055/]

The units tests for these packages now complete locally in:

ok  github.com/hyperledger/fabric/peer/chaincode 0.462s
ok  github.com/hyperledger/fabric/peer/channel 1.625s
ok  github.com/hyperledger/fabric/peer/common 0.198s
ok  github.com/hyperledger/fabric/peer/node 1.089s

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Disseminate endorsement time ledger height with private collection config,FAB-10248,30444,28952,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,21/May/18 11:14 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,22/May/18 10:27 AM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,"Currently if same private data transaction comes from different peers, there might be a case where one of the endorsing peers is most updated with respect to the collection configuration available. Therefore while answering pull request for missing private data we need to consider most recently updated collection config package based on the endorsement time ledger height.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbe7:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/May/18 11:19 PM;C0rWin;https://gerrit.hyperledger.org/r/22057;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update CI scripts to build only fabric-ca images not fabric-ca-* images in e2e tests,FAB-10249,30446,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,rameshthoomu,rameshthoomu,21/May/18 11:24 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,23/May/18 3:29 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,CI_Adhoc_Req,,,,,,Update CI scripts to build only fabric-ca images not fabric-ca-* images in e2e tests,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10181,,,,,,,,,"1|hzykzb:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 3:29 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/22059/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add log messages to indicat whenever peer is eligible or not for pvt data collection,FAB-10250,30447,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,22/May/18 12:06 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,22/May/18 7:49 PM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,"And the moment while inspecting block with transaction, peer silently ignores and continue without printing a single line to the log file, making it hard to troubleshot misconfiguration.   

{code}
func (bi *transactionInspector) inspectTransaction(seqInBlock uint64, chdr *common.ChannelHeader, txRWSet *rwsetutil.TxRwSet, endorsers []*peer.Endorsement) {
	for _, ns := range txRWSet.NsRwSets {
		for _, hashedCollection := range ns.CollHashedRwSets {
			if !containsWrites(chdr.TxId, ns.NameSpace, hashedCollection) {
				continue
			}
			policy := bi.accessPolicyForCollection(chdr, ns.NameSpace, hashedCollection.CollectionName)
			if policy == nil {
				continue
			}
			if !bi.isEligible(policy, ns.NameSpace, hashedCollection.CollectionName) {
				continue
			}
			key := rwSetKey{
				txID:       chdr.TxId,
				seqInBlock: seqInBlock,
				hash:       hex.EncodeToString(hashedCollection.PvtRwSetHash),
				namespace:  ns.NameSpace,
				collection: hashedCollection.CollectionName,
			}
			bi.privateRWsetsInBlock[key] = struct{}{}
			if _, exists := bi.ownedRWsets[key]; !exists {
				txAndSeq := txAndSeqInBlock{
					txID:       chdr.TxId,
					seqInBlock: seqInBlock,
				}
				bi.missingKeys[txAndSeq] = append(bi.missingKeys[txAndSeq], key)
				bi.sources[key] = endorsersFromOrgs(ns.NameSpace, hashedCollection.CollectionName, endorsers, policy.MemberOrgs())
			}
		} // for all hashed RW sets
	} // for all RW sets
}
{code}

there is a need to add log message to make it easier for debug, namely

{code}
			policy := bi.accessPolicyForCollection(chdr, ns.NameSpace, hashedCollection.CollectionName)
			if policy == nil {
				logger.Errorf(""Failed to retrieve collection config for collection %s, chaincode %s, txID %s, channel %s. Skipping."",
					ns.NameSpace, hashedCollection.CollectionName, chdr.TxId, chdr.ChannelId)
				continue
			}
			if !bi.isEligible(policy, ns.NameSpace, hashedCollection.CollectionName) {
				logger.Warningf(""Peer is not eligible for collection %s, chaincode %s, txID %s, channel %s. Skipping."",
					ns.NameSpace, hashedCollection.CollectionName, chdr.TxId, chdr.ChannelId)
				continue
			}
{code}",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzzbf3:",,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/May/18 12:11 AM;C0rWin;https://gerrit.hyperledger.org/r/22063;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
move install & instantiate logic out of SetupChannel() in e2e integration helper,FAB-10251,30448,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Senthil1,Senthil1,Senthil1,22/May/18 12:18 AM,30/Jul/19 11:59 AM,28/Oct/23 3:03 AM,30/Jul/19 11:59 AM,,,,,,,,,,,,,,,,,0,,,,,,,"In the helper module (i.e., integration/world), the SetupChannel() comprises the creation of a channel, join, installation of a chaincode, and instantiation. Further, there is no API for UpgradeChaincode(). To test private data feature, we would need to move chaincode installation logic from SetupChannel() to InstallChaincode() and introduce UpgradeChaincode(). To maintain consistency, we need to put the chaincode instantiation logic in InstantiateChaincode(). ",,mastersingh24,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbfb:",,,,,,,,,,,,,,,,,,,,,mastersingh24,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Improve message on query when peer is not authorized to view private data,FAB-10252,30450,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,denyeart,pandrejko,pandrejko,22/May/18 2:55 AM,30/Jul/19 11:59 AM,28/Oct/23 3:03 AM,30/Jul/19 11:59 AM,,,,,,,,,,,,fabric-ledger,,,,,0,,,,,,,"Currently, with the marbles_private_data sample chaincode, when a peer who is not

authorized to the private data issues a query for that data, they receive the following 'Error' when this is actually expected behavior.  We should handle this error better and improve the message returned. I'm not sure it should be an error.  'Peer not authorized to private data' or something like that?

```root@a0233053115d:/opt/gopath/src/github.com/hyperledger/fabric/peer#  peer chaincode query -C mychannel -n marblesp -c '\{""Args"":[""readMarblePrivateDetails"",""marble1""]}'
 Error: error query chaincode by endorsing: status:500 message:""\{\""Error\"":\""Failed to get private details for marble1: GET_STATE failed: transaction ID: 8bc0cf1b23773b11010e1670c8fd8daeb12cce611cbc03167102b9a83e1dd3bd: Private data matching public hash version is not available. Public hash version = &version.Height\{BlockNum:0x6, TxNum:0x0}, Private data version = (*version.Height)(nil)\""}"" 
 root@a0233053115d:/opt/gopath/src/github.com/hyperledger/fabric/peer#```",,mastersingh24,pandrejko,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtqn:",,,,Unset,,,,,,Unset,,,,,,,,,,,mastersingh24,pandrejko,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/18 2:56 AM;pandrejko;[~denyeart] Will this be addressed before we ship? (I have this message in the tutorial and need to update it when it is fixed.);;;","15/Jun/18 9:36 PM;pandrejko;[~denyeart] [~joe-alewine]

Dave will we be addressing this before GA? I ask because the current message is in the docs and we would want to update it.;;;","15/Jun/18 10:08 PM;SjirNijssen;My proposal would be:
You currently have no permission to see the requested data.;;;","30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,
E2E CLI tests fail in the fabric-end-2-end-merge CI job as channel consortium group wasn't created,FAB-10253,30451,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,ales,sambhavdutt,sambhavdutt,22/May/18 3:19 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,23/May/18 10:22 PM,,,,,,,,,v1.2.0,,,fabric-samples,,,,,0,ci-failure,,,,,,"CI tests failing fabric-e2e-merge tests as channel consortium group was not created, and the ordering service failed,

*FABRIC_COMMIT : 5b94364*
*FABRIC_CA_COMMIT : c583d33*

{code:java}
2018-05-21 14:00:46.888 EDT [common/tools/configtxgen] main -> WARN 001 Omitting the channel ID for configtxgen is deprecated.  Explicitly passing the channel ID will be required in the future, defaulting to 'testchainid'.
2018-05-21 14:00:46.888 EDT [common/tools/configtxgen] main -> INFO 002 Loading configuration
2018-05-21 14:00:46.909 EDT [msp] getMspConfig -> INFO 003 Loading NodeOUs
2018-05-21 14:00:46.910 EDT [msp] getMspConfig -> INFO 004 Loading NodeOUs
2018-05-21 14:00:46.910 EDT [common/tools/configtxgen/encoder] New -> CRIT 005 Error creating channel group: could not create consortiums group: failed to create consortium SampleConsortium: failed to create consortium org: 1 - Error loading MSP configuration for org: Org3MSP: failed to read issuer public key file: could not read file /Users/thoomu@us.ibm.com/gopath/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto-config/idemix/msp/IssuerPublicKey: open /Users/thoomu@us.ibm.com/gopath/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto-config/idemix/msp/IssuerPublicKey: no such file or directory
{code}

*Build Log*
https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-merge-end-2-end-x86_64/2536/

",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbfj:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/May/18 10:09 PM;sambhavdutt;The CI tests are still failing in end-2-end cli tests as channel consortium group was not created, and the ordering service failed, These end-2-end CI jobs fail because of this error,

1. fabric-merge-end-2-end-x86_64
2. fabric-end-2-end-daily-master-s390x
3. fabric-end-2-end-daily-master-x86_64

*FABRIC_COMMIT : 361a4ef*
*FABRIC_CA_COMMIT : bedd37c*

{code:java}
02:46:02 ##########################################################
02:46:02 #########  Generating Orderer Genesis block ##############
02:46:02 ##########################################################
02:46:02 2018-05-22 02:46:02.643 UTC [common/tools/configtxgen] main -> WARN 001 Omitting the channel ID for configtxgen is deprecated.  Explicitly passing the channel ID will be required in the future, defaulting to 'testchainid'.
02:46:02 2018-05-22 02:46:02.644 UTC [common/tools/configtxgen] main -> INFO 002 Loading configuration
02:46:02 2018-05-22 02:46:02.712 UTC [msp] getMspConfig -> INFO 003 Loading NodeOUs
02:46:02 2018-05-22 02:46:02.713 UTC [msp] getMspConfig -> INFO 004 Loading NodeOUs
02:46:02 2018-05-22 02:46:02.714 UTC [common/tools/configtxgen/encoder] New -> CRIT 005 Error creating channel group: could not create consortiums group: failed to create consortium SampleConsortium: failed to create consortium org: 1 - Error loading MSP configuration for org: Org3MSP: failed to read issuer public key file: could not read file /w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto-config/idemix/msp/IssuerPublicKey: open /w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto-config/idemix/msp/IssuerPublicKey: no such file or directory
{code}

*Build Logs*
https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-x86_64/78/;;;","23/May/18 10:21 PM;sambhavdutt;The end-to-end CLI tests are passing now in the fabric-end-2-end tests, the correct msp directory for the crypto has been set.

https://gerrit.hyperledger.org/r/#/c/22157/

;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Move the chaincode so it does not need to be in multiple locations,FAB-10255,30453,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,22/May/18 4:09 AM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,24/May/18 1:28 AM,,,,,,,,,,,,,,,,,0,,,,,,,"Currently, the chaincode resides in the testdata directories. Ideally, tests should be able to state the path on how to access the chaincode without copying the files or having multiple copies of the same chaincode under integration tests.",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbfz:",,,,Unset,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 12:39 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/22081/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Remove sidedb experimental files,FAB-10256,30455,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,manish-sethi,manish-sethi,22/May/18 4:35 AM,19/Sep/18 2:00 AM,28/Oct/23 3:03 AM,22/May/18 8:10 PM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,Remove the sidedb experimental files and move the extra functionalities present in these files to regular files.,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzzbg7:",,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric-sdk-java CI scripts,FAB-10258,30457,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Invalid,,rameshthoomu,rameshthoomu,22/May/18 5:41 AM,27/Jul/18 3:42 PM,28/Oct/23 3:03 AM,27/Jul/18 3:42 PM,,,,,,,,,Future,,,fabric-ci,,,,,0,CI_Optimization,,,,,,Update fabric-sdk-java CI scripts to verify the java sdk tests on the right fabric and fabric-ca commit levels.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykz3:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove OWASP tests from fabric-sdk-java merge job,FAB-10259,30458,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,rameshthoomu,rameshthoomu,22/May/18 5:42 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,29/Jun/18 3:57 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,CI_Optimization,,,,,,Remove OWASP tests from fabric-sdk-java merge job,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbgn:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 10:05 AM;jtclark;Patch is in review: https://gerrit.hyperledger.org/r/#/c/22173/;;;","23/May/18 7:27 PM;jtclark;Updates have been made to the https://gerrit.hyperledger.org/r/#/c/22173/ patch.  A Jenkins job has been added to the Sandbox to test this change.;;;","24/May/18 10:51 PM;jtclark;A number of enhancement options have been added to this script. Although the script is *IN-REVIEW*, there's several items in this patchset that need to be discussed with the CI team. This task is not a high priority, so the task is *ON-HOLD* for now. ;;;","02/Jun/18 5:25 AM;jtclark;The patch has been updated to remove the unnecessary comments and debug statements from the script. This task is back *IN-REVIEW.* ;;;","05/Jun/18 10:40 AM;jtclark;Patch was *REBASED*: https://gerrit.hyperledger.org/r/#/c/22173/;;;","28/Jun/18 12:22 AM;jtclark;Patch was *REBASED*: [https://gerrit.hyperledger.org/r/22173];;;","28/Jun/18 11:34 AM;jtclark;[~rameshthoomu] asked me to test this patch set in the sandbox. Test was *SUCCESSFUL*: [https://jenkins.hyperledger.org/sandbox/job/fabric-sdk-java-verify-x86_64/]

Waiting for the next review.;;;",,,,,,,,,,,,,,,,,,,,
Update nodejs version to 8.11.2 in CI scripts,FAB-10260,30459,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,22/May/18 5:44 AM,19/Sep/18 11:28 PM,28/Oct/23 3:03 AM,20/Jul/18 7:16 AM,,,,,,,,,Future,,,fabric-ci,,,,,0,CI_Adhoc_Req,,,,,,Update nodejs version to 8.11.2 in CI scripts,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10181,,,,,,,,,"1|hzykyv:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 3:23 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/22119/;;;","19/Jun/18 6:25 AM;rameshthoomu;This is on hold right now.. Will push post 1.2 release;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Fabric CI should enforce proto style requirements,FAB-10261,30460,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jyellick,jyellick,22/May/18 5:45 AM,30/Jul/19 11:47 AM,28/Oct/23 3:03 AM,30/Jul/19 11:47 AM,,,,,,,,,Future,,,fabric-quality,,,,,0,,,,,,,"Multiple times, proto definitions which do not adhere to the proto style have been merged.

Not following proto style makes our protos inconsistent, and is something we agreed we would follow long ago.

Since reviewers don't seem to notice when the proto style is skipped, we should really have a CI task which enforces and -1s these violations.

The particular conventions which concern me are that:
 # Field names are lower_snake_case
 # Messages are UpperCamelCase
 # Enums are UPPER_SNAKE_CASE",,denyeart,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbgv:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","30/Jul/19 11:47 AM;mastersingh24;No activity for around a year .... cleanup time;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Test: Check that while endorsing private data against peer with different ledger height pick most recent collection config,FAB-10262,30461,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,C0rWin,C0rWin,C0rWin,22/May/18 6:09 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-gossip,,,,,0,e2e-test,stale-item,,,,,"Since part of transactions might be pushed via different peers where peers might have different ledger height. Consequently, there might be a case where one of the endorsing peers have more updated collection configuration.

Need to implement an integration test to validate that while serving pull request for missing private data correct collection config will be picked up.",,C0rWin,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzzbh3:",,,,,,,,,,,,,,,,,,,,,C0rWin,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix comment while obtaining ledger height for distribution with pvt data and collection config,FAB-10263,30462,28952,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,22/May/18 6:51 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,22/May/18 7:50 PM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbhb:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/May/18 6:52 AM;C0rWin; https://gerrit.hyperledger.org/r/22089 [FAB-10263];;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Extend ledger.TxSimulator interface with GetHeight method,FAB-10264,30463,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,manish-sethi,C0rWin,C0rWin,22/May/18 7:11 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-ledger,,,,,0,stale-item,,,,,,Extend {{ledger.TxSimulator}} interface with {{GetHeight}} method to obtain updated and actual ledger height.,,C0rWin,denyeart,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10914,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbhj:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,denyeart,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/May/18 9:26 PM;kchristidis;This is either an improvement or a task/story?;;;","22/May/18 9:31 PM;C0rWin;I would consider it as an improvement, but I'd guess it's up to Manish to categorize it based on effort. ;;;","22/May/18 9:47 PM;manish-sethi;Yes, improvement seems fine.;;;","24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","09/Oct/18 11:13 PM;denyeart;[~manish-sethi] [~C0rWin] Remind us if this is still needed and is there another Jira that is blocked due to this.  For now, moving to v1.4.0.;;;","23/Jan/19 10:36 AM;denyeart;[~manish-sethi] [~C0rWin]Remind us if this is still needed and is there another Jira that is blocked due to this.

Also, is this an exact duplicate of FAB-10914?

For now, moving to Future. ;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,
Rename PolicyChecker to InstantiationPolicyChecker,FAB-10265,30464,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,22/May/18 9:00 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,22/May/18 6:09 PM,,,,,,,,,v1.2.0,,,,,,,,0,,,,,,,PolicyChecker has proven to be too generic a name.,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbhr:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/May/18 9:07 AM;sykesm;https://gerrit.hyperledger.org/r/22093;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Enable policy checks in cc-to-cc integration tests,FAB-10266,30465,,Task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,sykesm,sykesm,sykesm,22/May/18 9:01 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,23/May/18 6:24 PM,,,,,,,,,v1.2.0,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbhz:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/May/18 9:07 AM;sykesm;https://gerrit.hyperledger.org/r/22097;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Behave tests are failing in the daily and smoke tests.,FAB-10267,30466,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,sambhavdutt,sambhavdutt,22/May/18 10:08 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,23/May/18 10:07 PM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,ci-failure,,,,,,"The Behave tests are failing in the latest test, at Scenario: FAB-4717, the errors are posted below.

*fabric-test Commit: fca6663*

{code:java}
05:54:22   @shimAPI @daily
05:54:22   Scenario: FAB-4717: FAB-5663, chaincode-to-chaincode testing passing in channel name as a third argument to chaincode_ex05 when cc_05 and cc_02 are on different channels                      # chaincodes.feature:46
05:54:22     Given I have a bootstrapped fabric network of type kafka                                                                                                                                     # steps/basic_impl.py:170
05:54:22 org1.example.com
05:54:22 org2.example.com
.
.
05:57:17       Assertion Failed: Expected response was 3000; received Error occurred ['docker exec peer0.org1.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/9397f5685d8411e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query --name myex05 --ctor \'{\\""Args\\"": [\\""query\\"",\\""myex02_b\\"", \\""sum\\"", \\""channel2\\""]}\' --channelID behavesystest ""']: 2018-05-22 05:57:15.454 UTC [viperutil] getKeysRecursively -> DEBU 001 Found map[string]interface{} value for peer.BCCSP


05:57:17       Error: error query chaincode by endorsing: status:500 message:""Failed to query chaincode. Got error: \010\310\001\032\0041000"" 

{code}

*Build Logs*
https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/359/consoleFull

",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbi7:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/May/18 10:41 PM;sambhavdutt;The 'TESTS-chaincodes'  is failing in the smoke tests, fabric-test-verify , fabric-test-merge and fabric-smoke-test-daily. The test fails and no logs generated in the xml, CI fails to read the output file post the build.

*Build Logs*
https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-smoke-test-daily-x86_64/140/;;;","23/May/18 10:05 PM;sambhavdutt;The smoke tests are successful in the verify and merge CI tests multiple times, and the daily-smoke-test is successful today.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Fix invalid qscc path,FAB-10268,30467,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,22/May/18 11:38 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,22/May/18 9:24 PM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"The path of qscc (github.com/hyperledger/fabric/core/chaincode/qscc) is wrong.

Change it to correct path of github.com/hyperledger/fabric/core/scc/qscc.",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbif:",,,,,,,,,,,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/May/18 11:39 AM;baohua;https://gerrit.hyperledger.org/r/22103;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add levelDb bloom filter ,FAB-10270,30469,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,gatakka,gatakka,22/May/18 4:49 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,fabric-ledger,,,,,0,stale-item,,,,,,"levelDB supports bloom filters, that can increase performance dramatically. 

Can you add bloom filters, bits per key and BlockCacheCapacity in config file, so it is easy to configure them. In many real cases this functionality will be needed. For now the only way to enable them is by forking the source and compile custom Fabric. 

In my benchmarks, with 1.7 billion keys, without bloom filters, leveldb can do ~100 get request per second. If bloom filters are enable performance goes up to ~18000 get request per second.

Of course, this consume couple of gigabytes of RAM, in this particular case around 5GB, but we need the performance and the servers have the needed amount of RAM. In the ledger we have more than 5 billion keys.",,gatakka,sykesm,troyronda,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbiv:",,,,Unset,,,,,,Unset,,,,,,,,,,,gatakka,sykesm,troyronda,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
make idemix proto follow the proto style,FAB-10271,30470,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mdr,mdr,mdr,22/May/18 6:55 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,23/May/18 12:22 AM,,,,,,,,,v1.2.0,,,fabric-crypto,,,,,0,idemix,,,,,,"The idemix .proto file (fabric/proto/idemix.proto) does not follow the .proto style ([https://developers.google.com/protocol-buffers/docs/style]), so this should be updated.",,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10120,,,,,,,,,"1|hzzbj3:",,,,,,,,,,,,,,,,,,,,,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/May/18 6:59 PM;mdr;https://gerrit.hyperledger.org/r/#/c/22113/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add more test cases to TestSatisfiedBy,FAB-10272,30472,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,inbarbadian,yacovm,yacovm,22/May/18 8:59 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,05/Jun/18 10:40 PM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"The test [TestSatisfiedBy|https://github.com/hyperledger/fabric/blob/master/common/policies/inquire/inquire_test.go#L20-L69] checks a case of ORs of ANDs.

 

we should also check for cases with:
 * ANDs of ORs
 * ORs only
 * ANDs only

 

 ",,C0rWin,inbarbadian,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbjb:",,,,,,,,,,,,,,,,,,,,,C0rWin,inbarbadian,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jun/18 9:50 PM;inbarbadian;https://gerrit.hyperledger.org/r/#/c/22771/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Implement signature-based revocation algorithm for Identity Mixer MSP,FAB-10274,30475,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,mdr,dubovitskaya,dubovitskaya,22/May/18 10:20 PM,03/Dec/19 2:43 AM,28/Oct/23 3:03 AM,07/Dec/18 4:37 PM,,,,,,,,,,,,fabric-crypto,,,,,0,idemix,,,,,,,,dubovitskaya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13105,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FABC-588,,,,,,,,,"1|hzzbjz:",,,,Unset,,,,,,Unset,,,,,,,,,,,dubovitskaya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/May/18 10:20 PM;dubovitskaya;[https://gerrit.hyperledger.org/r/#/c/21161/]  is already in review (initial target was 1.2);;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE latency mode error,FAB-10275,30476,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,22/May/18 10:20 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,30/May/18 3:55 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"With block size >1, PTE has this error message with latency mode:

info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org2:0 eventRegister_latency] eventHub error: Error: TransactionId (2449f0064d0771cd91b967806b4564c7cd1eea6d631e1bcd05106211a4ad2ee4) has already been registered
 at ChannelEventHub.registerTxEvent (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/fabric-client/lib/ChannelEventHub.js:998:10)
 at Promise (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/tools/PTE/pte-execRequest.js:1466:16)
 at new Promise (<anonymous>)
 at eventHubs.forEach (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/tools/PTE/pte-execRequest.js:1463:25)
 at Array.forEach (<anonymous>)
 at eventRegister_latency (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/tools/PTE/pte-execRequest.js:1462:15)
 at /home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/tools/PTE/pte-execRequest.js:1521:13
 at <anonymous>",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzbk7:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,release-1.1,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,true,"24/May/18 3:41 AM;dongming;https://gerrit.hyperledger.org/r/#/c/22217/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
The PTE tests fail in fabric-smoke-test-daily due to timeout.,FAB-10276,30477,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,sambhavdutt,sambhavdutt,22/May/18 10:57 PM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,23/May/18 10:11 PM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,ci-failure,,,,,,"The PTE tests fail due to timeout(120 mins) , and the Orderer Ote tests fail in the smoke-test-daily,

*fabric-test Commit: fca6663*

{code:java}
06:34:13 ========== System Test using PTE and NL tools...
06:34:13 => nvm is already installed in /home/jenkins/.nvm, trying to update using git
06:34:14 
=> => Compressing and cleaning up git repository
.
.
06:37:43 npm WARN deprecated graceful-fs@3.0.11: please upgrade to graceful-fs 4 for compatibility with current and future versions of Node.js
06:40:55 npm WARN deprecated formatio@1.2.0: This package is unmaintained. Use @sinonjs/formatio instead
06:42:07 npm WARN deprecated wrench@1.3.9: wrench.js is deprecated! You should check out fs-extra (https://github.com/jprichardson/node-fs-extra) for any operations you were using wrench for. Thanks for all the usage over the years.
06:42:43 npm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue
06:44:33 npm WARN deprecated node-uuid@1.4.8: Use uuid module instead
06:48:26 npm WARN deprecated minimatch@0.2.14: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue
06:49:18 npm WARN deprecated graceful-fs@1.2.3: please upgrade to graceful-fs 4 for compatibility with current and future versions of Node.js
07:02:54 npm WARN notice [SECURITY] request has 1 moderate vulnerability. Go here for more details: https://nodesecurity.io/advisories?search=request&version=2.55.0 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info.
07:02:55 npm WARN notice [SECURITY] timespan has 1 low vulnerability. Go here for more details: https://nodesecurity.io
.
07:06:26 npm WARN deprecated gulp-util@3.0.8: gulp-util is deprecated - replace it, following the guidelines at https://medium.com/gulpjs/gulp-util-ca3b1f9f9ac5
07:08:09 npm WARN registry Using stale package data from https://registry.npmjs.org/ due to a request error during revalidation.
07:20:09 Build timed out (after 120 minutes). Marking the build as failed.
{code}


{code:java}
07:20:09 ========== Orderer component test using OTE and NL tools...
07:20:09 make: *** wait: No child processes.  Stop.
07:20:09 make: *** Waiting for unfinished jobs....
07:20:09 make: *** wait: No child processes.  Stop.
07:20:10 grep: /etc/default/sysstat: No such file or directory
07:20:10 provisioning config files...
07:20:10 copy managed file [jenkins-log-archives-settings] to file:/w/workspace/fabric-smoke-test-daily-x86_64@tmp/config4677486389986145356tmp
07:20:39 ls: cannot access '/w/workspace/fabric-smoke-test-daily-x86_64/archives/': No such file or directory
07:20:39 /tmp/tmp.LXwFugxdbq /w/workspace/fabric-smoke-test-daily-x86_64
07:20:39 Nothing to archive.
{code}


*Build Logs*
https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-smoke-test-daily-x86_64/140/
",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbkf:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 10:11 PM;sambhavdutt;The PTE and OTE tests are successful in the current test.

*fabric-test Commit: 34c2ffc*

*Build Log*
https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-smoke-test-daily-x86_64/141/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip Service.[FAB-4676] [FAB-4677] [FAB-4678] test failing with Chaincode instantiation problem,FAB-10277,30478,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,22/May/18 11:15 PM,19/Mar/19 8:12 PM,28/Oct/23 3:03 AM,25/Jun/18 11:58 PM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,ci-failure,,,,,," 

The test is failing due to path to CC being obsolete, need to update path. 
{code:java}
```

Error Message
The expected chaincode container 4d6122885d9111e88fb2fa163ee9637c-peer0.org1.example.com-mycc-0 is not running

Stacktrace
Failing step: And a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/example02"" with args [""init"",""a"",""1000"",""b"",""2000""] with name ""mycc"" ... failed in 322.930s Location: gossip.feature:146 Assertion Failed: The expected chaincode container 4d6122885d9111e88fb2fa163ee9637c-peer0.org1.example.com-mycc-0 is not running Captured stdout: testConfigs: configs/4d6122885d9111e88fb2fa163ee9637c [/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer channel create --file /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/behavesystest.tx --channelID behavesystest --timeout 300 --orderer orderer0.example.com:7050 ""]: {'cli': ''} [/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp peer channel fetch config /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/behavesystest.block --channelID behavesystest --orderer orderer0.example.com:7050 ""]: {'peer1.org2.example.com': ''} [/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_LOCALMSPID=org2.example.com CORE_PEER_ID=peer1.org2.example.com CORE_PEER_ADDRESS=peer1.org2.example.com:7051 peer channel join --blockpath /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/behavesystest.block""]: [/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_LOCALMSPID=org2.example.com CORE_PEER_ID=peer1.org2.example.com CORE_PEER_ADDRESS=peer1.org2.example.com:7051 peer chaincode install --name mycc --lang GOLANG --version 0 --path github.com/hyperledger/fabric/examples/chaincode/go/example02 --orderer orderer0.example.com:7050 ""]: {'peer1.org2.example.com': '', 'peer0.org1.example.com': '', 'peer1.org1.example.com': '', 'peer0.org2.example.com': ''} [/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode instantiate --name mycc --version 0 --lang GOLANG --channelID behavesystest --ctor '{\""Args\"": [\""init\"",\""a\"",\""1000\"",\""b\"",\""2000\""]}' --orderer orderer0.example.com:7050 ""]: {'peer0.org1.example.com': {'peer0.org1.example.com': 'Error occurred [u\'docker exec peer0.org1.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode instantiate --name mycc --version 0 --lang GOLANG --channelID behavesystest --ctor \\\'{\\\\""Args\\\\"": [\\\\""init\\\\"",\\\\""a\\\\"",\\\\""1000\\\\"",\\\\""b\\\\"",\\\\""2000\\\\""]}\\\' --orderer orderer0.example.com:7050 ""\']: \x1b[36m2018-05-22 07:26:36.728 UTC [viperutil] getKeysRecursively -> DEBU 001\x1b[0m Found map[string]interface{} value for peer.BCCSP\n\x1b[36m2018-05-22 07:26:36.729 UTC [viperutil] getKeysRecursively -> DEBU 002\x1b[0m Found map[string]interface{} value for peer.BCCSP.SW\n\x1b[36m2018-05-22 07:26:36.729 UTC [viperutil] unmarshalJSON -> DEBU 003\x1b[0m Unmarshal JSON: value cannot be unmarshalled: invalid character \'S\' looking for beginning of value\n\x1b[36m2018-05-22 07:26:36.729 UTC [viperutil] getKeysRecursively -> DEBU 004\x1b[0m Found real value for peer.BCCSP.SW.Hash setting to string SHA2\n\x1b[36m2018-05-22 07:26:36.729 UTC [viperutil] unmarshalJSON -> DEBU 005\x1b[0m Unmarshal JSON: value is not a string: 256\n\x1b[36m2018-05-22 07:26:36.729 UTC [viperutil] getKeysRecursively -> DEBU 006\x1b[0m Found real value for peer.BCCSP.SW.Security setting to int 256\n\x1b[36m2018-05-22 07:26:36.729 UTC [viperutil] getKeysRecursively -> DEBU 007\x1b[0m Found map[string]interface{} value for peer.BCCSP.SW.FileKeyStore\n\x1b[36m2018-05-22 07:26:36.729 UTC [viperutil] unmarshalJSON -> DEBU 008\x1b[0m Unmarshal JSON: value cannot be unmarshalled: unexpected end of JSON input\n\x1b[36m2018-05-22 07:26:36.729 UTC [viperutil] getKeysRecursively -> DEBU 009\x1b[0m Found real value for peer.BCCSP.SW.FileKeyStore.KeyStore setting to string \n\x1b[36m2018-05-22 07:26:36.729 UTC [viperutil] unmarshalJSON -> DEBU 00a\x1b[0m Unmarshal JSON: value cannot be unmarshalled: invalid character \'S\' looking for beginning of value\n\x1b[36m2018-05-22 07:26:36.729 UTC [viperutil] getKeysRecursively -> DEBU 00b\x1b[0m Found real value for peer.BCCSP.Default setting to string SW\n\x1b[36m2018-05-22 07:26:36.729 UTC [viperutil] EnhancedExactUnmarshalKey -> DEBU 00c\x1b[0m map[peer.BCCSP:map[SW:map[Hash:SHA2 Security:256 FileKeyStore:map[KeyStore:]] Default:SW]]\n\x1b[36m2018-05-22 07:26:36.730 UTC [bccsp_sw] openKeyStore -> DEBU 00d\x1b[0m KeyStore opened at [/var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore]...done\n\x1b[36m2018-05-22 07:26:36.730 UTC [bccsp] initBCCSP -> DEBU 00e\x1b[0m Initialize BCCSP [SW]\n\x1b[36m2018-05-22 07:26:36.730 UTC [msp] getPemMaterialFromDir -> DEBU 00f\x1b[0m Reading directory /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts\n\x1b[36m2018-05-22 07:26:36.730 UTC [msp] getPemMaterialFromDir -> DEBU 010\x1b[0m Inspecting file /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/Admin@org1.example.com-cert.pem\n\x1b[36m2018-05-22 07:26:36.730 UTC [msp] getPemMaterialFromDir -> DEBU 011\x1b[0m Reading directory /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/cacerts\n\x1b[36m2018-05-22 07:26:36.730 UTC [msp] getPemMaterialFromDir -> DEBU 012\x1b[0m Inspecting file /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/cacerts/ca.org1.example.com-cert.pem\n\x1b[36m2018-05-22 07:26:36.730 UTC [msp] getPemMaterialFromDir -> DEBU 013\x1b[0m Reading directory /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/admincerts\n\x1b[36m2018-05-22 07:26:36.730 UTC [msp] getPemMaterialFromDir -> DEBU 014\x1b[0m Inspecting file /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/admincerts/Admin@org1.example.com-cert.pem\n\x1b[36m2018-05-22 07:26:36.730 UTC [msp] getPemMaterialFromDir -> DEBU 015\x1b[0m Reading directory /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts\n\x1b[36m2018-05-22 07:26:36.730 UTC [msp] getMspConfig -> DEBU 016\x1b[0m Intermediate certs folder not found at [/var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts]. Skipping. [stat /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts: no such file or directory]\n\x1b[36m2018-05-22 07:26:36.730 UTC [msp] getPemMaterialFromDir -> DEBU 017\x1b[0m Reading directory /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/tlscacerts\n\x1b[36m2018-05-22 07:26:36.730 UTC [msp] getPemMaterialFromDir -> DEBU 018\x1b[0m Inspecting file /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/tlscacerts/tlsca.org1.example.com-cert.pem\n\x1b[36m2018-05-22 07:26:36.731 UTC [msp] getPemMaterialFromDir -> DEBU 019\x1b[0m Reading directory /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/tlsintermediatecerts\n\x1b[36m2018-05-22 07:26:36.731 UTC [msp] getMspConfig -> DEBU 01a\x1b[0m TLS intermediate certs folder not found at [/var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/tlsintermediatecerts]. Skipping. [stat /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/tlsintermediatecerts: no such file or directory]\n\x1b[36m2018-05-22 07:26:36.731 UTC [msp] getPemMaterialFromDir -> DEBU 01b\x1b[0m Reading directory /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/crls\n\x1b[36m2018-05-22 07:26:36.731 UTC [msp] getMspConfig -> DEBU 01c\x1b[0m crls folder not found at [/var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/crls]. Skipping. [stat /var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/crls: no such file or directory]\n\x1b[36m2018-05-22 07:26:36.731 UTC [msp] newBccspMsp -> DEBU 01d\x1b[0m Creating BCCSP-based MSP instance\n\x1b[36m2018-05-22 07:26:36.731 UTC [msp] New -> DEBU 01e\x1b[0m Creating Cache-MSP instance\n\x1b[36m2018-05-22 07:26:36.731 UTC [msp] loadLocaMSP -> DEBU 01f\x1b[0m Created new local MSP\n\x1b[36m2018-05-22 07:26:36.731 UTC [msp] Setup -> DEBU 020\x1b[0m Setting up MSP instance org1.example.com\n\x1b[36m2018-05-22 07:26:36.732 UTC [msp/identity] newIdentity -> DEBU 021\x1b[0m Creating identity instance for cert -----BEGIN CERTIFICATE-----\nMIICQjCCAemgAwIBAgIQGOIV7fjgIoTrOA/9HgTMfTAKBggqhkjOPQQDAjBzMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEcMBoGA1UEAxMTY2Eu\nb3JnMS5leGFtcGxlLmNvbTAeFw0xODA1MjIwNzIwMjhaFw0yODA1MTkwNzIwMjha\nMHMxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1T\nYW4gRnJhbmNpc2NvMRkwFwYDVQQKExBvcmcxLmV4YW1wbGUuY29tMRwwGgYDVQQD\nExNjYS5vcmcxLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE\n9mNDQL6UBxbwYOKPp2nXANWS8N64qaljGU/a8PZbnIlJxVRKfL6uere9+Ocbg13R\n9K0mwDs5tDUQEU5P7EP8q6NfMF0wDgYDVR0PAQH/BAQDAgGmMA8GA1UdJQQIMAYG\nBFUdJQAwDwYDVR0TAQH/BAUwAwEB/zApBgNVHQ4EIgQgQbFiqmj2vE+7gXPtNgtX\nwQbfevndiB9Ig8nFFc71e3MwCgYIKoZIzj0EAwIDRwAwRAIgYhxdvwpbrQ7JNi+4\nNxzS1bBkjQXBS5IRvpqdvJV55pcCID050Hkl+OqVhYa35n9fcfVmOQy9blDK/Z85\nLLySH8BY\n-----END CERTIFICATE-----\n\x1b[36m2018-05-22 07:26:36.732 UTC [msp/identity] newIdentity -> DEBU 022\x1b[0m Creating identity instance for cert -----BEGIN CERTIFICATE-----\nMIICGTCCAcCgAwIBAgIRAOD8w/lpuipwOoFhr51jJz4wCgYIKoZIzj0EAwIwczEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh\nLm9yZzEuZXhhbXBsZS5jb20wHhcNMTgwNTIyMDcyMDI4WhcNMjgwNTE5MDcyMDI4\nWjBbMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN\nU2FuIEZyYW5jaXNjbzEfMB0GA1UEAwwWQWRtaW5Ab3JnMS5leGFtcGxlLmNvbTBZ\nMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDK3NHf2+KilMrkebqDZGEmK4m/vT7Em\n39h5ME+uhaN9dTG5Wm9aHXDptyTH4DM496XQBsde218DOYPHdqOpZuSjTTBLMA4G\nA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMCsGA1UdIwQkMCKAIEGxYqpo9rxP\nu4Fz7TYLV8EG33r53YgfSIPJxRXO9XtzMAoGCCqGSM49BAMCA0cAMEQCIE/Q3r+Q\nj0C6inXFFsJB6vqAUh7ixH4vG+HHzbP//NWuAiBfBReSOSEnfO05G0wX5jL5lUGV\n9oHqlKGwTDNgtFWEjA==\n-----END CERTIFICATE-----\n\x1b[36m2018-05-22 07:26:36.753 UTC [msp/identity] newIdentity -> DEBU 023\x1b[0m Creating identity instance for cert -----BEGIN CERTIFICATE-----\nMIICGTCCAcCgAwIBAgIRAOD8w/lpuipwOoFhr51jJz4wCgYIKoZIzj0EAwIwczEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh\nLm9yZzEuZXhhbXBsZS5jb20wHhcNMTgwNTIyMDcyMDI4WhcNMjgwNTE5MDcyMDI4\nWjBbMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN\nU2FuIEZyYW5jaXNjbzEfMB0GA1UEAwwWQWRtaW5Ab3JnMS5leGFtcGxlLmNvbTBZ\nMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDK3NHf2+KilMrkebqDZGEmK4m/vT7Em\n39h5ME+uhaN9dTG5Wm9aHXDptyTH4DM496XQBsde218DOYPHdqOpZuSjTTBLMA4G\nA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMCsGA1UdIwQkMCKAIEGxYqpo9rxP\nu4Fz7TYLV8EG33r53YgfSIPJxRXO9XtzMAoGCCqGSM49BAMCA0cAMEQCIE/Q3r+Q\nj0C6inXFFsJB6vqAUh7ixH4vG+HHzbP//NWuAiBfBReSOSEnfO05G0wX5jL5lUGV\n9oHqlKGwTDNgtFWEjA==\n-----END CERTIFICATE-----\n\x1b[36m2018-05-22 07:26:36.753 UTC [bccsp_sw] loadPrivateKey -> DEBU 024\x1b[0m Loading private key [48e81de3eff7d5d6bad5b2f55e4a586b610fd17e019679bcda461afd5b47679b] at [/var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/48e81de3eff7d5d6bad5b2f55e4a586b610fd17e019679bcda461afd5b47679b_sk]...\n\x1b[36m2018-05-22 07:26:36.753 UTC [msp/identity] newIdentity -> DEBU 025\x1b[0m Creating identity instance for cert -----BEGIN CERTIFICATE-----\nMIICGTCCAcCgAwIBAgIRAOD8w/lpuipwOoFhr51jJz4wCgYIKoZIzj0EAwIwczEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh\nLm9yZzEuZXhhbXBsZS5jb20wHhcNMTgwNTIyMDcyMDI4WhcNMjgwNTE5MDcyMDI4\nWjBbMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN\nU2FuIEZyYW5jaXNjbzEfMB0GA1UEAwwWQWRtaW5Ab3JnMS5leGFtcGxlLmNvbTBZ\nMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDK3NHf2+KilMrkebqDZGEmK4m/vT7Em\n39h5ME+uhaN9dTG5Wm9aHXDptyTH4DM496XQBsde218DOYPHdqOpZuSjTTBLMA4G\nA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMCsGA1UdIwQkMCKAIEGxYqpo9rxP\nu4Fz7TYLV8EG33r53YgfSIPJxRXO9XtzMAoGCCqGSM49BAMCA0cAMEQCIE/Q3r+Q\nj0C6inXFFsJB6vqAUh7ixH4vG+HHzbP//NWuAiBfBReSOSEnfO05G0wX5jL5lUGV\n9oHqlKGwTDNgtFWEjA==\n-----END CERTIFICATE-----\n\x1b[36m2018-05-22 07:26:36.754 UTC [msp] setupSigningIdentity -> DEBU 026\x1b[0m Signing identity expires at 2028-05-19 07:20:28 +0000 UTC\n\x1b[36m2018-05-22 07:26:36.754 UTC [msp] Validate -> DEBU 027\x1b[0m MSP org1.example.com validating identity\n\x1b[36m2018-05-22 07:26:36.754 UTC [grpc] Printf -> DEBU 028\x1b[0m parsed scheme: """"\n\x1b[36m2018-05-22 07:26:36.754 UTC [grpc] Printf -> DEBU 029\x1b[0m scheme """" not registered, fallback to default scheme\n\x1b[36m2018-05-22 07:26:36.754 UTC [grpc] Printf -> DEBU 02a\x1b[0m ccResolverWrapper: sending new addresses to cc: [{peer0.org1.example.com:7051 0 <nil>}]\n\x1b[36m2018-05-22 07:26:36.754 UTC [grpc] Printf -> DEBU 02b\x1b[0m ClientConn switching balancer to ""pick_first""\n\x1b[36m2018-05-22 07:26:36.755 UTC [grpc] Printf -> DEBU 02c\x1b[0m pickfirstBalancer: HandleSubConnStateChange: 0xc420513cf0, CONNECTING\n\x1b[36m2018-05-22 07:26:36.755 UTC [grpc] Printf -> DEBU 02d\x1b[0m pickfirstBalancer: HandleSubConnStateChange: 0xc420513cf0, READY\n\x1b[36m2018-05-22 07:26:36.756 UTC [grpc] Printf -> DEBU 02e\x1b[0m parsed scheme: """"\n\x1b[36m2018-05-22 07:26:36.756 UTC [grpc] Printf -> DEBU 02f\x1b[0m scheme """" not registered, fallback to default scheme\n\x1b[36m2018-05-22 07:26:36.756 UTC [grpc] Printf -> DEBU 030\x1b[0m ccResolverWrapper: sending new addresses to cc: [{peer0.org1.example.com:7051 0 <nil>}]\n\x1b[36m2018-05-22 07:26:36.756 UTC [grpc] Printf -> DEBU 031\x1b[0m ClientConn switching balancer to ""pick_first""\n\x1b[36m2018-05-22 07:26:36.756 UTC [grpc] Printf -> DEBU 032\x1b[0m pickfirstBalancer: HandleSubConnStateChange: 0xc42024b1d0, CONNECTING\n\x1b[36m2018-05-22 07:26:36.756 UTC [grpc] Printf -> DEBU 033\x1b[0m pickfirstBalancer: HandleSubConnStateChange: 0xc42024b1d0, READY\n\x1b[36m2018-05-22 07:26:36.757 UTC [msp] GetDefaultSigningIdentity -> DEBU 034\x1b[0m Obtaining default signing identity\n\x1b[36m2018-05-22 07:26:36.757 UTC [grpc] Printf -> DEBU 035\x1b[0m parsed scheme: """"\n\x1b[36m2018-05-22 07:26:36.757 UTC [grpc] Printf -> DEBU 036\x1b[0m scheme """" not registered, fallback to default scheme\n\x1b[36m2018-05-22 07:26:36.757 UTC [grpc] Printf -> DEBU 037\x1b[0m ccResolverWrapper: sending new addresses to cc: [{orderer0.example.com:7050 0 <nil>}]\n\x1b[36m2018-05-22 07:26:36.757 UTC [grpc] Printf -> DEBU 038\x1b[0m ClientConn switching balancer to ""pick_first""\n\x1b[36m2018-05-22 07:26:36.757 UTC [grpc] Printf -> DEBU 039\x1b[0m pickfirstBalancer: HandleSubConnStateChange: 0xc420304570, CONNECTING\n\x1b[36m2018-05-22 07:26:36.758 UTC [grpc] Printf -> DEBU 03a\x1b[0m pickfirstBalancer: HandleSubConnStateChange: 0xc420304570, READY\n2018-05-22 07:26:36.758 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 03b\x1b[0m Using default escc\n2018-05-22 07:26:36.758 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 03c\x1b[0m Using default vscc\n\x1b[36m2018-05-22 07:26:36.758 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 03d\x1b[0m java chaincode enabled\n\x1b[36m2018-05-22 07:26:36.759 UTC [msp/identity] Sign -> DEBU 03e\x1b[0m Sign: plaintext: 0AB8070A6B08031A0C08AC8C8FD80510...30300A000A04657363630A0476736363 \n\x1b[36m2018-05-22 07:26:36.759 UTC [msp/identity] Sign -> DEBU 03f\x1b[0m Sign: digest: B4C2059B7888D097384B567EA24B3E2F3FEA2135C8BF4DBA652FFAC5DC2BB8E9 \nError: could not assemble transaction, err Proposal response was not successful, error code 500, msg error starting container: error starting container: API error (400): OCI runtime create failed: container_linux.go:348: starting container process caused ""exec: \\""chaincode\\"": executable file not found in $PATH"": unknown\n'}}

.
.
.
.
.
.
[48e81de3eff7d5d6bad5b2f55e4a586b610fd17e019679bcda461afd5b47679b] at [/var/hyperledger/configs/4d6122885d9111e88fb2fa163ee9637c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/48e81de3eff7d5d6bad5b2f55e4a586b610fd17e019679bcda461afd5b47679b_sk]...\n\x1b[36m2018-05-22 07:26:36.753 UTC [msp/identity] newIdentity -> DEBU 025\x1b[0m Creating identity instance for cert -----BEGIN CERTIFICATE-----\nMIICGTCCAcCgAwIBAgIRAOD8w/lpuipwOoFhr51jJz4wCgYIKoZIzj0EAwIwczEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh\nLm9yZzEuZXhhbXBsZS5jb20wHhcNMTgwNTIyMDcyMDI4WhcNMjgwNTE5MDcyMDI4\nWjBbMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN\nU2FuIEZyYW5jaXNjbzEfMB0GA1UEAwwWQWRtaW5Ab3JnMS5leGFtcGxlLmNvbTBZ\nMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDK3NHf2+KilMrkebqDZGEmK4m/vT7Em\n39h5ME+uhaN9dTG5Wm9aHXDptyTH4DM496XQBsde218DOYPHdqOpZuSjTTBLMA4G\nA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMCsGA1UdIwQkMCKAIEGxYqpo9rxP\nu4Fz7TYLV8EG33r53YgfSIPJxRXO9XtzMAoGCCqGSM49BAMCA0cAMEQCIE/Q3r+Q\nj0C6inXFFsJB6vqAUh7ixH4vG+HHzbP//NWuAiBfBReSOSEnfO05G0wX5jL5lUGV\n9oHqlKGwTDNgtFWEjA==\n-----END CERTIFICATE-----\n\x1b[36m2018-05-22 07:26:36.754 UTC [msp] setupSigningIdentity -> DEBU 026\x1b[0m Signing identity expires at 2028-05-19 07:20:28 +0000 UTC\n\x1b[36m2018-05-22 07:26:36.754 UTC [msp] Validate -> DEBU 027\x1b[0m MSP org1.example.com validating identity\n\x1b[36m2018-05-22 07:26:36.754 UTC [grpc] Printf -> DEBU 028\x1b[0m parsed scheme: """"\n\x1b[36m2018-05-22 07:26:36.754 UTC [grpc] Printf -> DEBU 029\x1b[0m scheme """" not registered, fallback to default scheme\n\x1b[36m2018-05-22 07:26:36.754 UTC [grpc] Printf -> DEBU 02a\x1b[0m ccResolverWrapper: sending new addresses to cc: [{peer0.org1.example.com:7051 0 <nil>}]\n\x1b[36m2018-05-22 07:26:36.754 UTC [grpc] Printf -> DEBU 02b\x1b[0m ClientConn switching balancer to ""pick_first""\n\x1b[36m2018-05-22 07:26:36.755 UTC [grpc] Printf -> DEBU 02c\x1b[0m pickfirstBalancer: HandleSubConnStateChange: 0xc420513cf0, CONNECTING\n\x1b[36m2018-05-22 07:26:36.755 UTC [grpc] Printf -> DEBU 02d\x1b[0m pickfirstBalancer: HandleSubConnStateChange: 0xc420513cf0, READY\n\x1b[36m2018-05-22 07:26:36.756 UTC [grpc] Printf -> DEBU 02e\x1b[0m parsed scheme: """"\n\x1b[36m2018-05-22 07:26:36.756 UTC [grpc] Printf -> DEBU 02f\x1b[0m scheme """" not registered, fallback to default scheme\n\x1b[36m2018-05-22 07:26:36.756 UTC [grpc] Printf -> DEBU 030\x1b[0m ccResolverWrapper: sending new addresses to cc: [{peer0.org1.example.com:7051 0 <nil>}]\n\x1b[36m2018-05-22 07:26:36.756 UTC [grpc] Printf -> DEBU 031\x1b[0m ClientConn switching balancer to ""pick_first""\n\x1b[36m2018-05-22 07:26:36.756 UTC [grpc] Printf -> DEBU 032\x1b[0m pickfirstBalancer: HandleSubConnStateChange: 0xc42024b1d0, CONNECTING\n\x1b[36m2018-05-22 07:26:36.756 UTC [grpc] Printf -> DEBU 033\x1b[0m pickfirstBalancer: HandleSubConnStateChange: 0xc42024b1d0, READY\n\x1b[36m2018-05-22 07:26:36.757 UTC [msp] GetDefaultSigningIdentity -> DEBU 034\x1b[0m Obtaining default signing identity\n\x1b[36m2018-05-22 07:26:36.757 UTC [grpc] Printf -> DEBU 035\x1b[0m parsed scheme: """"\n\x1b[36m2018-05-22 07:26:36.757 UTC [grpc] Printf -> DEBU 036\x1b[0m scheme """" not registered, fallback to default scheme\n\x1b[36m2018-05-22 07:26:36.757 UTC [grpc] Printf -> DEBU 037\x1b[0m ccResolverWrapper: sending new addresses to cc: [{orderer0.example.com:7050 0 <nil>}]\n\x1b[36m2018-05-22 07:26:36.757 UTC [grpc] Printf -> DEBU 038\x1b[0m ClientConn switching balancer to ""pick_first""\n\x1b[36m2018-05-22 07:26:36.757 UTC [grpc] Printf -> DEBU 039\x1b[0m pickfirstBalancer: HandleSubConnStateChange: 0xc420304570, CONNECTING\n\x1b[36m2018-05-22 07:26:36.758 UTC [grpc] Printf -> DEBU 03a\x1b[0m pickfirstBalancer: HandleSubConnStateChange: 0xc420304570, READY\n2018-05-22 07:26:36.758 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 03b\x1b[0m Using default escc\n2018-05-22 07:26:36.758 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 03c\x1b[0m Using default vscc\n\x1b[36m2018-05-22 07:26:36.758 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 03d\x1b[0m java chaincode enabled\n\x1b[36m2018-05-22 07:26:36.759 UTC [msp/identity] Sign -> DEBU 03e\x1b[0m Sign: plaintext: 0AB8070A6B08031A0C08AC8C8FD80510...30300A000A04657363630A0476736363 \n\x1b[36m2018-05-22 07:26:36.759 UTC [msp/identity] Sign -> DEBU 03f\x1b[0m Sign: digest: B4C2059B7888D097384B567EA24B3E2F3FEA2135C8BF4DBA652FFAC5DC2BB8E9 \nError: could not assemble transaction, err Proposal response was not successful, error code 500, msg error starting container: error starting container: API error (400): OCI runtime create failed: container_linux.go:348: starting container process caused ""exec: \\""chaincode\\"": executable file not found in $PATH"": unknown\n'}} 
```
 
{code}
 ",,AdnanChoudhury,PushpendraSingh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbkn:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,PushpendraSingh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,release-1.1,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,true,"22/May/18 11:35 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/22131/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
writing unit tests (using MockStub) in a given transaction cycle can read my own writes,FAB-10278,30479,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,wael,wael,22/May/18 11:16 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,,,,,,,,,,,,,,,,,0,,,,,,,"I am using fabric v 1.0.3 and I am facing an issue with read/write semantics (phantom reads).

writing unit tests for transaction that has read after writing into the ledger , using mockStub, It will succeed. when in a given transaction cycle it should not read my own writes.

 

 

 ",,wael,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbkv:",,,,,,,,,,,,,,,,,,,,,wael,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 4:56 PM;yacovm;[~wael] why did you assign this to me?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
fix anchor peer port in e2e,FAB-10280,30481,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,Senthil1,Senthil1,22/May/18 11:36 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,23/May/18 1:54 AM,,,,,,,,,v1.2.0,,,,,,,,0,,,,,,,"Though the anchor peers are not needed for the default e2e integration test, as we may use the default configuration as reference and copy (sometimes), it is better to set the correct port for anchor peer as in core.yaml.",,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzblb:",,,,,,,,,,,,,,,,,,,,,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thousands of lines of unnecessary debug data are written each time golang chaincode is installed,FAB-10281,30482,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sykesm,sykesm,22/May/18 11:39 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,23/May/18 12:45 AM,,,,,,,,,,,,,,,,,0,,,,,,,"Commit f791a37a1e12daaad138c89ba1d086a3e00badc9 added 
{code:java}
logger.Debugf(""header.Name = %s"", header.Name){code}
to targzmetadataprovider.go resulting in thousands of lines of file names. Instead of aiding problem determination, it's hiding the issues.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzblj:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/May/18 11:43 PM;sykesm;https://gerrit.hyperledger.org/r/22135;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Simplify integration test network setup,FAB-10282,30484,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,22/May/18 11:47 PM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,25/May/18 3:37 AM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,"There should be a simple setup for setting up the network to help eliminate copy pasting of setting up an e2e integration test.
",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzblz:",,,,Unset,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 12:22 PM;latitiah;https://gerrit.hyperledger.org/r/#/c/22141/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Configtxlator not handling experimental capabilities correctly for updates.,FAB-10283,30485,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,rickr,rickr,22/May/18 11:49 PM,11/Sep/18 11:58 PM,28/Oct/23 3:03 AM,11/Sep/18 11:58 PM,v1.1.0,,,,,,,,v1.3.0,,,fabric-tools,,,,,0,,,,,,,Worked with Jason. Provided all artifacts to reproduce and think he's narrowed down the issue.,,denyeart,jyellick,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10292,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 9:37 PM;rickr;updateIssue.20180521151106.tgz;https://jira.hyperledger.org/secure/attachment/14999/updateIssue.20180521151106.tgz",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbm7:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 12:22 AM;jyellick;The underlying cause here has to do with map serialization not being deterministic.  It so happens that we've only ever really used a single value in this map, so it's never surfaced before.  I have what I believe is a workaround, but it will require an update to the vendored protobuf, investigating.;;;","23/May/18 5:33 AM;jyellick;Since this cannot be fixed without proto v1.1.0, and that change is too large to contain for v1.2, I've pushed the fix version out to v1.3.;;;","06/Sep/18 8:13 PM;denyeart;[~jyellick] Is this targeted for v1.3 still?;;;","11/Sep/18 11:58 PM;jyellick;This was merged some time ago, closing.;;;",,,,,,,,,,,,,,,,,,,,,,,
Race between sending response and cleaning up active transactions,FAB-10284,30486,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,22/May/18 11:58 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,23/May/18 7:39 AM,v1.2.0,,,,,,,,v1.2.0,,,,,,,,0,,,,,,,"Observed in [https://jenkins.hyperledger.org/job/fabric-verify-unit-tests-x86_64/2167/consoleFull]
{code:java}
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.247 UTC [ccprovider] GetChaincodeData -> INFO e0e Putting chaincode data for <cc_go_220972, 0> into cache
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.248 UTC [chaincode] HandleInvokeChaincode -> DEBU e0f [958f886b] launching chaincode cc_go_220972 on channel testchainid
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.248 UTC [chaincode] execute -> DEBU e10 canonical name: cc_go_220972:0
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.248 UTC [chaincode] Execute -> DEBU e11 Entry
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.249 UTC [chaincode] ProcessStream -> DEBU e12 [958f886b] Received message GET_STATE from shim
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.249 UTC [chaincode] handleMessage -> DEBU e13 [958f886b] Fabric side Handling ChaincodeMessage of type: GET_STATE in state ready
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.249 UTC [chaincode] HandleTransaction -> DEBU e14 [958f886b] handling GET_STATE from chaincode
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.249 UTC [chaincode] HandleGetState -> DEBU e15 [958f886b] getting state for chaincode cc_go_220972, key a, channel testchainid
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.249 UTC [chaincode] HandleTransaction -> DEBU e16 [958f886b] Completed GET_STATE. Sending RESPONSE
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.250 UTC [chaincode] ProcessStream -> DEBU e17 [958f886b] Received message GET_STATE from shim
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.250 UTC [chaincode] handleMessage -> DEBU e18 [958f886b] Fabric side Handling ChaincodeMessage of type: GET_STATE in state ready
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.250 UTC [chaincode] HandleTransaction -> DEBU e19 [958f886b] handling GET_STATE from chaincode
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.250 UTC [chaincode] HandleGetState -> DEBU e1a [958f886b] getting state for chaincode cc_go_220972, key b, channel testchainid
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.250 UTC [chaincode] HandleTransaction -> DEBU e1b [958f886b] Completed GET_STATE. Sending RESPONSE
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.250 UTC [chaincode] ProcessStream -> DEBU e1c [958f886b] Received message PUT_STATE from shim
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.250 UTC [chaincode] handleMessage -> DEBU e1d [958f886b] Fabric side Handling ChaincodeMessage of type: PUT_STATE in state ready
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.251 UTC [chaincode] HandleTransaction -> DEBU e1e [958f886b] handling PUT_STATE from chaincode
13:11:03 unit-tests_1 | 2018-05-22 13:09:05.251 UTC [chaincode] registerTxid -> ERRO e1f [958f886b] Another request pending for this CC: cc_go_220972:0, Txid: 958f886b-6fb3-4fa1-b91f-c5e0fdd7efde, ChannelID: testchainid. Cannot process.{code}
**
 Based on scheduling, we may want to remove the active transaction before scheduling the response.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbmf:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 12:52 AM;sykesm;https://gerrit.hyperledger.org/r/c/22145/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix typos in msp doc,FAB-10285,30488,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,pandrejko,pandrejko,23/May/18 12:34 AM,21/Jul/18 3:49 AM,28/Oct/23 3:03 AM,23/May/18 7:35 AM,,,,,,,,,v1.1.0,v1.2.0,,fabric-docs,,,,,0,,,,,,,"[http://hyperledger-fabric.readthedocs.io/en/latest/msp.html#best-practices]
 * request originator is always doomed to belong to – change _doomed_ to _deemed_
 * If a different mapping type of mapping is chosen – remove words _of mapping - redundant?_",,mastersingh24,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbmv:",,,,Unset,,,,,,Unset,,,,,,,,,,,mastersingh24,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 12:44 AM;pandrejko;https://gerrit.hyperledger.org/r/22137;;;","23/May/18 4:28 AM;mastersingh24;[https://gerrit.hyperledger.org/r/22165]  (v1.1);;;",,,,,,,,,,,,,,,,,,,,,,,,,
Remove redundant debug messages in chaincode handler,FAB-10286,30490,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,23/May/18 12:36 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,23/May/18 7:38 AM,v1.2.0,,,,,,,,v1.2.0,,,,,,,,0,,,,,,,"All inbound messages are logged twice; keepalive messages are logged three times.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbn3:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 12:51 AM;sykesm;https://gerrit.hyperledger.org/r/c/22143/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric-test Makefile,FAB-10287,30491,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,rameshthoomu,rameshthoomu,23/May/18 12:36 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,23/May/18 9:56 PM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,,,,,,,"Restore ""make docker"" in fabric-test Makefile to build fabric-ca-* images along with fabric-ca image.

Docker images are now published with manifest so the amd64-1.1.0 image is available in dockerhub now.",,madhavadu,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykyn:",,,,,,,,,,,,,,,,,,,,,madhavadu,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,true,"23/May/18 2:13 AM;sambhavdutt;Submitted patch for this fix.
https://gerrit.hyperledger.org/r/#/c/22147/;;;","23/May/18 9:56 PM;sambhavdutt;The patch has been merged and working well
https://gerrit.hyperledger.org/r/#/c/22147/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Fix a few nits in systemchaincode.rst,FAB-10288,30492,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,23/May/18 12:47 AM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,23/May/18 2:27 AM,v1.2.0,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,,,,,,,"There's a few things to fix in systemchaincode.rst, like capitalizing ""Fabric"" and correct use of compound modifiers.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbnb:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 12:49 AM;joe-alewine;https://gerrit.hyperledger.org/r/c/22139/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Implement signature-based revocation algorithm in Java for client sdk,FAB-10289,30493,,Story,In Progress,FAB,Fabric,software,denyeart,,,Medium,,,dubovitskaya,dubovitskaya,23/May/18 12:49 AM,19/Dec/19 8:18 PM,28/Oct/23 3:03 AM,,v1.3.0,,,,,,,,,,,,,,,,0,,,,,,,,,dubovitskaya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FABC-588,,,,,,,,,"1|hzzbnj:",,,,Unset,,,,,,Unset,,,,,,,,,,,dubovitskaya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
regen doc help text,FAB-10290,30495,30212,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,pandrejko,pandrejko,23/May/18 12:49 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,24/May/18 2:05 AM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,,,,,,,"I updated the help text for the peer channel create command FAB-10071, now I need to run the command scripts/generateHelpDocs.sh to suck in those changes regen the help text in the docs.",,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbnz:",,,,,,,,,,,,,,,,,,,,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/May/18 1:04 AM;pandrejko;https://gerrit.hyperledger.org/r/22197;;;","24/May/18 1:08 AM;pandrejko;The secret to getting the scripts/generateHelpDocs.sh command to work is to run the command `make clean-all  release native`

before running the script.

 

 

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
E2E CLI tests do not fail when the generateArtifacts.sh script fails.,FAB-10291,30496,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,Ratnakar,sambhavdutt,sambhavdutt,23/May/18 1:01 AM,19/Mar/19 8:12 PM,28/Oct/23 3:03 AM,23/May/18 7:13 AM,,,,,,,,,v1.2.0,,,fabric-samples,,,,,0,ci-failure,,,,,,"The ""exit on first error"" command is commented out in the examples/e2e_cli/generateArtifacts.sh script. The succeeding e2e_cli tests continue to execute the tests when the generateArtifacts.sh scripts fails.

*FABRIC_COMMIT : 361a4ef*
*FABRIC_CA_COMMIT : bedd37c*

*Build Logs*
https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-x86_64/78/

",,Ratnakar,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbo7:",,,,,,,,,,,,,,,,,,,,,Ratnakar,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 2:37 AM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/22157/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade protobuf to v1.1.0,FAB-10292,30497,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/May/18 2:12 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,16/Jul/18 9:39 PM,,,,,,,,,v1.3.0,,,fabric-common,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10301,FAB-10302,,FAB-10283,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbof:",,,,Unset,,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 3:55 AM;jyellick;After doing an initial pass of this, it's too big to be contained in v1.3, many pieces of the code break under it, so changing fix version out to v1.3.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
NodeOU protos do not follow proto style guidelines.,FAB-10293,30498,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,jyellick,jyellick,23/May/18 2:15 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,23/May/18 5:23 AM,,,,,,,,,v1.2.0,,,fabric-common,,,,,0,hygiene,,,,,,"Protos not conforming to our proto style guidelines have been merged.  Since renaming protos does not cause any ABI incompatibility, and since these protos have been around for a fairly short time from an API perspective, I believe it's better to fix these definitions now than live iwth the inconsistency forever.",,jyellick,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbon:",,,,,,,,,,,,,,,,,,,,,jyellick,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 4:14 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/22163/;;;","23/May/18 4:15 AM;yacovm;I think that's all of them.... and the component should not be ""fabric-common"" wdyt?;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Create script to push docker images to support manifest files,FAB-10294,30499,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,rameshthoomu,rameshthoomu,23/May/18 2:18 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/Jun/18 7:21 AM,,,,,,,,,v1.2.0,,,fabric-build,,,,,0,build-system,,,,,,"Create a script to push docker images to support manifest files from fabric repository.

This script should pull the *stable* images from nexus repository, tag them as per the release version and push to hyperledger docker hub account. After the images are published successfully, execute gen-manifests.sh script from fabric repository.

Here's an example of using manifest-tool templating:

[https://github.com/estesp/mquery/blob/master/.travis.yml#L29-L51]
 
./manifest-tool push from-args --platforms linux/amd64,linux/ppc64le,linux/s390x --template ""hyperledger/fabric-peer:ARCH-$\{VERSION}"" --target ""hyperledger/fabric-peer:$\{VERSION}""

./manifest-tool push from-args --platforms linux/amd64,linux/ppc64le,linux/s390x --template ""hyperledger/fabric-peer:ARCH-$\{VERSION}"" --target ""hyperledger/fabric-peer:latest""",,ChristopherFerris,rameshthoomu,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykyf:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Jun/18 1:10 AM;ChristopherFerris;[https://gerrit.hyperledger.org/r/22981]

[https://gerrit.hyperledger.org/r/22979]

https://gerrit.hyperledger.org/r/22995

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Setup Kafka with log prefix in Integration test runner,FAB-10295,30500,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,latitiah,latitiah,23/May/18 2:20 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,25/May/18 6:01 AM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,The kafka runner should have a log prefix in the same way as the other runners.,,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbov:",,,,,,,,,,,,,,,,,,,,,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/May/18 2:48 AM;sykesm;https://gerrit.hyperledger.org/r/22275;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update the script for fabric-ca goast weekly tests.,FAB-10296,30501,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,23/May/18 2:29 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,06/Jun/18 3:05 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,CI_Adhoc_Req,,,,,,The current fabric-ca-goast-weekly job fails to output the expected errors. This change is to fix the goast script to fix the errors in fabric-ca-goast test.,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbp3:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 3:18 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/22155/;;;","06/Jun/18 3:06 AM;sambhavdutt;After merge, the GoAST weekly tests are working as expected.
https://gerrit.hyperledger.org/r/#/c/22155/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
fabric-samples/scripts/fabric-preload.sh out of date,FAB-10297,30502,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,23/May/18 2:31 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,27/May/18 9:40 PM,v1.1.0,,,,,,,,v1.2.0,,,fabric-samples,,,,,0,,,,,,,the fabric-preload script was woefully out of date... clone from fabric/scripts/bootstrap.sh and update README.md,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbpb:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 2:34 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/2215;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE eventRegister var incorrect,FAB-10299,30504,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,23/May/18 4:06 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,01/Jun/18 5:38 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"1) eventRegister(request_invoke.txId, function(sendPromise) \{
2) var sendPromise = channel.sendTransaction(txRequest);
3) return Promise.all([sendPromise].concat(eventPromises))
 
1) eventRegister calls the callback with an array of event promises, so the variable name sendPromise is wrong
2) the second line in this block overwrites the sendPromise variable, so whatever is passed to the callback is now inaccessible
3) eventPromises is resolved to an array defined at the top of the file, which is always empty
 
This would make more sense:
 
eventRegister(request_invoke.txId, function(eventPromises) \{ // renamed sendPromise in the callback to eventPromises
 var sendPromise = channel.sendTransaction(txRequest);
 return
Promise.all([sendPromise].concat(eventPromises))",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzbpr:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,release-1.1,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create gomega matcher for proto equality,FAB-10301,30506,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jyellick,jyellick,23/May/18 4:55 AM,23/Feb/21 9:18 PM,28/Oct/23 3:03 AM,30/Jul/19 11:47 AM,,,,,,,,,Future,,,fabric-common,fabric-quality,,,,0,,,,,,,"There are a number of places in our tests where we assert or need to assert that two protos are equal.  Often this test is after a proto has gone through a round of marshaling and unmarshaling.

Historically, if the proto contained an empty map or slice, these equality tests would fail and required the use of proto.Equal to check equality.

However, protobuf v1.1.0 actually adds a cache field which may be populated differently for even otherwise equivalent messages.  In this case, the equality checks fail.

All of this points toward the need for a uniform way to check proto equality.  A gomega custom matcher seems to fit the bill nicely.",,denyeart,jtonline,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10292,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbq7:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,jtonline,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","30/Jul/19 11:47 AM;mastersingh24;No activity for around a year .... cleanup time;;;","23/Feb/21 9:18 PM;jtonline;This has come up again in a PR review. Is it worth reopening?

https://github.com/hyperledger/fabric/pull/2395#discussion_r580397470;;;",,,,,,,,,,,,,,,,,,,,,,,,
Update gossip maps not to use protobuf messages as keys,FAB-10302,30507,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,jyellick,jyellick,23/May/18 5:01 AM,21/Jul/18 3:49 AM,28/Oct/23 3:03 AM,09/Jul/18 5:14 PM,,,,,,,,,v1.3.0,,,fabric-gossip,,,,,0,,,,,,,"We need to upgrade to protobuf v1.1.0 eventually (ideally soon).  The way the newer version of protobuf generates the backing structs, it adds new fields, one of which is itself a struct.  Since only types which may be directly compared with '==' and '!=' map be used in maps, updating protobuf creates a number of build failures:

{noformat}
# github.com/hyperledger/fabric/gossip/privdata
gossip/privdata/pull.go:346:28: invalid map key type ""github.com/hyperledger/fabric/protos/gossip"".PvtDataDigest
gossip/privdata/pull.go:371:18: invalid map key type ""github.com/hyperledger/fabric/protos/gossip"".PvtDataDigest
# github.com/hyperledger/fabric/gossip/privdata
gossip/privdata/pull.go:346:28: invalid map key type ""github.com/hyperledger/fabric/protos/gossip"".PvtDataDigest
gossip/privdata/pull.go:371:18: invalid map key type ""github.com/hyperledger/fabric/protos/gossip"".PvtDataDigest
gossip/privdata/coordinator_test.go:244:29: invalid map key type ""github.com/hyperledger/fabric/protos/gossip"".PvtDataDigest
gossip/privdata/coordinator_test.go:245:8: invalid map key type ""github.com/hyperledger/fabric/protos/gossip"".PvtDataDigest
gossip/privdata/coordinator_test.go:321:28: invalid map key type ""github.com/hyperledger/fabric/protos/common"".CollectionCriteria
gossip/privdata/coordinator_test.go:329:21: invalid map key type ""github.com/hyperledger/fabric/protos/common"".CollectionCriteria
{noformat}

As a prerequisite to updating proto, we must move these fields to use a different element as their key.",,C0rWin,jyellick,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10292,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbqf:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,jyellick,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 5:04 AM;yacovm;[~C0rWin] ^;;;","06/Jul/18 12:32 AM;jyellick;{noformat}
gossip/privdata/pull.go:382:28: invalid map key type ""github.com/hyperledger/fabric/protos/gossip"".PvtDataDigest
gossip/privdata/pull.go:415:18: invalid map key type ""github.com/hyperledger/fabric/protos/gossip"".PvtDataDigest
{noformat}

Looks like this is mostly cleaned up, but still have a couple even after https://gerrit.hyperledger.org/r/c/23597/10/gossip/privdata/pull.go#382;;;","06/Jul/18 8:15 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/24131/ this should get you going for now... I think eventually we should remove all the references to the struct and only use it when sending messages. ;;;",,,,,,,,,,,,,,,,,,,,,,,,
Many proto structs are initialized by order rather than by field name,FAB-10303,30508,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/May/18 5:20 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,24/May/18 7:29 AM,v1.1.0,,,,,,,,v1.2.0,,,fabric-common,,,,,0,,,,,,,"Many of our tests and some of our code are still using order based
initialization for structs.  This is very brittle and against bad
practices.  In an attempt to upgrade the version of protobuf to v1.1.0,
all of files in this changeset broke, because the number of struct
members in the generated code changed.  Although this does not include
any of the proto updates itself, this CR serves as a prerequisite to
doing so.",,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbqn:",,,,,,,,,,,,,,,,,,,,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/May/18 5:54 AM;kchristidis;https://gerrit.hyperledger.org/r/c/22169/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
configtxgen --inspectBlock errors on idemix msp type,FAB-10304,30509,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,smithbk,smithbk,23/May/18 5:50 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,23/May/18 7:41 AM,,,,,,,,,v1.2.0,,,fabric-common,,,,,0,,,,,,,"The following error occurs when using *configtxgen --inspectBlock* with a block that has an idemix MSP type:

```[common/tools/configtxgen] main -> CRIT 005 Error on inspectBlock: malformed block contents: *common.Block: error in PopulateTo for field data for message *common.Block: *common.BlockData: error in PopulateTo for slice field data at index 0 for message *common.BlockData: *common.Envelope: error in PopulateTo for field payload for message *common.Envelope: *common.Payload: error in PopulateTo for field data for message *common.Payload: *common.ConfigEnvelope: error in PopulateTo for field config for message *common.ConfigEnvelope: *common.Config: error in PopulateTo for field channel_group for message *common.Config: *common.DynamicChannelGroup: error in PopulateTo for map field groups and key Consortiums for message *common.DynamicChannelGroup: *common.DynamicConsortiumsGroup: error in PopulateTo for map field groups and key SampleConsortium for message *common.DynamicConsortiumsGroup: *common.DynamicConsortiumGroup: error in PopulateTo for map field groups and key idemixMSP for message *common.DynamicConsortiumGroup: *common.DynamicConsortiumOrgGroup: error in PopulateTo for map field values and key MSP for message *common.DynamicConsortiumOrgGroup: *common.DynamicConsortiumOrgConfigValue: error in PopulateTo for field value for message *common.DynamicConsortiumOrgConfigValue: *msp.MSPConfig: error in PopulateTo for field config for message *msp.MSPConfig: unable to decode MSP type: 1```",,jyellick,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbqv:",,,,,,,,,,,,,,,,,,,,,jyellick,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 6:16 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/c/22171/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
balance-transfer sample does not work with the latest sdk-node,FAB-10306,30512,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,shimos,shimos,shimos,23/May/18 9:43 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,01/Jun/18 10:02 AM,v1.1.0,,,,,,,,v1.2.0,,,fabric-samples,,,,,0,,,,,,,"With the latest sdk-node (master branch), the balance-transfer fails with an error in creation of a channel:

{noformat}
$ ./runApp.sh
(snip)
[2018-05-22 17:13:56.341] [ERROR] Create-Channel - Error: 8 RESOURCE_EXHAUSTED: Sent message larger than max (2218 vs. 15)
    at createStatusError (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client.js:64:15)
    at ClientDuplexStream._emitStatusIfDone (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client.js:270:19)
    at ClientDuplexStream._receiveStatus (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client.js:248:8)
    at /opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client.js:804:12
(node:12996) UnhandledPromiseRejectionWarning: Error: Failed to initialize the channel: Error: 8 RESOURCE_EXHAUSTED: Sent message larger than max (2218 vs. 15)
    at Object.createChannel (/opt/gopath/src/github.com/hyperledger/fabric-samples/balance-transfer/app/create-channel.js:65:9)
    at <anonymous>
(node:12996) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promis
e which was not handled with .catch(). (rejection id: 2)
(node:12996) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zer
o exit code.

{noformat}","fabric-samples 1bfdee8ca386045f845c5aaad76346a03512acfd

fabric-sdk-node c0bd09c115620b23e43dea4db141167e2b75b890",shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbrj:",,,,,,,,,,,,,,,,,,,,,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/May/18 9:52 AM;shimos;CR: https://gerrit.hyperledger.org/r/22179;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Function tests for peer deliver service ACLs,FAB-10307,30513,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,jyellick,jyellick,23/May/18 10:52 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,29/May/18 11:22 PM,,,,,,,,,,,,fabric-peer,,,,,0,e2e-test,,,,,,"To test that a system chaincode ACL is functioning properly in the e2e environment, we should extend the e2e tests as follows.

# Modify the default configtxgen configuration to override the default ACL for the peer deliver service target {{event/Block}}
# Run the generic world bootstrapping to create a channel using this custom configuration
# Execute the {{peer channel fetch}} command to invoke the chaincode method as an authorized user, confirm success
# Execute the {{peer channel fetch}} command to invoke the chaincode method as an unauthorized user, confirm failure",,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8517,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8727,,,,,,,,,"1|hzzbrr:",,,,,,,,,,,,,,,,,,,,,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/May/18 7:02 AM;wlahti;https://gerrit.hyperledger.org/r/c/22385;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Audit existing ACL unit tests,FAB-10308,30514,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/May/18 10:56 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/Jun/18 12:57 AM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,extended-unit-test,,,,,,"The ACL mechanisms were merged in v1.1, and presumably have sufficient unit and integration style unit-test coverage to meet the standard for feature merge in Fabric.  However, because of changing code standards, an audit of these unit tests needs to be done to ensure that the coverage is adequate.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8727,,,,,,,,,"1|hzzbrz:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Publish fabric & fabric-ca images from s390x platform,FAB-10309,30515,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,rameshthoomu,rameshthoomu,23/May/18 10:59 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,05/Jun/18 4:26 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,CI_Release,,,,,,Publish fabric & fabric-ca docker images from s390x platform to nexus3 repository after execute e2e tests on s390x.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10068,,,,,,,,,"1|hzzbs7:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jun/18 4:26 AM;rameshthoomu;This is not required now. The new requirement is mentioned in FAB-9641;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Publish fabric & fabric-ca images from ppc64le platform,FAB-10313,30519,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,rameshthoomu,rameshthoomu,23/May/18 11:25 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,20/Jul/18 7:16 AM,,,,,,,,,Future,,,fabric-ci,,,,,0,CI_JOB_CONFIG,,,,,,Publish fabric & fabric-ca docker images from ppc64le platform to nexus3 repository after execute e2e tests on ppc64le.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10068,,,,,,,,,"1|hzzbt3:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/18 5:23 AM;rameshthoomu;ppc64le Jenkins jobs are disabled so till these tests/jobs are enabled don;t push any images to ppc64le from jenkins;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
ACLs not appropriately hidden behind capability,FAB-10314,30520,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/May/18 11:50 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,24/May/18 7:34 AM,v1.2.0,,,,,,,,v1.2.0,,,fabric-common,,,,,0,,,,,,,"The ACLs function affects how channel config is parsed, and as such, it must be deterministic across versions.  Channel config parsing should not allow the presence of ACLs until the corresponding capability has been enabled.",,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbtb:",,,,,,,,,,,,,,,,,,,,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/May/18 5:54 AM;kchristidis;https://gerrit.hyperledger.org/r/c/22181/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update nexus publish docker images script to push tag based images,FAB-10315,30521,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,23/May/18 12:22 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,23/May/18 1:04 PM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,CI_JOB_CONFIG,,,,,,"Update nexus publish docker images script to push tag based images to nexus3. The current script is pushing ""stable"" images to nexus3 repository but to complete this FAB-8623 we have to publish ARCH based tag images like $ARCH-stable and $ARCH-stable-$COMMIT_TAG to nexus3. 

These tagged images will be used in svt and sdk-node test jobs.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyky7:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 1:04 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/22183/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
writing unit tests (using MockStub) in a given transaction cycle can read my own writes,FAB-10316,30522,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,wael,wael,23/May/18 5:09 PM,05/Nov/18 11:07 PM,28/Oct/23 3:03 AM,05/Nov/18 11:07 PM,v1.0.3,,,,,,,,,,,fabric-ledger,,,,,0,,,,,,,"I am using fabric v 1.0.3 and I am facing an issue with read/write semantics (phantom reads).

writing unit tests for transaction that has read after writing into the ledger , using mockStub, It will succeed. when in a given transaction cycle it should not read my own writes.

 

 

 ",,denyeart,wael,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbtj:",,,,,,,,,,,,,,,,,,,,,denyeart,wael,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jun/18 5:14 AM;denyeart;[~wael] Can you clarify, which unit tests?  Are you working on a fix CR?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
writing unit tests (using MockStub) in a given transaction cycle can read my own writes,FAB-10317,30523,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,wael,wael,23/May/18 5:12 PM,05/Nov/18 11:06 PM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,,,,,,,,,,,,,,,,,0,,,,,,,"I am using fabric v 1.0.3 and facing an issue with read/write semantics (phantom reads).

writing unit tests for transaction that has read after writing into the ledger , using mockStub, It will succeed. when in a given transaction cycle it should not read my own writes.

 

 

 ",,wael,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbtr:",,,,,,,,,,,,,,,,,,,,,wael,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Remove outdated architecture deep dive, replace with link to new paper",FAB-10318,30530,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,denyeart,denyeart,23/May/18 7:39 PM,10/Jan/20 5:27 AM,28/Oct/23 3:03 AM,10/Jan/20 5:27 AM,v1.1.0,,,,,,,,Future,v1.1.1,,fabric-docs,,,,,0,Documentation,,,,,,"We continue to get questions about the original NCAP doc [http://hyperledger-fabric.readthedocs.io/en/latest/arch-deep-dive.html] not matching the actual Fabric implementation and features in some areas.  

We should replace the content with text from the more updated paper:

pointer to paper page
https://dl.acm.org/citation.cfm?id=3190538
or direct pointer to pdf
[https://dl.acm.org/ft_gateway.cfm?id=3190538]

And the paper link at [http://hyperledger-fabric.readthedocs.io/en/latest/whatis.html#acknowledgement] should be updated to use the above URL.",,denyeart,joe-alewine,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtkn:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,joe-alewine,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 7:48 PM;vukolic;These are the published final and official ACM URLs for the Eurosys paper

pointer to paper page
https://dl.acm.org/citation.cfm?id=3190538
or direct pointer to pdf
https://dl.acm.org/ft_gateway.cfm?id=3190538

@arxiv one can point to 
https://arxiv.org/abs/1801.10228
which directly points to v2 of the paper at arxiv which is the same as published ACM DL version;;;","25/Jun/18 8:14 PM;denyeart;Per an email, [~cca88] mentioned that he would fix up the architecture deep dive topic [http://hyperledger-fabric.readthedocs.io/en/latest/arch-deep-dive.html] to match current implementation, rather than removing it from doc.

We still need to point to the latest and greatest architecture paper though:

pointer to paper page
 [https://dl.acm.org/citation.cfm?id=3190538]
 or direct pointer to pdf
 [https://dl.acm.org/ft_gateway.cfm?id=3190538];;;","10/Jan/20 5:27 AM;joe-alewine;Has already been removed.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Create fabric CI documentation,FAB-10323,30540,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,rameshthoomu,rameshthoomu,23/May/18 11:53 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,26/Jun/18 9:02 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,Create CI documentation on fabric CI configuration and explain what tests we run as part of the fabric build process.,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11168,,,,,,,,,,,,,,,,,,,,,,,,FAB-8461,,,,,,,,,"1|hzzbv3:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/18 2:26 AM;jtclark;Patch set is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/23395/;;;","21/Jun/18 11:05 AM;jtclark;Patch set was reviewed and re-submitted, passing the build verification tests. Updated patch set is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/23395/;;;","26/Jun/18 9:02 AM;jtclark;Patch set  is now *MERGED*: https://gerrit.hyperledger.org/r/#/c/23395/;;;",,,,,,,,,,,,,,,,,,,,,,,,
System Behave: Define the go vendor step definition,FAB-10326,30544,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,latitiah,latitiah,24/May/18 1:15 AM,21/Jul/18 3:51 AM,28/Oct/23 3:03 AM,06/Jun/18 11:32 PM,,,,,,,,,,,,,,,,,0,,,,,,,"The line
{code:java}
When I vendor go packages for fabric-based chaincode at <path>{code}
needs to be written and defined for use in the fabric-test/feature behave system tests.",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbvz:",,,,Unset,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,true,"20/Jul/18 5:36 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/22201/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a developer, I can perform multiple chaincode deployments on the same world",FAB-10327,30545,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,sykesm,sykesm,24/May/18 1:21 AM,21/Jul/18 3:49 AM,28/Oct/23 3:03 AM,04/Jun/18 10:50 PM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,"The world currently embeds a Deployment but the lifecycles are really independent. Given the independent lifecycles, there should be a way to provide a deployment to the world and have it perform the steps required to deploy chaincode.

Multiple deployments must be supported to enable install and instantiation of multiple chaincode instances to one or more peers.",,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10365,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbw7:",,,,Unset,,,,,,Unset,,,,,,,,,,,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jun/18 10:50 PM;latitiah;https://gerrit.hyperledger.org/r/#/c/22315/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Remove unnecessary assertions from existing integration tests,FAB-10328,30546,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,sykesm,sykesm,24/May/18 1:23 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:05 PM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,"Many of the assertions that are being performed in the existing tests have already been evaluated as part of the setup. Each of the tests need to be evaluated for redundant assertions and, where appropriate, remove them.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbwf:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
World setup should ensure required images have been created or pulled,FAB-10329,30547,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sykesm,sykesm,24/May/18 1:29 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,25/May/18 11:50 AM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,"The integration tests rely on a number of docker images. When the required images are not present on the local docker daemon, the tests fail in odd ways.

When the fabric components are built for the integration test, we need to decide if we want to fail fast with an easy to diagnose issue (eg. run make docker) of if we want to try to acquire/create the artifacts on the fly.

While I would prefer to acquire/create on the fly, concrete implementations involve running a make target from the fabric directory (somewhat fragile) or writing code to do the same thing as the makefile (a maintenance nightmare)",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbwn:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/May/18 3:24 AM;sykesm;https://gerrit.hyperledger.org/r/22299;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add a test with invalid plugin loading,FAB-10330,30548,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/May/18 1:44 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,24/May/18 9:00 AM,v1.2.0,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,extended-unit-test,,,,,,"It could be good to demonstrate that if a plugin fails to load, the peer doesn't ignore it, and crashes.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10349,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8729,,,,,,,,,"1|hzzbwv:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/May/18 1:46 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/22203/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Generate mockery mocks via go generate,FAB-10331,30549,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,24/May/18 1:47 AM,21/Jul/18 3:49 AM,28/Oct/23 3:03 AM,24/May/18 4:24 AM,,,,,,,,,v1.2.0,,,fabric-common,,,,,0,,,,,,,"The mockery mocks look like they are generatable via go generate, but they are not.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbx3:",,,,Unset,,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode data visibility in ledger.,FAB-10332,30550,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,mastersingh24,karthik37,karthik37,24/May/18 2:28 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,,,,,,0,chaincode,Documentation,Ledger,Security,stale-item,,"I have seen in FAQ that we can set chaincode input/output visiblity.
h2. Security & Access Control

*Data Privacy and Access Control*:
 # How do I ensure data privacy?

A. There are various aspects to data privacy. First, you can segregate your network into channels, where each channel represents a subset of participants that are authorized to see the data for the chaincodes that are deployed to that channel. {color:#8eb021}Second, within a channel you can restrict the input data to chaincode to the set of endorsers only, by using visibility settings. The visibility setting will determine whether input and output chaincode data is included in the submitted transaction, versus just output data.{color} Third, you can hash or encrypt the data before calling chaincode. If you hash the data then you will need to provide a means to share the source data. If you encrypt the data then you will need to provide a means to share the decryption keys. Fourth, you can restrict data access to certain roles in your organization, by building access control into the chaincode logic. Fifth, ledger data at rest can be encrypted via file system encryption on the peer, and data in-transit is encrypted via TLS.

 

Is there any documentation or sample code for chaincode visibility?.

 

I have set up fabric network which has two organizations(2 peers in each organization). These two organizations can access/view the ledger data.Then i have added third organization with two peers to the {color:#8eb021}same channel{color}. I do not want this(Org3) organization to see the data shared by org1 and org2. Is encryption the only way to restrict?. How does visibility work in chaincode?. Is this feature still in development?.",,dcrough13,karthik37,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbxb:",,,,Unset,,,,,,Unset,,,,,,,,,,,dcrough13,karthik37,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
handle ecdsa signature for idemix revocation in standard way,FAB-10333,30551,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mdr,mdr,mdr,24/May/18 2:28 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,25/May/18 11:24 AM,,,,,,,,,v1.2.0,,,fabric-crypto,,,,,0,idemix,,,,,,"Currently, the ecdsa signature made with the long term revocation key in idemix, is stored in a non-standard way. Handling this in a standard way (ASN1) will make it simpler to make the node and java SDKs compatible.",,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10120,,,,,,,,,"1|hzzbxj:",,,,,,,,,,,,,,,,,,,,,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/May/18 2:33 AM;mdr;CR: https://gerrit.hyperledger.org/r/#/c/22209/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
'make unit-test' peer/chaincode package fails locally on latest master,FAB-10334,30552,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,24/May/18 2:48 AM,23/Jan/19 6:51 PM,28/Oct/23 3:03 AM,24/May/18 5:42 AM,v1.2.0,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"TestInstall previously relied on the fact that another test enabled chaincode devmode and didn't reset viper afterwards.

The failure is as follows:
{code:java}
unit-tests_1 | ? github.com/hyperledger/fabric/peer [no test files] 
unit-tests_1 | 2018-05-22 15:14:11.544 UTC [msp] Setup -> INFO 001 MSP manager already up
unit-tests_1 | 2018-05-22 15:14:11.547 UTC [chaincodeCmd] validatePeerConnectionParameters -> WARN 002 received more TLS root cert files (2) than peer addresses (1) 
unit-tests_1 | 2018-05-22 15:14:11.554 UTC [chaincodeCmd] validatePeerConnectionParameters -> WARN 003 received more TLS root cert files (1) than peer addresses (0) 
unit-tests_1 | 2018-05-22 15:14:11.565 UTC [chaincodeCmd] ClientWait -> INFO 004 txid [txid0] committed with status (VALID) at peer0 
unit-tests_1 | 2018-05-22 15:14:11.595 UTC [msp] Setup -> INFO 005 MSP manager already up unit-tests_1 | 2018-05-22 15:14:11.595 UTC [chaincodeCmd] ClientWait -> INFO 006 txid [txid0] committed with status (VALID) at peer0 
unit-tests_1 | 2018-05-22 15:14:11.595 UTC [chaincodeCmd] ClientWait -> INFO 007 txid [txid0] committed with status (VALID) at peer1 
unit-tests_1 | 2018-05-22 15:14:11.596 UTC [chaincodeCmd] ClientWait -> INFO 008 txid [txid0] committed with status (VALID) at peer0 
unit-tests_1 | 2018-05-22 15:14:11.596 UTC [chaincodeCmd] ClientWait -> INFO 009 txid [txid0] committed with status (VALID) at peer1 
unit-tests_1 | Error: Must supply value for chaincode name, path and version parameters. unit-tests_1 | 2018-05-22 15:14:11.630 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 00a Using default escc 
unit-tests_1 | 2018-05-22 15:14:11.630 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 00b Using default vscc 
unit-tests_1 | Error: error getting chaincode code badexample02: path to chaincode does not exist: /opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go/bad_example02 
unit-tests_1 | 2018-05-22 15:14:11.799 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 00c Using escc escc 
unit-tests_1 | 2018-05-22 15:14:11.799 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 00d Using vscc vscc 
unit-tests_1 | 2018-05-22 15:14:11.800 UTC [chaincodeCmd] install -> INFO 00e Installed remotely response:<status:200 > endorsement:<> unit-tests_1 | Error: failed to unmarshal envelope from bytes 
unit-tests_1 | 2018-05-22 15:14:11.801 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 00f Using escc escc 
unit-tests_1 | 2018-05-22 15:14:11.801 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 010 Using vscc vscc 
unit-tests_1 | FAIL github.com/hyperledger/fabric/peer/chaincode 20.889s{code}",,lehors,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbxr:",,,,,,,,,,,,,,,,,,,,,lehors,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/May/18 3:02 AM;wlahti;https://gerrit.hyperledger.org/r/c/22211/;;;","18/Jan/19 6:55 PM;lehors;Although running the test in devmode appears to solve the problem it does not actually address the real issue, it merely avoids it, making the test useless because most of the code it is meant to test is skipped due to devmode being on.

The failing test (TestInstall from peer/chaincode/install_test.go) runs fine on its own without being in devmode. The problem only appears sometimes, when run in the test container in combination with some other test (I've never been able to reproduce it when run individually nor directly on my machine), from running out of memory and getting killed by the OS.

I've tried to figure out why it goes off the rail sometimes but to no avail. Tracing the test shows the process getting killed by the OS (from running out of memory) while trying to build the tar file.

Below is an extract from the log of a successful run:
{code:java}
root@b66b3b491af0:/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode# go test -v -run '(TestChaincodeInvokeOrQuery_waitForEvent|TestInstall$)'
[flogging] setModuleLevel -> DEBU 001 Module 'common/tools/configtxgen/localconfig' logger enabled for log level 'ERROR'
[flogging] setModuleLevel -> DEBU 002 Module 'common/tools/configtxgen/encoder' logger enabled for log level 'INFO'
...
--- PASS: TestChaincodeInvokeOrQuery_waitForEvent (0.09s)
=== RUN   TestInstall
[msp] GetDefaultSigningIdentity -> DEBU 052 Obtaining default signing identity
[chaincodeCmd] checkChaincodeCmdParams -> INFO 053 Using default escc
[chaincodeCmd] checkChaincodeCmdParams -> INFO 054 Using default vscc
[chaincodeCmd] getChaincodeSpec -> DEBU 055 java chaincode disabled
[golang-platform] getCodeFromFS -> DEBU 056 getCodeFromFS github.com/hyperledger/fabric/examples/chaincode/go/example02/cmd
[golang-platform] func1 -> DEBU 057 Discarding GOROOT package fmt
[golang-platform] func1 -> DEBU 058 Discarding provided package github.com/hyperledger/fabric/core/chaincode/shim
[golang-platform] func1 -> DEBU 059 Accepting import: github.com/hyperledger/fabric/examples/chaincode/go/example02
[golang-platform] GetDeploymentPayload -> DEBU 05a processing dep: github.com/hyperledger/fabric/vendor/google.golang.org/grpc/resolver
[golang-platform] GetDeploymentPayload -> DEBU 05b checking: /opt/gopath/src/gith...
[container] WriteFileToPackage -> DEBU 517 Writing file to tarball: src/github.com/hyperledger/fabric/vendor/github.com/gogo/protobuf/proto/extensions.go
[container] WriteFileToPackage -> DEBU 518 Writing file to tarball: src/github.com/hyperledger/fabric/vendor/github.com/gogo/protobuf/proto/extensions_gogo.go
[container] WriteFileToPackage -> DEBU 519 Writing file to tarball: src/github.com/hyperledger/fabric/vendor/github.com/gogo/protobuf/proto/lib.go
[container] WriteFileToPackage -> DEBU 51a Writing file to tarball: src/github.com/hyperledger/fabric/vendor/github.com/gogo/protobuf/proto/lib_gogo.go
...
container] WriteFileToPackage -> DEBU 73d Writing file to tarball: src/github.com/hyperledger/fabric/vendor/gopkg.in/yaml.v2/yamlprivateh.go
[msp/identity] Sign -> DEBU 73e Sign: plaintext: 0AC6070A5C08031A0C08D1C183E20510...FDFBDF000000FFFF5CEB3F780066B000 
[msp/identity] Sign -> DEBU 73f Sign: digest: B4661E8579A0091B9D1BC92B096B5F8CDF066F53F152FCD95EC5D851E88E5B8B 
[chaincodeCmd] install -> INFO 740 Installed remotely response:<status:200 > endorsement:<> 
--- PASS: TestInstall (28.92s)
PASS
ok  	github.com/hyperledger/fabric/peer/chaincode	29.338s

{code}
and the following one is from a failing one:
{code:java}
root@b66b3b491af0:/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode# go test -v -run '(TestChaincodeInvokeOrQuery_waitForEvent|TestInstall$)'
[flogging] setModuleLevel -> DEBU 001 Module 'common/tools/configtxgen/localconfig' logger enabled for log level 'ERROR'
[flogging] setModuleLevel -> DEBU 002 Module 'common/tools/configtxgen/encoder' logger enabled for log level 'INFO'
=== RUN   TestChaincodeInvokeOrQuery_waitForEvent
...
--- PASS: TestChaincodeInvokeOrQuery_waitForEvent (0.10s)
=== RUN   TestInstall
[msp] GetDefaultSigningIdentity -> DEBU 052 Obtaining default signing identity
[chaincodeCmd] checkChaincodeCmdParams -> INFO 053 Using default escc
[chaincodeCmd] checkChaincodeCmdParams -> INFO 054 Using default vscc
[chaincodeCmd] getChaincodeSpec -> DEBU 055 java chaincode disabled
[golang-platform] getCodeFromFS -> DEBU 056 getCodeFromFS github.com/hyperledger/fabric/examples/chaincode/go/example02/cmd
[golang-platform] func1 -> DEBU 057 Discarding GOROOT package fmt
[golang-platform] func1 -> DEBU 058 Discarding provided package github.com/hyperledger/fabric/core/chaincode/shim
[golang-platform] func1 -> DEBU 059 Accepting import: github.com/hyperledger/fabric/examples/chaincode/go/example02
[golang-platform] GetDeploymentPayload -> DEBU 05a processing dep: github.com/hyperledger/fabric/core/chaincode/platforms/util
[golang-platform] GetDeploymentPayload -> DEBU 05b checking: /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/platforms/util exists: true
...
[container] WriteFileToPackage -> DEBU 517 Writing file to tarball: src/github.com/hyperledger/fabric/vendor/github.com/gogo/protobuf/proto/extensions.go
[container] WriteFileToPackage -> DEBU 518 Writing file to tarball: src/github.com/hyperledger/fabric/vendor/github.com/gogo/protobuf/proto/extensions_gogo.go
signal: killed
FAIL	github.com/hyperledger/fabric/peer/chaincode	22.565s
{code}
This is true both with go1.10 used in 1.2 and go1.11.4 which is now available. This remains true with fabric 1.4.0. However, we no longer run unit-tests in a container so this problem becomes moot.

One more piece of data: when running TestInstall individually the chaincode.test process barely reaches 1.7% of memory, while running in combination with others it goes up to 90%+ before getting killed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Installing chaincode in integration world should install and verify,FAB-10335,30553,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,24/May/18 2:51 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,01/Jun/18 7:53 AM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,"Installation should be a reusable asset that completes atomically with success or failure.

The assertions within the helper should be clearly marked as helpers (ie. WithOffset on the Expect and Eventually calls).

This function will likely be built off of world and deployment.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbxz:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/May/18 3:11 AM;sykesm;https://gerrit.hyperledger.org/r/22555;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add helper to instantiate chaincode,FAB-10336,30554,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,24/May/18 2:52 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,01/Jun/18 7:53 AM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,"The helper should encapsulate all of the machinery around instantiation, waiting, and validation. The behavior must be atomic from the user's perspective.

Failures are handled as assertions. These assertions are part of a helper and should use WithOffset as appropriate on Expect and Eventually calls.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzby7:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/May/18 3:10 AM;sykesm;https://gerrit.hyperledger.org/r/22557;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Create method to drive query from a deployment,FAB-10337,30555,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,sykesm,sykesm,24/May/18 2:54 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,20/Jul/18 1:12 AM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,This simply wraps the chaincode query operation on an instance of deployment.,,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbyf:",,,,,,,,,,,,,,,,,,,,,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jun/18 8:25 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/22713/;;;","20/Jul/18 1:12 AM;latitiah;Code refactored.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Dynamically generate the peer and orderer config yaml files,FAB-10338,30556,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,sykesm,sykesm,24/May/18 3:37 AM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,"As a developer, I want to be able to setup the test such that the peer core.yaml and orderer.yaml configuration files are generated based on the values set in the World config.",,kchristidis,SjirNijssen,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10642,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzbyn:",,,,Unset,,,,,,Unset,,,,,,,,,,,kchristidis,SjirNijssen,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/May/18 3:34 PM;SjirNijssen;Where can I find a definition of World config?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Command Abstractions for Short running processes,FAB-10339,30557,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,sykesm,sykesm,24/May/18 3:42 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,"* peer chaincode install
 * peer chaincode instantiate
 * peer chaincode query
 * peer chaincode invoke
 * peer channel join
 * peer channel fetch
 * peer channel update
 * peer channel create",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10642,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbyv:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken links in fabric-samples/chaincode-docker-devmode/README,FAB-10340,30558,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,yuki-kon,yuki-kon,yuki-kon,24/May/18 3:45 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,29/May/18 4:36 AM,v1.1.0,,,,,,,,v1.2.0,,,fabric-samples,,,,,0,,,,,,,"The doc has old broken links in fabric-samples/chaincode-docker-devmode/README.rst.
The links to the install manual are not correct. The links should be updated correctly.
The links also don’t follow the style of RST. We need to update it.

The broken links:
http://hyperledger-fabric.readthedocs.io/en/latest/samples.html
http://hyperledger-fabric.readthedocs.io/en/latest/samples.html#download-platform-specific-binaries

The correct link:
http://hyperledger-fabric.readthedocs.io/en/latest/install.html
",,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbz3:",,,,,,,,,,,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/May/18 4:03 AM;yuki-kon;https://gerrit.hyperledger.org/r/#/c/22221/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
TestPresumedDead fails regularly with port conflict,FAB-10342,30560,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,sykesm,sykesm,24/May/18 4:36 AM,19/Mar/19 7:57 PM,28/Oct/23 3:03 AM,08/Jun/18 10:26 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,ci-flake,,,,,," This test fails regularly when running locally. Just hit again with current master (SHA

e9c51c10582c4512a27848256a2b4160cab1b982).
{code:java}
unit-tests_1  | --- FAIL: TestPresumedDead (0.00s)
unit-tests_1  | panic: listen tcp :4611: bind: address already in use [recovered]
unit-tests_1  | panic: listen tcp :4611: bind: address already in use
unit-tests_1  | 
unit-tests_1  | goroutine 23 [running]:
unit-tests_1  | testing.tRunner.func1(0xc4200e51d0)
unit-tests_1  | /opt/go/src/testing/testing.go:742 +0x29d
unit-tests_1  | panic(0xc44000, 0xc4202fd400)
unit-tests_1  | /opt/go/src/runtime/panic.go:505 +0x229
unit-tests_1  | github.com/hyperledger/fabric/gossip/comm.createGRPCLayer(0x1203, 0x34630c7a35c, 0xe, 0x10, 0xbeb9919876139378, 0x346aa6a5859)
unit-tests_1  | /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:683 +0x72d
unit-tests_1  | github.com/hyperledger/fabric/gossip/comm.NewCommInstanceWithServer(0x1203, 0xd6d6e0, 0xc4202bd260, 0xc4203c88a0, 0xe, 0x10, 0x0, 0x0, 0x0, 0x0, ...)
unit-tests_1  | /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:63 +0x935
unit-tests_1  | github.com/hyperledger/fabric/gossip/comm.newCommInstance(0x1203, 0x12909a0, 0x7857cd, 0xe393f8, 0xe39438, 0xf)
unit-tests_1  | /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_test.go:112 +0x197
unit-tests_1  | github.com/hyperledger/fabric/gossip/comm.TestPresumedDead(0xc4200e51d0)
unit-tests_1  | /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_test.go:728 +0x5c
unit-tests_1  | testing.tRunner(0xc4200e51d0, 0xd171c0)
unit-tests_1  | /opt/go/src/testing/testing.go:777 +0xd0
unit-tests_1  | created by testing.(*T).Run
unit-tests_1  | /opt/go/src/testing/testing.go:824 +0x2e0{code}
/cc [~C0rWin]",,C0rWin,haibbo,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbzj:",,,,,,,,,,,,,,,,,,,,,C0rWin,haibbo,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jun/18 10:26 PM;kchristidis;Per Artem, this should be taken care of by [https://gerrit.hyperledger.org/r/c/20591/]

If you keep seeing this, please update the JIRA accordingly.;;;","08/Jun/18 10:30 PM;C0rWin;Taken care in FAB-9100;;;",,,,,,,,,,,,,,,,,,,,,,,,,
TestNewGRPCServerInvalidParameters test broken on some Linux systems,FAB-10343,30561,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,jyellick,jyellick,jyellick,24/May/18 4:57 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,24/May/18 7:29 AM,v1.1.0,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,The error string returned is ultimately provided by the host platform and already has a list of three possible valid strings.  Adding a fourth one which seems to be missing.,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbzr:",,,,,,,,,,,,,,,,,,,,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/May/18 7:29 AM;kchristidis;https://gerrit.hyperledger.org/r/c/22223/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Make metrics tests use ephemeral ports,FAB-10344,30562,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,24/May/18 5:27 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/Jun/18 7:12 AM,,,,,,,,,v1.2.0,,,fabric-common,,,,,0,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzbzz:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jun/18 7:12 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/22229/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Reduce scope of serial packages and fix time measurements in unit test,FAB-10345,30563,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,24/May/18 6:21 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,25/May/18 2:29 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzc07:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/May/18 1:12 AM;sykesm;https://gerrit.hyperledger.org/r/22265;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Query all orgs at the end of eyfn,FAB-10346,30564,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/May/18 6:28 AM,21/Jul/18 3:49 AM,28/Oct/23 3:03 AM,24/May/18 10:19 AM,v1.1.0,,,,,,,,v1.2.0,,,fabric-samples,,,,,0,,,,,,,"at the end of eyfn we query the peer from org3 to make sure it has the expected state.

We should ideally also query the rest of the peers to make sure they accepted the endorsement that used the peer from org3.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzc0f:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/May/18 6:56 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/22233/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"add ""make pte-image"" option",FAB-10347,30565,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,24/May/18 6:39 AM,21/Jul/18 3:49 AM,28/Oct/23 3:03 AM,06/Jun/18 11:46 PM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,quality,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzc0n:",,,,Unset,,,,,,Unset,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,true,"24/May/18 7:03 AM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/22235/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Revert golint install workaround,FAB-10348,30566,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,24/May/18 7:27 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,25/May/18 2:29 AM,,,,,,,,,v1.2.0,,,,,,,,0,,,,,,,"FAB-9667 was done to work around [https://github.com/golang/lint/issues/397|https://github.com/golang/lint/issues/397.] . That issue was quickly resolved and we can remove the workaround.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc0v:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/May/18 1:11 AM;sykesm;https://gerrit.hyperledger.org/r/22267;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"TestPluginLoadingFailure fails when run via ""go test ./..."" on macOS",FAB-10349,30568,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,24/May/18 7:45 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,25/May/18 1:41 AM,v1.2.0,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"I've copied the relevant portions of the failure:
{code:java}
--- FAIL: TestPluginLoadingFailure (3.10s)
    --- FAIL: TestPluginLoadingFailure/ENDORSERS_ESCC (0.07s)
        Error Trace:    main_test.go:47
.
.
.

2018-05-24 10:47:13.321 EDT [core/handlers] loadPlugin -> CRIT 011 Error opening plugin at path testdata/invalid_plugins/invalidplugin.so: plugin.Open(""testdata/invalid_plugins/invalidplugin.so""): dlopen(/Users/wlahti/gopath/src/github.com/hyperledger/fabric/peer/testdata/invalid_plugins/invalidplugin.so, 10): no suitable image found.  Did find:

                /Users/wlahti/gopath/src/github.com/hyperledger/fabric/peer/testdata/invalid_plugins/invalidplugin.so: file too short

                /Users/wlahti/gopath/src/github.com/hyperledger/fabric/peer/testdata/invalid_plugins/invalidplugin.so: file too short

                panic: Error opening plugin at path testdata/invalid_plugins/invalidplugin.so: plugin.Open(""testdata/invalid_plugins/invalidplugin.so""): dlopen(/Users/wlahti/gopath/src/github.com/hyperledger/fabric/peer/testdata/invalid_plugins/invalidplugin.so, 10): no suitable image found.  Did find:

                /Users/wlahti/gopath/src/github.com/hyperledger/fabric/peer/testdata/invalid_plugins/invalidplugin.so: file too short

                /Users/wlahti/gopath/src/github.com/hyperledger/fabric/peer/testdata/invalid_plugins/invalidplugin.so: file too short

.
.
.
    	           
"" does not contain ""invalid ELF header""

    Test:       TestPluginLoadingFailure/VALIDATORS_VSCC

FAIL  {code}",,denyeart,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10330,FAB-10912,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc13:",,,,,,,,,,,,,,,,,,,,,denyeart,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/May/18 11:24 PM;denyeart;For me,
{code:java}
$ pwd
/Users/denyeart/work/src/github.com/hyperledger/fabric/peer
$ go test{code}
returns:
{code:java}
    --- FAIL: TestPluginLoadingFailure/ENDORSERS_ESCC{code}
...
{code:java}
2018-05-24 10:22:13.384 EDT [core/handlers] loadPlugin -> CRIT 011 Error opening plugin at path testdata/invalid_plugins/invalidplugin.so: plugin.Open(""testdata/invalid_plugins/invalidplugin.so""): dlopen(/Users/denyeart/work/src/github.com/hyperledger/fabric/peer/testdata/invalid_plugins/invalidplugin.so, 10): no suitable image found.  Did find:
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/peer/testdata/invalid_plugins/invalidplugin.so: file too short
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/peer/testdata/invalid_plugins/invalidplugin.so: file too short
                        panic: Error opening plugin at path testdata/invalid_plugins/invalidplugin.so: plugin.Open(""testdata/invalid_plugins/invalidplugin.so""): dlopen(/Users/denyeart/work/src/github.com/hyperledger/fabric/peer/testdata/invalid_plugins/invalidplugin.so, 10): no suitable image found.  Did find:
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/peer/testdata/invalid_plugins/invalidplugin.so: file too short
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/peer/testdata/invalid_plugins/invalidplugin.so: file too short
                        
                        goroutine 1 [running]:
                        github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc420031d40, 0xc420342240, 0x206, 0x0, 0x0, 0x0)
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x126
                        github.com/hyperledger/fabric/core/handlers/library.(*registry).loadPlugin(0x527d0a0, 0xc42003208a, 0x29, 0x2, 0xc4202853c8, 0x1, 0x1)
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/core/handlers/library/registry.go:153 +0x282
                        github.com/hyperledger/fabric/core/handlers/library.(*registry).evaluateModeAndLoad(0x527d0a0, 0xc4204b5aa0, 0x2, 0xc4202853c8, 0x1, 0x1)
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/core/handlers/library/registry.go:112 +0x73
                        github.com/hyperledger/fabric/core/handlers/library.(*registry).loadHandlers(0x527d0a0, 0xc4202fc3a0, 0x2, 0x2, 0xc42000e6b0, 0x1, 0x1, 0xc4202f2660, 0xc4202f26c0)
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/core/handlers/library/registry.go:101 +0x1b0
                        github.com/hyperledger/fabric/core/handlers/library.InitRegistry.func1()
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/core/handlers/library/registry.go:86 +0xd4
                        sync.(*Once).Do(0x529b1a8, 0xc420285598)
                            /usr/local/go/src/sync/once.go:44 +0xbe
                        github.com/hyperledger/fabric/core/handlers/library.InitRegistry(0xc4202fc3a0, 0x2, 0x2, 0xc42000e6b0, 0x1, 0x1, 0xc4202f2660, 0xc4202f26c0, 0x4c7d960, 0xc42000e4a0)
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/core/handlers/library/registry.go:81 +0x84
                        github.com/hyperledger/fabric/peer/node.serve(0x529b0d0, 0x0, 0x0, 0x0, 0x0)
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/peer/node/start.go:253 +0xde6
                        github.com/hyperledger/fabric/peer/node.glob..func1(0x5257dc0, 0x529b0d0, 0x0, 0x0, 0x0, 0x0)
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/peer/node/start.go:111 +0x9c
                        github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0x5257dc0, 0x529b0d0, 0x0, 0x0, 0x5257dc0, 0x529b0d0)
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:698 +0x46d
                        github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x5258420, 0x527d750, 0xf, 0x8)
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:783 +0x2e4
                        github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x5258420, 0x8, 0xffffffffffffffff)
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:736 +0x2b
                        main.main()
                            /Users/denyeart/work/src/github.com/hyperledger/fabric/peer/main.go:97 +0x5bf
                        "" does not contain ""invalid ELF header""{code};;;","24/May/18 11:50 PM;wlahti;The lock issue was specific to my machine. The error [~denyeart] provided above is the correct one. Updating the description and provide the easy fix, which is due to the check for the ""invalid ELF header"", which is not output when run locally on MacOS. ;;;","25/May/18 12:01 AM;wlahti;https://gerrit.hyperledger.org/r/c/22261/;;;",,,,,,,,,,,,,,,,,,,,,,,,
Errors in FABRIC peers when starting Composer network: [launchAndWaitForRegister failed: timeout expired while starting chaincode],FAB-10353,30573,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,VadimInshakov,VadimInshakov,24/May/18 5:01 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:05 PM,,,,,,,,,,,,,,,,,0,,,,,,,"Unfortunately, I have not been able to start the network for several months, all this time I tried to get help in the rocket chat, but there it is not possible to discuss the problems in detail until their solution.
So, I'm asking you to help resolve the following problem that occurs when starting a business network.

 

When I start network, I see this error:
{code:java}
Error: Error trying to start business network. Error: No valid responses from any peers.
Response from attempted peer comms was an error: Error: REQUEST_TIMEOUT
Response from attempted peer comms was an error: Error: REQUEST_TIMEOUT
Response from attempted peer comms was an error: Error: REQUEST_TIMEOUT
Response from attempted peer comms was an error: Error: REQUEST_TIMEOUT{code}
 

The real cause of the problems can be found in the logs of the peers:
{code:java}
2018-05-24 07:14:37.627 UTC [chaincode] Launch -> ERRO 915 launchAndWaitForRegister failed: timeout expired while starting chaincode inno:0.0.1(networkid:dev,peerid:peer0.org1.innodata.ru,tx:9795de568aad0b5a96c9dcb94993bf997d481df3bd9ea2bda88d07e07b07c6ea){code}
 

All logs and some screenshots are attached.

 

 

Fabric v1.1, Composer v0.19.5",,VadimInshakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/May/18 5:05 PM;VadimInshakov;orderer FULL LOG.txt;https://jira.hyperledger.org/secure/attachment/15006/orderer+FULL+LOG.txt","24/May/18 5:06 PM;VadimInshakov;peer0.org1 FULL LOG.txt;https://jira.hyperledger.org/secure/attachment/15010/peer0.org1+FULL+LOG.txt","24/May/18 5:06 PM;VadimInshakov;peer0.org2 FULL LOG.txt;https://jira.hyperledger.org/secure/attachment/15009/peer0.org2+FULL+LOG.txt","24/May/18 5:06 PM;VadimInshakov;peer1.org1 FULL LOG.txt;https://jira.hyperledger.org/secure/attachment/15008/peer1.org1+FULL+LOG.txt","24/May/18 5:05 PM;VadimInshakov;peer1.org2 FULL LOG.txt;https://jira.hyperledger.org/secure/attachment/15007/peer1.org2+FULL+LOG.txt","24/May/18 5:05 PM;VadimInshakov;screenshot of orderer log.png;https://jira.hyperledger.org/secure/attachment/15005/screenshot+of+orderer+log.png","24/May/18 5:05 PM;VadimInshakov;screenshot of peer0.org1 log.png;https://jira.hyperledger.org/secure/attachment/15004/screenshot+of+peer0.org1+log.png",,,,,,,,,,,,,,,,,,,,,,"1|hzzc27:",,,,,,,,,,,,,,,,,,,,,VadimInshakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/May/18 3:36 AM;VadimInshakov;Problem solved. The docker network was not configured correctly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Manual Test: Have an identity mixer client perform a chaincode invocation,FAB-10355,30575,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,ales,ales,ales,24/May/18 7:48 PM,07/Nov/18 4:38 PM,28/Oct/23 3:03 AM,17/Oct/18 8:47 PM,v1.2.0,,,,,,,,v1.3.0,v1.4.0,,fabric-crypto,,,,,0,idemix,manual-test,,,,,,,ales,dubovitskaya,JonathanLevi,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10116,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12758,,,No,,,,,,"1|hzzc2n:",,,,,,,,,,,,,,,,Unset,,Unset,,,ales,dubovitskaya,JonathanLevi,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/May/18 9:06 PM;dubovitskaya;https://gerrit.hyperledger.org/r/#/c/22247/;;;","12/Sep/18 8:39 PM;dubovitskaya;[~JonathanLevi] shall we merge this one or leave it out?;;;","15/Oct/18 7:17 PM;JonathanLevi;So as part of the Fabric 1.4's development plan, we may be removing the CLI (e2e) tests altogether. I will follow up with Ginkgo test/runner which covers this functionality.;;;","17/Oct/18 8:47 PM;JonathanLevi;As discussed during the 1.3 development cycles... we are.moving this to a more ""automated process"" and the e2e CLI tests will be removed soon.

 

Closing.;;;",,,,,,,,,,,,,,,,,,,,,,,
Fabric peer on ARM (RPI3) - fail upon peer node start command,FAB-10356,30576,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,SashaPESIC,SashaPESIC,24/May/18 8:06 PM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,31/May/18 10:48 AM,,,,,,,,,WON'T FIX,,,fabric-peer,,,,,0,,,,,,,"I have built all docker images, and fabric tools on RaspberryPi3 - ARM. When building the fabric, i got an int overflow error in file: https://github.com/hyperledger/fabric-amcl/blob/master/amcl/FP256BN/FP.go, line 103. When on your machine this file is at: path-to-fabric/vendor/github.com/milagro-crypto/amcl/version3/go/amcl/FP256BN/FP.go. 

To solve the overflow i cut one half (32) bits from the MConst = MConst >> 32.

The error from summary happened when testing basic-network of fabric-samples v.1.1.0 on ARMv7l (Raspberry Pi 3). Please, note, that this is not happening on x86_64 architectures, and is probably specifically tied to the 32bit architecture of Raspberry Pi. Maybe it is even connected to the fix i applied when building (described above).

To recreate the error one must have a 32-bit architecture at hand, then build all the components with make, and download fabric-samples. 

When running start.sh, all containers start normally, except the peer container, which exits after a short period of time. The container exits with an error: 

peer0.org1.example.com    | 2018-05-24 10:36:44.886 UTC [nodeCmd] serve -> INFO 026 Starting peer with ID=[name:""peer0.org1.example.com"" ], network ID=[dev], address=[peer0.org1.example.com:7051]
peer0.org1.example.com    | 2018-05-24 10:36:44.899 UTC [nodeCmd] serve -> INFO 027 Started peer with ID=[name:""peer0.org1.example.com"" ], network ID=[dev], address=[peer0.org1.example.com:7051]
peer0.org1.example.com    | panic: runtime error: invalid memory address or nil pointer dereference
peer0.org1.example.com    | [signal SIGSEGV: segmentation violation code=0x1 addr=0x4 pc=0x8a38]
peer0.org1.example.com    | 
peer0.org1.example.com    | goroutine 77 [running]:
peer0.org1.example.com    | sync/atomic.storeUint64(0x1316b2fc, 0xf5d19e02, 0x15318e4c)
peer0.org1.example.com    | 	/opt/go/src/sync/atomic/64bit_arm.go:20 +0x3c
peer0.org1.example.com    | github.com/hyperledger/fabric/gossip/identity.(*storedIdentity).fetchIdentity(0x1316b2f0, 0x11f12380, 0x1205d940, 0x20)
peer0.org1.example.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:237 +0xa8
peer0.org1.example.com    | github.com/hyperledger/fabric/gossip/identity.(*identityMapperImpl).Get(0x120ad400, 0x1205d940, 0x20, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0)
peer0.org1.example.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:154 +0xac
peer0.org1.example.com    | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).getOrgOfPeer(0x11eaea50, 0x1205d940, 0x20, 0x20, 0x889f48, 0x0, 0x0)
peer0.org1.example.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:1213 +0x40
peer0.org1.example.com    | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).isInMyorg(0x11eaea50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1205d940, 0x20, 0x20, 0x0, ...)
peer0.org1.example.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:1206 +0x40
peer0.org1.example.com    | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).gossipBatch.func3(0x889f48, 0x13209de0, 0xd740d0)
peer0.org1.example.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:483 +0xd0
peer0.org1.example.com    | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).gossipBatch.func4(0x889f48, 0x13209de0, 0x0)
peer0.org1.example.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:486 +0x2c
peer0.org1.example.com    | github.com/hyperledger/fabric/gossip/gossip.partitionMessages(0x13212f10, 0x1323a948, 0x1, 0x2, 0xd740d0, 0x0, 0x0, 0x1323a948, 0x1, 0x2)
peer0.org1.example.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:1328 +0xb8
peer0.org1.example.com    | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).gossipBatch(0x11eaea50, 0x1323a948, 0x1, 0x2)
peer0.org1.example.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:522 +0x4bc
peer0.org1.example.com    | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).sendGossipBatch(0x11eaea50, 0x1323a928, 0x1, 0x1)
peer0.org1.example.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:445 +0xe0
peer0.org1.example.com    | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).(github.com/hyperledger/fabric/gossip/gossip.sendGossipBatch)-fm(0x1323a928, 0x1, 0x1)
peer0.org1.example.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:110 +0x34
peer0.org1.example.com    | github.com/hyperledger/fabric/gossip/gossip.(*batchingEmitterImpl).emit(0x1316b920)
peer0.org1.example.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/batcher.go:81 +0x10c
peer0.org1.example.com    | github.com/hyperledger/fabric/gossip/gossip.(*batchingEmitterImpl).periodicEmit(0x1316b920)
peer0.org1.example.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/batcher.go:64 +0x48
peer0.org1.example.com    | created by github.com/hyperledger/fabric/gossip/gossip.newBatchingEmitter
peer0.org1.example.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/batcher.go:54 +0x130
peer0.org1.example.com exited with code 2

I was wondering, whether it is possible to change the files prior to building, and if it is, which files and which parts of the files. I am especially looking at the first one - github.com/hyperledger/fabric/gossip/identity/identity.go. There seem to be some functions of Golang exclusively tied to 64bit numbers, like time.Unix which always returns a 64-bit number. 

This seems to be a high priority bug since the peer cannot be run on any 32-bit architecture systems.  
",,C0rWin,dloghin,mastersingh24,SashaPESIC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzc2v:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,dloghin,mastersingh24,SashaPESIC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/May/18 8:10 AM;mastersingh24;Chaincode requires Docker and Docker officially only supports 64bit architectures.  I know that there is version of Docker available via Ubuntu for ARM7, but this is not officially supported by Docker.;;;","31/May/18 4:43 PM;SashaPESIC;[~mastersingh24]
Yes, Gari, I absolutely agree there with you. However, that is not an imperative saying that it cannot work - I have a working Fabric 1.0.6 (peer, orderer, ca, couch, the whole package) up and running on a RPi3. Now, I am more interested here in what exactly changed between the versions and it does not work anymore with v1.1.0. 
Greets!;;;","11/Jun/18 7:27 PM;SashaPESIC;[~mastersingh24] i installed a 64-bit OS on my RP, and it works out of the box. I still cannot figure out why it does not work with 32-bit OS, since the version 1.0.6 worked like a charm. I am ready to close the issues. ;;;","28/Jun/18 7:17 PM;dloghin;[~SashaPESIC] - I have recently encountered the same issue on v1.2.0-rc1. It seems that AMCL has a 32-bit flavour that can be enabled with `python config32.py` (see [https://github.com/milagro-crypto/amcl/tree/master/version3/go).] So one solution is to perform this configuration dynamically, when fabric is built. Another option would be to include both versions of AMCL go files for 32- and 64-bit architectures in fabric.   ;;;",,,,,,,,,,,,,,,,,,,,,,,
Manual Test: Dissemination of the private data to for organization added to collection config,FAB-10358,30590,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,nirro,nirro,24/May/18 11:06 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,28/May/18 11:47 PM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,e2e-test,,,,,,"1. Setup a channel with three organisations: Org1, Org2 and Org3
2. Install a chaincode and provide collection configuration which will have two collections:
    2.1. First collection ColName1 will include Org1 and Org2
    2.2. Second collection ColName2 will include Org2 and Org3
3. Endorse transactions which produces private read-write sets for ColName1 and ColName2
4. Update membership of collection ColName1 to add Org3
5. Endorse transactions which produces private read-write sets for ColName1
    5.1. Need to make sure Org3 receives relevant private data after transaction with updated membership is get committed
",,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10156,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzwqfk:9",,,,,,To Do,,,,,,,,,,,,,,,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/May/18 11:47 PM;nirro;tested this flow manually using marbles02_private chaincode. 
test passed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer_ote tests failed in CI jobs for fabric-test-daily due to Assertion error.,FAB-10359,30591,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,sambhavdutt,sambhavdutt,24/May/18 11:25 PM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,01/Jun/18 10:34 PM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,ci-failure,,,,,,"The OTE test is failing in the fabric-test-daily starting from test case FAB-7078, Observed the following errors,

*fabric-test Commit: 80f4747*

{code:java}
AssertionError: 'RESULT=PASSED' not found in '====================Starting FAB-7078 test with OTE====================\nnumber of orderers: 6\nordererLogLevel:  INFO\nnumber of CA: 0\nnumber of organizations: 1\nnumber of peers: 1\nnumber of channels: 1\nnumber of kafka: 5\nnumber of zookeeper: 3\norderer service type: kafka\nPROFILE_STRING: test\nHostIP1:  localhost\nTLSEnabled: enabled\n PROFILE_STRING=test, ordServType=kafka, nKafka=5, nOrderer=6, nZoo=3\n nOrg=1, nPeersPerOrg=1, ledgerDB=goleveldb, hashType=SHA2, secType=256, comName=example.com\ncurrent working directory: /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/NL\nGOPATH=/w/workspace/fabric-test-daily-x86_64/gopath\n \n        ####################################################### \n        #                generate crypto-config.yaml          # \n        ####################################################### \ngenerate crypto-config.yaml ...\n./gen_crypto_cfg.sh -o 6 -r 1 -p 1 -C example.com\nnOrderer:  6\nnOrg:  1\npeersPerOrg: 1\ncomName:  example.com\nnOrderer=6, peersPerOrg=1, nOrg=1\ncfgOutFile=/w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/NL/crypto-config.yaml\n \n   
.
.
CONSUMERS   OrdererIdx  ChannelIdx ChannelID                    TXs     Batches
                     0           0 testorgschannel1            6890         689
                     1           0 testorgschannel1            6970         697
                     2           0 testorgschannel1            6970         697
                     3           0 testorgschannel1            6930         693
                     4           0 testorgschannel1            6920         692
                     5           0 testorgschannel1            6920         692
!!!!! Num TXs Delivered is not same on all orderers!!!!!
!!!!! Num Blocks Delivered is not same on all orderers!!!!!
Error: Unexpected Block count 689 (expected 1500) on ordIndx=0 channelIDs[0]=testorgschannel1, chanSentTxTotal=15000 BatchSize=10
Error: Unexpected Block count 697 (expected 1500) on ordIndx=1 channelIDs[0]=testorgschannel1, chanSentTxTotal=15000 BatchSize=10
Error: Unexpected Block count 697 (expected 1500) on ordIndx=2 channelIDs[0]=testorgschannel1, chanSentTxTotal=15000 BatchSize=10
Error: Unexpected Block count 693 (expected 1500) on ordIndx=3 channelIDs[0]=testorgschannel1, chanSentTxTotal=15000 BatchSize=10
Error: Unexpected Block count 692 (expected 1500) on ordIndx=4 channelIDs[0]=testorgschannel1, chanSentTxTotal=15000 BatchSize=10
Error: Unexpected Block count 692 (expected 1500) on ordIndx=5 channelIDs[0]=testorgschannel1, chanSentTxTotal=15000 BatchSize=10
Not counting genesis blks (1 per chan)        1
Total TX broadcasts Requested to Send     15000
Total TX broadcasts send success ACK      15000
Total TX broadcasts sendFailed - NACK         0
Total Send-LOST TX (Not Ack or Nack))         0
Total Recv-LOST TX (Ack but not Recvd)     8110 (on ordIndx[0] - but see all actuals below)
Total deliveries received TX on each ordrr     [   6890    6970    6970    6930    6920    6920]
Total deliveries received Blocks on each ordrr [    689     697     697     693     692     692]
THROUGHPUT TPS = 365 , FAB-7078 using batchSize=10 numChannels=1 numOrdsInNtwk=6 ordType=kafka numKafkaBrokers=5
TPS - Overall Transactions per second       365
TPS per channel                             365
TPS per orderer                              60
BPS - Overall Blocks per second              16
BPS per channel                              16
BPS per orderer                               2
TEST FAB-7078 Orderers were INCONSISTENT! BAD! Some ACKed TX were LOST by orderer service! RESULT=FAILED: TX Req=15000 BrdcstACK=15000 NACK=0 DelivBlk=[689 697 697 693 692 692] DelivTX=[6890 6970 6970 6930 6920 6920] numChannels=1 batchSize=10 TPS=365
Removing the Network Consumers
Consumer-o0-c0 CLOSING. Totals received numtrans=6891 numBlocks=690, 2018-05-24 12:33:38.42825479 +0000 UTC m=+90.954599341
--- FAIL: Test_FAB7078_1ch_6ord_5kb_10kpayload (90.92s)
	ote_test.go:424: TEST FAB-7078 Orderers were INCONSISTENT! BAD! Some ACKed TX were LOST by orderer service! RESULT=FAILED: TX Req=15000 BrdcstACK=15000 NACK=0 DelivBlk=[689 697 697 693 692 692] DelivTX=[6890 6970 6970 6930 6920 6920] numChannels=1 batchSize=10 TPS=365
FAIL
exit status 1
FAIL	github.com/hyperledger/fabric/OTE	90.958s
====== OTE test execution finished. Save OTE test logs.
{code}

*Build Logs*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/361/testReport/orderer_ote/perf_orderer/test_FAB_7078_6ord_kafka_1ch_10kpayload/",,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzc3r:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,true,"29/May/18 2:00 AM;sambhavdutt;The daily tests fail now starting from CouchDB tests in Behave feature tests, as a chaincode container peer0.org1.example.com-mycc1-0 is not running. 

*fabric-test Commit: ef3cfae*

{code:java}
00:08:33     When a user defines a couchDB index named index_behave_test with design document name ""indexdoc_behave_test"" containing the fields ""size"" to the chaincode at path ""github.com/hyperledger/fabric-samples/chaincode/marbles02/go""                     # steps/basic_impl.py:146
00:08:33     When a user sets up a channel named ""mychannel1""                                                                                                                                                                                                      # steps/endorser_impl.py:45
00:08:33 2018-05-28 04:08:33.400 UTC [common/tools/configtxgen] main -> WARN 001 Omitting the channel ID for configtxgen is deprecated.  Explicitly passing the channel ID will be required in the future, defaulting to 'testchainid'.
00:08:33 2018-05-28 04:08:33.400 UTC [common/tools/configtxgen] main -> INFO 002 Loading configuration
00:08:33 2018-05-28 04:08:33.466 UTC [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 003 Generating new channel configtx
00:08:33 2018-05-28 04:08:33.466 UTC [common/tools/configtxgen/encoder] NewApplicationGroup -> WARN 004 Default policy emission is deprecated, please include policy specificiations for the application group in configtx.yaml
00:08:33 2018-05-28 04:08:33.467 UTC [common/tools/configtxgen/encoder] NewApplicationOrgGroup -> WARN 005 Default policy emission is deprecated, please include policy specificiations for the application org group Org1ExampleCom in configtx.yaml
00:08:33 2018-05-28 04:08:33.467 UTC [common/tools/configtxgen/encoder] NewApplicationOrgGroup -> WARN 006 Default policy emission is deprecated, please include policy specificiations for the application org group Org2ExampleCom in configtx.yaml
00:08:33 2018-05-28 04:08:33.468 UTC [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 007 Writing new channel tx
00:10:43     And a user deploys chaincode at path ""github.com/hyperledger/fabric-samples/chaincode/marbles02/go"" with args [""""] with name ""mycc1"" with language ""GOLANG"" on channel ""mychannel1""                                                                   # steps/endorser_impl.py:93
00:16:04       Assertion Failed: The expected chaincode container b7eb0d22622c11e89dccfa163e425a82-peer0.org1.example.com-mycc1-0 is not running
00:16:04       Captured stdout:
00:16:04       testConfigs: configs/b7eb0d22622c11e89dccfa163e425a82
00:16:04       ['index_behave_test.json', 'indexOwner.json']
{code}

*Build Log*
https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/365/consoleFull

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-daily-x86_64/365/;;;","31/May/18 11:00 PM;sambhavdutt;The OTE tests are failing in the fabric-test-daily with Assertion error. I have copied the errors from the recent tests,

*fabric-test Commit: 64b7526*

{code:java}
04:39:44 E           AssertionError: 'RESULT=PASSED' not found in '====================Starting FAB-6996_1ch_solo test with OTE====================\nnumber of orderers: 1\nordererLogLevel:  INFO\nnumber of CA: 0\nnumber of organizations: 1\nnumber of peers: 1\nnumber of channels: 1\nPROFILE_STRING: test\nHostIP1:  localhost\nTLSEnabled: enabled\n PROFILE_STRING=test, ordServType=solo, nKafka=0, nOrderer=1, nZoo=0\n nOrg=1, nPeersPerOrg=1, ledgerDB=goleveldb, hashType=SHA2, secType=256, comName=example.com\ncurrent working directory: /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/NL\nGOPATH=/w/workspace/fabric-test-daily-x86_64/gopath\n \n        ####################################################### \n        #                generate crypto-config.yaml          # \n        ####################################################### \ngenerate crypto-config.yaml ...\n./gen_crypto_cfg.sh -o 1 -r 1 -p 1 -C example.com\nnOrderer:  1\nnOrg:  1\npeersPerOrg: 1\ncomName:  example.com\nnOrderer=1, peersPerOrg=1, nOrg=1\ncfgOutFile=/w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/NL/crypto-config.yaml\n \n        ####################################################### \n        #                execute cryptogen                    # \n        
02:55:20 orderer_ote.py::perf_orderer::test_FAB_6996_solo_1ch FAILED
02:59:43 orderer_ote.py::perf_orderer::test_FAB_7024_solo_1ch_500batchsize FAILED
03:04:05 orderer_ote.py::perf_orderer::test_FAB_7026_solo_3ch FAILED
03:08:28 orderer_ote.py::perf_orderer::test_FAB_7027_solo_3ch_500batchsize FAILED
03:12:57 orderer_ote.py::perf_orderer::test_FAB_7036_3ord_kafka_1ch FAILED
03:17:27 orderer_ote.py::perf_orderer::test_FAB_7037_3ord_kafka_1ch_500batchsize FAILED
03:22:02 orderer_ote.py::perf_orderer::test_FAB_7038_3ord_kafka_3ch FAILED
03:26:37 orderer_ote.py::perf_orderer::test_FAB_7039_3ord_kafka_3ch_500batchsize FAILED
03:31:10 orderer_ote.py::perf_orderer::test_FAB_7058_6ord_kafka_1ch FAILED
03:35:44 orderer_ote.py::perf_orderer::test_FAB_7059_6ord_kafka_1ch_500batchsize FAILED
03:40:31 orderer_ote.py::perf_orderer::test_FAB_7060_6ord_kafka_3ch FAILED
03:45:16 orderer_ote.py::perf_orderer::test_FAB_7061_6ord_kafka_3ch_500batchsize FAILED
03:49:41 orderer_ote.py::perf_orderer::test_FAB_7070_solo_1ch_10kpayload FAILED
03:54:08 orderer_ote.py::perf_orderer::test_FAB_7071_solo_1ch_500batchsize_10kpayload FAILED
03:58:33 orderer_ote.py::perf_orderer::test_FAB_7072_solo_3ch_10kpayload FAILED
04:02:59 orderer_ote.py::perf_orderer::test_FAB_7073_solo_3ch_500batchsize_10kpayload FAILED
04:07:28 orderer_ote.py::perf_orderer::test_FAB_7074_3ord_kafka_1ch_10kpayload FAILED
04:11:57 orderer_ote.py::perf_orderer::test_FAB_7075_3ord_kafka_1ch_500batchsize_10kpayload FAILED
04:16:31 orderer_ote.py::perf_orderer::test_FAB_7076_3ord_kafka_3ch_10kpayload FAILED
04:21:06 orderer_ote.py::perf_orderer::test_FAB_7077_3ord_kafka_3ch_500batchsize_10kpayload FAILED
04:25:40 orderer_ote.py::perf_orderer::test_FAB_7078_6ord_kafka_1ch_10kpayload FAILED
04:30:13 orderer_ote.py::perf_orderer::test_FAB_7079_6ord_kafka_1ch_500batchsize_10kpayload FAILED
04:34:59 orderer_ote.py::perf_orderer::test_FAB_7080_6ord_kafka_3ch_10kpayload FAILED
04:39:44 orderer_ote.py::perf_orderer::test_FAB_7081_6ord_kafka_3ch_500batchsize_10kpayload FAILED
{code}

*Build Logs*
https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/368/testReport/orderer_ote/perf_orderer/test_FAB_6996_solo_1ch/

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-daily-x86_64/368/
;;;","01/Jun/18 2:55 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/22643/] addresses the problem with the networks not being created (and  observable as the cause for the ""chaincode not instantiated"" error) due to the ""peer channel create"" command missing the ""s"" for seconds when specifying a timeout of 300s;;;","01/Jun/18 10:34 PM;sambhavdutt;[~scottz] [~latitiah] [~AdnanChoudhury]

The OTE test is passing in the smoke tests merge jobs, and the daily smoke tests, that build on the latest merged commit. There are some fails in the verify tests but they will pass if the patch is re based. The merge tests that run on the latest commit are passing the OTE. 

*Build Logs*

[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-merge-x86_64/test_results_analyzer/]

*Daily* - [https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-smoke-test-daily-x86_64/150/]

*Merge* - [https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-merge-x86_64/305/];;;",,,,,,,,,,,,,,,,,,,,,,,
Integrate Grafana & Kibana plugins in the Kubernetes for System tests,FAB-10360,30593,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Ratnakar,Ratnakar,24/May/18 11:46 PM,30/Jul/19 11:47 AM,28/Oct/23 3:03 AM,30/Jul/19 11:47 AM,,,,,,,,,Future,,,fabric-quality,,,,,0,quality,,,,,,For the Metrics and Stats integrate Grafana & Kibana plugins in the Kubernetes for the System tests.,,denyeart,mastersingh24,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcaf:",,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","24/Sep/18 10:26 PM;Ratnakar;Changed the release version to *future* as this task is to investigate the plugins for metrics collection for system tests;;;","30/Jul/19 11:47 AM;mastersingh24;No activity for around a year .... cleanup time;;;",,,,,,,,,,,,,,,,,,,,,,,,
Enhance configtxgen to print policies,FAB-10363,30597,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jyellick,jyellick,25/May/18 12:41 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-tools,,,,,0,stale-item,,,,,,"The {{configtxgen}} tool has enhancements to print the org definition in JSON format to make editing channel configs easier.  It would also be helpful for it to print the value definition for policies defined in the global policy section as well.

A very similar syntax to the {{-printOrg}} could be used, simply naming a policy rather than an org name.",,denyeart,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzcb3:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Enhance configtxgen to do upgrade transactions,FAB-10364,30598,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jyellick,jyellick,25/May/18 12:54 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-tools,,,,,0,stale-item,,,,,,"Today it is rather tedious to do version upgrades in fabric, because a channel reconfiguration transaction must be constructed by hand, sometimes adding additional elements like ACLs to bring the system up to a new base level.

These config updates could be computed automatically by configtxgen, simplifying life for our  users.

As a rough flow, the user could pass in the latest config block for a channel and either pass in a target version, or a target profile.  Then configtxgen could compute the necessary update to upgrade the channel and write it out, like the anchor peers update.",,denyeart,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzcbb:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Tease the Deployment struct from the World Config,FAB-10365,30600,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,25/May/18 1:11 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,01/Jun/18 12:52 AM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,A developer should be able to deploy multiple chaincodes on multiple channels. The current structure does not allow this.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10327,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcbr:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/May/18 7:51 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/22315/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
A new peer joining the network unaware of the purged pvt data,FAB-10366,30605,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,manish-sethi,manish-sethi,25/May/18 1:41 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,01/Jun/18 3:30 AM,v1.2.0,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,"*Scenario*: When a new peer joins the network, the peer receives the blocks from genesis block. Similar is the situation when a peer is re-started after a long halt and the peer starts receiving the block where it left the last time. In summary, the situation is such that the other peers in the network are well advanced from the peer who is trying to catch up with the network

*Problem*: In the above scenario, when the catching up peer receives the block, it also tries to pull the private data (if any, for which the peer is eligible per the last configuration). However, since we allow automatic purge of the pvt data via BTL (Block-To-Live) policy, all the peers in the network are likely to have purged the data. This causes the catching up peer to keep hitting timeouts for each block.

*Solutions*: There are a couple of possible solutions that we can attempt to solve

*Solution 1*: This solution requires the catching up peer to be constantly aware of the latest height (say via orderer). Before attempting to pull the pvt data, the peer consults the BTL (locally available most recent collection config) and evaluates whether the pvt data is already (logically) expired. If yes, then do not even try to pull this pvt data. However, one of the assumptions for this solution to work is that the changes in the BTL are applicable only on the new data written after the BTL - This assumption hold true for Fabric-1.2, as we don't even allow change in BTL for now.

*Solution 2*: This solution requires a significant change in the gossip design. However, the main benefits of this solution is that this allows a high degree of flexibilities in the configurations going forward. For instance, this does not make any assumptions about the future BTL configurations and hence will allow changing the BTLs retrospectively. Further, the benefits also extends to other configuration such as collection membership. For instance, in fabric 1.2, to overcome the problem of catching up peer due to change in membership, the sending peer evaluates the point in time configuration. This implementation rules out a possibility where a business case demands that the peer should respect the latest collection configuration for distribution as opposed to the historic one.

At the very high level, in this solution, the catching up peer attempts to get the private data from other peer, but the other peer sends a proper refusal code as opposed to simply refusing. To take an example, assume that a catching up peer is committing block#5 and hence trying retrieve the pvt data associated with this block. However, the refusal code that this peer gets may look like <data purged, atBlock#50> and <not authorised, atBlock#100> etc. Here, the first refusal code depicts that the sending peer is aware of the more recent configurations and has purged the data as of block#50. Similarly, the second refusal code depicts that the sending peer is aware of removal of the asking peer at block#100. However, the challenge is posed by the fact that the catching up peer cannot blindly trust the refusal code sent by the sending peer. Instead, the peer needs to record/index these responses by the block number (#50 and #100 in the above example) and when the peer reaches that height, it needs to validate these responses first hand by consulting the locally available configurations. In other words, since the catching up peer does not have access to the future configurations, it simply trusts the sending peer refusal code and proceeds but re-evaluates the codes (potentially, in a background thread) when the peer itself learns the fact in the future.",,C0rWin,denyeart,manish-sethi,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzccv:",,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,manish-sethi,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/May/18 1:53 AM;denyeart;In my opinion this is a must-fix problem for v1.2, and it seems Solution 1 is the more feasible solution in v1.2 timeframe.

I believe the height of other peers is already known via gossip, so the catching up peer should not attempt to pull from peers whose height is so far advanced that the private data would be expected to be purged based on BlockToLive of the collection.;;;","25/May/18 4:08 AM;yacovm;{quote}This solution requires the catching up peer to be constantly aware of the latest height (say via orderer).
{quote}
""constantly aware"" - and ""say via orderer"" is easier said than done... ;) 
It's not possible to be constantly aware of a value that constantly changes, on a server that is far away from you, and that server itself, might not even be the latest one, right? If you add a new ordering node, it needs to catch up via pulling messages from kafka, and the node might be down and then brought back again and is catching up from kafka, etc.
Do you suggest the peer polls the orderer every once in a while or something? I don't think that's such a good idea, or is easily done.

I also don't understand why you even need to know the latest height. The solution seems much simpler to me - when you look for peers that might have the data, you also take in account their ledger height. If the BTL policy indicates that the no longer should have the data according to their published height - you skip them.

 
{quote}This solution requires a significant change in the gossip design
{quote}
The gossip private data module has nothing to do with gossip itself... 

 
{quote}In other words, since the catching up peer does not have access to the future configurations, it simply trusts the sending peer refusal code and proceeds but re-evaluates the codes (potentially, in a background thread) when the peer itself learns the fact in the future

the peer needs to record/index these responses by the block number (#50 and #100 in the above example) and when the peer reaches that height, it needs to validate these responses first hand by consulting the locally available configurations.
{quote}
 

so if the peer lied and you missed the private data, you go back to where you were, and then you pull the private data once again, right?
This awfully sound like reconciliation to me. :) 

 
{quote}In my opinion this is a must-fix problem for v1.2
{quote}
I disagree. without state reconciliation, we don't have a full solution any way you look at it. Can't we just not purge private data until v1.3 ? It's only a few months... Plus -  we should be shutting down the critical code paths these days - not extending them.

 
{quote}I believe the height of other peers is already known via gossip, so the catching up peer should not attempt to pull from peers whose height is so far advanced that the private data would be expected to be purged based on BlockToLive of the collection.
{quote}
 

That's exactly the solution I expected to see in the JIRA.;;;","25/May/18 4:28 AM;denyeart;Ok, sounds like [~yacovm] is agreeable to Solution 1, but use the peer's height you are trying to pull from to determine whether to make the pull request or not.

Seems the remaining question is whether the solution can be contained with high quality in v1.2 timeframe.;;;","25/May/18 4:48 AM;C0rWin;{quote}
Solution 1: This solution requires the catching up peer to be constantly aware of the latest height (say via orderer). Before attempting to pull the pvt data, the peer consults the BTL (locally available most recent collection config) and evaluates whether the pvt data is already (logically) expired. If yes, then do not even try to pull this pvt data. However, one of the assumptions for this solution to work is that the changes in the BTL are applicable only on the new data written after the BTL - This assumption hold true for Fabric-1.2, as we don't even allow change in BTL for now.
{quote}

In my opinion *Solution 1* is over complicated and neglects existence of leader election as the leader node maintains connectivity with the ordering service for scalability reasons, so going with *Solution 1* we might end up with all peers going to ordering service to check for most updated ledger height, which IMO will defeat whole point of having scalable dissemination infrastructure.

{quote}
Solution 2: This solution requires a significant change in the gossip design. However, the main benefits of this solution is that this allows a high degree of flexibilities in the configurations going forward. For instance, this does not make any assumptions about the future BTL configurations and hence will allow changing the BTLs retrospectively. Further, the benefits also extends to other configuration such as collection membership. For instance, in fabric 1.2, to overcome the problem of catching up peer due to change in membership, the sending peer evaluates the point in time configuration. This implementation rules out a possibility where a business case demands that the peer should respect the latest collection configuration for distribution as opposed to the historic one.
{quote}

With respect to *Solution 2*, it has a lot in common and reminds me same issues we have to face while solving data reconciliation.

{quote}
In my opinion this is a must-fix problem for v1.2
{quote}

I am failing to see why this is a must fix for v1.2 as we do not have reconciliation for v1.2, this is mostly an optimization problem. At the moment since we allowing peer to continue in absence of private data, it won't get stack, moreover I'd expect BTL to be configured to something which will keep private data for long enough period of time. Hence peer has to be offline for significant amount of time to miss peaces of private data which is purged.

{quote}
Ok, sounds like Yacov Manevich is agreeable to Solution 1, but use the peer's height you are trying to pull from to determine whether to make the pull request or not.
{quote}

Some variation of *Solution 1* sounds to me as a right approach

{quote}
Seems the remaining question is whether the solution can be contained with high quality in v1.2 timeframe.
{quote}

*However*, I think that this should be properly designed as part of data reconciliation process, rather than trying to provide something half backed within very limited time frame.;;;","25/May/18 7:15 AM;C0rWin;Per discussion w/ [~denyeart] [~manish-sethi] and [~yacovm], we decided to address the problem in the following way:

While peer which detects is has missing private data will select peers to pull missing peaces from, it will filter out peers which for sure already purged data that data based on BTL and know ledger height, thus optimizing the retrieval time. 

suggested fix is: https://gerrit.hyperledger.org/r/22319;;;","25/May/18 8:14 AM;mastersingh24;The suggested fix above seems ok, but I'm really not sure why we should be adding more code when we are supposed to be done here.

While the current code might not be optimal for late joining peers, it's an edge case (IMHO) for where people using this will be in terms of deployment.;;;","25/May/18 9:07 AM;denyeart;[~mastersingh24] Without a fix here, it will not be possible for ANY late joining peer to EVER catch up, as the BlockToLive policy would ensure that the peer tries pull private data for EVERY prior transaction until retries are exhausted.  This is not an edge case or optimization, but a fix for the main case for late joining peers.;;;","29/May/18 5:57 AM;C0rWin;https://gerrit.hyperledger.org/r/22319;;;",,,,,,,,,,,,,,,,,,,
Remove logging from Chaincode,FAB-10368,30607,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,swetharepakula,swetharepakula,25/May/18 3:15 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,27/May/18 12:35 AM,,,,,,,,,WON'T FIX,,,,,,,,0,,,,,,,Only logging in the plugin is debug level logs. For the time being we are going to remove the logging.,,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCE-2,,,,,,,,,"1|hzzcdb:",,,,,,,,,,,,,,,,,,,,,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Plugin to use Burrow 0.18.0,FAB-10369,30608,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,swetharepakula,swetharepakula,swetharepakula,25/May/18 3:26 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,25/May/18 7:45 PM,,,,,,,,,,,,,,,,,0,,,,,,,The refactor of the Burrow EVM in the release Burrow 0.18.0. Move to using that release as a dependency instead of develop.,,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCE-2,,,,,,,,,"1|hzzcdj:",,,,,,,,,,,,,,,,,,,,,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/May/18 5:15 AM;swetharepakula;Gerrit change: https://gerrit.hyperledger.org/r/#/c/22307/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Change format for storing ECDSA public key (for revocation) - for compatibility with java,FAB-10370,30610,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mdr,dubovitskaya,dubovitskaya,25/May/18 3:45 AM,21/Jul/18 3:49 AM,28/Oct/23 3:03 AM,31/May/18 9:40 PM,v1.2.0,,,,,,,,,,,fabric-crypto,,,,,0,idemix,,,,,,"We store the revocation key in PEM format, which is simpler for compatibility with the java sdk.",,dubovitskaya,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-10120,,,,,,,,,"1|hzzcdz:",,,,Unset,,,,,,Unset,,,,,,,,,,,dubovitskaya,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/May/18 3:50 AM;mdr;https://gerrit.hyperledger.org/r/#/c/22301/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Remove dead code,FAB-10371,30611,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,25/May/18 3:53 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,25/May/18 11:50 AM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,The copyDir is not being used anywhere in the world package. This function should be removed.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzce7:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/May/18 3:58 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/22303/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Move e2e example to fabric/Integration format,FAB-10374,30615,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,swetharepakula,swetharepakula,swetharepakula,25/May/18 6:07 AM,28/Nov/18 4:06 AM,28/Oct/23 3:03 AM,12/Sep/18 2:10 AM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"Move e2e example into a similar format of the fabric/Integration tests: [https://github.com/hyperledger/fabric/tree/master/integration. |https://github.com/hyperledger/fabric/tree/master/integration]

We will install the EVM as a user chaincode.",,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCE-4,,,No,,,,,,"1|hzzcf3:",,,,,,,,,,,,,,,,Unset,,Integration Test,,,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Sep/18 6:37 AM;swetharepakula;https://gerrit.hyperledger.org/r/26086 [FAB-10374] Add vendor dependencies
https://gerrit.hyperledger.org/r/26087 [FAB-10374] Switch integration tests to use ginkgo
https://gerrit.hyperledger.org/r/26088 [FAB-10374] Remove old e2e docker-compose tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Introduce a port authority and enable parallel integration test execution,FAB-10375,30616,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sykesm,sykesm,25/May/18 6:22 AM,01/May/19 3:41 AM,28/Oct/23 3:03 AM,01/May/19 3:41 AM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,"Parallel integration test execution fails today due to port conflicts. Local processes and port mapping’s should not use hard-coded ports but should reserve a port from a range. Once this is done, we *should* be able to run the tests within a suite in parallel.",,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzcfb:",,,,Unset,,,,,,Unset,,,,,,,,,,,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/May/18 2:30 AM;sykesm;Looks like chaincode names may also cause issues. They're fixed names with fixed versions without a prefix.

Consider naming worlds with a random name and using that as a stem for either cc name or cc version in the test suites.;;;","01/May/19 3:41 AM;mastersingh24;This is done for the most part;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Rename core.yaml fixtures in integration test to match new naming convention,FAB-10376,30617,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,25/May/18 6:32 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,02/Jun/18 9:13 PM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,The current names are org1.example.com_0-core.yaml - they should be peer0.org1.example.com-core.yaml.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcfj:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/May/18 8:04 AM;latitiah;https://gerrit.hyperledger.org/r/22321;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Extract integration test file copy helpers to the helpers package,FAB-10377,30618,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,latitiah,latitiah,25/May/18 6:39 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,01/Jun/18 10:03 PM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,,,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcfr:",,,,,,,,,,,,,,,,,,,,,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/May/18 8:38 AM;sykesm;https://gerrit.hyperledger.org/r/22323;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup the pluggable integration test,FAB-10378,30620,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,sykesm,sykesm,25/May/18 8:32 AM,30/Jul/19 11:59 AM,28/Oct/23 3:03 AM,30/Jul/19 11:59 AM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,"So many minor issues
 * custom build logic
 * compilation in before each instead of before suite
 * valid code in testdata instead of buildable package
 * all copy and paste",,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcg7:",,,,,,,,,,,,,,,,,,,,,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/May/18 8:34 AM;sykesm;and - do we need this *and* e2e? This appears to be a minor superset of e2e. Just seems like too much overlap for too little value.;;;","30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,
create NOTICES file,FAB-10379,30621,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,ChristopherFerris,ChristopherFerris,ChristopherFerris,25/May/18 10:15 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,v1.1.0,,,,,,,,Future,,,fabric-build,,,,,0,stale-item,,,,,,see Sawtooth,,ChristopherFerris,denyeart,sykesm,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9383,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcgf:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,sykesm,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/18 5:04 AM;denyeart;[~ChristopherFerris] What do you want to do with this one?;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Purge orphaned private keys,FAB-10381,30623,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,25/May/18 12:42 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,07/Jun/18 11:19 PM,,,,,,,,,v1.2.0,,,fabric-ledger,,,,,0,,,,,,,"Since, we allow commit with missing pvt data (on the peers that are eligible to receive the pvt data), and the removal of an org from a collection

A following sequence of events is possible on a peer.

(1) The peer receives a pvtKey along with pvtKeyHash in a block

(2) Before the expiry of the keys created in (1), the peer receives another update/delete to the above key but in this update the peer receives only hashed update and the actual pvt key is missing (because of one of the above mentioned configurations)

In the current code, when the expiry schedule created because of (1) is kicked off, a check is performed to detect whether the key is already updated because of (2) and if yes, the expiry schedule acts as noop. However, this decision is taken by comparing  a) 'committing block number' stored in the expiry schedule with b) the most recent commit version of the hashed key.

In the above mentioned scenario, this checks alone is not sufficient and leaves the pvt key create in (1) as an orphaned entry until the key is overwritten in a future event (which may never happen).

While evaluating the effects of the expiry schedule, we need to consider the possibility of the  presence of such orphaned keys and handle accordingly.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcgv:",,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/May/18 3:14 AM;manish-sethi;https://gerrit.hyperledger.org/r/#/c/22337/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Hyperledger Fabric for ARM,FAB-10382,30624,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,SashaPESIC,SashaPESIC,SashaPESIC,25/May/18 5:01 PM,25/May/20 9:50 PM,28/Oct/23 3:03 AM,14/Aug/18 4:25 AM,,,,,,,,,,,,,,,,,0,,,,,,,"Will there be Hyperledger Fabric docker images for ARM architecture available for pulling soon/ever? I am mostly reffering to Raspberry Pi here, but any processing board is an option, of course. 

If someone is interested in doing this, i would gladly help. ",,sang,SashaPESIC,Tecnalia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17929,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzch3:",,,,,,,,,,,,,,,,,,,,,sang,SashaPESIC,Tecnalia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/18 2:48 AM;sang;I am trying to install Fabric on Raspberry Pi 3 B+. I have already had a 64-bit Xubuntu installed on the pi, and have built fabric-baseimage and fabric successfully. I saw the two issues you reported before and that helped a lot. But now I have encountered some other issues, if you could help with them, that would be great:

https://jira.hyperledger.org/browse/FAB-11116

https://jira.hyperledger.org/browse/FAB-11117

 ;;;","23/Jul/18 4:45 PM;SashaPESIC;Hello [~sang],
Sorry for not being able to write sooner - I was on vacation and stuck with pretty bad Internet connection. 

I have assigned all the bugs you reported to me. The easiest way for me to help you is to direct you to my DockerHub profile where all the images are built already for a 64-bit OS. Next you can pull all your images from here: https://hub.docker.com/u/pesicsasa/. Please use the aarch64-1.1.0 tag instead of the latest tag (Except for the couchdb - for the couchdb use latest).

Example pooling with some tagging and removing:

docker pull pesicsasa/fabric-couchdb:latest
docker tag pesicsasa/fabric-couchdb:latest hyperledger/fabric-couchdb:latest
docker rmi pesicsasa/fabric-couchdb:latest

docker pull pesicsasa/fabric-peer:aarch64-1.1.0
docker tag pesicsasa/fabric-peer:aarch64-1.1.0 hyperledger/fabric-peer:latest
docker rmi pesicsasa/fabric-peer:aarch64-1.1.0 

Regarding the OS, I would suggest you to use the OS from this GitHub repository: https://github.com/bamarni/pi64, Lite version. It leaves a minimal RAM/CPU/Storage fingerprint, if you do not mind not having a desktop - which you do not really need for operating docker containers, cloning repositories and running code. 

If you would like I can also take a look at each of he bugs you supplied and help you through solving them - if you want to build the images by yourself. 

Greetings,
SP
;;;","14/Aug/18 4:17 AM;sang;Thank you so much for providing the images! I could help with the support for AARCH64 too. I have already successfully built fabric-baseimage and fabric, but not fabric-ca. If we want to install Fabric on RP3, do we only need to successfully build the three files, or are there other files that we need to build?;;;","14/Aug/18 4:25 AM;SashaPESIC;[~sang] no problem!
Well, that depends what components do you want to run on your RP. If you want ca to run on your RP, you would need to build the fabric-ca image.
So for a fully functioning Hyperledger Fabric node you would have to run a CA, an Orderer, and a Peer. Solo orderer is OK when you test, and leaves a small CPU/RAM footprint, but the Kafka orderer leaves quite big CPU/RAM footprint and that can probably not run on your RP. Also, it depends on what state DB you prefer. Peers come with the Level DB, but if you want to utilize the rich querying that Couch DB brings, you would have to run it as a container as well. We can also discuss this outside JIRA - write me an email to sasha.pesic@vizlore.com.
The issues should anyways be closed. ;;;",,,,,,,,,,,,,,,,,,,,,,,
Add support for new v1.3 version handling in X.509 MSP,FAB-10383,30627,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,mathiasb303,mathiasb303,25/May/18 5:29 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,31/May/18 9:22 PM,,,,,,,,,v1.2.0,,,fabric-crypto,,,,,0,,,,,,,"Add new v1.3 MSP version, for which SatisfiesPrincipal will be enhanced to handle the extended version of MSPPrincipal. Even though this feature is planned for v1.2, it will be hidden behind a v1.3 channel capability, which will not be introduced until v1.3. It will therefore not be possible to create a v1.3 MSP before that, and Anonymous and Combined Principals will not be recognized by v1.2 X.509 MSPs.",,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7614,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-7601,,,,,,,,,"1|hzwqfk:a",,,,Unset,,May2018 - Security,To Do,,,Unset,,,,,,,,,,,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/May/18 5:52 PM;mathiasb303;CR: https://gerrit.hyperledger.org/r/22347;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Publish s390x and ppc64le thirdparty images to nexus3,FAB-10387,30634,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,rameshthoomu,rameshthoomu,25/May/18 11:51 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,05/Jun/18 4:22 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,CI_Release,,,,,,"Publish s390x and ppc64le thirdparty images to nexus3 to support DOCKER_NS while pulling fabric images from nexus3 repository.

The image tag should be

$ARCH-$BASE_IMAGE_RELEASE (ex: s390x-0.4.8)

 ",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10068,,,,,,,,,"1|hzzci7:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jun/18 4:20 AM;rameshthoomu;Publishing images to ppc64le is not required and it's been obsolete from community Jenkins jobs as per Christopher Ferris.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Publish all platform binaries to nexus repository,FAB-10388,30635,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,26/May/18 12:07 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,16/Jun/18 2:55 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,CI_Release,,,,,,"Publish all platforms (s390x, darwin, windows, ppc64le, amd64) binaries to nexus2 repository.

These binaries should be compatible to pull them in all the platforms to test. Publish these images to [https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric-stable/]

Binary tag ex: [hyperledger-fabric-stable-linux-amd64-stable-1905ec5.tar.gz|https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric-stable/linux-amd64-stable-1905ec5/hyperledger-fabric-stable-linux-amd64-stable-1905ec5.tar.gz]",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9641,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10068,,,,,,,,,"1|hzzcif:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jun/18 4:28 AM;rameshthoomu;Similar requirement has been created here FAB-9641;;;","16/Jun/18 2:55 AM;rameshthoomu;Nightly job is now pushing all fabric binaries to nexus2. https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric-stable/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"Publish fabric & fabric-ca images with $ARCH-1.2.0-stable tag from x86_64, s390x to nexus3",FAB-10389,30636,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,26/May/18 12:18 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,16/Jun/18 2:27 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,CI_Release,,,,,,"Publish fabric and fabric-ca images with $ARCH-1.2.0-stable tags from x86_64 and s390x to nexus3 repository. These images should publish as 1.2.0-stable images after successfully execute the below tests.
 # byfn and eyfn tests
 # IntegrationTests

trigger below downstream jobs after execute above tests
 # fabric-test-svt job
 # performance tests
 # Longruns (TODO)",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10068,,,,,,,,,"1|hzzcin:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/18 2:27 AM;rameshthoomu;nightly jobs are available in CI to publish stable images from x86_64 and s390x platforms and trigger the downstream jobs from x86_64 nightly job after successfully executed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
[Pen Test Finding - HSM Signing Key] Required to set CKA_MODIFIABLE as CK_FALSE,FAB-10390,30645,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ashutosh_kumar,rhegde,rhegde,26/May/18 12:48 AM,27/Aug/18 10:02 PM,28/Oct/23 3:03 AM,27/Aug/18 9:49 PM,v1.0.6,,,,,,,,v1.2.1,v1.3.0,,fabric-crypto,,,,,0,,,,,,,"Fabric Release  - v1.0.6

Here is the Pen Test finding on the Key Generated using Fabric CA Client 
{code:java}
The signature key is created with CKA_ MODIFIABLE=TRUE, and the fuzzing results confirm that many of the attributes of private keys can indeed be changed by the C_SetAttribute command. The reason for this is clear from the other traces: once the key has been generated, the C_SetAttribute command is used to change the CKA_ID and CKA_LABEL attributes using data about the value of the public key, so that the key can be easily identified in future.
While this seems reasonable, it should be noted that the CKA_ID and CKA_LABEL attributes could be changed again in the future by an attacker. In particular, if the partition contains more than one key (as was the case with the HSM under test), an attacker could swap the identifiers. Since the C_FindObjects command that is used to identify the key for signature only uses the attributes CKA_ID and CKA_CLASS, just changing the CKA_ID would be enough to switch the key used to produce signatures added to the chain. This could potentially cause serious issues.
{code}
+*Recommendation*+

Fabric CA Client should set the CKA_MODIFIABLE attribute to CK_FALSE after the modifications necessary to CKA_ID and CKA_LABEL have been made.",,ashutosh_kumar,denyeart,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11708,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcpz:",,,,,,,,,,,,,,,,,,,,,ashutosh_kumar,denyeart,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/May/18 4:30 AM;ashutosh_kumar;Can you provide more information ? Are you using Node SDK ?;;;","06/Jun/18 6:18 AM;kchristidis;See: https://jira.hyperledger.org/browse/FAB-10391?focusedCommentId=45551&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-45551;;;","06/Jun/18 11:08 PM;ashutosh_kumar;Recommendation does not seem to be completely right. The change has to be made at server side , not client side.;;;","07/Jun/18 2:42 AM;ashutosh_kumar;The attack scenario described above has very less probability to be exploited. Only user with valid session can change attributes. One can obtain session by providing slot and pin ,which only System Admin has. System Admin malicious activity can be tracked by some other mechanism e.g. SIEM  etc. An application user does not have ability to change attributes.;;;","07/Jun/18 11:30 PM;ashutosh_kumar;The fabric implementation of PKCS11 requires the  CKA_MODIFIABLE attribute to false only after the object has been created. The only way it can be changed is by copying object , which might not work on all HSM implementation. 

Based on above facts , the change will not be pushed and moreover , the vulnerability seems less likely to be exploited.

Closing the issue.;;;","17/Jul/18 11:44 PM;ashutosh_kumar;Some of the HSM manufacturer supports copying of objects and hence this feature will enable HSM user to set CKA_MODIFIABLE to false. Default implementation will not change. [~vpaprots@ca.ibm.com] , what do you think ?

As noted above , the severity of this exploit is low as it can be exploited only by admin user having session with HSM.;;;","18/Jul/18 5:10 AM;ashutosh_kumar;Key Repair will be implemented by setting CKA_MODIFIABLE attribute to false for all Private Keys in the Slot. User, which will be System Admin (preferably) will be provided CLI option to set it up.

For new key generation , user will have CLI option to set CKA_MODIFABLE to false.This will provide remediation for future KEY_WRAP Attack.

Default implementation CKA_MODIFIABLE value is true in current implementation.

 

[~vpaprots@ca.ibm.com] , [~mastersingh24] : Comments please.

 ;;;","03/Aug/18 11:05 PM;ashutosh_kumar;Dependent CR [https://gerrit.hyperledger.org/r/#/c/24877/] is in review. Once this CR is merged , I'll check-in next CR which is last in series.;;;","11/Aug/18 8:24 PM;ashutosh_kumar;CR [https://gerrit.hyperledger.org/r/#/c/25435/] for master - merged;;;","27/Aug/18 10:01 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/25846/ - release-1.2 - merged;;;",,,,,,,,,,,,,,,,,
throw error if chaincode upgrade contains collectionConfigPackge when v12 capability is not enabled,FAB-10392,30649,18804,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,Senthil1,Senthil1,26/May/18 1:47 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,26/May/18 4:26 AM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"Currently, when v12 capability is not enabled, if the chaincode upgrade tx contains collectionConfigPackage, we just ignore the passed collection. Instead, we should throw an error so that user can set necessary capability tags. ",,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcqv:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network Launcher supports Kafka replication setting,FAB-10393,30650,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,nnao,nnao,26/May/18 2:57 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,07/Jun/18 7:57 AM,v1.1.0,,,,,,,,v1.1.0,,,fabric-quality,,,,,0,quality,,,,,,"FAB-4045 PTE test case needs to configure Kafka replication setting as KAFKA_DEFAULT_REPLICATION_FACTOR=5.
But NL uses a number of brokers as replication setting. NL doesn't support to change replication setting. ",,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6742,,,,,,,,,"1|hzzcr3:",,,,Unset,,,,,,Unset,,,,,,,,,,,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"26/May/18 3:20 AM;nnao;https://gerrit.hyperledger.org/r/c/22363/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Unsynchronized access to version cache,FAB-10395,30652,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,26/May/18 3:09 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,26/May/18 5:42 AM,,,,,,,,,v1.2.0,,,fabric-ledger,,,,,0,,,,,,,"Access to version cache needs to be synchronized.

Version cache in couchdb is loaded during the validation for detecting read-write conflicts during commit. However, it gets fall in the call path of simulation as well when detecting the version of the private key with the hashes in order to decide whether the peer hit a scenario of missing pvt key in a transaction in the past",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcrj:",,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/May/18 3:14 AM;manish-sethi;https://gerrit.hyperledger.org/r/#/c/22361/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Move core/chaincode/accesscontrol/ca to core/common,FAB-10396,30653,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,26/May/18 3:21 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,27/May/18 10:36 PM,,,,,,,,,v1.2.0,,,fabric-common,,,,,0,,,,,,,"The discovery service requires clients to be able to generate an ephemeral TLS certificate when they don't have one.

 

To ease the usage of the discovery CLI, we would want to reuse existing code that already does that.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzcrr:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/May/18 4:12 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/22367/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
NL adds mutual TLS option to networkLauncher.sh,FAB-10399,30656,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,26/May/18 4:23 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,29/May/18 11:15 PM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,Network Launcher supports Mutual TLS,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6742,,,,,,,,,"1|hzzcsf:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"26/May/18 4:30 AM;dongming;https://gerrit.hyperledger.org/r/#/c/22369/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix the usage of purgemgr in txmgr,FAB-10403,30661,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,26/May/18 5:59 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,14/Jun/18 10:23 PM,,,,,,,,,v1.2.0,,,fabric-ledger,,,,,0,,,,,,,"- The function that clears off the used purged entries from purge schedule, gets invoked under `defer` statement. These gets executed even if some error happens during applying updates to the statedb. This needs to be moved outside the defer statement.

- Validation logic and purge management logic both uses the version cache. Validation should wait for the purge to finish the background job that was launched after the previous block commit.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzctj:",,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/May/18 6:21 AM;manish-sethi;https://gerrit.hyperledger.org/r/#/c/22381/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
unit test TestManagerImpl and TestNewChain DATA RACE,FAB-10406,30665,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid: Works as Expected,,snlan,snlan,26/May/18 3:20 PM,01/Nov/18 3:00 AM,28/Oct/23 3:03 AM,01/Nov/18 3:00 AM,v1.1.0,,,,,,,,v1.4.0,,,fabric-orderer,,,,,0,unit-test,,,,,,"== RUN   TestManagerImpl
2018-05-26 14:28:32.154 CST [orderer/commmon/multichannel] newBlockWriter -> DEBU 059 [channel: testchainid] Creating block writer for tip of chain (blockNumber=0, lastConfigBlockNum=0, lastConfigSeq=0)
2018-05-26 14:28:32.155 CST [orderer/commmon/multichannel] newChainSupport -> DEBU 05a [channel: testchainid] Done creating channel support resources
2018-05-26 14:28:32.155 CST [bccsp] GetDefault -> WARN 05b Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
2018-05-26 14:28:32.155 CST [orderer/commmon/multichannel] NewRegistrar -> INFO 05c Starting system channel 'testchainid' with genesis block hash 03d033ad0cdd89c9355b569734b68204508d9e829f989fbcca5e1d2ebddeda1a and orderer type solo
2018-05-26 14:28:32.229 CST [bccsp] GetDefault -> WARN 05d Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
2018-05-26 14:28:32.229 CST [bccsp] GetDefault -> WARN 05e Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
2018-05-26 14:28:32.229 CST [orderer/commmon/multichannel] addLastConfigSignature -> DEBU 05f [channel: testchainid] About to write block, setting its LAST_CONFIG to 0
2018-05-26 14:28:32.230 CST [bccsp] GetDefault -> WARN 060 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
==================
WARNING: DATA RACE
Write at 0x00c420151eb8 by goroutine 31:
  github.com/hyperledger/fabric/common/ledger/blockledger/ram.(*ramLedger).appendBlock()
      /gopath/src/github.com/hyperledger/fabric/common/ledger/blockledger/ram/impl.go:170 +0x2ea
  github.com/hyperledger/fabric/common/ledger/blockledger/ram.(*ramLedger).Append()
      /gopath/src/github.com/hyperledger/fabric/common/ledger/blockledger/ram/impl.go:158 +0x18a
  github.com/hyperledger/fabric/orderer/common/multichannel.(*ChainSupport).Append()
      <autogenerated>:1 +0x82
  github.com/hyperledger/fabric/orderer/common/multichannel.(*BlockWriter).commitBlock()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/blockwriter.go:169 +0xf6
  github.com/hyperledger/fabric/orderer/common/multichannel.(*BlockWriter).WriteBlock.func1()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/blockwriter.go:155 +0x86

Previous read at 0x00c420151eb8 by goroutine 28:
  github.com/hyperledger/fabric/common/ledger/blockledger/ram.(*ramLedger).Iterator()
      /gopath/src/github.com/hyperledger/fabric/common/ledger/blockledger/ram/impl.go:103 +0xd22
  github.com/hyperledger/fabric/orderer/common/multichannel.TestManagerImpl()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar_test.go:158 +0x6fa
  testing.tRunner()
      /usr/local/go/src/testing/testing.go:777 +0x16d

Goroutine 31 (running) created at:
  github.com/hyperledger/fabric/orderer/common/multichannel.(*BlockWriter).WriteBlock()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/blockwriter.go:153 +0xac
  github.com/hyperledger/fabric/orderer/common/multichannel.(*ChainSupport).WriteBlock()
      <autogenerated>:1 +0x83
  github.com/hyperledger/fabric/orderer/common/multichannel.(*mockChain).Start.func1()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/util_test.go:95 +0x7ff

Goroutine 28 (running) created at:
  testing.(*T).Run()
      /usr/local/go/src/testing/testing.go:824 +0x564
  testing.runTests.func1()
      /usr/local/go/src/testing/testing.go:1063 +0xa4
  testing.tRunner()
      /usr/local/go/src/testing/testing.go:777 +0x16d
  testing.runTests()
      /usr/local/go/src/testing/testing.go:1061 +0x4e1
  testing.(*M).Run()
      /usr/local/go/src/testing/testing.go:978 +0x2cd
  main.main()
      _testmain.go:64 +0x22a
==================
2018-05-26 14:28:32.230 CST [orderer/commmon/multichannel] commitBlock -> DEBU 061 [channel: testchainid] Wrote block 1
--- FAIL: TestManagerImpl (0.08s)
    testing.go:730: race detected during execution of test

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

=== RUN   TestNewChain
2018-05-26 14:28:32.233 CST [orderer/commmon/multichannel] newBlockWriter -> DEBU 062 [channel: testchainid] Creating block writer for tip of chain (blockNumber=0, lastConfigBlockNum=0, lastConfigSeq=0)
2018-05-26 14:28:32.233 CST [orderer/commmon/multichannel] newChainSupport -> DEBU 063 [channel: testchainid] Done creating channel support resources
2018-05-26 14:28:32.234 CST [bccsp] GetDefault -> WARN 064 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
2018-05-26 14:28:32.234 CST [orderer/commmon/multichannel] NewRegistrar -> INFO 065 Starting system channel 'testchainid' with genesis block hash 03d033ad0cdd89c9355b569734b68204508d9e829f989fbcca5e1d2ebddeda1a and orderer type solo
2018-05-26 14:28:32.772 CST [bccsp] GetDefault -> WARN 066 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
2018-05-26 14:28:32.773 CST [bccsp] GetDefault -> WARN 067 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
2018-05-26 14:28:32.775 CST [bccsp] GetDefault -> WARN 068 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
2018-05-26 14:28:32.776 CST [orderer/commmon/multichannel] newBlockWriter -> DEBU 069 [channel: test-new-chain] Creating block writer for tip of chain (blockNumber=0, lastConfigBlockNum=0, lastConfigSeq=1)
2018-05-26 14:28:32.776 CST [orderer/commmon/multichannel] newChainSupport -> DEBU 06a [channel: test-new-chain] Done creating channel support resources
2018-05-26 14:28:32.776 CST [orderer/commmon/multichannel] newChain -> INFO 06b Created and starting new chain test-new-chain
2018-05-26 14:28:32.777 CST [orderer/commmon/multichannel] addLastConfigSignature -> DEBU 06c [channel: testchainid] About to write block, setting its LAST_CONFIG to 0
2018-05-26 14:28:32.777 CST [bccsp] GetDefault -> WARN 06d Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
==================
WARNING: DATA RACE
Write at 0x00c420312058 by goroutine 35:
  github.com/hyperledger/fabric/common/ledger/blockledger/ram.(*ramLedger).appendBlock()
      /gopath/src/github.com/hyperledger/fabric/common/ledger/blockledger/ram/impl.go:170 +0x2ea
  github.com/hyperledger/fabric/common/ledger/blockledger/ram.(*ramLedger).Append()
      /gopath/src/github.com/hyperledger/fabric/common/ledger/blockledger/ram/impl.go:158 +0x18a
  github.com/hyperledger/fabric/orderer/common/multichannel.(*ChainSupport).Append()
      <autogenerated>:1 +0x82
  github.com/hyperledger/fabric/orderer/common/multichannel.(*BlockWriter).commitBlock()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/blockwriter.go:169 +0xf6
  github.com/hyperledger/fabric/orderer/common/multichannel.(*BlockWriter).WriteBlock.func1()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/blockwriter.go:155 +0x86

Previous read at 0x00c420312058 by goroutine 32:
  github.com/hyperledger/fabric/common/ledger/blockledger/ram.(*ramLedger).Iterator()
      /gopath/src/github.com/hyperledger/fabric/common/ledger/blockledger/ram/impl.go:103 +0xd22
  github.com/hyperledger/fabric/orderer/common/multichannel.TestNewChain.func1()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar_test.go:206 +0x13b
  github.com/hyperledger/fabric/orderer/common/multichannel.TestNewChain()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar_test.go:222 +0x9b6
  testing.tRunner()
      /usr/local/go/src/testing/testing.go:777 +0x16d

Goroutine 35 (running) created at:
  github.com/hyperledger/fabric/orderer/common/multichannel.(*BlockWriter).WriteBlock()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/blockwriter.go:153 +0xac
  github.com/hyperledger/fabric/orderer/common/multichannel.(*BlockWriter).WriteConfigBlock()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/blockwriter.go:140 +0x528
  github.com/hyperledger/fabric/orderer/common/multichannel.(*ChainSupport).WriteConfigBlock()
      <autogenerated>:1 +0x83
  github.com/hyperledger/fabric/orderer/common/multichannel.(*mockChain).Start.func1()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/util_test.go:90 +0x4a7

Goroutine 32 (running) created at:
  testing.(*T).Run()
      /usr/local/go/src/testing/testing.go:824 +0x564
  testing.runTests.func1()
      /usr/local/go/src/testing/testing.go:1063 +0xa4
  testing.tRunner()
      /usr/local/go/src/testing/testing.go:777 +0x16d
  testing.runTests()
      /usr/local/go/src/testing/testing.go:1061 +0x4e1
  testing.(*M).Run()
      /usr/local/go/src/testing/testing.go:978 +0x2cd
  main.main()
      _testmain.go:64 +0x22a
==================
2018-05-26 14:28:32.777 CST [orderer/commmon/multichannel] commitBlock -> DEBU 06e [channel: testchainid] Wrote block 1
2018-05-26 14:28:32.814 CST [bccsp] GetDefault -> WARN 06f Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
2018-05-26 14:28:32.816 CST [bccsp] GetDefault -> WARN 070 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
2018-05-26 14:28:32.816 CST [orderer/commmon/multichannel] addLastConfigSignature -> DEBU 071 [channel: test-new-chain] About to write block, setting its LAST_CONFIG to 0
2018-05-26 14:28:32.817 CST [bccsp] GetDefault -> WARN 072 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
==================
WARNING: DATA RACE
Write at 0x00c4203b26d8 by goroutine 36:
  github.com/hyperledger/fabric/common/ledger/blockledger/ram.(*ramLedger).appendBlock()
      /gopath/src/github.com/hyperledger/fabric/common/ledger/blockledger/ram/impl.go:170 +0x2ea
  github.com/hyperledger/fabric/common/ledger/blockledger/ram.(*ramLedger).Append()
      /gopath/src/github.com/hyperledger/fabric/common/ledger/blockledger/ram/impl.go:158 +0x18a
  github.com/hyperledger/fabric/orderer/common/multichannel.(*ChainSupport).Append()
      <autogenerated>:1 +0x82
  github.com/hyperledger/fabric/orderer/common/multichannel.(*BlockWriter).commitBlock()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/blockwriter.go:169 +0xf6
  github.com/hyperledger/fabric/orderer/common/multichannel.(*BlockWriter).WriteBlock.func1()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/blockwriter.go:155 +0x86

Previous read at 0x00c4203b26d8 by goroutine 32:
  [failed to restore the stack]

Goroutine 36 (running) created at:
  github.com/hyperledger/fabric/orderer/common/multichannel.(*BlockWriter).WriteBlock()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/blockwriter.go:153 +0xac
  github.com/hyperledger/fabric/orderer/common/multichannel.(*ChainSupport).WriteBlock()
      <autogenerated>:1 +0x83
  github.com/hyperledger/fabric/orderer/common/multichannel.(*mockChain).Start.func1()
      /gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/util_test.go:95 +0x7ff

Goroutine 32 (running) created at:
  testing.(*T).Run()
      /usr/local/go/src/testing/testing.go:824 +0x564
  testing.runTests.func1()
      /usr/local/go/src/testing/testing.go:1063 +0xa4
  testing.tRunner()
      /usr/local/go/src/testing/testing.go:777 +0x16d
  testing.runTests()
      /usr/local/go/src/testing/testing.go:1061 +0x4e1
  testing.(*M).Run()
      /usr/local/go/src/testing/testing.go:978 +0x2cd
  main.main()
      _testmain.go:64 +0x22a
==================
2018-05-26 14:28:32.817 CST [orderer/commmon/multichannel] commitBlock -> DEBU 073 [channel: test-new-chain] Wrote block 1
2018-05-26 14:28:32.818 CST [orderer/commmon/multichannel] newBlockWriter -> DEBU 074 [channel: test-new-chain] Creating block writer for tip of chain (blockNumber=1, lastConfigBlockNum=0, lastConfigSeq=1)
2018-05-26 14:28:32.819 CST [orderer/commmon/multichannel] newChainSupport -> DEBU 075 [channel: test-new-chain] Done creating channel support resources
--- FAIL: TestNewChain (0.59s)
    testing.go:730: race detected during execution of test","root@ubuntu:~# lsb_release -a
No LSB modules are available.
Distributor ID:    Ubuntu
Description:    Ubuntu 18.04 LTS
Release:    18.04
Codename:    bionic
root@ubuntu:~# go version
go version go1.10.2 linux/amd64
root@ubuntu:~# go env
GOARCH=""amd64""
GOBIN=""""
GOCACHE=""/root/.cache/go-build""
GOEXE=""""
GOHOSTARCH=""amd64""
GOHOSTOS=""linux""
GOOS=""linux""
GOPATH=""/gopath""
GORACE=""""
GOROOT=""/usr/local/go""
GOTMPDIR=""""
GOTOOLDIR=""/usr/local/go/pkg/tool/linux_amd64""
GCCGO=""gccgo""
CC=""gcc""
CXX=""g++""
CGO_ENABLED=""1""
CGO_CFLAGS=""-g -O2""
CGO_CPPFLAGS=""""
CGO_CXXFLAGS=""-g -O2""
CGO_FFLAGS=""-g -O2""
CGO_LDFLAGS=""-g -O2""
PKG_CONFIG=""pkg-config""
GOGCCFLAGS=""-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build222887490=/tmp/go-build -gno-record-gcc-switches""",denyeart,kchristidis,snlan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,43200,43200,,0%,43200,43200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcu7:",,,,,,,,,,,,,,,,,,,,,denyeart,kchristidis,snlan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jul/18 3:00 AM;kchristidis;[~snlan] Are you working on a fix?;;;","21/Aug/18 8:17 PM;denyeart;[~snlan] [~kchristidis] [~jyellick] Is there a plan for this one?;;;","01/Nov/18 3:00 AM;kchristidis;Checked against the latest {{master}} ({{14ed10a7e}} — this is no longer an issue. I suspect this is taken care of by the relevant cleaning up that Matt did.

Closing this; if I'm wrong, please re-open.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Fix deploy/upgrade error message in vscc,FAB-10407,30666,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,bjzhang03,Senthil1,Senthil1,26/May/18 8:04 PM,29/Nov/18 11:21 AM,28/Oct/23 3:03 AM,29/Nov/18 11:21 AM,,,,,,,,,Future,,,fabric-peer,,,,,0,,,,,,,"Currently, during chaincode deploy or upgrade, when more than the required number of entries present in the lscc write set, vscc throws an error like _LSCC can only issue a single putState upon deploy/upgrade_ We need to differentiate the error message by specifically mentioning either _deploy_ or _upgrade_ but not both",,bjzhang03,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12618,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcuf:",,,,,,,,,,,,,,,,,,,,,bjzhang03,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Nov/18 11:21 AM;bjzhang03;I click it wrong.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Private data pull delays for 1 second before pulling,FAB-10408,30667,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,denyeart,denyeart,26/May/18 8:36 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,27/May/18 9:59 PM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,"At commit time if peer doesn't have private data for a transaction in local transient store, peer will attempt to pull private data from another peer in the network.

There appears to be an unnecessary 1 second delay between the time the peer detects that it needs to pull, and the time that it actually pulls.  This is demonstrated in the below trace from the org2 pulling peer, using the sample chaincode and config found in FAB-10231 (org2 has access to one collection but not the other).
{code:java}
2018-05-26 11:16:41.344 UTC [gossip/privdata] StoreBlock -> INFO a1c Received block [3]
2018-05-26 11:16:41.344 UTC [gossip/privdata] StoreBlock -> DEBU a1d Validating block [3]
2018-05-26 11:16:41.349 UTC [stateleveldb] GetState -> DEBU a3c GetState(). ns=lscc, key=marblesp~collection
2018-05-26 11:16:41.350 UTC [gossip/privdata] isEligible -> DEBU a3e Skipping namespace marblesp collection collectionMarblePrivateDetails because we're not eligible for the private data
2018-05-26 11:16:41.350 UTC [gossip/privdata] inspectTransaction -> DEBU a3f Peer is not eligible for collection, channel [mychannel], chaincode [marblesp], collection name [collectionMarblePrivateDetails], txID [4293a3832d6d4ea8eede55951bfb85d7328eda89d5657642af81540a1a989260] the policy is [&privdata.SimpleCollection{name:""collectionMarblePrivateDetails"", accessPolicy:(*cauthdsl.policy)(0xc422f78a00), memberOrgs:[]string{""Org1MSP""}, conf:common.StaticCollectionConfig{Name:""collectionMarblePrivateDetails"", MemberOrgsPolicy:(*common.CollectionPolicyConfig)(0xc422afbb30), RequiredPeerCount:0, MaximumPeerCount:0, BlockToLive:0x3}}]. Skipping.
2018-05-26 11:16:41.350 UTC [stateleveldb] GetState -> DEBU a41 GetState(). ns=lscc, key=marblesp~collection
2018-05-26 11:16:41.350 UTC [gossip/privdata] listMissingPrivateData -> DEBU a43 Retrieving private write sets for 1 transactions from transient store
2018-05-26 11:16:41.350 UTC [transientstore] GetTxPvtRWSetByTxid -> DEBU a44 Getting private data from transient store for transaction 4293a3832d6d4ea8eede55951bfb85d7328eda89d5657642af81540a1a989260
2018-05-26 11:16:41.351 UTC [gossip/privdata] StoreBlock -> DEBU a46 Could not find all collection private write sets in local peer transient store.
2018-05-26 11:16:41.351 UTC [gossip/privdata] StoreBlock -> DEBU a47 Fetching 1 collection private write sets from remote peers for a maximum duration of 1m0s
2018-05-26 11:16:41.351 UTC [gossip/privdata] func1 -> DEBU a48 Fetching {4293a3832d6d4ea8eede55951bfb85d7328eda89d5657642af81540a1a989260 0 marblesp collectionMarbles 6c6c363ba4824671dbb0f7ed703367a7c6d04733bb0e7b5c5ad4aa60bbbcac70} from peers
2018-05-26 11:16:41.351 UTC [stateleveldb] GetState -> DEBU a4a GetState(). ns=lscc, key=marblesp~collection{code}
1 second gap in debug...
{code:java}
2018-05-26 11:16:42.352 UTC [gossip/privdata] fetch -> DEBU a8d Total members in channel: [{peer0.org1.example.com:7051 [] [229 244 44 51 127 183 98 146 95 185 26 198 234 23 94 76 87 2 58 150 246 3 184 227 39 250 88 93 132 119 99 72]  ledger_height:3 chaincodes:<name:""marblesp"" version:""1.0"" >  payload:""\030\005zo\022\024\010\200\322\363\223\342\263\213\231\025\020\300\256\256\303\223\264\213\231\025\032 \345\364,3\177\267b\222_\271\032\306\352\027^LW\002:\226\366\003\270\343'\372X]\204wcH\"" $=i\306\226\200\020\r$\260\215F\000nb\334z\236\205\206\364\277\340u\363*$M0\231\021:*\023\010\003\032\017\n\010marblesp\022\0031.0"" signature:""0E\002!\000\304\004\323\274\234\2766\224?.\246\1775\030\233q\321\330\317\202\343\024\344\023-4wL\322\267\200r\002 Mi\013\273/\316P\275\355U\357G!\361\027\332\203\251\256\343}\235;\333\200[8\034\275Ku)"" }]
2018-05-26 11:16:42.352 UTC [gossip/privdata] fetch -> DEBU a8e Total members that fit some digest: [{peer0.org1.example.com:7051 [] [229 244 44 51 127 183 98 146 95 185 26 198 234 23 94 76 87 2 58 150 246 3 184 227 39 250 88 93 132 119 99 72]  ledger_height:3 chaincodes:<name:""marblesp"" version:""1.0"" >  payload:""\030\005zo\022\024\010\200\322\363\223\342\263\213\231\025\020\300\256\256\303\223\264\213\231\025\032 \345\364,3\177\267b\222_\271\032\306\352\027^LW\002:\226\366\003\270\343'\372X]\204wcH\"" $=i\306\226\200\020\r$\260\215F\000nb\334z\236\205\206\364\277\340u\363*$M0\231\021:*\023\010\003\032\017\n\010marblesp\022\0031.0"" signature:""0E\002!\000\304\004\323\274\234\2766\224?.\246\1775\030\233q\321\330\317\202\343\024\344\023-4wL\322\267\200r\002 Mi\013\273/\316P\275\355U\357G!\361\027\332\203\251\256\343}\235;\333\200[8\034\275Ku)"" }]
2018-05-26 11:16:42.353 UTC [gossip/privdata] assignDigestsToPeers -> DEBU a8f Matching [{peer0.org1.example.com:7051 [] [229 244 44 51 127 183 98 146 95 185 26 198 234 23 94 76 87 2 58 150 246 3 184 227 39 250 88 93 132 119 99 72]  ledger_height:3 chaincodes:<name:""marblesp"" version:""1.0"" >  payload:""\030\005zo\022\024\010\200\322\363\223\342\263\213\231\025\020\300\256\256\303\223\264\213\231\025\032 \345\364,3\177\267b\222_\271\032\306\352\027^LW\002:\226\366\003\270\343'\372X]\204wcH\"" $=i\306\226\200\020\r$\260\215F\000nb\334z\236\205\206\364\277\340u\363*$M0\231\021:*\023\010\003\032\017\n\010marblesp\022\0031.0"" signature:""0E\002!\000\304\004\323\274\234\2766\224?.\246\1775\030\233q\321\330\317\202\343\024\344\023-4wL\322\267\200r\002 Mi\013\273/\316P\275\355U\357G!\361\027\332\203\251\256\343}\235;\333\200[8\034\275Ku)"" }] to {collectionMarbles: [4293a3832d6d4ea8eede55951bfb85d7328eda89d5657642af81540a1a989260]}
2018-05-26 11:16:42.353 UTC [gossip/privdata] fetch -> DEBU a90 Matched 1 digests to 1 peer(s)
2018-05-26 11:16:42.353 UTC [gossip/privdata] scatterRequests -> DEBU a91 Sending peer0.org1.example.com:7051 request [tx_id:""4293a3832d6d4ea8eede55951bfb85d7328eda89d5657642af81540a1a989260"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:3 ]
2018-05-26 11:16:42.353 UTC [gossip/comm] Send -> DEBU a92 Entering, sending GossipMessage: nonce:6783268945934398498 channel:""mychannel"" tag:CHAN_ONLY privateReq:<digests:<tx_id:""4293a3832d6d4ea8eede55951bfb85d7328eda89d5657642af81540a1a989260"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:3 > > , Envelope: 125 bytes, Signature: 0 bytes to  1 peers
2018-05-26 11:16:42.354 UTC [gossip/comm] sendToEndpoint -> DEBU a93 Entering, Sending to peer0.org1.example.com:7051 , msg: GossipMessage: nonce:6783268945934398498 channel:""mychannel"" tag:CHAN_ONLY privateReq:<digests:<tx_id:""4293a3832d6d4ea8eede55951bfb85d7328eda89d5657642af81540a1a989260"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:3 > > , Envelope: 125 bytes, Signature: 0 bytes
2018-05-26 11:16:42.357 UTC [gossip/comm] func1 -> DEBU a95 Got message: GossipMessage: Channel: mychannel, nonce: 6783268945934398498, tag: CHAN_ONLY [tx_id:""4293a3832d6d4ea8eede55951bfb85d7328eda89d5657642af81540a1a989260"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:3  with 1 elements], Envelope: 252 bytes, Signature: 0 bytes
2018-05-26 11:16:42.357 UTC [gossip/privdata] handleResponse -> DEBU a96 Got elements:<digest:<tx_id:""4293a3832d6d4ea8eede55951bfb85d7328eda89d5657642af81540a1a989260"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:3 > payload:""\032\036\n\031\000color~name\000blue\000marble1\000\032\001\000\032W\n\007marble1\032L{\""docType\"":\""marble\"",\""name\"":\""marble1\"",\""color\"":\""blue\"",\""size\"":35,\""owner\"":\""tom\""}"" >  from 172.18.0.2:7051
2018-05-26 11:16:42.358 UTC [gossip/privdata] fetch -> DEBU a97 Got empty response for tx_id:""4293a3832d6d4ea8eede55951bfb85d7328eda89d5657642af81540a1a989260"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:3 
2018-05-26 11:16:42.358 UTC [transientstore] Persist -> DEBU a98 Persisting private data to transient store for txid = 4293a3832d6d4ea8eede55951bfb85d7328eda89d5657642af81540a1a989260
2018-05-26 11:16:42.361 UTC [gossip/privdata] fetchFromPeers -> DEBU a99 Fetched {4293a3832d6d4ea8eede55951bfb85d7328eda89d5657642af81540a1a989260 0 marblesp collectionMarbles 6c6c363ba4824671dbb0f7ed703367a7c6d04733bb0e7b5c5ad4aa60bbbcac70}
2018-05-26 11:16:43.362 UTC [gossip/privdata] StoreBlock -> DEBU ad6 Fetched all missing collection private write sets from remote peers
2018-05-26 11:16:43.362 UTC [gossip/privdata] StoreBlock -> DEBU ad7 Added 1 namespace private write sets for block [3], tran [0]{code}",,C0rWin,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzzcun:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,C0rWin,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/May/18 5:56 AM;C0rWin;The problem appear to be with following function in [pull.go|https://github.com/hyperledger/fabric/blob/release-1.1/gossip/privdata/pull.go#L192]

{code}
func (p *puller) waitForMembership() []discovery.NetworkMember {
	polIteration := 0
	var members []discovery.NetworkMember
	for len(members) == 0 {
		members = p.PeersOfChannel(common.ChainID(p.channel))
		polIteration++
		if polIteration == maxMembershipPollIterations {
			return nil
		}
		time.Sleep(membershipPollingBackoff)
	}
	return members
}
{code}

which leads to unnecessary sleep. Will provide fix shortly.;;;","27/May/18 8:32 PM;C0rWin;https://gerrit.hyperledger.org/r/22413 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Fix cryptogen to report error when it render orderer config failed ,FAB-10409,30668,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,haibbo,haibbo,haibbo,26/May/18 11:45 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,28/May/18 3:41 AM,,,,,,,,,,,,fabric-tools,,,,,0,,,,,,,"Two mistakes in cryptogen

Did not take the return value of renderOrgSpec(&orgSpec, ""orderer"")",,haibbo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcuv:",,,,,,,,,,,,,,,,,,,,,haibbo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/May/18 12:01 AM;haibbo;change-set: https://gerrit.hyperledger.org/r/#/c/22403/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Doc: move the order/README.md to the docs folder,FAB-10412,30673,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,huikang,huikang,huikang,27/May/18 1:33 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,fabric-docs,,,,,0,Documentation,stale-item,,,,,"1. The order/README.md needs to be placed under the main doc folder
2. Fix broken links",,huikang,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzcvz:",,,,Unset,,,,,,Unset,,,,,,,,,,,huikang,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/May/18 10:22 PM;huikang;https://gerrit.hyperledger.org/r/#/c/22491/;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
test,FAB-10413,30674,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,baohua,baohua,27/May/18 2:14 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:05 PM,,,,,,,,,,,,,,,,,0,,,,,,,"reason

details

changes

known issue",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzcw7:",,,,,,,,,,,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update tests in delivery service package.,FAB-10414,30675,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,gennadyl,gennadyl,28/May/18 12:33 AM,23/Jan/19 10:34 AM,28/Oct/23 3:03 AM,23/Jan/19 10:34 AM,,,,,,,,,,,,,,,,,0,,,,,,,"Part of test in delivery service package (deliverclient_test.go) test connectivity between deliver client and orderer. Those tests include connect/disconnect/reconnect of network between deliverer and orderer(s) and include significant amount of sleeps to make network status change discoverable by deliverer. 

Those tests should be moved to integration tests. ",,denyeart,gennadyl,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzcwf:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,gennadyl,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/May/18 3:38 AM;yacovm;The runtimes of the tests are below:

 
{code:java}
--- PASS: TestOrderingServiceConnFailure (0.00s)
--- PASS: TestOrderingServiceStreamFailure (0.00s)
--- PASS: TestOrderingServiceSetupFailure (0.00s)
--- PASS: TestOrderingServiceFirstOperationFailure (0.00s)
--- PASS: TestOrderingServiceCrashAndRecover (0.00s)
--- PASS: TestOrderingServicePermanentCrash (0.00s)
--- PASS: TestLimitedConnAttempts (0.00s)
--- PASS: TestLimitedTotalConnTimeRcv (5.51s)
--- PASS: TestLimitedTotalConnTimeSnd (5.50s)
--- PASS: TestGreenPath (0.00s)
--- PASS: TestCloseWhileRecv (2.01s)
--- PASS: TestCloseWhileSleep (2.02s)
--- PASS: TestProductionUsage (0.50s)
--- PASS: TestDisconnect (1.60s)
--- PASS: TestDisconnectAndDisableEndpoint (0.54s)
--- PASS: TestNewDeliverService (2.01s)
--- PASS: TestDeliverServiceRestart (5.17s)
--- PASS: TestDeliverServiceFailover (12.51s)
--- PASS: TestDeliverServiceUpdateEndpoints (2.50s)
--- PASS: TestDeliverServiceServiceUnavailable (2.60s)
--- PASS: TestDeliverServiceAbruptStop (0.50s)
--- PASS: TestDeliverServiceShutdown (4.50s)
--- PASS: TestDeliverServiceShutdownRespawn (7.50s)
--- PASS: TestDeliverServiceBadConfig (0.00s)
--- PASS: TestRetryPolicyOverflow (0.00s)
--- PASS: TestTLSBinding (3.51s)
{code}

I'm sure we can shave time from *TestDeliverServiceFailover (12.51s)* if we really want to...  most of the tests either run a negligible amount of time, or they just test corner cases that are impossible / very hard to test with a ginkgo-style integration test. ;;;","23/Jan/19 10:34 AM;denyeart;[~yacovm] [~C0rWin] Based on Yacov's comment, I've closed as Won't Do.  If you disagree, please reopen.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
[Build] - Update Makefile to build images with custom docker repo urls for DOCKER_NS,FAB-10415,30676,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,28/May/18 10:16 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,29/May/18 11:06 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-build,,,,,0,fabric-build,,,,,,"[Build] - Update Makefile to build images with custom docker repo urls for DOCKER_NS (Docker NameSpace)

Existing Makefile sed commands are incompatible when passing DOCKER_NS and BASE_DOCKER_NS while building images.

If the DOCKER_NS pass with the repo url's with forward slashes (/) then it would need a escape character (\) to build an image.

ex:

DOCKER_NS='nexus3.hyperledger.org:10001\/hyperledger' BASE_DOCKER_NS='nexus3.hyperledger.org:10001\/hyperledger' make docker

above command will work as expected with the existing Makefile but the DOCKER_NS is set with escape character (\). In result, the chaincode instantiation will fail as it won't find an ccenv image with this DOCKER_NS.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9641,,,,,,,,,"1|hzzcwn:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/May/18 12:39 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/22419/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Check go version before building native binaries,FAB-10416,30677,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,niuzhenguo,niuzhenguo,niuzhenguo,28/May/18 11:11 AM,11/Mar/19 10:26 PM,28/Oct/23 3:03 AM,11/Mar/19 6:57 AM,,,,,,,,,,,,,,,,,0,,,,,,,"Add a script to check the Go version before building native binaries peer, orderer, configtxgen, cryptogen, and configtxlator. This is helpful to users just starting off with the project.

This gives a nice error message rather than just failing to compile.

$ make

ERROR: fabric requires Go version 1.10+. Please update your Go installation:

[https://golang.org/dl/]",,niuzhenguo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-14582,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzcwv:",,,,Unset,,,,,,Unset,,,,,,,,,,,niuzhenguo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/May/18 3:08 PM;niuzhenguo;https://gerrit.hyperledger.org/r/#/c/22423/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Should print UNKNOWN peer node status when obtaining default singer error ,FAB-10420,30683,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,niuzhenguo,niuzhenguo,niuzhenguo,28/May/18 8:25 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,18/Jun/18 11:09 PM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"In peer node status command, we handle all errors with UNKNOWN status except obtaining default singer error. It should keep consistent.",,denyeart,niuzhenguo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd27:",,,,,,,,,,,,,,,,,,,,,denyeart,niuzhenguo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/May/18 10:24 AM;niuzhenguo;https://gerrit.hyperledger.org/r/#/c/22429/;;;","18/Jun/18 9:12 PM;denyeart;Looks good, although we missed the cut-off for v1.2, deferring to v1.3.;;;","18/Jun/18 11:09 PM;denyeart;Ok, we were able to merge for v1.2 after all.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Efficient documentation about how to contribute code to fabric,FAB-10423,30691,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,haibbo,haibbo,haibbo,28/May/18 11:51 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,,,,,,0,stale-item,,,,,,"For a new contributor, fabric's contribution guide is too complex. 

How about adding a efficient one which like cello's, and in the end of guilde, we can tell reader refer to original contribution guide for details . 

[https://github.com/hyperledger/cello/blob/master/docs/CONTRIBUTING.md]  

What do you think? Is it necessary?

[~ChristopherFerris] [~yacovm] [~mastersingh24]",,haibbo,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzd2n:",,,,Unset,,,,,,Unset,,,,,,,,,,,haibbo,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
The Behave feature tests are failing in the fabric-smoke-test-daily as a chaincode container fails.,FAB-10424,30692,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,latitiah,sambhavdutt,sambhavdutt,29/May/18 3:03 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,01/Jun/18 4:27 AM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,ci-failure,,,,,,"The smoke tests have failed in the last build as the chaincode container peer0.org1.example.com-mycc-0 is not running,

*fabric-test Commit: ef3cfae*

{code:java}
01:33:38 ========== Behave feature and system tests...
01:33:40 Feature: Bootstrapping Hyperledger Fabric # bootstrap.feature:7
01:33:40   As a user I want to be able to bootstrap my fabric network
01:33:40   @smoke
01:33:40   Scenario: Access to the fabric protobuf files                    # bootstrap.feature:66
01:33:40     Given I test the access to the generated python protobuf files # steps/orderer_impl.py:26
01:33:40     Then there are no errors                                       # steps/basic_impl.py:395
01:33:40 
01:33:40   @smoke
01:33:40   Scenario: Basic operations to create a useful blockchain network  # bootstrap.feature:71
01:33:40     Given I have a bootstrapped fabric network                      # steps/basic_impl.py:178
.
.
01:33:55 2018-05-28 05:33:55.387 UTC [common/tools/configtxgen] main -> WARN 001 Omitting the channel ID for configtxgen is deprecated.  Explicitly passing the channel ID will be required in the future, defaulting to 'testchainid'.
01:33:55 2018-05-28 05:33:55.387 UTC [common/tools/configtxgen] main -> INFO 002 Loading configuration
01:33:55 2018-05-28 05:33:55.427 UTC [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 003 Generating new channel configtx
01:33:55 2018-05-28 05:33:55.427 UTC [common/tools/configtxgen/encoder] NewApplicationGroup -> WARN 004 Default policy emission is deprecated, please include policy specificiations for the application group in configtx.yaml
01:33:55 2018-05-28 05:33:55.428 UTC [common/tools/configtxgen/encoder] NewApplicationOrgGroup -> WARN 005 Default policy emission is deprecated, please include policy specificiations for the application org group Org1ExampleCom in configtx.yaml
01:33:55 2018-05-28 05:33:55.429 UTC [common/tools/configtxgen/encoder] NewApplicationOrgGroup -> WARN 006 Default policy emission is deprecated, please include policy specificiations for the application org group Org2ExampleCom in configtx.yaml
01:33:55 2018-05-28 05:33:55.430 UTC [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 007 Writing new channel tx
01:35:23     And a user deploys chaincode                                    # steps/endorser_impl.py:239
01:40:34       Assertion Failed: The expected chaincode container ad548b2a623811e882d5fa163e850236-peer0.org1.example.com-mycc-0 is not running
01:40:34       Captured stdout:
01:40:34       testConfigs: configs/ad548b2a623811e882d5fa163e850236
{code}

*Build Logs*

https://jenkins.hyperledger.org/view/Daily/job/fabric-smoke-test-daily-x86_64/146/testReport/bootstrap/Bootstrapping%20Hyperledger%20Fabric/Basic_operations_to_create_a_useful_blockchain_network/

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-smoke-test-daily-x86_64/146/
",,latitiah,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd2v:",,,,,,,,,,,,,,,,,,,,,latitiah,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"29/May/18 11:08 PM;sambhavdutt;The smoke tests are failing in the recent verify and merge tests too, and in the daily test, as the chaincode container fails - peer0.org1.example.com-mycc-0. 

*Build Logs*

*Bootstrap* - https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/1317/testReport/bootstrap/Bootstrapping%20Hyperledger%20Fabric/Basic_operations_to_create_a_useful_blockchain_network/

*Chaincodes Testing* - https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/1317/testReport/chaincodes/Chaincodes%20Testing/FAB_5791__Test_API_in_SHIM_interface_using_marbles02_and_shimApiDriver_chaincodes_for_kafka_orderer_couchdb_db_GOLANG_lang_____1_2_/

*Orderer Service* - https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/1317/testReport/orderer/Orderer%20Service/FAB_3852__Message_Payloads_Less_than_1MB__for_kafka_orderer_using_the_NodeJS_SDK_interface_____1_4_/

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-verify-x86_64/1317/;;;","31/May/18 2:11 AM;latitiah;There are 2 errors in this stream:
{code:java}
Error occurred [\'docker exec cli /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/9905c06663d811e8b327fa163edef5a9/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer channel create --file /var/hyperledger/configs/9905c06663d811e8b327fa163edef5a9/behavesystest.tx --channelID behavesystest --timeout 300 --orderer orderer0.example.com:7050 ""\']: \x1b[36m2018-05-30 07:11:19.591 UTC [viperutil] getKeysRecursively -> DEBU 001\x1b[0m Found map[string]interface{} value for peer.BCCSP\n\x1b[36m2018-05-30 07:11:19.592 UTC [viperutil] unmarshalJSON -> DEBU 002\x1b[0m Unmarshal JSON: value cannot be unmarshalled: invalid character \'S\' looking for beginning of value\n\x1b[36m2018-05-30 07:11:19.592 UTC [viperutil] getKeysRecursively -> DEBU 003\x1b[0m Found real value for peer.BCCSP.Default setting to string SW\n\x1b[36m2018-05-30 07:11:19.593 UTC [viperutil] getKeysRecursively -> DEBU 004\x1b[0m Found map[string]interface{} value for peer.BCCSP.SW\n\x1b[36m2018-05-30 07:11:19.593 UTC [viperutil] unmarshalJSON -> DEBU 005\x1b[0m Unmarshal JSON: value is not a string: 256\n\x1b[36m2018-05-30 07:11:19.593 UTC [viperutil] getKeysRecursively -> DEBU 006\x1b[0m Found real value for peer.BCCSP.SW.Security setting to int 256\n\x1b[36m2018-05-30 07:11:19.594 UTC [viperutil] getKeysRecursively -> DEBU 007\x1b[0m Found map[string]interface{} value for peer.BCCSP.SW.FileKeyStore\n\x1b[36m2018-05-30 07:11:19.594 UTC [viperutil] unmarshalJSON -> DEBU 008\x1b[0m Unmarshal JSON: value cannot be unmarshalled: unexpected end of JSON input\n\x1b[36m2018-05-30 07:11:19.594 UTC [viperutil] getKeysRecursively -> DEBU 009\x1b[0m Found real value for peer.BCCSP.SW.FileKeyStore.KeyStore setting to string \n\x1b[36m2018-05-30 07:11:19.595 UTC [viperutil] unmarshalJSON -> DEBU 00a\x1b[0m Unmarshal JSON: value cannot be unmarshalled: invalid character \'S\' looking for beginning of value\n\x1b[36m2018-05-30 07:11:19.595 UTC [viperutil] getKeysRecursively -> DEBU 00b\x1b[0m Found real value for peer.BCCSP.SW.Hash setting to string SHA2\n\x1b[36m2018-05-30 07:11:19.595 UTC [viperutil] EnhancedExactUnmarshalKey -> DEBU 00c\x1b[0m map[peer.BCCSP:map[Default:SW SW:map[Security:256 FileKeyStore:map[KeyStore:] Hash:SHA2]]]\n\x1b[36m2018-05-30{code}
 

The second error:
{code:java}
Error: invalid argument ""300"" for ""-t, --timeout"" flag: time: missing unit in duration 300\nUsage:\n  peer channel create [flags]\n\nFlags:\n  -c, --channelID string     In case of a newChain command, the channel ID to create. It must be all lower case, less than 250 characters long and match the regular expression: [a-z][a-z0-9.-]*\n  -f, --file string          Configuration transaction file generated by a tool such as configtxgen for submitting to orderer\n  -h, --help                 help for create\n      --outputBlock string   The path to write the genesis block for the channel. (default ./<channelID>.block)\n  -t, --timeout duration     Channel creation timeout (default 5s)\n\nGlobal Flags:\n      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint\n      --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint\n      --clientauth                          Use mutual TLS when communicating with the orderer endpoint\n      --connTimeout duration                Timeout for client to connect (default 3s)\n      --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint\n      --logging-level string                Default logging level and overrides, see core.yaml for full syntax\n  -o, --orderer string                      Ordering service endpoint\n      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.\n      --tls                                 Use TLS when communicating with the orderer endpoint\n\n'{code}
 ;;;","31/May/18 8:31 AM;latitiah;https://gerrit.hyperledger.org/r/22575 [FAB-10424];;;",,,,,,,,,,,,,,,,,,,,,,,,
fix bad license header,FAB-10425,30693,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,29/May/18 3:42 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,06/Jun/18 5:20 AM,v1.1.0,,,,,,,,v1.2.0,,,,,,,,0,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd33:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Jun/18 5:19 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/22435/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
jq missing in fabric-tools,FAB-10426,30694,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,29/May/18 8:27 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,18/Jun/18 9:13 PM,v1.1.0,,,,,,,,v1.2.0,,,fabric-build,,,,,0,,,,,,,the multi-stage build for fabric-tools is missing jq,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd3b:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jun/18 9:14 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/22445/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
fail to start the e2e_cli,FAB-10427,30696,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,asaningmaxchain123,asaningmaxchain123,29/May/18 12:51 PM,01/Dec/18 8:31 PM,28/Oct/23 3:03 AM,01/Dec/18 8:31 PM,v1.2.0,,,,,,,,,,,fabric-peer,,,,,0,,,,,,,"i use the fabric master branch to build the docker,and then when i run the example/e2e_cli. then i meet the following error.

 

Error: could not assemble transaction, err Proposal response was not successful, error code 500, msg failed to execute transaction f33a39fe2d87acd30cbfcc7a7830558c92184762eb85965f365943ef1f92620d: error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 2 ""# github.com/hyperledger/fabric/vendor/golang.org/x/crypto/sha3

opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/crypto/sha3/keccakf_amd64.go:13:6: missing function body

# github.com/hyperledger/fabric/vendor/golang.org/x/sys/unix

opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/sys/unix/syscall_linux_amd64_gc.go:13:6: missing function body

opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/sys/unix/syscall_linux_gc.go:10:6: missing function body

opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/sys/unix/syscall_linux_gc.go:14:6: missing function body

opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/sys/unix/syscall_unix_gc.go:12:6: missing function body

opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/sys/unix/syscall_unix_gc.go:13:6: missing function body

opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/sys/unix/syscall_unix_gc.go:14:6: missing function body

opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/sys/unix/syscall_unix_gc.go:15:6: missing function body

""

!!!!!!!!!!!!!!! Chaincode instantiation on peer0.org2 on channel 'mychannel' failed !!!!!!!!!!!!!!!!

================== ERROR !!! FAILED to execute End-2-End Scenario ==================",,asaningmaxchain123,ashahChen,davidkhala,denyeart,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd3j:",,,,,,,,,,,,,,,,,,,,,asaningmaxchain123,ashahChen,davidkhala,denyeart,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/May/18 11:56 AM;ashahChen;maybe lose some go packages?;;;","31/May/18 11:40 PM;jyellick;I have no problem executing this in my local environment.  Are you on go v1.10?;;;","12/Jun/18 10:42 AM;ashahChen;go version go1.10.1 linux/amd64, I just test first-network, it's running well.;;;","29/Jun/18 4:54 PM;davidkhala;I see similar problem, but my case is not in e2e, instead it happens when I try to instantiate a chaincode using golang/dep as vendor package manage tool, even I only import fabric itself into vendor folder.;;;","20/Jul/18 8:48 PM;asaningmaxchain123;[~davidkhala] you lose some files , in the scripts/goListFiles.sh, it contains the file end with *.s. 

.;;;","19/Aug/18 3:35 PM;davidkhala;[~asaningmaxchain123] what do you mean? And where is the scripts/goListFiles?
Q@;;;","05/Sep/18 12:06 AM;sykesm;Looks like this was during 1.2 development against a master branch. If you're still having issues building against the current master, please update with current information.

Thanks.;;;","01/Dec/18 8:31 PM;denyeart;No response from reporter, closing.;;;",,,,,,,,,,,,,,,,,,,
"The examples of byfn.sh output in ""Generate Network Artifacts"" seems to be old",FAB-10428,30698,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,echigo,echigo,29/May/18 3:05 PM,11/Aug/19 6:11 PM,28/Oct/23 3:03 AM,11/Aug/19 6:11 PM,,,,,,,,,,,,fabric-docs,fabric-samples,,,,0,Documentation,,,,,,"When I execute byfn.sh to generate the fabric network artifacts using fabric v1.1.0, I found that the actual output of byfn.sh is different with the tutorials.

I suggest to update the information.

* byfn.sh provides new option ""upgrade"" and other options
{code:java}
[root@ first-network]# ./byfn.sh --help
Usage:
  byfn.sh up|down|restart|generate|upgrade [-c <channel name>] [-t <timeout>] [-d <delay>] [-f <docker-compose-file>] [-s <dbtype>] [-i <imagetag>]
  byfn.sh -h|--help (print this message)
    <mode> - one of 'up', 'down', 'restart' or 'generate'
      - 'up' - bring up the network with docker-compose up
      - 'down' - clear the network with docker-compose down
      - 'restart' - restart the network
      - 'generate' - generate required certificates and genesis block
      - 'upgrade'  - upgrade the network from v1.0.x to v1.1
    -c <channel name> - channel name to use (defaults to ""mychannel"")
    -t <timeout> - CLI timeout duration in seconds (defaults to 10)
    -d <delay> - delay duration in seconds (defaults to 3)
    -f <docker-compose-file> - specify which docker-compose file use (defaults to docker-compose-cli.yaml)
    -s <dbtype> - the database backend to use: goleveldb (default) or couchdb
    -l <language> - the chaincode language: golang (default) or node
    -i <imagetag> - the tag to be used to launch the network (defaults to ""latest"")

Typically, one would first generate the required certificates and
genesis block, then bring up the network. e.g.:

        byfn.sh generate -c mychannel
        byfn.sh up -c mychannel -s couchdb
        byfn.sh up -c mychannel -s couchdb -i 1.1.0-alpha
        byfn.sh up -l node
        byfn.sh down -c mychannel
        byfn.sh upgrade -c mychannel

Taking all defaults:
        byfn.sh generate
        byfn.sh up
        byfn.sh down
{code}

*  byfn.sh shows the command line for debugging using ""set +x""?
{code:java}
[root@ first-network]# ./byfn.sh -m generate
Generating certs and genesis block for with channel 'mychannel' and CLI timeout of '10' seconds and CLI delay of '3' seconds
Continue? [Y/n] y
proceeding ...
/root/fabric-samples/bin/cryptogen

##########################################################
##### Generate certificates using cryptogen tool #########
##########################################################
+ cryptogen generate --config=./crypto-config.yaml
org1.example.com
org2.example.com
+ res=0
+ set +x

/root/fabric-samples/bin/configtxgen
##########################################################
#########  Generating Orderer Genesis block ##############
##########################################################
+ configtxgen -profile TwoOrgsOrdererGenesis -outputBlock ./channel-artifacts/genesis.block
2018-05-29 05:11:03.402 UTC [common/tools/configtxgen] main -> INFO 001 Loading configuration
2018-05-29 05:11:03.411 UTC [msp] getMspConfig -> INFO 002 Loading NodeOUs
2018-05-29 05:11:03.411 UTC [msp] getMspConfig -> INFO 003 Loading NodeOUs
2018-05-29 05:11:03.411 UTC [common/tools/configtxgen] doOutputBlock -> INFO 004 Generating genesis block
2018-05-29 05:11:03.411 UTC [common/tools/configtxgen] doOutputBlock -> INFO 005 Writing genesis block
+ res=0
+ set +x

#################################################################
### Generating channel configuration transaction 'channel.tx' ###
#################################################################
+ configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID mychannel
2018-05-29 05:11:03.427 UTC [common/tools/configtxgen] main -> INFO 001 Loading configuration
2018-05-29 05:11:03.435 UTC [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 002 Generating new channel configtx
2018-05-29 05:11:03.436 UTC [msp] getMspConfig -> INFO 003 Loading NodeOUs
2018-05-29 05:11:03.436 UTC [msp] getMspConfig -> INFO 004 Loading NodeOUs
2018-05-29 05:11:03.460 UTC [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 005 Writing new channel tx
+ res=0
+ set +x

#################################################################
#######    Generating anchor peer update for Org1MSP   ##########
#################################################################
+ configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org1MSPanchors.tx -channelID mychannel -asOrg Org1MSP
2018-05-29 05:11:03.476 UTC [common/tools/configtxgen] main -> INFO 001 Loading configuration
2018-05-29 05:11:03.484 UTC [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update
2018-05-29 05:11:03.484 UTC [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update
+ res=0
+ set +x

#################################################################
#######    Generating anchor peer update for Org2MSP   ##########
#################################################################
+ configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org2MSPanchors.tx -channelID mychannel -asOrg Org2MSP
2018-05-29 05:11:03.499 UTC [common/tools/configtxgen] main -> INFO 001 Loading configuration
2018-05-29 05:11:03.508 UTC [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update
2018-05-29 05:11:03.508 UTC [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update
+ res=0
+ set +x
{code}",,ashahChen,echigo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzd3z:",,,,Unset,,,,,,Unset,,,,,,,,,,,ashahChen,echigo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/May/18 12:27 PM;ashahChen;1.doc has been updated in fabric/docs/source/build_network.rst

2.set +x means print the commands run in bash script, set -x means stop print.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add discovery cli to the Makefile,FAB-10430,30702,29408,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,29/May/18 8:19 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,13/Jun/18 5:41 AM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,Discovery cli should be compiled with make as rest cli utilities. Thus it will be possible to use it ginko.,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd4f:",,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/May/18 8:23 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/22463/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add Collection and Private Data to glossary,FAB-10431,30703,21730,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,pandrejko,pandrejko,29/May/18 9:50 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,05/Jun/18 9:06 PM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,Documentation,,,,,,,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfk:b",,,,,,To Do,,,,,,,,,,,,,,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Jun/18 12:40 AM;pandrejko; https://gerrit.hyperledger.org/r/22597;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor gossip integration tests,FAB-10432,30704,,Task,To Do,FAB,Fabric,software,denyeart,,,Medium,,,C0rWin,C0rWin,29/May/18 10:39 PM,18/Jul/19 6:47 PM,28/Oct/23 3:03 AM,,,,,,,,,,Future,,,fabric-gossip,,,,,0,,,,,,,"Currently gossip tests wasn't design to run in parallel, there is a need to refactor tests to make them run in parallel.",,C0rWin,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzd4v:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Run gossip related test serialized,FAB-10433,30705,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,29/May/18 10:43 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,30/May/18 3:46 AM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,"Meanwhile need to allow gossip test to run serialized, there is future tasks to have those tests refactored. FAB-10432 created to keep track on this.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd53:",,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/May/18 10:44 PM;C0rWin;https://gerrit.hyperledger.org/r/22465;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update peer chaincode instantiate command to include collection,FAB-10436,30708,21730,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,pandrejko,pandrejko,29/May/18 10:59 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,04/Jun/18 11:01 PM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,Documentation,,,,,,,,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfk:c",,,,,,To Do,,,,,,,,,,,,,,,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/May/18 11:09 PM;pandrejko;[http://hyperledger-fabric.readthedocs.io/en/latest/commands/peerchaincode.html#peer-chaincode-instantiate]

Add new flag under

 

Global Flags:

--collections-config string                 Fully qualified path to JSON file containing collection definition.;;;","29/May/18 11:11 PM;pandrejko;[~denyeart] - I can add this if you agree with the text, placement, etc.;;;","30/May/18 4:03 AM;denyeart;[~pandrejko] Actually it is not a global flag, it is specific to the instantiate command, and in fact it is already documented there :).  Although, you could fix it up to indicate that it is a ""path"" to the filename.  Also while you are looking the formatting looks weird with some bold and red text.   I believe the help text is generated from the commands now (you probably knew that...just checking).;;;","31/May/18 9:59 PM;pandrejko;https://gerrit.hyperledger.org/r/22587

Steps to perform this update.

 
 # Edit fabric/peer/chaincode/chaincode.go
 # Run make clean-all  release native
 # Run scripts/generateHelpDocs.sh;;;",,,,,,,,,,,,,,,,,,,,,,,
Dead link to Swagger specification in documentation page,FAB-10438,30710,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,mcoblenz,mcoblenz,29/May/18 11:45 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:05 PM,,,,,,,,,,,,fabric-docs,,,,,0,Documentation,,,,,,"This page:

[https://openblockchain.readthedocs.io/en/latest/API/CoreAPI/#to-set-up-swagger-ui]

says: 

""To learn about the REST API through Swagger, please take a look at the Swagger document [here|https://github.com/hyperledger/fabric/blob/master/core/rest/rest_api.json]""

 

Unfortunately, the ""here"" link is broken. I'm new to the project and I'm not sure where it should point instead.",,denyeart,mcoblenz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd5z:",,,,,,,,,,,,,,,,,,,,,denyeart,mcoblenz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jun/18 5:24 AM;denyeart;Unfortunately you landed on an outdated doc page.  The latest doc can be found at: [http://hyperledger-fabric.readthedocs.io/en/latest/] .;;;","06/Jun/18 5:43 AM;mcoblenz;Okay, thanks. I guess the expectation is that clients use the SDK: [http://hyperledger-fabric.readthedocs.io/en/latest/fabric-sdks.html.] But actually I'm trying to support a new language for chaincode, so I need to know the interfaces directly. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Create concept topic for chaincode,FAB-10439,30711,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,cmgabriel,odowdaibm,odowdaibm,30/May/18 12:40 AM,14/Jan/20 2:47 AM,28/Oct/23 3:03 AM,14/Jan/20 2:47 AM,v1.1.0,,,,,,,,v1.1.0,,,fabric-docs,,,,,0,chaincode,Documentation,stale-item,,,,"New conceptual topic for chaincode, bring together some already existing material on chaincode.  Will be in Key Concepts section of TOC.",,cmgabriel,isaacwch,joe-alewine,odowdaibm,pandrejko,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288000,288000,,0%,288000,288000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtif:",,,,Unset,,,,,,Unset,,,,,,,,,,,cmgabriel,isaacwch,joe-alewine,odowdaibm,pandrejko,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/18 12:44 AM;odowdaibm;Created feature and let [~isaacwch] know that it's created.  [~SjirNijssen] [~cmgabriel] note that I've created this.  Likewise [~joe-alewine] and [~pandrejko]!  

Issac has done the same for the Transactions topic that we're going to work together.

I will now transfer this feature to Chris G!  Thanks.;;;","30/May/18 12:46 AM;odowdaibm;Assigned to Chris G, as I'm working the transaction topic with Isaac.;;;","30/May/18 12:48 AM;joe-alewine;Chaincode is neither a chain nor is it a secret code. Discuss!

 ;;;","30/May/18 12:55 AM;SjirNijssen;I propose that we describe the full lifecycle of chaincode. Hence let us start with the business requirement, including the scenario's that can later be used to test the chaincode, expressed in a language that the business professionals understand. Describe every period in the lifecycle of the chaincode and where appropriate use the scenario's of the business as illustrations. ;;;","30/May/18 1:17 AM;SjirNijssen;I propose to refer to the concept as smart contract and give an extensive description of that concept, using illustrations that decision makers consider relevant. Let us admit that chaincode is used in the church of Fabrica as a synonym for what other people call smart contract. And please let us describe how smart contract relates to the legal concept with the name contract, using convincing illustrations.  
Let us describe that chaincode consist primarily of update and retrieve functions.
Let us also describe crystal clear what determines the scope of the ledger, said otherwise, which facts (fields) are stored in the chain and which in the world state. ;;;","30/May/18 1:25 AM;SjirNijssen;More precise:
Let us also describe crystal clear what determines the scope of the ledger, said otherwise, which facts (fields) are stored in the chain and which in the world state.
Hence let us answer the question where these fields are defined. My assumption is that it a copied from the union of the JSON of the update functions. _Please correct me if I am wrong_.;;;","30/May/18 1:33 AM;pandrejko;Just a reminder that chaincode is (also) already defined in the Key Concepts Fabric model at https://hyperledger-fabric.readthedocs.io/en/latest/fabric_model.html#chaincode;;;","30/May/18 2:07 AM;SjirNijssen;Let me copy here the definition that Pam refers to.

Chaincode¶

Chaincode is software defining an asset or assets, and the transaction instructions for modifying the asset(s); in other words, it’s the business logic. Chaincode enforces the rules for reading or altering key-value pairs or other state database information. Chaincode functions execute against the ledger’s current state database and are initiated through a transaction proposal. Chaincode execution results in a set of key-value writes (write set) that can be submitted to the network and applied to the ledger on all peers.

I would be in favour of extending the definition in such a way that the reader has a good feeling what this means for his blockchain application system. 
Let us agree that chaincode as in Fabric is not restricted to assets as defined in the financial world. The concept chaincode is vastly broader. Hence let us replace the term assets.
I propose we include as part of this task the improvement of the definition in the glossary as well. .;;;","07/Jun/18 10:39 PM;cmgabriel;In a brief review of the docs there are 45+ references to 'chaincode' and less that half of that for 'smart contracts'.  Another challenge is that the majority of all online content produced by this project or content that references it also refers (almost) exclusively to 'chaincode'.  I propose that we think of smart contracts in terms of client transaction proposals and chaincode for everyting else (system chaincode).   Thoughts?;;;","08/Jun/18 12:22 AM;joe-alewine;My sense of this, and how I'd phrase it, is that smart contracts are one type of chaincode. Specifically, they're user chaincodes that dictate the logic of *business* interactions (ie, interacting with the ledger). These are commonly referred to as ""smart contracts"", which makes sense given their business focus. But it also accurate to call them ""chaincode"", since smart contracts are a type of chaincode. These chaincodes are written and maintained by business users.

There are also chaincodes that aren't smart contracts: the system chaincodes that dictate *system* interactions. Writing/maintaining them is mainly the purview of system administrators (and many of them already come with Fabric, unlike smart contract chaincodes).

The concepts/functionality aren't entirely separate in that system chaincodes can and do ensure that the rules specified in smart contracts are carried out (VSCC for example). But I think the point we can lean in is the difference between business interactions and system interactions. I'm probably greying the line here more than I should but I think if we don't find a way to make a distinction we will confuse people. We need to settle this once and for all.;;;","08/Jun/18 4:45 AM;SjirNijssen;I support the proposal of Joe wrt the clear disctinction between business interactions and system interactions. But I would like to add that we first focus on business interactions. I also propose that we make crystal clear how the relationship is between a business chaincode and the data structure of the chain and the world state. ;;;","08/Jun/18 4:12 PM;SjirNijssen;I furthermore propose to describe the semantics of the three functions very clear. As this may be quite different for different countries or states I propose we select The Netherlands as test case. The createCar function means that the car may enter the public roads and that means that the transaction needs to be endorsed by three parties, the DMV, the dealer and the first owner. The function transferCar means that the car is transferred from the current owner to a new owner and that requires the edorsement of the DMV, the current owner and the new owner. The third function scrapCar means that the car may not any longer be used on the public roads and that the transaction proposal needs the endorsement of the scapp company, the current owner and the DMV. 
Hence if the three functions are part of one and the same chaincode, how will we solve the challenge that the business requirements require three different sets of endorsers?
If the three functions are each part of three separate chaincodes, how can this be done with one and the same ledger as it is assumed that the chaincode specifies the data structure of the ledger?   ;;;","08/Jun/18 4:25 PM;SjirNijssen;And let us not forget that when we have a Fabric network with three orgs, and org1 and org2 are a Java shop and org3 is a Go shop, that the chaincode for the three car functions needs to be in Java for the peers of org1 and org2 and in Go for Org3. It requires elaborate testing  to check that the three different chaincode are for all input the same.;;;","08/Jun/18 4:37 PM;SjirNijssen;In the Hyperledger Fabric Model in the Key Concepts section the subsection on Chaincode is too narrowly defined as defining in asset. The power of Fabric is much wider that describing assets that are too often equated with financial assets. ;;;","08/Jun/18 4:53 PM;SjirNijssen;Above it is said that smart contract (chaincode) is ""written and maintaind by business users"". Often we can learn from history. In 1959 Grace Hopper of the US Navy proposed the COmmon Business Oriented Language, COBOL; it became a standard language for business application in the sixties. In the mid sixties a project was proposed in The Netherlands to have accountants acquire the skill to formulate in COBOL. History: the project was a complete flop. COBOL was much nearer to the world of accountants than Go.  ;;;","08/Jun/18 5:08 PM;SjirNijssen;I like the statement of Joe: ""We need to settle this once and for all."" Indeed, let us describe the different subtypes of chaincode (and give understandable illustrations) and call the business version of chain code smart contracts. A smart proposal Joe, it has my endorsement. ;;;","09/Jun/18 5:58 AM;cmgabriel;Link to Gerrit:

[https://gerrit.hyperledger.org/r/c/22889/]

 ;;;","11/Jun/18 5:20 PM;SjirNijssen;
A few questions that need answers in the chaincode topic.
The life cycle of smart contract will usually go through a number of different states.

1. The specifications for the smart contract are written by ... and approved by ... 

2. The multi org aspects. When a smart contract is to be used by 3 orgs on channel1, and the three organizations have different policies wrt programmening, org1 will use procedural go, org2 only a declarative subset of go and org3 JavaScript, the developer of the smart contract need to start from the same specifications and testsets. 

2a. Who is responsible for the testsets? 

2b. How do we distinguish the three different versions of the smart contract?

3. What is the semantics of Initialize a chaincode? 

4. Which actor has the power to propose the initialize?

5. Which endorsement policy is used to endorse an initialize?

6. Which actor can install a chaincode on a peer of org1?

7. Is this actor using a transaction proposal?

8. Which endorsement policy is involved with installation?

9. Who is responsible for the approval of the execution of the three test sets?

10. Who can propose the instatiate on channel1 of an installed smart contract on peer1 of org1?

11. Who has the power to give a client app of org1 the power to propose an invoke of a smart contract to an endorser of org2?

12. Who has the power to update the smart contract?

13. Who has the power to kill the smart contract on channel1?

14. Who has the power to kill the smart contract on a peer1 of org1?;;;","18/Jul/18 5:45 AM;joe-alewine;So to Sjir's suggestions above, I would say that the majority of these questions would best be resolved through an operations guide-type topic (some of them would seem to belong in an architecture doc, imo), rather than a conceptual topic. Knowing who can install a chaincode on a peer of org1 is not critical information in understanding what chaincode/smart contracts are *for* and can *do*.

It's our mantra, and therefore worth repeating: what problem do smart contracts/chaincode solve? It's not the semantics of initialization (which anyway will be covered in the upcoming docs on LSCC). It's their place in a transaction and how they interact with applications/the SDK/etc (the latter part I did not cover as much since I'm not as familiar with it).

More than the answers to Sjir's questions, I would say that we need to know more about how to turn business language into programming language. How does one do that, outside of Composer? What regulations are there? What considerations? THAT would give decision makers and developers and users the information they need, imo. Are there tutorials out there we can link to?;;;","18/Jul/18 5:48 AM;joe-alewine;Furthermore, to quote Sjir's email, this:

_Let us have a business example with several orgs, several channels and several policies, of course all needed in an example that is considered relevant by business decision makers._ 

Sounds an awful lot like mission creep. I like the idea of a use case, but we should not throw in a kitchen sink of orgs and policies. It should be focused, otherwise business decisions makers will make the business decision that it's time to stop reading and go eat a bagel instead. ;;;","14/Jan/20 2:47 AM;pandrejko;Content delivered here: https://hyperledger-fabric.readthedocs.io/en/latest/smartcontract/smartcontract.html;;;",,,,,,
Create concept topic for transactions ,FAB-10440,30712,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,isaacwch,isaacwch,isaacwch,30/May/18 12:41 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,v1.1.0,,,,,,,,v1.1.0,,,fabric-docs,,,,,0,Documentation,stale-item,transaction,,,,"New conceptual topic for transaction, bring some already existing material on transactions. Will be in Key Concepts section of TOC. ",,isaacwch,odowdaibm,pandrejko,SjirNijssen,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288000,288000,,0%,288000,288000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxuhz:",,,,Unset,,,,,,Unset,,,,,,,,,,,isaacwch,odowdaibm,pandrejko,SjirNijssen,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/18 12:47 AM;isaacwch;Created feature and let [~odowdaibm] know that it's created. Likewise [~cmgabriel] [~SjirNijssen] [~pandrejko] [~joe-alewine]. Thanks!! ;;;","30/May/18 1:00 AM;SjirNijssen;I propose that we include as an optional part the correct syntax as a replacement for the sections 2 in the Architecture Reference. I also propose to use a concrete and business relevant scenario that can be used to illustrate each step. ;;;","25/Oct/18 1:06 AM;pandrejko;This came across my desk today. Should we consider adding this to the transaction topic?


```The transaction file limitation by default is 64Mbyte. And the file name is like: blockfile_XXXXXX (it starts 000000 and probably ends with 999999). So transaction log limitation is 64Mbyte x 999999 = 61Tbyte. World State is either ledgerDB or couchdb. As far as I know couchdb limitation comes from file system (disk size).```

 

But I guess before Hyperledger hit limitation, I guess there will be problem in the performance. I'm aware Hyperleder Fabric team is working on archive and/or prune feature to reduce the size of transaction logs and state DB.;;;","25/Oct/18 10:54 AM;pandrejko;Dave Enyeart just confirmed there is no limit, so you can ignore my comment above:
 there is no size limitation. the blockfile numbers will roll passed 999999 (1000000 and above indefinitely);;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Fix missing CSCC GetConfigTree ACL test,FAB-10441,30713,30514,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,30/May/18 12:52 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,06/Jun/18 8:52 PM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,Discovered during ACL unit test audit.,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd67:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix missing CSCC SimulateConfigTreeUpdate ACL test,FAB-10442,30714,30514,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,30/May/18 12:52 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,06/Jun/18 8:52 PM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd6f:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE testcase: endorsement performance,FAB-10443,30715,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,30/May/18 1:36 AM,30/Jul/19 11:41 AM,28/Oct/23 3:03 AM,30/Jul/19 11:41 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"Test name: Performance test: endorsement performance
Component: Performance test
Description: endorsement performance
    chaincode: each channel has one chaincode, sample cc go chaincode, instantiated
    transactions: 100 threads, each thread sends 10000 invokes concurrently to peer for endorsement, will not send transactions to orderer
         all threads send to org1 peer1 on channel 1

Network Topology: docker containers; 1 channel, 1 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled

Event:
         service: Filtered Block
         listener: block
Client Driver: PTE

Results:
The test passes if
    the execution completes without error
    each thread receives all proposal back from peer",,dongming,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8089,,,,,,,,,"1|hzzd6n:",,,,,,,,,,,,,,,,,,,,,dongming,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:41 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Validation plugin doesn't retrieve latest capabilities reference,FAB-10444,30716,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,30/May/18 1:39 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,30/May/18 3:45 AM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"The validation plugin infrastructure is aware of retrieving the latest MSP manger reference from the channel config, but doesn't do a similar thing to the capabilities. 

",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd6v:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/May/18 1:58 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/22483/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Flags not parsed before configtxgen checks for empty channel id,FAB-10445,30717,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,30/May/18 2:02 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,31/May/18 3:43 AM,v1.1.0,,,,,,,,v1.2.0,,,fabric-tools,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd73:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Key Concepts Fabric Model to include Private Data,FAB-10446,30718,21730,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,pandrejko,pandrejko,30/May/18 2:05 AM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,06/Jun/18 10:06 PM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,Documentation,,,,,,http://hyperledger-fabric.readthedocs.io/en/latest/fabric_model.html,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfk:d",,,,,,To Do,,,,,,,,,,,,,,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Jun/18 5:00 AM;pandrejko;https://gerrit.hyperledger.org/r/22691;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Create a new Key Concept for Private data,FAB-10447,30719,21730,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,pandrejko,pandrejko,30/May/18 2:08 AM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,18/Jun/18 10:43 PM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,Documentation,,,,,,"Add a first class entry in the Key Concepts toc for

Private data",,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfk:e",,,,,,To Do,,,,,,,,,,,,,,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/May/18 6:55 AM;pandrejko;https://gerrit.hyperledger.org/r/22505;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Move Channels from Architecture Toc to Key Concepts toc,FAB-10448,30720,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,pandrejko,pandrejko,pandrejko,30/May/18 2:11 AM,05/Jun/20 9:11 PM,28/Oct/23 3:03 AM,05/Jun/20 9:11 PM,,,,,,,,,Future,,,fabric-docs,,,,,0,Documentation,,,,,,Move the channels topic - there is probably some editing that can be done in here too - for example we might want to mention the new capability to have private data on channel.,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtj3:",,,,Unset,,,,,,Unset,,,,,,,,,,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/20 7:46 AM;pandrejko;We should be able to tackle this when we do the Deployment Guide work. ;;;","05/Jun/20 9:10 PM;pandrejko;Nik has created a 3 part tutorial series that addresses channels in depth. Closing this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Update Ledger Key Concept task to include private data,FAB-10449,30721,21730,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,pandrejko,pandrejko,30/May/18 2:14 AM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,23/Jan/20 7:31 AM,,,,,,,,,,,,fabric-docs,,,,,0,stale-item,,,,,,"We need to update the Ledger Key Concept task to include a discussion of the private data.

http://hyperledger-fabric.readthedocs.io/en/latest/ledger/ledger.html",,pandrejko,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfk:f",,,,,,To Do,,,,,,,,,,,,,,,pandrejko,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:31 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add data privacy to Architecture section,FAB-10450,30722,21730,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,pandrejko,pandrejko,30/May/18 2:18 AM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,18/Jun/18 8:32 PM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,,,,,,,"Create a new topic inside the Architecture Reference section for details on data privacy

http://hyperledger-fabric.readthedocs.io/en/latest/architecture.html",,denyeart,joe-alewine,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfk:g",,,,,,To Do,,,,,,,,,,,,,,,denyeart,joe-alewine,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jun/18 12:33 AM;pandrejko;https://gerrit.hyperledger.org/r/22817;;;","07/Jun/18 12:47 AM;pandrejko;[~denyeart] - 

Could you help with the following information:

 
1. The client application submits the transaction to the ordering service (with
   hashes of the private data) which gets distributed into blocks as normal.
   The block with the public transaction (hashed values) is distributed to all
   the peers. In this way, all peers on the channel can validate transactions
   with private data in a consistent way, without knowing the actual private data.
   <Can you explain more about how a peer validates a transaction based on the hash?>
 
2. If the parties transacting on the private data need to disclose the private data
    to other channel members in the future, for example due to an asset transfer or
    a dispute between the parties, the other channel members can confirm the
    validity of the private data based on the hashes. < Can you explaine channel members can do this?>
 
3. When requiredPeerCount is set to {{0}}, this means that <please elaborate>.
 ;;;","11/Jun/18 9:10 AM;denyeart;[~pandrejko]

1)

All peers perform consistent deterministic validation of transactions.  Here are two aspects of validation (which are described in other places in the docs for public data), and how the validation works when private data is at play:

a) Each peer validates that the endorsers have signed over the same transaction content.  Because the private data hashes are in the public transaction, the peers can validate that the endorsers have signed over the same transaction content, without knowing the actual private data keys and values.

b) Each peer validates that the version of state data at commit time hasn't changed since endorsement time, for the keys read during endorsement.  This ensures that the chaincode execution results that were determined at endorsement time are still valid at commit time. By using hashes of the private data keys, each peer is able to track versions of the keys without knowing the actual keys.

2)

The parties with the private data may share private data of a transaction with non-members out of band, if there is some business need.  These non-members would then take a hash of the private data and confirm it matches the hash that is in the transaction on the chain.  (typically we don't go into specifics of how these types of things would technically be done in the docs, as we don't go into details of the transaction data structure in the docs. That level of knowledge requires reading the protobuf data structures that Fabric and the SDKs use, which people writing apps would typically do.  we could add such detailed examples to the future doc backlog.)

3)

When requiredPeerCount is 0, it means that an endorsing peer must send the private data to at least 0 other members as a condition for endorsement.  That is, no distribution is required, but there may be some distribution if maxPeerCount was greater than zero.  requiredPeerCount of 0 would typically not be recommended, as it could lead to loss of private data. Typically you would want to require at least some distribution of the private data before endorsement returns success, to ensure redundancy of the private data to multiple peers in the network, so that if (all) of the endorsing peers became unavailable before validation/commit time, at least some other peers in the network would have the private data, which other peers could pull from at validation/commit time.;;;","11/Jun/18 8:47 PM;pandrejko;[~joe-alewine] - See Dave's answers to my questions above. Let me know if you want me to add this to the content or if you plan to do it while revising the content.;;;","12/Jun/18 9:48 PM;joe-alewine;I did an edit to the sideDB docs but haven't included this information yet. Will get on it.;;;",,,,,,,,,,,,,,,,,,,,,,
Discovery config returns mapping from MSP name instead from MSP ID,FAB-10451,30723,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,30/May/18 3:09 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,02/Jun/18 5:39 AM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"The discovery config support returns a mapping from the MSP name to the elements, instead of from the MSP ID to the element, because the channel config uses names as keys instead of MSP IDs.
",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd87:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/May/18 9:10 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/22495/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
idemix msp validates users with incorrect revocation epoch,FAB-10452,30724,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,mdr,mdr,mdr,30/May/18 3:20 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:05 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,idemix,,,,,,"The idemix msp validates identities with the epoch it was created in, rather than the epoch contained in the identity, meaning that identities with a different epoch are incorrectly considered invalid. ",,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10120,,,,,,,,,"1|hzzd8f:",,,,,,,,,,,,,,,,,,,,,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/18 3:25 AM;mdr;https://gerrit.hyperledger.org/r/#/c/22493/;;;","31/May/18 3:14 AM;mdr;No longer applies due to FAB-10470;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Failing to build fabric docker images on 32-bit ARM architecture,FAB-10454,30727,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,SashaPESIC,SashaPESIC,SashaPESIC,30/May/18 5:01 AM,15/Aug/18 12:29 AM,28/Oct/23 3:03 AM,15/Aug/18 12:29 AM,,,,,,,,,,,,fabric-crypto,,,,,1,,,,,,,"Failing to build Fabric Peer docker image on a Raspberry Pi 3 -ARMV7L

Baseimage used is 0.4.8. Baseimage, baseos, and basejvm are built on the same architecture without any problems. 

The make peer command fails with message: 
build/bin/peer
CGO_CFLAGS="" "" GOBIN=/home/pi/golang/src/github.com/hyperledger/fabric/build/bin go install -tags ""experimental"" -ldflags ""-X github.com/hyperledger/fabric/common/metadata.Version=1.1.1-snapshot-feed00ad6 -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.4.8 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.Experimental=true"" github.com/hyperledger/fabric/peer
# github.com/hyperledger/fabric/vendor/github.com/milagro-crypto/amcl/version3/go/amcl/FP256BN
*vendor/github.com/milagro-crypto/amcl/version3/go/amcl/FP256BN/FP.go:103:16: constant 30564559323915749 overflows int*
Makefile:259: recipe for target 'build/bin/peer' failed
make: *** [build/bin/peer] Error 2

Any thoughts? 
",,JiahuaWang,jmotacek,SashaPESIC,sykesm,Tatse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd8v:",,,,,,,,,,,,,,,,,,,,,JiahuaWang,jmotacek,SashaPESIC,sykesm,Tatse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jun/18 1:18 AM;JiahuaWang;That's because ARMv7 is 32bits architecture, however, fabric supports 64bits architecture only( even if you can successfully build fabric v1.0 on armv7, this is not a good way, as fabric code doesn't pay attention to thread safety on 32bits architecture).

So the best way is to install a 64bits OS on RPi3, there is a link you can download pi64 OS, 
[https://github.com/bamarni/pi64], install pi64 lite version please, there are some errors on desktop version. Installing git, golang(64bits), docker, then you can build the fabric again on 64pi OS.
Notice:
1.fabric official Makefile doesn't support aarch64 architecture, so you need to add *DOCKER_BASE_aarch64=aarch64/ubuntu:xenial* in Makefile.
2. During building base images, actually, there is no [node-v8.9.4-linux-aarch64.tar.gz|https://nodejs.org/dist/v8.9.4/node-v8.9.4-linux-arm64.tar.gz] in [https://nodejs.org/dist/v8.9.4/], so change it into [node-v8.9.4-linux-arm64.tar.gz|https://nodejs.org/dist/v8.9.4/node-v8.9.4-linux-arm64.tar.gz]  at line 73 of fabric-baseimage/scrpts/common/setup.sh;;;","01/Jun/18 1:21 AM;SashaPESIC;[~JiahuaWang] yes, that is exactly what I am trying at the moment. Thank you for the info about the Makefile. 
Greets!;;;","01/Jun/18 10:25 PM;sykesm;Fabric only supports 64 bit architectures right now.;;;","11/Jun/18 7:28 PM;SashaPESIC;Tried it on 64-bit OS, all components work except the Fabric CA. The CA does not work because of an unrelated issue mentioned in another issue i reported: https://jira.hyperledger.org/browse/FAB-10354. ;;;",,,,,,,,,,,,,,,,,,,,,,,
Set fabric-test submodules for release 1.1,FAB-10457,30730,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,latitiah,latitiah,30/May/18 6:44 AM,03/Nov/18 8:24 PM,28/Oct/23 3:03 AM,03/Nov/18 8:24 PM,,,,,,,,,,,,,,,,,0,,,,,,,The fabric-test release-1.1 branch should have the submodules set with commit values that are consistent for release-1.1.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd9j:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create common CLI infrastructure,FAB-10458,30731,30254,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,30/May/18 7:20 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,11/Jun/18 9:00 PM,,,,,,,,,v1.2.0,,,fabric-common,fabric-tools,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd9r:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create discovery CLI based on the common CLI infrastructure,FAB-10459,30732,30254,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,30/May/18 7:20 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,13/Jun/18 5:37 AM,,,,,,,,,,,,fabric-tools,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzd9z:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support building from Windows 10 via the Windows Subsystem for Linux (WSL),FAB-10460,30734,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,pd93,pd93,30/May/18 6:05 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,v1.0.6,v1.1.0,,,,,,,,,,fabric-build,,,,,1,build,stale-item,,,,,"*Scenario*

Currently, running Hyperledger Fabric is supported on Windows via Docker. However, Windows developers who wish to contribute or try out the latest version of Fabric have to build on a Linux box and transfer the images or use Vagrant. Now that the Windows Subsystem for Linux is out of beta and fairly usable, we should make it possible to use this environment for building on Windows.

*Testing*

My system specs:
 * Windows 10 (1803)

 * WSL (Ubuntu 16.04)
 * Go 1.10.2
 * Docker 18.05

Note that the above are Windows programs, but the WSL is a Linux environment. Windows binaries are callable from the WSL by using the full executable name... eg `go.exe`.

Currently when running `make dist-clean all` on the latest commit on master from within the WSL gives me the following output:
{code:java}
.build/bin/peer
CGO_CFLAGS="" "" GOBIN=/c/Users/pete/dev/src/github.com/hyperledger/fabric/.build/bin go install -tags ""experimental"" -ldflags ""-X github.com/hyperledger/fabric/common/metadata.Version=1.2.0-snapshot-08e5958 -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.4.8 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.Experimental=true"" github.com/hyperledger/fabric/peer
Binary available as .build/bin/peer
.build/bin/orderer
CGO_CFLAGS="" "" GOBIN=/c/Users/pete/dev/src/github.com/hyperledger/fabric/.build/bin go install -tags ""experimental"" -ldflags ""-X github.com/hyperledger/fabric/common/metadata.Version=1.2.0-snapshot-08e5958 -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.4.8 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.Experimental=true"" github.com/hyperledger/fabric/orderer
Binary available as .build/bin/orderer
.build/bin/configtxgen
CGO_CFLAGS="" "" GOBIN=/c/Users/pete/dev/src/github.com/hyperledger/fabric/.build/bin go install -tags ""experimental"" -ldflags ""-X github.com/hyperledger/fabric/common/tools/configtxgen/metadata.Version=1.2.0-snapshot-08e5958"" github.com/hyperledger/fabric/common/tools/configtxgen
Binary available as .build/bin/configtxgen
.build/bin/cryptogen
CGO_CFLAGS="" "" GOBIN=/c/Users/pete/dev/src/github.com/hyperledger/fabric/.build/bin go install -tags ""experimental"" -ldflags ""-X github.com/hyperledger/fabric/common/tools/cryptogen/metadata.Version=1.2.0-snapshot-08e5958"" github.com/hyperledger/fabric/common/tools/cryptogen
Binary available as .build/bin/cryptogen
.build/bin/idemixgen
CGO_CFLAGS="" "" GOBIN=/c/Users/pete/dev/src/github.com/hyperledger/fabric/.build/bin go install -tags ""experimental"" -ldflags ""-X github.com/hyperledger/fabric/common/tools/idemixgen/metadata.Version=1.2.0-snapshot-08e5958"" github.com/hyperledger/fabric/common/tools/idemixgen
Binary available as .build/bin/idemixgen
.build/bin/configtxlator
CGO_CFLAGS="" "" GOBIN=/c/Users/pete/dev/src/github.com/hyperledger/fabric/.build/bin go install -tags ""experimental"" -ldflags ""-X github.com/hyperledger/fabric/common/tools/configtxlator/metadata.Version=1.2.0-snapshot-08e5958"" github.com/hyperledger/fabric/common/tools/configtxlator
Binary available as .build/bin/configtxlator
Building .build/docker/bin/peer
go: disabling cache (/.cache/go-build) due to initialization failure: mkdir /.cache: permission denied
# github.com/hyperledger/fabric/peer
/tmp/go-link-012409467/000006.o: In function `pluginOpen':
/tmp/workdir/go/src/plugin/plugin_dlopen.go:19: warning: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-012409467/000021.o: In function `mygetgrouplist':
/tmp/workdir/go/src/os/user/getgrouplist_unix.go:15: warning: Using 'getgrouplist' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-012409467/000020.o: In function `mygetgrgid_r':
/tmp/workdir/go/src/os/user/cgo_lookup_unix.go:38: warning: Using 'getgrgid_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-012409467/000020.o: In function `mygetgrnam_r':
/tmp/workdir/go/src/os/user/cgo_lookup_unix.go:43: warning: Using 'getgrnam_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-012409467/000020.o: In function `mygetpwnam_r':
/tmp/workdir/go/src/os/user/cgo_lookup_unix.go:33: warning: Using 'getpwnam_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-012409467/000020.o: In function `mygetpwuid_r':
/tmp/workdir/go/src/os/user/cgo_lookup_unix.go:28: warning: Using 'getpwuid_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-012409467/000004.o: In function `_cgo_f7895c2c5a3a_C2func_getaddrinfo':
/tmp/go-build/cgo-gcc-prolog:46: warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
(cd sampleconfig && tar -jc *) > .build/sampleconfig.tar.bz2
mkdir -p .build/image/peer/payload
cp .build/docker/bin/peer .build/sampleconfig.tar.bz2 .build/image/peer/payload
mkdir -p .build/image/peer
Building docker peer-image
docker build  -t hyperledger/fabric-peer .build/image/peer
Sending build context to Docker daemon  25.99MB
Step 1/7 : FROM hyperledger/fabric-baseos:amd64-0.4.8
 ---> 83b7b016c8e5
Step 2/7 : ENV FABRIC_CFG_PATH /etc/hyperledger/fabric
 ---> Running in df0d6409b823
Removing intermediate container df0d6409b823
 ---> 5ce4999dfa7f
Step 3/7 : RUN mkdir -p /var/hyperledger/production $FABRIC_CFG_PATH
 ---> Running in 707470f41593
Removing intermediate container 707470f41593
 ---> bfa67fcb53be
Step 4/7 : COPY payload/peer /usr/local/bin
 ---> 21a58ca1846b
Step 5/7 : ADD  payload/sampleconfig.tar.bz2 $FABRIC_CFG_PATH
 ---> c50f0da92236
Step 6/7 : CMD [""peer"",""node"",""start""]
 ---> Running in ba2086ca1d6e
Removing intermediate container ba2086ca1d6e
 ---> 069649718461
Step 7/7 : LABEL org.hyperledger.fabric.version=1.2.0-snapshot-08e5958       org.hyperledger.fabric.base.version=0.4.8
 ---> Running in 3e84726bdbcf
Removing intermediate container 3e84726bdbcf
 ---> 37a5b32a6730
Successfully built 37a5b32a6730
Successfully tagged hyperledger/fabric-peer:latest
docker tag hyperledger/fabric-peer hyperledger/fabric-peer:amd64-1.2.0-snapshot-08e5958
docker tag hyperledger/fabric-peer hyperledger/fabric-peer:amd64-latest
Building .build/docker/bin/orderer
go: disabling cache (/.cache/go-build) due to initialization failure: mkdir /.cache: permission denied
# github.com/hyperledger/fabric/orderer
/tmp/go-link-784875968/000018.o: In function `pluginOpen':
/tmp/workdir/go/src/plugin/plugin_dlopen.go:19: warning: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-784875968/000021.o: In function `mygetgrouplist':
/tmp/workdir/go/src/os/user/getgrouplist_unix.go:15: warning: Using 'getgrouplist' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-784875968/000020.o: In function `mygetgrgid_r':
/tmp/workdir/go/src/os/user/cgo_lookup_unix.go:38: warning: Using 'getgrgid_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-784875968/000020.o: In function `mygetgrnam_r':
/tmp/workdir/go/src/os/user/cgo_lookup_unix.go:43: warning: Using 'getgrnam_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-784875968/000020.o: In function `mygetpwnam_r':
/tmp/workdir/go/src/os/user/cgo_lookup_unix.go:33: warning: Using 'getpwnam_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-784875968/000020.o: In function `mygetpwuid_r':
/tmp/workdir/go/src/os/user/cgo_lookup_unix.go:28: warning: Using 'getpwuid_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-784875968/000004.o: In function `_cgo_f7895c2c5a3a_C2func_getaddrinfo':
/tmp/go-build/cgo-gcc-prolog:46: warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
mkdir -p .build/image/orderer/payload
cp .build/docker/bin/orderer .build/sampleconfig.tar.bz2 .build/image/orderer/payload
mkdir -p .build/image/orderer
Building docker orderer-image
docker build  -t hyperledger/fabric-orderer .build/image/orderer
Sending build context to Docker daemon  19.51MB
Step 1/8 : FROM hyperledger/fabric-baseos:amd64-0.4.8
 ---> 83b7b016c8e5
Step 2/8 : ENV FABRIC_CFG_PATH /etc/hyperledger/fabric
 ---> Using cache
 ---> 5ce4999dfa7f
Step 3/8 : RUN mkdir -p /var/hyperledger/production $FABRIC_CFG_PATH
 ---> Using cache
 ---> bfa67fcb53be
Step 4/8 : COPY payload/orderer /usr/local/bin
 ---> 32ef08dab2b6
Step 5/8 : ADD payload/sampleconfig.tar.bz2 $FABRIC_CFG_PATH/
 ---> 9c5f67eff68a
Step 6/8 : EXPOSE 7050
 ---> Running in 8782056ee5fd
Removing intermediate container 8782056ee5fd
 ---> 82e6241d7bca
Step 7/8 : CMD [""orderer""]
 ---> Running in bb0d235037e3
Removing intermediate container bb0d235037e3
 ---> 0093adf25082
Step 8/8 : LABEL org.hyperledger.fabric.version=1.2.0-snapshot-08e5958       org.hyperledger.fabric.base.version=0.4.8
 ---> Running in ed3cedb45bbb
Removing intermediate container ed3cedb45bbb
 ---> 01f34c437d46
Successfully built 01f34c437d46
Successfully tagged hyperledger/fabric-orderer:latest
docker tag hyperledger/fabric-orderer hyperledger/fabric-orderer:amd64-1.2.0-snapshot-08e5958
docker tag hyperledger/fabric-orderer hyperledger/fabric-orderer:amd64-latest
Building dockerized gotools
make[1]: Entering directory '/opt/gopath/src/github.com/hyperledger/fabric'
Building github.com/maxbrunsfeld/counterfeiter -> counterfeiter
# cd .; git clone https://github.com/maxbrunsfeld/counterfeiter /opt/gotools/obj/src/github.com/maxbrunsfeld/counterfeiter
Cloning into '/opt/gotools/obj/src/github.com/maxbrunsfeld/counterfeiter'...
error: invalid config file /opt/gotools/obj/src/github.com/maxbrunsfeld/counterfeiter/.git/config
error: invalid config file /opt/gotools/obj/src/github.com/maxbrunsfeld/counterfeiter/.git/config
error: invalid config file /opt/gotools/obj/src/github.com/maxbrunsfeld/counterfeiter/.git/config
error: invalid config file /opt/gotools/obj/src/github.com/maxbrunsfeld/counterfeiter/.git/config
error: invalid config file /opt/gotools/obj/src/github.com/maxbrunsfeld/counterfeiter/.git/config
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.
package github.com/maxbrunsfeld/counterfeiter: exit status 128
gotools.mk:53: recipe for target 'gotool.counterfeiter' failed
make[1]: Leaving directory '/opt/gopath/src/github.com/hyperledger/fabric'
make[1]: *** [gotool.counterfeiter] Error 1
make: *** [/opt/gotools/bin/counterfeiter] Error 2
gotools.mk:58: recipe for target '/opt/gotools/bin/counterfeiter' failed
Makefile:247: recipe for target '.build/docker/gotools' failed
make: *** [.build/docker/gotools] Error 2
{code}
 

 ",,ChristopherFerris,GingerMoon,lovelyidiot,pd93,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzda7:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,GingerMoon,lovelyidiot,pd93,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/18 8:41 PM;ChristopherFerris;This looks like a git error on Windows. I don't have a windows box, but you might try updating git. Also, I see a similar error to one we see in CI relating to the go cache. You can set an explicit location for GOCACHE. For our unit-tests, we use GOCACHE=$\{GOPATH}/src/github.com/hyperledger/fabric/.build/go-cache.;;;","30/May/18 10:05 PM;pd93;To clarify.. I have two versions of Git on my PC. One that comes with the Ubuntu version of the WSL (v2.7.4), and the one that is packaged with Git for Windows (v2.17.0). I only use the latter to get Git working inside VSCode. All command-line git stuff is run from the Ubuntu version by default. Did you have a minimum version of Git in mind?

Also, I set GOCACHE as suggested, but with no success. I still get the exact same go-cache error
{code:java}
echo $GOCACHE
/c/Users/pete/dev/src/github.com/hyperledger/fabric/.build/go-cache
{code};;;","03/Jan/19 3:11 PM;lovelyidiot;it may be a WSL bug.
pre env:
0. Windows 10 10.0.17134.407  => X: is vhdx
1. alpine WSL => DOCKER_HOST=tcp://0.0.0.0:2375
2. Docker Desktop => listen tcp://0.0.0.0:2375

normal:
1.  start cmd
2.  x:
3.  mkdir bug
4.  cd bug
5.  mkdir normal
6.  docker run --rm -ti -v /X/bug/normal:/mnt alpine sh
IN DOCKER
7.  apk add git
8.  cd /mnt
{color:red}9.  git init ok{color}

wsl:
1.  start alpine
2.  cd /mnt/x/bug/
3.  mkdir wsl
4.  docker run --rm -ti -v /X/bug/wsl:/mnt alpine sh
IN DOCKER
5.  apk add git
6.  cd /mnt
{color:red}7.  git init fail{color};;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,
discovery channel access control should check channel writers instead of channel readers,FAB-10462,30743,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,yacovm,yacovm,30/May/18 10:48 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,31/May/18 6:53 AM,v1.2.0,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"The discovery access control checks for channel readers, however - if the channel admins want to enforce that only admins or peers can pull blocks from the orderer/peers, they would set the reader policy to be OR(admin, peer) and that blocks every client from using service discovery.

It would make sense to change the policy that is checked to be channel application writers instead of readers, since if you should be allowed to use an endorsement (write to the channel) you should also be allowed to see who are the peers that you should endorse to. ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdav:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
removeUnwantedImages too aggressive ,FAB-10463,30744,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,ChristopherFerris,ChristopherFerris,ChristopherFerris,30/May/18 10:52 PM,01/May/19 2:23 AM,28/Oct/23 3:03 AM,01/May/19 2:23 AM,v1.1.0,,,,,,,,,,,fabric-samples,,,,,0,,,,,,,"docker images | grep ""dev\|none\|test-vp\|peer[0-9]-"" | awk '\{print $3}' picks up incorrect images",,ChristopherFerris,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdb3:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/18 1:24 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/22707/;;;","14/Jun/18 1:25 AM;ChristopherFerris;problems with this patch... puzzling... will address post 1.2;;;","11/Sep/18 1:01 PM;denyeart;[~ChristopherFerris] What do you want to do with this one?;;;","02/Oct/18 8:17 PM;ChristopherFerris;I sidelined this for the release, will pick it up again. Unclear why the build keeps failing.

Chris;;;","04/Dec/18 5:45 AM;denyeart;[~ChristopherFerris] Is this still an issue?;;;","01/May/19 2:23 AM;mastersingh24;No longer an issue;;;",,,,,,,,,,,,,,,,,,,,,
E2E CLI tests fail in fabric-end-2-end-daily-master-s390x as there is a invalid character in file and channel_name variable is not set.,FAB-10465,30746,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sambhavdutt,sambhavdutt,30/May/18 10:54 PM,19/Mar/19 8:12 PM,28/Oct/23 3:03 AM,02/Jun/18 5:30 AM,,,,,,,,,v1.2.0,,,fabric-samples,,,,,0,ci-failure,,,,,,"The e2e cli tests failed as an invalid character 'S' was found in JSON. I have copied the error log in this test,

*FABRIC_COMMIT : e53554d*
*FABRIC_CA_COMMIT : db9ecd3*

{code:java}
20:46:27 Channel name : mychannel
20:46:27 Check orderering service availability...
20:46:30 Attempting to fetch system channel 'e2e-orderer-syschan' ...3 secs
20:46:34 Attempting to fetch system channel 'e2e-orderer-syschan' ...7 secs
20:46:37 Attempting to fetch system channel 'e2e-orderer-syschan' ...10 secs
20:46:37 2018-05-29 00:46:37.272 UTC [viperutil] getKeysRecursively -> DEBU 001 Found map[string]interface{} value for peer.BCCSP
20:46:37 2018-05-29 00:46:37.272 UTC [viperutil] getKeysRecursively -> DEBU 002 Found map[string]interface{} value for peer.BCCSP.SW
20:46:37 2018-05-29 00:46:37.272 UTC [viperutil] getKeysRecursively -> DEBU 003 Found map[string]interface{} value for peer.BCCSP.SW.FileKeyStore
20:46:37 2018-05-29 00:46:37.272 UTC [viperutil] unmarshalJSON -> DEBU 004 Unmarshal JSON: value cannot be unmarshalled: unexpected end of JSON input
20:46:37 2018-05-29 00:46:37.272 UTC [viperutil] getKeysRecursively -> DEBU 005 Found real value for peer.BCCSP.SW.FileKeyStore.KeyStore setting to string 
20:46:37 2018-05-29 00:46:37.272 UTC [viperutil] unmarshalJSON -> DEBU 006 Unmarshal JSON: value cannot be unmarshalled: invalid character 'S' looking for beginning of value
.
.
20:48:04 2018-05-29 00:46:41.185 UTC [viperutil] unmarshalJSON -> DEBU 00a Unmarshal JSON: value cannot be unmarshalled: invalid character 'S' looking for beginning of value
20:48:04 2018-05-29 00:46:41.185 UTC [viperutil] getKeysRecursively -> DEBU 00b Found real value for peer.BCCSP.Default setting to string SW
20:48:04 2018-05-29 00:46:41.185 UTC [viperutil] EnhancedExactUnmarshalKey -> DEBU 00c map[peer.BCCSP:map[SW:map[FileKeyStore:map[KeyStore:] Hash:SHA2 Security:256] Default:SW]]
20:48:04 2018-05-29 00:46:41.185 UTC [bccsp_sw] openKeyStore -> DEBU 00d KeyStore opened at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore]...done
20:48:04 setting to default channel 'mychannel'
20:48:05 The CHANNEL_NAME variable is not set. Defaulting to a blank string.

{code}

*Build Logs*
https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-s390x/34/",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdbj:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/May/18 3:16 AM;sambhavdutt;This job was retriggered and the end-2-end tests are successful for the CLI tests. 

*Build Log*

*Previous Log -* https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-s390x/34/

*Current Log -* https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-s390x/35/;;;","02/Jun/18 5:30 AM;sambhavdutt;[~Ratnakar]
The end-2-end CLI tests are been passing now without any errors in test or debug message.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Function test for system chaincode ACL via query,FAB-10466,30747,29608,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,30/May/18 11:20 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,13/Jun/18 12:16 AM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdbr:",,,,,,Next Items- Lifecycle & Config,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/May/18 11:24 PM;wlahti;https://gerrit.hyperledger.org/r/c/22541/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Include ACLs in BYFN sample network,FAB-10467,30748,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,joe-alewine,joe-alewine,30/May/18 11:30 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-samples,,,,,0,fabric-samples,stale-item,,,,,Currently BYFN does not support ACLs. But it should.,,joe-alewine,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzdbz:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in gossip connection store,FAB-10469,30752,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,divyank,divyank,31/May/18 1:21 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,08/Jun/18 11:52 PM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,"After running our load tests with many concurrent requests for some time, we noticed some transactions failing with error:
{code}
Description: Failed disseminating 2 out of 2 private RWSets{code}
and others timing out.

Upon profiling the peers, we found that two of them had deadlocks - thousands of go routines were waiting to acquire the gossip connection store lock:
{code:java}
goroutine profile: total 11350
8965 @ 0x9d699c 0x9d6a8e 0x9e7fb4 0x9e7bd9 0xa1cc09 0x10bb4b2 0x10b5cbf 0x10bf224 0xa05f01
#	0x9e7bd8	sync.runtime_Semacquire+0x38							/opt/go/src/runtime/sema.go:56
#	0xa1cc08	sync.(*RWMutex).RLock+0x48							/opt/go/src/sync/rwmutex.go:50
#	0x10bb4b1	github.com/hyperledger/fabric/gossip/comm.(*connectionStore).getConnection+0x71	/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/conn.go:57
#	0x10b5cbe	github.com/hyperledger/fabric/gossip/comm.(*commImpl).sendToEndpoint+0x1de	/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:229
#	0x10bf223	github.com/hyperledger/fabric/gossip/comm.(*commImpl).Send.func1+0x43		/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:216
{code}
which was held by another routine waiting to acquire a connection lock:
{code:java}
1 @ 0x9d699c 0x9d6a8e 0x9e7fb4 0x9e7ccd 0xa1bcee 0xa1cced 0x10bc73b 0x10bbd4b 0x10b76a9 0x10e156d 0x109faae 0x109f3d4 0xa05f01
#	0x9e7ccc	sync.runtime_SemacquireMutex+0x3c									/opt/go/src/runtime/sema.go:71
#	0xa1bced	sync.(*Mutex).Lock+0xed											/opt/go/src/sync/mutex.go:134
#	0xa1ccec	sync.(*RWMutex).Lock+0x2c										/opt/go/src/sync/rwmutex.go:93
#	0x10bc73a	github.com/hyperledger/fabric/gossip/comm.(*connection).close+0x8a					/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/conn.go:235
#	0x10bbd4a	github.com/hyperledger/fabric/gossip/comm.(*connectionStore).closeConn+0xca				/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/conn.go:137
#	0x10b76a8	github.com/hyperledger/fabric/gossip/comm.(*commImpl).CloseConn+0xc8					/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:349
#	0x10e156c	github.com/hyperledger/fabric/gossip/gossip.(*discoveryAdapter).CloseConn+0x7c				/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:956
#	0x109faad	github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).expireDeadMembers+0x64d		/opt/gopath/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:701
#	0x109f3d3	github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).periodicalCheckAlive+0x223	/opt/gopath/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:666
{code}
the connection lock was held by another routine blocking on a send (probably to the other deadlocked peer):
{code:java}
1 @ 0x9d699c 0x9d6a8e 0x9ac25b 0x9abfe3 0x10bca6a 0x10b5e9f 0x10bf923 0x10bed21 0xa05f01
#	0x10bca69	github.com/hyperledger/fabric/gossip/comm.(*connection).send+0x269		/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/conn.go:275
#	0x10b5e9e	github.com/hyperledger/fabric/gossip/comm.(*commImpl).sendToEndpoint+0x3be	/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:235
#	0x10bf922	github.com/hyperledger/fabric/gossip/comm.(*commImpl).SendWithAck.func1+0x42	/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:517
#	0x10bed20	github.com/hyperledger/fabric/gossip/comm.(*ackSendOperation).send.func1+0x40	/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/ack.go:39
{code}
I am attaching go routine profiles for the two deadlocked peers.

*Environment information:*

Fabric v1.1.0 with cherry-picks for private data.

Four orgs with two peers each, three channels (one with all orgs, two with two orgs each)

The tests were run on a local docker-compose environment.

 

 ",,divyank,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/May/18 1:21 AM;divyank;goroutine profile peer0;https://jira.hyperledger.org/secure/attachment/15029/goroutine+profile+peer0","31/May/18 1:21 AM;divyank;goroutine profile peer1;https://jira.hyperledger.org/secure/attachment/15030/goroutine+profile+peer1",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdcf:",,,,,,,,,,,,,,,,,,,,,divyank,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/May/18 3:02 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/22553/ 

I think this should fix it... do you want to give it a go?;;;","31/May/18 3:06 AM;divyank;Thanks for the quick fix! We will cherry-pick this and continue testing.;;;","08/Jun/18 5:32 AM;divyank;We have not seen this issue since cherry-picking the fix. Looks good to merge!;;;","08/Jun/18 5:40 AM;yacovm;[~C0rWin] ^ 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,
Remove cryptographic revocation key check from signature verification ,FAB-10470,30753,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mdr,dubovitskaya,dubovitskaya,31/May/18 1:26 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,31/May/18 9:40 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-crypto,,,,,0,idemix,,,,,,"Since revocation status is not checked, we will disable cryptographic verification of the epoch public key. The rest of the code related to a mock revocation (attributes and protos, APIs) will stay to ensure backwards compatibility for 1.3 when we add a real revocation check.",,dubovitskaya,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10120,,,,,,,,,"1|hzzdcn:",,,,,,,,,,,,,,,,,,,,,dubovitskaya,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/May/18 3:16 AM;mdr;https://gerrit.hyperledger.org/r/#/c/22559/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update suggested default for application readers,FAB-10471,30755,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,31/May/18 3:31 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,01/Jun/18 7:14 PM,,,,,,,,,v1.2.0,,,fabric-tools,,,,,0,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdcv:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Jun/18 7:14 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/22561/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
DRY up e2e suite,FAB-10475,30759,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,31/May/18 5:06 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,01/Jun/18 7:18 PM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzddr:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/May/18 5:35 AM;sykesm;https://gerrit.hyperledger.org/r/22573;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Create nexus release job to publish fabric docker images on s390x,FAB-10476,30760,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,31/May/18 11:56 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,22/Jun/18 4:12 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,Create nexus release job to publish fabric docker images on s390x. This job should trigger manually and should be able to publish images to nexus3 from s390x and x86_64 platform.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9641,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykxr:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jun/18 4:13 AM;rameshthoomu;on release commit, trigger these jobs fabric-nexus-release-x86_64 and fabric-nexus-release-s390x manually to publish docker images to nexus3.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Advanced Governing Management,FAB-10478,30762,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,baohua,baohua,31/May/18 4:58 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-common,,,,,0,governing,stale-item,,,,,"*Noted: The work is still in drafting, welcome to add comments in the spec.*

Currently, Fabric controls the access using policies. However, there is no unique governing model, i.e., different governing policies are implemented following different policy models and may involve several components. E.g., some policies are defined in the channel as configurations, with guaranteeing some Reader, Writer, Admin roles, while other policy like node are defined in system chaincodes, chaincode policies are defined in user input and executed by system chaincodes.

It will be easy to confuse what policies are supported, what roles are guarantees, and what operations can be done with given resource.

Even the experimental RSCC [] is finally deprecated, partially due to unclear governing model.

In this spec, we want to provide a unique governing model for all important resources in the network, following the same process and capabilities.

More details can be found at

[https://docs.google.com/document/d/14xSD-qoaZkuTK8447dlBViJidJE58j9t4_NO3hCTz7A/edit#heading=h.o41wsif4iwbv]",,baohua,grapebaba,qiang0723,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzde7:",,,,Unset,,,,,,Unset,,,,,,,,,,,baohua,grapebaba,qiang0723,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"""Blind Writes"" not mentioned in the docs / faqs",FAB-10479,30763,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,xxs,mgk,mgk,31/May/18 7:04 PM,23/Jan/20 7:34 AM,28/Oct/23 3:03 AM,23/Jan/20 7:34 AM,,,,,,,,,Future,,,fabric-docs,,,,,0,Documentation,stale-item,,,,,"When writing chaincode if I call PutState() to create a new key without having first called GetState() for that same key I'm open to the possibility of a race condition going undetected between two different clients, each issuing a different transaction but both thinking the key does not exist and so both calling a create() chaincode function with different values.


 As an example, a common pattern seems to have chaincode that looks like this:
 {{queryThing(""x"") \{}}
 {{  //return thing ""x"" if it exists}}
 {{}}}

{{createThing(""x"") \{}}
 {{  //call PutState(""x"") to create thing ""x"" but do not not call GetState(""x"") first}}
 {{}}}

{{updateThing(""x"") \{}}
 {{  //call GetState(""x"") followed by PutState(""x"") - all good here}}
 {{}}}

 
 This seems like a common enough pattern and it's open to the problem above especially if the client has a UI that calls queryThing() first, then based on existence call createThing() or updateThing(). Ideally they could have a single ""createOrUpdateThing()"" method but people seem to like the above so are open to the race condition...
  
 Really this potential problem should be documented so people can avoid this problem which would be hard to debug. Best practice should be to suggest people always have a matching ""GetState(""x"")"" for each ""PutState(""x"")"" which will prevent the problem from occurring.",,denyeart,mgk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10480,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdef:",,,,,,,,,,,,,,,,,,,,,denyeart,mgk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/18 10:19 PM;denyeart;Doc enhancements don't need to be made in the context of a release, they can be made anytime.  Updated Fix Version to Future.;;;","23/Jan/20 7:34 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"New API to prevent ""BlindWrite"" problem",FAB-10480,30764,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,denyeart,mgk,mgk,31/May/18 7:26 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-peer,,,,,1,stale-item,,,,,,"As per issue ""FAB-10479 - ""Blind Writes"" not mentioned in the docs / faqs"" BlindWrites can be an issue for unwary chaincode developers at present. Therefore, a new API is proposed to better represent the intent behind the code written. The proposal is that ""PutState()"" is deprecated, and new ""CreateState()"" and ""UpdateState()"" APIs are introduced. This would allow a chaincode developer to indicate if they are expecting a new key to be created vs an existing key to be updated. This would prevent the BlindWrite problem as Fabric could catch and reject calls where the current state of the world state did not match the intent.
  
 CreateState(""x"", ...) - Precondition key ""x"" must not exist. If at the time this API is called at simulation time in an endorser, key ""x"" does exist, an error will be returned. This API will also cause an entry for key ""x"" to be present in the both the Read and Write parts of the RW Set. This means that if the precondition changes before commit it will be caught in the VSCC and rejected.
  
 UpdateState(""x"", ...) - Precondition key ""x"" must exist.  If at the time this is called at simulation time in an endorser, key ""x"" does not exist, an error will be returned. This API will also cause an entry for key ""x"" to be present in the both the Read and Write parts of the RW Set. This means that if the precondition changes before commit it will be caught in the VSCC and rejected.
  
 Essentially these APIs will enforce an ""every write must have a matching read"" semantic against the world state.
  
 Using the example from issue FAB-10479, the code would change to:
  {{queryThing(""x"") \{}}
 {{  //return thing ""x"" if it exists}}
 {{}}}
  
 {{createThing(""x"") \{}}
 {{  //call CreateState(""x"") to create thing ""x"" enforcing the ""x"" does not previously exist}}
 {{}}}
  
 {{updateThing(""x"") \{}}
 {{  //call UpdateState(""x"") to update thing ""x"" enforcing the ""x"" must previously exist}}
 {{}}}
  ",,mgk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10479,,,,,,,,"31/May/18 9:37 PM;mgk;View on Board.url;https://jira.hyperledger.org/secure/attachment/15031/View+on+Board.url",,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzden:",,,,Unset,,,,,,Unset,,,,,,,,,,,mgk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Test: private data is not disseminated to organization removed from collection config,FAB-10482,30766,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,nirro,nirro,31/May/18 9:29 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,12/Jul/18 9:32 PM,,,,,,,,,Future,,,fabric-gossip,,,,,0,e2e-test,,,,,,"1. Setup a channel with three organisations: Org1, Org2 and Org3
2. Install a chaincode and provide collection configuration which will have two collections:
2.1. First collection ColName1 will include Org1 and Org2
2.2. Second collection ColName2 will include Org2 and Org3
3. Endorse transactions which produces private read-write sets for ColName1 and ColName2
4. Update membership of collection ColName1 - remove Org2
5. Endorse transactions which produces private read-write sets for ColName1
5.1. Need to make sure Org2 doesn't receive relevant private data after transaction with updated membership is get committed

",,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9992,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzwqfk:h",,,,,,To Do,,,,,,,,,,,,,,,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/May/18 11:17 PM;nirro;added additional step:
6. make sure Org2 still has access to private data that was created before it was removed from collection.;;;","31/May/18 11:17 PM;nirro;https://gerrit.hyperledger.org/r/#/c/22703/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Remove WARN message in network_setup script,FAB-10483,30767,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,huikang,huikang,huikang,31/May/18 10:18 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,fabric-samples,,,,,0,stale-item,,,,,,"Even when network_setup.sh script is passed a variable for channel name, it still reports a WARNING with down operation. Need a minor fix to remove the WARNING message.",,huikang,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwsxr:",,,,Unset,,,,,,Unset,,,,,,,,,,,huikang,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Oct/18 12:03 AM;huikang;https://gerrit.hyperledger.org/r/#/c/26741/;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"Test: Add integration test for side db, to check peers repects BTL parameter",FAB-10484,30768,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,C0rWin,C0rWin,31/May/18 10:30 PM,26/Jul/18 11:56 PM,28/Oct/23 3:03 AM,26/Jul/18 6:39 AM,,,,,,,,,Future,,,fabric-gossip,,,,,0,e2e-test,,,,,,"BTL (block-to-live) collection parameter, introduced to control the expiration of the private data which belongs to the specific collection. Once peer reaches the BTL + BlockSeqNumber, where BlockSeqNumber stands for the block sequence number at which private data was committed to the ledger, peer takes care to purge it. As a consequence if there is a peer which tries to catch up it should not waste time on trying to bring private data which aimed to be deleted anyway (FAB-10366). Therefore we need to add following integration test:

1. Bootstrap Fabric network with two organizations
2. Start one peer for each organization
3. Install and instantiate the chaincode with two collections
3.1 Configure BTL of one collection to be 10000 and the second one 10
4.  Invoke chaincode to submit several transactions for a while, until ledger height will hit 10+ blocks
5. Span new peer and make sure no purged private data pulled ",,C0rWin,denyeart,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzzdfb:",,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Jun/18 4:17 AM;denyeart;Marking as In Progress as my understanding is that Nir is working on it.

Additionally, I have tested the scenario manually with success.;;;","07/Jun/18 11:18 PM;nirro;https://gerrit.hyperledger.org/r/#/c/22857/;;;","28/Jun/18 7:56 PM;denyeart;[~nirro] could I suggest the purging test also test transient store purging. Set 
 CORE_PEER_GOSSIP_PVTDATA_TRANSIENTSTOREMAXBLOCKRETENTION to a low enough value, and have the test create enough blocks, that the transient store purging kicks off at least once.
 For example if you set CORE_PEER_GOSSIP_PVTDATA_TRANSIENTSTOREMAXBLOCKRETENTION to 5, upon creation of the 10th block the transient store purging will kick off and purge any orphaned entries older than 5 blocks.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Test: Dissemination of the private data to organization removed and then added back to collection config,FAB-10486,30774,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,nirro,nirro,31/May/18 11:30 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,08/Jul/18 8:01 PM,,,,,,,,,Future,,,fabric-gossip,,,,,0,e2e-test,,,,,,"1. Setup a channel with three organisations: Org1, Org2 and Org3
2. Install a chaincode and provide collection configuration which will have two collections:
2.1. First collection ColName1 will include Org1 and Org2
2.2. Second collection ColName2 will include Org2 and Org3
3. Endorse transactions which produces private read-write sets for ColName1
3.1. Make sure Org2 can read private data.
4. Update membership of collection ColName1 to remove Org2.
5. Endorse transactions which produces private read-write sets for ColName1
5.1. Make sure Org2 can't read new private data.
6. Update membership of collection ColName1 to add Org2.
7. Endorse transactions which produces private read-write sets for ColName1
7.1 Make sure Org2 can read the new private data from step (3) and (7) but cannot read private data from step (5).",,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9992,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzwqfk:i",,,,,,To Do,,,,,,,,,,,,,,,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jun/18 6:05 PM;nirro;https://gerrit.hyperledger.org/r/22703;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Blockchain Network concept topic - updates,FAB-10487,30775,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,odowdaibm,odowdaibm,odowdaibm,31/May/18 11:38 PM,10/Aug/18 5:11 AM,28/Oct/23 3:03 AM,10/Aug/18 5:09 AM,v1.1.0,,,,,,,,v1.3.0,,,fabric-docs,,,,,0,,,,,,,"Re-ordered network topic, and updated diagrams",,isaacwch,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzdg7:",,,,Unset,,,,,,Unset,,,,,,,,,,,isaacwch,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/May/18 11:39 PM;odowdaibm;Working place for [~SjirNijssen]  Letting [~cmgabriel] know too!;;;","29/Jun/18 2:08 AM;isaacwch;After reading this document, I would probably think of how to implement this network technically and will compare this docs with the ""BYFN"" document immediately. 

A few points and comparisons come to my mind now :
 # Crypto-config.yaml in BYFN serves the purpose of several CAs. In reality, it is the responsibility of the CA in each organization to generate the X.509 certificates to its members. And in the network docs, the term ""network administrator"" is mentioned quite a lot, does it mean the one holding the configtx.yaml and a valid X.509 certificate identifying himself would be considered as the network admin? 
 # How can we add a new network administrator just like adding R1 to have equal administrative right as R4. 
 # Ordering service is the initial administrative point of the network. That's why we need to start the docker containers to ensure the orderer is there before submitting the channel transaction request.
 # Defining anchor peers is not a must and we can therefore optionally run the ""update anchor peer"" commands. 
 # Even we run the install and instantiate command on one of the four peers, all the four peers can interact with the ledger using commands (even though the actual code execution will be on one peer).

So I think this network docs not only does a great job in explaining the functionality of each of the network components , but also makes some of the ideas in ""BYFN"" doc easier to understand. But I am just thinking it may be even better if we can have a small section at the end of the network docs or elsewhere to link the concepts in both docs together so that developer/ architects would have a better understanding on how to implement this technically. For example, addressing point 1 and 2 or possibly others as well. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
instantiation fails when used PTE tool from release 1.1 branch,FAB-10488,30776,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,31/May/18 11:39 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,04/Jun/18 7:31 AM,,,,,,,,,,,,fabric-quality,,,,,0,quality,,,,,,package.json should point to latest v1.1.x node modules instead of latest unstable node moudles will solve the instantiation issues on Fabric 1.1.0,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdgf:",,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jun/18 7:31 AM;Ratnakar;https://jira.hyperledger.org/browse/FAB-10488;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Integration tests are broken after merging acc027adb5,FAB-10489,30777,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,01/Jun/18 12:03 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,01/Jun/18 5:00 AM,,,,,,,,,,,,,,,,,0,,,,,,,"{code:java}
[sykesm@trapped] (master)$ ginkgo -r integration/
Failed to compile e2e:

# github.com/hyperledger/fabric/integration/e2e
integration/e2e/acl_test.go:45:3: undefined: setupWorld
integration/e2e/acl_test.go:51:52: w.Deployment undefined (type world.World has no field or method Deployment)
integration/e2e/acl_test.go:66:91: w.Deployment undefined (type world.World has no field or method Deployment)
integration/e2e/acl_test.go:102:46: w.Deployment undefined (type world.World has no field or method Deployment)
integration/e2e/acl_test.go:118:46: w.Deployment undefined (type world.World has no field or method Deployment)
integration/e2e/acl_test.go:141:38: w.Deployment undefined (type world.World has no field or method Deployment)
integration/e2e/acl_test.go:208:36: w.Deployment undefined (type *world.World has no field or method Deployment)
integration/e2e/acl_test.go:260:28: w.Deployment undefined (type *world.World has no field or method Deployment)
integration/e2e/acl_test.go:264:81: w.Deployment undefined (type *world.World has no field or method Deployment)
integration/e2e/acl_test.go:288:50: w.Deployment undefined (type *world.World has no field or method Deployment)
integration/e2e/acl_test.go:141:38: too many errors{code}",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdgn:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Jun/18 12:05 AM;sykesm;[~rameshthoomu] - we need to get the tests activated in the build or this will continue to happen;;;","01/Jun/18 12:43 AM;sykesm;https://gerrit.hyperledger.org/r/22599;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Add gotools target to integration-test make target,FAB-10490,30778,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,01/Jun/18 12:21 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,02/Jun/18 3:31 AM,,,,,,,,,v1.2.0,,,fabric-build,,,,,0,,,,,,,"Add ""gotools"" target to ""integration-test"" make target to install the ""ginkgo""",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdgv:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Jun/18 1:16 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/22603/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE: PTE should abort on failure of install chain code or any of the pre-requisite steps.,FAB-10492,30780,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,nileshdeotale,nileshdeotale,01/Jun/18 12:44 AM,30/Jul/19 11:42 AM,28/Oct/23 3:03 AM,30/Jul/19 11:42 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"It is observed that on install chain code failure, PTE does not abort..instead it continues to instantiate chaincode steps etc. If install itself has failed, PTE should abort. In general, it will be good to have error handling implemented to abort test on critical failures such as install failure.

 ",,mastersingh24,nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzdhb:",,,,Unset,,,,,,Unset,,,,,,,,,,,mastersingh24,nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition between stopping docker containers and removing them,FAB-10493,30781,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,latitiah,latitiah,01/Jun/18 1:21 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,01/Jun/18 7:48 PM,,,,,,,,,v1.2.0,,,,,,,,0,testhelpers,,,,,,"There is currently a race condition between stopping a docker container and removing the container. As a result, there are times when a docker container is not successfully removed after it has been stopped.

This issue affects the e2e integration tests when using zookeeper and kafka docker containers.

Symptoms of the problem can look like one of the following:
{code}    Expected error:
        <*errors.errorString | 0xc4200b95c0>: {
            s: ""container already exists"",
        }
        container already exists
    not to have occurred
{code}

or
{code}Kafka Runner
/home/me/go/src/github.com/hyperledger/fabric/integration/runner/kafka_test.go:24
  starts and stops a docker container with the specified image [It]
  /home/me/go/src/github.com/hyperledger/fabric/integration/runner/kafka_test.go:87

  Expected an error, got nil

  /home/me/go/src/github.com/hyperledger/fabric/integration/runner/kafka_test.go:118{code}",,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdhj:",,,,,,,,,,,,,,,,,,,,,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Jun/18 4:28 AM;sykesm;This isn't really a race. The runner simply isn't waiting for the container to exit before it returns from run.;;;","01/Jun/18 4:36 AM;sykesm;https://gerrit.hyperledger.org/r/22651;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"Update Integration-Test job to run ""make integration-test"" target",FAB-10496,30786,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,01/Jun/18 2:58 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,05/Jun/18 4:14 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,"Update Integration-Test job to run ""make integration-test"" target. The existing job executes go test command to run the integration tests but this has to change to ""make integration-test""",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykxj:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jun/18 4:15 AM;rameshthoomu;[https://gerrit.hyperledger.org/r/#/c/22603/]
https://gerrit.hyperledger.org/r/#/c/22645/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"With two transactions in a block, private data pulling is inefficient",FAB-10499,30793,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,denyeart,denyeart,01/Jun/18 3:55 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,18/Jun/18 10:20 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,"With two transactions in a block, it pulls for each tx. And for each pull it pulls both tx private data. And the pulls are separated by 1s.
If different peers have different private data, that would kind of make sense.
But if the first pull gives everything you need for both transactions, no need for 2nd pull.
And no reason to wait one second between pulls.

These issues may be split into separate Jiras/CRs as needed.

Attaching the debug log for block12 (puller side), which has two marble transactions, one for marble12a and one for marble12b.

Here are a few of the interesting debug statements to investigate:

Request goes out for first transaction, response comes back with payload of both transactions:
{code:java}
2018-05-31 18:22:10.057 UTC [gossip/comm] sendToEndpoint -> DEBU 6adc Entering, Sending to peer0.org1.example.com:7051 , msg: GossipMessage: nonce:657187042751090023 channel:""mychannel"" tag:CHAN_ONLY privateReq:<digests:<tx_id:""b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:12 > digests:<tx_id:""b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:12 > > , Envelope: 225 bytes, Signature: 0 bytes
2018-05-31 18:22:10.059 UTC [gossip/comm] func1 -> DEBU 6ade Got message: GossipMessage: Channel: mychannel, nonce: 657187042751090023, tag: CHAN_ONLY [tx_id:""b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:12  with 2 elements tx_id:""b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:12  with 2 elements], Envelope: 747 bytes, Signature: 0 bytes
2018-05-31 18:22:10.060 UTC [gossip/privdata] handleResponse -> DEBU 6adf Got elements:<digest:<tx_id:""b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:12 > payload:""\032 \n\033\000color~name\000blue\000marble12a\000\032\001\000\032[\n\tmarble12a\032N{\""docType\"":\""marble\"",\""name\"":\""marble12a\"",\""color\"":\""blue\"",\""size\"":35,\""owner\"":\""tom\""}"" payload:""\032 \n\033\000color~name\000blue\000marble12b\000\032\001\000\032[\n\tmarble12b\032N{\""docType\"":\""marble\"",\""name\"":\""marble12b\"",\""color\"":\""blue\"",\""size\"":35,\""owner\"":\""tom\""}"" > elements:<digest:<tx_id:""b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:12 > payload:""\032 \n\033\000color~name\000blue\000marble12a\000\032\001\000\032[\n\tmarble12a\032N{\""docType\"":\""marble\"",\""name\"":\""marble12a\"",\""color\"":\""blue\"",\""size\"":35,\""owner\"":\""tom\""}"" payload:""\032 \n\033\000color~name\000blue\000marble12b\000\032\001\000\032[\n\tmarble12b\032N{\""docType\"":\""marble\"",\""name\"":\""marble12b\"",\""color\"":\""blue\"",\""size\"":35,\""owner\"":\""tom\""}"" >  from 172.18.0.6:7051{code}
but even though we got the two payloads, I see messages like ""Got empty response"":
{code:java}
2018-05-31 18:22:10.060 UTC [gossip/privdata] fetch -> DEBU 6ae0 Got empty response for tx_id:""b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:12 
2018-05-31 18:22:10.060 UTC [gossip/privdata] fetch -> DEBU 6ae1 Got empty response for tx_id:""b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f"" namespace:""marblesp"" collection:""collectionMarbles"" block_seq:12 {code}
and fetchFromPeers debug looks strange, with multiple messages of ""Ignoring ... because it wasn't found in the block"":
{code:java}
2018-05-31 18:22:10.061 UTC [gossip/privdata] fetchFromPeers -> DEBU 6ae3 Fetched {b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f 0 marblesp collectionMarbles c0b54111733aaa14658114a990f1109c146057dd4887217eab8a936924d1789e}
2018-05-31 18:22:10.062 UTC [gossip/privdata] fetchFromPeers -> DEBU 6ae4 Ignoring {b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f 0 marblesp collectionMarbles 50d64174c9c3f603a10dfe80d0cf0b3cead19f94b4971874a6ac901bcd6b92c3} because it wasn't found in the block
2018-05-31 18:22:10.062 UTC [gossip/privdata] fetchFromPeers -> DEBU 6ae5 Ignoring {b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f 0 marblesp collectionMarbles c0b54111733aaa14658114a990f1109c146057dd4887217eab8a936924d1789e} because it wasn't found in the block
2018-05-31 18:22:10.062 UTC [gossip/privdata] fetchFromPeers -> DEBU 6ae6 Ignoring {b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f 0 marblesp collectionMarbles 50d64174c9c3f603a10dfe80d0cf0b3cead19f94b4971874a6ac901bcd6b92c3} because it wasn't found in the block
2018-05-31 18:22:10.062 UTC [gossip/privdata] fetchFromPeers -> DEBU 6ae7 {b19efd29b14094a71f7a15046ce74f166ed57f75634940f51e795d582302ea26 1 marblesp collectionMarblePrivateDetails 08a426286ef45fdcb9df90796226f329a2254ead3a8780655f4111e48d1f6e85} was purged or will soon be purged, skipping fetch
2018-05-31 18:22:10.062 UTC [gossip/privdata] fetchFromPeers -> DEBU 6ae8 {b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f 0 marblesp collectionMarblePrivateDetails 81fa13332b4253b5eae1608dacffdc258d02b42afc38c505c30234a0e11af693} was purged or will soon be purged, skipping fetch{code}
And then it waits 1s before pulling the second transaction:
{code:java}
2018-05-31 18:22:11.063 UTC [gossip/privdata] func1 -> DEBU 6b08 Fetching {b19efd29b14094a71f7a15046ce74f166ed57f75634940f51e795d582302ea26 1 marblesp collectionMarbles 50d64174c9c3f603a10dfe80d0cf0b3cead19f94b4971874a6ac901bcd6b92c3} from peers{code}",,C0rWin,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jun/18 3:54 AM;denyeart;block12.log;https://jira.hyperledger.org/secure/attachment/15032/block12.log",,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzwtl3:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,C0rWin,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/18 10:21 PM;denyeart;Keeping open since [~C0rWin] intended to add a 3rd subtask, although I've verified the core fix works given the first two subtasks.;;;","18/Jun/18 9:15 PM;denyeart;[~C0rWin] Are you still intending to add a 3rd subtask?  Is it must-do for v1.2?  If not, let's close this out and create the remaining item as it's own task in v1.3.;;;","18/Jun/18 10:20 PM;C0rWin;[~denyeart] I will add it as a separate task for 1.3 or fixpack delivery. Closing current JIRA item as is.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Private data validation/commit makes multiple requests to collection config,FAB-10500,30794,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Duplicate,C0rWin,denyeart,denyeart,01/Jun/18 3:59 AM,20/Dec/18 3:30 AM,28/Oct/23 3:03 AM,20/Dec/18 3:30 AM,v1.2.0,,,,,,,,v2.0.0,,,fabric-gossip,fabric-ledger,,,,0,,,,,,,"With two transactions in a block, the validation/commit logic (puller side) retrieves the collection config multiple times instead of re-using.

Attaching a debug log for block12, which has two transactions in it (each tx has two collections of private data).

Here are the requests to retrieve collection config within block 12 validation/commit:
{code:java}
2018-05-31 18:22:10.042 UTC [stateleveldb] GetState -> DEBU 6aa2 GetState(). ns=lscc, key=marblesp~collection
2018-05-31 18:22:10.043 UTC [stateleveldb] GetState -> DEBU 6aa5 GetState(). ns=lscc, key=marblesp~collection
2018-05-31 18:22:10.043 UTC [stateleveldb] GetState -> DEBU 6aa8 GetState(). ns=lscc, key=marblesp~collection
2018-05-31 18:22:10.044 UTC [stateleveldb] GetState -> DEBU 6aab GetState(). ns=lscc, key=marblesp~collection{code}
{code:java}
2018-05-31 18:22:10.047 UTC [stateleveldb] GetState -> DEBU 6ab9 GetState(). ns=lscc, key=marblesp~collection
2018-05-31 18:22:10.047 UTC [stateleveldb] GetState -> DEBU 6abc GetState(). ns=lscc, key=marblesp~collection
2018-05-31 18:22:10.048 UTC [stateleveldb] GetState -> DEBU 6abf GetState(). ns=lscc, key=marblesp~collection
2018-05-31 18:22:10.048 UTC [stateleveldb] GetState -> DEBU 6ac2 GetState(). ns=lscc, key=marblesp~collection{code}
{code:java}
2018-05-31 18:22:10.050 UTC [stateleveldb] GetState -> DEBU 6ac7 GetState(). ns=lscc, key=marblesp~collection{code}
{code:java}
2018-05-31 18:22:10.052 UTC [stateleveldb] GetState -> DEBU 6acd GetState(). ns=lscc, key=marblesp~collection
2018-05-31 18:22:10.054 UTC [stateleveldb] GetState -> DEBU 6ad0 GetState(). ns=lscc, key=marblesp~collection{code}
{code:java}
2018-05-31 18:22:10.055 UTC [stateleveldb] GetState -> DEBU 6ad6 GetState(). ns=lscc, key=marblesp~collection{code}
{code:java}
2018-05-31 18:22:11.063 UTC [stateleveldb] GetState -> DEBU 6b0a GetState(). ns=lscc, key=marblesp~collection{code}
{code:java}
2018-05-31 18:22:11.063 UTC [stateleveldb] GetState -> DEBU 6b0f GetState(). ns=lscc, key=marblesp~collection{code}
{code:java}
2018-05-31 18:22:11.072 UTC [stateleveldb] GetState -> DEBU 6b28 GetState(). ns=lscc, key=marblesp~collection{code}
{code:java}
2018-05-31 18:22:11.073 UTC [stateleveldb] GetState -> DEBU 6b2e GetState(). ns=lscc, key=marblesp~collection{code}",,C0rWin,denyeart,Senthil1,sheetal-hlf,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13368,,,,,,FAB-103,,,FAB-13082,,,,,"01/Jun/18 3:58 AM;denyeart;block12.log;https://jira.hyperledger.org/secure/attachment/15033/block12.log",,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzwsdj:",,,,,,Sprint 6 - NextGen Endorseme 2,,,,,,,,,,,,,,,C0rWin,denyeart,Senthil1,sheetal-hlf,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jun/18 8:39 PM;denyeart;Defer to v1.4.;;;","02/Dec/18 6:06 PM;C0rWin;Moving to next release.;;;","09/Dec/18 10:34 PM;denyeart;FAB-103 should resolve this for free.;;;","09/Dec/18 10:45 PM;C0rWin;[~denyeart] it won't resolve it, while mitigate the impact of redundant queries. Do you want to postpone it though?;;;","09/Dec/18 10:57 PM;Senthil1;[~denyeart] [~C0rWin]

FAB-103 resolves this partially. We need to introduce a cache at the collection store to keep track of policy evaluation results (to reduce the redundant crypto operation) and also manage collection config updates to perform cache eviction. This is covered in FAB-13082;;;","10/Dec/18 6:43 AM;denyeart;[~Senthil1] [~C0rWin] My impression is that the state db interaction with CouchDB is by far the most expensive aspect, so I was thinking that state db cache in FAB-103 would get us most of the improvement (target v2.0.0 and v1.4.1), while the collection store refactor and cache improvements would provide the remaining improvement (target v2.0.0). Do you agree with this staging?;;;","20/Dec/18 3:30 AM;denyeart;Resolved in v1.4.0 by using lscc state cache: FAB-13368;;;",,,,,,,,,,,,,,,,,,,,
peer logs is not readable,FAB-10501,30795,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,dongming,dongming,01/Jun/18 4:35 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,06/Jun/18 10:54 PM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"with V1.2, commit 50527ed

log level is INFO.

The peer log is full of the following message which make if not readable:

2018-05-31 14:58:04.748 UTC [endorser] EndorseWithPlugin -> INFO 27301 Exiting \{plugin: escc, channel: testorgschannel1, tx: a3b8aee2b73686a36b3a0c8333bb8965f44fc5ec44e5e5a8a4f263bb93d7f575, chaincode: sample_cc_ch1}
2018-05-31 14:58:04.760 UTC [endorser] EndorseWithPlugin -> INFO 27302 Entering endorsement for \{plugin: escc, channel: testorgschannel1, tx: 12679a1d6a9f3b7ee78b4e69120d3807a49cb4868ca33280d91dc3e494cf7d2c, chaincode: sample_cc_ch1}
2018-05-31 14:58:04.760 UTC [endorser] EndorseWithPlugin -> INFO 27303 Exiting \{plugin: escc, channel: testorgschannel1, tx: 12679a1d6a9f3b7ee78b4e69120d3807a49cb4868ca33280d91dc3e494cf7d2c, chaincode: sample_cc_ch1}
2018-05-31 14:58:04.760 UTC [endorser] EndorseWithPlugin -> INFO 27304 Entering endorsement for \{plugin: escc, channel: testorgschannel1, tx: f0067969983662b64c2444bd25e3cd6d7e0e598220f8d813351ed57e03a57cf9, chaincode: sample_cc_ch1}
2018-05-31 14:58:04.761 UTC [endorser] EndorseWithPlugin -> INFO 27305 Exiting \{plugin: escc, channel: testorgschannel1, tx:

f0067969983662b64c2444bd25e3cd6d7e0e598220f8d813351ed57e03a57cf9, chaincode: sample_cc_ch1}

2018-05-31 14:58:04.772 UTC [endorser] EndorseWithPlugin -> INFO 27306 Entering endorsement for \{plugin: escc, channel: testorgschannel1, tx: a7ce63bb409707022ff288d3e67811f763579ce2f80e9f160a6a565c3e1bd71b, chaincode: sample_cc_ch1}
2018-05-31 14:58:04.772 UTC [endorser] EndorseWithPlugin -> INFO 27307 Exiting \{plugin: escc, channel: testorgschannel1, tx: a7ce63bb409707022ff288d3e67811f763579ce2f80e9f160a6a565c3e1bd71b, chaincode: sample_cc_ch1}

 

Can we output those trace when log level is DEBUG?",,dongming,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10640,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdj3:",,,,,,,,,,,,,,,,,,,,,dongming,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Jun/18 4:46 AM;wlahti;https://gerrit.hyperledger.org/r/c/22653/;;;","05/Jun/18 10:33 PM;dongming;Could you please move the VSCC messages below to debug mode? Thanks.

2018-06-04 21:31:38.698 UTC [kvledger] CommitWithPvtData -> INFO 9e45 Channel [testorgschannel1]: Committed block [466] with 86 transaction(s)
2018-06-04 21:31:40.750 UTC [committer/txvalidator] VSCCValidateTxForCC -> INFO 9e46 Validating Tx 38ac785a4d399fac88906102b43e6d2848776817c6b9de1fb3cc82c18e1a89d7, seq 1 out of 10 in block 467 for channel testorgschannel1 with validation plugin vscc with plugin
2018-06-04 21:31:40.754 UTC [committer/txvalidator] VSCCValidateTxForCC -> INFO 9e47 Validating Tx 5a4103fee9184f0e2820483dc32db01d70d05bcd2b6498f55b7a9bb992aa0e47, seq 4 out of 10 in block 467 for channel testorgschannel1 with validation plugin vscc with plugin
2018-06-04 21:31:40.756 UTC [committer/txvalidator] VSCCValidateTxForCC -> INFO 9e48 Validating Tx b296d7b2f070b7dff32c88baaaa1cd086ae37101312281ab34ebc30decffe417, seq 5 out of 10 in block 467 for channel testorgschannel1 with validation plugin vscc with plugin
2018-06-04 21:31:40.764 UTC [committer/txvalidator] VSCCValidateTxForCC -> INFO 9e4a Validating Tx 7fa8bac8ea750e630c65231a1f00a5b4fdbef87cc6d25f201ff72d9f12dbf9fe, seq 6 out of 10 in block 467 for channel testorgschannel1 with validation plugin vscc with plugin;;;","05/Jun/18 11:29 PM;wlahti;https://gerrit.hyperledger.org/r/c/22779/;;;",,,,,,,,,,,,,,,,,,,,,,,,
Upgrade homebrew-fabric 1.0.5 to 1.1.0,FAB-10502,30796,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,alexvicegrab,alexvicegrab,alexvicegrab,01/Jun/18 5:01 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,06/Jun/18 3:40 AM,,,,,,,,,,,,fabric-tools,,,,31/May/18 12:00 AM,0,,,,,,,homebrew-fabric should be the latest version,,alexvicegrab,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";07/Jun/18 1:27 AM;alexvicegrab;7200",3600,0,7200,200%,3600,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzdjb:",,,,Unset,,,,,,Unset,,,,,,,,,,,alexvicegrab,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Testcase - 128 Peers Scalability Test Using PTE,FAB-10504,30798,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,suryalnvs,suryalnvs,01/Jun/18 5:26 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/Jun/18 12:17 AM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,Quality,SystemTestcase,,,,,"Launching 128 peers as part of the fabric network and use PTE to send complex traffic rates. Transaction rates and network configuration will be updated soon here. We plan to model this after https://jira.hyperledger.org/browse/FAB-8208, a test using 64 peers - but with these enhancements:
 # run the traffic on a network launched in a cluster of the kubernetes Cloud container service, instead of OSI VMs (but otherwise is the same test as fab-8208 using 64 peers)
 # double the number of peers in each org, so the total peers = 128
 # design the traffic patterns to overlap at least partially, for added complexity, so that each peer joins more than one channel, so there are not separate independent subnetworks of peers; one idea is to simply join all peers to all channels, without changing the traffic patterns (the peers used for endorsements, on each channel)
 # modify chaincode endorsement requirements and the traffic pattern to send each TX proposal to a peer in two orgs instead of just one (as is done with FAB-8414)

 ",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8208,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10081,,,,,,,,,"1|hzzdjr:",,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/18 12:19 AM;suryalnvs;Ran the initial test with channel creation, join peers, install and instantiation, invokes and queries for 2 hours and then launched a new test with invokes that ran for 12 hours.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Discovery ChannelConfigGetter isn't memory coherent to config updates,FAB-10505,30799,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,01/Jun/18 5:52 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,01/Jun/18 7:04 PM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"The discovery calls *peer.GetChannelConfig* to fetch the latest *channelconfig.Resources* object and extract from it the the *Sequence()* of the channel (the config block sequence).

However, it might read a stale reference of the *channelconfig.Resources* because that reference is updated via an atomic pointer, while the *peer.GetChannelConfig*  doesn't call an atomic load, but relies on the channels  map's RLock  which the callback that updates the map - doesn't lock.

This can be easily solved via just calling *GetStableChannelConfig* instead of *GetChannelConfig*",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdjz:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Jun/18 6:06 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/22663/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
ginkgo e2e should cover multiple endorsement scenarios,FAB-10506,30800,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,01/Jun/18 5:58 AM,21/Jul/18 3:49 AM,28/Oct/23 3:03 AM,19/Jun/18 7:11 AM,v1.2.0,,,,,,,,v1.2.0,,,,,,,,0,,,,,,,none of the existing tests appear to require multiple endorsers,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzdk7:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Jun/18 5:59 AM;sykesm;https://gerrit.hyperledger.org/r/22661;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
move the code to the common package for peer,FAB-10509,30827,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,asaningmaxchain123,asaningmaxchain123,01/Jun/18 10:09 AM,30/Jul/19 11:59 AM,28/Oct/23 3:03 AM,30/Jul/19 11:59 AM,,,,,,,,,,,,fabric-peer,,,,,0,,,,,,,"in the peer/channel package,it defines the const like `EndorserRequired,EndorserNotRequired,OrdererRequired,OrdererNotRequired,PeerDeliverRequired,PeerDeliverNotRequired`,but the peer/chaincode package need it too

`",,asaningmaxchain123,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzdr3:",,,,Unset,,,,,,Unset,,,,,,,,,,,asaningmaxchain123,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix error message: chaincode upgrade without passing config for already existing private data collections,FAB-10512,30835,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,Senthil1,denyeart,denyeart,02/Jun/18 2:16 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,11/Jun/18 8:54 PM,,,,,,,,,v1.2.0,,,fabric-ledger,,,,,0,,,,,,,"If a private data collection is configured in a chaincode v1, it may have data on the chain and therefore can never be deleted.  Chaincode upgrade to v2 therefore must pass collection configuration for any already existing collections.

*Test:* Attempt to delete (not specify) collection during chaincode upgrade .

*Actual Results:* Instantiate/upgrade tran gets invalidated with an error message:
{code:java}
""Some existing collection configurations are missing in the new collection configuration package"".{code}
*Expected Results:* For troubleshooting purpose, it would be expected that the *name* of any missing collection would be included in the error message.

Actually, the logic to print the name of the missing collection is there in this section of validation_logic:
{code:java}
    // In the new collection config package, ensure that there is one entry per old collection. Any
    // number of new collections are allowed.{code}
But this scenario never gets there because it first hits this condition with the not as good message:
{code:java}
    // All old collections must exist in the new collection config package
    if len(newCollectionConfigs) < len(oldCollectionConfigs) {
        return policyErr(fmt.Errorf(""Some existing collection configurations are missing in the new collection configuration package""))
    }{code}
The first check can simply be removed so that it hits the latter check with better information.

 ",,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzzds7:",,,,,,Next Items- Ledger,,,,,,,,,,,,,,,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jun/18 5:51 AM;denyeart;[~Senthil1] Can you take a look? I think you are most familiar with the code there.;;;","07/Jun/18 8:45 AM;Senthil1;Sure, I will submit a CR [~denyeart];;;","19/Jun/18 4:42 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/22853/;;;",,,,,,,,,,,,,,,,,,,,,,,,
Support pvt data storage format from v1.1 experimental,FAB-10513,30836,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,02/Jun/18 2:42 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,04/Jun/18 11:46 PM,,,,,,,,,v1.2.0,,,fabric-ledger,,,,,0,,,,,,,"The storage format in the pvt data store was changed from version 1.1 experimental code to 1.2 in order to support purge of pvt data more efficiently. However, in a scenario, when the peer is upgraded from fabric v1.1 experiential to fabric v1.2, the peer does not understand the format from v1.1 experimental and causes a panic.

Note that while upgrade from experimental features is not technically supported, support is being added in the code so that upgrade scenarios do not fail.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzzdsf:",,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove IdeMix documentation from TOC,FAB-10514,30837,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,02/Jun/18 2:44 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,02/Jun/18 3:23 AM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,Documentation,,,,,,"With IdeMix being deferred to 1.3, it's necessary to make sure that IdeMix documentation isn't merged into the live docs.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzdsn:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer_ote tests are failing in CI jobs as wait-time exceeded in ordererIndex.,FAB-10515,30838,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,sambhavdutt,sambhavdutt,02/Jun/18 3:44 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,05/Jun/18 6:30 AM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,ci-failure,,,,,,"In the fabric-test-daily, the orderer_ote tests are failing in CI jobs as wait-time exceeded in ordererIndex for  ""moreDeliveries"" . The errors from latest build are posted below,

 
{code:java}
moreDeliveries (8) received on ordererIndex 0, 2018-06-01 14:43:43.864114781 +0000 UTC m=+141.385155353
moreDeliveries (8) received on ordererIndex 1, 2018-06-01 14:43:43.864347532 +0000 UTC m=+141.385388031
moreDeliveries (8) received on ordererIndex 2, 2018-06-01 14:43:43.864430473 +0000 UTC m=+141.385470945
moreDeliveries (8) received on ordererIndex 3, 2018-06-01 14:43:43.864527922 +0000 UTC m=+141.385568351
moreDeliveries (8) received on ordererIndex 4, 2018-06-01 14:43:43.864578123 +0000 UTC m=+141.385618552
moreDeliveries (8) received on ordererIndex 5, 2018-06-01 14:43:43.864623167 +0000 UTC m=+141.385663593
Recovery Duration (secs):  65
waitSecs for last batch:   65
{code}

*Build Logs*
https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/369/testReport/orderer_ote/perf_orderer/test_FAB_7080_6ord_kafka_3ch_10kpayload/

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-daily-x86_64/369/
 ",,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdsv:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"04/Jun/18 8:03 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/22711/] to fix some occasional failures in CI test runs on single host machines;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Change nexus port from 10003 to 10002 in nexus release jobs,FAB-10516,30839,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,02/Jun/18 3:51 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,05/Jun/18 4:14 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,Change nexus port from 10003 to 10002 in nexus release jobs. 10003 is for docker.snapshot and 10002 is for docker.release repo.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdt3:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jun/18 4:13 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/22697/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Create the CI process documentation for the fabric-ca project.,FAB-10519,30842,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,jtclark,jtclark,02/Jun/18 4:47 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,16/Jun/18 2:23 AM,v1.2.0,,,,,,,,,,,fabric-ci,,,,,0,ci_documentation,,,,,,"In an effort to split up https://gerrit.hyperledger.org/r/#/c/20307/, create the CI process documentation for the fabric-ca project.",,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8461,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8461,,,,,,,,,"1|hzzdtj:",,,,,,,,,,,,,,,,,,,,,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jun/18 6:19 AM;jtclark;https://gerrit.hyperledger.org/r/#/c/22695/ - patch is *IN-REVIEW*.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode shim supports get/put/delete key-values per data objectType,FAB-10520,30843,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,yuki-kon,yuki-kon,yuki-kon,02/Jun/18 9:09 AM,24/Sep/19 5:50 AM,28/Oct/23 3:03 AM,24/Sep/19 5:50 AM,,,,,,,,,Future,,,fabric-peer,,,,,1,,,,,,,"h2. 1 Background

Hyperledger Fabric v1.2/1.3/1.4 supports collection for private data. Collection makes it simple to put/get/delete multiple private data per objectType. A private key-value is unique in a Chaincode under the namespace of a collection.
 As application developers, we would like to have the same concept for regular channel data. It will be useful because we can save the steps to generate composite keys to make a key-value unique in a Chaincode. The attached shows the image of namespace in a Chaincode.
h2. 2 Problem statement

Chaincode developers often implement the same logic manually to put/get/delete key-values per data object.

When a Chaincode has multiple data objectTypes, it is common to use composite keys. To make keys unique in a Chaincode, the name of an objectType and a key are concatenated: _<objectType name>_<Key name>_.
 Let’s say we have `foo` as a data objectType. `foo` has three keys: f1, f2, f3. The unique composite keys will be: _foo_f1_, _foo_f2_, _foo_f3_. Underscore shows the prefix or separator of composite keys.

When we put or get a key-value, we need 2 steps.
 1. Generate a composite key by calling `stub.CreateCompositeKey(objectType, keys)`.
 2. put/get a key-value by calling `stub.PutState(key string, value []byte)` or `stub.GetState(key string)`.

The Chaincode looks like the below.
{code:java}
fooKey, err := stub.CreateCompositeKey(""foo"", []string{""f1""})
if err != nil {
                return shim.Error(err.Error())
}
err = stub.PutState(fooKey, value)
if err != nil {
                return shim.Error(err.Error())
}
{code}
If we have the concept like collection for regular public state, each key become unique without using composite keys.
h2. 3 Proposal

We propose that Chaincode shim support APIs to put/get/delete key-values per data objectType. Composite key is created in each function and used to call data access handlers.
 The following shows a proposal of new APIs in Chaincode shim. The proposal of APIs for state-based endorsement and pagination will be added soon.
{code:java}
// GetStateByCompositeKey returns the value of the specified composite key from
// the ledger. The composite key is created from `objectType` and `keys`.
// Note that GetStateByCompositeKey doesn't read data from the writeset, which has
// not been committed to the ledger. In other words, GetStateByCompositeKey doesn't
// consider data modified by PutStateByCompositeKey that has not been committed.
// The `objectType` and `keys` are expected to have only valid utf8 strings
// and should not contain U+0000 (nil byte) and U+10FFFF (biggest and unallocated
// code point). See related functions SplitCompositeKey and CreateCompositeKey.
GetStateByCompositeKey(objectType string, keys []string) ([]byte, error)

// PutStateByCompositeKey puts the specified composite key and `value` into the
// transaction's writeset as a data-write proposal. The composite key is created
// from `objectType` and `keys`. PutStateByCompositeKey doesn't effect the ledger
// until the transaction is validated and successfully committed.
// The `objectType` and `keys` are expected to have only valid utf8 strings
// and should not contain U+0000 (nil byte) and U+10FFFF (biggest and unallocated
// code point). See related functions SplitCompositeKey and CreateCompositeKey.
PutStateByCompositeKey(objectType string, keys []string, value []byte) error

// DelStateByCompositeKey records the specified composite key to be deleted in the
// writeset of the transaction proposal. The composite key and its value will
// be deleted from the ledger when the transaction is validated and successfully
// committed. The composite key is created from `objectType` and `keys`.
// The `objectType` and `keys` are expected to have only valid utf8 strings
// and should not contain U+0000 (nil byte) and U+10FFFF (biggest and unallocated
// code point). See related functions SplitCompositeKey and CreateCompositeKey.
DelStateByCompositeKey(objectType string, keys []string) error

// GetStateByObjectType returns a range iterator over a set of composite keys in
// the ledger. The iterator can be used to iterate over all composite keys having
// a given `objectType`.
// However, if the number of keys having the `objectType` is greater than the
// totalQueryLimit (defined in core.yaml), this iterator cannot be used
// to fetch all keys (results will be capped by the totalQueryLimit).
// The keys are returned by the iterator in lexical order.
// Call Close() on the returned StateQueryIteratorInterface object when done.
// The query is re-executed during validation phase to ensure result set
// has not changed since transaction endorsement (phantom reads detected).
GetStateByObjectType(objectType string) (StateQueryIteratorInterface, error)

// DelStateByObjectType records all composite keys having a given `objectType` to be
// deleted in the writeset of the transaction proposal. The keys and their value will
// be deleted from the ledger when the transaction is validated and successfully committed.
DelStateByObjectType(objectType string) error

// GetHistoryForCompositeKey returns a history of composite key values across time.
// For each historic key update, the historic value and associated
// transaction id and timestamp are returned. The timestamp is the
// timestamp provided by the client in the proposal header.
GetHistoryForCompositeKey(objectType string, keys []string) (HistoryQueryIteratorInterface, error)

// TBD
SetStateValidationParameterForCompositeKey(objectType string, keys []string, ep []byte) error

// TBD
GetStateValidationParameterForCompositeKey(objectType string, keys []string) ([]byte, error)

//TBD
GetStateByObjectTypeWithPagination(objectType string, pageSize int32, bookmark string) (StateQueryIteratorInterface, error)

{code}
h2. 4 Usage

If we have these APIs, the Chaincode will be like the below.
{code:java}
err = stub.PutStateByCompositeKey (""foo"", []string{""f1""}, value)
if err != nil {
                return shim.Error(err.Error())
}
{code}
h2. 5 Development plan

This JIRA consists of the following sub-tasks. The first target is Golang Chaincode.

+Define API definitions+

+Develop new APIs in Chaincode shim+
 * (Part1) GetStateByCompositeKey, PutStateByCompositeKey, DelStateByCompositeKey
 * (Part2) GetStateByObjectType, DelStateByObjectType
 * (Part3) GetHistoryForCompositeKey
 * (Part4) State-based endorsement (SetStateValidationParameterForCompositeKey, GetStateValidationParameterForCompositeKey)
 * (Part5) Pagination (GetStateByObjectType)

+Develop mock stub for new APIs+
 +Develop sample Chaincode for new APIs+",,C0rWin,davidkhala,denyeart,edwardaa,MariWade,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11281,,,,,,,,"02/Jun/18 9:10 AM;yuki-kon;ChaincodeNamespace.pptx;https://jira.hyperledger.org/secure/attachment/15042/ChaincodeNamespace.pptx",,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzdtr:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,davidkhala,denyeart,edwardaa,MariWade,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Sep/18 1:50 AM;yuki-kon;Defer to future. This story needs to follow other improvements of Chaincode like FAB-8812 state-based endorsement, FAB-2809 pagination of query results and FAB-11246 programming model.;;;","12/Oct/18 6:46 AM;yuki-kon;Hello [~denyeart]. Could you have a review on the CR below or assign maintainers who are familiar with ChaincodeShim?
This is a CR to define new APIs. https://gerrit.hyperledger.org/r/#/c/26943/;;;","02/Feb/19 8:03 AM;yuki-kon;Removed GetStateByCompositeKeyRange() from the proposal. This function is discussed in FAB-11281 and FAB-13615.;;;","10/May/19 3:48 PM;davidkhala;Personally point of view:  there is no need to add additional 9 APIs simply for a string builder function. It will bring much of test and work in future to fabric maintainers. So I will put -1 in advance.
If it is merged, duplicated work will also happen on java-chaincode, nodejs-chaincode;;;","11/May/19 1:52 AM;yuki-kon;Hi [~davidkhala]. Thank you for your comment. I will think more reasonable ways for both fabric maintainers and application developers.
 Even though Chaincode introduced the new programming model, application developers have to implement the logic to generate composite keys, serialize state and deserialize state before calling ChaincodeShim.
 These logic are low level and not relevant to business logic. To make application developers focus on their business logic, it seems like better to provide additional libraries in the fabric.;;;","11/May/19 1:00 PM;davidkhala;[~yuki-kon]Actually I rarely worry about developers since they are always smart enough to build own tools. For my example, my daily work depends on https://github.com/davidkhala/fabric-common-chaincode-golang, but it is full of personal taste, so I would not recommend it as standard. Same for you case , I suggest your proposal can an extension tools or part of fabric-samples. ;;;","14/May/19 3:47 AM;yuki-kon;[~davidkhala] Thank you for sharing your thought and library. I agree that each application developer has their own requirement. Fabric-samples seems better for a starting point. After proposing this JIRA last year, commercial-paper was added to fabric-samples. It has common functions wrapping ChaincodeShim. If many application developers want to use those functions, it will be a sign to make those functions an extension tool in chaincode/shim/ext or contract-api.;;;","24/Sep/19 5:50 AM;yuki-kon;Close this JIRA. It's better to follow the new programming model and its future release.;;;",,,,,,,,,,,,,,,,,,,
Update Orderer Blocksize max message does not take effect ,FAB-10521,30844,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,RyanLe 2,RyanLe 2,02/Jun/18 12:44 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,07/Jun/18 10:40 PM,v1.1.0,,,,,,,,v1.1.1,v1.2.0,,fabric-orderer,,,,,0,orderer,,,,,,"With fabric code base v1.1.0, Kafka consensus,
 Updating Orderer configuration blocksize '{{max_message_count}}' parameter, for example from max_message_count = 30 to max_message_count = 20,
 created blocks still in size of 30.

While performing update operation, on the peer shown error log
 *2018-06-02 03:29:37.709 UTC [gossip/service] updateEndpoints -> WARN 1299 Failed to update ordering service endpoints, due to Channel with mychannel id was not found
 2018-06-02 03:29:37.723 UTC [kvledger] CommitWithPvtData -> INFO 129a Channel [mychannel]: Committed block [3445] with 1 transaction(s)*

Check peer join channel show that the peer already join channel:
2018-06-02 03:41:45.592 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
Channels peers has joined:
mychannel 
2018-06-02 03:41:45.594 UTC [main] main -> INFO 002 Exiting.....",,jyellick,RyanLe 2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdtz:",,,,,,,,,,,,,,,,,,,,,jyellick,RyanLe 2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jun/18 11:24 PM;jyellick;In review via: https://gerrit.hyperledger.org/r/c/22725/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Unsupported config type error on peer version,FAB-10523,30846,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,rameshthoomu,rameshthoomu,03/Jun/18 10:09 AM,02/Dec/18 7:36 AM,28/Oct/23 3:03 AM,28/Jul/18 9:50 PM,,,,,,,,,v1.3.0,,,fabric-build,fabric-peer,,,,0,,,,,,,"Error: Unsupported config type error on peer version
{code:java}
ibmadmin@build-vm:/opt/gopath/vb1st/src/github.com/hyperledger/fabric/build/bin$ ./peer version
2018-06-02 21:00:42.397 EDT [main] main -> ERRO 001 Fatal error when initializing core config : error when reading core config file: Unsupported Config Type """"{code}
Below is the orderer version
{code:java}
ibmadmin@build-vm:/opt/gopath/vb1st/src/github.com/hyperledger/fabric/build/bin$ ./orderer version
orderer:
 Version: 1.2.0-snapshot-08e5958
 Go version: go1.10
 OS/Arch: linux/amd64
 Experimental features: true{code}
fabric# 08e5958",,ChristopherFerris,lehors,rameshthoomu,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7973,,,,,,,,FAB-12883,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzykxb:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,lehors,rameshthoomu,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jun/18 5:57 AM;ChristopherFerris;Closing this as NOT A BUG - this is the error you get when the core.yaml is not found.;;;","14/Jul/18 12:14 AM;lehors;This actually is a bug in that: 1) the error message is wrong, 2) one should be able to ask for the help or version independently of whether the config file is found.

#1 actually comes from a bug in Viper which is fixed in the latest version

 Upgrading the vendor'ed Viper and dependencies gives the following:
{code:java}
.build/bin/peer version
2018-07-13 17:08:18.573 CEST [main] main -> ERRO 001 Fatal error when initializing core config : error when reading core config file: Config File ""core"" Not Found in ""[/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric]""


{code}
Can we please do at least that so that users aren't left confused?

Once I have figured out our policy on updating vendored packages I will submit a CR. Then I will be investigating #2 :);;;","14/Jul/18 12:15 AM;lehors;As a compromise I marked this as an improvement rather than a bug.;;;","14/Jul/18 2:13 AM;sykesm;A bit of work needs to be done in github.com/hyperledger/fabric/common/viperutil before the dependency can be bumped.;;;","14/Jul/18 3:56 AM;lehors;Ok, I'll have a look. Thanks for the tip.;;;",,,,,,,,,,,,,,,,,,,,,,
Create the CI process documentation for the fabric-sdk-java project.,FAB-10524,30847,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,jtclark,jtclark,03/Jun/18 11:51 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,16/Jun/18 2:23 AM,v1.2.0,,,,,,,,,,,fabric-ci,,,,,0,ci_documentation,,,,,,"In an effort to split up https://gerrit.hyperledger.org/r/#/c/20307/, create the CI process documentation for the fabric-sdk-java project.",,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8461,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8461,,,,,,,,,"1|hzzduf:",,,,,,,,,,,,,,,,,,,,,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jun/18 2:03 AM;jtclark;Patch is *IN-REVIEW:* https://gerrit.hyperledger.org/r/#/c/22709/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Create the CI process documentation for the fabric-sdk-node project.,FAB-10526,30849,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,jtclark,jtclark,04/Jun/18 2:06 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,05/Jun/18 5:56 AM,v1.2.0,,,,,,,,,,,fabric-ci,,,,,0,ci_documentation,,,,,,"In an effort to split up https://gerrit.hyperledger.org/r/#/c/20307/, create the CI process documentation for the fabric-sdk-node project.",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8461,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8461,,,,,,,,,"1|hzzduv:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jun/18 11:10 AM;jtclark;Patchset is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/22715/;;;","05/Jun/18 5:57 AM;rameshthoomu;__Patchset has been merged.;;;","05/Jun/18 5:57 AM;rameshthoomu;http://ci-docs.readthedocs.io/en/latest/;;;",,,,,,,,,,,,,,,,,,,,,,,,
Config sequence not signed in the consensus interface.,FAB-10527,30850,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,tudordavid,tudordavid,04/Jun/18 4:34 PM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,20/Jul/18 7:16 AM,v1.1.0,,,,,,,,,,,fabric-orderer,,,,,0,bft,,,,,,"In the consensus interface, the config sequence (and message type) are not signed.

In a BFT setting, this allows nodes to modify config sequences or message types, and thus e.g. commit transactions that were using old configurations.",,jyellick,kchristidis,tudordavid,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzdv3:",,,,Unset,,,,,,Unset,,,,,,,,,,,jyellick,kchristidis,tudordavid,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/18 1:12 AM;jyellick;This is not a bug.  Changing to feature.

Could you add some more detail as well? I'm not sure how signing the config sequence would add byzantine fault tolerance.  A byzantine node may still sign.  The config sequence passed to the consenter is used as an optimization for CFT orderers so that not all orderers must reverify the transaction.  In the BFT case, all orderers should ignore the config sequence and revalidate regardless.;;;","16/Jun/18 1:39 AM;kchristidis;{quote}In the BFT case, all orderers should ignore the config sequence and revalidate regardless.
{quote}

^^ This.

Changing status to ""Returned"" until we hear back how signing adds BFT tolerance.;;;","21/Jun/18 11:23 PM;tudordavid;Indeed, all nodes revalidate. But it's still possible that a client sends a transaction assuming an old configuration (which would normally be rejected), but the leader of the BFT protocol ends up proposing the request with the current configuration number and thus gets it accepted. In most cases this isn't a problem, but I could see something like this being problematic in scenarios where the transaction is submitted with certain assumptions about the configuration under which it is executed (such as, for example, in a scenario where we include some form of incentivization for the replicas participating in the ordering).;;;","21/Jun/18 11:52 PM;kchristidis;Still not sure I follow. Can you enumerate all the steps in your scenario and explain how the attack happens, if all nodes revalidate?;;;","22/Jun/18 12:34 AM;tudordavid;Actually, you can disregard the previous comment. Indeed, if the client submitting a transaction knows in advance that it should not rely on the config sequence used as a parameter for correctness in any way, then it can include the required checks in the transaction itself and this is not an issue.
 
What I was wondering about was a scenario where a transaction is issued that depends on parameters of the current configuration (for example, transfer X tokens to the current set of orderers). If the client operated under an out-of-date configuration, it would transfer tokens to the wrong set of nodes. But indeed if the client knows not to rely on the config sequence number sent as a parameter to the ordering service for this, it is not an issue.;;;","22/Jun/18 11:55 PM;jyellick;Just to clarify.  Clients do not send the config sequence.  The OSNs validate the transaction in context of a particular configuration (which has a sequence number).  To eliminate redundant checks in the CFT case, the OSN forwards the message to the other the other consenters along with the config sequence number that that OSN validated the message at.  So long as the config sequence has not advanced when the OSN receives the message, it may skip re-validating that transaction, because in a CFT model, it trusts the original OSN's validation.  Of course in a BFT model, there is no trust between nodes, so the receiving OSN must _always_ revalidate the transaction, regardless of any included sequence number.

Hope this helps.;;;",,,,,,,,,,,,,,,,,,,,,
Fix tests for validation of collection configuration,FAB-10528,30851,30231,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mne,mne,mne,04/Jun/18 4:54 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,06/Jun/18 3:31 AM,,,,,,,,,,,,fabric-peer,,,,,0,,,,,,,"Many of the assertions of the tests in validation_logic_test.go are using the wrong matcher. Fix the matchers and properly evaluate the test coverage.

See review comments in [https://gerrit.hyperledger.org/r/#/c/22253/] for more details.",,denyeart,mne,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdvb:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,denyeart,mne,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jun/18 7:02 PM;denyeart;[~mne] Since you have the context could you work on this one?;;;","04/Jun/18 8:00 PM;mne;sure, will do :);;;","05/Jun/18 12:01 AM;mne;https://gerrit.hyperledger.org/r/#/c/22729/;;;",,,,,,,,,,,,,,,,,,,,,,,,
Update is not apart of Query Invoke cycle,FAB-10529,30863,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,04/Jun/18 11:55 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,07/Jun/18 7:52 AM,,,,,,,,,,,,,,,,,0,testhelpers,,,,,,There is a helper function that executes an update to the channel. This is not apart of the query/invoke cycle.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdxr:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
"PTE test summary report enhancement to report total transactions, successful transactions, failed transactions (invokes and queries)",FAB-10530,30864,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,nileshdeotale,nileshdeotale,04/Jun/18 11:59 PM,28/Aug/18 11:27 PM,28/Oct/23 3:03 AM,28/Aug/18 11:27 PM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"Current PTE test summary report shows only Total transactions but does not show successful and failed transactions. We have seen 503 instantiation failures during the test but PTE did not capture that in summary report. It will be helpful to include information that will help determine success or failure of PTE test. 

 

======= PTE 0 main Test Summary: executed at Fri Jun 01 2018 18:02:08 GMT+0000 (UTC) =======
 (defaultchannel:sample_cc_ch1): INVOKE transaction stats
 (defaultchannel:sample_cc_ch1): Total transactions 12396 timeout transactions 0
 (defaultchannel:sample_cc_ch1): start 1527876160814 end 1527879765271 duration 3604457 ms
 (defaultchannel:sample_cc_ch1): TPS 3.44
 (defaultchannel:sample_cc_ch1): peer latency stats (endorsement)
 (defaultchannel:sample_cc_ch1): total transactions: 12396 total time: 603378 ms
 (defaultchannel:sample_cc_ch1): min: 12 ms max: 10007 ms avg: 48.67521781219748 ms
 (defaultchannel:sample_cc_ch1): orderer latency stats (transaction ack)
 (defaultchannel:sample_cc_ch1): total transactions: 12396 total time: 424656 ms
 (defaultchannel:sample_cc_ch1): min: 5 ms max: 8476 ms avg: 34.25750242013553 ms
 (defaultchannel:sample_cc_ch1): event latency stats (end-to-end)
 (defaultchannel:sample_cc_ch1): total transactions: 12396 total time: 12953484 ms
 (defaultchannel:sample_cc_ch1): min: 115 ms max: 11632 ms avg: 1044.972894482091 ms",,AdnanChoudhury,dongming,nileshdeotale,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2247,,,,,,,,,"1|hzzdxz:",,,,Unset,,,,,,Unset,,,,,,,,,,,AdnanChoudhury,dongming,nileshdeotale,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,true,"05/Jun/18 12:02 AM;Ratnakar;Sample client error log messages 

{code}
[[32minfo^[[39m: [PTE 1 main]: stderr: ^[[31merror^[[39m: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 1 CANCELLED: Received http2 header with status: 503
    at new createStatusError (/root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:64:15)
    at /root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:583:15

^[[32minfo^[[39m: [PTE 1 main]: stderr: ^[[31merror^[[39m: [Channel.js]: getChannelConfig - Failed getting channel config. Error: Error: 1 CANCELLED: Received http2 header with status: 503
    at new createStatusError (/root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:64:15)
    at /root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:583:15

^[[32minfo^[[39m: [PTE 1 main]: stderr: ^[[31merror^[[39m: [Channel.js]: Error: 1 CANCELLED: Received http2 header with status: 503
    at new createStatusError (/root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:64:15)
    at /root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:583:15

^[[32minfo^[[39m: [PTE 1 main]: stderr: ^[[31merror^[[39m: [PTE 1 exec]: [Nid:chan:org:id=0:defaultchannel:org2:1 execTransMode] Failed to wait due to error:  Error: Error: 1 CANCELLED: Received http2 header with status: 503
    at /root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/fabric-client/lib/Channel.js:159:28
    at <anonymous>

^[[32minfo^[[39m: [PTE 1 main]: stderr: ^[[31merror^[[39m: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 1 CANCELLED: Received http2 header with status: 503
    at new createStatusError (/root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:64:15)
    at /root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:583:15

^[[32minfo^[[39m: [PTE 1 main]: stderr: ^[[31merror^[[39m: [Channel.js]: getChannelConfig - Failed getting channel config. Error: Error: 1 CANCELLED: Received http2 header with status: 503
    at new createStatusError (/root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:64:15)
    at /root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:583:15

^[[32minfo^[[39m: [PTE 1 main]: stderr: ^[[31merror^[[39m: [Channel.js]: Error: 1 CANCELLED: Received http2 header with status: 503
    at new createStatusError (/root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:64:15)
    at /root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:583:15

^[[32minfo^[[39m: [PTE 1 main]: stderr: ^[[31merror^[[39m: [PTE 1 exec]: [Nid:chan:org:id=0:defaultchannel:org2:0 execTransMode] Failed to wait due to error:  Error: Error: 1 CANCELLED: Received http2 header with status: 503
    at /root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/fabric-client/lib/Channel.js:159:28
    at <anonymous>
{code};;;","03/Aug/18 5:47 AM;AdnanChoudhury;After discussion with [~dongming] this Jira is to be updated to include summary report for errors in Query too, in addition to Invoke transactions. Initial plan is to include the query summary (total query+200 response query+404/500 response query etc) in the PTEReport along with the current Total-Query periodic update.;;;","23/Aug/18 4:26 AM;dongming;part 1 review: https://gerrit.hyperledger.org/r/#/c/25811/;;;",,,,,,,,,,,,,,,,,,,,,,,,
BYFN - consistency for better clarity,FAB-10531,30867,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,haibbo,nagap,nagap,05/Jun/18 1:34 AM,21/Jul/18 3:49 AM,28/Oct/23 3:03 AM,07/Jun/18 12:30 AM,v1.2.0,,,,,,,,,,,fabric-docs,,,,,0,,,,,,,"{color:#205081}_..._{color}

{color:#205081}_We will leverage a script to spin up *our* network._ {color}

Somewhere else, 

{color:#205081}_..._ {color}

{color:#205081}_First let’s start *your* network:_{color}

{color:#333333}Probably update above line with 'our'.{color}",,haibbo,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzdy7:",,,,Unset,,,,,,Unset,,,,,,,,,,,haibbo,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable IntegrationTest in fabric build flow,FAB-10532,30868,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,05/Jun/18 2:20 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,16/Jun/18 2:23 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,Enable IntegrationTest in fabric build flow.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdyf:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jun/18 4:13 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/22737/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Regenerate mocks according to latest mockery binary,FAB-10533,30869,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,05/Jun/18 2:40 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,05/Jun/18 6:47 AM,,,,,,,,,v1.2.0,,,fabric-common,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdyn:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jun/18 2:42 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/22741/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix system behave chaincode error message,FAB-10534,30872,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,05/Jun/18 5:25 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,20/Jul/18 1:11 AM,,,,,,,,,,,,,,,,,0,,,,,,,"The error message changed for the transient error message to the following:

*Error: error parsing transient string: illegal base64 data at input byte 40 - proposal response: <nil>*",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdyv:",,,,,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"05/Jun/18 7:12 AM;scottz;https://gerrit.hyperledger.org/r/#/c/22759/;;;","05/Jun/18 7:22 AM;scottz;https://gerrit.hyperledger.org/r/#/c/22759/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Change ATD to check the pte k8s status,FAB-10535,30873,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,05/Jun/18 5:38 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,07/Jun/18 3:03 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"Check the pte k8s status, use testcases.sh as entry point for pte pod, use configMaps for testcases.sh as part of kubernetes cluster",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10054,,,,,,,,,"1|hzzdz3:",,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"06/Jun/18 10:53 PM;suryalnvs;https://gerrit.hyperledger.org/r/#/c/22811/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
ReadTheDocs - spell check,FAB-10536,30874,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid,haibbo,nagap,nagap,05/Jun/18 6:02 AM,15/Jan/20 6:15 AM,28/Oct/23 3:03 AM,15/Jan/20 6:15 AM,v1.1.0,v1.2.0,,,,,,,,,,fabric-docs,,,,,0,stale-item,,,,,,"[http://hyperledger-fabric.readthedocs.io/en/latest/configtx.html#configuration-updates]
{noformat}
Channel: (version 0)
    Orderer (version 0)
    Appplication (version 3)
       Org1 (version 2){noformat}
_Appplication_ mis-spelled.",,haibbo,nagap,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzdzb:",,,,Unset,,,,,,Unset,,,,,,,,,,,haibbo,nagap,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jan/20 6:15 AM;pandrejko;Problem no longer exists in the documentation.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Orderers should reject incoming CONFIG messages,FAB-10537,30875,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,05/Jun/18 6:08 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,21/Jun/18 2:46 AM,v1.1.0,,,,,,,,v1.1.1,v1.2.0,,fabric-orderer,,,,,0,configuration,,,,,,"As things stand today, the orderer does not reject transactions of type {{HeaderType_CONFIG}}: https://github.com/hyperledger/fabric/blob/feed00ad6c86bb63f7e9e4fe3825c8540b717815/orderer/common/multichannel/registrar.go#L216

This should not be the case — it is the orderers that are tasked with validating/authorizing incoming configuration updates (and they do so by receiving messages of type {{HeaderType_CONFIG_UPDATE}} and turning them into properly validated messages of type {{HeaderType_CONFIG}}).

We should be preventing malicious clients from being able to submit fully-formed CONFIG messages, otherwise we run the risk of the peer crashing upon receiving malformed/unauthorized CONFIG messages.",,denyeart,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";19/Jun/18 3:05 AM;kchristidis;2700",,0,2700,,,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdzj:",,,,,,,,,,,,,,,,,,,,,denyeart,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jun/18 8:10 AM;mastersingh24;[~kchristidis]  - are we going to fix this for 1.2?;;;","09/Jun/18 8:47 AM;kchristidis;Yes. It's a simple fix, should go in next week.;;;","18/Jun/18 9:16 PM;denyeart;[~kchristidis] Any update? Or do you want to defer to v1.3?;;;","19/Jun/18 3:01 AM;kchristidis;CR for master: https://gerrit.hyperledger.org/r/c/23253/
CR for 1.1: https://gerrit.hyperledger.org/r/c/23257/;;;",,,,,,,,,,,,,,,,,,,,,,,
Fix scatter requestion of private data,FAB-10538,30877,30793,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,05/Jun/18 7:22 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,05/Jun/18 11:33 PM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,"While scattering digest to pull missing private data, we using following code:

{code}
func (p *puller) scatterRequests(members []discovery.NetworkMember, peersDigestMapping peer2Digests) []util.Subscription {
	var subscriptions []util.Subscription
	for peer, digests := range peersDigestMapping {
		msg := &proto.GossipMessage{
			Tag:     proto.GossipMessage_CHAN_ONLY,
			Channel: []byte(p.channel),
			Nonce:   util.RandomUInt64(),
			Content: &proto.GossipMessage_PrivateReq{
				PrivateReq: &proto.RemotePvtDataRequest{
					Digests: digestsAsPointerSlice(digests),
				},
			},
		}

		// Subscribe to all digests prior to sending them
		for _, dig := range msg.GetPrivateReq().Digests {
			hash, err := dig.Hash()
			if err != nil {
				// Shouldn't happen as we just built this message ourselves
				logger.Warning(""Failed creating digest"", err)
				continue
			}
			sub := p.pubSub.Subscribe(hash, responseWaitTime)
			subscriptions = append(subscriptions, sub)
		}
		logger.Debug(""Sending"", peer.endpoint, ""request"", msg.GetPrivateReq().Digests)
		p.Send(msg, peer.AsRemotePeer())
	}
	return subscriptions
}
{code}

where

{code}
         Digests: digestsAsPointerSlice(digests)
{code}

used to flatten {{digest}} into  slice of {{[]*proto.PvtDataDigest}} in the following way:

{code}
func digestsAsPointerSlice(digests []proto.PvtDataDigest) []*proto.PvtDataDigest {
	res := make([]*proto.PvtDataDigest, len(digests))
	for i, dig := range digests {
		res[i] = &dig
	}
	return res
}
{code}

where since we storing an address of {{dig}} in resulted slice, i.e. {{res[i] = &dig}} in case lenght of digests would be more than one, for instance block has more than one transaction with same collection, the resulted slice eventually will include repetitions of the last digest within {{for-range}} iteration.

As a consequence this would lead to the peer asking same digest multiple times as well, will omit other digest, thus leading to inefficient retrieval. ",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdzr:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jun/18 7:39 AM;C0rWin; https://gerrit.hyperledger.org/r/22763;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix misplaced log print out,FAB-10539,30878,30793,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,05/Jun/18 7:25 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,05/Jun/18 11:33 PM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,"While processing pull responses of missing private data, there is a code to check whenever we have got empty response (meaning requesting peer doesn't have pvt data any longer)

{code}
		for _, resp := range responses {
			logger.Debug(""Got empty response for"", resp.Digest)
			if len(resp.Payload) == 0 {
				continue
			}
			delete(dig2Filter, *resp.Digest)
			itemsLeftToCollect--
		}

{code}

the log line is obviously misplaced, resulting in misleading log messages

{code}
			logger.Debug(""Got empty response for"", resp.Digest)
{code}

log line should be moved into

{code}
			if len(resp.Payload) == 0 {
			        logger.Debug(""Got empty response for"", resp.Digest)
				continue
			}

{code}",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzdzz:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jun/18 7:38 AM;C0rWin;https://gerrit.hyperledger.org/r/22765;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"user cc works,but qscc invoke timeout",FAB-10540,30879,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,sykesm,luoguohui,luoguohui,05/Jun/18 1:00 PM,07/May/19 11:10 PM,28/Oct/23 3:03 AM,30/Aug/18 8:49 PM,v1.2.0,,,,,,,,v1.1.1,v1.2.0,,fabric-peer,,,,05/Jun/18 12:00 AM,0,,,,,,,"*We wrote a chaincode and then used a test script to invoke chaincode's insert data function 10 times per second. At the same time, the test script will call the ""GetTransactionByID"" function of the system chaincode qscc. At this time, there may be the following error:*

test_net_peer0_org1 |2018-06-02 07:29:56.563 UTC [endorser] simulateProposal -> ERRO 39c3[notaryinfochannel][61d0b2ba] failed to invoke chaincode name:""qscc"" , error: timeout expired while executing transaction
 test_net_peer0_org1 |github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Execute
 test_net_peer0_org1 | /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:813
 test_net_peer0_org1 |github.com/hyperledger/fabric/core/chaincode.Execute
 test_net_peer0_org1 | /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/exectransaction.go:58
 test_net_peer0_org1 |github.com/hyperledger/fabric/core/chaincode.ExecuteChaincode
 test_net_peer0_org1 | /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincodeexec.go:85
 test_net_peer0_org1 |github.com/hyperledger/fabric/core/endorser.(*SupportImpl).Execute
 test_net_peer0_org1 | /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/support.go:93
 test_net_peer0_org1 |github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
 test_net_peer0_org1 | /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:132
 test_net_peer0_org1 |github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal
 test_net_peer0_org1 | /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:265
 test_net_peer0_org1 |github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
 test_net_peer0_org1 | /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:491
 test_net_peer0_org1 |github.com/hyperledger/fabric/core/handlers/auth/filter.(*expirationCheckFilter).ProcessProposal
 test_net_peer0_org1 | /opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/filter/expiration.go:61
 test_net_peer0_org1 |github.com/hyperledger/fabric/core/handlers/auth/filter.(*filter).ProcessProposal
 test_net_peer0_org1 | /opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/filter/filter.go:31
 test_net_peer0_org1 |github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler
 test_net_peer0_org1 | /opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112
 test_net_peer0_org1 |github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC
 test_net_peer0_org1 | /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781
 test_net_peer0_org1 |github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
 test_net_peer0_org1 | /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981
 test_net_peer0_org1 |github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
 test_net_peer0_org1 | /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551
 test_net_peer0_org1 |runtime.goexit
 test_net_peer0_org1 | /opt/go/src/runtime/asm_amd64.s:2337
 test_net_peer0_org1 |failed to execute transaction
 test_net_peer0_org1 |error executing chaincode

 

 *We analyzed the log file and I think there is a deadlock problem. blockAPIsRWLock and commitRWLock are locked for 30 seconds*

blockAPIsRWLock - lock success
 18654 test_net_peer0_org1 |2018-06-02 07:29:26.557 UTC [kvledger] CommitWithPvtData -> DEBU 3854 Channel [notaryinfochannel]: Committing block [97] to storage

commitRWLock - read lock success
 18670 test_net_peer0_org1 |2018-06-02 07:29:26.562 UTC [lockbasedtxmgr] NewTxSimulator -> DEBU 3860 constructing new tx simulator

blockApisRWLock - try to get read lock, wait
 18695 test_net_peer0_org1 |2018-06-02 07:29:26.563 UTC [qscc] getTransactionByID -> DEBU 3876 Invoke function: GetTransactionByID on chain: 235f7b2e3e332ca86739c864420d3d38540435f483cf47c1d91b6dc6eb427f77, step: getTransactionByID

commitRWLock - try to get lock, wait
 19078 test_net_peer0_org1 |2018-06-02 07:29:26.805 UTC [lockbasedtxmgr] Commit -> DEBU 3997 Committing updates to state database

------------------ 30s ---------------------

19515 test_net_peer0_org1 |2018-06-02 07:29:56.563 UTC [lockbasedtxmgr] Done -> DEBU 39c5 Done with transaction simulation / query execution [61d0b2badbe2a64aa5513a485cbb9eb9aee3771f59edade8840d41f5e6e20c74]
 commitRWLock - read unlock, because of timeout

commitRWLock - lock success
 19517 test_net_peer0_org1 |2018-06-02 07:29:56.563 UTC [lockbasedtxmgr] Commit -> DEBU 39c7 Write lock acquired for committing updates to state database

19531 test_net_peer0_org1 |2018-06-02 07:29:56.601 UTC [kvledger] CommitWithPvtData -> DEBU 39d5 Channel [notaryinfochannel]: Committing block [97] transactions to history database
 blockApisRWLock - unlock

19582 test_net_peer0_org1 |2018-06-02 07:29:56.601 UTC [lockbasedtxmgr] Commit -> DEBU 39d2 Updates committed to state database
 commitRWLock - unlock

20018 test_net_peer0_org1 |2018-06-02 07:29:56.635 UTC [qscc] getTransactionByID -> DEBU 3b46 Invoke function: GetTransactionByID on chain: 235f7b2e3e332ca86739c864420d3d38540435f483cf47c1d91b6dc6eb427f77, step: vledger.GetTransactionByID
 blockApisRWLock - read lock success
 blockApisRWLock - read unlock

 

******************************

*the following is the bug description*:

 *my operation*: _peer chaincode query -C mychannel -n qscc -c '

{""Args"":[""GetBlockByNumber"",""mychannel"",""1""]}

'_ （docker command line operation ）

*result:*  _Error: endorsement failure during query. response: status:500 message:""failed to execute transaction 5270da85cb878e93eb503db6e6d191a55aa760dd4318ebf08488c2ff1157205f: error sending: timeout expired while executing transaction""_

*_other information:_*  1. my chaincode `invoke` and `query` works

                                  2. my peer contains up 3 weeks, and it worked (chaincode including qscc invoke) until today","Ubuntu 16.04 TLS

Fabric v1.1.0",davidkhala,denyeart,jyellick,luoguohui,manish-sethi,osesov,srh666666,sykesm,yacovm,zerppen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9968,,,,,,,,,,,,FAB-11720,FAB-15285,,,,"05/Jun/18 12:35 PM;luoguohui;Untitled-2;https://jira.hyperledger.org/secure/attachment/15045/Untitled-2","05/Jun/18 12:35 PM;luoguohui;fabric_log;https://jira.hyperledger.org/secure/attachment/15046/fabric_log",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze07:",,,,,,,,,,,,,,,,,,,,,davidkhala,denyeart,jyellick,luoguohui,manish-sethi,osesov,srh666666,sykesm,yacovm,zerppen,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jun/18 6:28 PM;srh666666;Yeah,I also meet this question.  It should be a  fabric bug.  Any suggestions?;;;","06/Jun/18 5:37 AM;denyeart;[~manish-sethi] Could you take a look?;;;","06/Jun/18 12:40 PM;manish-sethi;[~luoguohui], [~srh666666], [~denyeart] - yes, I confirmed in the code and this is a bug in the interactions of call path of qscc and commit path. I'll think of a solution and submit a fix to both 1.1 and 1.2 branches. It may take a couple of days though.;;;","07/Jun/18 6:45 AM;manish-sethi;To add more details to it...

Ledger exposes two set of APIs one set of APIs relate to state reads and manipulation and the other set of APIs relate to querying the blockchain status (such as `{color:#000000}GetBlockByNumber` and `{color}{color:#000000}GetTransactionByID`). The first set of APIs are exposed via transaction simulator and (are meant for a chaincode to use during transaction simulation) and the second set of API are exposed as a direct APIs in the ledger interface (and are meant for clients to know the ledger status).{color}

{color:#000000} Keeping the above in mind, a tacit assumption in the ledger design has been that a single gorouting limits it's usage to one of the above set of APIs exclusively. A chaincode limits itself to state related APIs and a ledger status querying client would not need to create a simulator.{color}

{color:#000000}However, on the higher layers, since the ledger status related APIs are exposed via chaincode (`qscc`, to be specific), the above assumption is broken. The execution path for answering the ledger status queries obtains a transaction simulator before it reaches the qscc code (which has no use in fact, of the transaction simulator).{color}

{color:#000000}More specifically, an additional constraint on these two sets of APIs relates to the fact that two independent external calls to any of the ledger API should give a perceived notion of atomic commit to the block storage and the state. For instance, this should not happen that a client queries the API `{color}{color:#000000}GetBlockchainInfo` and finds out that block number 10 is committed but when he submits a subsequent state query, the query returns the state as of block 9 (because, the state update for block 10 are still pending). This is implemented by a pair of locks One lock syncs the state between simulation and statedb commit and another syncs the ledger status related calls with the overall commit. This is done for achieving better performance by halting the simulation to a minimum (only when the updates are actually been dumped to the disk) at the cost of ledger status related queries. Because, the qscc takes a transaction simulator, the above mentioned interaction leads to the reported deadlock. I believe that going forward, one of the suggestions was to expose these ledger status related APIs via grpc interface which will fix this issue. However, I list below three options for completeness...{color}
 * {color:#000000}qscc path not to take hold of a transaction simulator (which is desired otherwise also, as the transaction simulator is an expensive resource as it takes a read lock on the statedb to sync with commit and hence should be taken only for transaction simulations).{color}
 * {color:#000000}An alternate fix could be to implement the above mentioned perceived notion of atomic commit to the block storage and the state by a coarser level single lock but that will impact the throughput an not a desired solution.{color}
 * {color:#000000}Implement the perceived notion of atomic commit yet differently.. which requires some significant work in the interaction between ledger storage and the statedb. In nut shell, exposing the ledger storage a two phase commit. In first step, we append the block and then in the second step, update the BlockchainInfo and blockindexes sunchronized with statedb updates.{color}

{color:#000000}Given, the above, since the first one is anyway desired, my suggestion would be fix that for 1.1 and 1.2. {color}

{color:#000000}Though, the third option can be taken up post 1.2. However, to take a note specifically, the third option won't add much value as such other than the fact that the wrong usage of APIs (such as the transaction simulator in the qscc) will not lead to deadlock situation.. which I am not sure is a good thing or bad (as unintended usage go undetected){color};;;","07/Jun/18 7:04 AM;manish-sethi;Removing myself from the assignee till we decide on the potential fix... including [~sykesm] in loop for his comments on chaincode related aspect;;;","07/Jun/18 12:47 PM;denyeart;I would tend to agree that there is no reason for QSCC to be implemented as chaincode, since it doesn't interact with chaincode state data. It does seem more appropriate for the block and transaction APIs to be simple peer grpc APIs rather than chaincode.

The complete refactoring of QSCC would be a larger change, perhaps for v2.0.  For v1.x releases, would it be possible for the system chaincodes that don't interact with chaincode state to not get a handle to transaction simulator, since it doesn't use it anyway?

[~sykesm] , since you have been taking on peer/chaincode refactoring, what do you think?;;;","09/Jun/18 6:50 AM;sykesm;{quote}since you have been taking on peer/chaincode refactoring{quote}

To be clear, I have not taken on any real refactoring; I have not been given that opportunity due to other requirements (eg. test) and lack of resources (no team). The only refactoring that has occurred is in chaincode support - which has nothing to do with how the ledger is managed or the locking that's done.

{quote}what do you think?{quote}

I believe that the current design of system chaincode is problematic. It makes little sense to treat all core pieces of the system as ""chaincode"" but that has been the design goal for much of the history of fabric. To that end, I agree that replacing qscc with a grpc service is not going to happen without significant planning and on a release boundary.

{quote}would it be possible for the system chaincodes that don't interact with chaincode state to not get a handle to transaction simulator, since it doesn't use it anyway?{quote}

Probably. The simulators are created in the endorser and just flow through the chaincode layer. (Even though it seems like a bad idea, the endorser already has special cases for lscc and deployment.) Most of the references to the simulator look conditional so it might work without any changes.

Regardless, this is something someone familiar with the endorser should be looking through. As far as I can tell, all of the locking that's taking place is between the ledger and endorser.

It's also interesting the the RLock being acquired out of GetTransactionByID was recently added in commit #f17d1d934c / [FAB-7595] at the end of the 1.1 cycle to address a race. So, where there was one lock (in the tx manager), now there are two. This is recent.

[~manish-sethi][~denyeart] Seems like an offline discussion is needed on this as that would be much more effective than assigning to various people to comment on.;;;","09/Jun/18 7:00 AM;sykesm;Setup 15 minute discussion for Monday.;;;","12/Jun/18 12:31 AM;manish-sethi;After the offline discussion with [~sykesm], its decided that [~yacovm] / [~muralisr] may like to take a call on this.;;;","12/Jun/18 12:41 AM;sykesm;To be clear, option 1 (skip acquisition of tx simulator for qscc) seems the most straightforward tactical approach but I'm wary of unintended side effects; someone with more context should weigh in.;;;","12/Jun/18 4:45 AM;yacovm;So [~manish-sethi] basically the scenario is:
 # *T1*: Block is committed and *A* is locked for *write*
 # *T2*: QSCC ""transaction"" arrives, *B* is locked for *read*
 # *T2*: QSCC fails to obtain *read* lock on *A* since it's held by *T1*
 # *T1*: State updates can't start because they wait for *write* lock on *B* which is held by *T2*

?
{quote}but I'm wary of unintended side effects; someone with more context should weigh in.
{quote}
I can't say I have more context, but I think that what [~denyeart] said is pretty much accurate:
{quote}system chaincodes that don't interact with chaincode state
{quote}
We have 2 of these - QSCC and CSCC (ESCC and VSCC are.... ""not invokable"" ;) so we're safe)
 From a quick glance on QSCC - it just interacts with the ledger and CSCC just writes or reads references to the peer, but it can be nice if [~jyellick] can also take a look since he implemented some of the stuff that CSCC invokes transitively.

So I think that if we not grab the tx simulator at the endorser for cscc and qscc we should be good.

 [~denyeart] :
{quote}I would tend to agree that there is no reason for QSCC to be implemented as chaincode, since it doesn't interact with chaincode state data. It does seem more appropriate for the block and transaction APIs to be simple peer grpc APIs rather than chaincode.
{quote}
You mean a gRPC service like [the one we almost had|https://gerrit.hyperledger.org/r/#/c/15107/]? ;);;;","12/Jun/18 4:49 AM;yacovm;oh... and - last but not least... [~denyeart] this incident seems to me like a perfect addition to SVT suite - invoke all SCCs during heavy block commit, so we have cases like this covered. 
+ We might also want to do a similar thing with private data, no? Induce a heavy commit load and do endorsements of private data at the same time (but not send them to the orderer, to not prolong the commit time and thus increase the lock/unlock rate)

 

wdyt?;;;","12/Jun/18 4:52 AM;manish-sethi;{quote}
 # *T1*: Block is committed and *A* is locked for *write*
 # *T2*: QSCC ""transaction"" arrives, *B* is locked for *read*
 # *T2*: QSCC fails to obtain *read* lock on *A* since it's held by *T1*
 # *T1*: State updates can't start because they wait for *write* lock on *B* which is held by *T2*

{quote}

yes [~yacovm] - this is correct and as you said further, the (2) above is unnecessary.;;;","12/Jun/18 5:03 AM;yacovm;[~luoguohui] - very nice catch and thank you very much for the find. ;;;","12/Jun/18 11:19 PM;jyellick;> From a quick glance on QSCC - it just interacts with the ledger and CSCC just writes or reads references to the peer, but it can be nice if Jason Yellick can also take a look since he implemented some of the stuff that CSCC invokes transitively.

All of the channel config stuff is immutable and updated without locks, so no issues with the 'transitively invoked' stuff.;;;","13/Jun/18 3:52 AM;Clayton Sims;[~yacovm]   does ownership of fixing this go to Yacov?   ;;;","13/Jun/18 4:04 AM;yacovm;It does *not*, and it should be a pretty straight forward *fix*. Anyone can do it...;;;","13/Jun/18 10:58 PM;Clayton Sims;ok lets make sure we have someone fixing it.   what component is the fix;;;","14/Jun/18 4:47 AM;sykesm;https://gerrit.hyperledger.org/r/c/23039/;;;","15/Jun/18 2:20 AM;jyellick;The fix has been merged for v1.2, leaving open to track the needed fix for v1.1.1;;;","16/Jun/18 11:12 PM;denyeart;[https://gerrit.hyperledger.org/r/#/c/23043/] is the CR for v1.1.1.;;;","17/Jun/18 2:45 AM;denyeart;Merged in master (v1.2) and release-1.1.;;;","23/Aug/18 11:21 AM;zerppen;[~sykesm]  It maybe result in another bug,please check and test.;;;","23/Aug/18 6:27 PM;sykesm;> It maybe result in another bug

I agree. As such, please open a separate issue instead of reopening one that has been resolved and includes a test.

Thanks.;;;",,,
Ensure thread safety for amcl crypto library,FAB-10541,30881,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rtorres,dubovitskaya,dubovitskaya,05/Jun/18 7:31 PM,12/Sep/18 7:26 PM,28/Oct/23 3:03 AM,29/Jun/18 3:08 AM,v1.3.0,,,,,,,,v1.3.0,,,,,,,,0,idemix,sdk,,,,,,,dubovitskaya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABJ-327,,,,,,,,,"1|hzze53:",,,,,,,,,,,,,,,,,,,,,dubovitskaya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jun/18 8:21 PM;dubovitskaya;After we contacted the developers of the library, they have identified the issue and will update the maven artifact soon.

https://github.com/milagro-crypto/milagro-crypto-java/commit/c863348a978835c76cd6b94571b69aacf0d14804;;;","29/Jun/18 3:09 AM;dubovitskaya;The tests pass with the updated amcl library.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent fails in fabric unit tests due to gossip errors.,FAB-10544,30885,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,C0rWin,sambhavdutt,sambhavdutt,05/Jun/18 10:20 PM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,20/Sep/18 6:43 AM,v1.3.0,,,,,,,,v1.3.0,,,fabric-gossip,,,,,0,ci-failure,,,,,,"*cc* [~C0rWin]
The unit-tests are failing intermittently in the daily CI builds, the common error observed in these tests is [gossip/state] , [gossip/service] errors. 

*Fabric Commit: d126298*

{code:java}
20:31:51 unit-tests_1  | 2018-06-05 00:31:48.433 UTC [gossip/state] handleStateRequest -> ERRO 14d Wasn't able to read block with sequence number 16 from ledger, due to cannot retrieve block number 16, due to no block with seq = 16 found
20:31:51 unit-tests_1  | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).handleStateRequest
20:31:51 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:422
20:31:51 unit-tests_1  | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).processStateRequests
20:31:51 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:369
20:31:51 unit-tests_1  | runtime.goexit
20:31:51 unit-tests_1  | 	/opt/go/src/runtime/asm_amd64.s:2361 skipping....
==================================================================

23:52:53 unit-tests_1  | FAIL
23:52:53 unit-tests_1  | coverage: 80.7% of statements
23:52:53 unit-tests_1  | FAIL	github.com/hyperledger/fabric/gossip/service	250.165s
23:53:39 unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/state	44.662s	coverage: 79.6% of statements
23:53:41 unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/state/mocks	0.030s	coverage: 58.8% of statements
23:53:46 unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/util	4.042s	coverage: 78.2% of statements
23:53:47 unittest_unit-tests_1 exited with code 1
23:53:47 Stopping couchdb ... 
===================================================================
{code}

*Build Log*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-unit-test-coverage-daily-master-x86_64/82/",,C0rWin,denyeart,rameshthoomu,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11894,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze5j:",,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,rameshthoomu,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/18 12:00 AM;scottz;How often does this occur? How many days per week? How many tests per day?;;;","11/Jun/18 10:40 PM;sambhavdutt;The unit tests are failing again , with the Gossip failure. This is happening once or maybe twice a week, but mainly with the same error which can be looked at. The latest fail is posted below, this has failed in the last build, was successful in the build before.

*fabric Commit: 8e98c25*


{code:java}
*20:20:19* {color:#cdcd00}unit-tests_1  |{color} --- FAIL: TestLeaderYield (117.02s)*20:20:19* {color:#cdcd00}unit-tests_1  |{color} 	integration_test.go:156: p0 started its delivery service*20:20:19* {color:#cdcd00}unit-tests_1  |{color} 	integration_test.go:161: p0 stopped its delivery service*20:20:19* {color:#cdcd00}unit-tests_1  |{color} 	integration_test.go:171: p1 hasn't taken over leadership within 1m0s: -1*20:20:19* {color:#cdcd00}unit-tests_1  |{color} {color:#cd0000}2018-06-11 00:19:33.967 UTC [gossip/service] updateAnchors -> ERRO 07e{color} Tried joining channel A but our org( OrgMSP0 ), isn't among the orgs of the channel: [Org0] , aborting.
{code}


*Build Log*
https://jenkins.hyperledger.org/view/Daily/job/fabric-unit-test-daily-master-x86_64/84/consoleFull

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-unit-test-daily-master-x86_64/84/;;;","14/Jun/18 10:22 PM;denyeart;Fix not required for v1.2 per se, but let's keep this in the list to fix sooner than later.;;;","23/Jul/18 11:32 PM;sambhavdutt;The unit-test is failing in the daily tests due to gossip errors, Noticed the following errors in this order. The unit-test failed in *fabric-unit-test-daily-master-x86_64* twice in a row.

*FABRIC COMMIT: 42ea3f5a*

{code:java}
20:27:35 unit-tests_1  | 2018-07-23 00:27:04.311 UTC [gossip/privdata] NewCoordinator -> WARN 001 Configuration key peer.gossip.pvtData.transientstoreMaxBlockRetention isn't set, defaulting to 1000
20:27:35 unit-tests_1  | 2018-07-23 00:27:04.318 UTC [gossip/state] directMessage -> ERRO 004 Got nil message via end-to-end channel, should not happen!

20:27:35 unit-tests_1  | 2018-07-23 00:27:20.586 UTC [gossip/state] handleStateRequest -> ERRO 08d cannot read block number 11 from ledger, because no block with seq = 11 found, skipping...
20:27:35 unit-tests_1  | 2018-07-23 00:27:20.586 UTC [gossip/state] handleStateRequest -> ERRO 08e cannot read block number 11 from ledger, because no block with seq = 11 found, skipping...
20:27:35 unit-tests_1  | 2018-07-23 00:27:20.587 UTC [gossip/state] requestBlocksInRange -> WARN 08f Wasn't able to process state response for blocks [11...11], due to Received state transfer response without payload
20:27:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).handleStateResponse
20:27:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:470
20:27:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).requestBlocksInRange
20:27:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:662
20:27:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).antiEntropy
20:27:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:599
20:27:35 unit-tests_1  | runtime.goexit
20:27:35 unit-tests_1  | 	/opt/go/src/runtime/asm_amd64.s:2361
20:27:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).requestBlocksInRange
20:27:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:665
20:27:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).antiEntropy
20:27:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:599
20:27:35 unit-tests_1  | runtime.goexit
20:27:35 unit-tests_1  | 	/opt/go/src/runtime/asm_amd64.s:2361
20:27:35 unit-tests_1  | 2018-07-23 00:27:20.587 UTC [gossip/state] handleStateRequest -> ERRO 090 cannot read block number 11 from ledger, because no block with seq = 11 found, skipping...
{code}

*Build Logs*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-unit-test-daily-master-x86_64/135/

https://jenkins.hyperledger.org/view/Daily/job/fabric-unit-test-daily-master-x86_64/135/consoleFull
;;;","03/Aug/18 12:53 AM;sambhavdutt;This is the latest observed fail in unit-tests-master due to the Gossip error, 

*fabric Commit: 3f56d49*

{code:java}
20:22:51 unit-tests_1  | --- FAIL: TestLeaderYield (117.02s)
20:22:51 unit-tests_1  | 	integration_test.go:156: p0 started its delivery service
20:22:51 unit-tests_1  | 	integration_test.go:161: p0 stopped its delivery service
20:22:51 unit-tests_1  | 	integration_test.go:171: p1 hasn't taken over leadership within 1m0s: -1
20:22:51 unit-tests_1  | 2018-08-02 00:22:04.614 UTC [gossip/service] updateAnchors -> ERRO 088 Tried joining channel A but our org( OrgMSP0 ), 
{code}

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-unit-test-daily-master-x86_64/146/consoleFull

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-unit-test-daily-master-x86_64/146/
;;;","11/Aug/18 3:47 AM;sambhavdutt;There is another unit-test failure observed in the day's build due to Gossip test timeouts in fabric-unit-test-daily-master-x86_64,

*fabric commit: b0cb0a4*


{code:java}
20:25:04 unit-tests_1  | goroutine 24584 [select]:
20:25:04 unit-tests_1  | github.com/hyperledger/fabric/gossip/identity.(*identityMapperImpl).periodicalPurgeUnusedIdentities(0xc423587340)
20:25:04 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:91 +0x11c
20:25:04 unit-tests_1  | created by github.com/hyperledger/fabric/gossip/identity.NewIdentityMapper
20:25:04 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:85 +0x228
20:25:04 unit-tests_1  | 
20:25:04 unit-tests_1  | go<<<TestConnectToAnchorPeers>>>
20:25:04 unit-tests_1  | --- FAIL: TestConnectToAnchorPeers (367.07s)
20:25:04 unit-tests_1  | 	assertions.go:247: 
                          
	Error Trace:	gossip_test.go:1530
20:25:04 unit-tests_1  | 		
	            	
			asm_amd64.s:2361
20:25:04 unit-tests_1  | 		
	Error:      	Didn't stop within a timely manner
20:25:04 unit-tests_1  | 		
	Test:       	TestConnectToAnchorPeers
20:25:04 unit-tests_1  | 	assertions.go:247: 
                          
	Error Trace:	gossip_test.go:1590
20:25:04 unit-tests_1  | 		
	            	
			gossip_test.go:474
20:25:04 unit-tests_1  | 		
	Error:      	Timeout expired!
20:25:04 unit-tests_1  | 		
	Test:       	TestConnectToAnchorPeers
20:25:04 unit-tests_1  | 	assertions.go:247: 
                          
	Error Trace:	gossip_test.go:1590
{code}

*Build Log*
https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-unit-test-daily-master-x86_64/155/

https://jenkins.hyperledger.org/view/Daily/job/fabric-unit-test-daily-master-x86_64/155/consoleFull;;;","27/Aug/18 12:03 AM;sambhavdutt;fabric-merge-x86_64 failed in gossip tests, Copying the errors below,

*fabric Commit: 8df055572b21286b7a96467d512e3ef054b786a2*

{code:java}
08:46:02 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:960 +0x1b5
08:46:02 unit-tests_1  | created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).connect
08:46:02 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/--- FAIL: TestEndedGoroutines (432.59s)
08:46:02 unit-tests_1  | 	assertions.go:247: 
                          
	Error Trace:	gossip_test.go:1494
08:46:02 unit-tests_1  | 		
	            	
			gossip_test.go:1365
08:46:02 unit-tests_1  | 		
	Error:      	Goroutine(s) haven't ended:
08:46:02 unit-tests_1  | 		
	Test:       	TestEndedGoroutines
08:46:02 unit-tests_1  | 		
	Messages:   	[sync.runtime_Semacquire(0xc4223a2494) 	/opt/go/src/runtime/sema.go:56 +0x39 sync.(*RWMutex).RLock(0xc4223a2488) 	/opt/go/src/sync/rwmutex.go:50 +0x49 github.com/hyperledger/fabric/gossip/comm.(*connectionStore).getConnection(0xc4223a2460, 0xc426eee510, 0x0, 0x0, 0x0) 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/conn.go:57 +0x65 github.com/hyperledger/fabric/gossip/comm.(*commImpl).sendToEndpoint(0xc420ab57a0, 0xc426eee510, 0xc423f1ec10, 0x0) 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:244 +0x1d0 github.com/hyperledger/fabric/gossip/comm.(*commImpl).Send.func1(0xc420ab57a0, 0xc426eee510, 0xc423f1ec10) 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:231 +0x44 created by github.com/hyperledger/fabric/gossip/comm.(*commImpl).Send 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:230 +0x1ac]
08:46:02 unit-tests_1  | FAIL
{code}

*Build Logs*

https://jenkins.hyperledger.org/view/birds-eye/job/fabric-merge-x86_64/4390/consoleFull

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-merge-x86_64/4390/
;;;","06/Sep/18 4:49 AM;sambhavdutt;In the *fabric-merge-x86_64* job, unit-test is failing consistently in gossip tests, 

*fabric commit: fb2ce97a848ac369457884d860b11c8e4a948377*
{code:java}
15:33:18 unit-tests_1  | goroutine 594 [semacquire, 19 minutes]:
15:33:18 unit-tests_1  | sync.runtime_Semacquire(0xc4202b7f2c)
15:33:18 unit-tests_1  | 	/opt/go/src/runtime/sema.go:56 +0x39
15:33:18 unit-tests_1  | sync.(*WaitGroup).Wait(0xc4202b7f20)
15:33:18 unit-tests_1  | 	/opt/go/src/sync/waitgroup.go:129 +0x72
15:33:18 unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).Stop(0xc42031c000)
15:33:18 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:781 +0x1f7
15:33:18 unit-tests_1  | github.com/hyperledger/fabric/gossip/service.(*gossipServiceImpl).Stop(0xc4204c0120)
15:33:18 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:364 +0x4c0
15:33:18 unit-tests_1  | github.com/hyperledger/fabric/gossip/service.stopPeers.func1(0xc4202b7f00, 0x1, 0x10e95e0, 0xc4204c0120)
15:33:18 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service_test.go:604 +0x5a
15:33:18 unit-tests_1  | created by github.com/hyperledger/fabric/gossip/service.stopPeers
15:33:18 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service_test.go:602 +0x99
15:33:18 unit-tests_1  | FAIL	github.com/hyperledger/fabric/gossip/service	1200.042s
15:33:51 unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/state	30.382s	coverage: 80.3% of statements
15:33:53 unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/state/mocks	0.006s	coverage: 58.8% of statements
15:33:59 unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/util	4.010s	coverage: 79.1% of statements
15:34:00 unit-test_unit-tests_1 exited with code 1
15:34:00 Stopping couchdb                ... 
{code}

*Build Logs*

https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/4458/consoleFull

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-merge-x86_64/4460/;;;","11/Sep/18 1:02 PM;denyeart;[~sambhavdutt] [~C0rWin] [~yacovm] Is this still happening? Any plan?;;;","20/Sep/18 5:20 AM;denyeart;[~C0rWin] [~yacovm] Do you want to investigate more, move to FixVersion v1.4.0, or Withdraw/Close?;;;","20/Sep/18 6:11 AM;C0rWin;[~denyeart] I'd personally would prefer to close this one is it's scope too broad IMO, since ppl kept posting here everything. While some of reported issues has been taken care already. //cc [~yacovm]

PS. For instance one reported in description has been taken care of here: https://gerrit.hyperledger.org/r/#/c/26129/;;;","20/Sep/18 6:43 AM;denyeart;[~sambhavdutt] closing this one.

Please open *separate* Jira issue for each unique unit test failure that happens multiple times, so that they can be tracked down and fixed one by one.;;;","20/Sep/18 7:04 AM;C0rWin;[~denyeart], [~sambhavdutt] please see: FAB-12068, FAB-12067, FAB-12066 and FAB-12065. Created them as a bug, maybe we need to group them under one story or epic wdyt [~denyeart]?
;;;","20/Sep/18 7:22 AM;denyeart;[~C0rWin] thanks.  now we can comment on each one whenever we see them, to try to understand relative frequencies/priorities.

I've labeled each as *flakes* , so that we can query to find all the open unit test flakes.  I think that's all the grouping we need.;;;",,,,,,,,,,,,,
extend peer runner to allow some e2e tests,FAB-10545,30887,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,nirro,nirro,05/Jun/18 10:54 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,13/Jun/18 10:15 PM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,e2e-test,,,,,,"need to extend peer runner to be able to call channel getinfo function.
will be used later in private data e2e tests",,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzwqfk:j",,,,,,To Do,,,,,,,,,,,,,,,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Jun/18 9:12 PM;nirro;https://gerrit.hyperledger.org/r/#/c/22773/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Images broken in Fabric doc,FAB-10546,30889,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,joe-alewine,joe-alewine,05/Jun/18 11:40 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,14/Jun/18 8:45 PM,v1.1.0,,,,,,,,v1.1.0,v1.2.0,,fabric-docs,,,,,0,Documentation,,,,,,"!screenshot-hyperledger-fabric.readthedocs.io-2018-06-04-17-07-41.png!

These images are broken.",,ChristopherFerris,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jun/18 11:39 PM;joe-alewine;screenshot-hyperledger-fabric.readthedocs.io-2018-06-04-17-07-41.png;https://jira.hyperledger.org/secure/attachment/15047/screenshot-hyperledger-fabric.readthedocs.io-2018-06-04-17-07-41.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze5z:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jun/18 5:21 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/22959;;;","12/Jun/18 5:27 AM;ChristopherFerris;[https://gerrit.hyperledger.org/r/22961]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
MockStub should support GetDecorations,FAB-10548,30892,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bur,bur,bur,06/Jun/18 12:28 AM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,14/Jul/18 11:06 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"Current MockStub does not implement _GetDecorations() _
This would be useful for chaincode development that uses decorators.",,bur,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzze6f:",,,,Unset,,,,,,Unset,,,,,,,,,,,bur,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/18 1:36 AM;bur;https://gerrit.hyperledger.org/r/#/c/23541/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test-daily fails in OTE tests as an extra TX block was created in the last build(# 373).,FAB-10550,30894,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid: Works as Expected,scottz,sambhavdutt,sambhavdutt,06/Jun/18 1:40 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,03/Oct/18 3:30 AM,,,,,,,,,Future,,,fabric-quality,,,,,0,ci-failure,,,,,,"OTE tests failed in the last CI build (#373) as one extra TX block was created by orderer service,

*fabric-test Commit: e8e30a3*

{code:java}
TEST FAB-7075 BAD! Some EXTRA TX were delivered by orderer service! RESULT=FAILED: TX Req=15000 BrdcstACK=15000 NACK=0 DelivBlk=[327 327 327] 
DelivTX=[15001 15001 15001] numChannels=1 batchSize=500 TPS=163
Removing the Network Consumers

TEST FAB-7075 BAD! Some EXTRA TX were delivered by orderer service! RESULT=FAILED: TX Req=15000 BrdcstACK=15000 NACK=0 DelivBlk=[327 327 327] DelivTX=[15001 15001 15001] numChannels=1 batchSize=500 TPS=163
Removing the Network Consumers
{code}

*Build Log*
https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/373/testReport/orderer_ote/perf_orderer/test_FAB_7075_3ord_kafka_1ch_500batchsize_10kpayload/

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-daily-x86_64/373/",,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10840,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze6v:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jun/18 12:19 AM;sambhavdutt;OTE test failed as one extra TX was received([CI-Build #374|https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/374/consoleFull]) *orderer_ote.perf_orderer.test_FAB_7037_3ord_kafka_1ch_500batchsize*

*fabric-test Commit: 70271dc*

{code:java}
PRODUCERS   OrdererIdx  ChannelIdx ChannelID              TX Target         ACK        NACK
                     0           0 testorgschannel1           10000       10000           0
                     1           0 testorgschannel1           10000       10000           0
                     2           0 testorgschannel1           10000       10000           0
CONSUMERS   OrdererIdx  ChannelIdx ChannelID                    TXs     Batches
                     0           0 testorgschannel1           30001          64
                     1           0 testorgschannel1           30001          64
                     2           0 testorgschannel1           30001          64
GOOD block count received 64 (expected 60) on ordIndx=0 channelIDs[0]=testorgschannel1 chanSentTxTotal=30000 BatchSize=500
GOOD block count received 64 (expected 60) on ordIndx=1 channelIDs[0]=testorgschannel1 chanSentTxTotal=30000 BatchSize=500
GOOD block count received 64 (expected 60) on ordIndx=2 channelIDs[0]=testorgschannel1 chanSentTxTotal=30000 BatchSize=500
Not counting genesis blks (1 per chan)        1
Total TX broadcasts Requested to Send     30000
Total TX broadcasts send success ACK      30000
Total TX broadcasts sendFailed - NACK         0
Total Send-LOST TX (Not Ack or Nack))         0
Total Recv-LOST TX (Ack but not Recvd)       -1 
Total deliveries received TX on each ordrr     [  30001   30001   30001]
Total deliveries received Blocks on each ordrr [     64      64      64]
THROUGHPUT TPS = 260 , FAB-7037 using batchSize=500 numChannels=1 numOrdsInNtwk=3 ordType=kafka numKafkaBrokers=5
TPS - Overall Transactions per second       260
TPS per channel                             260
TPS per orderer                              86
BPS - Overall Blocks per second               0
BPS per channel                               0
BPS per orderer                               0
TEST FAB-7037 BAD! Some EXTRA TX were delivered by orderer service! RESULT=FAILED: TX Req=30000 BrdcstACK=30000 NACK=0 DelivBlk=[64 64 64] DelivTX=[30001 30001 30001] numChannels=1 batchSize=500 TPS=260
Removing the Network Consumers
Consumer-o2-c0 CLOSING. Totals received numtrans=30002 numBlocks=65, 2018-06-06 12:49:10.952300865 +0000 UTC m=+432.451570698
Consumer-o1-c0 CLOSING. Totals received numtrans=30002 numBlocks=65, 2018-06-06 12:49:10.952360014 +0000 UTC m=+432.451629907
--- FAIL: Test_FAB7037_1ch_3ord_5kb_500batchsize (432.37s)
	ote_test.go:382: TEST FAB-7037 BAD! Some EXTRA TX were delivered by orderer service! RESULT=FAILED: TX Req=30000 BrdcstACK=30000 NACK=0 DelivBlk=[64 64 64] DelivTX=[30001 30001 30001] numChannels=1 batchSize=500 TPS=260
Consumer-o0-c0 CLOSING. Totals received numtrans=30002 numBlocks=65, 2018-06-06 12:49:10.952490427 +0000 UTC m=+432.451760203
FAIL
exit status 1
FAIL	github.com/hyperledger/fabric/OTE	432.460s
{code}

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/374/testReport/orderer_ote/perf_orderer/test_FAB_7037_3ord_kafka_1ch_500batchsize/

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-daily-x86_64/374/
;;;","08/Jun/18 11:41 PM;scottz;This only happens rarely - but it has happened before. We should turn on debug logs in the orderer (and sarama/kafka) and try a test many times to reproduce it and capture logs.

Or add some code to the OTE to examine the receive TX IDs, and look to identify duplicates.

And/or add another orderer (spy) to retrieve all the transactions at the end of the test, and see if there are exactly 15000 or if an extra one is seen.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
fabric-sdk-go Benchmarks (Channel Client),FAB-10552,30897,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Baha-sk,Baha-sk,Baha-sk,06/Jun/18 2:57 AM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,14/Jul/18 8:48 AM,,,,,,,,,,,,fabric-sdk-go,,,,,0,,,,,,,Need to run benchmark on Channel Client operations using a real user (not mocked) to ensure the GO SDK is performing well.,,Baha-sk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzze7b:",,,,Unset,,,,,,Unset,,,,,,,,,,,Baha-sk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric-sdk-node jobs configuration to pull images from nexus,FAB-10553,30898,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,jtclark,jtclark,jtclark,06/Jun/18 3:59 AM,27/Jul/18 3:44 PM,28/Oct/23 3:03 AM,27/Jul/18 3:44 PM,v1.2.0,,,,,,,,,,,fabric-ci,,,,,0,CI_Release,,,,,,"Update fabric-sdk-node job configuration to pull images from nexus and run the e2e tests. This eliminates building docker images happens on every fabric-sdk-node patchsets.

https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/ publishes fabric & fabric-ca  ""stable"" tagged docker images to nexus and pull these images in the SDK jobs to eliminate building docker images again and again.

Note: After this change is merged in CI, SDK's no more clone/pull the fabric and fabric-ca repos and build images on the latest commit but it looks for the ""stable"" image which CI published from the fabric-merge-e2e-x86_64 job.",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10068,,,,,,,,,"1|hzze7j:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/18 11:56 AM;jtclark;Comments from [~rameshthoomu]:

Refer this script to pull images and binaries from nexus https://github.com/hyperledger/fabric-test/blob/master/scripts/pullDockerImages.sh;;;","21/Jun/18 7:06 PM;jtclark;Patch set is *IN-PROGRESS*: https://gerrit.hyperledger.org/r/#/c/23439/;;;","29/Jun/18 9:26 AM;jtclark;Patch set was *REBASED*: https://gerrit.hyperledger.org/r/#/c/23439/;;;","27/Jul/18 3:44 PM;rameshthoomu;This has been addressed with pipeline CI configuration. https://gerrit.hyperledger.org/r/#/c/24841/;;;",,,,,,,,,,,,,,,,,,,,,,,
Network Launcher supports V1.2 capability,FAB-10554,30899,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,06/Jun/18 4:22 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,07/Jun/18 2:09 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,Network Launcher supports V1.2,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6742,,,,,,,,,"1|hzze7r:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"06/Jun/18 4:43 AM;dongming;[https://gerrit.hyperledger.org/r/#/c/22797/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE supports mutual TLS,FAB-10555,30900,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,06/Jun/18 4:45 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/Jun/18 3:56 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,PTE supports mutual TLS,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzze7z:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jun/18 3:16 AM;dongming;https://gerrit.hyperledger.org/r/#/c/23227/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Stop using Burrow ZeroAddress,FAB-10557,30910,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,swetharepakula,swetharepakula,swetharepakula,06/Jun/18 1:49 PM,21/Aug/18 5:20 AM,28/Oct/23 3:03 AM,21/Aug/18 5:20 AM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"Burrow ZeroAddress is used for global permissions . In fabric-chaincode-evm, it is being incorrectly used to signal deployment of a new contract. Burrow recommends to use for `(*Address)(nil)` deployment",,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCE-4,,,,,,,,,"1|hzze8n:",,,,,,,,,,,,,,,,,,,,,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Blind writes to CouchDB fails on bulk update API,FAB-10558,30912,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,manish-sethi,denyeart,denyeart,06/Jun/18 7:12 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,17/Jun/18 11:03 PM,,,,,,,,,v1.2.0,,,fabric-ledger,,,,,0,,,,,,,"When testing private data as in FAB-10162, the transfer marble function shows a Warning:
{code:java}
2018-06-06 05:46:01.976 EDT [couchdb] BatchUpdateDocuments -> DEBU 80c Exiting BatchUpdateDocuments() _bulk_docs response=[[{""id"":""marble1"",""error"":""conflict"",""reason"":""Document update conflict.""}]
]
2018-06-06 05:46:01.976 EDT [statecouchdb] commitUpdates -> WARN 80d CouchDB batch document update encountered an problem. Retrying update for document ID:marble1{code}
The bulk update API _bulk_docs fails for the private key, causing a retry of individual documents, which ends up succeeding.  

The bulk update API works for the hashed key.

The difference is that with the hashed key, the couchdb revision is already in the cache from the MVCC check, and it gets placed correctly in the bulk docs JSON, like this:
{code:java}
{
   ""docs"":[
      {
         ""_attachments"":{
            ""valueBytes"":{
               ""content_type"":""application/octet-stream"",
               ""data"":""mFJRmeLWhOm91wzwzoMaNuy+cofgYZH13EIS6g8BfLw=""
            }
         },
         ""_id"":""Xh+Ub+BxXeA2bQnoSAutdnKiNVFXApsN37yVhQ8EVw4="",
         ""_rev"":""1-d52448bfeb0fde7cc02163f804861cc6"",
         ""~version"":""4:0""
      }
   ]
}{code}
However with the private key, it is a blind write (no entry in readset), which means that the couchdb revision is not yet in the cache.  Note that the revision is missing in the bulk docs JSON:

 
{code:java}
{
   ""docs"":[
      {
         ""_id"":""marble1"",
         ""color"":""blue"",
         ""docType"":""marble"",
         ""name"":""marble1"",
         ""owner"":""jerry"",
         ""size"":35,
         ""~version"":""4:0""
      }
   ]
}{code}
Interestingly, the missing revision did kick off a batch retrieve as expected, to retrieve the revision id:
{code:java}
2018-06-06 05:46:01.971 EDT [couchdb] BatchRetrieveDocumentMetadata -> DEBU 7fb Entering BatchRetrieveDocumentMetadata()  keys=[marble1]
2018-06-06 05:46:01.971 EDT [couchdb] handleRequest -> DEBU 7fc Entering handleRequest()  method=POST  url=http://127.0.0.1:5984/mycp_marblesp$$pcollection$marbles/_all_docs?include_docs=true{code}
But somehow the revision id did not make it into the eventual bulk docs update API JSON.

I suspect the problem got introduced during the CouchDB batch processing refactor  [https://gerrit.hyperledger.org/r/#/c/19093/] , but wasn't noticed initially since the individual retries would hide any problem with the bulk API.",,chris.elder,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10634,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwu33:",,,,,,Next Items- Ledger,,,,,,,,,,,,,,,chris.elder,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Jun/18 10:01 PM;Clayton Sims;[~manish-sethi]  who should own this one, while Dave is out?;;;","08/Jun/18 10:48 PM;denyeart;[~Clayton Sims] This typically would fall in the area of [~chris.elder], but [~manish-sethi] did some refactoring that is at play here, so I think they'll need to work together on it.  I'll assign to Chris.;;;","10/Jun/18 6:03 AM;manish-sethi;https://gerrit.hyperledger.org/r/#/c/22909/

Thanks [~denyeart] for noticing this in the logs. It was a silly mistake :)

However, some of this code still need further refactoring so that a unit-test could be written so that these kind of bugs can be caught early on.I have created a JIRA for this FAB-10593.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Errors in peer log when doing CouchDB JSON queries against private data,FAB-10559,30914,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,denyeart,denyeart,06/Jun/18 7:40 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,15/Jun/18 6:36 PM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"When testing private data against CouchDB as documented in FAB-10162, CouchDB JSON queries work against private data, however in the peer log we get error messages.

Sample query:

peer chaincode {color:#000000}query{color} {color:#000000}-C mycp{color} -n marbles{color:#000000}p{color} -c '\{""Args"":[""{color:#000000}query{color}Marbles{color:#000000}By{color}Owner"",""{color:#000000}tom{color}""]}'

Sample peer log with errors:
{code:java}
2018-06-06 06:28:43.941 EDT [couchdb] QueryDocuments -> DEBU 90d Adding json docment for id: marble1
2018-06-06 06:28:43.941 EDT [couchdb] QueryDocuments -> DEBU 90e Exiting QueryDocuments()
2018-06-06 06:28:43.941 EDT [statecouchdb] ExecuteQuery -> DEBU 90f Exiting ExecuteQuery
2018-06-06 06:28:43.941 EDT [chaincode] HandleGetQueryResult -> DEBU 910 Got keys and values. Sending RESPONSE
2018-06-06 06:28:43.941 EDT [chaincode] HandleTransaction -> DEBU 911 [9a962e30] Completed GET_QUERY_RESULT. Sending RESPONSE
2018-06-06 06:28:43.942 EDT [chaincode] handleMessage -> DEBU 912 [mycp] Fabric side handling ChaincodeMessage of type: QUERY_STATE_CLOSE in state ready
2018-06-06 06:28:43.942 EDT [chaincode] HandleTransaction -> DEBU 913 [mycp] handling QUERY_STATE_CLOSE from chaincode
2018-06-06 06:28:43.942 EDT [chaincode] isValidTxSim -> ERRO 914 no ledger context
github.com/hyperledger/fabric/core/chaincode.(*Handler).isValidTxSim
    /Users/denyeart/work/src/github.com/hyperledger/fabric/core/chaincode/handler.go:503
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
    /Users/denyeart/work/src/github.com/hyperledger/fabric/core/chaincode/handler.go:237
runtime.goexit
    /usr/local/go/src/runtime/asm_amd64.s:2361
2018-06-06 06:28:43.942 EDT [chaincode] HandleTransaction -> ERRO 915 [mycp] Failed to handle QUERY_STATE_CLOSE. error: no ledger context
github.com/hyperledger/fabric/core/chaincode.(*Handler).isValidTxSim
    /Users/denyeart/work/src/github.com/hyperledger/fabric/core/chaincode/handler.go:503
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
    /Users/denyeart/work/src/github.com/hyperledger/fabric/core/chaincode/handler.go:237
runtime.goexit
    /usr/local/go/src/runtime/asm_amd64.s:2361
QUERY_STATE_CLOSE failed: transaction ID: mycp
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
    /Users/denyeart/work/src/github.com/hyperledger/fabric/core/chaincode/handler.go:246
runtime.goexit
    /usr/local/go/src/runtime/asm_amd64.s:2361
2018-06-06 06:28:43.942 EDT [chaincode] HandleTransaction -> DEBU 916 [mycp] Completed QUERY_STATE_CLOSE. Sending ERROR
2018-06-06 06:28:43.943 EDT [chaincode] handleMessage -> DEBU 917 [9a962e30] Fabric side handling ChaincodeMessage of type: COMPLETED in state ready
2018-06-06 06:28:43.943 EDT [chaincode] Notify -> DEBU 918 [9a962e30] notifying Txid:9a962e30b5c97ab77ed46115ef4458555936694011696da9febd1c62dc15aec7, channelID:mycp
2018-06-06 06:28:43.943 EDT [chaincode] Execute -> DEBU 919 Exit
2018-06-06 06:28:43.943 EDT [endorser] callChaincode -> DEBU 91a [mycp][9a962e30b5c97ab77ed46115ef4458555936694011696da9febd1c62dc15aec7] Exit
2018-06-06 06:28:43.943 EDT [lockbasedtxmgr] GetTxSimulationResults -> DEBU 91b Simulation completed, getting simulation results
2018-06-06 06:28:43.943 EDT [lockbasedtxmgr] Done -> DEBU 91c Done with transaction simulation / query execution [9a962e30b5c97ab77ed46115ef4458555936694011696da9febd1c62dc15aec7]{code}
The same query against normal channel data works without the error messages in peer log:
{code:java}
2018-06-06 06:27:30.717 EDT [couchdb] QueryDocuments -> DEBU 8a9 Adding json docment for id: marble1
2018-06-06 06:27:30.717 EDT [couchdb] QueryDocuments -> DEBU 8aa Exiting QueryDocuments()
2018-06-06 06:27:30.717 EDT [statecouchdb] ExecuteQuery -> DEBU 8ab Exiting ExecuteQuery
2018-06-06 06:27:30.717 EDT [lockbasedtxmgr] Next -> DEBU 8ac queryResultsItr.Next() returned a record:{""color"":""blue"",""docType"":""marble"",""name"":""marble1"",""owner"":""tom"",""size"":35}
2018-06-06 06:27:30.717 EDT [chaincode] HandleGetQueryResult -> DEBU 8ad Got keys and values. Sending RESPONSE
2018-06-06 06:27:30.717 EDT [chaincode] HandleTransaction -> DEBU 8ae [c6c4046a] Completed GET_QUERY_RESULT. Sending RESPONSE
2018-06-06 06:27:30.717 EDT [chaincode] handleMessage -> DEBU 8af [c6c4046a] Fabric side handling ChaincodeMessage of type: QUERY_STATE_CLOSE in state ready
2018-06-06 06:27:30.718 EDT [chaincode] HandleTransaction -> DEBU 8b0 [c6c4046a] handling QUERY_STATE_CLOSE from chaincode
2018-06-06 06:27:30.718 EDT [chaincode] HandleTransaction -> DEBU 8b1 [c6c4046a] Completed QUERY_STATE_CLOSE. Sending RESPONSE
2018-06-06 06:27:30.718 EDT [chaincode] handleMessage -> DEBU 8b2 [c6c4046a] Fabric side handling ChaincodeMessage of type: COMPLETED in state ready
2018-06-06 06:27:30.718 EDT [chaincode] Notify -> DEBU 8b3 [c6c4046a] notifying Txid:c6c4046ac565f329c82ec77f60d3b980ca22b4fe7fc2a448346baa5eb1c2994b, channelID:myc
2018-06-06 06:27:30.718 EDT [chaincode] Execute -> DEBU 8b4 Exit
2018-06-06 06:27:30.718 EDT [endorser] callChaincode -> DEBU 8b5 [myc][c6c4046ac565f329c82ec77f60d3b980ca22b4fe7fc2a448346baa5eb1c2994b] Exit
2018-06-06 06:27:30.718 EDT [lockbasedtxmgr] GetTxSimulationResults -> DEBU 8b6 Simulation completed, getting simulation results{code}",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze93:",,,,,,Next Items- Ledger,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer container died when running 3million transactions,FAB-10560,30915,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,suryalnvs,suryalnvs,06/Jun/18 8:46 PM,30/Jul/19 11:40 AM,28/Oct/23 3:03 AM,30/Jul/19 11:40 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"When running 3 million transactions (FAB-8384), one of 4 peers containers got killed with low resource on .nodefs when using kubernetes. Checked the disk space on the host and it is only around 60 percent used. Also, could not get the peer logs as the kubernetes evicted the peer and need to modify test framework to allow us to debug more on this kind of issues. Peer which is killed by kubernetes is having evicted in its status as shown below.
{code:java}
./kubectl --kubeconfig kubeconfig get pods
NAME              READY     STATUS    RESTARTS   AGE
ca1st-orga        1/1       Running   0          8h
ca1st-orgb        1/1       Running   0          8h
dockerendpoint    1/1       Running   0          8h
kafka1st          1/1       Running   1          8h
kafka2nd          1/1       Running   1          8h
kafka3rd          1/1       Running   1          8h
kafka4th          1/1       Running   1          8h
kafka5th          1/1       Running   2          8h
orderer1st-orgc   1/1       Running   0          8h
orderer2nd-orgc   1/1       Running   0          8h
orderer3rd-orgc   1/1       Running   0          8h
peer1st-orga      1/1       Running   0          8h
peer1st-orgb      1/1       Running   0          8h
peer2nd-orga      1/1       Running   0          8h
peer2nd-orgb      1/1       Evicted   0          8h
zookeeper1st      1/1       Running   0          8h
zookeeper2nd      1/1       Running   0          8h
zookeeper3rd      1/1       Running   0          8h
{code}",,mastersingh24,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze9b:",,,,,,,,,,,,,,,,,,,,,mastersingh24,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:40 AM;mastersingh24;been open over a year with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Move from 'dep' & 'govendor' to 'vgo' (Go Modules),FAB-10562,30918,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,pd93,pd93,06/Jun/18 9:46 PM,24/Apr/20 9:57 AM,28/Oct/23 3:03 AM,17/Apr/20 2:56 PM,,,,,,,,,v2.2.0,,,fabric-build,,,,,1,Chaincode,Golang,,,,,"*Edited 13/03/2019 to reflect the changes made to Golang's toolchain*

Now that modules are enabled by default in Golang v1.12, the Fabric team should consider what changes need to be made to the project to support this new dependency management system. You can read more about 'Go Modules' on the [Golang Wiki|https://github.com/golang/go/wiki/Modules].

Unlike existing dependency management tools such as 'govendor' or 'dep', modules are built into the toolchain and the go command itself. When you run 'go build', dependencies will automatically be downloaded for you (like dep does). Instead of a `Gopkg.lock` and `Gopkg.toml` files, 'go modules' use `go.mod` and `go.sum` files to track dependencies.

Adding module support will also allow things like vendored chaincode dependencies to be automatically downloaded and imported into our binary during install. This means *no more vendoring!*

Related:
- [FAB-8841|https://jira.hyperledger.org/browse/FAB-8841]
- [FAB-13667|https://jira.hyperledger.org/browse/FAB-13667]",,denyeart,medikent,MHBauer,pd93,pmcosta1,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13667,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzze9r:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,medikent,MHBauer,pd93,pmcosta1,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/May/19 5:06 AM;medikent;Are you implying avoiding use of the *go mod vendor* command as well? Running the *go mod init* and then *go mod vendor* commands worked for me when I was doing *peer chaincode install* inside a *fabric-tools* CLI container.;;;","26/Mar/20 2:49 AM;MHBauer;Is this only for v1.4? Is there a different work item for v2?

Is there other work that's been done already on this that shows obvious problems to be solved?;;;","28/Mar/20 8:04 AM;denyeart;[~sykesm] Do you have an opinion?;;;","30/Mar/20 2:03 AM;sykesm;We should move fabric to modules as soon as all all of the obstacles have been removed.

Unset GOPATH, create a {{go.mod}} and you'll see what shakes out; there is more than a trivial amount of work required.;;;","31/Mar/20 1:32 AM;sykesm;Example of an assumption:

{code}
--- FAIL: TestInitGossipService (0.00s)
panic: unable to find sampleconfig directory on gopath [recovered]
        panic: unable to find sampleconfig directory on gopath
{code};;;","31/Mar/20 1:55 PM;MHBauer;ok, I could use some help with the external builder [https://github.com/hyperledger/fabric/pull/954]

Everything else is solvable depending on the compromises we're willing to come to.;;;","17/Apr/20 2:56 PM;MHBauer;completed for releases  after fabric 2.1 as of [#1064|https://github.com/hyperledger/fabric/pull/1064] / [https://github.com/hyperledger/fabric/pull/1064/commits/7784fe2e8ff6b258e54f06fb8aa424cef312d1b5]

 ;;;",,,,,,,,,,,,,,,,,,,,
Update invoke command in BYFN tutorial,FAB-10563,30919,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,elainejlai,elainejlai,06/Jun/18 11:58 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:05 PM,,,,,,,,,,,,fabric-docs,,,,,0,Documentation,,,,,,"I believe the invoke command given in the BYFN tutorial is out of date. See the tutorial here: [http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#invoke]

 

Error messages:
 * Error: unknown flag: --peerAddresses
 * Error: unknown flag: --tlsRootCertFiles",,elainejlai,haibbo,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzze9z:",,,,,,,,,,,,,,,,,,,,,elainejlai,haibbo,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/18 1:27 AM;jyellick;These are new flags that were introduced in v1.2.  Are you certain you are using a matching version of the docs, binaries, and samples?;;;","16/Jun/18 1:37 AM;jyellick;Just confirmed with the latest peer binary:


{noformat}
peer chaincode invoke --help
Invoke the specified chaincode. It will try to commit the endorsed transaction to the network.

Usage:
  peer chaincode invoke [flags]

Flags:
  -C, --channelID string               The channel on which this command should be executed
      --connectionProfile string       Connection profile that provides the necessary connection information for the network. Note: currently only supported for providing peer connection information
  -c, --ctor string                    Constructor message for the chaincode in JSON format (default ""{}"")
  -h, --help                           help for invoke
  -n, --name string                    Name of the chaincode
      --peerAddresses stringArray      The addresses of the peers to connect to
      --tlsRootCertFiles stringArray   If TLS is enabled, the paths to the TLS root cert files of the peers to connect to. The order and number of certs specified should match the --peerAddresses flag
      --waitForEvent                   Whether to wait for the event from each peer's deliver filtered service signifying that the 'invoke' transaction has been committed successfully
      --waitForEventTimeout duration   Time to wait for the event from each peer's deliver filtered service signifying that the 'invoke' transaction has been committed successfully (default 30s)

Global Flags:
      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
      --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint
      --clientauth                          Use mutual TLS when communicating with the orderer endpoint
      --connTimeout duration                Timeout for client to connect (default 3s)
      --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint
      --logging-level string                Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string                      Ordering service endpoint
      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.
      --tls                                 Use TLS when communicating with the orderer endpoint
      --transient string                    Transient map of arguments in JSON encoding
{noformat}

Both flags referenced by the doc are present.  Closing.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Edit to Key Concepts Fabric Model Private Data Topic,FAB-10564,30921,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,pandrejko,pandrejko,07/Jun/18 12:51 AM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,07/Jun/18 1:18 AM,,,,,,,,,,,,fabric-docs,,,,,0,,,,,,,"(2 comments from Kostas):

Low-priority observations attached, we can merge for now.
[docs/source/fabric_model.rst|https://gerrit.hyperledger.org/r/#/c/22691/2/docs/source/fabric_model.rst]
Line [16|https://gerrit.hyperledger.org/r/#/c/22691/2/docs/source/fabric_model.rst@16]:
""enable private and confidential multi-lateral transactions that are usually required by...""

Because I'm not sure what constitutes a low degree of privacy or confidentiality.
Line [119|https://gerrit.hyperledger.org/r/#/c/22691/2/docs/source/fabric_model.rst@119]:
(achieve?)",,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzeaf:",,,,Unset,,,,,,Unset,,,,,,,,,,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jun/18 12:58 AM;pandrejko;https://gerrit.hyperledger.org/r/22823;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Poll container status to wait for deletion after container exits ,FAB-10565,30922,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,07/Jun/18 1:30 AM,19/Mar/19 7:57 PM,28/Oct/23 3:03 AM,09/Jun/18 6:50 AM,v1.2.0,,,,,,,,v1.2.0,,,,,,,,0,ci-flake,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzean:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jun/18 1:38 AM;sykesm;00:09:14.707 [2018-06-06 13:46:06,223] INFO [KafkaServer id=1] Starting controlled shutdown (kafka.server.KafkaServer)
00:09:14.707 
00:09:14.708 ------------------------------
00:09:14.708 • Failure [6.919 seconds]
00:09:14.709 Kafka Runner [It] starts and stops a docker container with the specified image 
00:09:14.709 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/runner/kafka_test.go:87
00:09:14.709 
00:09:14.710   Expected an error, got nil
00:09:14.710 
00:09:14.710   /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/runner/kafka_test.go:118
00:09:14.710 ------------------------------
00:09:35.475 •••••••••••••••••••••
00:09:35.476 
00:09:35.476 Summarizing 1 Failure:
00:09:35.476 
00:09:35.477 [Fail] Kafka Runner [It] starts and stops a docker container with the specified image 
00:09:35.477 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/runner/kafka_test.go:118;;;","07/Jun/18 1:44 AM;sykesm;https://gerrit.hyperledger.org/r/22825;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Create make target for executing the PTE performance test.,FAB-10567,30926,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,07/Jun/18 3:19 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,19/Jun/18 7:11 AM,,,,,,,,,v1.2.0,,,fabric-build,,,,,0,ci-failure,,,,,,Create a new make target in Makefile to just execute the PTE performance tests. This can be executed on a local host and utilized in CI jobs for testing.,,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzeb3:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"13/Jun/18 9:36 AM;scottz;https://gerrit.hyperledger.org/r/#/c/22831/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Should not be possible to create CouchDB indexes on non-existent collection,FAB-10569,30928,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,denyeart,denyeart,07/Jun/18 6:04 AM,01/Aug/18 1:34 PM,28/Oct/23 3:03 AM,01/Aug/18 1:34 PM,,,,,,,,,v1.3.0,,,fabric-ledger,,,,,0,,,,,,,"If you specify a collection index via META-INF/statedb/couchdb/collections/<collection_name>/indexes metadata directory, but the collection is not defined for the chaincode on the channel, currently the index gets created anyways in an unexpected CouchDB database.

Validation was added to ensure that chaincode operations cannot be taken against non-existent collections.  Similar validation is needed for the index operations. (----FAB-9997---- intended to add validations for both... some of the logic to retrieve the collection definitions from ----FAB-9997---- code can be re-used for this new check).

If caught at index creation time (once both install and instantiation/upgrade commit has happened on a peer), the index should not be created with a clear Error in the peer log (see FAB-10570 for more details about handling index creation errors).  Note that the instantiation cannot be invalidated, since some peers may not have the chaincode installed, and therefore the check for indexes within the chainocde installation package could not be done deterministically across all peers.

If caught at instantiation/upgrade simulation time, the endorsement should fail such that the client doing the instantiation/upgrade will get a notification and cannot proceed on to the instantiation/upgrade transaction submit step.",,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzzebj:",,,,,,,,,,,,,,,,,,,,,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jun/18 9:10 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/23187/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB index creation error logging is missing after refactor,FAB-10570,30929,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,07/Jun/18 6:45 AM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,18/Jun/18 8:31 PM,,,,,,,,,v1.2.0,,,fabric-ledger,,,,,0,,,,,,,"FAB-7779 moved couchdb index creation out of statecouchdb.go HandleChaincodeDeploy().  However two things were missed. 

1) This important comment got taken out:

//HandleChaincodeDeploy initializes database artifacts for the database associated with the namespace
// This function delibrately suppresses the errors that occur during the creation of the indexes on couchdb.
// This is because, in the present code, we do not differentiate between the errors because of couchdb interaction
// and the errors because of bad index files - the later being unfixable by the admin. Note that the error suppression
// is acceptable since peer can continue in the committing role without the indexes. However, executing chaincode queries
// may be affected, until a new chaincode with fixed indexes is installed and instantiated

2) And the error logging described in the comment got taken out.  The new index creation code in ProcessIndexesForChaincodeDeploy() returns an error but the caller doesn't check for errors or log the errors.

Both aspects need to be re-introduced into the index creation flow.

 ",,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzwqfk:k",,,,,,To Do,,,,,,,,,,,,,,,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Jun/18 3:00 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/22923/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Couch State DB + Top-level field prefixed with underscore crashes endorser,FAB-10571,30931,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,hamptonsmith,hamptonsmith,07/Jun/18 11:05 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,12/Jun/18 9:34 PM,v1.1.0,,,,,,,,v1.2.0,,,fabric-ledger,,,,,0,,,,,,,"This regressed for a previously-working project while upgrading from v1.0 to v1.1:

In CouchDB state db, ledger data values were previously stored under a field named ""data"", but since upgrading seem to have been promoted to a top level document.  CouchDB disallows top-level fields prefixed by an underscore.  As a result, previously-valid ledgers containing such fields cause the endorser to crash when rebuilding the state db:
{code:java}
panic: Error during state DB recovery:Couch DB Error:doc_validation,  Status Code:400,  Reason:Bad special document member: _foo

goroutine 1 [running]:
github.com/hyperledger/fabric/core/ledger/kvledger.newKVLedger(0xc42043c9f8, 0x6, 0xc4204525a0, 0x166f820, 0xc42044b3d0, 0x16696e0, 0xc420456580, 0xc4201fd0e0, 0x6c61626f6c67, 0x0, ...)
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:67 +0x4da
github.com/hyperledger/fabric/core/ledger/kvledger.(*Provider).openInternal(0xc4201462c0, 0xc42043c9f8, 0x6, 0xc42044a801, 0x0, 0x0, 0xaba1f5)
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:152 +0x170
...<snip>...
{code}","Orderer docker image: hyperledger/fabric-orderer:x86_64-1.1.0

Endorser docker image: hyperledger/fabric-peer:x86_64-1.1.0

CouchDB docker image: couchdb:2.1.1

Docker: 18.03.1-ce, build 9ee9f40

docker-compose: 1.21.2, build a133471

Server: Ubuntu 16.04.4 LTS

 ",chris.elder,denyeart,hamptonsmith,kchristidis,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzebr:",,,,,,,,,,,,,,,,,,,,,chris.elder,denyeart,hamptonsmith,kchristidis,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jun/18 9:36 PM;kchristidis;/cc [~manish-sethi], [~denyeart];;;","07/Jun/18 11:17 PM;denyeart;CouchDB was not a production supported database in v1.0 (for example indexes were not supported).  Starting in v1.1 CouchDB is a supported database.  Top level field restrictions are documented at [https://hyperledger-fabric.readthedocs.io/en/latest/couchdb_as_state_database.html] .  Let's use this defect to clarify that field restrictions include any field starting with underscore.;;;","11/Jun/18 1:29 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/22919/;;;","11/Jun/18 5:41 AM;hamptonsmith;Certainly if one of the production-supported state databases doesn't support top-level underscores, then Fabric itself does not support top-level underscores?  If Org A advertises its fancy Fabric ledger, not using CouchDB, and Org B elects to join, and all their nodes crash because they are using CouchDB (causing a denial-of-service on other, unrelated chains!), that seems like a serious defect.  I shouldn't have to take a closure of all the footnotes in all the individual documentation for datastores to know what sort of data is valid, particularly given that data is strongly immutable.

Put another way, what guarantee do I have that some future new kind of production database won't be introduced that crashes under other, impossible-to-foresee circumstances?;;;","12/Jun/18 6:32 AM;manish-sethi;{quote} Certainly if one of the production-supported state databases doesn't support top-level underscores, then Fabric itself does not support top-level underscores? {quote}
No, there is no intentions for fabric to act as a common minimum layer of supported databases. e.g., the top-level underscores can well be used if the underlying db is the leveldb. Similarly, couchdb only supports a valid utf-8 string as a key while it can be any random bytes in the case of leveldb.

{quote} If Org A advertises its fancy Fabric ledger, not using CouchDB, and Org B elects to join, and all their nodes crash because they are using CouchDB (causing a denial-of-service on other, unrelated chains!), that seems like a serious defect.{quote}
A corollary of the above statement is that theoretically, a mixed databases are not going to be supported in a single channel. However, in practice, in the current Fabric version, this limitation is even wider and is imposed at the level of a network (Based on demand/need, this restriction can certainly be made less restricted in the future versions at the channel level)

{quote} I shouldn't have to take a closure of all the footnotes in all the individual documentation for datastores to know what sort of data is valid, particularly given that data is strongly immutable.

Put another way, what guarantee do I have that some future new kind of production database won't be introduced that crashes under other, impossible-to-foresee circumstances?{quote}
This should be clear from the above that you do not need to look at the footnotes of all the datastores.

Finally, if we extend the choice of datastore at the channel level in the future versions, it would be easy to guess that we would need to specify this at part of the channel configuration. However, I agree that to be able to specify at the channel config level makes sense even with current implementation which could make a peer result into an error much early on - at the time of channel join if the peer tries to join a channel that uses a different datastore from the datastore that the peer's exiting channels use - though not sure whether it is worth the effort when every participant in the network agrees to use a single type (somewhat open discussion...);;;","13/Jun/18 2:46 AM;hamptonsmith;You said:
{quote}couchdb only supports a valid utf-8 string as a key while it can be any random bytes in the case of leveldb
{quote}
From the [CouchDB state database docs|https://hyperledger-fabric.readthedocs.io/en/release-1.1/couchdb_as_state_database.html]:
{quote}Like the LevelDB key-value store, CouchDB can store any binary data that is modeled in chaincode
{quote}
So the flow-chart seems to be ""If the data happens to look like a JSON document..."" (no documentation on what that means!) ""...we add it to the store as a JSON document, and maybe that causes a crash.  Otherwise, we add it as a binary attachment.""

You said:
{quote}mixed databases are not going to be supported in a single channel
{quote}
From the [CouchDB state database docs|https://hyperledger-fabric.readthedocs.io/en/release-1.1/couchdb_as_state_database.html]:
{quote}You may consider starting with the default embedded LevelDB, and move to CouchDB if you require the additional complex rich queries. It is a good practice to model chaincode asset data as JSON, so that you have the option to perform complex rich queries if needed in the future.
{quote}
So the strong suggestion is that I might want to change the database that backs a channel some day, which I can only do peer-at-a-time.  Both of which you're telling me are not the intended architecture.

That said, the architecture you describe is sensible.  But I definitely think it is worth the effort to improve the robustness here so that the actual architecture matches the intended architecture (particularly given that the documentation is not reliable).  Here is an incomplete list of things I would expect my production-ready enterprise-grade software to do in this situation from most-proximal to the failure to least.  If you'll help me suss out which of these is reasonable, I can open separate feature requests for them.  Obviously, some of these are large efforts, but it costs little to just make a note of them in the milestones.

1) documentation for [state databases generally|http://hyperledger-fabric.readthedocs.io/en/release-1.1/ledger.html] needs to say, unambiguously, ""The chosen state database is an immutable property of the channel and if multiple peers participating on a channel have different state databases, undefined behavior may occur.""  This would preferably be reiterated in the [CouchDB state database docs|https://hyperledger-fabric.readthedocs.io/en/release-1.1/couchdb_as_state_database.html].

2) when the state database crashes, the peer notes the error in its logs but does not crash.  It continues to service the channel in some kind of degraded mode, possibly rejecting queries.  (If this peer is going to crash, it stands to reason all peers are about to, which is bad!)

3) when bad data is thrown at the state database, a validator detects the issue and returns a friendly error rather than crash.  This error is returned to the client submitting the transaction and the transaction is not added to the ledger (if all peers behave this way, then the network avoids getting into a bad state at the last possible moment and productive work can continue!)

4) the required data schema (preferably separate from the specific backing database so that different orgs can use different databases/versions of databases that support the schema) is bound to the channel and peers will refuse to join channels that require schemas they do not support

5) simulating peers test their proposed change sets against the channel's data validator and reject simulations if they result in invalid data (this accurately refuses to endorse transactions that cannot possibly be valid, and if ""most"" (by the channel's endorsement policy) peers behave this way, we prevent the breaking change-sets from being endorsed at the first possible moment.)

6) peers can have multiple state databases so they can support multiple channels with different requirements

7) when it is trivially easy to do so (by, say, wrapping data in an object), state databases do not restrict otherwise-valid Fabric data

Of these, (1), (2), (3), (4) seem critical for the following reasons:

(1) because docs should match reality

(2) seems like a security issue.  Currently if I'm a misbehaving actor at an otherwise-valid participating org, I can exploit bugs in Fabric, CouchDB, or the underlying platform to DOS an entire network–with data that is irrevocable by design!

(3) prevents a bug in chaincode from irrevocably corrupting the ledger in an otherwise-detectable way.

(4) makes the actual architecture match the intended architecture, particularly important since A) there is the possibility that by ""messing this up"" (i.e., doing what the docs told you to do!) you end up with irrevocable bad data, and B) this is happening against a backdrop of a heterogeneous, federated network;;;",,,,,,,,,,,,,,,,,,,,,
Allow aliases to be used for LSCC calls for consistency with all other SCC function/resource names,FAB-10572,30943,29608,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,07/Jun/18 11:12 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,12/Jun/18 2:04 AM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"The LSCC is currently the only system chaincode where some of the ACL resource names and the function names do not line up. This makes it difficult to test these resources and policies in a consistent way with the other system chaincodes. 

For example, the resource:
 * lscc/ChaincodeExists is used for lscc's getid function
 * lscc/GetChaincodeData is used for lscc's getccdata function
 * lscc/GetDeploymentSpec is used for lscc's getdepspec function

All other resources and functions follow the pattern <system-chaincode-name>/<function-name>

Allowing use of an alias (i.e. support the previous function name while also accepting the part of the resource name after the system chaincode name) would resolve this.",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzebz:",,,,,,Next Items- Lifecycle & Config,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Jun/18 4:46 AM;wlahti;https://gerrit.hyperledger.org/r/c/22867/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"remove duplicated chaincodes copies; test the fabric-samples versions when they are available",FAB-10573,30944,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,scottz,scottz,08/Jun/18 12:54 AM,30/Jul/19 11:41 AM,28/Oct/23 3:03 AM,30/Jul/19 11:41 AM,,,,,,,,,Future,,,fabric-quality,,,,,0,quality,,,,,,"We can test chaincodes in the fabric-samples/chaincodes/ repository directory when available, and remove them from fabric-test. I see marbles02 (go and node) and marbles02_private (go),

Thus we can probably remove fabric-test/chaincodes/ items marbles (node) and marbles02_private (go).

This task is to eliminate those duplications and to test the actual public chaincodes. It may require the following:
 # verify the chaincodes are actually the same/duplicates
 # remove the chaincodes from fabric-test/chaincodes/ directory.
 # change any behave tests to pull the chaincodes from the fabric-samples directory
 # change any pte tests to pull the chaincodes from the fabric-samples directory
 # edit the comments and readme files if necessary, in fabric-test/feature/ and fabric-test/tools/PTE/

Also, example02 (go) exists in the fabric repo; we should probably consider moving our own example02 (node) together with that, instead of keeping a copy in fabric-test.

And I am not sure if we want to move these others that exist only inside fabric-test (and lose ability to make quick modifications) but we should at least consider moving the other chaincodes defined inside fabric-test/chaincodes/ to the fabric-samples directory, so they are all colocated (samplecc, shimApiDriver, etc).

 ",,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzec7:",,,,,,,,,,,,,,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:41 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
txmgr: release write lock only if it was acquired,FAB-10574,30945,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,Senthil1,Senthil1,08/Jun/18 1:27 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,11/Jun/18 9:12 PM,,,,,,,,,v1.2.0,,,fabric-ledger,,,,,0,,,,,,,"In the transaction manager, we need to release the write lock only if the lock was acquired. When an error occurs before acquiring a lock and if we try to release the unacquired lock in the defer statement, we would end up printing the wrong panic message (i.e., fatal error: sync: unlock of unlocked mutex) which would be less helpful during troubleshooting. ",,manish-sethi,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzecf:",,,,,,,,,,,,,,,,,,,,,manish-sethi,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jun/18 2:34 AM;manish-sethi;https://gerrit.hyperledger.org/r/#/c/22865/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Prevent peer from crashing while processing pull request in absense of collection config,FAB-10576,30947,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,C0rWin,C0rWin,C0rWin,08/Jun/18 5:36 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,10/Jun/18 2:38 AM,v1.2.0,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,"While peer processing response for private data pull requests and not able to find collection config, leads peer to panic

{code}
[31m2018-06-07 12:13:56.795 EDT [gossip/privdata] fromLedger -> ERRO 4ce[0m No collection config update below block sequence =  6 collection name = collectionMarblePrivateDetails for chaincode marbles_private is available
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0x10b2630]

goroutine 169 [running]:
github.com/hyperledger/fabric/gossip/privdata.(*puller).createResponse(0xc421c96930, 0x1572e40, 0xc422f9b350, 0x0, 0x0, 0x0)
	/opt/go/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:144 +0x190
github.com/hyperledger/fabric/gossip/privdata.(*puller).handleRequest(0xc421c96930, 0x1572e40, 0xc422f9b350)
	/opt/go/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:129 +0x1fc
github.com/hyperledger/fabric/gossip/privdata.(*puller).listen(0xc421c96930)
	/opt/go/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:115 +0x1c5
created by github.com/hyperledger/fabric/gossip/privdata.NewPuller
	/opt/go/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:96 +0x22c

{code}

need to check whenever private data has been actually retrieved i.e. not nil:

{code}
func (p *puller) createResponse(message proto.ReceivedMessage) []*proto.PvtDataElement {
	authInfo := message.GetConnectionInfo().Auth
	var returned []*proto.PvtDataElement
	defer func() {
		logger.Debug(""Returning"", message.GetConnectionInfo().Endpoint, len(returned), ""elements"")
	}()
	msg := message.GetGossipMessage()
	for _, dig := range msg.GetPrivateReq().Digests {
		rwSets := p.CollectionRWSet(dig)
		logger.Debug(""Found"", len(rwSets.RWSet), ""for TxID"", dig.TxId, "", collection"", dig.Collection, ""for"", message.GetConnectionInfo().Endpoint)
		if len(rwSets.RWSet) == 0 {
			continue
		}

		colAP, err := p.AccessPolicy(rwSets.CollectionConfig, p.channel)
		if err != nil {
			logger.Debug(""No policy found for channel"", p.channel, "", collection"", dig.Collection, ""txID"", dig.TxId, "":"", err, ""skipping..."")
			continue
		}
		colFilter := colAP.AccessFilter()
		if colFilter == nil {
			logger.Debug(""Collection "", dig.Collection, "" has no access filter, txID"", dig.TxId, ""skipping..."")
			continue
		}
		eligibleForCollection := colFilter(fcommon.SignedData{
			Identity:  message.GetConnectionInfo().Identity,
			Data:      authInfo.SignedData,
			Signature: authInfo.Signature,
		})

		if !eligibleForCollection {
			logger.Debug(""Peer"", message.GetConnectionInfo().Endpoint, ""isn't eligible for txID"", dig.TxId, ""at collection"", dig.Collection)
			continue
		}

		returned = append(returned, &proto.PvtDataElement{
			Digest:  dig,
			Payload: util.PrivateRWSets(rwSets.RWSet...),
		})
	}
	return returned
}
{code} 

following

{code}
rwSets := p.CollectionRWSet(dig)
{code}

the {{rwSets}} has to be checked whenever it's nil or not.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzzecv:",,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Jun/18 5:48 AM;C0rWin;https://gerrit.hyperledger.org/r/22871;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Peer may be tricked into executing attacker provided chaincode bytes,FAB-10577,30948,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,jyellick,jyellick,08/Jun/18 6:06 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,10/Jun/18 3:45 AM,v1.0.0,v1.0.1,v1.0.2,v1.0.3,v1.0.4,v1.0.5,v1.0.6,v1.1.0,v1.1.1,v1.2.0,,fabric-peer,,,,,0,,,,,,,"The current peer lifecycle accepts a {{pb.ChaincodeDeploymentSpec}} as the parameter to the {{deploy}} and {{upgrade}} LSCC functions.

Because users do not want to send in the full, real CDS each time they deploy a chaincode to the channel, the LSCC ignores most of the values in the parameter, and instead, looks up the 'real' {{ChaincodeDeploymentSpec}} from the filesystem and performs the checks against it.

Then, when it is successful, control returns to {{endorser.go}} who passes in the original user supplied CDS to the {{chaincode.Execute}} function.

The {{chaincode}} package eventually performs a check that, if the {{ChaincodeDeploymentSpec}} {{CodePackage}} is not nil, then it does _not_ load the code package from the filesystem, but uses the one provided.  There is a comment from https://github.com/hyperledger/fabric/blob/1575ea62a7b77fdadc19c3b5f26d20178270a838/core/chaincode/chaincode_support.go#L638-L647 which claims that:


{noformat}
		//NOTE-We need to streamline code a bit so the data from LSCC gets passed to this thus
		//avoiding the need to go to the FS. In particular, we should use cdsfs completely. It is
		//just a vestige of old protocol that we continue to use ChaincodeDeploymentSpec for
		//anything other than Install. In particular, instantiate, invoke, upgrade should be using
		//just some form of ChaincodeInvocationSpec.
		//
		//But for now, if we are invoking we have gone through the LSCC path above. If  instantiating
		//or upgrading currently we send a CDS with nil CodePackage. In this case the codepath
		//in the endorser has gone through LSCC validation. Just get the code from the FS.
{noformat}

This describes the situation fairly well.  The code expects that on upgrade or deploy that the code package is nil, even though nothing enforces this fact.  So, if the code package is not-nil, it is passed directly into the container building process.


----

To exploit this as an attack vector is fairly trivial.  First, two parties agree to run a chaincode, denoted ""Alice"" and ""Eve"".  There is the true chaincode ""cc-true"", and an evil version of the chaincode, constructed by Eve, ""cc-evil"".

# Alice installs ""cc-true"" to her peer
# Eve uses a custom peer which skips certain validation checks on chaincode, and installs ""cc-evil"" under the name/version of ""cc-true""
# Eve constructs a {{deploy}} transaction with parameters matching the chaincode {{Alice}} installed, and includes the code-bytes of ""cc-evil"" and sends it to Alice's peer.
# Alice's peer blindly accepts the cc bytes for ""cc-evil"" and starts a container executing them.
# Eve discards the proposal which included the ""cc-evil"" bytes and constructs a new proper deploy with a nil code-package and sends it to Alice's peer.
# Alice's peer detects that ""cc-true"" is already running (although the actual container is executing the bytes of ""cc-evil"") and passes the request through.
# Eve submits the deploy to ordering and it commits normally.

Now, Alice believes that her peer is executing ""cc-true"" while in fact, Alice and Eve are both executing ""cc-evil"".  Transactions will endorse and commit successfully and Alice will have no way to detect that the correct chaincode is not executing.

Eventually, if Alice discovers the discrepancy, there is no evidence on the blockchain which might indicate that ""cc-evil"" exists or that Eve has done anything wrong.


----

The fix for this is fairly trivial.  {{endorser.go}} should simply use the supplied CDS to look up the one from the filesystem, then use it as a basis for invoking the {{chaincode}} package.",,jyellick,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzed3:",,,,,,,,,,,,,,,,,,,,,jyellick,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Jun/18 3:45 AM;mastersingh24;removing v1.0.7 for now as people should be moving to v1.1 by now.  We can reopen for v1.0.7 if needed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
e2e - chaincode invoke sometimes fails,FAB-10578,30953,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,08/Jun/18 6:46 AM,21/Oct/19 6:10 PM,28/Oct/23 3:03 AM,09/Jun/18 8:35 AM,v1.2.0,,,,,,,,v1.2.0,,,,,,,,0,ci-flake,,,,,,"When running the e2e locally, there is an occasional failure attempting to invoke the chaincode:
{code:java}
Waiting for:
        Chaincode invoke successful. result: status:200
    /Users/wlahti/gopath/src/github.com/hyperledger/fabric/integration/e2e/e2e_test.go:121{code}
It appears to be caused by there not being an entry in the LSCC for the chaincode:
{code:java}
[e][peer-0] 2018-06-07 17:41:22.799 EDT [lscc] Invoke -> ERRO 026 error getting chaincode mycc on channel [testchannel]: could not find chaincode with name 'mycc'

[e][invoke] Error: could not assemble transaction: ProposalResponsePayloads do not match - proposal response: version:1 response:<status:200 > payload:""\n V\206Y\373 \021F\332\347 ^xP\\\332\220\357 HGl\254M\007\250\223\336\361\033\351UY\022Y\nE\022\024\n\004lscc\022\014\n\n\n\004mycc\022\002\010\001\022-\n\004mycc\022%\n\007\n\001a\022\002\010\001\n\007\n\001b\022\002\010\001\032\007\n\001a\032\00290\032\010\n\001b\032\003210\032\003\010\310\001\""\013\022\004mycc\032\0030.0"" endorsement:<endorser:""\n\007Org1MSP\022\226\006-----BEGIN CERTIFICATE-----\nMIICGTCCAb+gAwIBAgIQW//VLxTGMjHx5n5iJcUDgDAKBggqhkjOPQQDAjBzMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEcMBoGA1UEAxMTY2Eu\nb3JnMS5leGFtcGxlLmNvbTAeFw0xODA2MDcyMTM2MTVaFw0yODA2MDQyMTM2MTVa\nMFsxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1T\nYW4gRnJhbmNpc2NvMR8wHQYDVQQDDBZBZG1pbkBvcmcxLmV4YW1wbGUuY29tMFkw\nEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAESZAOrpfV+E5ZuxH+NJc7qdPzTkRFVlbv\nC3h27k4r1P8CjCwKzoCCgWwkDoDtKpMQB8y9Pf2JmVPe7mcjCPFZJKNNMEswDgYD\nVR0PAQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwKwYDVR0jBCQwIoAgMrJRdKon9Qw6\nnWykQuRpOE0KB3ly/1cZBWFkTyshnRgwCgYIKoZIzj0EAwIDSAAwRQIhAMcl9kte\n69gplp0klOW3bODvuCSpUN4aamIpzb0M6mMlAiBwjjxDaWAzzRYqi2QXiq0GV1FJ\n6S78lncjFpYZI4Iprw==\n-----END CERTIFICATE-----\n"" signature:""0D\002 [E\266\333\315\241\010\\\033\325\240@\324\337bRa\334\324\216KPy\2527\243Z\005\002p\357\035\002 &\372\260g\210\013\350\342eT\321E%\201\236=\316\305\321\237\034^\360\014\226\001\306m2\200\221\242"" >

[e][orderer] 2018-06-07 17:41:22.799 EDT [orderer/common/broadcast] Handle -> DEBU 472 Received EOF from 127.0.0.1:59182, hangup

[e][orderer] 2018-06-07 17:41:22.799 EDT [orderer/common/server] func1 -> DEBU 473 Closing Broadcast stream

[e][orderer] 2018-06-07 17:41:22.801 EDT [grpc] Printf -> DEBU 474 transport: http2Server.HandleStreams failed to read frame: read tcp 127.0.0.1:7050->127.0.0.1:59182: read: connection reset by peer

• Failure [8.203 seconds]

EndToEnd
/Users/wlahti/gopath/src/github.com/hyperledger/fabric/integration/e2e/e2e_test.go:24
  basic solo network with 2 orgs
  /Users/wlahti/gopath/src/github.com/hyperledger/fabric/integration/e2e/e2e_test.go:57
    executes a basic solo network with 2 orgs [It]
   /Users/wlahti/gopath/src/github.com/hyperledger/fabric/integration/e2e/e2e_test.go:62

    No future change is possible.  Bailing out early after 0.002s.{code}
 ",,ekc 2,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzedj:",,,,,,,,,,,,,,,,,,,,,ekc 2,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jun/18 12:58 AM;wlahti;This occurs due to the fact that the chaincode has been instantiated and verified (via list instantiated chaincodes) on the org1 peer but it doesn't verify that the org2 peer has received the updated LSCC info. ;;;","09/Jun/18 1:09 AM;wlahti;https://gerrit.hyperledger.org/r/c/22883/;;;","09/Jun/18 1:28 AM;wlahti;This used to fail consistently when run via ""ginkgo -r -untilItFails"" within no more than 4 test runs. I have it running locally with this fix in place and I'm up to test run 17 without a failure.;;;",,,,,,,,,,,,,,,,,,,,,,,,
"bootstrap.sh doesn't bypass downloading samples, Binaries and Docker Images",FAB-10579,30954,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,nnao,nnao,nnao,08/Jun/18 6:51 AM,18/Aug/18 12:06 PM,28/Oct/23 3:03 AM,18/Aug/18 12:06 PM,v1.1.0,,,,,,,,,,,fabric-tools,,,,,0,,,,,,,"bootstrap.sh have options(-d/-s/-b) to bypass downloading samples, Binaries and Docker Images. But it doesn't work.
 
{code}
vagrant@ubuntu-xenial:~$ ./bootstrap.sh 1.1.0 -d -s -b
 
Installing hyperledger/fabric-samples repo
 
===> Checking out v1.1.0 branch of hyperledger/fabric-samples
HEAD is now at 1252c7a... [FAB-8920] Pin fabric-samples to node.js ""~1.1.0""
 
Installing Hyperledger Fabric binaries
 
===> Downloading version x86_64-1.1.0 platform specific fabric binaries
===> Downloading:  https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/linux-amd64-1.1.0/hyperledger-fabric-linux-amd64-1.1.0.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
{code}",,ChristopherFerris,denyeart,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10854,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzedr:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jun/18 7:17 AM;nnao;https://gerrit.hyperledger.org/r/c/22877/;;;","18/Jun/18 9:18 PM;denyeart;[~ChristopherFerris] Do you want to merge this one for v1.2?;;;","19/Jun/18 3:27 AM;ChristopherFerris;[~denyeart] [~nnao] I cannot verify this bug using the latest master on Mac (current works fine). I also tried the patch, and that does NOT work on a Mac. Hence, the fix is going to need to be OS based. e.g. needs more work.;;;","19/Jun/18 5:28 AM;nnao;[~ChristopherFerris] Thank you. 
Linux's grep(GNU grep 2.25 on Ubuntu 16.04) is not supported '\d' patterns.
And Mac's grep(grep 2.5.1-FreeBSD on 10.13.4) is not supported -P option.
I think [0-9] is a more suitable solution.
https://en.wikipedia.org/wiki/Regular_expression#Character_classes;;;","18/Aug/18 3:25 AM;nnao;FAB-10854 had resolved this problem.

I will close this JIRA.;;;",,,,,,,,,,,,,,,,,,,,,,
Service Discovery Traffic test with multiple chaincodes and policies,FAB-10580,30955,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,scottz,scottz,08/Jun/18 7:19 AM,30/Jul/19 11:41 AM,28/Oct/23 3:03 AM,30/Jul/19 11:41 AM,,,,,,,,,,,,fabric-quality,,,,,0,SystemTestcase,,,,,,"This extends 10190, a traffic test that uses single chaincode and policy.

Here we will run multiple chaincodes with different policies in single channel, and in multiple channels, which will effectively require using multiple service discoveries initializations and layouts.",,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10190,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10082,,,,,,,,,"1|hzzedz:",,,,,,,,,,,,,,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:41 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Service Discovery stress test discovery requests,FAB-10581,30956,,Test Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,dongming,scottz,scottz,08/Jun/18 7:24 AM,02/Dec/18 3:39 AM,28/Oct/23 3:03 AM,27/Jun/18 12:52 AM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,SystemTestcase,,,,,,"Stress test: Repeatedly request service discovery information for a channel and chaincode, or multiple chaincodes, or multiple channels. Measure response times. These are promises invocations of the initialize API (on node sdk, from pte).

Test scenarios

network:  1 channel, 3 orderers, 2 ca, 2 org, 2 peers/org, 4 kafka, 3 zookeeps

TLS: mutual TLS (clientauth)

service discovery: 4 threads, each thread sends 100,000 service discovery simultaneously

    2 threads to peer1 of org1

    2 threads to peer1 of org2

chaincode: samplecc golang

client driver: PTE

    TLS: clientauth

    transType: Discovery

    targetPeers: Discovery

    discoveryOpt.localHost: true

 .

Results:
 The test passes if the execution completes without error",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11776,,,FAB-11776,,,,,,,,,,,,,,,,,,,,,,,,FAB-10082,,,Automated,,,,,,"1|hzzee7:",,,,,,,,,,,,,,,,Pass,,System Test,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"26/Jun/18 5:47 AM;dongming;https://gerrit.hyperledger.org/r/#/c/23621/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
60 seconds delay in peer commit pvt data blocks,FAB-10582,30957,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,C0rWin,rlalgowdar,rlalgowdar,08/Jun/18 7:54 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,20/Jun/18 5:46 PM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"While running PTE tool to run traffic on Fabric network and do invokes on marbles_private chain code, I see 60 seconds delays in committing blocks at peer side. The orderer has already cut all blocks.

From peer logs I can see 60 seconds cycle similar to below log entries (Note: the entries below are from earlier test however same pattern can be seen in attached log)

2018-06-07 19:07:32.421 UTC [kvledger] CommitWithPvtData -> INFO 0fa Channel [testorgschannel1]: Committed block [16] with 10 transaction(s)
 2018-06-07 19:08:32.473 UTC [kvledger] CommitWithPvtData -> INFO 106 Channel [testorgschannel1]: Committed block [17] with 10 transaction(s)
 2018-06-07 19:09:32.525 UTC [kvledger] CommitWithPvtData -> INFO 112 Channel [testorgschannel1]: Committed block [18] with 10 transaction(s)
 2018-06-07 19:10:32.575 UTC [kvledger] CommitWithPvtData -> INFO 11e Channel [testorgschannel1]: Committed block [19] with 10 transaction(s)

 Also I see following in logs. 

2018-06-07 21:58:04.510 UTC [gossip/privdata] StoreBlock -> WARN 3b02^[[0m Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID: 3f4d129c03c939e990aa27fbd71c682bb16ada65f7de85f9b1da0bcc3fc72793, seq: 3, namespace: marbles_cc_priv_ch1, collection: collectionMarbles, hash: d8a27a0f29cce7c12b480818ef5a386f44f6fcda2c834e8d2ccbca0cd061d525
txID: f3cc8080a4c2466ce05bcb72aae9cc59344b3b8f3db2ad857c001becb4745d34, seq: 0, namespace: marbles_cc_priv_ch1, collection: collectionMarbles, hash: cb9bc301436f64286e1a9196f3c4a23102052a226eaddbd31256ab4304fb04e7
 # Does the above warning message cause the peer commit delays?
 # If it is, why does the peer wait 60 seconds?  and why is it not committing other blocks while waiting for that one? Waiting for one block should not halt the committing of every block. Let us know if you want a separate bug to address this issue.

I suspect pullRetryThreshold can be causing this delay however needs to be verified from debug logs attached.

 

This is blocking SVT runs as the invokes are getting really slow. Let me know if further details needed.

 ",,C0rWin,denyeart,joe-alewine,MichaelWang,pandrejko,rlalgowdar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10599,,,,,"08/Jun/18 7:53 AM;rlalgowdar;peer0.log.zip;https://jira.hyperledger.org/secure/attachment/15082/peer0.log.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzeef:",,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,joe-alewine,MichaelWang,pandrejko,rlalgowdar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jun/18 9:15 PM;denyeart;This is likely a gossip misconfiguration issue, as the peers will retry for 60 seconds to get private data via gossip. [~C0rWin] is working with [~rlalgowdar].;;;","12/Jun/18 12:52 AM;scottz;We were able to run some simpler traffic tests in a single org, without seeing those WARN logs.

We will enhance our startup scripts to set anchor peers in each org. This should alleviate the problem with obtaining the private data across org boundaries.

Since it is necessary to establish an anchor peer in every org that has a peer that requires sharing private data, then this should be documented as a requirement in the new feature documentation. I looked and could see that it is mentioned in the new [https://gerrit.hyperledger.org/r/#/c/22817/1/docs/source/private-data-arch.rst].

In addition, I am redirecting question 2 above to a new bug for discussion on that topic separately.;;;","18/Jun/18 6:12 AM;C0rWin;[~scottz] this is a quote from *anchor peer* section of gossip documentation: 

{quote}
Anchor peers are used to facilitate gossip communication between peers from
**different** organizations. In order for cross-org gossip to work, peers from one
org need to know at least one address of a peer from other orgs (from this peer,
it can find out about all of the peers in that org). This address is the anchor
peer, and it's defined in the channel configuration.
{quote}

since private data primarily distributed between peers of different organization, I think that having anchors peers 
setup correctly explicitly follows from paragraph above, specifically 

{quote}
Anchor peers are used to facilitate gossip communication between peers from
**different** organizations.
{quote}

you can find it here: https://hyperledger-fabric.readthedocs.io/en/latest/gossip.html

---------

Since this is proven to be a misconfiguration issue and 60s retry timeout is in fact configurable and could be controlled, I'd suggest we close this item since worked as designed. WDYT [~denyeart]?;;;","18/Jun/18 10:01 AM;scottz;That gossip doc reads well, but what I think it would be helpful to also have something explicit about using anchor peers where we explain the use of the private data / sidedb feature. Has that been done, or in the works?

Otherwise, yes we can allow Dave to comment.;;;","18/Jun/18 11:41 AM;denyeart;The private data topics which we are trying to merge ( [https://gerrit.hyperledger.org/r/#/c/22505/24/docs/source/private-data/private-data.md] and [https://gerrit.hyperledger.org/r/#/c/22817/6/docs/source/private-data-arch.rst] ) both mention that gossip is required and specifically mentions setting up anchor peers is required for cross-organization gossip, so I think we are good there.  I agree since this is a configuration issue and not a defect, we should close this one out.;;;","18/Jun/18 2:40 PM;rlalgowdar;Since the Anchor peer setup essential part for the feature, I'm not seeing good examples and documentation for Anchor Peer setup from Node SDK. 

Node API:

[https://fabric-sdk-node.github.io/Client.html#updateChannel__anchor |https://fabric-sdk-node.github.io/Client.html#updateChannel__anchor]

Existing Node SDK Samples cover CreateChannel and not UpdateChannel.

[https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/test/integration/e2e/create-channel.js]

The Anchor Peer setup has multiple steps 1. ConfigTx entries 2. Generate AnchorPeer.Tx 3. Update Channel. These steps needs to be documented for SDKs.;;;","19/Jun/18 2:37 AM;joe-alewine;^^^ [~harrisob@us.ibm.com] [~rickr];;;","20/Jun/18 12:34 PM;scottz;[~rlalgowdar] I am thinking we should close this as a config issue, since the new documents for sidedb do point out the need for anchor peers. Can you agree to close this one and open any new ones you feel necessary for enhancements to the fabric-docs or the samples?;;;","20/Jun/18 5:46 PM;rlalgowdar;Yes, this issue can be closed.;;;","20/Jun/18 9:00 PM;denyeart;Yes, marked Done in v1.2.;;;",,,,,,,,,,,,,,,,,
Support for private key protection using Intel SGX,FAB-10583,30958,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,silentspark,silentspark,08/Jun/18 11:48 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-crypto,,,,,0,ECDSA,Security,SGX,stale-item,,,"{color:#191f25}Fabric uses software based digital signature by default. The clear text of private key is exposed in file system and memory, which is insecure. Although Fabric does have support for pkcs11 HSM now, user needs to prepare HSM which is an additional work. 
{color}

{color:#191f25}This proposal is to leverage intel SGX enclave to protect digital signature computing and private key, which is a high performance and integrated security solution in x86 system with intel SGX feature.{color}",,crashmark93,denyeart,elli-androulaki,mazyblue,silentspark,Ssimons1388,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzeen:",,,,Unset,,,,,,Unset,,,,,,,,,,,crashmark93,denyeart,elli-androulaki,mazyblue,silentspark,Ssimons1388,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Sep/18 7:00 PM;elli-androulaki;Hi [~silentspark] is this still aiming for 1.3? ;;;","24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,
PTE: Query Transactions Running On Both Peers In Org,FAB-10586,30965,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,mrihn1,mrihn1,08/Jun/18 11:11 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/Jun/18 6:24 AM,v1.1.0,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,PTE,,,,,,"We are seeing equivalent CPU utilization on both peer LPARs (A and C) in our cluster when running Query transactions. We would expect to see much higher utilization on LPAR A which has peer1 for each org, but utilization is just as high on LPAR C, which would seem to indicate that both peers 1 and 2 are receiving the Queries.",IBM Blockchain Performance Poughkeepsie cluster ZBC03 (z14),dinotone,mrihn1,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9801,,,FAB-10710,,,,,"13/Jun/18 11:10 PM;dinotone;image-2018-06-13-10-10-08-582.png;https://jira.hyperledger.org/secure/attachment/15098/image-2018-06-13-10-10-08-582.png","13/Jun/18 11:16 PM;dinotone;image-2018-06-13-10-16-14-889.png;https://jira.hyperledger.org/secure/attachment/15099/image-2018-06-13-10-16-14-889.png","12/Jun/18 5:48 AM;mrihn1;runCases.txt.query.chan1.3org.2CC.txt;https://jira.hyperledger.org/secure/attachment/15091/runCases.txt.query.chan1.3org.2CC.txt","12/Jun/18 5:48 AM;mrihn1;runCases.txt.query.chan2.3org.2CC.txt;https://jira.hyperledger.org/secure/attachment/15090/runCases.txt.query.chan2.3org.2CC.txt","11/Jun/18 11:20 PM;mrihn1;samplecc-chan1-constant-q-TLS-3org_1CC.json;https://jira.hyperledger.org/secure/attachment/15089/samplecc-chan1-constant-q-TLS-3org_1CC.json","12/Jun/18 5:48 AM;mrihn1;samplecc-chan2-constant-q-TLS-3org_1CC.json;https://jira.hyperledger.org/secure/attachment/15092/samplecc-chan2-constant-q-TLS-3org_1CC.json",,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzefj:",,,,,,,,,,,,,,,,,,,,,dinotone,mrihn1,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,release-1.1,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,true,"09/Jun/18 6:50 AM;scottz;PTE will send traffic to the nodes you select. Check with the person who wrote your PTE configuration files, and refer to the Readme for explanations how to configure it. PTE Support Team cannot do anything with this unless those test config files are attached, and analyzed, and show the traffic is not going where it is directed. If you still feel there is a bug in PTE traffic generator, then please explain your configuration and why you feel the traffic is incorrectly generated.;;;","11/Jun/18 11:25 PM;mrihn1;I am attaching an example of the PTE config files that we used.  We specified OrgAnchor in all of the config files.
Looking at the PTE doc it states:
*""OrgAnchor*: send to the anchor peer (peer1) of the organization being executed in the current process""
Given this description, I would expect to see a higher utilization on the anchor peers instead of the even split between the anchor peers and non-anchor peers.
In older measurements with similar PTE config settings, we saw results that were more in line with what we expected (higher CPU utilization on the anchor peers).
This may very well turn out not to be a bug with PTE. We were only trying to figure out what would cause Query transactions to drive equivalent CPU utilization on all peers in an organization, and after discussing with Dongming, we were advised to open this issue.
[^samplecc-chan1-constant-q-TLS-3org_1CC.json];;;","12/Jun/18 12:40 AM;dinotone;I've been looking at recent PTE perf results for Invoke Move in same config . 3 Orgs x 2 peers.  In the past, we'd always see the Endorsing peer ( ie. peer1 ie. Anchor peer ) consume more cp/mem resources then the commit-only peer (ie. peer2).  This no longer appears to be the case.  Even when running with ALLANCHOR which historically resulted in even a larger gap between endorser & committer peer resource consumption, both peers (for each Org) are consuming comparable resources.   Bottom line PTE appears to be routing endorsements to both peers, as opposed to just anchor.;;;","12/Jun/18 4:50 AM;scottz;That config file file seems OK to me.

Is anything else going on in the network at the same time, that might dwarf the query efforts?
Please share the rest of the config files and (runCases files).;;;","12/Jun/18 5:49 AM;mrihn1;Here are the rest of the config and runCases files.
Nothing else should be going on in the network.;;;","12/Jun/18 8:02 PM;dinotone;Hey Scott.  As mentioned above. The issue seems to not only be Query.  We just recognized in when running query workload;;;","13/Jun/18 10:42 PM;scottz;Have you confirmed that the resource utilzation levels are measured without the test running are not the same as with the test running?

When did it first start misbehaving? And when did it last run ok? When did you update your PTE? Identifying when the change in behavior occurred will help identify the cause.

I will take another look at the code more closely. Something was changed 5/1, so it would be interesting to know if that coincides with your observations.;;;","13/Jun/18 11:11 PM;dinotone;Scott, Not sure I understand the resource utilization question, but if I do, the answer is.... Yes, the resource consumption is definitely different without tests running vs with. 

Here's a taste....     Look at Peer CPU columns.   The Commit-Only peer (peer2) should have less cpu consumed then Endorser, especially in the case of AllANCHOR...  

 ;;;","13/Jun/18 11:16 PM;dinotone;!image-2018-06-13-10-16-14-889.png!;;;","13/Jun/18 11:20 PM;scottz;I think I found something wrong with that May 1st update to PTE. Looks like we broke this when we added support for the starter plan networks peer names. your CPU data does seem to confirm the behavior. Another way to do that would be to check the peer logs of the committer peer to see if it is doing endorsements.

I was going to ask you to look in your PTE logs for lines containing the string ""assignThreadOrgAnchorPeer"", and if you see more than one peer listed, then that confirms it. But I just realized that log is commented out of the code. So nevermind.

I think I've seen enough; we will get working on a fix.;;;","14/Jun/18 12:10 AM;scottz;This it the change that broke the code. [https://gerrit.hyperledger.org/r/#/c/21253/1/tools/PTE/pte-execRequest.js]

Seems we should simply exit the loop (line 1095) inside function assignThreadOrgAnchorPeer() after the ""anchor peer"" (first peer in the list) is found.;;;","14/Jun/18 12:11 AM;dinotone;Glad to hear.   

 Regarding viewing peer log...    I've never seen anything in peer log that tell us Endorsements. Only committed blocks. If there's some means to get Endorsement info, please let us know.   Thanks  ;;;","14/Jun/18 1:12 AM;scottz;Bug was introduced by FAB-9801.;;;","14/Jun/18 5:26 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/23025/]  is the changeset under review. Code appeared broken this way for option OrgAnchor and also AllAnchors.

 

What CORE_LOGGING_LEVEL (core.yaml) do you run with?;;;","19/Jun/18 6:44 AM;scottz;This is now fixed in current release (master branch, soon to be v1.2). Do you need a new PTE image for that? I just noticed you set ""Affects Version"" to v1.1, so now I am wondering if you need a fix and a PTE image for v1.1. ??? [~mrihn1]  [~dinotone];;;","19/Jun/18 9:03 PM;dinotone;Thanks Scott. Yes. We are testing IBP R7, so we would require the fix for the fabric 1.1 version that GAs with IBP R7. 

[~tanyana] [~mrihn1];;;","20/Jun/18 9:13 PM;dinotone;[~scottz] Please direct us on if there's a PTE image with this fix available for V1.1.  And if so, what image.  Thank you! [~mrihn1];;;",,,,,,,,,,
Merge similar indexes in block storage index,FAB-10587,30967,42204,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,09/Jun/18 1:04 AM,08/Sep/19 1:47 AM,28/Oct/23 3:03 AM,08/Sep/19 1:47 AM,,,,,,,,,v2.0.0,,,fabric-ledger,,,,,0,,,,,,,"In block store ledger, there are 3 indexes that serve queries of type ***ByTxid. These indexes maintain a mapping of txid to (1) transactionEnv Location in block file, (2) block location in block file and (3) the validation code respectively.

It's worth while to maintain all three pieces of information into a single index that maintain a mapping txid to `A single object that contains all three mentioned above`. This should reduce the size of the block index significantly.

For more details see code comments below...
https://github.com/hyperledger/fabric/blob/86f87ebcd8a1819e3832b289f2d94d4a88bb6e05/common/ledger/blkstorage/fsblkstorage/blockindex.go#L67

Further, this created a bit of a problem while fixing a bug FAB-8557 in which we had to perform same check for multiple indexes (code links below)
https://github.com/hyperledger/fabric/blob/86f87ebcd8a1819e3832b289f2d94d4a88bb6e05/common/ledger/blkstorage/fsblkstorage/blockindex.go#L123
https://github.com/hyperledger/fabric/blob/86f87ebcd8a1819e3832b289f2d94d4a88bb6e05/common/ledger/blkstorage/fsblkstorage/blockindex.go#L153
https://github.com/hyperledger/fabric/blob/86f87ebcd8a1819e3832b289f2d94d4a88bb6e05/common/ledger/blkstorage/fsblkstorage/blockindex.go#L163

This Requires rebuilding block storage index.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-16189,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|i008rj:iwy2",,,,Unset,,,,,,Unset,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Sep/19 11:24 AM;manish-sethi;https://gerrit.hyperledger.org/r/#/c/fabric/+/33361/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Add ""peer channel update"" with anchor peers in Behave Tests ",FAB-10588,30968,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,rlalgowdar,rlalgowdar,09/Jun/18 1:15 AM,30/Jul/19 11:22 AM,28/Oct/23 3:03 AM,30/Jul/19 11:22 AM,,,,,,,,,Future,,,fabric-quality,,,,,0,,,,,,,"Add ""peer channel update"" with anchor peers in Behave Tests.

Setting AnchorPeers in configTx.yaml is not enough to configure Anchor Peers.

After the Channel is created and Peer is joined to Channel, then we have to send command ""peer channel update"" to peer to set anchor peer.

 ",,mastersingh24,rlalgowdar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10589,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzefz:",,,,,,,,,,,,,,,,,,,,,mastersingh24,rlalgowdar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:22 AM;mastersingh24;done in integration tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"PTE support for ""peer channel update""s to configure anchor peers",FAB-10589,30969,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,rlalgowdar,rlalgowdar,rlalgowdar,09/Jun/18 1:17 AM,27/Jul/18 12:09 AM,28/Oct/23 3:03 AM,27/Jul/18 12:09 AM,,,,,,,,,Future,,,fabric-quality,,,,,0,,,,,,,"Add ""peer channel update"" with anchor peers in PTE Tests.

Setting AnchorPeers in configTx.yaml is not enough to configure Anchor Peers.

After the Channel is created and Peer is joined to Channel, then we have to send command ""peer channel update"" to peer to set anchor peer.",,rlalgowdar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10588,FAB-10135,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzeg7:",,,,,,,,,,,,,,,,,,,,,rlalgowdar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,true,"12/Jun/18 9:24 AM;scottz;https://gerrit.hyperledger.org/r/#/c/22967/;;;","14/Jul/18 4:26 AM;scottz;[~rlalgowdar], could you please add the rest of the changes that you did, while testing the sidedb test 10135? You may use the existing changeset. You may decide optionally whether to do this together with the new testcase scripts for FAB-10135.;;;","17/Jul/18 7:26 PM;rlalgowdar;https://gerrit.hyperledger.org/r/#/c/24477/;;;",,,,,,,,,,,,,,,,,,,,,,,,
Discovery CLI RST,FAB-10590,30975,30254,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,09/Jun/18 10:39 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,13/Jun/18 5:47 AM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzegv:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jun/18 10:51 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/22905/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Remove empty results from couchdb metadata,FAB-10592,30977,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,manish-sethi,manish-sethi,10/Jun/18 5:53 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,fabric-ledger,,,,,0,stale-item,,,,,,"The function `{color:#000000}BatchRetrieveDocumentMetadata{color}` returns a results-set that contains one entry for each key. ([https://github.com/hyperledger/fabric/blob/master/core/ledger/util/couchdb/couchdb.go#L1434).]

However, for the keys that are not present in the db, the result-set contains empty entries (empty in the sense that they don't even include even the key). The entry should either contain key or the entire entry should be removed. Otherwise, this is unnecessary cause confusion in the statecouchdb layer (e.g., the revision map gets filled with an empty entry """":"""").

This is how this empty entry looks like 
```
\{
 ID: (string) """",
 Rev: (string) """",
 Version: (string) """",
 AttachmentsInfo: (json.RawMessage) <nil>
}
```",,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzehb:",,,,Unset,,,,,,Unset,,,,,,,,,,,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor statecouchdb code for verifying bulkupload working,FAB-10593,30978,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,manish-sethi,manish-sethi,10/Jun/18 5:59 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,fabric-ledger,,,,,0,stale-item,,,,,,"The function that performs a bulkupload of docs to couchdb  `{color:#000000}commitUpdates{color}` ([https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/statedb/statecouchdb/commit_handling.go#L92)] monolithic in the sense that it retries committing the individual doc if the bulkupload fails. This makes it hard to write a test to make sure that bulkload works in a regular scenario (see related bug - FAB-10558).

This function and the code that uses this should be refactored such that a unit-test can be written to verify this.",,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtom:",,,,Unset,,,,,,Unset,,,,,,,,,,,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance gossip private data test - TestPullerAvoidPullingPurgedData,FAB-10594,30980,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,inbarbadian,yacovm,yacovm,10/Jun/18 7:42 PM,03/Oct/18 9:55 PM,28/Oct/23 3:03 AM,19/Jun/18 7:10 AM,,,,,,,,,v1.2.0,,,,,,,,0,hygiene,,,,,,"The test TestPullerAvoidPullingPurgedData has a scenario where a collection isn't retrieved because it is purged in one of the peers.

We need to enhance the test with a collection that is retrieved from a peer, to see that if a certain collection is not retrieved, it doesn't affect a different collection from being pulled.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzehz:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Jun/18 11:52 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/22917/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
CC platform specific launch configuration should be in platform specific code,FAB-10596,30983,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid,sstone1,sstone1,sstone1,11/Jun/18 9:33 PM,28/Sep/18 6:24 PM,28/Oct/23 3:03 AM,28/Sep/18 6:24 PM,,,,,,,,,,,,fabric-common,,,,,0,,,,,,,"Currently each chaincode platform is implemented as a package under {{core/chaincode/platforms}}. Each chaincode platform implements the {{Platform}} interface.

Whilst looking for the chaincode platform specific chaincode start commands, I found that this was implemented elsewhere in a big {{if}} block in {{ContainerRuntime.LaunchConfig}}.

It would be easier to find and cleaner if the chaincode start command was in the chaincode platform specific code instead!",,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzeif:",,,,Unset,,,,,,Unset,,,,,,,,,,,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NL adds anchor peer updatefor orgs,FAB-10597,30984,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,11/Jun/18 10:47 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,12/Jun/18 4:58 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,Add anchor peers update for orgs to Network Launcher,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6742,,,,,,,,,"1|hzzein:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"11/Jun/18 11:36 PM;dongming;https://gerrit.hyperledger.org/r/#/c/22937/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
CI - Make sure CI jobs are compatible for 1.2 release,FAB-10598,30985,,Task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,jtclark,rameshthoomu,rameshthoomu,12/Jun/18 12:10 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,22/Jun/18 3:07 PM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,"Make sure CI jobs are ready to publish 1.2 fabric, fabric-ca, npm modules to nexus and hyperledger dockerhub accounts.

 

Below are the latest jobs:

fabric:
[https://jenkins.hyperledger.org/view/Release/job/fabric-x86_64-release-job/]
[https://jenkins.hyperledger.org/view/Release/job/fabric-s390x-release-job/]

fabric-ca:
[https://jenkins.hyperledger.org/view/Release/job/fabric-ca-release-jobs-x86_64/]
[https://jenkins.hyperledger.org/view/Release/job/fabric-ca-release-jobs-s390x/]fabric-sdk-node
[https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-npm-release-x86_64/]

fabric-chaincode-node:
[https://jenkins.hyperledger.org/view/Release/job/fabric-chaincode-node-npm-release-x86_64/]

fabric-baseimage-thirdparty:
[https://jenkins.hyperledger.org/view/Release/job/fabric-baseimage-ppc64le-thirdparty-image-release-jobs/]
[https://jenkins.hyperledger.org/view/Release/job/fabric-baseimage-s390x-thirdparty-image-release-jobs/]
[https://jenkins.hyperledger.org/view/Release/job/fabric-baseimage-x86_64-thirdparty-image-release-jobs/]

fabric-baseimage-release:
[https://jenkins.hyperledger.org/view/Release/job/fabric-baseimage-x86_64-release-jobs/]
[https://jenkins.hyperledger.org/view/Release/job/fabric-baseimage-s390x-release-jobs/]
[https://jenkins.hyperledger.org/view/Release/job/fabric-baseimage-ppc64le-release-jobs/]",,ChristopherFerris,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykx3:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jun/18 12:44 AM;rameshthoomu;Ignore baseimage and thirdparty image release jobs;;;","12/Jun/18 12:55 AM;ChristopherFerris;Why is this a Bug? It's a Task.;;;","12/Jun/18 11:56 PM;jtclark;[~rameshthoomu] and I verified that the release jobs are ready for 1.2. We also identified modifications that need to be made for both the fabric and fabric-ca release jobs so that they are compatible with releasing images for the 1.0 branch/tag.;;;","15/Jun/18 2:24 AM;jtclark;To capture our findings after verifying each of the CI jobs, I created the following JIRA tasks:

* https://jira.hyperledger.org/browse/FAB-10611
* https://jira.hyperledger.org/browse/FAB-10633
* https://jira.hyperledger.org/browse/FAB-10646
* https://jira.hyperledger.org/browse/FAB-10648
* https://jira.hyperledger.org/browse/FAB-10651;;;",,,,,,,,,,,,,,,,,,,,,,,
peer stalls for a minute when waiting for private data,FAB-10599,30986,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,dongming,scottz,scottz,12/Jun/18 1:36 AM,31/Jul/19 6:11 AM,28/Oct/23 3:03 AM,31/Jul/19 6:11 AM,v1.2.0,,,,,,,,v1.4.0,,,fabric-gossip,fabric-ledger,,,,0,,,,,,,"While running PTE tool to run SideDB traffic on Fabric network using marbles_private chain code, we see 60 seconds delays in committing blocks at peer side. The orderer has already cut all blocks quickly, but the peer hesitates for a full minute before committing a block. _(We have learned that this is because it is trying to obtain private data from another peer in another org, which it is unable to do because there are no anchor peers defined. That configration is not the focus of this issue)._ This significantly impacts TPS in a negative way because the events for all transactions in the block are delivered only after waiting a full minute.

From peer logs we see 60 seconds cycle similar to below log entries (Note: the entries below are from earlier test however same pattern can be seen in attached log)

2018-06-07 19:07:32.421 UTC [kvledger] CommitWithPvtData -> INFO 0fa Channel [testorgschannel1]: Committed block [16] with 10 transaction(s)
 2018-06-07 19:08:32.473 UTC [kvledger] CommitWithPvtData -> INFO 106 Channel [testorgschannel1]: Committed block [17] with 10 transaction(s)
 2018-06-07 19:09:32.525 UTC [kvledger] CommitWithPvtData -> INFO 112 Channel [testorgschannel1]: Committed block [18] with 10 transaction(s)
 2018-06-07 19:10:32.575 UTC [kvledger] CommitWithPvtData -> INFO 11e Channel [testorgschannel1]: Committed block [19] with 10 transaction(s)

Why isn't the peer starting processing of other blocks while waiting for that one? Waiting for one block should not halt the committing of every block. The progress of the peer is slowed considerably, as it falls behind other peers very quickly.

We understand that to make things run smoothly we should define anchor peers. However, in lieu of that, we have a serious delay in the network progress because of this blocking behavior, which is blocking the peer from writing other channel transactions to the ledger - even if they do not use private data. I know the peer can request missing transactions from neighbor peers at times, so it is possible to have gaps in the ledger. So, this request is for consideration of changing the peer to be nonblocking when handling delivered blocks. In this particular case, since we have to wait up to a minute, then nothing else gets done. It appears the 60 delay is done in parallel for all 10 transactions within a block; otherwise the delay would be a minute per transaction (10 minutes) rather than exactly one minute. However, while waiting for the private data for that a transaction in one block, could the peer proceed with processing other transactions in other blocks?

This JIRA could be considered as a bug or as an improvement; we wrote it as a bug because it seems to identify a problematic behavior, from network operations point of view.",,denyeart,rlalgowdar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10582,FAB-5093,FAB-10135,FAB-11774,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzeiv:",,,,,,,,,,,,,,,,,,,,,denyeart,rlalgowdar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/18 10:36 PM;denyeart;The 60 second delay is based on config option *peer.gossip.pvtData.pullRetryThreshold* default of 60s.  This is being documented already and can be configured lower as desired. The default is intentionally long to draw attention to the network misconfiguration, rather than allowing many blocks to get committed with missing private data before the misconfiguration is noticed.

I think the right time to improve the behavior is when the private data 'reconcilliation' feature comes in FAB-5093, expected to be in v1.4 timeframe. At that point it will be possible to proceed with missing private data quicker, and then resolve the missing data via reconcilliation.  Until reconcilliation function exists, it is most important to draw attention to the misconfiguration.  I will link this to the reconcilliation feature FAB-5093 and return for now.

 ;;;","03/Dec/18 11:41 PM;scottz;Retest this scenario in v1.4 with FAB-11774.;;;","31/Jul/19 6:11 AM;scottz;Things work well with Reconciliation feature.
Accepting the Dev team description of behavior. Workarounds exist for observed behavior; we could add anchor peers or change the config parameter.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Process is hanging if peer join is failed in PTE,FAB-10600,30989,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,suryalnvs,suryalnvs,12/Jun/18 4:43 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,27/Jun/18 4:30 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"If joining peers to channel is failed, the join process hangs and will not continue further and following error will be seen
{code:java}
(node:110) UnhandledPromiseRejectionWarning: TypeError: Cannot read property 'stack' of undefined
    at hfc.newDefaultKeyValueStore.then.then.then.then.then (/root/go/src/github.com/hyperledger/fabric-test/tools/PTE/pte-main.js:957:90)
    at <anonymous>
(node:110) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)
(node:110) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:109) UnhandledPromiseRejectionWarning: TypeError: Cannot read property 'stack' of undefined
    at hfc.newDefaultKeyValueStore.then.then.then.then.then (/root/go/src/github.com/hyperledger/fabric-test/tools/PTE/pte-main.js:957:90)
    at <anonymous>
(node:109) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)
(node:109) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
{code}",,dongming,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzej3:",,,,,,,,,,,,,,,,,,,,,dongming,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"23/Jun/18 4:03 AM;dongming;add a user configurable timeout parameter, grpc-wait-for-ready-timeout, to timeoutOpt and

add setConfigSetting('grpc-wait-for-ready-timeout', new value);

default is 3000 ms;;;","27/Jun/18 1:01 AM;dongming;https://gerrit.hyperledger.org/r/#/c/23661/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
NL supports mutual TLS,FAB-10601,30990,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,12/Jun/18 5:02 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,18/Jun/18 11:06 PM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"NL supports mutual TLS

SDK configuration of mutual TLS: https://fabric-sdk-node.github.io/tutorial-mutual-tls.html",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10956,,,,,,,,,,,,,,,,,,,,,,,,FAB-6742,,,,,,,,,"1|hzzejb:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,true,"16/Jun/18 1:50 AM;dongming;https://gerrit.hyperledger.org/r/#/c/23199/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Error with FiltererBlock event when using PTE with v1.1,FAB-10603,30992,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,suryalnvs,suryalnvs,12/Jun/18 5:42 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,20/Jun/18 2:46 AM,,,,,,,,,v1.1.1,v1.2.0,,fabric-quality,,,,,0,,,,,,,"When running pte with v1.1 fabric, getting the following error for invokes saying filtered block event for <block> is undefined",,dongming,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzejr:",,,,,,,,,,,,,,,,,,,,,dongming,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Jun/18 4:12 AM;dongming;https://gerrit.hyperledger.org/r/#/c/22991/;;;","20/Jun/18 1:14 AM;dongming;https://gerrit.hyperledger.org/r/#/c/23333/;;;","20/Jun/18 2:40 AM;scottz;22991 was reverted, which is why we are pushing the corrected solution with 23333 to v1.1.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Fabric java sdk error under load,FAB-10604,30995,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aatkddny,aatkddny,12/Jun/18 6:54 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,11/Jul/18 12:34 AM,,,,,,,,,Future,,,fabric-peer,,,,,0,,,,,,,"When I stress test a fabric installation by writing <String, String> KV values from a multithreaded application the event hub errors out causing some of the messages to fail to write.

 

Updated - the following is copied from a comment below.

Bypassing the event hub causes the originally reported issue on the fabric peer to go away, but leaves an issue with the SDK.

*It occurs on both 1.1.0 and 1.2.0-SNAPSHOT - as the exception below shows.*

<reproduced from comment below>

Note for completeness, I just ran same on 1.2.0-SNAPSHOT vs a 1.1 Fabric.

Same problem occurs so the comment I added yesterday doesn't address this particular issue.

Note bolded grpc version in the exception below. 

{{2018-06-15 10:20:31.868 ERROR 12721 — [ool-7-thread-22] org.hyperledger.fabric.sdk.Channel : Sending proposal to xxx-peer1.xxx.com failed because of: gRPC failure=Status\{code=UNAVAILABLE, description=Channel shutdownNow invoked, cause=null}}}{{java.lang.Exception: io.grpc.StatusRuntimeException: UNAVAILABLE: Channel shutdownNow invoked}}
\{\{ at org.hyperledger.fabric.sdk.Channel.sendProposalToPeers(Channel.java:2766) [fabric-sdk-java-1.2.0-SNAPSHOT.jar:na]}}
\{\{ at org.hyperledger.fabric.sdk.Channel.sendProposal(Channel.java:2672) [fabric-sdk-java-1.2.0-SNAPSHOT.jar:na]}}
\{\{ at org.hyperledger.fabric.sdk.Channel.sendTransactionProposal(Channel.java:2557) [fabric-sdk-java-1.2.0-SNAPSHOT.jar:na]}}
\{\{ at com.mo.fabric.facade.InvokeFabric.invoke(InvokeFabric.java:138) [classes/:na]}}
\{\{ at com.mo.dare.processor.Processor.write(Processor.java:191) [classes/:na]}}
\{\{ at com.mo.dare.processor.Processor.create(Processor.java:94) [classes/:na]}}
\{\{ at com.mo.dare.endpoint.AgencyEndpoint.create(AgencyEndpoint.java:37) [classes/:na]}}
\{\{ at com.mo.dare.camel.AgencyPersist.process(AgencyPersist.java:34) [classes/:na]}}
\{\{ at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:103) [camel-core-2.19.3.jar:2.19.3]}}
\{\{ at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77) [camel-core-2.19.3.jar:2.19.3]}}
\{\{ at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541) [camel-core-2.19.3.jar:2.19.3]}}
\{\{ at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198) [camel-core-2.19.3.jar:2.19.3]}}
\{\{ at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541) [camel-core-2.19.3.jar:2.19.3]}}
\{\{ at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198) [camel-core-2.19.3.jar:2.19.3]}}
\{\{ at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:109) [camel-core-2.19.3.jar:2.19.3]}}
\{\{ at org.apache.camel.processor.MulticastProcessor.doProcessParallel(MulticastProcessor.java:841) [camel-core-2.19.3.jar:2.19.3]}}
\{\{ at org.apache.camel.processor.MulticastProcessor.access$200(MulticastProcessor.java:85) [camel-core-2.19.3.jar:2.19.3]}}
\{\{ at org.apache.camel.processor.MulticastProcessor$1.call(MulticastProcessor.java:328) [camel-core-2.19.3.jar:2.19.3]}}
\{\{ at org.apache.camel.processor.MulticastProcessor$1.call(MulticastProcessor.java:314) [camel-core-2.19.3.jar:2.19.3]}}
\{\{ at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_162]}}
\{\{ at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_162]}}
\{\{ at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_162]}}
\{\{ at java.lang.Thread.run(Thread.java:748) [na:1.8.0_162]}}
{{Caused by: io.grpc.StatusRuntimeException: UNAVAILABLE: Channel shutdownNow invoked}}
\{\{ at io.grpc.Status.asRuntimeException(Status.java:526) ~{color:#ff0000}*[grpc-core-1.12.0.jar:1.12.0]*{color}}}
\{\{ at io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:467) ~{color:#ff0000}*[grpc-stub-1.12.0.jar:1.12.0]*{color}}}
\{\{ at io.grpc.PartialForwardingClientCallListener.onClose(PartialForwardingClientCallListener.java:39) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.ForwardingClientCallListener.onClose(ForwardingClientCallListener.java:23) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.ForwardingClientCallListener$SimpleForwardingClientCallListener.onClose(ForwardingClientCallListener.java:40) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.internal.CensusStatsModule$StatsClientInterceptor$1$1.onClose(CensusStatsModule.java:684) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.PartialForwardingClientCallListener.onClose(PartialForwardingClientCallListener.java:39) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.ForwardingClientCallListener.onClose(ForwardingClientCallListener.java:23) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.ForwardingClientCallListener$SimpleForwardingClientCallListener.onClose(ForwardingClientCallListener.java:40) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.internal.CensusTracingModule$TracingClientInterceptor$1$1.onClose(CensusTracingModule.java:391) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:471) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:63) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl.close(ClientCallImpl.java:553) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl.access$600(ClientCallImpl.java:474) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:591) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ at io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:123) ~[grpc-core-1.12.0.jar:1.12.0]}}
\{\{ ... 3 common frames omitted}}

</reproduced from comment below>

Steps to reproduce remain the same:

Using the trivial chaincode supplied, or similar on a channel with a single org attached create around 20k 5kb strings with 15 byte keys. Use something multithreaded to pump them into the fabric using the java SDK using 200 threads. Error occurs consistently.

Same code running single threaded goes to completion.

Same code running with a limited number of threads (test with 10) runs to completion. 

Only when running with higher concurrency is the problem evident.

  ",,aatkddny,denyeart,rickr,wlahti,yeardan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jun/18 6:51 AM;aatkddny;asset.go;https://jira.hyperledger.org/secure/attachment/15093/asset.go","14/Jun/18 10:44 AM;aatkddny;javalog.txt;https://jira.hyperledger.org/secure/attachment/15106/javalog.txt","14/Jun/18 10:44 AM;aatkddny;networkconfig.txt;https://jira.hyperledger.org/secure/attachment/15105/networkconfig.txt","14/Jun/18 10:44 AM;aatkddny;peer1.txt;https://jira.hyperledger.org/secure/attachment/15107/peer1.txt",,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzejz:",,,,,,,,,,,,,,,,,,,,,aatkddny,denyeart,rickr,wlahti,yeardan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/18 1:07 AM;wlahti;Are you actively trying to use the eventhub for this scenario? Is it possible to use the peer's new deliver service instead? I believe the Java SDK refers to it as the ChannelEventHub. ;;;","14/Jun/18 2:15 AM;aatkddny;It does it regardless of what you are doing. 

In this particular case there's no eventing at all defined in the peer or the client.   

This is purely a load issue - I've tried single threaded, 10 threads and 200 threads and the first two work and the last doesn't.  ;;;","14/Jun/18 3:42 AM;rickr;Alan as we discussed already in rocket chat .. this happens even when you have no _legacy_ EventHubs created in your client side code correct ? (y/n) ? 


Now *without* the legacy EventHub created does this happen if on your client side you also don't create a Peer that has an event source role defined ?  Does it make any difference ? ;;;","14/Jun/18 3:56 AM;aatkddny;Rick, as I tried to say, it happens all ways. 

I've tried it all four ways. Event url, no event url, source true and source false. It happens with every combination I can think of.

Every single time I get that peer log message and then the client chokes. 

Frankly if I could have figured out a way to pump in 15k values into a default block setup (2s or 10tx cut) in a reasonable timeframe I'd have done that and not bothered with this jira. This all started because I was waiting 2s for each tx to complete in a giant for loop and wanted to speed it up. ;;;","14/Jun/18 4:30 AM;rickr;Ok I just wanted to make sure it was clear what the client side (SDK) configurations with respect to eventhubs and peer's with eventing service you experienced this with.  
Thanks.;;;","14/Jun/18 5:03 AM;wlahti;When you set PeerRole.EVENT_SOURCE for each of your connections that's using the java sdk client, you still see the exact error message you listed? 
{code:java}
15:49:44.435 UTC [eventhub_producer] Chat -> ERRO da13 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled{code}
What's the nature of the network setup you're using? It is your own local setup where only you are connecting to the peer(s)?

Looking at the eventhub code, I don't think that error message should ever occur unless some client(s) are still connecting to the eventhub's ""Chat"" service on the peer.

 

FYI: I'm also following-up to see if there's support for adding a way to explicitly disable the eventhub, which I think will benefit all working on/with fabric.;;;","14/Jun/18 6:45 AM;aatkddny;I don't set  PeerRole.EVENT_SOURCE directly. This is using the newer load from network config call. That role is triggered by the eventSource in the YAML and I've tried it both ways.

 ;;;","14/Jun/18 7:22 AM;rickr;Alan, can you for the scenario where you don't have any event urls in your network config add this after intializiing the channel :

if (!_channel_.getEventHubs().isEmpty()) {
            throw new RuntimeException(""didn't expect this :"" + _channel_.getEventHubs().size())
        }

make sure none are being created.

Then recreate ..  appreciate it. ;;;","14/Jun/18 7:39 AM;wlahti;Thanks, Rick. That should be a good datapoint to help us get to the bottom of this. 

I've been chatting with Alan in rocketchat and he's planning to recreate this again soon and send us the peer logs. [~aatkddny], hopefully you can also try Rick's suggestion above to see if there's still somehow an eventhub connection created by the SDK?

Alan also mentioned one other thing that I'll note here as it raises another possible cause: ""there's only one application connecting to the channel"". Alan, could you also confirm if there are any other applications connecting to other channels through the same peer? The eventhub is scoped at the peer level so any blocks committed to any channel's ledger on the peer will be sent as a block event to any clients listening to the eventhub even if that client is transacting on a different channel from the one you're testing. This may be completely irrelevant to this situation but I wanted to mention it since I don't have the full context and it could definitely cause this behavior on a peer under heavy load.;;;","14/Jun/18 10:35 AM;aatkddny;[~rickr] - it doesn't throw the runtime exception after the call to: 

{{channel = client.loadChannelFromConfig(name, org.getNetworkConfig());}};;;","14/Jun/18 10:49 AM;aatkddny;ok so i added three files.
 # the networkconfig file i'm using for this fabric to be sure that's not messed up.
 # the peer log from the peer that went wrong. unfortunately now while it's throwing the exceptions in the java code i can't find the  eventhub_producer ERRO from above. There are  eventhub_producer calls in it.
 # the java log. I stopped it too late and it doesn't show the start of the errors. You get the idea though.

Edit: Uck I changed configTx this afternoon. This one has 
MaxMessageCount: 200 instead of the default of 10. I will regenerate and rerun if necessary, please let me know.;;;","14/Jun/18 9:04 PM;rickr;Fairly ceratin then this code is not using any legacy EventHubs.;;;","14/Jun/18 9:10 PM;wlahti;In that log, I don't see any issues on the peer side. We see connections to the peer's deliver service (logged by ""common/deliver""), which is the service the Java SDK's EVENT_SOURCE role refers to, and blocks being sent out. From a quick search, I notice 8 connections to the deliver service.

The only eventhub log messages are the expected ones since the eventhub design will always receive a block on its event processor queue (as noted by the poorly worded log message ""[eventhub_producer] Send -> DEBU c06 Event sent successfully"" for which I am responsible adding when I was new to the project/golang and didn't quite understand the eventhub's (poor) design) which will simply be discarded when no clients are connected. ;;;","15/Jun/18 4:32 AM;aatkddny;since the eventhub part of this now doesn't reproduce this might help with the client side issue

so just to kill this for good - the client side may be fixed with an upgrade of the grpc code to 1.12 - or at least this very similar sounding error implies that that is the case. [https://github.com/grpc/grpc-java/issues/2601]

 ;;;","15/Jun/18 11:11 PM;wlahti;[~aatkddny] Would you mind updating the title, description, and component now that we've successfully bypassed the eventhub? It sounds like this is now likely an issue with the GRPC version used by the 1.1 Java SDK. ;;;","15/Jun/18 11:26 PM;aatkddny;[~wlahti] - done.

Note for completeness, I just ran same on 1.2.0-SNAPSHOT vs a 1.1 Fabric.

Same problem occurs so the comment I added yesterday doesn't address this particular issue.

Note bolded grpc version in the exception below. 



{{2018-06-15 10:20:31.868 ERROR 12721 --- [ool-7-thread-22] org.hyperledger.fabric.sdk.Channel : Sending proposal to xxx-peer1.xxx.com failed because of: gRPC failure=Status\{code=UNAVAILABLE, description=Channel shutdownNow invoked, cause=null}}}{{java.lang.Exception: io.grpc.StatusRuntimeException: UNAVAILABLE: Channel shutdownNow invoked}}
{{ at org.hyperledger.fabric.sdk.Channel.sendProposalToPeers(Channel.java:2766) [fabric-sdk-java-1.2.0-SNAPSHOT.jar:na]}}
{{ at org.hyperledger.fabric.sdk.Channel.sendProposal(Channel.java:2672) [fabric-sdk-java-1.2.0-SNAPSHOT.jar:na]}}
{{ at org.hyperledger.fabric.sdk.Channel.sendTransactionProposal(Channel.java:2557) [fabric-sdk-java-1.2.0-SNAPSHOT.jar:na]}}
{{ at com.mo.fabric.facade.InvokeFabric.invoke(InvokeFabric.java:138) [classes/:na]}}
{{ at com.mo.dare.processor.Processor.write(Processor.java:191) [classes/:na]}}
{{ at com.mo.dare.processor.Processor.create(Processor.java:94) [classes/:na]}}
{{ at com.mo.dare.endpoint.AgencyEndpoint.create(AgencyEndpoint.java:37) [classes/:na]}}
{{ at com.mo.dare.camel.AgencyPersist.process(AgencyPersist.java:34) [classes/:na]}}
{{ at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:103) [camel-core-2.19.3.jar:2.19.3]}}
{{ at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77) [camel-core-2.19.3.jar:2.19.3]}}
{{ at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541) [camel-core-2.19.3.jar:2.19.3]}}
{{ at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198) [camel-core-2.19.3.jar:2.19.3]}}
{{ at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541) [camel-core-2.19.3.jar:2.19.3]}}
{{ at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198) [camel-core-2.19.3.jar:2.19.3]}}
{{ at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:109) [camel-core-2.19.3.jar:2.19.3]}}
{{ at org.apache.camel.processor.MulticastProcessor.doProcessParallel(MulticastProcessor.java:841) [camel-core-2.19.3.jar:2.19.3]}}
{{ at org.apache.camel.processor.MulticastProcessor.access$200(MulticastProcessor.java:85) [camel-core-2.19.3.jar:2.19.3]}}
{{ at org.apache.camel.processor.MulticastProcessor$1.call(MulticastProcessor.java:328) [camel-core-2.19.3.jar:2.19.3]}}
{{ at org.apache.camel.processor.MulticastProcessor$1.call(MulticastProcessor.java:314) [camel-core-2.19.3.jar:2.19.3]}}
{{ at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_162]}}
{{ at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_162]}}
{{ at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_162]}}
{{ at java.lang.Thread.run(Thread.java:748) [na:1.8.0_162]}}
{{Caused by: io.grpc.StatusRuntimeException: UNAVAILABLE: Channel shutdownNow invoked}}
{{ at io.grpc.Status.asRuntimeException(Status.java:526) ~{color:#ff0000}*[grpc-core-1.12.0.jar:1.12.0]*{color}}}
{{ at io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:467) ~{color:#ff0000}*[grpc-stub-1.12.0.jar:1.12.0]*{color}}}
{{ at io.grpc.PartialForwardingClientCallListener.onClose(PartialForwardingClientCallListener.java:39) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.ForwardingClientCallListener.onClose(ForwardingClientCallListener.java:23) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.ForwardingClientCallListener$SimpleForwardingClientCallListener.onClose(ForwardingClientCallListener.java:40) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.internal.CensusStatsModule$StatsClientInterceptor$1$1.onClose(CensusStatsModule.java:684) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.PartialForwardingClientCallListener.onClose(PartialForwardingClientCallListener.java:39) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.ForwardingClientCallListener.onClose(ForwardingClientCallListener.java:23) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.ForwardingClientCallListener$SimpleForwardingClientCallListener.onClose(ForwardingClientCallListener.java:40) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.internal.CensusTracingModule$TracingClientInterceptor$1$1.onClose(CensusTracingModule.java:391) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:471) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:63) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl.close(ClientCallImpl.java:553) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl.access$600(ClientCallImpl.java:474) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:591) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ at io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:123) ~[grpc-core-1.12.0.jar:1.12.0]}}
{{ ... 3 common frames omitted}};;;","15/Jun/18 11:32 PM;wlahti;Interesting. Thanks for the update. It would also be best for everyone working on the project if you put the newest log in the description above in place of the eventhub logs, just to keep it clear where the focus should be. ;;;","15/Jun/18 11:48 PM;aatkddny;done. pls advise if you need anything else from me to remediate.;;;","18/Jun/18 9:20 PM;denyeart;[~wlahti] [~rickr] Could you summarize where we are with this one? Do we expect a fix in v1.2?;;;","18/Jun/18 10:48 PM;rickr;The SDK has the latest grpc levels available in the 1.2.0-SNAPSHOTs There is nothing I can see that would affect the SDK underload differently. This maybe several things yet:  GRPC/HTTP2 error on Java client side,  GRPC/HTTP2 GO error on the server side.  A bug under load on the Peer side. 

An interesting scenario would be if this could be tested with two or more clients (preferably on different vms but that's a stretch) with a lesser load hitting the same Peer.;;;","10/Jul/18 12:50 AM;rickr;I've created a testcase that is a multithreaded version of End2end. With 20 threads running  through the scenarios of getting endorsement sending endorsements to the Orderer and then doing various queries over a 4 hour period and validating the results with not seeing any issues.   While no such test can be fully exhaustive I think this covered a large part. Need a testcase I can run locally that will reproduce. ;;;","11/Jul/18 12:33 AM;rickr;I think there's a good chance this is related to two issues FAB-11094 and/or FAB-10966 that updates dependencies for issues for a netty inifinite loop. 

Since I can't reproduce please provide a localy run testase that does so and with these fixes appllied -- if it reproduce that reopen.;;;",,,,,
Create a Jenkins job to publish the docker third-party images to the nexus repo.,FAB-10611,31012,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,jtclark,jtclark,13/Jun/18 1:24 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,20/Jun/18 5:56 AM,v1.2.0,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,,,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzelz:",,,,,,,,,,,,,,,,,,,,,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/18 1:08 PM;jtclark;Patchset is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/23053/;;;","20/Jun/18 5:56 AM;jtclark;Patchset is *MERGED*: https://gerrit.hyperledger.org/r/#/c/23053/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
PTE - update PTE README.md for Mac OS (darwin),FAB-10612,31018,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nileshdeotale,nileshdeotale,nileshdeotale,13/Jun/18 3:49 AM,06/Aug/18 11:26 PM,28/Oct/23 3:03 AM,06/Aug/18 11:26 PM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"Currently PTE cannot be run directly on MacOS although I followed steps as mentioned in README.md.
 # Update README to include correct pre-requisite steps for Mac

Below errors are seen when trying to install gdate as per current README.md

 
{code:java}
nileshs-mbp:PTE nileshdeotale$ brew install gdate --with-default-names
Updating Homebrew...
==> Auto-updated Homebrew!
Updated 2 taps (homebrew/core, homebrew/cask).
==> Updated Formulae
azure-cli
Error: No available formula with the name ""gdate""
==> Searching for a previously deleted formula (in the last month)...
Warning: homebrew/core is shallow clone. To get complete history run:
  git -C ""$(brew --repo homebrew/core)"" fetch --unshallow
Error: No previously deleted formula found.
==> Searching for similarly named formulae...
==> Searching local taps...
Error: No similarly named formulae found.
==> Searching taps...
==> Searching taps on GitHub...
Error: No formulae found in taps.
nileshs-mbp:PTE nileshdeotale$ uname -a
Darwin nileshs-mbp.raleigh.ibm.com 17.5.0 Darwin Kernel Version 17.5.0: Mon Mar  5 22:24:32 PST 2018; root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64
 
{code}
 

 

 ",,nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzemf:",,,,,,,,,,,,,,,,,,,,,nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
ReadTheDocs - getting started,FAB-10613,31019,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid,joe-alewine,nagap,nagap,13/Jun/18 4:20 AM,10/Jan/20 4:41 AM,28/Oct/23 3:03 AM,10/Jan/20 4:41 AM,v1.1.0,,,,,,,,,,,fabric-docs,,,,,0,documentation,,,,,,"Below link says '_It retrieves *four* platform-specific binaries'_ but the list shows 6 bindaries being downloaded instead. Not clear if 4 of 6 are platform-dependent while 2 or not, OR, a typo. Being binaries, my guess is four needs be changed to six.

[https://hyperledger-fabric.readthedocs.io/en/release-1.1/samples.html#download-platform-specific-binaries]

 

 ",,joe-alewine,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzemn:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jul/18 1:15 AM;joe-alewine;This is in the v1.1 doc repo. Was that the correct number of binaries then?;;;","10/Jan/20 4:41 AM;joe-alewine;Very old doc now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
link discovery doc to TOC,FAB-10614,31020,30254,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,13/Jun/18 5:50 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,17/Jun/18 11:01 PM,,,,,,,,,,,,fabric-docs,,,,,0,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzemv:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reserved Field Names in CouchDB (validation-time support) - Add invalid write-set check as a retrospective fix ,FAB-10617,31026,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,manish-sethi,manish-sethi,manish-sethi,13/Jun/18 4:36 PM,01/Feb/19 10:43 AM,28/Oct/23 3:03 AM,01/Feb/19 10:43 AM,,,,,,,,,v1.1.2,v1.2.0,,fabric-ledger,,,,,0,must-fix,,,,,,"In fabric v1.1, if a user tries to put a JSON doc that has a field name that starts with an underscore, then the simulation passes because a limited validation is performed during simulation (limited to four fields names specifically). FAB-8877 is supposed to enhance these checks.

However, in case existing peers get stuck because of this, a check is needed during validation.

 ",,denyeart,manish-sethi,zRich,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8877,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzenz:",,,,,,,,,,,,,,,,,,,,,denyeart,manish-sethi,zRich,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Jun/18 10:24 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/23013/;;;","16/Jun/18 6:36 AM;denyeart;The problem occurs if using CouchDB as state database and if the top level JSON has a _underscore field that is illegal in CouchDB, beyond the four specific illegal fields that are already checked since v1.1.

I think a fix is must-have for v1.2, as well as a backport for v1.1.1, since a channel that hits this issue will get blocked from forward progress until the fix is applied.  The fix will allow the channel to continue by invalidating any of the problematic transactions.;;;","19/Jun/18 11:36 PM;denyeart;[~manish-sethi] is doing a deeper assessment, I will hold off labeling as 'must-fix' in v1.2 until we hear back from Manish.;;;","21/Jun/18 10:29 PM;denyeart;[https://gerrit.hyperledger.org/r/#/c/23013/] is ready now.;;;","28/Jun/18 7:10 PM;denyeart;The fix approach looks good, I've gone ahead and tagged as must-fix.;;;","28/Jun/18 7:27 PM;denyeart;[https://gerrit.hyperledger.org/r/#/c/23013/]  merged in master.

[https://gerrit.hyperledger.org/r/#/c/23785/] cherry picked to release-1.2.;;;","28/Jan/19 2:00 AM;denyeart;[~manish-sethi] I believe we still need the fix backported to release-1.1.;;;","29/Jan/19 4:15 AM;manish-sethi;Backport to release-1.1 https://gerrit.hyperledger.org/r/#/c/28983/...
Also, a manual backport of a related cr - https://gerrit.hyperledger.org/r/#/c/28982/;;;",,,,,,,,,,,,,,,,,,,
Makefile does not work in cygwin64,FAB-10618,31028,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,smldragon,smldragon,smldragon,13/Jun/18 8:25 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,v1.1.0,,,,,,,,,,,fabric-build,,,,15/Jun/18 12:00 AM,0,build,make,Makefile,quality,stale-item,,"make all generates following error:

.build/bin/peer
peer github.com/hyperledger/fabric/peer
CGO_CFLAGS="" "" GOBIN=/cygdrive/i/go/src/github.com/hyperledger/fabric/.build/bin go install -tags ""experimental"" -ldflags ""-X github.com/hyperledger/fabric/common/metadata.Version=1.2.0-snapshot-efbe29f6a -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.4.8 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.Experimental=true"" github.com/hyperledger/fabric/peer
cannot install, GOBIN must be an absolute path
make: *** [Makefile:259: .build/bin/peer] Error 1

Solution: In Makefile, command

$(CGO_FLAGS) GOBIN=$(abspath $(@D)) go install -tags ""$(GO_TAGS)"" -ldflags ""$(GO_LDFLAGS)"" $(pkgmap.$(@F))

should be broke into 3 lines as:

$(CGO_FLAGS)

GOBIN=$(abspath $(@D))

go install -tags ""$(GO_TAGS)"" -ldflags ""$(GO_LDFLAGS)"" $(pkgmap.$(@F))",,smldragon,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzeo7:",,,,Unset,,,,,,Unset,,,,,,,,,,,smldragon,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jun/18 7:08 AM;smldragon;Hi the Maintainer, 

Please review this issue. I have fixed the issue and am waiting for your response to push changes. Thanks;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"Channel name ""undefined"" in couchdb functional tests",FAB-10619,31029,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,rameshthoomu,rameshthoomu,13/Jun/18 10:09 PM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,22/Jun/18 2:38 AM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,ci-failure,,,,,,"Observed channel undefined error in couchdb functional tests.

fabric# [8e98c25|https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric-stable/darwin-amd64.1.2.0-stable-8e98c25/]
h3.  
{code:java}
Stacktrace
Failing step: When a user sets up a channel named ""mychannel1"" ... undefined in 0.000s Location: CouchDB_index.feature:188 None
{code}
*StackTrace:*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-svt-x86_64/45/testReport/CouchDB_index/Testing%20Fabric%20CouchDB%20indexing/FAB_7257__FAB_7258__Test_CouchDB_indexing_using_install_after_instantiate_with_marbles_chaincode_using_GOLANG_with_3_channels_and_1_index_____1_1_/

 ",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykwv:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"19/Jun/18 5:15 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23269/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update nightly build to publish missing docker images ,FAB-10620,31030,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,13/Jun/18 10:13 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,14/Jun/18 3:51 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,"Update nightly build to publish missing docker images to nexus

hyperledger/fabric-ca-fvt:latest

hyperledger/fabric-ca-tools:latest",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykwn:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/18 12:39 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23021/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Pull fabric-ca-fvt and fabric-ca-tools images in fabric-test repo,FAB-10623,31035,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Jun/18 12:40 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,22/Jun/18 3:06 PM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,,,,,,,Pull fabric-ca-fvt and fabric-ca-tools images in fabric-test repo while pulling docker images.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzepb:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"22/Jun/18 3:07 PM;rameshthoomu;Updated script in fabric-test repo to pull fabric-ca dependent images.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE:  creating-a-local-fabric-network steps do not work for Mac ,FAB-10626,31040,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,nileshdeotale,nileshdeotale,14/Jun/18 3:27 AM,30/Jul/19 11:40 AM,28/Oct/23 3:03 AM,30/Jul/19 11:40 AM,,,,,,,,,,,,fabric-quality,,,,,0,bug,quality,,,,,"Please add steps applicable for Mac (Darwin).

[https://github.com/hyperledger/fabric-test/tree/master/tools/PTE#creating-a-local-fabric-network]

uname -a

Darwin myhost 17.5.0 Darwin Kernel Version 17.5.0: Mon Mar  5 22:24:32 PST 2018; root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64",,mastersingh24,nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzepz:",,,,,,,,,,,,,,,,,,,,,mastersingh24,nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:40 AM;mastersingh24;been open over a year with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
SVT tests: set RFset size to 3 in all NL/PTE tests using kafka,FAB-10628,31042,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,chilipepper,scottz,scottz,14/Jun/18 3:41 AM,30/Jul/19 11:40 AM,28/Oct/23 3:03 AM,30/Jul/19 11:40 AM,,,,,,,,,v1.3.0,,,fabric-quality,,,,,0,help-wanted,,,,,,"Currently NL sets RFsize to the same number of kafka brokers (-k). Our basic kafka network, which is used in most of our PTE tests, and possibly in behave tests too, uses 4 or more kafka brokers, but they were intendeing to use RFsize = 3 along with MinISR=2.

To fix this, add the ""-e 3"" option (an option which was recently added to NL by FAB-10393) to all scripts (such as test_nl.sh) that call networkLauncher.sh using kafka option ""-k"" (but not necessary for the ""solo"" tests).",N_,chilipepper,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzeqf:",,,,,,,,,,,,,,,,,,,,,chilipepper,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"16/Jun/18 9:42 PM;chilipepper;Followed the instructions on [github|https://github.com/hyperledger/fabric-test] to clone the repo, made the change, committed locally, Trying to push and get error:
 ```
 remote: Permission to hyperledger/fabric-test.git denied to leeloodub.
 fatal: unable to access 'https://github.com/hyperledger/fabric-test.git/': The requested URL returned error: 403
 ``` 
 Is not everyone allowed to make changed to fabric-test? ;;;","17/Jun/18 1:00 AM;scottz;[http://hyperledger-fabric.readthedocs.io/en/master/CONTRIBUTING.html]

Follow the directions to get LFID, set up gerrit, clone the repo with git hooks, and submit a patchset for review.

We submit patchsets with gerrit, not with github (which is only a mirror). Yes everyone is allowed to do it.;;;","17/Jun/18 1:20 AM;chilipepper;https://gerrit.hyperledger.org/r/23221;;;","30/Jul/19 11:40 AM;mastersingh24;been open over a year with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,
PTE latency mode failed,FAB-10629,31044,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,14/Jun/18 4:32 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,27/Jun/18 4:31 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"PTE test case FAB-7647 fails:

[Nid:chan:org:id=0:testorgschannel1:org1:0 eventRegisterFilteredBlock] pte-exec: Failure - received filtered_block.number but filtered_transactions is undefined",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/18 7:41 AM;dongming;FilteredBlock-B1-1.json;https://jira.hyperledger.org/secure/attachment/15137/FilteredBlock-B1-1.json","21/Jun/18 7:42 AM;dongming;peer-filtered-1.txt;https://jira.hyperledger.org/secure/attachment/15138/peer-filtered-1.txt",,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzeqn:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,release-1.1,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,true,"21/Jun/18 7:19 AM;dongming;The issue is seen with fabric-ca-client@1.2.0-snapshot.68 and fabric-client@1.2.0-snapshot.68

steps to recreate:

1. bringup network with batchsize=1

2. register FilteredBlock event

3. send a transaction

4. receive event with the format of regular block (see FilteredBlock-B1-1.json) instead of a filtered block

 

This causes PTE latency mode transactions failed

 ;;;","22/Jun/18 3:04 AM;dongming;https://gerrit.hyperledger.org/r/#/c/23461/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"OTE tests, rare failure - orderers not ready yet",FAB-10630,31045,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,scottz,scottz,14/Jun/18 4:41 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,02/Jul/18 12:43 AM,,,,,,,,,v1.3.0,,,fabric-quality,,,,,0,ci-failure,,,,,,"Relevant logs seen:
{quote}Creating Channels
1

2018-06-08 12:48:17.338 UTC [channelCmd] InitCmdFactory -> INFO 001#x1B[0m Endorser and orderer connections initialized
*Error: got unexpected status: SERVICE_UNAVAILABLE -- will not enqueue, consenter for this channel hasn't started yet*

========== OTE testname=FAB-7074 TX=15000 Channels=1 Orderers=3 ordererType=kafka kafka-brokers=5 oteSpy=OFF producersPerCh=1 payloadSizeKB=10
2018-06-08 12:48:56.677 UTC [localconfig] completeInitialization -> INFO 001#x1B[0m Kafka.Version unset, setting to 0.10.2.0
OTE_MASTERSPY=<ignored> masterSpy=OFF
OTE_SPY_ORDERER=<ignored> spyOrd=0
CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT= batchSize=10
CONFIGTX_ORDERER_BATCHTIMEOUT= batchTimeout=2
CORE_LOGGING_LEVEL=
CORE_LEDGER_STATE_STATEDATABASE=
Using 1 new channelIDs, e.g. testchan321
Started client Consumer-o0-c0 to recv delivered batches srvr=orderer0.example.com:7050 chID=testorgschannel1
Got DeliverResponse_Status: &\{NOT_FOUND}
Started client Consumer-o1-c0 to recv delivered batches srvr=orderer1.example.com:7050 chID=testorgschannel1
Got DeliverResponse_Status: &\{NOT_FOUND}
Started client Consumer-o2-c0 to recv delivered batches srvr=orderer2.example.com:7050 chID=testorgschannel1
Got DeliverResponse_Status: &\{NOT_FOUND}
Finished creating all CONSUMERS clients
Finished creating all 3 PRODUCERs at 2018-06-08 12:49:06.691862679 +0000 UTC m=+10.053133900
Starting Producer to send 5000 TXs to ord[0] ch[0] srvr=orderer0.example.com:7050 chID=testorgschannel1, 2018-06-08 12:49:09.696784231 +0000 UTC m=+13.058055556
Starting Producer to send 5000 TXs to ord[1] ch[0] srvr=orderer1.example.com:7050 chID=testorgschannel1, 2018-06-08 12:49:09.69763104 +0000 UTC m=+13.058902354
Starting Producer to send 5000 TXs to ord[2] ch[0] srvr=orderer2.example.com:7050 chID=testorgschannel1, 2018-06-08 12:49:09.698831768 +0000 UTC m=+13.060103053
Producer-o0-c0 failed to broadcast TX 0 (ACK=0 NACK=1), 2018-06-08 12:49:11.699883356 +0000 UTC m=+15.061154628, err: Got unexpected status: SERVICE_UNAVAILABLE
Producer-o1-c0 failed to broadcast TX 0 (ACK=0 NACK=1), 2018-06-08 12:49:11.700169302 +0000 UTC m=+15.061440589, err: Got unexpected status: SERVICE_UNAVAILABLE
Producer-o2-c0 failed to broadcast TX 0 (ACK=0 NACK=1), 2018-06-08 12:49:11.701080086 +0000 UTC m=+15.062351337, err: Got unexpected status: SERVICE_UNAVAILABLE
{quote}
Problem Description:

Tests in CI jobs fail occasionally. In this particular daily test run, FAB-7074 failed but 23 other tests succeeded. Most test runs do NOT reveal a failure like this. It is rare, and seems to be a race condition. We use NetworkLauncher to bring up a network using docker-compose, and then immediately a bash script to create channels, and then execute the test. In the logs above, you can see the script echo out the ""Creating Channels"" message and the number of channels to be created, and then the error log that can be printed by the orderer. From that point, the OTE test continues, and you can see the logs from the test that indicate failures to connect to the orderer from the 3 orderer consumers and the 3 orderer producers.

We could discuss with design team, because the error message does not say *what* it will not enqueue; more information might be helpful.

 

Nevertheless, based on the likelihood that the orderer is simply not fully running yet by the time we create the channels and run the test, my suggestions are:

1. To increase the delay before creating channels after launching the network, we could increase the sleep time by editing this line in OTE/ote-compose.yml :
{quote}command: sh -c 'sleep 30 && ./script.sh'
{quote}
2. Try increasing the delay after creating channels before proceeding with test 
 (creating consumers and producers that connect to the orderer); to do this, edit this line in OTE/script.sh to increase the sleep time:
{quote}sleep 30
 go test -run $TESTCASE -timeout=90m
{quote}",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/18 4:39 AM;scottz;ote_test_failure_logs.txt;https://jira.hyperledger.org/secure/attachment/15101/ote_test_failure_logs.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzeqv:",,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,true,"02/Jul/18 12:43 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/23905/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
peer channel update transaction failed,FAB-10631,31052,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Test Error,jyellick,nagap,nagap,14/Jun/18 7:39 AM,15/Oct/18 12:28 PM,28/Oct/23 3:03 AM,15/Oct/18 12:28 PM,v1.1.0,v1.2.0,,,,,,,,,,fabric-tools,,,,,0,fabric-cli,fabric-samples,SystemTestcase,,,,"# Testing BYFN with Fabric v1.1.0 images and binaries.
 # Updating the channel definition to define peer0 of Org2 as it's anchor peer _failed_ with ""unexpected status: FORBIDDEN""
 # Reissuing the same transaction again after few seconds went through successfully.
 # Please find attached system information and the error msg.

Please investigate why step 2 above has failed and if it's acceptable behavior per design?

 ",Please see attached system information png.,denyeart,jyellick,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10187,,,,,,,,"14/Jun/18 7:31 AM;nagap;orderer.log;https://jira.hyperledger.org/secure/attachment/15104/orderer.log","14/Jun/18 7:32 AM;nagap;peer-chnl-update.png;https://jira.hyperledger.org/secure/attachment/15102/peer-chnl-update.png","14/Jun/18 7:32 AM;nagap;sys-info.png;https://jira.hyperledger.org/secure/attachment/15103/sys-info.png",,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzerz:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jun/18 8:52 PM;denyeart;[~jyellick] Could you assess?;;;","19/Jun/18 11:41 PM;jyellick;The exact reason for the failure is logged by the orderer:


{noformat}
Principal deserialization failure (the supplied identity is not valid: x509: certificate signed by unknown authority) for identity 
{noformat}

Inspecting your certificate as logged by the orderer, I see the following:


{noformat}
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            ff:fd:2f:cf:f8:00:82:78:1b:37:a2:9c:4a:62:37:6b
    Signature Algorithm: ecdsa-with-SHA256
        Issuer: C = US, ST = California, L = San Francisco, O = org1.example.com, CN = ca.org1.example.com
        Validity
            Not Before: Jun 13 19:47:58 2018 GMT
            Not After : Jun 10 19:47:58 2028 GMT
        Subject: C = US, ST = California, L = San Francisco, OU = client, CN = Admin@org1.example.com
        Subject Public Key Info:
            Public Key Algorithm: id-ecPublicKey
                Public-Key: (256 bit)
                pub:
                    04:08:aa:05:7f:11:9a:04:5b:bb:3e:0b:c2:d3:86:
                    e6:33:9e:00:7c:5c:45:65:e5:47:b8:d6:ff:93:0c:
                    45:f2:22:78:82:d6:ea:ab:53:6a:67:e4:3d:2f:6f:
                    39:c5:b6:40:a0:eb:01:38:07:07:e7:4b:a7:3f:59:
                    8d:a5:e4:80:7c
                ASN1 OID: prime256v1
                NIST CURVE: P-256
        X509v3 extensions:
            X509v3 Key Usage: critical
                Digital Signature
            X509v3 Basic Constraints: critical
                CA:FALSE
            X509v3 Authority Key Identifier: 
                keyid:AC:9D:A9:C0:D9:A3:76:DB:E7:02:26:37:85:35:33:FB:2C:23:04:02:10:E0:0F:7B:7E:B3:6D:17:13:08:A8:04

    Signature Algorithm: ecdsa-with-SHA256
         30:45:02:21:00:e8:f3:0e:65:a3:cc:d2:0f:11:c9:e8:38:75:
         3f:dc:7c:db:af:1c:d4:cb:5e:17:52:f8:01:88:d2:3c:10:05:
         b5:02:20:18:50:d7:7b:d7:19:91:cf:31:d0:2e:b4:f1:ff:30:
         20:a7:2d:51:6c:83:77:2b:c8:f3:6d:f8:49:80:93:44:bc
{noformat}

Notice particularly:

{noformat}
CN = Admin@org1.example.com
{noformat}

But from your screenshot, the user you are attempting to submit as is actually the Org2.Admin.  The orderer is looking up the CAs for Org2, and finding that Org1.admin's certificate is not validly issued by Org2, and rejecting it.

If later this succeeds, I can only assume that the certificate presented is different.  Is it possible somehow the bytes on the filesystem are changing in your failure scenario?;;;","15/Oct/18 12:27 PM;denyeart;No update for months, closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Usability: Inconsistent Mutual TLS Root CA list variable for peers and orderers,FAB-10632,31053,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,latitiah,latitiah,14/Jun/18 8:07 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-peer,,,,,0,stale-item,,,,,,"The orderer for listing Root CAs *ORDERER_GENERAL_TLS_CLIENTROOTCAS*. It expects a list of certificates. When setting in docker compose, the certificates are a comma separated list within brackets. [/data/org0-ca-chain.pem]

The peer for listing Root CAs *CORE_PEER_TLS_CLIENTROOTCAS_FILES*. In the yaml file, it also expects a list, but in docker compose, when using a comma separated list within brackets, the following error occurs:
{code:java}
Error: Failed to get client TLS config: Failed to read '/var/hyperledger/orderer/[/var/hyperledger/configs/ca.org0-cert.pem': open /var/hyperledger/orderer/[/var/hyperledger/configs/ca.org0-cert.pem: no such file or directory{code}",,denyeart,latitiah,mastersingh24,sykesm,zRich,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzes7:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,latitiah,mastersingh24,sykesm,zRich,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/18 10:10 PM;denyeart;As we'll need backward compatibility, I think we will need to make the peer tolerate the brackets.;;;","16/Jun/18 1:38 AM;Clayton Sims;lititia did you mean this as a sev1?

 ;;;","16/Jun/18 2:31 AM;mastersingh24;This should most definitely not be a sev1.  This setting should RARELY be used other than to add the root cert for the org itself.  All of the other roots are propagated via the MSPs in the channel config(s).;;;","16/Jun/18 5:06 AM;sykesm;[~latitiah] can you provide the snippets you're using in compose?

Also, I feel a little dense but I'm having trouble understanding exactly what you're looking for. You're showing an error message but the defect says usability and it's high severity. You're referencing YAML but providing the env vars that are supposed to take precedence.

Are you trying to say that the orderer requires a comma separated list in square brackets for its environment variable and the peer does not support that?;;;","18/Jun/18 4:51 AM;mastersingh24;[~sykesm] - It's not that the orderer requires it, it is that the orderer supports it and the peer does not.  The orderer uses common/viperutil to unmarshal the config and adds a nice feature to parse comma-separated lists of strings into string slices ( [https://github.com/hyperledger/fabric/blob/master/common/viperutil/config_util.go#L104-L111] ) whereas the peer just uses straight Viper (at least to parse the TLS config - [https://github.com/hyperledger/fabric/blob/master/core/peer/config.go#L148] ).

I'd have to try it out again, but I believe that Viper allows you to use space delimited strings in environment variables which correspond to string slices, e.g. TLS_CAS=""/ca1 /ca2 /ca3"".

So in my opinion, this is not a bug but rather an improvement (granted we do need a more consistent approach to config).

I'm going to mark this as an improvement.  I'll set the fix version as future for now;;;","18/Jun/18 11:50 PM;latitiah;The following docker composition file snippets fail with the above mentioned error:
For the orderer environment:
{code}
 - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
 - ORDERER_GENERAL_TLS_CLIENTROOTCAS=[/var/hyperledger/tls/ca.crt, /var/hyperledger/ca/ca.example.com-cert.pem]
{code}
For the peer environment:
{code}
 - CORE_PEER_TLS_CLIENTROOTCAS_FILES=[/var/hyperledger/tls/ca.crt, /var/hyperledger/ca/ca.org1.example.com-cert.pem]
{code}

This should work, or give the same formatting error. In other words, choose a format and stick with it when specifying lists in the config.

The names are also inconsistent, though I get the backwards compatibility issue. At some point (maybe by the time we go to 2.x), we should consider changing this over. (Add the new name with warning of deprecating the old.) ;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,
Make the fabric release jobs compatible with the 1.0 branch,FAB-10633,31054,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,jtclark,jtclark,14/Jun/18 10:14 AM,24/Jul/18 1:34 AM,28/Oct/23 3:03 AM,24/Jul/18 1:34 AM,v1.2.0,,,,,,,,Future,,,fabric-ci,,,,,0,,,,,,,"The release job for the fabric project is not compatible with the release-1.0 branch. The release job for the 1.0 should include publishing the fabric-javaenv image. 

Add a javaenv section to the release-1.0 check in the image release script for both the fabric-x86_64-release-job and fabric-s390x-release-job.",,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzesf:",,,,,,,,,,,,,,,,,,,,,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/18 10:39 AM;jtclark;Patchset is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/23265/;;;","24/Jul/18 1:34 AM;jtclark;Patchset has been **MERGED**: https://gerrit.hyperledger.org/r/#/c/23265/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Peer logs showing many spurious Warnings for CouchDB batch document delete. ,FAB-10634,31057,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,rlalgowdar,rlalgowdar,14/Jun/18 6:08 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,,,,,,,,,Future,,,fabric-ledger,,,,,0,Ledger,,,,,,"While running performance test FAB-10134, (marbles02_private chaincode invokes) the peer logs showing many WARN messages.

These WARN messages are many in numbers and also there is no followup message if it ever succeeded or failed.

2018-06-14 08:48:07.820 UTC [statecouchdb] commitUpdates -> WARN ac6 CouchDB batch document delete encountered an problem. Retrying delete for document ID:marble_testorgschannel1_org1_0_0_215
2018-06-14 08:48:07.856 UTC [statecouchdb] commitUpdates -> WARN ac7 CouchDB batch document delete encountered an problem. Retrying delete for document ID:+PNgBRLenRHM/r9ijK4lHA+x4y0CimDIsMbvaQ2OJ2E=
2018-06-14 08:48:07.864 UTC [statecouchdb] commitUpdates -> WARN ac8 CouchDB batch document delete encountered an problem. Retrying delete for document ID:marble_testorgschannel1_org1_0_2_214
2018-06-14 08:48:07.880 UTC [statecouchdb] commitUpdates -> WARN ac9 CouchDB batch document delete encountered an problem. Retrying delete for document ID:a7ClArdd8EWpJIWVHgX+7JxpGL3Mjg3M4GZPhZ33wWo=
2018-06-14 08:48:07.891 UTC [statecouchdb] commitUpdates -> WARN aca CouchDB batch document delete encountered an problem. Retrying delete for document ID:fPPVbZ/b0lUarJjE4kzw9F2/MopPULZpm0F8i5hWc2A=
2018-06-14 08:48:07.898 UTC [statecouchdb] commitUpdates -> WARN acb CouchDB batch document delete encountered an problem. Retrying delete for document ID:marble_testorgschannel1_org1_0_3_214
2018-06-14 08:48:07.920 UTC [statecouchdb] commitUpdates -> WARN acc CouchDB batch document delete encountered an problem. Retrying delete for document ID:vTJO+YXxASI4nxtziIj2FrfcTrOTX6JU+Rbdeeh39Bk=
2018-06-14 08:48:07.923 UTC [statecouchdb] commitUpdates -> WARN acd CouchDB batch document delete encountered an problem. Retrying delete for document ID:marble_testorgschannel1_org1_0_3_213
2018-06-14 08:48:07.934 UTC [statecouchdb] commitUpdates -> WARN ace CouchDB batch document delete encountered an problem. Retrying delete for document ID:K0nSMriXl5/SuRwAyqvI7yKd0WJQvTNcJa3n1A+oESo=
2018-06-14 08:48:07.939 UTC [statecouchdb] commitUpdates -> WARN acf CouchDB batch document delete encountered an problem. Retrying delete for document ID:marble_testorgschannel1_org1_0_2_210
....",,denyeart,rlalgowdar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10558,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzesn:",,,,,,,,,,,,,,,,,,,,,denyeart,rlalgowdar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/18 8:43 PM;denyeart;This is a duplicate of FAB-10558, which has a CR fix already.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"[CI] - Add downstream jobs to execute PTE, SVT tests.",FAB-10637,31061,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Jun/18 10:51 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,22/Jun/18 3:06 PM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,Add Downstream jobs to execute PTE and SVT tests after nightly job (fabric-nightly-release-job-x86_64) is execute successfully.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykwf:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jun/18 3:06 PM;rameshthoomu;This tasks has been completed and PTE and SVT are now downstream jobs for nightly job.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Marbles shows same hash for previous and current block,FAB-10638,31062,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,Ryan_P,Ryan_P,14/Jun/18 11:00 PM,23/Jan/20 7:34 AM,28/Oct/23 3:03 AM,23/Jan/20 7:34 AM,v1.1.0,,,,,,,,Future,,,,,,,,0,stale-item,,,,,,"This is believed to be either fabric or SDK related.

 

When running a local Marbles instance, STDOUT from running the application (gulp marbles_tls) shows the same hash value for the previous and current block.

 

{{info: New block detected! 17 low=17, high=0, unsigned=true, currentBlockHash=811122002440000089017008719001094000380290067000002000004214276705018045016705836667281902287001600, previousBlockHash=811122002440000089017008719001094000380290067000002000004214276705018045016705836667281902287001600}}

 

It does show a different hash value for each block, so it appears to just be incorrectly reporting one of the hash values. 

{{info: New block detected! 18 low=18, high=0, unsigned=true, currentBlockHash=81212200865000000256700080989400630008400064087085020024400000890170087190010940003802900670000, previousBlockHash=81212200865000000256700080989400630008400064087085020024400000890170087190010940003802900670000}}

 

It appears that the blocks are being properly committed. Please let me know if there is any more information I can provide.

 ",,denyeart,harrisob@us.ibm.com,mastersingh24,Ryan_P,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzetb:",,,,,,,,,,,,,,,,,,,,,denyeart,harrisob@us.ibm.com,mastersingh24,Ryan_P,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/18 4:36 AM;sykesm;Just executed a qscc query on master to ensure that things work as expected on the peer and I don't see any issues. The current and previous hashes are different and match what the block file manager has returned.

If it's a problem, looks like it's the app or the sdk.;;;","18/Jun/18 8:39 PM;mastersingh24;[~Ryan_P]  - which version of Fabric are you using?;;;","18/Jun/18 8:54 PM;denyeart;[~harrisob@us.ibm.com] [~zhaochy] Could you take a look?;;;","18/Jun/18 9:28 PM;Ryan_P;[~mastersingh24] This was a v1.0 fabric network;;;","19/Jun/18 4:06 AM;Ryan_P;[~mastersingh24] This issue also exists for a  v1.1 network - 

 

info: New block detected! 10 low=10, high=0, unsigned=true, currentBlockHash=801220850118853920502834728747804819011300000008707302577020855092005900030200000000000983400110530730, previousBlockHash=801220850118853920502834728747804819011300000008707302577020855092005900030200000000000983400110530730


info: New block detected! 12 low=12, high=0, unsigned=true, currentBlockHash=80122000390001000000005300022027045005200407900204300002270430000003769883095000310405900650, previousBlockHash=80122000390001000000005300022027045005200407900204300002270430000003769883095000310405900650;;;","28/Jun/18 5:30 AM;harrisob@us.ibm.com;I have tested with the 1.2RC1 and I see this issue. The  NodeSDK only decodes the payload and presents those to the caller, the issue must be on the fabric side.;;;","07/Jul/18 5:41 AM;sykesm;So, I've already verified that this is not a problem with the peer and indicated it was either the sdk or the app. Since I've very little experience with node, I had hoped that others would have jumped it. That didn't happen so...

The issue appears to be in the application. In particular, the part of the ""fc wrangler"" util package that modifies the BlockchainInfo message [1]. If the message were left alone, higher up in the stack the data would have arrived unmodified. At that point [2] the height and hash could have been reported using the buffers or, as I think was intended, hex strings.

This code is also reaching into the generated proto objects to get fields that are actually used for marshaling; things like the {{low}} attribute on {{height}}. I don't believe (since, again, I have very little experience with node) that this is how they should be used. So, to validate my assumptions, I commented out the two lines from [1] and updated the block in [2]:
{code:java}
-                                                       logger.info('New block detected!', resp.height.low, resp);
-                                                       known_height = resp.height.low;
+                                                       logger.info('New block detected! ', {
+                                                               height: resp.height.toNumber(),
+                                                               currentBlockHash: resp.currentBlockHash.toString('hex'),
+                                                               previousBlockHash: resp.previousBlockHash.toString('hex'),
+                                                       });
+                                                       known_height = resp.height;
{code}

with those changes, the logs now look like this:

{code}
info: [fcw] The chaincode transaction event has happened! success?: VALID 2106ms
debug: [fcw] transaction event is disconnected
debug: [fcw] Querying Channel Stats

info: New block detected!  height=15, currentBlockHash=27601c7b6484b9cb13e77ef68168c0236e64dc462a67972a0e748509829dd62e, previousBlockHash=53f9e542dd98cdb7fb36f7ab2ce6cd768369175c7bbcb26425de552efd284d6b
debug: [checking] there are new things, sending to all clients
debug: [ws] broadcasting to clients.  1 block
...
info: New block detected!  height=16, currentBlockHash=ac857ee4853d09719e1f374e39b8eb40a92855d827e797918192b32bf8fbf4be, previousBlockHash=27601c7b6484b9cb13e77ef68168c0236e64dc462a67972a0e748509829dd62e
debug: [checking] there are new things, sending to all clients
debug: [ws] broadcasting to clients.  1 block
{code}

The hashes appear to match the the data returned by qscc so I think all is working as expected. At this point, I think the GHE issue that was originally opened [3] should be reopened for a proper fix.

1: [https://github.com/IBM-Blockchain/marbles/blob/544748d8d3d58dd82d5dc5d75f81089e944f6261/utils/fc_wrangler/parts/query_peer.js#L53-L54]
 2: [https://github.com/IBM-Blockchain/marbles/blob/544748d8d3d58dd82d5dc5d75f81089e944f6261/utils/websocket_server_side.js#L219]
3: [https://github.com/IBM-Blockchain/marbles/issues/234];;;","23/Jan/20 7:34 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,
Add new orderer Organization in system channel,FAB-10639,31063,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,jyellick,davidkhala,davidkhala,14/Jun/18 11:08 PM,09/Apr/20 11:11 PM,28/Oct/23 3:03 AM,10/Jun/19 6:37 PM,v1.1.0,,,,,,,,,,,fabric-orderer,,,,,0,,,,,,,"As titled, for dynamic deployment, I attempted to use these steps
 * create a new CA 'ca.NewConsensus'
 * generate orderer crypto material for new orderer 'orderer0.NewConsensus', generate new Admin user also
 * request channel update to system channel 'testchainid' to add new orderer organization 'NewConsensus' with msp name 'newConsensus', msp id 'NewConsensusMSP'
 * request channel update to add a new orderer address to existing list
 * bootstrap docker container for 'orderer0.NewConsensus'

As in attached log file, the orderer cannot catch up with existing chain from kafka message

 ",,chintanr11,davidkhala,denyeart,guoger,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15200,,,,,,,,,,,,,,,,,"14/Jun/18 11:06 PM;davidkhala;log;https://jira.hyperledger.org/secure/attachment/15108/log","26/Jun/18 4:07 PM;davidkhala;log2;https://jira.hyperledger.org/secure/attachment/15167/log2","26/Jun/18 4:12 PM;davidkhala;log3;https://jira.hyperledger.org/secure/attachment/15169/log3",,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzetj:",,,,Unset,,,,,,Unset,,,,,,,,,,,chintanr11,davidkhala,denyeart,guoger,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jun/18 2:43 AM;jyellick;Could you please try the following:

# Shut down one of your existing orderers.
# Copy its ledger (usually at /var/hyperledger/production/orderer) somewhere
# Start the existing orderer back up
# Copy the backup ledger to the new orderer
# Start the new orderer up

It is difficult to tell from the log you provided what is going wrong.  If the above procedure does not work, it should give us some additional insight.;;;","15/Jun/18 12:24 PM;davidkhala;[~jyellick] I am wondering which status of ledger you want to back up, after 'new orderer org' channel update or at the beginning?

;;;","15/Jun/18 10:39 PM;jyellick;After the new orderer org channel update please.;;;","26/Jun/18 4:07 PM;davidkhala;Dear Jason, I did as you suggest, mount a volume to the new orderer from new orderer Org with 

{color:#cc7832}const {color}mspName = {color:#6a8759}'NewConsensus'{color}{color:#cc7832};
{color}{color:#cc7832}const {color}mspid = {color:#6a8759}'NewConsensusMSP'{color}{color:#cc7832}; (a little different from previous sample)

[^log2]
{color}

The log looks better than before;;;","26/Jun/18 4:13 PM;davidkhala;[~jyellick] then later I create channel as usual, the channel.tx has not been configured with the new ordererOrg, 
the new appending is 
 [^log3] ;;;","09/Jun/19 5:35 PM;denyeart;[~jyellick] [~guoger] Can you net out if anything needs to be done for this one? Or should be closed?;;;","09/Jun/19 10:46 PM;guoger;[~denyeart] i don't think so, as the log indicates, there was likely a misconfig:
{code}
2018-06-26 07:09:13.699 UTC [cauthdsl] deduplicate -> ERRO 1b3 Principal deserialization failure (the supplied identity is not valid: x509: certificate signed by unknown authority (possibly because of ""x509: ECDSA verification failure"" while trying to verify candidate authority certificate ""ca.NewConsensus.Delphi.com"")) for identity
{code};;;","10/Jun/19 12:32 AM;davidkhala;[~guoger] [~denyeart] As what I learned from last year, I guess this error comes up due to my misunderstanding of genesis block usage. 

For the new orderer belongs to new orderer organization, we could not config the original genesis block to its environment. 
Instead, we should use the block after the config transaction saying ""add a new orderer organization"" as genesis block for this new orderer. 

I have not tested my above assumption. I was inspired by previous fabric Playback about ""raft consensus"";;;","10/Jun/19 12:48 AM;guoger;[~davidkhala] although it doesn't work for kafka-based orderer, since it would not be able to replicate missed blocks from other orderers...;;;","10/Jun/19 6:37 PM;denyeart;Invalid config was used.;;;",,,,,,,,,,,,,,,,,
Suppress INFO messages in peer logs for validating all TX in block.,FAB-10640,31064,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,rlalgowdar,rlalgowdar,14/Jun/18 11:29 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,,,,,,,,,Future,,,fabric-ledger,,,,,0,,,,,,,"Suppress INFO messages in peer logs for validating all TX in block. The Commit message should be enough.

The following message repeats for 13 times for 13 TX in block. This can be moved to DEBUG.

2018-06-14 11:07:20.341 UTC [committer/txvalidator] VSCCValidateTxForCC -> INFO 36002 Validating Tx f4c922efb3b226fe997e254b83e612590d381d8ea41b8023623c57f1737dabf5, seq 0 out of 13 in block 3547 for channel testorgschannel1 with validation plugin vscc with plugin
2018-06-14 11:07:20.343 UTC [committer/txvalidator] VSCCValidateTxForCC -> INFO 36003 Validating Tx 479f31a9da6068294d0660936933969a409dcfd29c162beec0628cf4b173cabf, seq 1 out of 13 in block 3547 for channel testorgschannel1 with validation plugin vscc with plugin
.......................
2018-06-14 11:07:20.370 UTC [committer/txvalidator] VSCCValidateTxForCC -> INFO 3600e Validating Tx 44c2ca6f210f3822219fb2a1ab1d0a8b272ab04a078a31e7e608f181f76fb6b7, seq 12 out of 13 in block 3547 for channel testorgschannel1 with validation plugin vscc with plugin


2018-06-14 11:07:20.446 UTC [kvledger] CommitWithPvtData -> INFO 3600f Channel [testorgschannel1]: Committed block [3547] with 13 transaction(s)",,denyeart,rlalgowdar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10501,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzetr:",,,,,,,,,,,,,,,,,,,,,denyeart,rlalgowdar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/18 11:50 PM;denyeart;This has already been fixed in FAB-10501, marking as dup.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Need better formatted ERROR message from gossip/state --> handleStateRequest(). ,FAB-10641,31065,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,rlalgowdar,rlalgowdar,14/Jun/18 11:34 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,18/Jun/18 10:48 PM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,defer,,,,,,"Need better formatted ERROR message from gossip/state --> handleStateRequest().

The error also printing stack trace. 

If this ERROR is to continue to retry WARN message is better which indicate that retry or skip.

 2018-06-14 11:07:19.740 UTC [gossip/state] handleStateRequest -> ERRO 36001 Wasn't able to read block with sequence number 3547 from ledger, due to cannot retrieve block number 3547, due to Entry not found in index
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).handleStateRequest
    /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:422
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).processStateRequests
    /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:369
runtime.goexit
    /opt/go/src/runtime/asm_amd64.s:2361 skipping....",,C0rWin,denyeart,mastersingh24,rlalgowdar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzetz:",,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,mastersingh24,rlalgowdar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jun/18 10:04 AM;rlalgowdar;Also following message should not be logged for all retries

[[33m2018-06-14 19:36:35.250 UTC [gossip/state] requestBlocksInRange -> WARN 1aa0a^[[0m Wasn't able to process state response for blocks [1240...1240], due to Received state transfer response without payload
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).handleStateResponse
         /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:471
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).requestBlocksInRange
         /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:663
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).antiEntropy
         /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:600
 runtime.goexit
         /opt/go/src/runtime/asm_amd64.s:2361
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).requestBlocksInRange
         /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:666
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).antiEntropy
         /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:600
 runtime.goexit
         /opt/go/src/runtime/asm_amd64.s:2361

.....

There is good enough message logged after retries

[[33m2018-06-14 19:36:35.255 UTC [gossip/state] requestBlocksInRange -> WARN 1aa0e^[[0m Wasn't  able to get blocks in range [1240...1240], after 4 retries

The Block Commit succeeds later

2018-06-14 19:36:37.623 UTC [kvledger] CommitWithPvtData -> INFO 1aa62^[[0m Channel [testorgschannel1]: Committed block [1240] with 61 transaction(s);;;","18/Jun/18 4:23 AM;mastersingh24;My vote is to defer this to either a fixpack or to v1.3.  This is also an improvement and not a bug.

[~denyeart] [~C0rWin] - thoughts?;;;","18/Jun/18 6:01 AM;C0rWin;[~mastersingh24] I can provide a fix within next 24 hours, while also fine if we'd vote to defer for fixpack.;;;","18/Jun/18 11:46 AM;denyeart;Let's defer to fixpack or v1.3. This week we should prioritize items that will block successful usage of v1.2 features, this is not one of them.  I'll tag as v1.3 for now.;;;","18/Jun/18 8:01 PM;C0rWin;for any case here CR which address the issue, https://gerrit.hyperledger.org/r/23239, we can defer this to be merged as fixpack later, though not really complex changeset for review.;;;","18/Jun/18 10:48 PM;denyeart;Ok, since it was low risk I went ahead and merged for v1.2.;;;",,,,,,,,,,,,,,,,,,,,,
NWO: cleanup the world and add some consistency,FAB-10642,31066,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,15/Jun/18 12:33 AM,05/Sep/18 2:25 AM,28/Oct/23 3:03 AM,05/Sep/18 2:25 AM,,,,,,,,,Future,,,,,,,,0,hygiene,,,,,,,,SjirNijssen,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10339,FAB-10338,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzeu7:",,,,Unset,,,,,,Unset,,,,,,,,,,,SjirNijssen,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement the world in a parallel universe,FAB-10643,31067,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,15/Jun/18 12:33 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,16/Jun/18 4:20 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzeuf:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update e2e to use nwo,FAB-10644,31068,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,15/Jun/18 12:33 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/Jun/18 1:01 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzeun:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update pluggable endorsement e2e to use nwo,FAB-10645,31069,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,15/Jun/18 12:34 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/Jun/18 1:03 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzeuv:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make the release jobs for fabric-ca compatible with the 1.0 branch,FAB-10646,31070,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,jtclark,jtclark,15/Jun/18 12:54 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,27/Jun/18 3:27 AM,v1.0.0,,,,,,,,v1.0.0,,,fabric-ci,,,,,0,,,,,,,"Add a condition to publish the fabric-ca ""third-party"" images (fabric-ca-tools, fabric-ca-order, fabric-ca-peer) for release-1.0 branch.  This change should be make in the following release jobs:

* fabric-ca-release-jobs-x86_64
* fabric-ca-release-jobs-s390x",,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzev3:",,,,,,,,,,,,,,,,,,,,,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/18 10:40 AM;jtclark;Patchset is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/23265/;;;","26/Jun/18 11:04 AM;jtclark;The above patch set is is *MERGED*, but it does not address the task described here. Creating a new patch set to address the task at hand.;;;","26/Jun/18 11:53 AM;jtclark;[~rameshthoomu] - can you confirm which third-party images need to be released as part of the release-1.0 branch for fabric-ca?;;;","27/Jun/18 3:27 AM;jtclark;After speaking with [~rameshthoomu] about these two jobs, they are no longer required after the https://gerrit.hyperledger.org/r/#/c/23513 is *MERGED*.;;;",,,,,,,,,,,,,,,,,,,,,,,
Remove legacy world,FAB-10647,31071,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,15/Jun/18 1:11 AM,05/Sep/18 2:25 AM,28/Oct/23 3:03 AM,05/Sep/18 2:25 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10157,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzevb:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/18 2:28 AM;sykesm;The CR has been -1'd as the pvtdata suite uses the legacy world. As the CRs to add the pvtdata tests have been pending since 21 June, it's unclear when that thread of work will complete.;;;","05/Sep/18 2:25 AM;sykesm;Legacy world was moved to the last remaining user.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Remove dependent image builds from the fabric-baseimage release jobs,FAB-10648,31072,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,jtclark,jtclark,15/Jun/18 1:20 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,25/Jun/18 11:22 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,"Remove “make dependent-image” from the following release jobs:

* fabric-baseimage-x86_64-nexus-release-job
* fabric-baseimage-s390x-nexus-release-jobs",,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzevj:",,,,,,,,,,,,,,,,,,,,,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/18 10:38 AM;jtclark;Patchset is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/23265/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Ability to query for a chaincode's collection configuration,FAB-10650,31075,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,zhaochy,denyeart,denyeart,15/Jun/18 1:53 AM,12/Oct/18 4:21 AM,28/Oct/23 3:03 AM,17/Aug/18 7:35 AM,,,,,,,,,v1.3.0,,,fabric-ledger,,,,,0,,,,,,,"After adding a collection configuration to a channel's chaincode at instantiate time, need ability to retrieve the current collection configuration from a peer.  This is needed for example if you'd like to alter the collection configuration in a subsequent chaincode version.",,denyeart,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-878,,,,,,,,,,,,,,,,,,,,,,,,No,,,FAB-5108,,,,,,,,,"1|hzzew7:",,,,Yes,,,,,,No,,,,,,,,,,,denyeart,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jul/18 3:07 PM;zhaochy;https://gerrit.hyperledger.org/r/24735;;;","17/Aug/18 7:36 AM;denyeart;[~zhaochy] Do you have a Jira item to expose this via node sdk?;;;","18/Aug/18 10:18 AM;zhaochy;just created a new one for node sdk https://jira.hyperledger.org/browse/FABN-878

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,
Remove the javaenv image from the fabric nexus release job,FAB-10651,31076,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,jtclark,jtclark,15/Jun/18 2:23 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,25/Jun/18 11:21 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,"Remove the javaenv image from being built as part of the following the following Jenkins release job:

* fabric-nexus-release-x86_64 job",,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzewf:",,,,,,,,,,,,,,,,,,,,,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/18 3:31 AM;jtclark;Patchset is now *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/23265/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
hyperledger-fabric-darwin-amd64-1.1.0.tar.gz download failure,FAB-10652,31077,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Environment Issue,,nileshdeotale,nileshdeotale,15/Jun/18 2:24 AM,12/Aug/18 9:13 PM,28/Oct/23 3:03 AM,12/Aug/18 9:13 PM,,,,,,,,,,,,fabric-installers,fabric-quality,,,,0,,,,,,,"As per [http://hyperledger-fabric.readthedocs.io/en/latest/install.html]

Trying to setup pre-requisites to run byfn.sh script but download failed. After partial download and retried but then it again failed. Please see console logs below.

 

nileshs-mbp:hyperledger nileshdeotale$ curl -sSL https://goo.gl/6wtTN5 | bash -s 1.1.0

 

Installing hyperledger/fabric-samples repo

 

===> Cloning hyperledger/fabric-samples repo and checkout v1.1.0

Cloning into 'fabric-samples'...

remote: Counting objects: 1633, done.

remote: Compressing objects: 100% (8/8), done.

remote: Total 1633 (delta 0), reused 7 (delta 0), pack-reused 1625

Receiving objects: 100% (1633/1633), 579.59 KiB | 709.00 KiB/s, done.

Resolving deltas: 100% (790/790), done.

Note: checking out 'v1.1.0'.

 

You are in 'detached HEAD' state. You can look around, make experimental

changes and commit them, and you can discard any commits you make in this

state without impacting any branches by performing another checkout.

 

If you want to create a new branch to retain commits you create, you may

do so (now or later) by using -b with the checkout command again. Example:

 

  git checkout -b <new-branch-name>

 

HEAD is now at 1252c7a... [FAB-8920] Pin fabric-samples to node.js ""~1.1.0""

 

Installing Hyperledger Fabric binaries

 

===> Downloading version x86_64-1.1.0 platform specific fabric binaries

===> Downloading:  https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/darwin-amd64-1.1.0/hyperledger-fabric-darwin-amd64-1.1.0.tar.gz

  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current

                                 Dload  Upload   Total   Spent    Left  Speed

 49 28.3M   49 13.9M    0     0  17820      0  0:27:45  0:13:41  0:14:04  6555

curl: (18) transfer closed with 15037492 bytes remaining to read

bin/peer: (Empty error message)

tar: Error exit delayed from previous errors.

==> There was an error downloading the binary file. Switching to incremental download.

==> Downloading file...

^C

nileshs-mbp:hyperledger nileshdeotale$ curl -sSL https://goo.gl/6wtTN5 | bash -s 1.1.0

 

Installing hyperledger/fabric-samples repo

 

===> Checking out v1.1.0 branch of hyperledger/fabric-samples

HEAD is now at 1252c7a... [FAB-8920] Pin fabric-samples to node.js ""~1.1.0""

 

Installing Hyperledger Fabric binaries

 

===> Downloading version x86_64-1.1.0 platform specific fabric binaries

===> Downloading:  https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/darwin-amd64-1.1.0/hyperledger-fabric-darwin-amd64-1.1.0.tar.gz

==> Partial binary file found. Resuming download...

^C

nileshs-mbp:hyperledger nileshdeotale$ 

nileshs-mbp:hyperledger nileshdeotale$ 

nileshs-mbp:hyperledger nileshdeotale$ 

nileshs-mbp:hyperledger nileshdeotale$ curl -sSL https://goo.gl/6wtTN5 | bash -s 1.1.0

 

Installing hyperledger/fabric-samples repo

 

===> Downloading:  https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/darwin-amd64-1.1.0/hyperledger-fabric-darwin-amd64-1.1.0.tar.gz

===> Checking out v1.1.0 branch of hyperledger/fabric-samples

HEAD is now at 1252c7a... [FAB-8920] Pin fabric-samples to node.js ""~1.1.0""

 

Installing Hyperledger Fabric binaries

 

===> Downloading version x86_64-1.1.0 platform specific fabric binaries

===> Downloading:  https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/darwin-amd64-1.1.0/hyperledger-fabric-darwin-amd64-1.1.0.tar.gz

==> Partial binary file found. Resuming download...

Failure downloading binaries (curl RC=56). Please try again and the download will resume from where it stopped.

nileshs-mbp:hyperledger nileshdeotale$ curl -sSL https://goo.gl/6wtTN5 | bash -s 1.1.0

 

Installing hyperledger/fabric-samples repo

 

===> Checking out v1.1.0 branch of hyperledger/fabric-samples

HEAD is now at 1252c7a... [FAB-8920] Pin fabric-samples to node.js ""~1.1.0""

 

Installing Hyperledger Fabric binaries

 

===> Downloading version x86_64-1.1.0 platform specific fabric binaries

===> Downloading:  https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/darwin-amd64-1.1.0/hyperledger-fabric-darwin-amd64-1.1.0.tar.gz

==> Partial binary file found. Resuming download...

==> File downloaded. Verifying the md5sum...

bash: line 92: md5sum: command not found

Download failed: the local md5sum is different from the remote md5sum. Please try again.

nileshs-mbp:hyperledger nileshdeotale$",,nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzewn:",,,,,,,,,,,,,,,,,,,,,nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jun/18 2:44 AM;nileshdeotale;Download successful on 4th attempt. Could have been network speed issue that caused download to take too long and script timedout before download complete;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup ZooKeeper and Kafka names,FAB-10653,31079,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,15/Jun/18 3:07 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/Jun/18 12:58 AM,,,,,,,,,,,,,,,,,0,,,,,,,"* be consistent with ZooKeeper vs Zookeeper
 * include fabric network id in the zk and kafka container names
 * remove NetworkID from the zk and kafka runners",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzewv:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Serviceability - unable to identify a problematic client connection to the eventhub,FAB-10654,31080,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,neharprodduturi,neharprodduturi,15/Jun/18 3:32 AM,06/Sep/18 1:16 AM,28/Oct/23 3:03 AM,21/Jun/18 3:00 AM,v1.0.5,v1.1.0,v1.2.0,,,,,,v1.1.1,v1.2.0,,fabric-peer,,,,,0,serviceability,,,,,,"The eventhub does not log any information about the clients that have registered for events and as events are sent to the clients.. When a connection fails/hangs for whatever reason, the peer should log information to help identify the problematic client connection.",,denyeart,neharprodduturi,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzex3:",,,,,,,,,,,,,,,,,,,,,denyeart,neharprodduturi,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,release-1.1,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jun/18 1:39 PM;wlahti;1.0 branch: [https://gerrit.hyperledger.org/r/c/23169/]

master branch: https://gerrit.hyperledger.org/r/c/23177/;;;","15/Jun/18 10:29 PM;denyeart;[~wlahti] Why is there a release-1.0 fix but not a release-1.1 fix?  Generally we should prioritize backports to the latest release (release-1.1).;;;","15/Jun/18 10:52 PM;wlahti;Because I ran out of time last night and needed some sleep.  !https://jira.hyperledger.org/images/icons/emoticons/smile.png!  1.1 fix to follow.

The issue was reported on v1.0.5. I started with the fix there and then ported it forward to master, in case there's any chance it can be reviewed/merged in time for 1.2. ;;;","21/Jun/18 3:01 AM;wlahti;Merged into the master branch. v1.0 fix still awaiting review and v1.1 fix to follow shortly. ;;;",,,,,,,,,,,,,,,,,,,,,,,
Problematic client connection can completely stop the flow of events from the eventhub,FAB-10655,31081,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,neharprodduturi,neharprodduturi,15/Jun/18 3:37 AM,09/Nov/18 5:57 AM,28/Oct/23 3:03 AM,09/Nov/18 5:57 AM,v1.0.5,v1.1.0,v1.2.0,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,,"If a client connection hangs, the eventhub’s flow of events completely stops until the problematic client connection decides to return (likely after a grpc timeout). When this situation occurs in our network. we are unable to receive events for 15+ minutes",,denyeart,neharprodduturi,sykesm,wlahti,yunu_kim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzexb:",,,,,,,,,,,,,,,,,,,,,denyeart,neharprodduturi,sykesm,wlahti,yunu_kim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jun/18 1:40 PM;wlahti;1.0 branch: [https://gerrit.hyperledger.org/r/c/23171/]

master branch: [https://gerrit.hyperledger.org/r/c/23179/];;;","15/Jun/18 10:31 PM;denyeart;[~wlahti] Why is there a release-1.0 fix but not a release-1.1 fix?  Generally we should prioritize backports to the latest release (release-1.1).;;;","15/Jun/18 10:52 PM;wlahti;Because I ran out of time last night and needed some sleep. :) 1.1 fix to follow.

The issue was reported on v1.0.5. I started with the fix there and then ported it forward to master, in case there's any chance it can be reviewed/merged in time for 1.2. ;;;","22/Jun/18 5:03 AM;denyeart;Merged in master (v1.2).  Need to backport to the other releases.;;;","07/Sep/18 1:41 AM;sykesm;The 1.0 CR (https://gerrit.hyperledger.org/r/c/23553/) has been sitting out there since June.;;;",,,,,,,,,,,,,,,,,,,,,,
Fix typos in docs/source/logging-control.rst,FAB-10657,31084,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,diizuka,diizuka,diizuka,15/Jun/18 2:29 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,18/Jun/18 11:09 PM,v1.0.0,v1.1.0,,,,,,,v1.2.0,,,fabric-docs,,,,,0,Documentation,,,,,,"Fix typo in docs/source/logging-control.rst:

  ""subcommmand"" to ""subcommand""

  ""varaibles"" to ""variables""",,denyeart,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzexz:",,,,,,,,,,,,,,,,,,,,,denyeart,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jun/18 9:23 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/23231/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix typo in docs/source/build_network.rst,FAB-10658,31085,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,diizuka,diizuka,diizuka,15/Jun/18 2:53 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,18/Jun/18 11:08 PM,v1.1.0,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,,,,,,,"Fix typo in docs/source/build_network.rst: ""ouput"" to ""output""",,denyeart,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzey7:",,,,,,,,,,,,,,,,,,,,,denyeart,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jun/18 9:24 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/23233/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix typo in examples/e2e_cli/end-to-end.rst,FAB-10659,31086,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,diizuka,diizuka,diizuka,15/Jun/18 3:12 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,18/Jun/18 11:08 PM,v1.0.0,v1.1.0,,,,,,,v1.2.0,,,fabric-samples,,,,,0,Documentation,,,,,,"Fix typo in examples/e2e_cli/end-to-end.rst: ""successfuly"" to ""successfully""",,denyeart,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzeyf:",,,,,,,,,,,,,,,,,,,,,denyeart,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jun/18 9:24 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/23235/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a peer admin, I want to rebuild or copy a peer and have it rebuild its ledgers automatically",FAB-10660,31088,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,15/Jun/18 8:52 PM,10/Jan/20 5:09 AM,28/Oct/23 3:03 AM,,,,,,,,,,,,,fabric-ledger,,,,,0,,,,,,,"Given the ledger provider stores the genesis blocks upon join (see FAB-10141), it will now be possible to rebuild or copy a peer by simply copying the ledger provider (/ledgersData/ledgerProvider directory).

This work item will add the logic to take the genesis blocks from the ledger provider and automatically create the corresponding ledgers including block stores, state db, etc.

Peer admins will then be able rebuild or copy a peer without having to re-join all the peer's channels. The existence of the genesis block in the ledger provider will enable automatic join and automatic ledger creation upon initial peer start.",,denyeart,joaquimpedrooliveira,melwindmello,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10141,FAB-3017,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwrme:z4",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,joaquimpedrooliveira,melwindmello,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a fabric-test performance metric dashboard,FAB-10661,31090,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,minhwan,rameshthoomu,rameshthoomu,15/Jun/18 10:40 PM,01/Aug/19 11:33 AM,28/Oct/23 3:03 AM,01/Aug/19 11:33 AM,,,,,,,,,Future,,,fabric-quality,,,,,0,,,,,,,Create a fabric-test performance metric dashboard shows TPS and Test status of each day's CI run results.,,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykw7:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,true,"22/Jun/18 3:31 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/23189/] was merged. More enhancements coming, so we can keep open this FAB issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Increase eventually times for peer sessions as CI can take much longer than local execution,FAB-10662,31092,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,15/Jun/18 11:54 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,12/Jul/18 11:44 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"-Buckets:-

-Quick = 5 * time.Second-
-Average = 30 * time.Second- 
-Slow = time.Minute-
-BreakTime = 5 * time.Minute-

Apparently that's too complicated so we'll just hard code everything to a minute.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10715,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzeyv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add optional config template fields to the nwo config structure,FAB-10663,31093,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sykesm,sykesm,15/Jun/18 11:56 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,30/Jun/18 2:47 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"If a custom template is provided in the config object, prefer it to the defaults.

Templates are needed for core, orderer, crypto, and configtx.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzez3:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to instantiate chaincode,FAB-10664,31095,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,holocron,holocron,16/Jun/18 2:45 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,20/Jun/18 8:01 AM,v1.1.0,,,,,,,,,,,fabric-quality,,,,,0,PTE,,,,,,"Using PTE from fabric-test repo, release-1.1 branch.

I attempt to instantiate the samplecc chaincode and PTE reports

{{error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN:chaincode error (status: 500, message: is not a valid endorsement system chaincode)}}
{{ at new createStatusError (/home/testuser/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:64:15)}}
{{ at /home/testuser/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:583:15}}

Looking at the peer log, it is also not very helpful, the only message being:

{{2018-06-15 17:40:57.064 UTC [endorser] ProcessProposal -> ERRO 03c [channel1][a2b1bd08] simulateProposal() resulted in chaincode name:""lscc"" response status 500 for txid: a2b1bd08ad480502fcf4592474e429d3fe519667daaf8cb6f9dc729d6b0b9084}}

 

Full log of PTE instantiate attempt follows..

 
{quote}./pte_driver.sh inFile= userInputs/runCases.instantiate.txt, tStart=0 iPTE=0
sdk type supported: sdk=node
Node Array: userInputs/instantiate.json
executing 1 node requests
iPTE: 0, nInstances: 1, tStart: 1529084469580
execution: userInputs/instantiate.json
no python requests
no java requests
info: [PTE 0 main]: input parameters: Nid=0, uiFile=userInputs/instantiate.json, tStart=1529084469580 PTEid=0
info: [PTE 0 main]: TLS: ENABLED
info: [PTE 0 main]: channelName: channel1
info: [PTE 0 main]: channelOrgName.length: 1, channelOrgName: PeerOrg1
info: [PTE 0 main]: svcFile; SCFiles/config-chan1-TLS.json
info: [PTE 0 main]: GOPATH: /home/testuser/go
info: [PTE 0 main]: main - timeoutOpt: null
info: [PTE 0 main]: main - cfgTimeout: 200000
info: [PTE 0 main]: [performance_main] org= PeerOrg1, org Name= PeerOrg1
info: [PTE 0 main]: chaincode language: golang, path: github.com/hyperledger/fabric-test/chaincodes/samplecc/go
info: [PTE 0 main]: [performance_main] instantiate: user= admin, secret= d5d7a60dbd4628063fc272c9b47c391a
info: [PTE 0 util]: >>>> getting the org admin
info: [PTE 0 util]: PeerOrg1 admin_cert defined
info: [PTE 0 main]: [performance_main:Nid=0] Successfully enrolled user 'admin'
info: [PTE 0 main]: [chaincodeInstantiate] org= PeerOrg1, org name=undefined, channel name=channel1
info: [PTE 0 main]: [chainAddOrderer] channel name: channel1
info: [PTE 0 util]: [getTLSCert] key: orderer, subkey: fabric-orderer-21231d
info: [PTE 0 main]: [chainAddOrderer] channel orderers: grpc.max_receive_message_length=-1, grpc.max_send_message_length=-1, grpc.primary_user_agent=grpc-node/1.10.1, clientCert=undefined, _url=grpcs://ash-zbc07d.4.secure.blockchain.ibm.com:21231, , addr=ash-zbc07d.4.secure.blockchain.ibm.com:21231, _name=ash-zbc07d.4.secure.blockchain.ibm.com:21231, _request_timeout=200000, _grpc_wait_for_ready_timeout=3000,
info: [PTE 0 main]: [channelAddPeer1] channel name: channel1, org: PeerOrg1
info: [PTE 0 util]: [getTLSCert] key: PeerOrg1, subkey: fabric-peer-org1-21244c
info: [PTE 0 main]: [channelAddEvent] channel name: channel1
info: [PTE 0 util]: [getTLSCert] key: PeerOrg1, subkey: fabric-peer-org1-21244c
info: [PTE 0 main]: [channelAddEvent] requests: grpcs://ash-zbc07c.4.secure.blockchain.ibm.com:21244, events: grpcs://ash-zbc07c.4.secure.blockchain.ibm.com:21243
info: [PTE 0 main]: [chaincodeInstantiate:Nid=0] Successfully initialize channel[channel1]
info: [PTE 0 main]: [getCCID] Nid: 0, chaincode_id: sample_cc_ch1, chaincode_ver: v0
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN:chaincode error (status: 500, message: is not a valid endorsement system chaincode)
 at new createStatusError (/home/testuser/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:64:15)
 at /home/testuser/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:583:15
error: [PTE 0 main]: [chaincodeInstantiate] channelName(channel1) chaincode instantiation was bad
error: [PTE 0 main]: [chaincodeInstantiate] Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
info: [PTE 0 main]: Disconnecting the event hub: ash-zbc07c.4.secure.blockchain.ibm.com:21243
error: [PTE 0 main]: [chaincodeInstantiate(Nid=0)] Failed to instantiate transactionon channel1 due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
 at /home/testuser/go/src/github.com/hyperledger/fabric-test/tools/PTE/pte-main.js:703:23
 at <anonymous>
{quote}
 ",,dongming,holocron,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzezj:",,,,,,,,,,,,,,,,,,,,,dongming,holocron,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/18 3:04 AM;holocron;I tried installing fabric-sdk-node the old way - by cloning the repo and placing PTE in the test directory. This worked for instantiation so it appears to be a problem with how PTE is installing fabric-client and fabric-ca-client in the 1.1 branch.;;;","16/Jun/18 3:16 AM;holocron;I see what the problem is now

 

There's a problem in the fabric-test release-1.1 branch...
https://github.com/hyperledger/fabric-test/blob/release-1.1/tools/PTE/package.json#L16-L17
~ in the version means that we can pick up 1.2 versions if they are available.... https://docs.npmjs.com/misc/semver#tilde-ranges-123-12-1
This should be `1.1.x`;;;","16/Jun/18 4:40 AM;dongming;if git branch to release-1.1 on fabric-test, then you can run ""npm install"" in fabric-test/tools/PTE directory to get the corresponding fabric-clinet and fabric-ca-client

or you can manually run npm, for example for ver 1.1.2, 

npm install fabric-client@1.1.2

npm install fabric-ca-client@1.1.2;;;","16/Jun/18 4:47 AM;holocron;The release-1.1 branch shouldn't be installing fabric-client@1.2, but it does do this today.;;;","16/Jun/18 6:04 AM;dongming;please git pull fabric-test again.  The package.json show 1.1.0,  https://github.com/hyperledger/fabric-test/blob/release-1.1/tools/PTE/package.json;;;","20/Jun/18 8:01 AM;holocron;Moving to Done, this is user error.. ;;;",,,,,,,,,,,,,,,,,,,,,
Orderer should catch and handle signals,FAB-10665,31096,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,16/Jun/18 2:54 AM,28/Nov/18 11:29 PM,28/Oct/23 3:03 AM,28/Nov/18 11:29 PM,,,,,,,,,v1.4.0,,,fabric-orderer,,,,,0,serviceability,,,,,,"The orderer currently does not handle SIGTERM or any other signals which might be sent to the process to allow it to shutdown gracefully.  We should really add a handler which at the very least prints the signal and announces that the process is exiting, but ideally, that also shuts down resources like Sarama etc.",,denyeart,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12372,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzezr:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","15/Nov/18 3:45 AM;sykesm;[~jyellick] can you see if this change meets the requirements of this story?

https://gerrit.hyperledger.org/r/c/27452/9/orderer/common/server/main.go;;;","15/Nov/18 5:21 AM;jyellick;Good enough for v1.4, we can consider wiring more deeply in the future.;;;","28/Nov/18 11:28 PM;sykesm;While the diagnostics signal handler was added, a handler was also added for SIGTERM.;;;",,,,,,,,,,,,,,,,,,,,,,,
"When setting up dev env, 'make disk-clean all', gotools is not installed by default",FAB-10666,31097,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,zRich,zRich,zRich,16/Jun/18 3:06 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,fabric-build,,,,,0,stale-item,,,,,,"'gotools' are not installed when following the official guidance to set up dev environment, 'make dist-clean all'",,sykesm,zRich,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzf07:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,zRich,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
docker image label not reflecting release,FAB-10670,31111,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,16/Jun/18 5:31 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,18/Jun/18 8:58 PM,,,,,,,,,v1.2.0,,,fabric-build,,,,,0,,,,,,,FAB-9641 should have set the org.hyperledger.fabric.version label to BASE_VERSION,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzf1b:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jun/18 8:58 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/23215/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
SDK service discovery doc for fabric-SDK-node,FAB-10672,31115,28461,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,denyeart,denyeart,16/Jun/18 10:27 PM,28/Jul/18 1:29 AM,28/Oct/23 3:03 AM,21/Jun/18 3:29 AM,,,,,,,,,v1.2.0,,,fabric-sdk-node,,,,,0,,,,,,,User documentation for service discovery including sample.,,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzf1z:",,,,,,Sprint 6 - NextGen Endorseme 2,,,,,,,,,,,,,,,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/18 7:09 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/23351/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
SDK service discovery doc for fabric-sdk-java,FAB-10673,31116,28462,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,denyeart,denyeart,16/Jun/18 10:30 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,18/Jun/18 10:26 PM,,,,,,,,,v1.2.0,,,fabric-docs,fabric-sdk-java,,,,0,,,,,,,User documentation for service discovery including sample.,,denyeart,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfk:l",,,,,,To Do,,,,,,,,,,,,,,,denyeart,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/18 2:42 AM;rickr;Hi [~denyeart] I think this is covered in the release notes https://gerrit.hyperledger.org/r/#/c/22985/7/docs/release_v1.2.0_notes.md  arround line 32  ### [FAB-8805 JSDK Service Discovery](

There still needs to be pointers/URL references  to the example code  but it needs commiting first to get those. 
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add APIs to obtain the peers of the channels ,FAB-10675,31118,28461,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,yacovm,yacovm,16/Jun/18 11:35 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,26/Jun/18 4:51 AM,,,,,,,,,,,,fabric-sdk-node,,,,,0,,,,,,,"To my knowledge, there is no way of obtaining the peers of the channel in the discovery implementation in node SDK.

the channel object has an underscore method *_discover* which issues a config or an endorser or a local peer query, but doesn't have the ability to have a channel contexed query that returns the peers of the channel.

 
 * It can be nice to have an ability to retrieve the peers of the channel from the API
 * It can be nice that the method itself won't be an underscore method and would be part of the official API, with samples and all.",,harrisob@us.ibm.com,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzf2n:",,,,,,Sprint 6 - NextGen Endorseme 2,,,,,,,,,,,,,,,harrisob@us.ibm.com,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/18 4:51 AM;harrisob@us.ibm.com;The channel.initialize() is an official API and will use discovery
The channel.getPeers() may be run after the initialize to get the peers on the channel;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE testcase: bare bones performance,FAB-10677,31120,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,16/Jun/18 11:56 PM,05/Oct/18 5:23 AM,28/Oct/23 3:03 AM,24/Jul/18 12:06 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"Test name: Performance test: bare bones invokes
 Component: Performance test
 Description: performance events with 1 channel with levelDB
     chaincode: one chancode, samplecc go chaincode, instantiated
     transactions: various (4, 8, 12, 16, 20, 24, 24, 28, 32, 36, 40, 44, 48, 52) threads, each thread sends 10000 invokes concurrently

         all threads sends to org1 peer1 on channel 1

Network Topology: docker containers; 1 channels, 1 org, 1 peers per org, 1 ca, solo, TLS enabled

Client Driver: PTE

Results:
 The test passes if
     the execution completes without error",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11623,,,,,,,,,,,,,,,,,,,,,,,,FAB-8089,,,,,,,,,"1|hzzf33:",,,,,,,,,,,,,,,,,,,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,true,"21/Jul/18 2:44 AM;dongming;https://gerrit.hyperledger.org/r/#/c/24621/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE testcase uses get_pteReport.js to get overall TPS,FAB-10678,31121,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,17/Jun/18 12:00 AM,08/Sep/18 5:32 AM,28/Oct/23 3:03 AM,08/Sep/18 5:32 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"All PTE testcases scenarios use get_pteReport.js to get overall TPS or latency without using peer logs, see FAB-11692.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8089,,,,,,,,,"1|hzzf3b:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,true,"05/Sep/18 3:03 AM;dongming;https://gerrit.hyperledger.org/r/#/c/26078/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add chaincodes to the discover peers output,FAB-10679,31123,30254,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,17/Jun/18 11:02 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,18/Jun/18 12:17 AM,,,,,,,,,v1.2.0,,,fabric-common,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzf3j:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add new API GetTransactionsById,FAB-10680,31124,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,denyeart,denyeart,17/Jun/18 11:11 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,fabric-ledger,,,,,0,stale-item,,,,,,"GetTransactionById returns the transaction including validation status.

In the rare case that the same transaction id gets submitted a second time, that submission will automatically get invalidated.  GetTransactionById will continue to return the initial valid transaction.  This can be confusing to the client that (accidentally) submitted the duplicate.  To make this more clear, it would be better to utilize a new API like GetTransactionsById which could return all the transactions and their statuses matching the transaction id.

See FAB-8557 for more context.",,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8557,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzf3r:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Generate self signed TLS certificates in node SDK,FAB-10681,31125,23855,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,yacovm,yacovm,18/Jun/18 1:10 AM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,23/Jun/18 9:04 PM,,,,,,,,,v1.2.0,,,fabric-sdk-node,,,,,0,,,,,,,,,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfk:m",,,,,,To Do,,,,,,,,,,,,,,,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/18 6:11 PM;mastersingh24;https://gerrit.hyperledger.org/r/23373;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Use self-signed TLS certificates in node SDK if user didn't provide at config,FAB-10682,31126,23855,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,yacovm,yacovm,18/Jun/18 1:10 AM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,24/Jun/18 6:09 PM,,,,,,,,,v1.2.0,,,fabric-sdk-node,,,,,0,,,,,,,,,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfk:n",,,,,,To Do,,,,,,,,,,,,,,,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/18 11:33 PM;mastersingh24;https://gerrit.hyperledger.org/r/23527;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Document mutual TLS requirement in discovery service,FAB-10683,31127,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,18/Jun/18 1:20 AM,21/Jul/18 3:49 AM,28/Oct/23 3:03 AM,18/Jun/18 12:10 PM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzf4f:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add private data doc/tutorial for node.js sdk,FAB-10684,31128,21730,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,denyeart,denyeart,18/Jun/18 1:27 AM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,21/Jun/18 11:36 PM,,,,,,,,,v1.2.0,,,fabric-sdk-node,,,,,0,,,,,,,,,denyeart,harrisob@us.ibm.com,rameshthoomu,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfk:o",,,,,,To Do,,,,,,,,,,,,,,,denyeart,harrisob@us.ibm.com,rameshthoomu,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jun/18 10:04 AM;wenjian;https://gerrit.hyperledger.org/r/#/c/23291/;;;","19/Jun/18 12:42 PM;denyeart;[~zhaochy] [~harrisob@us.ibm.com] Looks like this was merged... should it automatically show up at [https://fabric-sdk-node.github.io/] now? Or do we need to do something?;;;","20/Jun/18 5:35 AM;harrisob@us.ibm.com;There was an issue with the CI, it is being worked. Since we will have an update, we can just use a new merge to get this and the next update published rather than retriggering the last merge. [~rameshthoomu];;;","20/Jun/18 5:37 AM;rameshthoomu;[~harrisob@us.ibm.com] the issue has been fixed and x86_64 node 8 merge job is ready to publish docs;;;","20/Jun/18 11:11 AM;wenjian;The tutorial is updated in CR: https://gerrit.hyperledger.org/r/#/c/23347/;;;","20/Jun/18 10:40 PM;wenjian;[~rameshthoomu] I see the tutorial is published at [https://fabric-sdk-node.github.io/tutorial-private-data.html.] However, links such as [https://fabric-sdk-node.github.io/tutorial-private-data.html#create-a-collection-definition-json-file] doesn't work. These links work fine in the .md file ([https://github.com/hyperledger/fabric-sdk-node/blob/master/docs/tutorials/private-data.md#create-a-collection-definition-json-file).]

Do you know what is missing?;;;",,,,,,,,,,,,,,,,,,,,,
[CI] - Fix unary operator error in CI nightly job,FAB-10685,31129,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,18/Jun/18 6:48 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/Jun/18 6:59 AM,,,,,,,,,,,,fabric-ci,,,,,0,,,,,,,"Fix unary operator error in CI nightly job. After integration tests are executed, the existing script is not failing due to the error in if condition.if [ $? !=0 ];",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykvz:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/18 1:02 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23247/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix equality check in test util,FAB-10686,31131,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,manish-sethi,manish-sethi,18/Jun/18 4:03 PM,20/Mar/19 3:46 PM,28/Oct/23 3:03 AM,01/Dec/18 3:03 AM,,,,,,,,,v1.3.0,,,fabric-ledger,,,,,0,hygiene,,,,,,"The equality check in the test util, internally tries to convert the value to a JSON before evaluating for the equality - [https://github.com/hyperledger/fabric/blob/master/common/ledger/testutil/test_util.go#L63 |https://github.com/hyperledger/fabric/blob/master/common/ledger/testutil/test_util.go#L63.]

This has unintended consequences. As far as I recall, the intention was to compare the equivalence of JSON objects in couch related tests. However, if someone passes two byte arrays for equal comparison with the intention of exact match, the check may pass for a wrong reason - if the byte arrays happens to be a valid JSON string.

For instance, this CR - [https://gerrit.hyperledger.org/r/#/c/22931/] fixes a bug that makes sure that if a string `null` or `  null  ` is passed in the `PutState`, the `GetState` returns the same by treating the passed in string as a non-json and hence storing it as attachment in couch. Though, the fix is correct as intended but the above mentioned equality check will wrongly match `null` same as `  null  `.

To fix this equality:

1) conversion to JSON should be removed from the function `AssertEquals`

2) There should be a separate explicit function say `AssertEqaulJsons` for checking json objects equivalence.

Change in the test code to invoke explicitly based on the need of the equivalence check.

 ",,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzf53:",,,,,,,,,,,,,,,,,,,,,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Sep/18 4:43 AM;manish-sethi;Since, for long time we are now using testify/assert package in our unit tests, there is no point in keep maintaining our custom assert util.

In out code, we should simply switch to testify/assert package and retire this custom asserts.

We can keep this fab for reference - Marking this as hygiene to be taken up for a future release.;;;","21/Sep/18 4:23 AM;sykesm;remote:   https://gerrit.hyperledger.org/r/26419 [FAB-10686] testutil->testify fsblkstorage
remote:   https://gerrit.hyperledger.org/r/26420 [FAB-10686] testutil->testify common/ledger/util
remote:   https://gerrit.hyperledger.org/r/26421 [FAB-10686] testutil->testify core/ledger/util
remote:   https://gerrit.hyperledger.org/r/26422 [FAB-10686] testutil->testify kvledger/history
remote:   https://gerrit.hyperledger.org/r/26423 [FAB-10686] testutil->testify txmgmt/validator
remote:   https://gerrit.hyperledger.org/r/26424 [FAB-10686] testutil->testify txmgmt/rwsetutil
remote:   https://gerrit.hyperledger.org/r/26425 [FAB-10686] testutil->testify txmgmt/statedb
remote:   https://gerrit.hyperledger.org/r/26426 [FAB-10686] testutil->testify txmgr/lockbasedtxmgr
remote:   https://gerrit.hyperledger.org/r/26427 [FAB-10686] testutil->testify kvledger/txmgmt
remote:   https://gerrit.hyperledger.org/r/26428 [FAB-10686] testutil->testify protos/ledger
remote:   https://gerrit.hyperledger.org/r/26429 [FAB-10686] testutil->testify core/ledger
remote:   https://gerrit.hyperledger.org/r/26430 [FAB-10686] testutil->testify container,committer
remote:   https://gerrit.hyperledger.org/r/26431 [FAB-10686] remove ledger assert functions;;;",,,,,,,,,,,,,,,,,,,,,,,,,
create discovery service runner for e2e tests,FAB-10687,31133,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,nirro,nirro,18/Jun/18 5:04 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,02/Jul/18 10:36 PM,,,,,,,,,v1.2.0,,,,,,,,0,e2e-test,,,,,,need to create discovery service runner for e2e tests in order to complete sd testing,,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9524,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8779,,,,,,,,,"1|hzwqfk:p",,,,,,To Do,,,,,,,,,,,,,,,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jun/18 5:16 PM;nirro;https://gerrit.hyperledger.org/r/23237;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add check for keys starting with underscore,FAB-10688,31135,28543,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,chris.elder,manish-sethi,manish-sethi,18/Jun/18 6:21 PM,25/Jul/18 6:40 AM,28/Oct/23 3:03 AM,25/Jul/18 6:40 AM,,,,,,,,,v1.1.2,v1.2.0,,fabric-ledger,,,,,0,,,,,,,There are some comments in the CR [https://gerrit.hyperledger.org/r/#/c/23059/] that require more checks before we conclude a key-value to be suitable for couchdb. We need an authentic source for the limitations imposed.,,chris.elder,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzf5r:",,,,,,,,,,,,,,,,,,,,,chris.elder,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/18 12:11 AM;denyeart;I checked with couchdb experts.  The only other restriction found is that keys cannot start with underscore.  This needs to be added to the list of validations.;;;","21/Jun/18 4:44 AM;denyeart;master (v1.2) CR: [https://gerrit.hyperledger.org/r/#/c/23375/] merged.

Fix for v1.1.2 could go under this item, or under the parent task item.;;;","21/Jun/18 5:56 PM;chris.elder;v1.1.2

[https://gerrit.hyperledger.org/r/#/c/23397/];;;",,,,,,,,,,,,,,,,,,,,,,,,
extend peer runner and struct to include collection config path,FAB-10689,31137,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,nirro,nirro,18/Jun/18 8:46 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,02/Jul/18 10:36 PM,,,,,,,,,v1.2.0,,,,,,,,0,e2e-test,,,,,,need to extend peer runner and struct to include collection config path in order to be able to test private data capabilities,,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzwqfk:q",,,,,,To Do,,,,,,,,,,,,,,,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jun/18 8:48 PM;nirro;https://gerrit.hyperledger.org/r/23241;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Error: got unexpected status: BAD_REQUEST -- Attempted to include a member which is not in the consortium,FAB-10690,31140,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,nileshdeotale,nileshdeotale,18/Jun/18 11:12 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,v1.1.0,,,,,,,,,,,fabric-peer,,,,,0,stale-item,,,,,," 

 *Actual :  Error: got unexpected status: BAD_REQUEST – Attempted to include a member which is not in the consortium when trying to create channel with empty name.*

*Expected: peer channel create command should have failed argument validation with error when $CHANNEL_NAME is empty and aborted channel creation but it seems it continues and fails with a error that does not clearly indicate root cause of failure.*

*Please see attached logs for details.*

 

Followed steps in here [http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html] but did not set CHANNEL_NAME.

**but getting error on executing

```peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem```

``` 

root@29ec3dc3d76d:/opt/gopath/src/github.com/hyperledger/fabric/peer# echo $CHANNEL_NAME

 Note: $CHANNEL_NAME is not set

root@29ec3dc3d76d:/opt/gopath/src/github.com/hyperledger/fabric/peer# env | grep CORE

CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt

CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key

CORE_PEER_LOCALMSPID=Org1MSP

CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock

CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt

CORE_PEER_TLS_ENABLED=true

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp

CORE_PEER_ID=cli

CORE_LOGGING_LEVEL=DEBUG

CORE_PEER_ADDRESS=peer0.org1.example.com:7051

 

root@29ec3dc3d76d:/opt/gopath/src/github.com/hyperledger/fabric/peer#

 Please see attached logs for details",,ChristopherFerris,nileshdeotale,pandrejko,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/18 6:06 AM;nileshdeotale;FAB-10690-logs.txt;https://jira.hyperledger.org/secure/attachment/15122/FAB-10690-logs.txt",,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzf6f:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,nileshdeotale,pandrejko,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/18 5:54 AM;pandrejko;Opened doc defect FAB-10727 for the doc fix here.;;;","20/Jun/18 6:16 AM;ChristopherFerris;I cannot reproduce... have you set $CHANNEL_NAME correctly? Are you running the tutorial manually? can you share a bit more context for this error?;;;","20/Jun/18 6:24 AM;ChristopherFerris;The one thing I could see would be to have a note that if they receive this error, it is likely because CHANNEL_NAME was not properly set.;;;","20/Jun/18 6:43 AM;nileshdeotale;[~ChristopherFerris] that's right.. I am running tutorial manually and purposely, I did not set CHANNEL_NAME and ran ```peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem```  command should have failed argument validation. Perhaps validation, exception handling in ```peer channel create``` command can be improved and  error to indicate reason for failure should be logged. ;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Build fabric-ca docker images to support fabric-ca samples tests in e2e daily jobs,FAB-10691,31141,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,18/Jun/18 11:26 PM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,19/Jun/18 6:58 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,ci-failure,,,,,,"fabric-ca sample tests are failing in below two jobs consistently as there is no fabric-ca-fvt image to verify the fabric-ca samples tests.

fabric-end-2-end-daily-master
fabric-end-2-end-daily-release-1.1-x86_64

To fix this, CI has to build fabric-ca-fvt image while build fabric-ca docker images.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzf6n:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/18 1:02 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23247/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Daily job fabric-daily-s390x has failed.,FAB-10692,31144,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,jtclark,jtclark,18/Jun/18 11:55 PM,19/Mar/19 8:12 PM,28/Oct/23 3:03 AM,03/Oct/18 3:29 AM,,,,,,,,,,,,fabric-ledger,,,,,0,ci-failure,,,,,,"*fabric-daily-s390x* fails with the following error:

{code:java}
00:10:08.583 unit-tests_1  | --- FAIL: TestDBRequestTimeout (0.04s)
00:10:08.583 unit-tests_1  | 	test_util.go:93: Error should have been thown while trying to create a couchdb instance with a connection timeout
{code}

*FABRIC_COMMIT =========> b2a0aba*

*Console Output*: https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-s390x/195/console

*Build Logs*: 

Current Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-daily-s390x/195/

Previous Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-daily-s390x/194/",,denyeart,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzf6v:",,,,,,,,,,,,,,,,,,,,,denyeart,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/18 7:03 AM;denyeart;[~jtclark] The previous log has a different error.  Has the couchdb error happened more than once? Is it reproducible?;;;","19/Jun/18 11:34 PM;denyeart;The next build looks good.

As this is the only time I have seen the couchdb error I will return the bug.  Please re-open if the problem is seen again or if the problem is somehow reproducible.;;;","30/Jun/18 1:23 AM;jtclark;Build has failed once more: https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-s390x/208/;;;","10/Jul/18 10:05 PM;rameshthoomu;Last two builds successfully executed but I see Builds#218 , 219 are failed with timeout error
{code:java}
00:10:50.273 unit-tests_1  | Error: timeout waiting for channel creation
00:10:50.274 unit-tests_1  | Error: timeout waiting for channel creation
00:10:50.276 unit-tests_1  | --- FAIL: TestCreateChainWithTimeoutErr (0.65s)
00:10:50.277 unit-tests_1  |     assertions.go:247: 
                          
    Error Trace:    create_test.go:334
00:10:50.279 unit-tests_1  |         
    Error:          ""timeout waiting for channel creation"" does not contain ""failed connecting""
00:10:50.280 unit-tests_1  |         
    Test:           TestCreateChainWithTimeoutErr{code};;;",,,,,,,,,,,,,,,,,,,,,,,
"Broken links in ""private data"" concept and architecture docs",FAB-10693,31145,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,19/Jun/18 12:59 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,19/Jun/18 7:43 PM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,Documentation,,,,,,"A few broken links in these two docs:

[http://hyperledger-fabric.readthedocs.io/en/latest/private-data/private-data.html]

[http://hyperledger-fabric.readthedocs.io/en/latest/private-data-arch.html]

 ",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzf73:",,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jun/18 1:04 AM;joe-alewine;https://gerrit.hyperledger.org/r/c/23249/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in private data and broken link concept doc,FAB-10695,31148,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Duplicate,huikang,huikang,huikang,19/Jun/18 2:52 AM,21/Jul/18 3:47 AM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,,,,,,,,,,,,,,,,,0,Documentation,,,,,,,,denyeart,huikang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzf7j:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,huikang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/18 5:54 AM;denyeart;Duplicate of FAB-10693.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Improve peer cli binary error output when no configuration file is provided,FAB-10697,31153,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,mrkiouak,mrkiouak,mrkiouak,19/Jun/18 5:05 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,fabric-peer,,,,,0,stale-item,,,,,,"Currently, the peer cli binary outputs:

``` 2018-06-18 13:30:53.104 EDT [main] main -> ERRO 001 Fatal error when initializing core config : error when reading core config file: Unsupported Config Type """"
 ```

For a new user, a fabric user used to using a fabric sdk, this poses a somewhat opaque first message.

Proposal is to improve the error output of the config check in peer/main.go when no FABRIC_CFG_PATH value is provided, to its previous output prior to:

[https://github.com/hyperledger/fabric/commit/ea5971a0ebaca110745437a4aad5ea64e9ce59bd]

while keeping the above default functionality, and improving the other cli tools that share useage of core/config/ to return the same error when no fabric_cfg_path is provided, or the configName value passed (e.g. ""core"", ""orderer"", ""configtx"") doesn't exist with any file extension.",,mrkiouak,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzf7z:",,,,Unset,,,,,,Unset,,,,,,,,,,,mrkiouak,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Disable fabric and fabric-ca release jobs when a tag is created on fabric and fabric-ca master branch,FAB-10698,31154,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,19/Jun/18 5:11 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,03/Jul/18 4:42 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,"[CI] - Disable fabric and fabric-ca release jobs when a tag is created on fabric and fabric-ca master branch. With release1.2, we have a slight change in publishing docker images to hyperledger dockerhub account.

The proposed change is:
 # Pull stable docker images (1.2.0-stable) from nexus and re-tag with 1.2.0 image tag
 # Push these re-tagged images to docker hub on the release day
 # Execute multiarch script to publish multiarch supported images to dockerhub.

But the release-1.1 and release-1.0 branches are still pointing to old release process.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykvr:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/18 6:22 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23281/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Change other text around upgrading to 1.2,FAB-10699,31155,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,19/Jun/18 5:27 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,20/Jun/18 4:49 AM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,Documentation,,,,,,"The text in this doc –- in addition to its title — refer explicitly to v1.1.

We need a doc with a non-specific name and to change the text to refer to v1.2.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzf87:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jun/18 5:40 AM;joe-alewine;https://gerrit.hyperledger.org/r/c/23275/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Remove ""ppc64le"" reference from fabric binary ""RELEASE_PLATFORM"" section",FAB-10701,31157,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,19/Jun/18 5:33 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,03/Jul/18 4:42 AM,,,,,,,,,v1.2.0,,,fabric-build,,,,,0,,,,,,,"Remove ppc64le reference from fabric binary ""release_platform"" section as the ppc64le image reference has been removed from release-1.2.",,denyeart,rameshthoomu,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzf8f:",,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jun/18 5:57 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/23277/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Missing govendor binary,FAB-10702,31158,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,latitiah,latitiah,19/Jun/18 5:55 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,19/Jun/18 12:36 PM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,ci-failure,,,,,,"The following error is being seen in the CI verify jobs for chaincode tests.
{code}
subprocess.CalledProcessError: Command '['govendor init && govendor add +external']' returned non-zero exit status 127
{code}

This denotes that there is the possibility that govendor is no longer being installed in CI such that these tests can complete.",,denyeart,latitiah,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzf8n:",,,,,,,,,,,,,,,,,,,,,denyeart,latitiah,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"19/Jun/18 6:01 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23279/;;;","19/Jun/18 6:56 AM;denyeart;[~latitiah] This is specific to fabric-test?;;;","19/Jun/18 9:51 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/23279/]

Yes, it is a specific failure in the fabric-test smoke test suite verify job, and this patchset fixed it.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Messages including format verbs in endorser are not properly printed,FAB-10703,31160,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,nnao,nnao,19/Jun/18 8:48 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,12/Jul/18 11:57 AM,v1.1.0,,,,,,,,Future,,,fabric-peer,,,,,0,,,,,,,"Some debug messages in core/endorser do not print addresses because the messages expect format verbs but lack them. In addition, they are printed by endorserLogger.Debug instead of endorserLogger.Debugf.

{code}
endorserLogger.Debug(""Entering: request from"", addr)
defer endorserLogger.Debug(""Exit: request from"", addr)
{code}
 
This needs to be changed to endorserLogger.Debugf, and %s has to be added.
",,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzf8v:",,,,,,,,,,,,,,,,,,,,,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/18 12:08 PM;nnao;https://gerrit.hyperledger.org/r/c/23295/;;;","12/Jul/18 11:57 AM;nnao;Abandoned;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Fix dead link on README.md,FAB-10705,31162,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,diizuka,diizuka,diizuka,19/Jun/18 2:32 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,,,,,,,,,Future,,,fabric-docs,,,,,0,Documentation,,,,,,"At the master branch of fabric git repository,
it contains deadlink in README.md at the top of directory.
 
fabric/README.md Line 57 :
{code:xml}
- [release branch (typically the latest patch for the current release)](http://hyperledger-fabric.readthedocs.io/en/release/)
{code}

""http://hyperledger-fabric.readthedocs.io/en/release/"" is dead link.

If I omitting the last ""/"" from the URL,
(i.e. http://hyperledger-fabric.readthedocs.io/en/release )
it will redirect to older release version document:
 http://hyperledger-fabric.readthedocs.io/en/release-1.0/

I propose to change its URL to
 http://hyperledger-fabric.readthedocs.io/en/latest/ [1]
  or http://hyperledger-fabric.readthedocs.io/ [2]

Note:
[1]: Currently, it seems to be same as http://hyperledger-fabric.readthedocs.io/en/master/
[2]: Currently, it redirects to release-1.1 document.

Another solution is fixing website setting to redirect from both
 http://hyperledger-fabric.readthedocs.io/en/release/
and
 http://hyperledger-fabric.readthedocs.io/en/release
to latest release version document.",,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9414,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzf9b:",,,,,,,,,,,,,,,,,,,,,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/18 2:00 PM;diizuka;Duplicate: FAB-10802;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
add make docker-tag-stable target/recipe,FAB-10708,31167,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,19/Jun/18 9:43 PM,26/Jul/18 12:57 PM,28/Oct/23 3:03 AM,26/Jul/18 12:57 PM,,,,,,,,,v1.3.0,,,fabric-build,,,,,0,,,,,,,add make docker-tag-stable target/recipe so that we can retag an image as 'stable' in CI,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzf9z:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jun/18 9:49 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/23313;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Test flake in inproccontroller_test - matcher is missed,FAB-10709,31168,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,19/Jun/18 9:48 PM,19/Mar/19 7:57 PM,28/Oct/23 3:03 AM,21/Jun/18 11:04 PM,,,,,,,,,v1.2.0,,,,,,,,0,ci-flake,,,,,,"{code:java}
00:07:39.050 unit-tests_1  | --- FAIL: TestLaunchprocShimStartInProcErr (0.00s)
00:07:39.051 unit-tests_1  | 	assertions.go:247: 
                          
	Error Trace:	inproccontroller_test.go:252
00:07:39.051 unit-tests_1  | 		
	            	
			inproccontroller.go:127
00:07:39.051 unit-tests_1  | 		
	            	
			asm_amd64.s:2361
00:07:39.052 unit-tests_1  | 		
	Error:      	Not equal: 
00:07:39.052 unit-tests_1  | 		
	            	expected: *errors.errorString(&errors.errorString{s:""chaincode-support ended with err: error chaincode id not provided""})
00:07:39.053 unit-tests_1  | 		
	            	actual  : string(""chaincode-support ended with err: error"")
00:07:39.053 unit-tests_1  | 		
	Test:       	TestLaunchprocShimStartInProcErr
00:07:39.053 unit-tests_1  | 		
	Messages:   	content is correct{code}
The test code is:
{code:java}
_inprocLoggerErrorf = func(format string, args ...interface{}) {
    _inprocLoggerErrorfCounter = _inprocLoggerErrorfCounter + 1

    if _inprocLoggerErrorfCounter == 2 {
        assert.Equal(t, format, ""%s"", ""Format is correct"")
        assert.Equal(t, args[0], ""chaincode-support ended with err: error"", ""content is correct"")
    }
}
{code}
And the production code is:
{code:java}
err = fmt.Errorf(""chaincode-support ended with err: %s"", err)
_inprocLoggerErrorf(""%s"", err)
{code}
The argument to the logger is an error, not a string. The Equal matcher matches on type and value.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfa7:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jun/18 9:58 PM;sykesm;https://gerrit.hyperledger.org/r/23315 [FAB-10709] fix flake caused by incorrect matching;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE: patchback fixes for sending TX to correct peers to v1.1,FAB-10710,31170,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jtclark,scottz,scottz,19/Jun/18 10:58 PM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,22/Jun/18 10:14 AM,,,,,,,,,v1.1.0,,,fabric-quality,,,,,0,quality,,,,,,"Patchback FAB-10586

In addition, that fix was a tiny bit incorrect, and we should modify it just a bit (set ""found = true"" in a slightly different place, up one level of nesting, in both functions). This last modification was done in v1.2 already, but was done within another larger changeset, so please see me or the latest v1.2 code for the details.

[~jtclark] We thought this would be a good one for you. And after the patchback is merged to v1.1, please push a new version of the v1.1 PTE image out for the community, and add a comment in this bug to notify the originator.",,jtclark,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10586,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfaf:",,,,,,,,,,,,,,,,,,,,,jtclark,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/18 8:06 PM;jtclark;Talked with [~scottz] about this task. 

The plan is to cherry-pick the following commit from the fabric-test master branch, and apply this patch set to the release-1.1 branch:

bf3406c9ef9901d96a3f6d98048fb5f96431c874

*Note*: The commit corresponds to the following patch set that was recently MERGED to the master branch:

https://gerrit.hyperledger.org/r/#/c/23025/;;;","21/Jun/18 8:15 PM;jtclark;Patch set is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/23441/;;;","22/Jun/18 2:38 AM;jtclark;Patch set has been updated per suggestions from [~scottz] and is back *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/23441/;;;","22/Jun/18 3:10 AM;jtclark;Patch has been +2'd by [~scottz].

 

-Testing the patch set with the following Jenkins job uploaded to the Jenkins sandbox:-

-[https://jenkins.hyperledger.org/sandbox/job/fabric-test-pte-x86_64/]-;;;","22/Jun/18 3:50 AM;jtclark;Patch set has been *MERGED*: 

[https://gerrit.hyperledger.org/r/#/c/23441/]

 

Next step is to modify the PTE image publish job to publish PTE images from the release-1.1 branch.;;;","22/Jun/18 4:03 AM;jtclark;Patch set is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/23465/;;;","22/Jun/18 6:24 AM;jtclark;Patch set has been *MERGED*: https://gerrit.hyperledger.org/r/#/c/23465/;;;",,,,,,,,,,,,,,,,,,,,
Enhanced Concurrency Control,FAB-10711,31175,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,sheehan,sheehan,sheehan,19/Jun/18 11:29 PM,25/Nov/20 12:26 AM,28/Oct/23 3:03 AM,25/Nov/20 12:26 AM,,,,,,,,,,,,fabric-ledger,fabric-peer,,,,2,,,,,,,"As a user, I need the ability to perform post-order commit-time operations (e.g. addition/subtraction, range checks) so that collisions on endorsed read/write sets can be avoided  in high TPS systems.",,ales,baohua,C0rWin,daijianw,denyeart,epezhman,grapebaba,gsqtds,Hangyu_FJH,huxd,jorgego,manish-sethi,MichaelWang,odowdaibm,rodolfoleal,RyanLe 2,scottz,sheehan,smartheye,sunhwei,Vishal3152,xixuejia,yingmsky,ymlbright,yoheiueda,zRich,,,,,,,,,,,,,,,,,FAB-12221,,,,,,,,FAB-10730,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Design reviewed.,"Design doc:
https://docs.google.com/document/d/1Z37O9nbpqBmukZQ88r2MmCr_DzTez--mCV5m3awhP-U

Presentation:
https://docs.google.com/presentation/d/1bxUTkBJGBBD535AbSCkgoR4yqRdoZ2aZcfa5FUgL9B4",Reviewed,,Required,ghx-label-5,,Enhanced Concurrency Control,To Do,,,Required,,,,"1|hzzfbb:",,,,No,Required,,,,,,,,,,,,,,,,ales,baohua,C0rWin,daijianw,denyeart,epezhman,grapebaba,gsqtds,Hangyu_FJH,huxd,jorgego,manish-sethi,MichaelWang,odowdaibm,rodolfoleal,RyanLe 2,scottz,sheehan,smartheye,sunhwei,Vishal3152,xixuejia,yingmsky,ymlbright,yoheiueda,zRich,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/18 2:41 AM;sheehan;Questions and issues raised during playback:

 

*Question/Issue:* The Handler interface should be more extensible in future. Consider object for arguments instead of string. 

*Response:* This is a good point and I think we should update the interface.

 

*Question/Issue:* Will the Node.js and Java shims lag behind the Go shim? What kind of perception does this create?

*Response:* The issue here is development bandwidth. While there is no intention to make the Node.js and upcoming Java shim second class citizens, we would prefer a phased development/release cycle if possible. As I’m sure this question has come up many times before for other features added to shims and SDKs, I think it would be best to follow existing precedents or lessons learned. Perhaps there should be general guidelines in Fabric. Either all shims are supported on the first release of a feature or all shims must be supported within X releases of the initial. release, or something else. We will add Java and Node.js shim support to the roadmap.

 

*Question/Issue:* Will this feature make the 1.3 release? Will you develop in a branch. 

*Response:* While we’d like to target the 1.3 release and are starting development work now, we will plan development in such a way that the code will not impact production code until ready. Based on discussion with maintainers, it seems the preferred method is to develop in the master branch and hide features behind a capability. This was introduced as part of the state based endorsement feature. Hiding a the chaincode shim API additions is a bit more tricky as the experimental interface has been removed. We may consider developing these features in a fork or branch until the feature is ready for release.;;;","07/Aug/18 4:13 PM;grapebaba;[~sheehan] how other person can join this feature development?;;;","07/Aug/18 11:18 PM;sheehan;[~grapebaba] discussion here or we created the Rocket.Chat channel #fab-10117 for discussion. If there's a piece you'd be interested in working on or contributing to just let us know.;;;","01/Nov/18 6:33 PM;smartheye;Hi , Could BigInteger support be added into this Epic？

Why UInt64 is not big enough?

Because many finacial system's number have decimal fraction. In blockchain world, many crptocurrencies have long decimal fractions.

for example , 1BTC=100,000,000satoshi. 1ether=1,000,000,000,000,000,000wei.

Currently there's a business demand which adopts ethereum financial system to hyperledger. So, uint64 might be not large enough for banking system.

It might be a bit difficult as there's no scala value type of BigInteger in protobuf. But it could be done by saving it to bytes or hex string with signum.

Please think about the idea.;;;","03/Nov/18 6:48 AM;sheehan;We will certainly add additional types in the future.

10^18 < 2^64 / 2 so I'm not sure I follow your use case for needing a BigInteger in regards to representing Wei.;;;","09/Jan/19 2:53 PM;denyeart;Dependent validation work is targeted for v2.0, therefore updating FixVersion to v2.1.;;;","25/Nov/20 12:26 AM;manish-sethi;Does not seem like this epic is in sight for a foreseeable future. Also, with now RFC procedure in place, a change of this scope would need to go via the RFC process. Closing this for now and this can be opened again if we revisit this.;;;",,,,,,,,,,,,,,,,,,,,
Daily job fabric-end-2-end-daily-master-x86_64 has failed,FAB-10713,31178,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,jtclark,jtclark,20/Jun/18 12:49 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,10/Jul/18 10:19 PM,v1.2.0,,,,,,,,Future,,,,,,,,0,ci-failure,,,,,,"*fabric-end-2-end-daily-master-x86_64* has failed with the following error:


{code:java}
Creating peer1.org2.example.com ... error
00:23:05.337 ERROR: for peer1.org2.example.com  Cannot create container for service peer1.org2.example.com: Conflict. The container name ""/peer1.org2.example.com"" is already in use by container ""f76f18a479810405a066500a26a6283a9c79f5c2a7a61612142276e76a5c5f34"". You have to remove (or rename) that container to be able to reuse that name.
00:23:05.345 Creating peer0.org2.example.com
00:23:05.350 Creating peer1.org1.example.com
00:23:05.361 
Creating orderer.example.com ... error
00:23:05.361 ERROR: for orderer.example.com  Cannot create container for service orderer.example.com: Conflict. The container name ""/orderer.example.com"" is already in use by container ""293d320fc38825911b0e622f9645f5c332e8eab022e48c0385541e5e51af640a"". You have to remove (or rename) that container to be able to reuse that name.
00:23:05.362 
Creating peer1.org1.example.com ... error
00:23:05.362 ERROR: for peer1.org1.example.com  Cannot create container for service peer1.org1.example.com: Conflict. The container name ""/peer1.org1.example.com"" is already in use by container ""439b6ea72fac1ba62d46efc66696fb8ab882d62313c3fc4d9a4aab03d3e6b2fe"". You have to remove (or rename) that container to be able to reuse that name.
00:23:05.371 
Creating peer0.org2.example.com ... error
00:23:05.371 ERROR: for peer0.org2.example.com  Cannot create container for service peer0.org2.example.com: Conflict. The container name ""/peer0.org2.example.com"" is already in use by container ""20b58b8ecd1f9cb90f4d67e57c95b9e6ca7cdf90ed30701b37fdcce48634a976"". You have to remove (or rename) that container to be able to reuse that name.
00:23:05.372 
Creating peer0.org1.example.com ... error
00:23:05.372 ERROR: for peer0.org1.example.com  Cannot create container for service peer0.org1.example.com: Conflict. The container name ""/peer0.org1.example.com"" is already in use by container ""3d5d7f4c891497098fa709dfeddbc7199f49259d025f6dd6d1ea933e03932784"". You have to remove (or rename) that container to be able to reuse that name.
00:23:05.373 
00:23:05.373 ERROR: for peer0.org2.example.com  Cannot create container for service peer0.org2.example.com: Conflict. The container name ""/peer0.org2.example.com"" is already in use by container ""20b58b8ecd1f9cb90f4d67e57c95b9e6ca7cdf90ed30701b37fdcce48634a976"". You have to remove (or rename) that container to be able to reuse that name.
00:23:05.373 
00:23:05.373 ERROR: for peer1.org2.example.com  Cannot create container for service peer1.org2.example.com: Conflict. The container name ""/peer1.org2.example.com"" is already in use by container ""f76f18a479810405a066500a26a6283a9c79f5c2a7a61612142276e76a5c5f34"". You have to remove (or rename) that container to be able to reuse that name.
00:23:05.374 
00:23:05.374 ERROR: for peer0.org1.example.com  Cannot create container for service peer0.org1.example.com: Conflict. The container name ""/peer0.org1.example.com"" is already in use by container ""3d5d7f4c891497098fa709dfeddbc7199f49259d025f6dd6d1ea933e03932784"". You have to remove (or rename) that container to be able to reuse that name.
00:23:05.374 
00:23:05.374 ERROR: for peer1.org1.example.com  Cannot create container for service peer1.org1.example.com: Conflict. The container name ""/peer1.org1.example.com"" is already in use by container ""439b6ea72fac1ba62d46efc66696fb8ab882d62313c3fc4d9a4aab03d3e6b2fe"". You have to remove (or rename) that container to be able to reuse that name.
00:23:05.374 
00:23:05.374 ERROR: for orderer.example.com  Cannot create container for service orderer.example.com: Conflict. The container name ""/orderer.example.com"" is already in use by container ""293d320fc38825911b0e622f9645f5c332e8eab022e48c0385541e5e51af640a"". You have to remove (or rename) that container to be able to reuse that name.
00:23:05.374 Encountered errors while bringing up the project.
00:23:05.393 ERROR !!!! Unable to start network
{code}


*Commits*

{code:java}
FABRIC_COMMIT ------> ec398ed
CA COMMIT ------> 744e032
SDK_NODE_COMMIT=======> a86b217
-----> SDK_JAVA_COMMIT=======> edd54f8
FABRIC_SAMPLES_COMMIT ========> e95210e
{code}



*Build Logs*

* *Current Log*: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-x86_64/109/
* *Previous Log*: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-x86_64/108/

",,jtclark,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfbz:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/18 4:07 AM;scottz;It would be helpful if we could triage this a bit further, to set a component, and to identify what testcase failed.;;;","10/Jul/18 10:19 PM;rameshthoomu;This has been fixed and pushed the change.. The issue observed with the left over containers from Java builds are not cleaning and in result, the rest of the tests are failing.;;;","10/Jul/18 10:19 PM;rameshthoomu;https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-master-x86_64/;;;",,,,,,,,,,,,,,,,,,,,,,,,
Data race between read and set of grpc.EnableTracing in deliver service,FAB-10714,31179,28851,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,sykesm,sykesm,20/Jun/18 1:00 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,02/Jul/18 9:06 PM,,,,,,,,,v1.3.0,,,,,,,,0,race,,,,,,"The connection factory is setting exported package level variable at a point in the process lifecycle without determinism. Other gRPC clients and/or servers may be running at the time the connection factory is called.
{code:java}
WARNING: DATA RACE
Read at 0x00000583d002 by goroutine 64:
  github.com/hyperledger/fabric/vendor/google.golang.org/grpc.NewServer()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:342 +0x456
  github.com/hyperledger/fabric/core/deliverservice/mocks.NewOrderer()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/mocks/orderer.go:34 +0x54
  github.com/hyperledger/fabric/core/deliverservice.TestDeliverServiceRestart()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient_test.go:169 +0x5db
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Previous write at 0x00000583d002 by goroutine 80:
  github.com/hyperledger/fabric/core/deliverservice.DefaultConnectionFactory.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient.go:265 +0x6b2
  github.com/hyperledger/fabric/core/comm.(*connProducer).NewConnection()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/comm/producer.go:76 +0x477
  github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).connect()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:139 +0xe4
  github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).doAction()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:114 +0x106
  github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).try()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:91 +0x18b
  github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).Recv()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:58 +0x7b
  github.com/hyperledger/fabric/core/deliverservice/blocksprovider.(*blocksProviderImpl).DeliverBlocks()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/blocksprovider/blocksprovider.go:131 +0xeb
  github.com/hyperledger/fabric/core/deliverservice.(*deliverServiceImpl).launchBlockProvider()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient.go:179 +0x26f

Goroutine 64 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  testing.runTests.func1()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1063 +0xa4
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d
  testing.runTests()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1061 +0x4e1
  testing.(*M).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:978 +0x2cd
  main.main()
      _testmain.go:94 +0x22a

Goroutine 80 (running) created at:
  github.com/hyperledger/fabric/core/deliverservice.(*deliverServiceImpl).StartDeliverForChannel()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient.go:166 +0x8b4
  github.com/hyperledger/fabric/core/deliverservice.TestDeliverServiceRestart()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient_test.go:158 +0x3db
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d{code}
This can be resolved by moving the code that enables tracing.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfc7:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/18 1:09 AM;sykesm;https://gerrit.hyperledger.org/r/23331;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistencies in the fabric-nightly-release and fabric-verify-integration-tests jobs.,FAB-10715,31180,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,jtclark,jtclark,20/Jun/18 2:21 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,22/Jun/18 5:19 AM,v1.2.0,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,"h1. fabric-nightly-release

The fabric-nightly-release job is inconsistently failing with the following error(s):
{code:java}
00:33:20.083 • Failure [34.111 seconds]
00:33:20.084 EndToEndACL [It] enforces access control list policies 
00:33:20.085 /w/workspace/fabric-nightly-release-job-x86_64/gopath/src/github.com/hyperledger/fabric/integration/e2e/acl_test.go:92
00:33:20.085 
00:33:20.085   Timed out after 1.000s.
00:33:20.086   Expected process to exit.  It did not.
00:33:20.086 
00:33:20.086   /w/workspace/fabric-nightly-release-job-x86_64/gopath/src/github.com/hyperledger/fabric/integration/e2e/acl_test.go:212
00:33:20.087 ------------------------------
00:33:20.087 
00:33:20.087 
00:33:20.088 Summarizing 1 Failure:
00:33:20.088 
00:33:20.093 [Fail] EndToEndACL [It] enforces access control list policies 
00:33:20.094 /w/workspace/fabric-nightly-release-job-x86_64/gopath/src/github.com/hyperledger/fabric/integration/e2e/acl_test.go:212
00:33:20.094 
00:33:20.095 Ran 3 of 3 Specs in 164.030 seconds
00:33:20.098 FAIL! -- 2 Passed | 1 Failed | 0 Pending | 0 Skipped
00:33:20.098 --- FAIL: TestEndToEnd (164.03s)
{code}

+*Commits*+

*FABRIC_COMMIT :* ec398ed
*FABRIC_CA_COMMIT* : 744e032

+*Build Logs*+

Current Log (failure): [https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-nightly-release-job-x86_64/20]

Previous Log (failure): [https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-nightly-release-job-x86_64/19]

 
----
h1. fabric-verify-integration-tests

The fabric-verify-integration-tests-x86_64 is failing with the following error(s):
{code:java}
00:07:50.472 • Failure [9.831 seconds]
00:07:50.475 CouchDB Runner [It] starts and stops a docker container with the specified image 
00:07:50.477 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/runner/couchdb_test.go:158
00:07:50.478 
00:07:50.479   Timed out after 1.000s.
00:07:50.479   Expected
00:07:50.479       <<-chan error | len:0, cap:1>: 0xc4205f49c0
00:07:50.480   to receive something.
00:07:50.480 
00:07:50.481   /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/runner/couchdb_test.go:198
00:07:50.482 ------------------------------
00:08:15.137 ••••••••••••••••••••••••••••••••••••••
00:08:15.137 
00:08:15.138 Summarizing 1 Failure:
00:08:15.138 
00:08:15.142 [Fail] CouchDB Runner [It] starts and stops a docker container with the specified image 
00:08:15.143 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/runner/couchdb_test.go:198
00:08:15.143 
00:08:15.144 Ran 40 of 40 Specs in 62.533 seconds
00:08:15.157 FAIL! -- 39 Passed | 1 Failed | 0 Pending | 0 Skipped
00:08:15.157 --- FAIL: TestRunner (62.53s)
{code}

*+Commits+*

*FABRIC_GIT_COMMIT* =========> c227c81e7b51bac6f3371fa9a33e40a344d553b0


*+Build Logs+*

Current Log (failure): https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-verify-integration-tests-x86_64/294",,denyeart,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10662,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfcf:",,,,,,,,,,,,,,,,,,,,,denyeart,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jun/18 3:36 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/23343/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix link/formatting in Private Data tutorial,FAB-10716,31181,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,20/Jun/18 3:01 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,20/Jun/18 4:44 AM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,,,,,,,"There's a broken link in the tutorial. Also, some of the formatting around the ""Try it Yourself"" labels are weird. Need to fix these.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfcn:",,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Data race modifying viper config in TestDeliverServiceDisconnectReconnect,FAB-10718,31185,28851,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,20/Jun/18 5:00 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,02/Jul/18 9:06 PM,,,,,,,,,v1.3.0,,,,,,,,0,race,,,,,,"Basic maps are not safe for concurrent modification. Viper has no serialization around its configuration. The production code relies on go routines and is lazily getting configuration at runtime (instead of being told the values to use at instantiation). Result: races.
{code:java}
WARNING: DATA RACE
Write at 0x00c4200f7048 by goroutine 18:
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).Set()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:772 +0xd9
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.Set()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:768 +0x72
  github.com/hyperledger/fabric/core/deliverservice.TestDeliverServiceDisconnectReconnect.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient_test.go:564 +0x67
  github.com/hyperledger/fabric/core/deliverservice.TestDeliverServiceDisconnectReconnect()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient_test.go:612 +0x82c
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Previous read at 0x00c4200f7048 by goroutine 73:
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).find()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:628 +0x189
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).Get()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:404 +0x106
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).GetDuration()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:481 +0x4c
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.GetDuration()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:479 +0x5e
  github.com/hyperledger/fabric/gossip/util.GetDurationOrDefault()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/util/misc.go:177 +0x87
  github.com/hyperledger/fabric/core/deliverservice.getReConnectTotalTimeThreshold()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient.go:41 +0x52
  github.com/hyperledger/fabric/core/deliverservice.(*deliverServiceImpl).newClient.func2()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient.go:225 +0x33
  github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).try()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:94 +0x1fe
  github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).Recv()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:58 +0x7b
  github.com/hyperledger/fabric/core/deliverservice/blocksprovider.(*blocksProviderImpl).DeliverBlocks()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/blocksprovider/blocksprovider.go:131 +0xeb
  github.com/hyperledger/fabric/core/deliverservice.(*deliverServiceImpl).launchBlockProvider()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient.go:179 +0x26f{code}
and
{code:java}
WARNING: DATA RACE
Write at 0x00c4201c1080 by goroutine 18:
  runtime.mapassign_faststr()
      /usr/local/Cellar/go/1.10.3/libexec/src/runtime/hashmap_fast.go:694 +0x0
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).Set()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:772 +0xc6
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.Set()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:768 +0x72
  github.com/hyperledger/fabric/core/deliverservice.TestDeliverServiceDisconnectReconnect.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient_test.go:564 +0x67
  github.com/hyperledger/fabric/core/deliverservice.TestDeliverServiceDisconnectReconnect()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient_test.go:612 +0x82c
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Previous read at 0x00c4201c1080 by goroutine 73:
  runtime.mapaccess2_faststr()
      /usr/local/Cellar/go/1.10.3/libexec/src/runtime/hashmap_fast.go:261 +0x0
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).find()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:628 +0x16a
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).Get()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:404 +0x106
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).GetFloat64()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:469 +0x4c
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.GetFloat64()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:467 +0x5e
  github.com/hyperledger/fabric/gossip/util.GetFloat64OrDefault()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/util/misc.go:165 +0x87
  github.com/hyperledger/fabric/core/deliverservice.getReConnectBackoffThreshold()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient.go:49 +0x51
  github.com/hyperledger/fabric/core/deliverservice.(*deliverServiceImpl).newClient.func2()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient.go:230 +0x9c
  github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).try()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:94 +0x1fe
  github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).Recv()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:58 +0x7b
  github.com/hyperledger/fabric/core/deliverservice/blocksprovider.(*blocksProviderImpl).DeliverBlocks()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/blocksprovider/blocksprovider.go:131 +0xeb
  github.com/hyperledger/fabric/core/deliverservice.(*deliverServiceImpl).launchBlockProvider()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient.go:179 +0x26f{code}",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfdj:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/18 5:04 AM;sykesm;grabbing the config variables out of newClient (instead of when the backoff policy is being used) works around the race without refactoring the code for config injection.;;;","20/Jun/18 5:08 AM;sykesm;https://gerrit.hyperledger.org/r/23341;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"As chaincode developer, I need a new message type to serialize chaincode install packages.",FAB-10719,31186,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,jyellick,jyellick,20/Jun/18 5:09 AM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,05/Jul/18 11:30 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"The new lifecycle work will need a way to store chaincode to the filesystem.  Today, the peer stores chaincode either in a CDSPackage or SignedCDSPackage, both of which are inappropriate for the new lifecycle.

These existing package formats include references to legacy datastructures that do not make sense in the new lifecycle world, such as instantiation policy, and conflate things which identify the chaincode (ie, its name, version, and hash) with properties of the chaincode itself (such as its type, and code).

This should be a new protobuf message named {{ChaincodeInstallPackage}}. which includes:
 # {{Type}} as a string (ie, go, java, node)
 # {{Path}} as a string (as required by some of the current platform packages)
 # {{CodePackage}} the package itself as bytes (typically a tar file).",,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11237,,,,,,,,,"1|hzzfdr:",,,,Unset,,,,,1.0,Unset,,,,,,,,,,,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jul/18 5:15 AM;wlahti;https://gerrit.hyperledger.org/r/c/24013;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a fabric developer, I need a way to persistently store ChaincodeInstallPackages.",FAB-10720,31187,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,jyellick,jyellick,20/Jun/18 5:17 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,14/Jul/18 8:36 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"As part of the new lifecycle work, there is a new chaincode package format as defined via FAB-10719.  In order for the new life cycle to use this new package format, it needs a way to persist these code packages.

The existing persistence is done through the ccprovider package, however, because of the legacy and problematic nature of this code (package scoped state and functions), and the irrelevant details like instantiation policy, extending the existing mechanisms is likely to be more work than simply creating a new persistence system.

This new persistence should take as a parameter a name, a version, and a set of bytes.  This set of bytes is a marshaled form of the the new message from FAB-10719.

The persistence should use the existing configurable chaincode storage directory to store chaincodes, but instead of storing them as '<name>.<version>' as the current code does, it should store the marshaled package and the package name/version as {{<hash_of_chaincode_install_package>.bin}} and {{<hash_of_chaincode_install_package>.json}} respectively.

The implementation should be careful not to expose these details to the user.

The implementer should evaluate whether creating a new file in the ccprovider package, or simply creating a new package is more sensible for this work.",,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11237,,,,,,,,,"1|hzzfdz:",,,,Unset,,,,,2.0,Unset,,,,,,,,,,,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jul/18 5:16 AM;wlahti;https://gerrit.hyperledger.org/r/c/24015;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Data race modifying MockLedgerInfo.Height,FAB-10722,31189,28851,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,20/Jun/18 5:22 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,02/Jul/18 9:07 PM,,,,,,,,,v1.3.0,,,,,,,,0,race,,,,,,"simple one
{code:java}
WARNING: DATA RACE
Read at 0x00c4201f8168 by goroutine 21:
  sync/atomic.LoadInt64()
      /usr/local/Cellar/go/1.10.3/libexec/src/runtime/race_amd64.s:211 +0xb
  github.com/hyperledger/fabric/core/deliverservice/mocks.(*MockLedgerInfo).LedgerHeight()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/mocks/blocksprovider.go:148 +0x3a
  github.com/hyperledger/fabric/core/deliverservice.(*blocksRequester).RequestBlocks()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/requester.go:38 +0x59
  github.com/hyperledger/fabric/core/deliverservice.(*deliverServiceImpl).newClient.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient.go:224 +0x53
  github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).afterConnect()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:185 +0x43e
  github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).connect()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:160 +0x861
  github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).doAction()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:127 +0x102
  github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).try()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:91 +0x18b
  github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).Recv()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:58 +0x7b
  github.com/hyperledger/fabric/core/deliverservice/blocksprovider.(*blocksProviderImpl).DeliverBlocks()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/blocksprovider/blocksprovider.go:131 +0xeb
  github.com/hyperledger/fabric/core/deliverservice.(*deliverServiceImpl).launchBlockProvider()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient.go:179 +0x26f

Previous write at 0x00c4201f8168 by goroutine 25:
  github.com/hyperledger/fabric/core/deliverservice.TestDeliverServiceRestart()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient_test.go:169 +0x5f3
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d{code}
one of the tests didn't use {{atomic.StoreUint64}} when setting the ledger height.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfef:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/18 5:24 AM;sykesm;https://gerrit.hyperledger.org/r/23345;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a fabric developer, I need a way to retrieve persisted ChaincodeInstallPackages by hash.",FAB-10723,31190,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,jyellick,jyellick,20/Jun/18 5:23 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,17/Jul/18 11:46 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"FAB-10720 introduces a way to persist the chaincode install packages.  In order for this to be useful, this persistence mechanism must also allow chaincodes to be retrieved.

The implementation should accept a package hash (corresponding to the hash of the marshaled chaincode install package) and retrieve the package itself, as well as the stored name and version associated with this package.",,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11237,,,,,,,,,"1|hzzfen:",,,,Unset,,,,,1.0,Unset,,,,,,,,,,,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jul/18 5:55 AM;wlahti;https://gerrit.hyperledger.org/r/c/24195/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a fabric developer, I need a way to retrieve the hash of a persisted ChaincodeInstallPackages by name/version.",FAB-10724,31191,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,jyellick,jyellick,20/Jun/18 5:27 AM,01/Aug/18 1:26 AM,28/Oct/23 3:03 AM,01/Aug/18 1:26 AM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"FAB-10720 introduces a way to persist chaincode packages onto the filesystem and FAB-10723 introduces a way to retrieve those packages by hash.

However, users may not know the hash of their installed chaincode by may only know the friendlier name/version. In this case, we will need to be able to look up the hash by name/version. Once the correct hash is known, the existing API for retrieving the code bytes themselves may be used.

The implementation should accept name/version as parameters, and return a byte slice which is the hash.",,jyellick,mastersingh24,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11237,,,,,,,,,"1|hzzfev:",,,,Unset,,,,,1.0,Unset,,,,,,,,,,,jyellick,mastersingh24,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Jul/18 2:23 AM;wlahti;https://gerrit.hyperledger.org/r/c/24251;;;","31/Jul/18 10:02 PM;mastersingh24;[~wlahti] - how do you image this being called by users?;;;","01/Aug/18 12:04 AM;wlahti;Copying [~jyellick]'s comment from the gerrit CR:

""The user will need to include the hash of the chaincode in the voting portion of lifecycle as well as in the definition step. Although we can/should return the hash to the user at install time, if they install a chaincode, discard this hash value, and later wish to work with it, they can query the peer to get this hash value."";;;",,,,,,,,,,,,,,,,,,,,,,,,
"As a peer admin, I need a chaincode API to install ChaincodeInstallPackages.",FAB-10725,31192,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Jun/18 5:34 AM,19/Nov/18 2:40 PM,28/Oct/23 3:03 AM,19/Nov/18 2:40 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"The new lifecycle system chaincode needs to expose a function to allow the installation of ChaincodeInstallPackages.

It should take as a parameter a message containing the name, version, and ChaincodeInstallPackages.  It should return a message containing the hash of the code package.

The chaincode function name should be {{InstallCodePackage}}

Both the input and output should be new protobuf messages so that we may use the protobuf versioning mechanisms to extend and deprecate fields.

It should declare a new interface which declares the dependency on the function provided by FAB-10720 to store the package.",,jyellick,MichaelWang,TiantianGao,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11237,,,,,,,,,"1|hzzff3:",,,,Unset,,,,,2.0,Unset,,,,,,,,,,,jyellick,MichaelWang,TiantianGao,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a peer org admin, I need a chaincode API to signal my approval to execute a chaincode with certain parameters on a channel",FAB-10726,31193,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Jun/18 5:49 AM,20/Feb/19 2:27 PM,28/Oct/23 3:03 AM,20/Feb/19 2:27 PM,,,,,,,,,v2.0.0,,,fabric-peer,,,,,0,,,,,,,"This corresponds to the 'InstallChaincodeMetadata' step described in the FAB-8787 design document.

This chaincode API should be called {{AgreeToDefine}} and should accept as input a message containing a single field {{Definition}} which is itself a protobuf message with the fields:
# Name as a string
# Version as a string
# Sequence an unsigned 64 bit integer
# Hash as bytes (corresponding to the hash returned by FAB-10725)
# Endorsement plugin as string
# Validation plugin as string
# ValidationParameter as bytes

The chaincode API should return an empty protobuf message.

The function should first verify that the user is an administrator of the org per the channel configuration.  Then it should then take the {{Definition}} and put it in the organization's private data collection at key ""<hash>"".

Note, the ability to write to an org scoped collection does not exist at the time of writing this story, but should be implemented via FAB-8864.",,jyellick,MichaelWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11237,,,,,,,,,"1|hzzffb:",,,,Unset,,,,,2.0,Unset,,,,,,,,,,,jyellick,MichaelWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
BYFN env variable export needs to be inside the docker container,FAB-10727,31194,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,pandrejko,pandrejko,20/Jun/18 5:52 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,22/Jun/18 12:17 AM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,documentation,,,,,,"Move the environment variable information in this section:
 [http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#environment-variables]

to after you have started the docker container:

[http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#create-join-channel]

 

Otherwise, users get errors when they run peer channel create (see -FAB-10690-)",,ChristopherFerris,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzffj:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/18 5:53 AM;pandrejko;[~nileshdeotale];;;","20/Jun/18 6:23 AM;ChristopherFerris;[~pandrejko] in the paragraph preceding the create channel command it says: 

 

We specify our channel name with the {{-c}} flag and our channel configuration transaction with the {{-f}} flag. In this case it is {{channel.tx}}, however you can mount your own configuration transaction with a different name. *Once again we will set the {{CHANNEL_NAME}} environment variable within our CLI container so that we don’t have to explicitly pass this argument:*

 

I don't see this as an issue.;;;","20/Jun/18 6:35 AM;pandrejko;https://gerrit.hyperledger.org/r/23349;;;","20/Jun/18 6:42 AM;pandrejko;[~ChristopherFerris] - You are correct. The test team asked that we make it optional because it tripped them up.  So I phrased it as if you need to change the peer or org you can edit the .yaml file to set the values outside of the container. And then I added a bit after starting the container , to edit,export and run the 4 env variables. See what you think in the CR.;;;",,,,,,,,,,,,,,,,,,,,,,,
"As a peer org admin, I need a chaincode API to define a chaincode",FAB-10729,31196,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Jun/18 5:58 AM,20/Feb/19 2:27 PM,28/Oct/23 3:03 AM,20/Feb/19 2:27 PM,,,,,,,,,v2.0.0,,,fabric-peer,,,,,0,,,,,,,"This story corresponds to the 'Define' step in the design document from FAB-8787.

The implementation should add a new chaincode function called {{Define}} which accepts a new message as its only parameter.  This message should have a single field, corresponding to the {{Definition}} message as defined in FAB-10726.  It should return a new empty message.

It should read from the organizations private store the key at <hash> and verify that each the messages are equal or fail.  It should use protobuf equality checking rather than direct bytes comparison.

Next, it should check to see whether the world state key <chaincode_name> is set.  If so, it should should read the bytes there, unmarshal it as a chaincode definition, and check that the sequence contained in the new definition is exactly one larger than the existing sequence number or fail.  If the key does not exist, it should ensure that the sequence number is 0 or fail.

Finally, it should marshal the definition and store it at world state key <chaincode_name> and return the empty message successfully.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11237,,,,,,,,,"1|hzzffz:",,,,Unset,,,,,2.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Post Order Execution transactions,FAB-10730,31197,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,binhn,binhn,20/Jun/18 6:24 AM,23/Jan/20 7:33 AM,28/Oct/23 3:03 AM,23/Jan/20 7:33 AM,,,,,,,,,Future,,,fabric-peer,,,,,0,stale-item,,,,,,"The MVCC check follows optimistic locking method, suitable for low conflict transactions. However, for certain transactions where conflicts are high, forcing a transaction to wait or retry to avoid read-write conflicts during validation unnecessarily hinders throughput and makes the application more complex. 

In this epic, we propose a new feature to manage the transaction flow to avoid read-write conflicts.",,binhn,denyeart,grapebaba,lehors,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10711,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Post Order Execution transactions,,,,Unset,,,,"1|hzzfg7:",,,,Unset,Unset,,,,,,,,,,,,,,,,binhn,denyeart,grapebaba,lehors,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jun/18 11:35 PM;lehors;Is that different from [FAB-10711] - Enhanced MVCC ?;;;","28/Sep/18 3:34 AM;denyeart;[~binhn] I've added dup link to FAB-10711.  If you intend for the epics to cover different aspects, please clarify.;;;","23/Jan/20 7:33 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,
byfn upgrade to v1.2,FAB-10732,31199,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,nagap,scottz,scottz,20/Jun/18 6:42 AM,20/Jul/18 11:16 PM,28/Oct/23 3:03 AM,22/Jun/18 9:54 PM,,,,,,,,,v1.2.0,,,fabric-samples,,,,,0,quality,Usability,,,,,"Modify the byfn and upgrade shell script to prepare for this v1.2 release, i.e. to show upgrade steps from v1.1 to v1.2.",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfgn:",,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/18 1:44 AM;scottz;https://gerrit.hyperledger.org/r/#/c/23385/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric CLI Redesign,FAB-10734,31201,,Epic,In Progress,FAB,Fabric,software,denyeart,,,Medium,,TopJohn,muralisr,muralisr,20/Jun/18 9:41 AM,29/Feb/20 5:12 AM,28/Oct/23 3:03 AM,,,,,,,,,,,,,,,,,,4,,,,,,,"The existing CLI provides an inconsistent experience for the user.  Functional abilities are separated across several different tools, and they have varying command formats.  Redesigning the CLI with a focus on consolidation and standardization would dramatically improve the user experience.",,binhn,bpbuch,ChristopherFerris,denyeart,Hangyu_FJH,latitiah,lehors,mastersingh24,muralisr,nnao,pdina,scottz,sheehan,sykesm,TopJohn,troyronda,xixuejia,yacovm,ymlbright,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"Design Doc:
https://docs.google.com/document/d/1zIQrS4TRgQEx1z9-wwtO8tYOGRyWdUoTdfk49GFx1wY/edit?usp=sharing",Unset,,Unset,ghx-label-8,,Fabric CLI Redesign,To Do,,,Unset,,,,"1|hzzfh3:",,,,Unset,Unset,,,,,,,,,,,,,,,"User Stories:
https://docs.google.com/document/d/1dxOeM85PgrMNQUJMxB2kwhDthyWnzDxdPvjlwk7x4-w/edit?usp=sharing",binhn,bpbuch,ChristopherFerris,denyeart,Hangyu_FJH,latitiah,lehors,mastersingh24,muralisr,nnao,pdina,scottz,sheehan,sykesm,TopJohn,troyronda,xixuejia,yacovm,ymlbright,yoheiueda,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jul/18 4:45 AM;yacovm;{quote}The error should be logged to standard out
{quote}
 

Any reason not to stderr? Ideally I'd say both the verbose and the errors would be logged to stderr, and output to stdout, so one could easily distinguish and also at the same time we should really get rid of all that logging we have in the peer CLI that makes output redirection to pipes not usable ;)

 ;;;","24/Jul/18 12:46 AM;ChristopherFerris;Agree with [~yacovm] - why would you log errors to stdout?

As for the proposal, I am not sure that I am on board. If we are going to refactor and rethink the CLI, then I think we should follow well worn path of CI design of the likes of kubectl, cf and others that establish an extensible framework that not only enables plugins, but where the commands are themselves plugins. It should also enable the user to establish context for a session/series of interactions so that the user is not required to script all interaction because so much information is required. e.g. I do NOT think we should preserve the same CLI, but give it some UX design.

export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp export CORE_PEER_ADDRESS=peer0.org1.example.com:7051 export CORE_PEER_LOCALMSPID=""Org1MSP"" export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt

peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

^^^ this is insane;;;","24/Jul/18 1:45 AM;bpbuch;[~yacovm] I fully agree that it should be stderr, not stdout. This was a mistake on my part. 

[~ChristopherFerris] I think we are on the same page.  The design should follow the well worn path that you have mentioned, and ""connection profiles"" should alleviate a lot of the pain with regards to session and UX issues.  The mention of plugins was more of a stretch goal for a sprint.;;;","24/Jul/18 1:48 AM;sykesm;Can we please adopt the more modern and more flexible GNU command argument conventions? [1] Long option names are a very helpful way of self-documenting a command.

[1] https://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html;;;","24/Jul/18 1:59 AM;sykesm;{quote}
Rather than driving the CLI by yaml files, a profile configuration workflow should be implemented to drive the same details as core.yaml.  The profiles can be easily toggled for an improved user experience and removes the dependency on environment variables.
{quote}
I'm assuming this is in the spirit of {{cf config}} and {{kubectl config}} with corresponding support for commands like {{cf api}}, {{cf target}}, and {{kubectl config set-context}}?

If so, will the configuration state be stored in the users's home directory by default? Will there be an easy way to point to an alternate location in the spirit of {{CF_HOME}} and {{KUBECONFIG}}?;;;","01/Aug/18 12:29 AM;latitiah;
{quote}The existing CLI will become deprecated one release after the redesigned CLI becomes production ready.  This will provide current users with a grace period to migrate to the new tool.
{quote}
Can we allow for a combination of using this CLI as well as the old CLI? This will allow for an easier migration over to the proposed CLI. This means *not* deprecating the existing CLI after 1 release, but more. The existing CLI is used extensively in testing.;;;","01/Aug/18 2:56 AM;lehors;There is no need to commit to any specific timeframe for deprecating the old CLI. This can happen at any time. Hopefully, the new CLI will become the norm and eventually the old CLI will become unused and can be deprecated.

We probably should separate the peer function from the old CLI into a separate executable but that can be done independently of this project. For what it's worth I have actually performed that surgery and it's pretty straightforward.

 ;;;","04/Oct/18 8:33 PM;mastersingh24;Moving to 2.0.0 for now ... if we get something sooner, great.;;;","09/Jan/19 3:00 PM;denyeart;Have not seen a recent update, therefore moving to v2.1.0 for now.;;;","14/Oct/19 4:30 PM;TopJohn;when can we move this project from gerrit to github? I saw some projects have finished migration.;;;",,,,,,,,,,,,,,,,,
Create script to pull docker images from nexus and publish to hyperledger dockerhub,FAB-10735,31202,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,20/Jun/18 1:34 PM,09/Sep/18 10:16 PM,28/Oct/23 3:03 AM,09/Sep/18 10:16 PM,v1.2.0,,,,,,,,Future,,,fabric-build,,,,,0,,,,,,,"Create a script to pull stable docker images from nexus3 repository, re-tag with the release version and publish images to hyperledger dockerhub account.

This script also should pull binaries and images when ever user want to test with the stable images and binaries.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfhb:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/18 10:27 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23361/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix typo in some rst files,FAB-10738,31206,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,diizuka,diizuka,diizuka,20/Jun/18 3:35 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,21/Jun/18 11:12 PM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,Documentation,,,,,,"At the master branch of fabric git repository,
fix typo in docs/source/private_data_tutorial.rst
and docs/source/couchdb_tutorial.rst:

In private_data_tutorial.rst:
   ""defintion"" to ""definition""
In couchdb_tutorial.rst:
   ""defintion"" to ""definition"",
   ""atrribute"" to ""attribute""
   ""prerequiste"" to ""prerequisite""",,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfhz:",,,,,,,,,,,,,,,,,,,,,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Optimize pvt data retrieval,FAB-10742,31211,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,C0rWin,C0rWin,C0rWin,20/Jun/18 9:35 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,06/Jul/18 4:22 AM,,,,,,,,,v1.3.0,,,fabric-gossip,,,,,0,,,,,,,"Currently while pulling for missing private data, we iterating over slice of digests which summarize missing peaces and for each digest in slice querying either from ledger (if committed) or from transient store.

This approach is inefficient it terms of number of queries done against ledger, since we might have several digests of different transaction belongs to one block, hence we might optimize the query, by grouping all missing data by block sequence number and retrieving all of them at once, rather than repeating query for same block over again.

Additional issue is that while returning missing private data from ledger (in case it was already committed) we using {{GetPvtDataByNum}} API which returns all private data underlined for the block for all transactions, while we usually interesting in particular tx index. Therefore we can filter out transactions or private rwsets of transactions which we are not interesting in, thus saving network bandwidth utilization optimizing pull response processing.",,C0rWin,rlalgowdar,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzzfiv:",,,,,,,,,,,,,,,,,,,,,C0rWin,rlalgowdar,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Jul/18 9:02 PM;C0rWin;https://gerrit.hyperledger.org/r/23597;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Test ticket,FAB-10743,31212,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Invalid,,ranganath,ranganath,20/Jun/18 10:31 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:05 PM,,,,,,,,,,,,fabric-build,,,,,0,Security,,,,,,,,ranganath,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfj3:",,,,,,,,,,,,,,,,,,,,,ranganath,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/18 10:44 PM;ranganath;Sorry confused with another project.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Release jobs to publish fabric, fabric-ca docker images from master",FAB-10744,31213,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,20/Jun/18 10:42 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,21/Jun/18 12:53 PM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,"Release jobs to publish fabric, fabric-ca docker images from master",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfjb:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/18 11:17 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23383/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
NL supports service discovery,FAB-10746,31215,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,20/Jun/18 11:19 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,21/Jun/18 3:33 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,Network Launcher supports service discovery: peer and orderer containers must have the same internal and external ports.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10956,,,,,,,,,,,,,,,,,,,,,,,,FAB-6742,,,,,,,,,"1|hzzfjr:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"21/Jun/18 12:18 AM;dongming;https://gerrit.hyperledger.org/r/#/c/23389/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Uncommitted private data is periodically lost causing peers to slowly commit blocks,FAB-10747,31216,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,divyank,divyank,20/Jun/18 11:33 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,29/Jun/18 7:08 AM,,,,,,,,,v1.2.0,,,fabric-gossip,fabric-ledger,fabric-peer,,,0,must-fix,,,,,,"While running load tests with simple transactions that write some test data to private data, we noticed that every 1000 blocks, all the peers on the network almost stop committing blocks (they commit one block per minute) for a few minutes:
    !block height graph.png|width=580,height=170!

On inspecting the logs, we found that *all* of the peers are timing out on the `pullRetryThreshold`(60s) at commit:
{code:java}
Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID: 4caabb384d2972e8de4808b285e9916842ea4a34b5c69a108c52f8785ea431f3, seq: 1, namespace: mycc1, collection: mycollection1, hash: 22bed93ec2efe5acd7b1bbf9ba949ab50133105844487c1db17b53fcb19362af
txID: a4c09a826e59bbffde1d348d4835f7817754885df778e3c59cbab2f0d7ca9c48, seq: 3, namespace: mycc2, collection: mycollection2, hash: 0e16dff4d881f3347b4782534e72e510971ed0f7caafd156bce0c1261ef86abf
txID: 6ba3934a06190d3cabb01569ae11c7d523364fecc254495763f9d4606af05bf7, seq: 5, namespace: mycc1, collection: mycollection1, hash: 80915690dc7186731dc0229eb6a97bb3ff97f91c10bb48238416a9c9dbc17804
txID: 6ba3934a06190d3cabb01569ae11c7d523364fecc254495763f9d4606af05bf7, seq: 5, namespace: mycc2, collection: mycollection2, hash: 0c65c5caec1c1f8a37cf058573ae80f88e081b7de0369ecaf9a8e88314c12291
txID: 10cecdac580507afabfbd928bc2c34ea37d989ed140e59de693ad63ee72ecfcd, seq: 0, namespace: mycc2, collection: mycollection2, hash: b15aa23849e650bc473e8f8cd257106d9ba1f8cb1756fedead1a33c1d9daef00
{code}
This happens for a few consecutive blocks (or many, depending on the load) and then the peers recover, committing blocks at a normal rate.
 During this period (5 to 30 minutes, depending on the load) the entire system comes to a halt as the none of the peers are able to commit transactions.

We suspect that this issue is related to the `transientstoreMaxBlockRetention` configuration which is set to 1000. The purge could be wiping out private data from transactions that were in-flight (endorsed, but not committed) from the transient store leading to the pull timeout at commit time.

*Environment information:*

Fabric master branch commit 25342999b62eb522e8bf303e18a54ec3013e58a7

Four orgs with two peers each, three channels (one with all orgs, two with two orgs each)

The tests were run on a networked cloud environment and the issue is consistently reproducible.

Private data collection config:       
mycollection1: any org, requiredPeerCount=3, and maxPeerCount=7
mycollection2: any org, requiredPeerCount=3, and maxPeerCount=7",,bstasyszyn,C0rWin,denyeart,divyank,manish-sethi,raidinesh80,rlalgowdar,ScottAllan,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/18 10:52 PM;divyank;block height graph.png;https://jira.hyperledger.org/secure/attachment/15128/block+height+graph.png","22/Jun/18 3:51 AM;bstasyszyn;private_data_purge_logs.txt;https://jira.hyperledger.org/secure/attachment/15157/private_data_purge_logs.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfjz:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,C0rWin,denyeart,divyank,manish-sethi,raidinesh80,rlalgowdar,ScottAllan,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jun/18 10:36 PM;troyronda;[~divyank] To clarify ""The purge could be wiping out private data from transactions that were in-flight (endorsed, but not committed) from the transient store leading to the pull timeout at commit time.""

Is it the case that you are seeing private data wiped out that is newer than transientstoreMaxBlockRetention; and this is causing ""current"" transactions to fail because the private data got wiped prematurely from Temp DB? 

(and ""current"" transactions mean those being committed near the block interval represented by transientstoreMaxBlockRetention).;;;","21/Jun/18 11:23 PM;divyank;Yes, I believe that is the case. The peers come to a halt immediately after the transient data purge indicating that the private data from the “current” transactions temporarily placed in the store was prematurely deleted. ;;;","22/Jun/18 2:00 AM;denyeart;We are looking into this.  From a side channel it sounds like the problem was confirmed to be related to transientstoreMaxBlockRetension, as setting it to a high value to disable the transient store purging makes the problem go away.;;;","22/Jun/18 3:51 AM;bstasyszyn;I reproduced this problem with a simple chaincode that reads from a private data collection and then writes to it. I invoked the chaincode in 50 concurrent threads with random keys and values. The collection policy is Org1 AND Org2.

Notes:
- I set transientstoreMaxBlockRetention=10 to more readily reproduce the issue
- I added a log in PurgeByHeight that prints the key of the private data that's being purged

Attached are the complete logs, but here's a summary of one Transaction:

org1peer2_1      | 2018-06-21 18:38:08.722 UTC [transientstore] PurgeByHeight -> WARN a7a ********************** Deleting private data for key [Pd12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc1765251118545fa2-2518-46a9-b1d5-26fa7223d2ff]. txID [d12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511], uuid [18545fa2-2518-46a9-b1d5-26fa7223d2ff], blockHeight [0]
org1peer2_1      | 2018-06-21 18:38:08.722 UTC [transientstore] PurgeByHeight -> WARN a7b ********************** Deleting private data for key [Pd12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511a7d7414c-cedc-4b59-bd47-131f46adbd54]. txID [d12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511], uuid [a7d7414c-cedc-4b59-bd47-131f46adbd54], blockHeight [0]
org1peer1_1      | 2018-06-21 18:38:08.919 UTC [transientstore] PurgeByHeight -> WARN 8a1 ********************** Deleting private data for key [Pd12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511e38ccfb3-88f7-426a-8f1d-d60db95cd5b2]. txID [d12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511], uuid [e38ccfb3-88f7-426a-8f1d-d60db95cd5b2], blockHeight [0]
org1peer1_1      | 2018-06-21 18:38:08.919 UTC [transientstore] PurgeByHeight -> WARN 8a2 ********************** Deleting private data for key [Pd12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511ea4d5e23-1426-4dbc-a8ed-31212f87d427]. txID [d12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511], uuid [ea4d5e23-1426-4dbc-a8ed-31212f87d427], blockHeight [0]
org2peer1_1      | 2018-06-21 18:38:09.465 UTC [transientstore] PurgeByHeight -> WARN 14c4 ********************** Deleting private data for key [Pd12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc176525110b39c4da-9642-40ce-899a-18203b841f4d]. txID [d12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511], uuid [0b39c4da-9642-40ce-899a-18203b841f4d], blockHeight [0]
org2peer1_1      | 2018-06-21 18:38:09.465 UTC [transientstore] PurgeByHeight -> WARN 14c5 ********************** Deleting private data for key [Pd12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc176525118bed6d59-e830-4964-afc4-b28e363dfb77]. txID [d12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511], uuid [8bed6d59-e830-4964-afc4-b28e363dfb77], blockHeight [0]
org1peer2_1      | 2018-06-21 18:38:15.565 UTC [gossip/privdata] fromTransientStore -> ERRO c11 No collection config was found for chaincode examplecc collection name examplecc txID d12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511
org1peer2_1      | 2018-06-21 18:38:20.429 UTC [gossip/privdata] fromTransientStore -> ERRO c17 No collection config was found for chaincode examplecc collection name examplecc txID d12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511
org1peer2_1      | 2018-06-21 18:38:21.567 UTC [gossip/privdata] fromTransientStore -> ERRO c21 No collection config was found for chaincode examplecc collection name examplecc txID d12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511
org2peer1_1      | 2018-06-21 18:39:09.591 UTC [gossip/privdata] StoreBlock -> WARN 14dc Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID: d12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511, seq: 2, namespace: examplecc, collection: coll1, hash: 75adadc0bb533591a4539a5474078b26fa5a52cc3e222128497737dc65dc1036
org1peer1_1      | 2018-06-21 18:39:10.449 UTC [gossip/privdata] StoreBlock -> WARN 9c9 Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID: d12c0292796e899cf807f20b5cdcdce404e8e3529f13cb83014db7cc17652511, seq: 2, namespace: examplecc, collection: coll1, hash: 75adadc0bb533591a4539a5474078b26fa5a52cc3e222128497737dc65dc1036
;;;","22/Jun/18 8:15 PM;manish-sethi;I briefly looked at the logs attached but could not find anything unusual that would hint for a bug. This may just that the concurrency is much higher than the configuration '{color:#a31515}peer.gossip.pvtData.transientstoreMaxBlockRetention'.{color}

However, in order to further confirm, [~bstasyszyn] can you run your test again with running peer with DEBUG logs on. That would print some more info which can be used to compute the blocks that gets committed between ""adding pvt data to the transient store"" and ""PurgeByHeight"" for a particular txid.

For PurgeByHeight, you already have added logs and during '{color:#000000}adding to store'{color}, you may see a message ""{color:#a31515}Persisting private data to transient store for txid = %s{color}"" in debug logs. This can been used to see how many block gets committed between these two log statements.;;;","23/Jun/18 1:32 AM;divyank;Hi [~manish-sethi], thank you for looking into this. In the logs provided below we were making 50 concurrent private data transactions with `transientstoreMaxBlockRetention` set to the default value of 1000. This very much represents real world usage.

Here are the logs you requested (attaching only the relevant portions). This confirms our suspicions that the private data from an ongoing transaction was prematurely deleted:
{code:java}
2018-06-22 15:44:10.953 UTC [kvledger] CommitWithPvtData -> INFO 76e95d Channel [mychannel]: Committed block [2000] with 20 transaction(s)
...
2018-06-22 15:44:11.033 UTC [transientstore] PersistWithConfig -> DEBU 76e9ca Persisting private data to transient store for txid = 4e89e224b8795438f7a1eadf0fffe6ee6fa8c4ae7a6da2c4e646c0d9b0af33d7
...
2018-06-22 15:44:11.074 UTC [kvledger] CommitWithPvtData -> DEBU 76ea0f Channel [mychannel]: Committing block [2000] transactions to history database
...
2018-06-22 15:44:11.098 UTC [transientstore] PurgeByHeight -> DEBU 76eae4 Purging orphaned private data from transient store received prior to block [1000]
... [Notice the one minute delay during which all peers are stuck]
2018-06-22 15:45:24.035 UTC [gossip/privdata] StoreBlock -> WARN 773e1c Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID:
txID: 4e89e224b8795438f7a1eadf0fffe6ee6fa8c4ae7a6da2c4e646c0d9b0af33d7, seq: 3, namespace: benchmark_cc, collection: billing, hash: 3967b9eeb0607a0e58527886751dac8614b484723c0878ff54dd7a5d4c6cbe89
2018-06-22 15:45:24.036 UTC [kvledger] CommitWithPvtData -> DEBU 773e1d Channel [mychannel]: Validating state for block [2001]
{code};;;","26/Jun/18 4:55 AM;denyeart;[~divyank] I am not able to reproduce the problem during normal operations.

If I set CORE_PEER_GOSSIP_PVTDATA_TRANSIENTSTOREMAXBLOCKRETENTION=5 and send a constant load of transactions they all succeed as normal, that is, the commits are always getting private data that was executed in chaincode within the last 5 blocks, so purging data older than 5 blocks ago from transient store has no negative effect.

Now, if I dial CORE_PEER_GOSSIP_PVTDATA_TRANSIENTSTOREMAXBLOCKRETENTION all the way down to 1, then I can reproduce the problem.  That is, commits will attempt to get private data that was executed within the last couple blocks, but this data will have been purged already from transient store, and therefore the commit will retry to pull private for pullRetryThreshold (default 60 seconds) before giving up and committing the block with missing private data.

If all is good at CORE_PEER_GOSSIP_PVTDATA_TRANSIENTSTOREMAXBLOCKRETENTION=5, certainly all should be good at the default CORE_PEER_GOSSIP_PVTDATA_TRANSIENTSTOREMAXBLOCKRETENTION=1000 as that is a much more conservative purging schedule.

We will need to understand more about your scenario to understand why the private data cannot be pulled in your scenario. Are you able to provide some more detailed reproduction steps?

 ;;;","27/Jun/18 10:42 AM;divyank;[~denyeart] this is hard to reproduce in a local, non-networked environment. Here is a minimal test case that reliably reproduces the issue: [https://gerrit.hyperledger.org/r/c/23693/6/test/integration/orgs/multiple_orgs_test.go]

The trick I used was to add a small [sleep|https://gerrit.hyperledger.org/r/c/23693/6/pkg/client/channel/invoke/txnhandler.go#84] between endorse and commit on the client side to increase the number of potential pending transactions during the transient store purge.

Here are the INFO logs from the test run (suggest not opening this large file in a browser): [https://jenkins.hyperledger.org/job/fabric-sdk-go-tests-verify-s390x/3027/consoleText]

The ""TransientStoreMaxBlockRetention"" config was set to 500 and we saw the first private data timeout after the first purge at block 1000:
{code:java}
org1peer1_1          | 2018-06-26 22:55:55.030 UTC [gossip/privdata] StoreBlock -> WARN 501ef Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID: aa33f9ed3ba9fcd013c7cb5d27439f5e3dcec2abb06243e01c9b7b1d715b4f4c, seq: 5, namespace: exampleCC, collection: billing, hash: 59a874bdb661d41ed7a10a9812dff3ca486e286bfc4ce70e7e20cd5eb56cf6d3
...
org1peer1_1          | 2018-06-26 22:55:55.044 UTC [kvledger] CommitWithPvtData -> INFO 501f0 Channel [orgchannel]: Committed block [1001] with 42 transaction(s)
{code}
And again at block 1500, 2000, 2500, and so on...
{code:java}
org1peer1_1          | 2018-06-26 23:01:41.082 UTC [gossip/privdata] StoreBlock -> WARN 7708f Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID: 963f15356bc1b63fadce3e1651fde33eaaf91c6cece4212b90adfe24d54d74eb, seq: 12, namespace: exampleCC, collection: billing, hash: 74e027d91e5c3f2764d4de6557b3d245de1ad5303cedcd02b98b63248d4e756d
...
org1peer1_1          | 2018-06-26 23:01:41.090 UTC [kvledger] CommitWithPvtData -> INFO 77090 Channel [orgchannel]: Committed block [1501] with 32 transaction(s)
...
org1peer1_1          | 2018-06-26 23:08:28.632 UTC [gossip/privdata] StoreBlock -> WARN 9e225 Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID: 30ab66c0136527201a38c71c97d2093c3ffb1daaf5445664a3fc325f4ede695a, seq: 10, namespace: exampleCC, collection: billing, hash: fa76af7c750987b4187d4e8f604d98955a39085246d6272e02dc5b4b6fcb7420
...
org1peer1_1          | 2018-06-26 23:08:28.649 UTC [kvledger] CommitWithPvtData -> INFO 9e226 Channel [orgchannel]: Committed block [2001] with 100 transaction(s){code}
 


Here are the peer debug logs from another run of the test: [https://jenkins.hyperledger.org/job/fabric-sdk-go-tests-verify-s390x/3029/consoleText|https://jenkins.hyperledger.org/job/fabric-sdk-go-tests-verify-s390x/3027/consoleText] (purge setting was set to 250 for this run as CI would time out before reaching 1000 blocks)

In this run the first transient data purge happens at block 500 and we can see that the private data for transaction ID '3a024c03c89773b5d3534c3262132a78b9d0d40830076184b53dd0db5aa60007' which was added after the local block height reached 498 was prematurely deleted even though the intent was to ""[purge] orphaned private data from transient store received prior to block [250]"" which was committed minutes before:
{code:java}
org1peer1_1          | 2018-06-27 00:24:21.960 UTC [kvledger] CommitWithPvtData -> INFO 15d55f Channel [orgchannel]: Committed block [250] with 38 transaction(s){code}
{code:java}

org1peer1_1          | 2018-06-27 00:26:55.463 UTC [kvledger] CommitWithPvtData -> INFO 237e84 Channel [orgchannel]: Committed block [498] with 57 transaction(s){code}
{code:java}
org1peer1_1          | 2018-06-27 00:26:55.705 UTC [transientstore] PersistWithConfig -> DEBU 238041 Persisting private data to transient store for txid = 3a024c03c89773b5d3534c3262132a78b9d0d40830076184b53dd0db5aa60007{code}
{code:java}

org1peer1_1          | 2018-06-27 00:26:56.745 UTC [kvledger] CommitWithPvtData -> INFO 23915e Channel [orgchannel]: Committed block [500] with 100 transaction(s){code}
{code:java}
org1peer1_1          | 2018-06-27 00:26:56.848 UTC [transientstore] PurgeByHeight -> DEBU 239375 Purging orphaned private data from transient store received prior to block [250]{code}
{code:java}
org1peer1_1          | 2018-06-27 00:28:03.674 UTC [gossip/privdata] StoreBlock -> WARN 23b52e Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID: 3a024c03c89773b5d3534c3262132a78b9d0d40830076184b53dd0db5aa60007, seq: 15, namespace: exampleCC, collection: billing, hash: a259e9d014e971496652d4da2c6322157efc06913a050a459b8d5e2d184ec632
...
org1peer1_1          | 2018-06-27 00:28:03.675 UTC [kvledger] CommitWithPvtData -> DEBU 23b52f Channel [orgchannel]: Validating state for block [501]
{code}
 ;;;","28/Jun/18 6:20 AM;denyeart;[~divyank] Thanks for the details.  I found the issue - you were right, all data in transient store was getting purged each cycle. I am pushing a fix.;;;","28/Jun/18 6:21 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/23767/] master

[https://gerrit.hyperledger.org/r/#/c/23769/] release-1.2;;;",,,,,,,,,,,,,,,,,
Cut v1.2.0-rc1 release,FAB-10748,31218,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,ChristopherFerris,21/Jun/18 1:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,03/Jul/18 7:09 PM,,,,,,,,,v1.2.0,,,fabric-release,,,,,1,,,,,,,"Prepare and publish v1.2.0-rc1 release of Hyperledger Fabric. The tasks are listed in execution order and I have indicated any dependencies in the description of each.

 

Note that until we address, the repositories must be tagged and published serially: fabric-ca, fabric-sdk-node, others.",,ChristopherFerris,denyeart,JonathanLevi,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11005,,FAB-8881,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfkf:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,JonathanLevi,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - verify release jobs to support 1.2.0-rc1 release,FAB-10749,31219,31218,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,ChristopherFerris,21/Jun/18 1:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,22/Jun/18 7:16 AM,,,,,,,,,v1.1.0,,,fabric-ci,fabric-release,,,,0,fabric-ci,,,,,,Make sure all the release jobs are ready for release.,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfkn:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/18 4:20 AM;rameshthoomu;[https://gerrit.hyperledger.org/r/#/c/23383/] - On hold till this get merged [https://gerrit.hyperledger.org/r/#/c/23401/];;;","21/Jun/18 10:42 PM;rameshthoomu;All release jobs are ready to publish images and binaries for 1.2.0

*Docker Images:*

release jobs pull 1.2.0-stable docker images from nexus and re-tag it as 1.2.0 and publish to hyperledger docker hub. This is a manual trigger from Jenkins. (No need to create a tag in the repository to publish images)

*Binaries:*

release jobs to download fabric and fabric-ca binaries from nexus and re-tar it with 1.2.0 release version. (Again this is a manual trigger from Jenkins. (No need to create a tag in the repository to publish images)

 ;;;","21/Jun/18 11:24 PM;rameshthoomu;[~ChristopherFerris] [~denyeart]
I think we have to publish images based on the release commit [https://gerrit.hyperledger.org/r/#/c/23421/] to match both ""fabric.version"" and ""RepoTags"". Otherwise the fabric.version (1.2.0) and repotags (1.2.0-rc1) shows different versions if we use images or binaries which are published already without the above patchset.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for 1.2.0-rc1 release,FAB-10750,31220,31218,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,21/Jun/18 1:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,22/Jun/18 5:50 AM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

*----------*

{{git checkout master }}

{{git pull}}

_*checkout the CR from Gerrit - be sure you have latest!!!*_ 

{{git checkout -b <newbranch>}}

{{git rebase master }}

git commit --amend

*_make a tweak to commit message_*

git review

 

Check for clean CI passes

merge

----------------------

Changes

----------------------------

Update bootstrap.sh for latest baseimage:

export THIRDPARTY_IMAGE_VERSION=0.4.8

 

Update Makefile

{{BASE_VERSION = 1.2.0}}
 {{PREV_VERSION = 1.2.0-rc1}}

EXPERIMENTAL ?= false

 
 Update docs/source/samples.rst for  1.2.0-rc1

e.g. 
 curl -sSL [https://goo.gl/6wtTN5] | bash -s 1.2.0-rc1
  
 {{release_notes/v1.2.0-rc1.txt should be created}}

{{docs/source/releases.rst should be updated with prose and link to GH release page}}

{{change log should be generated just *after* *rebasing* to pick up the last minute merged CRs and linked from docs/source/releases.rst}}

./scripts/changelog.sh v1.1.0 v1.2.0-rc1",,ChristopherFerris,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfkv:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jun/18 2:56 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/23399;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for next release,FAB-10751,31221,31218,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,21/Jun/18 1:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,22/Jun/18 10:34 PM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,"Note that this change must be stacked on the previous CR to prepare for the v1.1 release.

Update Makefile

BASE_VERSION = 1.2.0

PREV_VERSION = 1.2.0-rc1

EXPERIMENTAL ?= true

 

Note: Release should be tagged prior to merging this ""prepare for next CR"".",,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfl3:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/18 6:55 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/23485;;;","22/Jun/18 10:31 PM;ChristopherFerris;cherry pick for release-1.2 https://gerrit.hyperledger.org/r/c/23525;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for 1.2.0-rc1 release,FAB-10752,31222,31218,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,21/Jun/18 1:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,22/Jun/18 6:48 AM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

Check for clean CI

Update Makefile

{{BASE_VERSION = 1.2.0-rc1}}
 {{PREV_VERSION = 1.1.0}}
 {{IS_RELEASE = true}}

change log should be generated just *after* *rebasing* to pick up the last minute merged CRs 
 ./scripts/changelog.sh v1.1.0 v1.2.0-rc1

update release_notes/v1.2.0-rc1.txt

 ",,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzflb:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jun/18 7:26 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/23421;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for next release,FAB-10753,31223,31218,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,21/Jun/18 1:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,23/Jun/18 1:05 AM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,"Note that this change must be stacked on the previous CR to prepare for the next release.

1. Update Makefile

{{BASE_VERSION = 1.2.0}}
 {{PREV_VERSION = 1.2.0-rc1}}
 {{IS_RELEASE = false}}

2. Update lib/metadata/version.go

var Version = ""1.2.0""
 
 Note: Release should be tagged prior to merging this ""prepare for next CR"".

 ",,aambati,ChristopherFerris,denyeart,rennman,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzflj:",,,,,,,,,,,,,,,,,,,,,aambati,ChristopherFerris,denyeart,rennman,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/18 6:55 AM;ChristopherFerris; https://gerrit.hyperledger.org/r/23487;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Tag repositories for 1.2.0-rc1,FAB-10759,31229,31218,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,ChristopherFerris,ChristopherFerris,21/Jun/18 1:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,23/Jun/18 1:14 AM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,"*NOTE:* depends on preceding related CRs being merged.

Tag each repository local clone with the release_notes/v1.2.0-rc1.txt as the tag comment

{{% git tag -a v1.2.0-rc1 -F release_notes/v1.2.0-rc1.txt}}

{{% git push origin v1.2.0-rc1 HEAD:refs/heads/master}}

Tag each of fabric, fabric-ca, fabric-chaincode-node, fabric-sdk-node, and fabric-samples (use v1.2.0).

 
----
Note, that one can also tag the repo at a specific commit-level.

NOTE *e4b4704 should be updated with latest commit sha*

E.g., to add the {color:#f79232}*v1.2.0-rc1*{color} tag at commit level {color:#205081}*e4b4704*{color}, I used

{{% git tag -a *{color:#f79232}v1.1.0{color} {color:#205081}e4b4704{color}* -F release_notes/v1.2.0-rc1.txt}}

 

 ",,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzflr:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jun/18 10:01 PM;ChristopherFerris;tagged fabric and fabric-samples;;;","23/Jun/18 1:13 AM;ChristopherFerris;tagged fabric-ca;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"Verify fabric, fabric-ca docker images are published with 1.2.0-rc1 tag to hyperledger dockerhub account",FAB-10760,31230,31218,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,ChristopherFerris,21/Jun/18 1:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,23/Jun/18 1:45 AM,,,,,,,,,v1.2.0,,,fabric-ci,fabric-release,,,,0,,,,,,,"Verify fabric, fabric-ca docker images are published to hyperledger docker-hub account and make sure fabric-binaries are published to nexus repository.",,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzflz:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test download of v1.2.0-rc1 release artifacts and samples across all platforms,FAB-10761,31231,31218,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,ChristopherFerris,ChristopherFerris,21/Jun/18 1:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,23/Jun/18 1:45 AM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,test download of release artifacts and samples across all platforms,,ChristopherFerris,denyeart,harrijk,rameshthoomu,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfm7:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrijk,rameshthoomu,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Verify doc build status on v1.2.0-rc1 release tag in ReadTheDocs,FAB-10762,31232,31218,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,rameshthoomu,ChristopherFerris,21/Jun/18 1:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,23/Jun/18 1:45 AM,,,,,,,,,v1.2.0,,,fabric-ci,fabric-docs,fabric-release,,,0,,,,,,,Verify readthedocs version release-1.2 gets built and published from release-1.2 branch edits.,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfmf:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Send email to hyperledger-fabric mailing list,FAB-10764,31234,31218,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,ChristopherFerris,ChristopherFerris,21/Jun/18 1:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,03/Jul/18 7:09 PM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,send email announcing the release to hyperledger-fabric@lists.hyperledger.org mailing list.,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfmn:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query for pvt data error: Failed to handle GET_STATE.,FAB-10768,31238,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,manish-sethi,rlalgowdar,rlalgowdar,21/Jun/18 1:29 AM,26/Jun/19 8:41 PM,28/Oct/23 3:03 AM,22/Jun/18 12:22 AM,,,,,,,,,v1.2.0,,,fabric-ledger,,,,,0,must-fix,,,,,,"Testing  Queries After Invokes Failing with Error in GET_STATE.

Test configured to run with BlockToLive: 3 in pvt collections.

[[31m2018-06-20 15:27:18.104 UTC [chaincode] HandleTransaction -> ERRO 2c638^[[0m [27082332] Failed to handle GET_STATE. error: Private data matching public hash version is not available. Public hash version = (*version.Height)(nil), Private data version = &version.Height\{BlockNum:0xe, TxNum:0x0}
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetState
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:545
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetState-fm
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:197
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:242
runtime.goexit
        /opt/go/src/runtime/asm_amd64.s:2361
GET_STATE failed: transaction ID: 27082332d09e661abcb30360bf972ab29527c62d5ed14f40073f710c3ac69ff4
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:246
runtime.goexit

 ",,denyeart,mehulshahnj,rlalgowdar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10134,,,,,,,,"21/Jun/18 1:29 AM;rlalgowdar;peer0.debug.500.jun20.log.zip;https://jira.hyperledger.org/secure/attachment/15130/peer0.debug.500.jun20.log.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfmv:",,,,,,,,,,,,,,,,,,,,,denyeart,mehulshahnj,rlalgowdar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jun/18 2:01 AM;denyeart;This private data for key *marble_testorgschannel1_org1_0_2_86* including hash key of *kDzX0l+QGeABRxIOIeGnaXD4WSfAM0BDcBDtsj2AsIQ=* was committed to state database in block 14 at
{code:java}
[36m2018-06-20 15:24:56.100 UTC [couchdb] BatchUpdateDocuments{code}
Then after block 16 is committed a simulation attempts to read it and gets the cached version of hash:
{code:java}
[36m2018-06-20 15:27:18.104 UTC [statecouchdb] GetCachedVersion -> DEBU 2c637[0m Retrieving cached version: kDzX0l+QGeABRxIOIeGnaXD4WSfAM0BDcBDtsj2AsIQ=~marbles02_private_go_ch1$$hcollectionMarblePrivateDetails{code}
The cached version must have been nil incorrectly, since we get:
{code:java}
[31m2018-06-20 15:27:18.104 UTC [chaincode] HandleTransaction -> ERRO 2c638[0m [27082332] Failed to handle GET_STATE. error: Private data matching public hash version is not available. Public hash version = (*version.Height)(nil), Private data version = &version.Height{BlockNum:0xe, TxNum:0x0}{code}
Note that the private version was found (at block 14 transaction 0), but the hashed version was not found.

For a case of missing private data, we would have seen the opposite.  So I believe this problem indicates a problem in the hash version cache.

 ;;;","21/Jun/18 10:27 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/23443/;;;","22/Jun/18 12:10 AM;denyeart;This error would have happened if at least one key is expiring in the next block (yet to come block) and query is made on some other key (other than the expiring ones) in the same namespace.  As this has a large impact on private data scenarios, I've labeled as must-fix.

I've confirmed the fix resolves the issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Error: unknown flag: --peerAddresses : peer chaincode invoke does not recognize --peerAddresses flag.,FAB-10771,31241,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,nileshdeotale,nileshdeotale,21/Jun/18 3:07 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,27/Jun/18 11:54 PM,,,,,,,,,,,,fabric-docs,fabric-samples,,,,0,,,,,,,"{quote}Created network manually as per steps in[http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#createchanneltx]
{quote}
Network:

nileshs-mbp:first-network nileshdeotale$ docker ps -a

CONTAINER ID        IMAGE                                                                                                  COMMAND                  CREATED             STATUS              PORTS                                              NAMES

5307a4337834        dev-peer0.org1.example.com-mycc-1.0-384f11f484b9302df90b453200cfb25174305fce8f53f4e94d45ee3b6cab0ce9   ""chaincode -peer.add…""   2 hours ago         Up 2 hours                                                             dev-peer0.org1.example.com-mycc-1.0

3a4d5bbf9de5        hyperledger/fabric-tools:latest                                                                        ""/bin/bash""              3 hours ago         Up 3 hours                                                             cli

3caa85f46253        hyperledger/fabric-peer:latest                                                                         ""peer node start""        3 hours ago         Up 3 hours          0.0.0.0:8051->7051/tcp, 0.0.0.0:8053->7053/tcp     peer1.org1.example.com

3334c0ae3e55        hyperledger/fabric-orderer:latest                                                                      ""orderer""                3 hours ago         Up 3 hours          0.0.0.0:7050->7050/tcp                             orderer.example.com

e9370e4cff66        hyperledger/fabric-peer:latest                                                                         ""peer node start""        3 hours ago         Up 3 hours          0.0.0.0:7051->7051/tcp, 0.0.0.0:7053->7053/tcp     peer0.org1.example.com

4ca5c1f944d3        hyperledger/fabric-peer:latest                                                                         ""peer node start""        3 hours ago         Up 3 hours          0.0.0.0:9051->7051/tcp, 0.0.0.0:9053->7053/tcp     peer0.org2.example.com

cced00c58c40        hyperledger/fabric-peer:latest                                                                         ""peer node start""        3 hours ago         Up 3 hours          0.0.0.0:10051->7051/tcp, 0.0.0.0:10053->7053/tcp   peer1.org2.example.com

 

Then followed all the steps, successfully installed, instantiated and queried

nileshs-mbp:first-network nileshdeotale$ docker logs 5307a4337834

ex02 Init

Aval = 100, Bval = 200

ex02 Invoke

Query Response:\{""Name"":""a"",""Amount"":""100""}

ex02 Invoke

Query Response:\{""Name"":""a"",""Amount"":""100""}

nileshs-mbp:first-network nileshdeotale$ 

 

Then tried to invoke as per command in Invoke section of documentation
{quote}peer chaincode invoke -o orderer.example.com:7050 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C $CHANNEL_NAME -n mycc --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0.org2.example.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '\{""Args"":[""invoke"",""a"",""b"",""10""]}'
{quote}
But this returned error:

Error: unknown flag: --peerAddresses

Usage:

  peer chaincode invoke [flags]

 

Flags:

  -C, --channelID string   The channel on which this command should be executed

  -c, --ctor string        Constructor message for the chaincode in JSON format (default ""\{}"")

  -n, --name string        Name of the chaincode

 

Global Flags:

      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint

      --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint

      --clientauth                          Use mutual TLS when communicating with the orderer endpoint

      --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint

      --logging-level string                Default logging level and overrides, see core.yaml for full syntax

  -o, --orderer string                      Ordering service endpoint

      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.

      --tls                                 Use TLS when communicating with the orderer endpoint

      --transient string                    Transient map of arguments in JSON encoding

  -v, --version                             Display current version of fabric peer server

 ",,nileshdeotale,troyronda,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10841,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfnj:",,,,,,,,,,,,,,,,,,,,,nileshdeotale,troyronda,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/18 10:32 PM;troyronda;The peer command and arguments is not part of Go SDK.;;;","27/Jun/18 2:56 AM;wlahti;Can you clarify which version of Fabric / Build Your First Network you're using? The --peerAddresses and --tlsRootCertFiles flags are only available starting in Fabric 1.2. Did you download the 1.2.0-rc1 binaries following the doc here: [http://hyperledger-fabric.readthedocs.io/en/latest/install.html]?;;;","27/Jun/18 6:18 AM;nileshdeotale;[~wlahti] I was using v1.1 and I didn't realize that ""latest"" doc version is pointing to v1.2. At the time of creating first-network, v1.2 was not RC.

Shouldn't latest documentation be for the current GA version?;;;","27/Jun/18 6:40 AM;wlahti;latest covers the documentation for the master (aka development) branch of the codebase. If you go to [https://hyperledger-fabric.readthedocs.io/], it defaults to the current GA version (release-1.1 at the moment). ;;;","27/Jun/18 11:01 PM;wlahti;[~nileshdeotale] Is it alright with you to close this JIRA now?;;;","27/Jun/18 11:55 PM;nileshdeotale;[~wlahti]  thanks for the clarification regarding documentation. I've closed this now.;;;",,,,,,,,,,,,,,,,,,,,,
PTE is failing without mutual tls when joining the peers to channel,FAB-10772,31242,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,suryalnvs,suryalnvs,21/Jun/18 3:21 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,27/Jun/18 12:07 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"PTE is failing when running FAB-7647 (transmode is latency and event type is channel block) without enabling mutual tls using v1.2 with the following error during joining the peers to channel

PTE log:
{code:java}
error: [Orderer.js]: sendDeliver - rejecting - status:NOT_FOUND
error: [PTE 0 main]: Error: Invalid results returned ::NOT_FOUND
at ClientDuplexStream.<anonymous> (/root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/fabric-client/lib/Orderer.js:231:23)
at emitOne (events.js:116:13)
at ClientDuplexStream.emit (events.js:211:7)
at addChunk (_stream_readable.js:263:12)
at readableAddChunk (_stream_readable.js:250:11)
at ClientDuplexStream.Readable.push (_stream_readable.js:208:10)
at readCallback (/root/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:312:14)
{code}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7647,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzfnr:",,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jun/18 12:08 AM;suryalnvs;changed the cello code to include correct orderer organization policies;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
fabric unit-tests are failing in ppc64le build node,FAB-10778,31248,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harsha544,rameshthoomu,rameshthoomu,21/Jun/18 4:48 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,18/Aug/18 10:32 AM,,,,,,,,,Future,,,fabric-build,,,,,0,ci-failure,,,,,,"fabric unit-tests are failing in ppc64le build node when test on git commit# [ 8fe1bf4 |https://github.com/hyperledger/fabric/commit/8fe1bf4dbc622ddb6d42c4f94ade7e9203194d52]

Stack Trace on failing +*github.com/hyperledger/fabric/peer*+ UT is
{code:java}
=== RUN   TestPluginLoadingFailure
=== RUN   TestPluginLoadingFailure/ENDORSERS_ESCC
panic: test executed panic(nil) or runtime.Goexitgoroutine 50 [running]:
testing.tRunner.func1(0xc420314000)
	/usr/local/go/src/testing/testing.go:742 +0x270
runtime.Goexit()
	/usr/local/go/src/runtime/panic.go:377 +0x168
testing.(*common).FailNow(0xc4201ae3c0)
	/usr/local/go/src/testing/testing.go:553 +0x3c
testing.(*common).Fatalf(0xc4201ae3c0, 0x10ec38fc, 0x6, 0xc4201709a0, 0x2, 0x2)
	/usr/local/go/src/testing/testing.go:597 +0x74
github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/testingtsupport.BuildTestingTGomegaFailHandler.func1(0xc42003c100, 0x3e, 0xc42018c168, 0x1, 0x1)
	/w/go/src/github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/testingtsupport/testing_t_support.go:22 +0x188
github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).match.func1(0x10ec7748, 0x9)
	/w/go/src/github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:125 +0x2e0
github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).match(0xc4200d4a00, 0x10f9f300, 0xc42012c2c0, 0x989601, 0x0, 0x0, 0x0, 0x2)
	/w/go/src/github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:147 +0x324
github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).Should(0xc4200d4a00, 0x10f9f300, 0xc42012c2c0, 0x0, 0x0, 0x0, 0x10f8f780)
	/w/go/src/github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:48 +0x5c
github.com/hyperledger/fabric/peer_test.TestPluginLoadingFailure.func1(0xc420314000)
	/w/go/src/github.com/hyperledger/fabric/peer/main_test.go:51 +0x4e0
testing.tRunner(0xc420314000, 0xc4200d2190)
	/usr/local/go/src/testing/testing.go:777 +0xc8
created by testing.(*T).Run
	/usr/local/go/src/testing/testing.go:824 +0x28c
exit status 2
FAIL	github.com/hyperledger/fabric/peer	5.371s{code}",,harsha544,rameshthoomu,SriramaSharma,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10911,,,,,,,,,,,FAB-10869,,,,,,,,,,,,,,"23/Jun/18 2:06 AM;harsha544;make_unit-test_passing.log;https://jira.hyperledger.org/secure/attachment/15160/make_unit-test_passing.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykuv:",,,,,,,,,,,,,,,,,,,,,harsha544,rameshthoomu,SriramaSharma,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jun/18 11:14 AM;harsha544;^^^  [~SriramaSharma];;;","23/Jun/18 2:06 AM;harsha544;Ramesh - Tested `unit-tests` on git commit level 9da010061dfff02d426e2184851439df298a3760.

Tested them on my internal power systems, the UT are passing. Enclosing logs. [^make_unit-test_passing.log];;;","27/Jun/18 1:54 AM;rameshthoomu;Thanks [~harsha544] for looking into this.. I am seeing consistent failures in production power nodes.  Please see the build log here https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-ppc64le/6/consoleFull;;;","10/Aug/18 11:00 PM;vijaypunugubati;Hi[~harsha544], I have enabled the node for fabric-daily-ppc64le, it is getting failure, when i tried in sandbox.  ;;;","18/Aug/18 5:36 AM;harsha544;Pushed a PR via [https://gerrit.hyperledger.org/r/#/c/25637/] that addresses UT failure on peer test. I have ran this UT manually multiple times and with above PR the mentioned UT passes.;;;",,,,,,,,,,,,,,,,,,,,,,
Conflicts when attempting to build docker images for fabric-test release-1.1,FAB-10781,31251,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,21/Jun/18 5:19 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 1:10 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"When attempting to build images for use in CI in the release-1.1 branch, there are conflicts that occur in the submodules during the build process.
",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfpb:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jun/18 5:23 AM;latitiah;https://gerrit.hyperledger.org/r/23413;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
cut release-1.2 branch,FAB-10782,31254,31218,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,21/Jun/18 7:29 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,23/Jun/18 1:45 AM,,,,,,,,,v1.2.0,,,fabric-build,,,,,0,,,,,,,"cut release-1.2 branch for fabric, fabric-ca, fabric-sdk-node, fabric-sdk-java, fabric-chaincode-node, fabric-samples",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfpr:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jun/18 10:14 PM;ChristopherFerris;fabric release-1.2 created;;;","22/Jun/18 10:15 PM;ChristopherFerris;fabric-samples release-1.2 created;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Fix wrong pkg/lib name in devenv.rst,FAB-10783,31255,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,diizuka,diizuka,diizuka,21/Jun/18 9:48 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 9:45 PM,v1.1.0,,,,,,,,v1.3.0,,,fabric-docs,,,,,0,Documentation,,,,,," On fabric project, docs/source/dev-setup/devenv.rst has several typos.

 Wrong: libtdhl-dev
 Correct: libltdl-dev

 Wrong: libtdl.h
 Correct: ltdl.h

These correct words are derived from:
vendor/github.com/miekg/pkcs11/pkcs11.go (extracted from L15-L26):
{code:xml}
#cgo windows LDFLAGS: -lltdl
#cgo linux LDFLAGS: -lltdl -ldl
#cgo darwin LDFLAGS: -lltdl -L/usr/local/lib/
#cgo openbsd LDFLAGS: -lltdl -L/usr/local/lib/
#cgo LDFLAGS: -lltdl
#include <ltdl.h>
{code}
",,diizuka,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfpz:",,,,,,,,,,,,,,,,,,,,,diizuka,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/18 4:06 AM;wlahti;https://gerrit.hyperledger.org/r/c/23501/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Publish fabric-ca binaries to nexus,FAB-10784,31256,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,21/Jun/18 2:06 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,21/Jun/18 10:36 PM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,Publish fabric-ca binaries to nexus2. This is a manual job can trigger by CI team on the release day.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykun:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/18 2:10 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23431/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Publish fabric-ca binaries to prodcution nexus url,FAB-10785,31257,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,21/Jun/18 2:07 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,21/Jun/18 10:37 PM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,Pull fabric-ca binaries from nexus and publish them to production Nexus url,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykuf:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/18 2:09 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23431/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update CI config to clean the nvm leftover artifacts,FAB-10786,31258,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,21/Jun/18 2:19 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,22/Jun/18 4:02 AM,,,,,,,,,,,,fabric-ci,,,,,0,,,,,,,"Update CI config to clean the nvm leftover artifacts. Update cleanenvironment macro to remove

the .nvm leftover artifacts from the CI jobs.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyku7:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jun/18 4:02 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23433/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
TXSimulationResult misses RangeQueryInfo items,FAB-10788,31260,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,manish-sethi,bur,bur,21/Jun/18 4:03 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,27/Jun/18 5:12 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,must-fix,,,,,,"In endorser.go the tx simulation result is produced by calling _txsim.GetTxSimulationResults()_[(#L294)|https://github.com/hyperledger/fabric/blob/master/core/endorser/endorser.go#L294] followed by _txsim.Done_ before the result is serialized.

This leads to the problem that `simResult` does not contain any `RangeQueryInfo` items, as they are added when _txsim.Done_ is invoked. In other words, this bug causes that there are no range query reads in the read/write set.

 Seems [FAB-9817|https://jira.hyperledger.org/browse/FAB-9817] is related to this bug. In particular, it removes s.Done from GetTxSimulationResults.",,bur,denyeart,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfqf:",,,,,,,,,,,,,,,,,,,,,bur,denyeart,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/18 1:47 PM;manish-sethi;[https://gerrit.hyperledger.org/r/23503] (master);;;","25/Jun/18 8:03 PM;denyeart;[https://gerrit.hyperledger.org/r/#/c/23595/] (release-1.2);;;","25/Jun/18 9:37 PM;denyeart;The impact of this is that there is a regression in current v1.2 which cause phantom reads to not be invalidated as they were in v1.1.  Therefore this is a must-fix for v1.2.

More details - A phantom read is a condition that invalidates a transaction. It occurs when the result set of a range query changes between chaincode execution time and validation/commit time. For example if you wish to transfer all Alice's assets to Bob, you would do a query for all of Alice's assets and then update ownership of each to Bob.  However before this transaction is committed, another transaction may have added another asset for Alice, and therefore the list of assets being updated in the update transaction is no longer valid at the latest block height - there would be an extra 'phantom' item in the latest result set which is missed in the write set. Phantoms are detected by re-executing the query at validation time and comparing the result sets (if the result set is large a hash of the result set is utilized so that transaction size doesn't grow with result set size). The queries and result sets are added to the transaction read set in a RangeQueryInfo object.   With this defect, the RangeQueryInfo was not getting added to the read set, and therefore phantoms were not being detected in recent v1.2 builds.  The fix is to add the RangeQueryInfo to the read set at the same time as when other simulation results are being added to the read set, as opposed to when the simulation is marked as Done, due to recent changes in the simulation lifecycle.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Implement a basic version ,FAB-10789,31261,28201,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,grapebaba,grapebaba,grapebaba,21/Jun/18 6:48 PM,25/Aug/19 11:39 PM,28/Oct/23 3:03 AM,25/Aug/19 11:39 PM,,,,,,,,,,,,fabric-orderer,,,,,0,,,,,,,Implement a basic version which can works,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfqn:",,,,,,,,,,,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use MSP crypto instead of tendermint crypto,FAB-10790,31262,28201,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,grapebaba,grapebaba,21/Jun/18 6:51 PM,25/Aug/19 11:39 PM,28/Oct/23 3:03 AM,25/Aug/19 11:39 PM,,,,,,,,,,,,fabric-orderer,,,,,0,,,,,,,"Currently tendermint not support scep256r1, we need first submit a patch to tendermint.",,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfqv:",,,,,,,,,,,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add tendermint config ,FAB-10791,31263,28201,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,grapebaba,grapebaba,21/Jun/18 6:52 PM,25/Aug/19 11:39 PM,28/Oct/23 3:03 AM,25/Aug/19 11:39 PM,,,,,,,,,,,,,,,,,0,,,,,,,"Current most config use default config in tendermint, we need make all tendermint config later",,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfr3:",,,,,,,,,,,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Simplify couchdb cache usage,FAB-10794,31268,,Story,In Progress,FAB,Fabric,software,denyeart,,,Medium,,Senthil1,manish-sethi,manish-sethi,21/Jun/18 11:43 PM,14/May/20 11:44 AM,28/Oct/23 3:03 AM,,,,,,,,,,v2.2.0,,,fabric-ledger,,,,,0,,,,,,,"Couch db version cache gets touched by three code paths 1) Commit path, 2) purge computation pre-fetch path, and 3) simulation path.

The current code maintains a common cache and hence requires complex synchronization in above usages. For instance, simulation does not need cache at all but ends up hitting it because of common API for getting version. Similarly, the purge path needs only versions but ends up caching revisions as well - again because of common code. This becomes a potential source of hard to catch bugs.

A simple API that simply returns the versions to the upper layer to consume should simplify the code.

 ",,dereckluo,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13320,,,FAB-17036,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|i00wur:2",,,,Unset,,v2.x,,,,Unset,,,,,,,,,,,dereckluo,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jan/20 12:16 AM;dereckluo;self-note:
In _core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go_ function _LoadCommittedVersions_, it obtains a newVersionCache and assigns to *VersionedDB* every time the function is being called. 
However, this function is being called by multiple code paths, which resulted in complex synchronization. 

- detach *committedDataCache* from *VersionedDB* struct, and create a simple API to return the committedDataCache.
- refactor higher level synchronization code when it is not needed anymore.;;;","30/Jan/20 11:44 PM;manish-sethi;https://jira.hyperledger.org/browse/FAB-17036 was a duplicate of this but still have some additional details that may be helpful.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"Command line tool for ledger management and troubleshooting (check heights, hashes, etc)",FAB-10796,31270,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,Senthil1,manish-sethi,manish-sethi,22/Jun/18 12:07 AM,22/Feb/21 11:58 PM,28/Oct/23 3:03 AM,22/Feb/21 11:58 PM,,,,,,,,,,,,fabric-ledger,,,,,0,operator,,,,,,"A tool (command line or web based) is desired that directly operates upon filesystem contents of ledger for the purpose of quick debugging and administration. The tool should handle following commands
 * View properties of block storage (e.g., be able to view block chain info, tx status)
 * Get hash of writes per block to help identify state forks (the hash is a new concept proposed in [https://docs.google.com/document/d/1_-e4Bu42E9vfdttrYBmiSUeOdanH2SiSnuhM1oOn1TA/edit])
 * Delete last n blocks from block store for a given channel - see ideas in [https://docs.google.com/document/d/1_-e4Bu42E9vfdttrYBmiSUeOdanH2SiSnuhM1oOn1TA/edit]
 * Drop block store index, state db, and history db for a given channel (As of now, it's not possible to drop for a given channel. If there is a problem with a particular channel, the entire state/indexes for all the channels are to be dropped)
 * Un-join a peer from a channel (as of now, entire ledger provider db is to be dropped and hence all channels have to be re-joined )

This may be helpful in administration when a bug hits and some of the above needs to be built selectively.

+_To take an example_+, if someone hits into a rare bug as mentioned in FAB-10617, ideally the solution requires an admin to
 * Delete the last block from the troublesome channel, apply patch and restart the peer.

However, in the absence of such a tool, the admin is required to
 * Delete the entire block storage index and state db and history db for all the channels
 * Delete the entire last block file for the troublesome channel
 * If there only a single file as yet in the channel, then it becomes more complex that requires deletion of ledgers provider database which in turn requires the peer to re-join all the channels (i.e., as good as a fresh peer joining the network)",,denyeart,manish-sethi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18425,FAB-18429,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|i00wur:0idqxo9r",,,,Unset,,v2.x,,,,Unset,,,,,,,,,,,denyeart,manish-sethi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/21 11:57 PM;denyeart;We will leverage the new snapshot functionality along with ledger troubleshooting utilities mentioned in FAB-18425 and FAB-18429. The other suggestions could be added on top of that utility.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Range query on composite keys,FAB-10797,31271,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,yxuco,yxuco,22/Jun/18 12:10 AM,20/Aug/18 8:33 PM,28/Oct/23 3:03 AM,20/Aug/18 8:33 PM,,,,,,,,,,,,fabric-common,,,,,0,,,,,,,"Currently, the stub.GetStateByRange(startKey, endKey) works with simple keys only.
 
The following code in fabric/core/chaincode/shim/chaincode intentionally made it not to work with composite keys.  However, there are use cases that we need to query range of a partial composite key.  So, we should remove the restriction of simple-key from this method, or add another public method for GetStateByPartialCompositeKeyRange, so we can do range queries on composite keys.
 
// GetStateByRange documentation can be found in interfaces.go
func (stub *ChaincodeStub) GetStateByRange(startKey, endKey string) (StateQueryIteratorInterface, error) \{
    if startKey == """" \{
        startKey = emptyKeySubstitute
    }
    if err := validateSimpleKeys(startKey, endKey); err != nil \{
        return nil, err
    }
    collection := """"
    return stub.handleGetStateByRange(collection, startKey, endKey)
}",,yxuco,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11281,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzfsv:",,,,Unset,,,,,,Unset,,,,,,,,,,,yxuco,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clear appropriate caches on config update change or CC lifecycle change,FAB-10798,31272,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,troyronda,troyronda,22/Jun/18 12:12 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,,,,,,0,stale-item,,,,,,,,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzfrr:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"common/deliver package blocks waiting for new blocks to commit, but does not abort on connection closure",FAB-10799,31273,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,mlishok,mlishok,22/Jun/18 12:41 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,22/Jun/18 10:15 PM,v1.1.0,,,,,,,,v1.1.1,v1.2.0,,fabric-common,,,,,0,,,,,,,"1.1 event service does not seem to abort on connection closure.

Mainly affects misbehaving client connections but symptoms would be a block committed/delivered.. Clients connect, disconnect in the meantime.

 

next block delivered...then deliver service will try to deliver messages to all previous registrations.

 

2018-06-19 11:06:55.674 UTC [kvledger] CommitWithPvtData -> INFO 06e[0m Channel [testchannel]: Committed block [26] with 1 transaction(s)


[33m2018-06-19 11:07:02.163 UTC [common/deliver] deliverBlocks -> WARN 06f[0m [channel: testchannel] Error sending to 158.177.123.56:60888: rpc error: code = Unknown desc = the stream has been done
[33m2018-06-19 11:07:02.163 UTC [common/deliver] deliverBlocks -> WARN 070[0m [channel: testchannel] Error sending to 158.177.123.56:42716: rpc error: code = Unknown desc = the stream has been done
[33m2018-06-19 11:07:02.163 UTC [common/deliver] deliverBlocks -> WARN 071[0m [channel: testchannel] Error sending to 158.177.123.56:44342: rpc error: code = Unknown desc = the stream has been done
[33m2018-06-19 11:07:02.163 UTC [common/deliver] deliverBlocks -> WARN 072[0m [channel: testchannel] Error sending to 158.177.123.56:44360: rpc error: code = Unknown desc = the stream has been done
[33m2018-06-19 11:07:02.163 UTC [common/deliver] deliverBlocks -> WARN 073[0m [channel: testchannel] Error sending to 158.177.123.52:42468: rpc error: code = Unknown desc = the stream has been done
[33m2018-06-19 11:07:02.163 UTC [common/deliver] deliverBlocks -> WARN 074[0m [channel: testchannel] Error sending to 158.177.123.56:42732: rpc error: code = Unknown desc = the stream has been done
[33m2018-06-19 11:07:02.163 UTC [common/deliver] deliverBlocks -> WARN 075[0m [channel: testchannel] Error sending to 158.177.123.54:52536: rpc error: code = Unknown desc = the stream has been done
[33m2018-06-19 11:07:02.163 UTC [common/deliver] deliverBlocks -> WARN 076[0m [channel: testchannel] Error sending to 158.177.123.56:60898: rpc error: code = Unknown desc = the stream has been done

...... can be many thousands here.",,denyeart,jyellick,kchristidis,mlishok,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11094,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzft3:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,kchristidis,mlishok,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/18 1:52 AM;kchristidis;https://gerrit.hyperledger.org/r/c/23455;;;","22/Jun/18 2:24 AM;jyellick;In review 
https://gerrit.hyperledger.org/r/c/23459/ release-1.1
http://gerrit.hyperledger.org/r/c/23455/ master / v1.2;;;","22/Jun/18 6:10 PM;denyeart;Merged in master / v1.2.;;;",,,,,,,,,,,,,,,,,,,,,,,,
formatting and styling for existing shell artifacts,FAB-10801,31276,31199,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nagap,nagap,nagap,22/Jun/18 3:20 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,22/Jun/18 9:51 PM,,,,,,,,,v1.2.0,,,fabric-samples,,,,,0,,,,,,,,,denyeart,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzftr:",,,,,,,,,,,,,,,,,,,,,denyeart,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/18 9:51 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/23467/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix links in README,FAB-10802,31277,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,22/Jun/18 3:40 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,22/Jun/18 5:18 AM,v1.1.0,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,Documentation,,,,,,Some of the links in README.md are outdated in the master branch (release-1.1 branch was already fixed).,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzftz:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode invocations while chaincode is starting fail,FAB-10804,31279,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,jyellick,jyellick,22/Jun/18 5:39 AM,20/Sep/18 5:21 AM,28/Oct/23 3:03 AM,20/Sep/18 5:21 AM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,1,,,,,,,"There is odd behavior, persisted from v0.5/v0.6 in which, if a series of 3 transactions queries/invokes for a chaincode arrives, and the chaincode is not running, then, the first transaction starts the chaincode and the second and third transactions immediately fail.

This is unintuitive for a number of reasons, but also makes the life of application developers much harder, as they must handle errors which may be transient or not, depending on the state of the chaincode.

Thanks to the refactor done on the chaincode package, it is now a fairly simple thing to do, to change this behavior so that all callers wait for the chaincode container to start.",,denyeart,joe-alewine,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfuf:",,,,,,,,,,,,,,,,,,,,,denyeart,joe-alewine,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Sep/18 1:04 PM;denyeart;[~jyellick] Any update on this one?;;;","13/Sep/18 6:27 AM;sykesm; https://gerrit.hyperledger.org/r/26267;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"MemoryError during fabric-test behave tests, cut short the daily svt test run",FAB-10805,31281,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Duplicate,latitiah,scottz,scottz,22/Jun/18 6:55 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,13/Nov/18 1:08 AM,,,,,,,,,Future,,,fabric-quality,,,,,0,ci-failure,,,,,,"All OTE and LTE tests failed on latest stable build, June 21, build 58 [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-svt-x86_64/test_results_analyzer/.|https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-svt-x86_64/test_results_analyzer/]  Looking more closely, we see that there are NO results posted for behave tests in the orderer or peer feature files. Some run, but a MemoryError is seen in the full console logs which is the reason that Behave is not exiting cleanly and is not reporting the test results. [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-svt-x86_64/58/consoleFull].

 
 The very first error is

`Scenario Outline: -FAB-3857-: 1024 key/value pairs in Payloads of size 1048576 – @1.2`

The first failures are the ones that use very large payloads, and then every test after that fails (including all LTE and OTE tests): [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-svt-x86_64/test_results_analyzer/] . Search the full Console logs file for string ""MemoryError"" in JOB 58 = [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-svt-x86_64/58/]. *Is it possible that behave does not deallocate things between tests?*
 After each OTE test, OTE dumps out the ""df"" and ""free"" commands on the host, before tearing down the network. It does not indicate memory exhaustion, which is confusing.

`11:37:36 ====== $ df 
 11:37:36 Filesystem 1K-blocks Used Available Use% Mounted on

11:37:36 udev 8206896 0 8206896 0% /dev

11:37:36 tmpfs 1643244 34488 1608756 3% /run

11:37:36 /dev/vda1 40593708 18113028 22464296 45% /

11:37:36 tmpfs 8216208 0 8216208 0% /dev/shm

11:37:36 tmpfs 5120 0 5120 0% /run/lock

11:37:36 tmpfs 8216208 0 8216208 0% /sys/fs/cgroup

11:37:36 none 2097152 964504 1132648 46% /w

11:37:36 tmpfs 1643244 0 1643244 0% /run/user/1001

11:37:36 ====== $ free

11:37:36 total used free shared buff/cache available

11:37:36 Mem: 16432420 987760 10567004 999016 4877656 13956880

11:37:36 Swap: 0 0 0`

\{\{{{ }}}}

I was going to suggest trying some CI configuration we can do to allocate more memory, or to investigate if some things are not cleaned up between tests... Or maybe we are trying to store too many logs. But the data we have now seems to indicate that there is no problem with disk space or RAM, between the OTE tests, so we might want to collect more data at the time of (and leading up to) the failures.

It was suggested that this tutorial or something like it might help us profile what is going on, if we capture some host data DURING each behave test - hopefully upon error, or before tearing down the network, but that may be tricky because the behave tests abort abnormally; at a minimum, we should dump the memory usage data between tests.    [https://www.pluralsight.com/blog/tutorials/how-to-profile-memory-usage-in-python]. [~rameshthoomu]  says he can ssh into the host running a job in a sandbox to view the memory logs data, once we add something that will show us the memory usage on the host before and during each test.",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13825,FAB-11100,,,,,,,,FAB-11100,,,FAB-13825,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfun:",,,,,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,true,"01/Aug/18 3:23 AM;latitiah;Add memory usage information between test scenarios to help in debugging this issue: https://gerrit.hyperledger.org/r/24993;;;","01/Nov/18 10:32 PM;latitiah;This issue refers to 2 separate items: 
1. memory monitoring between tests (FAB-11100) and 
2. Exiting with false positives in test runs when behave crashes (FABCI-155)

I propose closing this issue since the other 2 issues are covering the concerns addressed here.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"Incorrect release version in cryptogen, configtxgen, configtxlator, idemixgen binaries",FAB-10807,31284,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,rameshthoomu,rameshthoomu,22/Jun/18 10:12 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,02/Dec/18 10:51 PM,v1.2.0,,,,,,,,v1.4.0,,,fabric-build,,,,,0,ci-failure,,,,,,"Observed hard coded release version in cryptogen, configtxgen, configtxlator, idemixgen binaries.

*common/tools/configtxlator/metadata/metadata.go*
{code:java}
// Package version
const Version = ""1.2.0""{code}
Remove the hard coded value and update with Base_Version value.",,denyeart,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyktr:",,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Sep/18 3:27 AM;denyeart;I've added this step to the release process doc, until it can be resolved.;;;","02/Dec/18 10:51 PM;mastersingh24;These are all set to 1.4 on the master branch.  We used to dynamically set this as part of the build until the introduction of using CommitSHA and hardcoding the Version.  I'm going to close this;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Add tendermint config section in orderer.yaml,FAB-10810,31287,28201,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,grapebaba,grapebaba,grapebaba,22/Jun/18 4:37 PM,25/Aug/19 11:39 PM,28/Oct/23 3:03 AM,25/Aug/19 11:39 PM,,,,,,,,,,,,fabric-orderer,,,,,0,,,,,,,"Since we include tendermint node in orderer node, we need capability to configure tendermint",,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfvj:",,,,,,,,,,,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca samples tests are broken on rc1 fabric docker images,FAB-10811,31288,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,smithbk,rameshthoomu,rameshthoomu,22/Jun/18 5:25 PM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,23/Jun/18 12:20 AM,,,,,,,,,v1.2.0,,,fabric-samples,,,,,0,ci-failure,,,,,,"Observed below error while executing fabric-ca samples tests on fabric rc1 docker images.

Use 1.2.0-rc1 dockerimages on latest fabric-samples repository.
{code:java}
##### 2018-06-22 04:14:40 Waiting for the 'setup' container to finish registering identities, creating the genesis block and other artifacts ..........................................................................................................................
##### 2018-06-22 04:16:41 FATAL: Failed waiting for the 'setup' container to finish registering identities, creating the genesis block and other artifacts (./data/logs/setup.successful not found); see ./data/logs/setup.log{code}
https://gist.github.com/rameshthoomu/2bcf06f87c7e331eb350e85ceba08ce9",,denyeart,rameshthoomu,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyktj:",,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/18 9:58 PM;smithbk;I don't see any errors in https://gist.github.com/rameshthoomu/2bcf06f87c7e331eb350e85ceba08ce9 but it is not complete.
The start.sh script waits 90 secs for setup to complete.  It looks like it is taking longer than that now for some reason,
so we probably just need to increase it.  Can you look at  ./data/logs/setup.log again to make sure there was no error
and that it completed?;;;","22/Jun/18 10:08 PM;smithbk;This is a real problem:

{code}
##### 2018-06-22 13:04:13 Generating orderer genesis block at /data/genesis.block
2018-06-22 13:04:13.881 UTC [common/tools/configtxgen] main -> WARN 001 Omitting the channel ID for configtxgen is deprecated.  Explicitly passing the channel ID will be required in the future, defaulting to 'testchain
2018-06-22 13:04:13.881 UTC [common/tools/configtxgen] main -> INFO 002 Loading configuration
2018-06-22 13:04:13.882 UTC [common/tools/configtxgen/localconfig] Load -> CRIT 003 Error reading configuration:  While parsing config: yaml: unknown anchor 'org0' referenced
2018-06-22 13:04:13.882 UTC [common/tools/configtxgen] func1 -> CRIT 004 Error reading configuration: While parsing config: yaml: unknown anchor 'org0' referenced
panic: Error reading configuration: While parsing config: yaml: unknown anchor 'org0' referenced [recovered]
	panic: Error reading configuration: While parsing config: yaml: unknown anchor 'org0' referenced

goroutine 1 [running]:
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panic(0xc4201a5e00, 0xc4201b52d0, 0x1, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:188 +0xbd
main.main.func1()
	/opt/gopath/src/github.com/hyperledger/fabric/common/tools/configtxgen/main.go:254 +0x1ae
panic(0xc6ed20, 0xc4201b52c0)
	/opt/go/src/runtime/panic.go:505 +0x229
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panic(0xc4201a5c50, 0xc4204a0b20, 0x2, 0x2)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:188 +0xbd
github.com/hyperledger/fabric/common/tools/configtxgen/localconfig.Load(0x7ffd1f6e48da, 0x12, 0x0, 0x0, 0x0, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/common/tools/configtxgen/localconfig/config.go:277 +0x469
main.main()
	/opt/gopath/src/github.com/hyperledger/fabric/common/tools/configtxgen/main.go:265 +0xce7
{code};;;","22/Jun/18 10:29 PM;smithbk;https://gerrit.hyperledger.org/r/23521 [FAB-10811] fabric-ca sample is broken on v1.2;;;","23/Jun/18 12:24 AM;denyeart;[https://gerrit.hyperledger.org/r/23521] merged in master.

[https://gerrit.hyperledger.org/r/#/c/23533/] merged in release-1.2 branch.;;;",,,,,,,,,,,,,,,,,,,,,,,
push multiarch manifests,FAB-10812,31291,31218,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,22/Jun/18 8:25 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,23/Jun/18 1:16 AM,v1.2.0,,,,,,,,,,,fabric-build,,,,,0,,,,,,,BASE_VERSION=1.2.0-rc1 scripts/multiarch.sh user password,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfvr:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jun/18 8:31 PM;ChristopherFerris;complete for fabric;;;","23/Jun/18 1:16 AM;ChristopherFerris;completed for baseimage and fabric-ca;;;",,,,,,,,,,,,,,,,,,,,,,,,,
remove javaenv from get-images.sh,FAB-10815,31301,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,22/Jun/18 11:42 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,29/Jun/18 9:03 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-build,,,,,0,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfwf:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ensure all release-1.2 doc links point to release-1.2,FAB-10816,31302,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,joe-alewine,denyeart,denyeart,23/Jun/18 12:15 AM,01/May/19 2:25 AM,28/Oct/23 3:03 AM,01/May/19 2:25 AM,,,,,,,,,Future,,,fabric-docs,,,,,0,,,,,,,"Docs for release-1.2 have been cut.

Need to ensure that all doc links within release-1.2 docs point to release-1.2.

For example on this page:

[https://hyperledger-fabric.readthedocs.io/en/release-1.2/upgrade_to_newest_version.html]

The following doc link points to latest instead of release-1.2:

If you want to learn more about capability requirements, click [here|http://hyperledger-fabric.readthedocs.io/en/latest/capability_requirements.html].

 

Need to scan all the doc topics and determine if there are other such examples to fix.

Fix needs to be cherry picked to release-1.2 and master branches.",,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwthb:",,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/May/19 2:25 AM;mastersingh24;too old;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Confusion around usage of term sideDB in the docs,FAB-10818,31306,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,pandrejko,pandrejko,23/Jun/18 1:29 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,25/Jun/18 9:45 PM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,documentation,,,,,,"Dave asked us not to use the term SideDB in the docs, but rather use the term 'private data'.

We have 1 reference to sideDB in the private data key concept, so that if someone searches on the term sidedb, they will be taken to the appropriate content.

 

However, Barry noticed that the search also returned a hit in the Introduction and was confused because there is no doc topic called SideDB.

 

I'd like to remove the reference to sideDB in the Introduction. This sentence:

 

Fabric is also working on two sets of features that are intended to improve upon its privacy and confidentiality capabilities, specifically: private data – a feature we call SideDB, and zero knowledge proofs (ZKP).

to

To improve upon its privacy and confidentiality capabilities, Fabric has added support for <link: private data> and is working on zero knowledge proofs (ZKP) available in the future.

 

 ",,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtef:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/18 1:40 AM;pandrejko;[https://gerrit.hyperledger.org/r/23545] (master)

[https://gerrit.hyperledger.org/r/#/c/23551/] (release-1.2)

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Error during build,FAB-10819,31308,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,ajayatgit,ajayatgit,23/Jun/18 2:04 AM,01/Dec/18 8:27 PM,28/Oct/23 3:03 AM,01/Dec/18 8:27 PM,,,,,,,,,Not a Bug,,,fabric-build,,,,,0,,,,,,,"I am trying to build fabric - tag -  *v1.2.0-rc1*.

During build I am facing following error 

{code}
ubuntu@ip-172-31-17-245:~/go/src/github.com/hyperledger/fabric$ make dist-clean all
.build/bin/peer
CGO_CFLAGS="" "" GOBIN=/home/ubuntu/go/src/github.com/hyperledger/fabric/.build/bin go install -tags """" -ldflags ""-X github.com/hyperledger/fabric/common/metadata.Version=1.2.0-rc1 -X github.com/hyperledger/fabric/common/metadata.CommitSHA=d242437 -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.4.8 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.Experimental=false"" github.com/hyperledger/fabric/peer
# archive/tar
/usr/local/go/src/archive/tar/stat_atim.go:14:36: statAtime redeclared in this block
        previous declaration at /usr/local/go/src/archive/tar/stat_actime1.go:14:36
/usr/local/go/src/archive/tar/stat_atim.go:18:36: statCtime redeclared in this block
        previous declaration at /usr/local/go/src/archive/tar/stat_actime1.go:18:36
Makefile:256: recipe for target '.build/bin/peer' failed
make: *** [.build/bin/peer] Error 2

{code}

I have followed the same process as mentioned at - https://hyperledger-fabric.readthedocs.io/en/release-1.2/dev-setup/devenv.html
and at - https://hyperledger-fabric.readthedocs.io/en/release-1.2/dev-setup/build.html
","Operating system - Ubuntu 16.04 LTS
Docker version - Docker version 18.05.0-ce, build f150324
Docker-compose version - docker-compose version 1.18.0, build 8dd22a9
Go-lang version - go version go1.10.1 linux/amd64",ajayatgit,divina10,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfxb:",,,,,,,,,,,,,,,,,,,,,ajayatgit,divina10,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jul/18 4:52 PM;mastersingh24;[~ajayatgit]  - I think there is an issue with your installation of Go (likely you somehow installed Go 1.10 and a prior version of Go in the same directory).   You should delete {{/usr/local/go}} and then reinstall Go 1.10.1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add a what's new section to the document,FAB-10820,31309,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,pandrejko,pandrejko,23/Jun/18 2:24 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,10/Jul/18 4:34 AM,,,,,,,,,Future,,,fabric-docs,,,,,0,,,,,,,Add a new what's new section to the documentation - possibly as a topic in the TOC immediately after the Introduction highlighting what we've delivered for this release and links to the content in the docs.,,bmos299,joe-alewine,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtjb:",,,,Unset,,,,,,Unset,,,,,,,,,,,bmos299,joe-alewine,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/18 3:16 AM;bmos299;Thanks Pam! This will be really helpful. ;;;","28/Jun/18 5:51 AM;pandrejko;*Summary of new features in v1.2:*

Private Data Collections - Keep chaincode data confidential among a subset of channel members.
[https://hyperledger-fabric.readthedocs.io/en/release-1.2/private-data/private-data.html]

Access control for peer functions - Configure which client identities can interact with peer functions, per channel.
[https://hyperledger-fabric.readthedocs.io/en/release-1.2/access_control.html]

Pluggable endorsement and validation - Utilize pluggable endorsement and validation logic per chaincode.
[https://hyperledger-fabric.readthedocs.io/en/release-1.2/pluggable_endorsement_and_validation.html]

Service Discovery - Discover network services dynamically, including orderers, peers, chaincode, and endorsement policies, to simplify client applications.
[https://hyperledger-fabric.readthedocs.io/en/release-1.2/discovery-overview.html]

New Tutorials for Private Data, and for using CouchDB as a JSON document store state database.
[https://hyperledger-fabric.readthedocs.io/en/release-1.2/private_data_tutorial.html]
[https://hyperledger-fabric.readthedocs.io/en/release-1.2/couchdb_tutorial.html]

Fabric CA - Query certificates based on various filter criteria.
[https://hyperledger-fabric-ca.readthedocs.io/en/latest/users-guide.html#manage-certificates]

Hygiene items - Ginkgo-based integration tests have been added, and component code has been refactored for improved readability and maintainability.

To upgrade to version v1.2, refer to upgrade documentation: [https://hyperledger-fabric.readthedocs.io/en/release-1.2/upgrade_to_newest_version.html]

See the v1.2.0 release notes for more details:
[https://github.com/hyperledger/fabric/releases/tag/v1.2.0-rc1]
[https://github.com/hyperledger/fabric-ca/releases/tag/v1.2.0-rc1]

Contact us via the [Hyperledger Fabric mail list|https://lists.hyperledger.org/g/fabric] ( [https://lists.hyperledger.org/g/fabric] ) or [+{color:#0000ff}RocketChat{color}+ |https://urldefense.proofpoint.com/v2/url?u=https-3A__chat.hyperledger.org_&d=DwMFaQ&c=jf_iaSHvJObTbx-siA1ZOg&r=FWiwMUSIAq7Ii1KJX8rdZWEsrplZzcrGwWreBa-fmbA&m=qPeNQrpCPzBgbnCmseD4VjevOrOtI7VgslVn_FXA034&s=GPxbC_Av7tdRlgtGLgwj9KbYTXJokZwTXNOwlYHitGY&e=]( [+{color:#0000ff}https://chat.hyperledger.org/{color}+|https://urldefense.proofpoint.com/v2/url?u=https-3A__chat.hyperledger.org_&d=DwMFaQ&c=jf_iaSHvJObTbx-siA1ZOg&r=FWiwMUSIAq7Ii1KJX8rdZWEsrplZzcrGwWreBa-fmbA&m=qPeNQrpCPzBgbnCmseD4VjevOrOtI7VgslVn_FXA034&s=GPxbC_Av7tdRlgtGLgwj9KbYTXJokZwTXNOwlYHitGY&e=] ) should you have any feedback or questions.;;;","10/Jul/18 12:55 AM;joe-alewine;https://gerrit.hyperledger.org/r/c/24247;;;",,,,,,,,,,,,,,,,,,,,,,,,
Platforms packages packages hygiene items,FAB-10822,31311,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:31 AM,26/Jul/18 12:41 PM,28/Oct/23 3:03 AM,26/Jul/18 12:41 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,"The core/chaincode/platforms package has been constructed with a number of go anti-patterns and has not generally maintained.

Most obviously, the platforms package uses package level accessors, and holds package level state.  As a consequence it hides many dependencies in a latent fashion, and seemingly innocent calls like {{utils.GetChaincodeDeploymentSpec}} which would seem likely to only unmarshal the protobuf, actually end up performing signficant other validation dependent on the platforms in the system.

Secondly, the platforms packages all depend on legacy v0.5/v0.6 protobufs to pass state around.  These protobufs are often partially populated, or contain many more fields than the assorted platform functions need.  This is a barrier to refactoring code or inroducing new data structure (such as the ones needed for the new lifecycle) and so references to the chaincode protobufs should be removed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11237,,,,,,,,,"1|hzzfxr:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor core/chaincode/platforms to be instance based,FAB-10823,31312,31311,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:32 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,03/Jul/18 2:25 AM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,"The platforms package currently exposes itself through a number of
package scoped functions rather than via an instance which implements
those methods.  This CR takes the first step to remove the package
scoped functions by adding a temporary singleton to keep the tests
working, and having the external callers instantiate an instance.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfxz:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add ginkgo tests for platformsT,FAB-10824,31313,31311,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:35 AM,26/Jul/18 12:40 PM,28/Oct/23 3:03 AM,26/Jul/18 12:40 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,"The old platforms unit test is very integration test style.

It should be removed in favor of a proper unit test using ginkgo.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfy7:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make platform latent dependency explicit,FAB-10825,31314,31311,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:36 AM,26/Jul/18 12:40 PM,28/Oct/23 3:03 AM,26/Jul/18 12:40 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,"Many of the assorted 'utils' functions actually reach into the
core/chaincode/platforms package to determine whether packages are
valid.  This historically has all been done in a source-coupled way,
pulling peer details into places it does not belong.  Although these
'util' functions should be refactored and removed, for the time being,
we can at least make the dependency on the platforms package explicit,
but requiring that an instance be passed into these util functions.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfyf:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change ValidateSpec to ValidatePath,FAB-10826,31315,31311,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:37 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,13/Jul/18 9:38 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,"The 'ValidateSpec' function in the platforms package only ever uses the 'path' portion of the chaincode spec.  Therefore, we can reduce the complexity of the interface by simply taking in a string instead.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfyn:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove needless file writes from node platform test,FAB-10827,31316,31311,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:38 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,13/Jul/18 9:38 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,"The node platform test currently creates a temporary file, writes to it, reads it back, and uses what is read.  There is no need/purpose to having the test do this file IO so it should be removed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfyv:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
ValidateDeploymentSpec only validates the code package,FAB-10828,31317,31311,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:39 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,13/Jul/18 9:37 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,The platforms ValidateDeploymentSpec function actually only ever references the codepackage.  The API can be simplified and decoupled from the protos by making this explicit.,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfz3:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove unused java platform hash function,FAB-10829,31318,31311,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:40 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,13/Jul/18 9:37 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,There is unused code in the java chaincode platform for computing a hash which is then subsequently ignored.  Maintaining pointless code is bad and we should remove it.,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfzb:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetDeploymentPackage only uses string,FAB-10830,31319,31311,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:40 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,13/Jul/18 9:36 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,"The GetDeploymentPackage function only references the path from the chaincode spec, so we can decouple it from the protos and simplify the interface by making this explicit.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfzj:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove unused GenerateDockerfile parameter,FAB-10831,31320,31311,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:41 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,13/Jul/18 9:47 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfzr:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
GenerateDockerBuild only requires a path and bytes,FAB-10832,31321,31311,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:41 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,13/Jul/18 9:50 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzfzz:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup ccmetadata package,FAB-10833,31322,31311,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:42 AM,26/Jul/18 12:41 PM,28/Oct/23 3:03 AM,26/Jul/18 12:41 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg07:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetMetadataParameter remove depspec dependency,FAB-10834,31323,31311,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:42 AM,26/Jul/18 12:41 PM,28/Oct/23 3:03 AM,26/Jul/18 12:41 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg0f:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove chaincodespec from platforms,FAB-10835,31324,31311,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jun/18 2:42 AM,26/Jul/18 12:41 PM,28/Oct/23 3:03 AM,26/Jul/18 12:41 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,hygiene,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg0n:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
"1.2.0-RC1 add this reference under ""releases"" section",FAB-10836,31326,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,nagap,nagap,23/Jun/18 3:48 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,30/Jun/18 11:20 PM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,Documentation,,,,,,"Looking at the main github fabric page at

[https://github.com/hyperledger/fabric]

Need to update with 1.2.0-RC1 information (as well as other recent releases).

This page needs to be edited in master and release-1.2:

https://github.com/hyperledger/fabric/blob/master/README.md",,denyeart,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jun/18 3:47 AM;nagap;scree capture 2018-06-22 at 2.47.00 PM.png;https://jira.hyperledger.org/secure/attachment/15161/scree+capture+2018-06-22+at+2.47.00+PM.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwthz:",,,,,,,,,,,,,,,,,,,,,denyeart,nagap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jun/18 11:53 PM;denyeart;[https://gerrit.hyperledger.org/r/#/c/23601/] (master)

[https://gerrit.hyperledger.org/r/#/c/23603/] (release-1.2);;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix links to git on releases page,FAB-10837,31327,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,pandrejko,pandrejko,23/Jun/18 4:22 AM,21/Jul/18 3:49 AM,28/Oct/23 3:03 AM,25/Jun/18 9:47 PM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,,,,,,,"[https://hyperledger-fabric.readthedocs.io/en/master/releases.html]

 ",,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzg13:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/18 4:25 AM;pandrejko;[https://gerrit.hyperledger.org/r/23561] (master)

[https://gerrit.hyperledger.org/r/#/c/23563/] (release-1.2);;;",,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test pte daily test failed once: EXTRA transaction delivered,FAB-10840,31330,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,scottz,scottz,23/Jun/18 7:22 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,03/Oct/18 3:29 AM,,,,,,,,,,,,fabric-orderer,,,,,0,ci-failure,,,,,,"The testcase sends a total of 20000 transactions (10,000 in each of 2 threads), but we see that an extra transaction is delivered. This is the first time seen during a PTE test, but we have seen this a few times during OTE tests, the latest incident being https://jira.hyperledger.org/browse/FAB-10550 - which send transactions through the orderers without any peers in the network - so we can say the problem is in the ordering system somewhere.

No nodes were restarted during this test.

Job 17 report from June 22 shows the failure.
 [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-pte-x86_64/17/testReport/systest_pte/Perf_Stress_CouchDB/test_FAB3833_2i_FAB3810_2q/]

Here is the Peer Log Data Summary Report, which shows that we received 20001 transactions delivered (to a peer in both orgs in the channel).

 

Note the script that counts the transactions in the PTE test is: 

fabric-test/tools/PTE/CITest/scripts/get_peerStats.sh

 

 

Peer Log Data Summary Report

Peer: peer0.org1.example.com
 Channel: all, start time: 03:03:13:729, end time: 03:09:38:878, total time: 385149 ms
 Channel: all, blk Num: 212, BPS: 0.55
 Channel: all, tx Num: 20001, TPS: 51.93


Peer: peer0.org1.example.com
 Channel: testorgschannel1, start time: 03:03:13:729, end time: 03:09:38:878, total time: 385149 ms
 Channel: testorgschannel1, blk Num: 212, BPS: 0.55
 Channel: testorgschannel1, tx Num: 20001, TPS: 51.93


Peer: peer0.org2.example.com
 Channel: all, start time: 03:03:13:681, end time: 03:09:38:878, total time: 385197 ms
 Channel: all, blk Num: 212, BPS: 0.55
 Channel: all, tx Num: 20001, TPS: 51.92


Peer: peer0.org2.example.com
 Channel: testorgschannel1, start time: 03:03:13:681, end time: 03:09:38:878, total time: 385197 ms
 Channel: testorgschannel1, blk Num: 212, BPS: 0.55
 Channel: testorgschannel1, tx Num: 20001, TPS: 51.92

 


[PTE 0 main]: Test Summary[0]: [Nid:chan:org:id=0:testorgschannel1:org1:0 invoke_query_const] pte-exec:completed 10000 transaction INVOKE(QUERY) in 195803 ms, timestamp: start 1529637125617 end 1529637321420,Throughput=51.07 TPS

[PTE 0 main]: Test Summary (sample_cc_ch1):Total QUERY transaction=10000, the Min duration is 195803 ms,the Max duration is 195803 ms,Avg duration=195803 ms, total throughput=51.07 TPS

[PTE 0 main]: Aggregate Test Summary (sample_cc_ch1):Total QUERY transaction 10000, start 1529637125617 end 1529637321420 duration is 195803 ms, TPS 51.07

[PTE 1 main]: Test Summary[0]: [Nid:chan:org:id=0:testorgschannel1:org2:0 invoke_query_const] pte-exec:completed 10000 transaction INVOKE(QUERY) in 197457 ms, timestamp: start 1529637125597 end 1529637323054,Throughput=50.64 TPS

[PTE 1 main]: Test Summary (sample_cc_ch1):Total QUERY transaction=10000, the Min duration is 197457 ms,the Max duration is 197457 ms,Avg duration=197457 ms, total throughput=50.64 TPS

[PTE 1 main]: Aggregate Test Summary (sample_cc_ch1):Total QUERY transaction 10000, start 1529637125597 end 1529637323054 duration is 197457 ms, TPS 50.64

 ","This test was run as part of a CI jenkins job, the daily SVT PTE job. The network configuration data is:

 

[./test_nl.sh] bring up network

number of orderers: 3

number of CA: 2

number of organizations: 2

number of peers: 2

number of kafka: 4

number of zookeeper: 3

number of channels: 1

orderer service type: kafka

PROFILE_STRING: test

HostIP1: localhost

TLSEnabled: enabled

ledger state database type: couchdb

batchTimeOut: 2s

coreLogLevel: INFO

batchSize: 500

TLSEnabled enabled, MutualTLSEnabled disabled",denyeart,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10550,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg1r:",,,,,,,,,,,,,,,,,,,,,denyeart,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/18 10:14 PM;scottz;[~dongming] : Does PTE print a log when a transaction event is received which is a duplicate? Or print a log if it is unknown? If it is easy to get those logs, then that is probably the easiest way to debug this to identify the extra transaction. We say this problem with OTE too, but very rarely, and we would have to implement something very similar to how PTE catalogs and checks off events from a complete list. We will probably also need to turn up and examine all the orderer logs and maybe the kafka logs... but let's try to get some info from the PTE first.;;;","27/Jun/18 12:47 AM;dongming;[~scottz] PTE listens to every event port associated with every peer that the tx is sent to. For example, if the same tx is sent to two peers, then PTE will receive two event for the same tx.  When PTE receives an event, PTE will delete it from the list.  If the event does not exist in the list, PTE just silents.;;;","18/Aug/18 2:15 AM;scottz;Another test failed for same reason; we counted an extra transaction delivered:

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-pte-release-1.2-x86_64/8/testReport/junit/systest_pte/Perf_Stress_CouchDB/test_FAB3832_4i_FAB3834_4q/;;;","18/Aug/18 5:33 AM;dongming;Executed FAB-3832-4i.sh and FAB-3833-2i.sh on vLaunch two time each and cannot reproduce the error of one extra transaction.;;;","21/Aug/18 8:20 PM;denyeart;[~dongming] [~scottz] Ok, I will return the defect, please re-open if you can reproduce in the future.;;;",,,,,,,,,,,,,,,,,,,,,,
Error: unknown flag --peerAddress  and Error: unknown flag: --tlsRootCertFiles,FAB-10841,31332,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,fedez,fedez,23/Jun/18 10:05 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:05 PM,,,,,,,,,,,,fabric-peer,,,,,0,,,,,,,"Many flags are missing in the Chaincode installation proposed by Hyperledger Fabric to Build Your First Network

 

Usage:

  peer chaincode install [flags]

Flags:

  -c, --ctor string      Constructor message for the chaincode in JSON format (default ""\{}"")

  -l, --lang string      Language the chaincode is written in (default ""golang"")

  -n, --name string      Name of the chaincode

  -p, --path string      Path to chaincode

  -v, --version string   Version of the chaincode specified in install/instantiate/upgrade commands

 

Global Flags:

      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint

      --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint

      --clientauth                          Use mutual TLS when communicating with the orderer endpoint

      --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint

      --logging-level string                Default logging level and overrides, see core.yaml for full syntax

  -o, --orderer string                      Ordering service endpoint

      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.

      --tls                                 Use TLS when communicating with the orderer endpoint

      --transient string                    Transient map of arguments in JSON encoding

 

Usage:

  peer chaincode invoke[flags]

Flags:

  -C, --channelID string   The channel on which this command should be executed

  -c, --ctor string        Constructor message for the chaincode in JSON format (default ""\{}"")

  -n, --name string        Name of the chaincode

 

Global Flags:

      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint

      --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint

      --clientauth                          Use mutual TLS when communicating with the orderer endpoint

      --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint

      --logging-level string                Default logging level and overrides, see core.yaml for full syntax

  -o, --orderer string                      Ordering service endpoint

      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.

      --tls                                 Use TLS when communicating with the orderer endpoint

      --transient string                    Transient map of arguments in JSON encoding

  -v, --version                             Display current version of fabric peer server

 

Usage:

  peer chaincode instantiate [flags]

Flags:

  -C, --channelID string            The channel on which this command should be executed

      --collections-config string   The file containing the configuration for the chaincode's collection

  -c, --ctor string                 Constructor message for the chaincode in JSON format (default ""\{}"")

  -E, --escc string                 The name of the endorsement system chaincode to be used for this chaincode

  -l, --lang string                 Language the chaincode is written in (default ""golang"")

  -n, --name string                 Name of the chaincode

  -P, --policy string               The endorsement policy associated to this chaincode

  -v, --version string              Version of the chaincode specified in install/instantiate/upgrade commands

  -V, --vscc string                 The name of the verification system chaincode to be used for this chaincode

 

Global Flags:

      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint

      --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint

      --clientauth                          Use mutual TLS when communicating with the orderer endpoint

      --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint

      --logging-level string                Default logging level and overrides, see core.yaml for full syntax

  -o, --orderer string                      Ordering service endpoint

      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.

      --tls                                 Use TLS when communicating with the orderer endpoint

      --transient string                    Transient map of arguments in JSON encoding

 ",MacOS,fedez,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10771,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg1z:",,,,,,,,,,,,,,,,,,,,,fedez,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jun/18 11:04 PM;wlahti;Can you provide more details regarding the error you're seeing, what you're doing when you see this error, and which version of Fabric/BYFN you're using? ;;;","28/Jun/18 1:37 AM;wlahti;Perhaps you ran into the same issue reported by FAB-10771. That user was performing commands in the latest documentation, which uses the --peerAddresses and --tlsRootCertFiles flags introduced in v1.2,  but running them against Fabric v1.1 peers. When using v1.1 images, be sure to follow: [https://hyperledger-fabric.readthedocs.io/en/release-1.1/], which is the documentation that loads by default when you go to https://hyperledger-fabric.readthedocs.io/.;;;","02/Jul/18 9:59 PM;fedez;Thank you Will,

Indeed it was about the version I was using v1.1 as well as some minor differences I found. 

I solved this issue by repeating the terminal commands that run automatically in the simplified tutorial ( running command:  ./byfn.sh up). The main difference are:
 # in the Policy, use OR to make it work.
 # Install chiancode to all peers and join them all to the channel.
 # run: peer chaincode invoke -o orderer.example.com:7050 -C mychannel -n mycc -c '\{""Args"":[""invoke"",""a"",""b"",""10""]}'

 # run: 
peer chaincode query -C mychannel -n mycc -c '\{""Args"":[""query"",""a""]}’

This will get the right value of 90 for A;;;",,,,,,,,,,,,,,,,,,,,,,,,
Trying to deploy bna using Rancher Docker platform,FAB-10842,31334,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,TBigjohn,TBigjohn,25/Jun/18 3:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,28/Jun/18 2:49 PM,,,,,,,,,,,,,,,,,0,,,,,,,"Managing docker containers with Rancher
 I have on my Hyperledger infra one Peer, one orderer, one cli et one ca.
 Those 4 containers can communicate with each other because they are on network mode Managed.
 I can create a channel successfully.

Composer network install works fine.

Everything is ok until composer start network command.
 When start command is launched, a new docker container is created on the host under the name dev-nameofthepeer
 In the log of this new container I get th following error:
 ERROR] lib/handler.js - Chat stream with peer - on error: ""Error: 14 UNAVAILABLE: Name resolution failure\n

I think the issue is on the network side because, on the rancher console the new container is created with the network type host .... all previously created containers received an ip address form the rancher infra.

I already tryed to insert an npmrcfile in my composer start network command including :
 registry=[http://registry.npmjs.org|http://registry.npmjs.org/]

but still same error

Host to deploy is running on ubuntu 16.04 server.
 Composer v0.19.6 running on ubuntu 16.04 client.

I tried with all containers on network mode ""host"" but that way, impossible to create the channel, containers cannot communicate with each other ...

What I need to know is how to have the container created by composer created with the network node managed ... how to pass this parameter ?

Ref : [https://github.com/hyperledger/composer/issues/4129]

Ref : [rancher/rancher#14016|https://github.com/rancher/rancher/issues/14016]

Thanks

 

 ",,TBigjohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg2f:",,,,,,,,,,,,,,,,,,,,,TBigjohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/18 10:11 PM;TBigjohn;Fixed Issue can be closed, networking issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Misconfiguration of peer validation plugin causes state fork upon upgrade to v1.2,FAB-10843,31335,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,denyeart,denyeart,25/Jun/18 11:53 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,25/Jun/18 7:25 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,must-fix,,,,,,"Misconfiguration of peer validation plugin will cause a transaction to get invalidated on the peer that has the misconfiguration.  This results in a state fork on the misconfigured peer.  Instead of an invalidation resulting in state fork, misconfigurations should result in a block processing error that would require an administrator to fix the peer configuration.  After the misconfiguration is fixed and peer is restarted, the transaction in question should get processed successfully and validated.

One such instance of this problem is a missing ""validators"" section in core.yaml.  In v1.1 there was no ""validators"" section.  Therefore if a peer is upgraded to v1.2 and the peer administrator forgets to add a ""validators"" section, the next transactions processed after peer restart will get invalidated causing state fork.  This misconfiguration should be detected and cause an error upon peer processing a transaction after upgrade, so that the peer administrator can identify and resolve the misconfiguration without a state fork.

The documentation section ""*Validation plugin consistency across peers*"" does mention that correct configuration is the responsibility of the peer administrator, but still the peer should protect against state forks in such misconfiguration scenarios and return an error rather than a transaction invalidation. This is especially important given the likelihood of missing ""validators"" section when upgrading from v1.1 to v1.2 (""validators"" section is included in default core.yaml that ships with v1.2, but in some deployments the administrator may not apply the new default core.yaml).",,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8729,,,,,,,,,"1|hzwtlj:",,,,,,,,,,,,,,,,,,,,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jun/18 11:58 AM;denyeart;I've tagged as v1.2 'must-fix' as this could cause problems during upgrade to v1.2.

[~yacovm] Could you provide your opinion?;;;","25/Jun/18 4:09 PM;yacovm;Yeah, that's a horrible bug... Nice catch and thanks. 
https://gerrit.hyperledger.org/r/#/c/23591/

https://gerrit.hyperledger.org/r/#/c/23593/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
More flexibility with the PTE sampleCC application,FAB-10844,31339,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,dinotone,dinotone,25/Jun/18 9:35 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,fabric-tools,,,,,0,quality,stale-item,,,,,"Desire to run perf measurements of sampCC chaincode, scaling the # of KV reads/writes. This will provide more sample performance profiles that our customers can utilize to better size their needs. Also potentially expose some scaling issues within fabric. ",,dinotone,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzg2v:",,,,Unset,,,,,,Unset,,,,,,,,,,,dinotone,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
v1.2 - run PTE with service discovery feature,FAB-10846,31346,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,suryalnvs,nileshdeotale,nileshdeotale,26/Jun/18 1:03 AM,30/Jul/19 11:42 AM,28/Oct/23 3:03 AM,30/Jul/19 11:42 AM,,,,,,,,,,,,fabric-quality,,,,,0,Quality,SystemTestcase,,,,,"# Setup 2 networks with multiple orgs (org1, org2, org3, org4) and with multiple peers (4 peers in each org) then scale it to say 10 networks
 # Setup PTE environment with service discovery support
 # Configure PTE files to point to networks created in #1.
 # Run PTE and note any errors and TPS",,mastersingh24,nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,,,,,,,"1|hzzg3j:",,,,,,,,,,,,,,,,,,,,,mastersingh24,nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"The ""Peer Create Channel"" --timeout value in v1.2 requires a unit such as ""10s"". Previous versions required an int such as ""10"". ",FAB-10847,31347,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,tonym1,tonym1,26/Jun/18 1:49 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,27/Jun/18 1:22 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,,,,,,,"This command works with fabric 1.1.0 but fails in fabric 1.2:
docker exec $ENVS cli peer channel create -o orderer0:7050 -t 10 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx
The error message for this is ""Error: invalid argument ""10"" for ""-t, --timeout"" flag: time: missing unit in duration 10""

 ",,tonym1,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg3r:",,,,,,,,,,,,,,,,,,,,,tonym1,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/18 1:32 AM;wlahti;Correct, this change was made for consistency with the other timeouts in the codebase. 

Is this a command that you wrote for your own use or is it in a sample / doc?;;;","27/Jun/18 1:50 AM;tonym1;Per your question... This command is one we wrote for our application. Please note that the 1.2 docs still say that the --timeout is an int.;;;","27/Jun/18 1:54 AM;wlahti;[~tonym1] Thanks for catching this. I forgot to update the docs when I made that change.

release-1.2 branch doc fix: [https://gerrit.hyperledger.org/r/c/23667/]

master branch doc fix: [https://gerrit.hyperledger.org/r/c/23665];;;",,,,,,,,,,,,,,,,,,,,,,,,
PTE adds frequency option for service discovery requests,FAB-10850,31352,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,26/Jun/18 3:36 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,19/Jul/18 3:49 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"PTE adds frequency option for multiple requests of the service discovery initializiation/refresh.

This is not an invoke, but rather an API call to trigger the discovery functionality in the fabric peers, in order to get a response with a new layout of peers. Therefore we may use discoveryOpt, which is a different implementation in PTE code than the transMode option which is used for controlling the frequency of invokes.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzg4f:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"12/Jul/18 2:58 AM;dongming;https://gerrit.hyperledger.org/r/#/c/24323/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Serviceability - Monitor health for Fabric runtime components,FAB-10851,31353,,Epic,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,G-DazWilkin,G-DazWilkin,26/Jun/18 4:08 AM,22/Jun/19 5:55 AM,28/Oct/23 3:03 AM,22/Jun/19 5:46 AM,,,,,,,,,v1.4.0,v2.0.0,,,,,,,1,Debug,Deployment,gRPC,Kubernetes,operations,serviceability,"As a platform operator, I want to be able to determine if a peer is healthy by hitting an http(s) endpoint on a configurable port.

*Background / Details*

As is often the case with distributed software, a running process and a healthy process aren't the same thing. To help users and operators identify the walking dead, we need to implement a simple healthcheck that can be regularly exercised by automation. In the spirit of modern, container based deployments, this healthcheck should also be usable as a liveness check in
 orchestration systems like Kubernetes without requiring additional infrastructure.

To prevent dragging bunch of unnecessary complexity, the healthcheck should be implemented as a basic http or https endpoint at /healthz. When the peer is healthy, it will return with a status of `HTTP 200/OK` and JSON payload of
h3. {""status"": ""OK""}

. If the peer is responsive to the status check, but unhealthy, it will return with a staus of `HTTP 503/Service Unavailable` and a JSON message that indicates which subsystem has failed the health check.

The implementation should be structured such that checks can be wired in as implemented. Each healthcheck will implement a `HealthChecker` interface and will be added to a map of component name to check(s).
{code:java}
type HealthChecker interface {
    HealthCheck() (message string, ok bool)
}
{code}
Note: While we can implement gRPC based healtchecks by using the gRPC Health Checking protocol, it requires us to use a separate program to drive the checks. While the grpc-ecosystem provides a go impelemntation, using it requires us to embed it in our containers and configure it with the correct TLS information. This is a higher barrier to entry than required and is specific to gRPC services.

 

*Documentation overview*

The operations REST service provides a {{/healthz}} resource that operators can use to help determine the liveness and health of peers and orderers. The resource is a conventional REST resource that supports GET requests. The implementation is intended to be compatible with the liveness probe model used by Kubernetes but can be used in other contexts.

 

*Original Background*

Fabric's use of gRPC is excellent. A limitation of gRPC is that we're without our customary toolkit (e.g. curl) when working with it.

As I begin to develop an understanding of Fabric, when services fail or don't work, I'm struggling to diagnose. It would be helpful to have something beyond ping and that doesn't require auth and other config to get some health signal back from each of the component services.

I'm attempting to developer a Helm Chart for Fabric and so deployment is complicated by multiple machines (DNS names) etc. It would be helpful during this deployment to be able to confirm serices are alive against DNS names and working correctly.

Lastly, during deployment (on Kubernetes), it's necessary to monitor component state before proceeding with deployments, establish peers, joining channels, deploying chaincode etc. It would be useful to be able to predicate steps. The solution that I'm building upon, uses a shared file system and checkpoint files (e.g. org1peer_created) to orchestrate its deployment, it seems preferable to be able to make a healthcheck call against the peer.",,G-DazWilkin,latitiah,MichaelWang,mrshah-ibm,osmola,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"Liveness and docker check in v1.4. gRPC, CouchDB, Kafka, CA health checks in v1.4.1 and v2.0.",See first comment below.,Reviewed,Unset,Done,,,Serviceability - Monitor health for Fabric runtime components,To Do,,,Done,,,,"1|hzzg4n:",,,,No,Not Required,,,,,Unset,,,,,"Function Tests:

- FAB-12358: Peer health checks
* On a healthy peer, hit the health check endpoint and verify a 200 status code for the response.
* Cause a situation that makes the peer unhealthy (e.g., stop the docker daemon used by the peer) and hit the health check endpoint. Verify a non-200 response code that includes a JSON payload indicating which check failed.

- FAB-12359: Orderer health checks
* On a healthy orderer, hit the health check endpoint and verify a 200 status code for the response.
* Cause a situation that makes the orderer unhealthy (e.g. stop kafka) and hit the health check endpoint. Verify a non-200 response code that includes a JSON payload indicating which check failed.

- FABC-743: CA health checks (containment TBD)",,,,,,G-DazWilkin,latitiah,MichaelWang,mrshah-ibm,osmola,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/18 12:25 AM;sykesm;This is my independently crafted version:

As a platform operator, I want to be able to determine if a peer is healthy by hitting an http(s) endpoint on a configurable port.

*Background / Details*

As is often the case with distributed software, a running process and a healthy process aren't the same thing. To help users and operators identify the walking dead, we need to implement a simple healthcheck that can be regularly exercised by automation. In the spirit of modern, container based deployments, this healthcheck should also be usable as a liveness check in
orchestration systems like Kubernetes without requiring additional infrastructure.

To prevent dragging bunch of unnecessary complexity, the healthcheck should be implemented as a basic http or https endpoint at /healthz. When the peer is healthy, it will return with a status of `HTTP 200/OK` and JSON payload of {""status"": ""OK""}. If the peer is responsive to the status check, but unhealthy, it will return with a staus of `HTTP 503/Service Unavailable` and a JSON message that indicates which subsystem has failed the health check.

The implementation should be structured such that checks can be wired in as implemented. Each healthcheck will implement a `HealthChecker` interface and will be added to a map of component name to check(s).

{code}
type HealthChecker interface {
    HealthCheck() (message string, ok bool)
}
{code}

Note: While we can implement gRPC based healtchecks by using the gRPC Health Checking protocol, it requires us to use a separate program to drive the checks. While the grpc-ecosystem provides a go impelemntation, using it requires us to embed it in our containers and configure it with the correct TLS information. This is a higher barrier to entry than required and is specific to gRPC services.;;;","31/Oct/18 10:19 PM;latitiah;This epic still needs a test plan summary associated with it. Here is a quick guide for what the summary should contain. Thanks!
{code}
Functional Tests:
 - FAB-XXX1: Make sure config is accepted and turns on feature (Integration) - PersonA
 - FAB-XXX2: What happens when config is set wrong (unit) - PersonA
 - FAB-XXX3: When FeatureX is turned on in both ComponentA and ComponentB (End-to-end) - PersonB
 - FAB-XXX4: When FeatureX is turned on in ComponentA and not ComponentB (End-to-end) - PersonA

System Tests:
 - FAB-XXX5: How is performace impacted when sending 5 packets per second for 3 hours? - PersonC
   * Be sure to set the following config values on ComponentA as such:
     - FEATUREX=true
     - FEATURE_PATH=/some/path/for/my/feature
   * Be sure to send the messages using the foo SDK
 - FAB-XXX6: Is the feature and component stable when executing 10 packets per second for 1 week? - PersonC
   * Be sure to set the following config values on ComponentA as such:
     - FEATUREX=true
     - FEATURE_PATH=/some/path/for/my/feature
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,
Optimized Docker Images,FAB-10852,31354,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,G-DazWilkin,G-DazWilkin,26/Jun/18 4:19 AM,22/Sep/19 5:25 PM,28/Oct/23 3:03 AM,20/Sep/19 8:01 PM,,,,,,,,,,,,,,,,,0,,,,,,,"Docker images associated with Fabric are VERY large >1GB.

In a scenario where these images aren't cached|cacheable pulling the set is a substantial volume of bandwidth. In environments where Fabric is deployed to ephemeral machines or a dynamically scaling environment, moving these images around is impeded by their size. The broader surface of functionality additionally broadens the attack|vulnerability surface.

The base is Ubuntu and image have a JVM added. IIUC not all the images require this broad set of OS|application functionality; the pure Golang components could be statically built, combined with a minimal init and delivered as 2 process images.
h3. Propose
 * Consider reducing the base image – ideally to scratch or perhaps Google's distroless
 * Add minimal additional runtimes e.g. JVM only to images that require it
 * Consider busybox as a self-contained and minimal toolset for debugging variants",,G-DazWilkin,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABB-123,FAB-11096,FAB-14640,FAB-14719,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzg4v:",,,,Unset,,,,,,Unset,,,,,,,,,,,G-DazWilkin,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Sep/19 8:00 PM;mastersingh24;[~G-DazWilkin]

For 2.0.0 and beyond we have already moved to Alpine.
We also separated the various CC build environments as well to reduce the image sizes.
We also moved the 3rd party images (CouchDB, Kafka and ZK) to Debian Stretch as well.

I'm going to mark this is done.;;;","20/Sep/19 8:01 PM;mastersingh24;see linked issues;;;","22/Sep/19 5:25 PM;mastersingh24;[~G-DazWilkin]  I should also mention that it's possible to set your own images for both building and running chaincode.  These are all configurable in core.yaml

One other thing to note is that we try to pick base images with multi-arch support as well.;;;",,,,,,,,,,,,,,,,,,,,,,,,
72 Hour Long Run,FAB-10853,31355,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,suryalnvs,scottz,scottz,26/Jun/18 4:22 AM,28/Aug/18 11:40 PM,28/Oct/23 3:03 AM,29/Jun/18 12:46 PM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,SystemTestcase,,,,,,"Execute a 72 hour long running test in a cloud cluster environment, with low traffic rate, such as  <=  1 TxPerSec

 ",,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10080,,,No,,,,,,"1|hzzg53:",,,,,,,,,,,,,,,,Unset,,System Test,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/18 10:06 AM;suryalnvs;Launched the test with 16 peers in 2 orgs, 1 channel, 1 chaincode, goleveldb, mutual tls enabled, service discovery;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to download desired image version using scripts/bootstrap.sh,FAB-10854,31356,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,wlahti,wlahti,26/Jun/18 4:33 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,30/Jun/18 4:36 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-build,,,,,0,ci-failure,,,,,,"Following the documentation at [https://hyperledger-fabric.readthedocs.io/en/latest/install.html,] the call to download the images does not currently work when supplying a version of 1.1.0, e.g.
{code:java}
curl -sSL http://bit.ly/2ysbOFE | bash -s 1.1.0{code}
It always pulls the 1.2.0-rc1 images.",,denyeart,rameshthoomu,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10579,FAB-10953,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg5b:",,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jun/18 5:14 AM;rameshthoomu;[https://gerrit.hyperledger.org/r/#/c/23623|https://gerrit.hyperledger.org/r/#/c/23623/] master;;;","27/Jun/18 11:24 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/23695/] release-1.2;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Serviceability - cleanup unsupported capabilities panic message,FAB-10855,31357,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,26/Jun/18 4:35 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,03/Jul/18 3:05 AM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"In [https://github.com/hyperledger/fabric/blob/master/core/peer/peer.go#L126-L139], the panic messages all appear to be formatted to print just the channel id at the beginning. The second and third panics, however, print the entire Configtxvalidator() object. 

See attached log for an example of the messy output, which was captured while CI was having an issue grabbing the correct images, resulting in 1.2 capabilities being attempted on a v1.1 peer.",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jun/18 3:31 AM;wlahti;peer0.org1-default-channel.log;https://jira.hyperledger.org/secure/attachment/15183/peer0.org1-default-channel.log",,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzg5j:",,,,Unset,,,,,,Unset,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jun/18 5:11 AM;wlahti;https://gerrit.hyperledger.org/r/c/23619/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add filtering by chaincodes and collections to peer membership queries,FAB-10857,31359,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,bstasyszyn,bstasyszyn,26/Jun/18 4:45 AM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,03/Jul/18 6:14 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"When the chaincode policy does not contain the same set of MSPs as the collection policy then the following error is returned from the endorsers query on the Discovery service:

'Principal set computation failed: chaincode isn't installed on sufficient organizations required by the endorsement policy'.

Instead of an error, I would suggests that the endorser groups be prioritized according to those in which the greatest number of peers have read-access to the collection, and return the group with the highest priority.

Consider the following example:

MSP1: (peer1,peer2)
MSP2: (peer3)
MSP3: (peer4)

CC policy: (MSP1 AND MSP2) OR MSP3
Collection policy: MSP1, requiredPeerCount=1

The possible endorser groups based on chaincode policy are:

(peer1,peer3), (peer2,peer3), (peer4)

There is no group in which ALL of the peers have read-access to the collection, but I would expect  either group (peer1,peer3) or group (peer2,peer3) to be returned, since peer1 and peer2 have read-access to the collection.

Further, let's say that peer3 is not available, then I would expect the group (peer4). The endorsement would succeed with (peer4) since the private data would be pushed to peer1 and/or peer2, satisfying the collection's requiredPeerCount of 1.
",,bstasyszyn,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8779,,,FABG-23,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzg5z:",,,,Unset,,,,,,Unset,,,,,,,,,,,bstasyszyn,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jun/18 3:02 PM;yacovm;So... basically you're doing an endorsement query with a collection specified after you did an endorsement query without the collection specified, and since no principal set combination can both satisfy the endorsement policy and entirely be contained by the collection config - you're getting an error (which is by design), and you want the service to return a response that enables you to prioritize peers that are in the collection over those that are not in the collection so you could do blind writes, is that correct?

I think that this is best approached by the following way:
* lets assume you did an endorsement query without a collection and you got back hashed read-write sets from the peers.
* While you can do a collection query afterwards - there is a risk that you'll get the error you got since it can be that in the setup, no principal combination can be satisfied
* Since the response might contain hashed read write sets for multiple collections, it's a bit hard to convey syntactically to the discovery service how to compute the prioritization
   and how to convey it in a consumable manner such that it caters to demands of all users.
* Therefore, I think we should just add an option in the [PeerMembershipQuery|https://github.com/hyperledger/fabric/blob/release-1.2/protos/discovery/protocol.proto#L125-L128] that specifies collections, and it would return only peers that are authorized by (all the collections given in the query) in the response.
* If the SDK wants to know about peers that are in either collection A or in collection B, they could just issue 2 queries in the request (a query with collection A and a query for collection B).
* The SDK would get back the response and can then prioritize the combinations of peers derived from the endorsement query response based on the association of peers to collections.

How does that sound to you? [~bstasyszyn] [~troyronda] ;;;","27/Jun/18 12:39 AM;bstasyszyn;Yes, I think this should be fine. An option can be added to the SDK to either exclude peers that don't have access to the collection (this will probably be the default) or to prioritize by those that do have access. It will be up to the SDK user to decide what behavior they want.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Add UT for common/capabilities/,FAB-10859,31362,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,diizuka,diizuka,diizuka,26/Jun/18 11:25 AM,22/Jul/18 9:54 PM,28/Oct/23 3:03 AM,22/Jul/18 9:54 PM,v1.1.0,,,,,,,,Future,,,fabric-common,,,,,0,tests,,,,,,,"On the master branch of fabric git repository, add test for commom/capabilities/:
  application.go: HasCapability()
  orderer.go: Resubmission(), ExpirationCheck()",diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg6f:",,,,,,,,,,,,,,,,,,,,,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix nil pointer access by broken cert file,FAB-10860,31363,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,diizuka,diizuka,diizuka,26/Jun/18 2:50 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 11:05 PM,,,,,,,,,Future,,,,,,,,0,,,,,,,"On the master branch of fabric git repository, cmd/common/signer/signer.go, method loadPrivateKey():
 If cert is wrong format (e.g. empty file), nil pointer access occurs and that causes panic.
",,diizuka,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg6n:",,,,,,,,,,,,,,,,,,,,,diizuka,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/18 4:01 AM;wlahti;https://gerrit.hyperledger.org/r/c/23713/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Decouple Chaincode-Specific Logic from PTE Execution Engine,FAB-10861,31364,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,vramaiitkgp,vramaiitkgp,vramaiitkgp,26/Jun/18 3:52 PM,02/Aug/18 10:13 PM,28/Oct/23 3:03 AM,02/Aug/18 10:13 PM,v1.2.0,,,,,,,,Future,,,fabric-build,,,,,0,,,,,,,"Currently, chaincode argument generation logic (based on {{ccType}}) is hardcoded in the PTE execution engine ({{pte-execRequest.js}}). We need to decouple this logic so that the execution engine is application-agnostic. We can move the argument-generation logic to separate files corresponding to the application ID.",,dongming,vramaiitkgp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2247,,,,,,,,,"1|hzzg6v:",,,,Unset,,,,,,Unset,,,,,,,,,,,dongming,vramaiitkgp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"26/Jun/18 3:53 PM;vramaiitkgp;[~dongming] FYI.;;;","26/Jun/18 6:22 PM;vramaiitkgp;[~dongming] Please reject the commit [https://gerrit.hyperledger.org/r/c/23633/.|https://gerrit.hyperledger.org/r/c/23633/] It overrides your latest change. I'll fix and resubmit.;;;","26/Jun/18 11:48 PM;dongming;https://gerrit.hyperledger.org/r/#/c/23647/;;;",,,,,,,,,,,,,,,,,,,,,,,,
basic-network - TLS env.var typo in docker-compose.yml,FAB-10862,31365,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,Hi5,Hi5,Hi5,26/Jun/18 4:50 PM,11/Sep/18 8:46 PM,28/Oct/23 3:03 AM,11/Sep/18 8:46 PM,v1.0.6,v1.1.0,v1.2.0,,,,,,v1.3.0,,,fabric-samples,,,,,0,basic-network,fabric-samples,,,,,"The fabric-ca TLS environment variable names for cert file and key file are incorrect:
- FABRIC_CA_SERVER_*CA*_CERTFILE
- FABRIC_CA_SERVER_*CA*_KEYFILE

I believe they should be:

- FABRIC_CA_SERVER_*TLS*_CERTFILE
- FABRIC_CA_SERVER_*TLS*_KEYFILE

like the working example from first-network:
https://github.com/hyperledger/fabric-samples/blob/f05a132586ae9ca7ce86b9e56ae4bd3b084bc959/first-network/docker-compose-e2e-template.yaml#L24-L25

This could create confusion (error) for beginners when they try to enable TLS in basic-network.

 ",,denyeart,Hi5,mastersingh24,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg73:",,,,,,,,,,,,,,,,,,,,,denyeart,Hi5,mastersingh24,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/18 7:42 PM;ryjones;[~mastersingh24] any preference here?;;;","27/Jun/18 11:51 AM;Hi5;https://gerrit.hyperledger.org/r/#/c/23637/ release-1.0;;;","11/Sep/18 8:46 PM;denyeart;From [~skarim]:

""I don''t think these should be renamed, I think the original intent was for this cert/key pair to be used for signing by the CA. If you need to add TLS environment variables, I would add them in addition to keeping theses."";;;",,,,,,,,,,,,,,,,,,,,,,,,
Query for pvt data on Non-Endorser Peer error: Failed to handle GET_STATE.,FAB-10864,31368,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,C0rWin,rlalgowdar,rlalgowdar,26/Jun/18 5:41 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,29/Jun/18 10:35 AM,,,,,,,,,v1.2.0,,,fabric-ledger,,,,,0,,,,,,,"Version: 1.2.0-rc1
Commit SHA: f6e72eb

Query for pvt data on Non-Endorser Peer error: Failed to handle GET_STATE.

The invokes for marbles_private run on peer0 and querypvtdetails run on peer1.

peer0 and peer1 are in same ORG.

Many queries for pvt data fail with peer1 logging below. Logs and LedgerData attached.

2018-06-26 08:11:51.708 UTC [chaincode] HandleTransaction -> ERRO 16d [67193d89] Failed to handle GET_STATE. error: Private data matching public hash version is not available. Public hash version = &version.Height\{BlockNum:0xa, TxNum:0x3}, Private data version = (*version.Height)(nil)
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetState
    /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:545
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetState-fm
    /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:197
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
    /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:242
runtime.goexit
    /opt/go/src/runtime/asm_amd64.s:2361
GET_STATE failed: transaction ID: 67193d89c268c7a1d09436ea54a24159cf35a1bfcf168313461d4ce51d047773
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
    /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:246
runtime.goexit
    /opt/go/src/runtime/asm_amd64.s:2361

 ",,C0rWin,denyeart,rlalgowdar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/18 5:37 PM;rlalgowdar;dev-peer0.org1.example.com-marbles02_private_go_ch1-v0.jun26.log;https://jira.hyperledger.org/secure/attachment/15171/dev-peer0.org1.example.com-marbles02_private_go_ch1-v0.jun26.log","26/Jun/18 5:37 PM;rlalgowdar;dev-peer1.org1.example.com-marbles02_private_go_ch1-v0.jun26.log;https://jira.hyperledger.org/secure/attachment/15170/dev-peer1.org1.example.com-marbles02_private_go_ch1-v0.jun26.log","27/Jun/18 1:21 AM;rlalgowdar;peer.debug.log.10q.2.jun26.log.zip;https://jira.hyperledger.org/secure/attachment/15182/peer.debug.log.10q.2.jun26.log.zip","26/Jun/18 5:37 PM;rlalgowdar;peer0.Jun26.log;https://jira.hyperledger.org/secure/attachment/15172/peer0.Jun26.log","26/Jun/18 5:37 PM;rlalgowdar;peer0.ledgersData.zip;https://jira.hyperledger.org/secure/attachment/15174/peer0.ledgersData.zip","26/Jun/18 5:37 PM;rlalgowdar;peer1.Jun26.log;https://jira.hyperledger.org/secure/attachment/15173/peer1.Jun26.log","26/Jun/18 5:37 PM;rlalgowdar;peer1.ledgerData.zip;https://jira.hyperledger.org/secure/attachment/15175/peer1.ledgerData.zip",,,,,,,,,,,,,,,,,,,,,,"1|hzzg7j:",,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,rlalgowdar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/18 8:45 PM;denyeart;Need a couple things in order to troubleshoot:

1) Debug log, generate by setting docker environment variables:

      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_LOGGING_GOSSIP=DEBUG

2) Need the client to get the proposal response ""message"" text that corresponds to the 500 status.  This message is not printed in the peer logs as it is specific to the chaincode application.;;;","27/Jun/18 1:21 AM;rlalgowdar;[^peer.debug.log.10q.2.jun26.log.zip] Debug logs zip  

[[31m2018-06-26 16:17:28.263 UTC [chaincode] HandleTransaction -> ERRO e4b3^[[0m [242f8c07] Failed to handle GET_STATE. error: Private data matching public hash version is not available. Public hash version = &version.Height\{BlockNum:0x2, TxNum:0x0}, Private data version = (*version.Height)(nil)
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetState
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:545
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetState-fm
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:197
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:242
runtime.goexit
        /opt/go/src/runtime/asm_amd64.s:2361
GET_STATE failed: transaction ID: 242f8c07955811cb2b6b27affc6efb6a20b078ac15a7c7f39c96b2f887ee5dd5
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:246
runtime.goexit
        /opt/go/src/runtime/asm_amd64.s:2361;;;","27/Jun/18 2:04 AM;denyeart;I see what’s happening now:
{code:java}
2018-06-26 16:15:14.049 UTC [gossip/privdata] fetchFromPeers -> DEBU babd {a87cdf388c9206b27d45cabdc59162b115c841ac4b35aaabf415b8d1aae34594 0 marbles02_private_go_ch1 collectionMarblePrivateDetails 9cad126ab41af988c028cadf25072360e351c4c3170fb8bf33e5a2d6964cdd67} was purged or will soon be purged, skipping fetch{code}
Since your blockToLive is 3, the private data executed in peer0 is either purged or will soon be purged, so peer1 doesn’t pull it. Then upon query on peer1 you get a 500 error with message “Private data matching public hash version is not available”. This is as-designed.

Increase your block to live to something like 100, and you should see the private data for the newer ‘fresh’ blocks.

For the data in expired blocks, you will get a 500 error with chaincode message ""Marble private details does not exist”.

 

[~C0rWin] I think the above message needs to be a Warning so that people notice the reason for the missing private data.  Let's use this JIRA item to make that change.

There is a related (good) warning when peer cannot fetch private data:
{code:java}
Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets:{code}
I think the ‘skipping fetch’ message should look similar…. Warn people that “will commit block with missing private write sets” (I often grep for things like ""missing"", so would be good to keep the message somewhat consistent).;;;","27/Jun/18 5:03 AM;C0rWin;{quote}
Artem Barger I think the above message needs to be a Warning so that people notice the reason for the missing private data.  Let's use this JIRA item to make that change.
{quote}

yes, I'd agree, well produce CR, [~denyeart];;;","27/Jun/18 7:36 PM;C0rWin;Created sub-task (FAB-10888), since log message is not related to the current ticket directly.;;;","29/Jun/18 7:16 AM;denyeart;Sub-task has been merged.

I will close the main Bug as Invalid since this was working as designed... the improved Warning from the sub-task should help people understand it in the future.;;;",,,,,,,,,,,,,,,,,,,,,
Build fails due to missing license header in diagrams.pptx,FAB-10866,31370,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,diizuka,michael7,michael7,26/Jun/18 7:11 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 11:04 PM,,,,,,,,,v1.3.0,,,fabric-build,,,,,0,,,,,,,"Run

`make dist-clean all`

 

Expected:

Build succeeds

 

Actual:

Fails with

The following files are missing SPDX-License-Identifier headers:
docs/source/glossary/diagrams.pptx

Please replace the Apache license header comment text with:
SPDX-License-Identifier: Apache-2.0

Checking committed files for traditional Apache License headers ...
The following files are missing traditional Apache 2.0 headers:
docs/source/glossary/diagrams.pptx
Fatal Error - All files must have a license header
make: *** [license] Error 1

 ",,diizuka,michael7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9171,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg7z:",,,,,,,,,,,,,,,,,,,,,diizuka,michael7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/18 10:59 PM;diizuka;This is because ""make license"" command fails. Because pptx file does not contain plain text of Apache License headers.
.
I put patch on Gerrit, that ignores the pptx file on license header checking.
https://gerrit.hyperledger.org/r/#/c/23723/

It seems that when pptx was pushed to gerrit master branch, CI treats it as only documentation change, and CI skips license header checking.

I think, the folloings are the items to discussion:

[1] Is it suitable to manage binary file(e.g. pptx, jpg) on git ?
 Especially that is expected to modify several times ?

[2] Is it suitable to skip some test on CI
 for all type of binary files ?

[3] How to check binary document by CI ?
 pptx is zipped xml file, so TECHNICALLY, it is possible
to detect difference between another version pptxes,
but I think it seems hard not only to implement
but alow to show the difference on the web.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE Prequisite Requirements Don't Match Instructions in README,FAB-10867,31371,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,vramaiitkgp,vramaiitkgp,vramaiitkgp,26/Jun/18 8:34 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,10/Jul/18 12:58 AM,,,,,,,,,,,,fabric-build,,,,,0,,,,,,,"[~dongming] `node` and `npm` versions indicated in `PTE/README.md` seem to be incorrect (it says node v7 is not supported.) But `PTE/package.json` lists different version ranges, and we need to install tools with those versions to build and run PTE.",,dongming,vramaiitkgp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzg87:",,,,,,,,,,,,,,,,,,,,,dongming,vramaiitkgp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"26/Jun/18 11:49 PM;dongming;https://gerrit.hyperledger.org/r/#/c/23649/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Developing Applications topic,FAB-10868,31372,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,EdProsser,EdProsser,EdProsser,26/Jun/18 9:53 PM,29/Aug/18 9:17 PM,28/Oct/23 3:03 AM,29/Aug/18 9:17 PM,v1.3.0,,,,,,,,v1.3.0,,,fabric-docs,,,,,0,Documentation,,,,,,New topic covering application development.,,EdProsser,joe-alewine,odowdaibm,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11459,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwthr:",,,,Unset,,,,,,Unset,,,,,,,,,,,EdProsser,joe-alewine,odowdaibm,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/18 9:54 PM;odowdaibm;HELLO [~EdProsser];;;","26/Jun/18 9:55 PM;odowdaibm;Letting [~pandrejko] and [~joe-alewine] know;;;","27/Jun/18 1:59 AM;SjirNijssen;May I suggest that a real business case is used as test? I have developed more than one and I am happy to submit.;;;","27/Jun/18 2:02 AM;SjirNijssen;I assume that applications development is meant to be a shorter term for client application development.
May I assume that there are two input available:
1. The associated smart contract and
2. The business requirements, including test cases developed by the business.;;;","27/Jun/18 8:18 PM;EdProsser;[~SjirNijssen] I'd welcome any input you might have. As an application developer, other than the ""Writing your first application"" tutorial, what would you be looking to see in the Developing Applications section?;;;","23/Aug/18 10:42 PM;SjirNijssen;Excuse me  Ed that I missed the above message. 
I believe Fabric is slowly growing up and that means that Fabric needs more customers. Customers want to see how a problem they have, can be solved with Fabric. Therefore we are developing the Applications Development topic by starting to describe the business, illustrated with concrete examples and scenarios, understandable to business and Fabric experts. Btw a technical question: I saw version 28 while there was no answer to 27. How do I see what 28 adds to 27? Please be aware that I am very weak in that software.;;;","29/Aug/18 9:17 PM;EdProsser;All of the work proposed for this is being done under FAB-11459;;;",,,,,,,,,,,,,,,,,,,,
Daily Job: fabric-daily-ppc64le has failed.,FAB-10869,31375,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,jtclark,jtclark,26/Jun/18 11:30 PM,19/Mar/19 8:12 PM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,v1.2.0,,,,,,,,Future,,,,,,,,0,ci-failure,,,,,,"* fabric-daily-ppc64le* fails with the following error:

{code:java}
00:02:10.913 # cd .; git clone https://github.com/estesp/manifest-tool /opt/gotools/obj/src/github.com/estesp/manifest-tool
00:02:10.913 Cloning into '/opt/gotools/obj/src/github.com/estesp/manifest-tool'...
00:02:10.913 error: RPC failed; curl 56 GnuTLS recv error (-54): Error in the pull function.
00:02:10.913 fatal: The remote end hung up unexpectedly
00:02:10.913 fatal: early EOF
00:02:10.913 fatal: index-pack failed
00:02:10.913 package github.com/estesp/manifest-tool: exit status 128
00:02:10.914 make[1]: *** [gotool.manifest-tool] Error 1
00:02:10.914 gotools.mk:53: recipe for target 'gotool.manifest-tool' failed
00:02:10.914 make[1]: Leaving directory '/opt/gopath/src/github.com/hyperledger/fabric'
00:02:10.914 make: *** [/opt/gotools/bin/manifest-tool] Error 2
00:02:10.914 gotools.mk:58: recipe for target '/opt/gotools/bin/manifest-tool' failed
00:02:12.117 Makefile:247: recipe for target '.build/docker/gotools' failed
00:02:12.117 make: *** [.build/docker/gotools] Error 2
00:02:12.117 
00:02:12.117 real	0m38.094s
00:02:12.117 user	0m0.644s
00:02:12.117 sys	0m0.180s
00:02:12.383 Build step 'Execute shell' marked build as failure
{code}

*FABRIC_COMMIT =========> c899926*

*Console output:* https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-ppc64le/7/console

*Build Logs:*

Current Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-daily-ppc64le/7/

Previous Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-daily-ppc64le/6",,harsha544,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10778,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg8f:",,,,,,,,,,,,,,,,,,,,,harsha544,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/18 12:56 AM;harsha544;This doesn't look to be a arch. specific problem. Instead it's cannot fetch the source
00:02:10.913 error: RPC failed; curl 56 GnuTLS recv error (-54): Error in the pull function.
00:02:10.913 fatal: The remote end hung up unexpectedly
However I am pushing a PR via https://jira.hyperledger.org/browse/FAB-10911 which addresses intermittent failure.

FWIW, I tried my patch already in sandbox env. works as expected
[https://logs.hyperledger.org/sandbox/vex-yul-hyp-jenkins-2/fabric-daily-ppc64le/54]
[https://logs.hyperledger.org/sandbox/vex-yul-hyp-jenkins-2/fabric-daily-ppc64le/53]
[https://logs.hyperledger.org/sandbox/vex-yul-hyp-jenkins-2/fabric-daily-ppc64le/52]
[https://logs.hyperledger.org/sandbox/vex-yul-hyp-jenkins-2/fabric-daily-ppc64le/51] 
[https://logs.hyperledger.org/sandbox/vex-yul-hyp-jenkins-2/fabric-daily-ppc64le/48]

The failures in sandbox env occurs once in a while in non-p arch too. However that said I am working towards it too.

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Daily Job: fabric-end-2-end-daily-master-s390x has failed.,FAB-10870,31376,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jtclark,jtclark,26/Jun/18 11:42 PM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,10/Jul/18 9:46 PM,v1.2.0,,,,,,,,Future,,,,,,,,0,ci-failure,,,,,,"*fabric-end-2-end-daily-master-s390x* has failed with the following error:


{code:java}
00:13:08.801 error: [E2E testing]: install proposal was bad
00:13:08.802 ok 27 Error: Failed to send install Proposal or receive valid response: [object Object] at e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-end-2-end-daily-master-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:151:11) at <anonymous>
00:13:08.803 error: [E2E install-chaincode-fail]: Failed to install chaincode in peers of organization ""org1"". 
00:13:08.956 ok 28 Successfully retrieved TLS certificate
00:13:09.102 ok 29 Successfully enrolled user 'admin'
00:13:09.103 ok 30 Successfully enrolled user 'admin' (e2eUtil 1)
00:13:09.125 error: [E2E testing]: install proposal was bad
00:13:09.125 ok 31 Error: Failed to send install Proposal or receive valid response: [object Object] at e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-end-2-end-daily-master-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:151:11) at <anonymous>
00:13:09.126 error: [E2E install-chaincode-fail]: Failed to install chaincode in peers of organization ""org2"". 
{code}


*FABRIC_COMMIT ------> c899926*

*Console Output*: https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-master-s390x/57/consoleFull

*Build Logs*:

Current Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-s390x/57

Previous Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-s390x/56",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg8n:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/18 9:46 PM;rameshthoomu;This is working as expected from past 5 builds [https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-master-s390x/] Changing the status to Done. Please open a new issue if this is repeating.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Private data purge interval - avoid logging if no purge is done,FAB-10871,31377,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,suryalnvs,suryalnvs,26/Jun/18 11:43 PM,28/Sep/18 12:24 AM,28/Oct/23 3:03 AM,28/Sep/18 12:24 AM,v1.2.0,,,,,,,,v1.2.1,v1.3.0,,fabric-ledger,,,,,0,,,,,,,"When trying to run the longrun (FAB-10853) with mutual tls and service discovery in the network with 1.2.0-rc1 load, observed the logs from pvtdatastorage saying about the purging the private data in blocks in peers logs as shown below
{code:java}
2018-06-26 04:58:35.148 UTC [kvledger] CommitWithPvtData -> INFO 28e Channel [testorgschannel1]: Committed block [599] with 10 transaction(s)
2018-06-26 04:59:00.175 UTC [kvledger] CommitWithPvtData -> INFO 28f Channel [testorgschannel1]: Committed block [600] with 10 transaction(s)
2018-06-26 04:59:00.175 UTC [pvtdatastorage] func1 -> INFO 290 Purger started: Purging expired private data till block number [600]
2018-06-26 04:59:00.175 UTC [pvtdatastorage] func1 -> INFO 291 Purger finished
2018-06-26 04:59:25.147 UTC [kvledger] CommitWithPvtData -> INFO 292 Channel [testorgschannel1]: Committed block [601] with 10 transaction(s)
2018-06-26 04:59:50.164 UTC [kvledger] CommitWithPvtData -> INFO 293 Channel [testorgschannel1]: Committed block [602] with 10 transaction(s)
{code}
Looks like it is trying to purge the private data in blocks for every 100 blocks.

 

If not core.yaml is the right file to look for this parameter, where can we find the information for this parameter and how to set it?

 ",,denyeart,manish-sethi,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzg8v:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,manish-sethi,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/18 12:49 AM;denyeart;In core.yaml it would be included as ledger.pvtdataStore.purgeInterval:
{code:java}
ledger:
   pvtdataStore:
     purgeInterval: 100{code}
Since we didn't expect many users to change it, we didn't include in core.yaml so as to not make it overly complicated.  But we have found that due to viper config options cannot be overridden from docker env variables unless they are defined in core.yaml, so I think it does make sense to include it in the future.  Let's change this to an improvement for the future.;;;","27/Jun/18 12:54 AM;suryalnvs;Thank you [~denyeart];;;","27/Jun/18 3:07 AM;suryalnvs;Hey [~denyeart] I am not running any private data chaincode, Am I still supposed to see those logs? Can I turn off the schedulers for purging if I don't use chaincode with private data?;;;","24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","24/Sep/18 9:40 AM;denyeart;[~manish-sethi] How about only logging it if there were some items purged?;;;","24/Sep/18 11:38 AM;manish-sethi;Submitted a CR to change the regular logs to debug level and print in info level if some data was purged.
https://gerrit.hyperledger.org/r/#/c/26494/;;;","25/Sep/18 11:33 AM;denyeart;backport to release-1.2: https://gerrit.hyperledger.org/r/#/c/26513/;;;",,,,,,,,,,,,,,,,,,,,
PTE installs cc on specified peers,FAB-10873,31383,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,27/Jun/18 12:49 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,19/Jul/18 3:48 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"PTE to install chaincode on specified peers.

Need to add `List` option in the targetPeers.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzg9b:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,true,"18/Jul/18 4:51 AM;dongming;https://gerrit.hyperledger.org/r/#/c/24505/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Daily Job: fabric-nightly-release-job-x86_64 has failed.,FAB-10874,31385,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jtclark,jtclark,27/Jun/18 1:33 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,10/Jul/18 9:49 PM,v1.2.0,,,,,,,,Future,,,fabric-ci,,,,,0,ci-failure,,,,,,"*fabric-nightly-release-job-x86_64* has failed with the following error:

{code:java}
00:45:04.290 [INFO] BUILD FAILURE
00:45:04.290 [INFO] ------------------------------------------------------------------------
00:45:04.292 [INFO] Total time: 0.347 s
00:45:04.293 [INFO] Finished at: 2018-06-26T02:41:23+00:00
00:45:04.338 [INFO] Final Memory: 7M/304M
00:45:04.338 [INFO] ------------------------------------------------------------------------
00:45:04.339 [ERROR] Failed to execute goal org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy-file (default-cli) on project standalone-pom: /w/workspace/fabric-nightly-release-job-x86_64/gopath/src/github.com/hyperledger/fabric/release/linux-ppc64le/hyperledger-fabric-linux-ppc64le.1.2.0.c899926.tar.gz not found. -> [Help 1]
{code}

*FABRIC_COMMIT* : c899926

*Build Logs*:

Current Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-nightly-release-job-x86_64/41

Previous Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-nightly-release-job-x86_64/40/
",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg9r:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/18 9:49 PM;rameshthoomu;This is not a valid issue. We use maven-deploy plugin to publish binaries to nexus. The maven-deploy cannot overwrite on the released versions. So, in result the job will fail when it try to publish the same commit to nexus. Changing the status to done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Disable ""ppcl64le"" e2e jobs from CI",FAB-10875,31386,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,27/Jun/18 2:09 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,17/Jul/18 11:53 PM,,,,,,,,,Future,,,fabric-ci,,,,,0,,,,,,,"Disable ppc64le e2e jobs from CI as the binary reference from fabric release-1.2 and master branch has been removed.
*00:08:39.832* make: *** No rule to make target 'release/linux-ppc64le', needed by 'release'.  Stop.*00:08:40.091* Build step 'Execute shell' marked build as failure
Once the ppc64le is enabled in fabric, will enable the same in CI.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzg9z:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/18 1:06 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/24443/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Publish ""TestViewer"" image to nexus",FAB-10876,31387,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,27/Jun/18 2:31 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,28/Jun/18 10:26 PM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,"Publish ""TestViewer"" image from fabric-test to nexus repository with 1.2.0 and 1.2.0-commithash (7 chars)

Execute make test-viewer-image from fabric-test master branch and publish them to Nexus3",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzga7:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jun/18 10:56 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23703/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update Makefile to build TestViewer docker image,FAB-10877,31388,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,27/Jun/18 2:33 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,03/Jul/18 4:41 AM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,,,,,,,"Update Makefile to build TestViewer docker image.

TestViewer dockerfile has been placed in tools/Testviewer directory. Update makefile to build image from same directory and tag it as hyperledger/fabric-test-viewer:commit",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgaf:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"27/Jun/18 5:26 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23689/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Document how to generate peer help text for docs,FAB-10879,31390,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,denyeart,denyeart,27/Jun/18 3:50 AM,22/May/20 2:44 AM,28/Oct/23 3:03 AM,02/Apr/20 9:47 PM,,,,,,,,,Future,,,fabric-docs,,,,,0,,,,,,,"peer help text is generated using:
{code:java}
make help-docs{code}
Need to document the process so that people don't try to update the help docs manually, or if they do, we can give them a pointer on the correct process.  Perhaps the /docs/README.md would be a good place, although I'll defer to doc team.  

 

The /docs/README.md may also need some other cleanup as well.",,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8459,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwrtr:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-2.1,main,release-2.0,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/18 3:54 AM;denyeart;Assigning to [~pandrejko], but feel free to re-assign.;;;","27/Jun/18 6:52 AM;pandrejko;Thanks Dave. Another place this content could go is in the Contributions Welcome! section https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html;;;","27/Jun/18 11:27 AM;denyeart;I view the CONTRIBUTING.html as being more important general purpose information.  The help doc generation is a very specific infrequent thing, I think it would be a distraction in the main contributing page.;;;","28/Jun/18 2:34 AM;pandrejko;[~denyeart] - is the scope of this issue the commands under : [https://github.com/hyperledger/fabric/tree/master/peer]

or is it broader?

 

The instructions I used to update the help text for the peer chaincode command were:

 
 # Edit fabric/peer/chaincode/chaincode.go
 # Run make clean-all  release native
 # Run scripts/generateHelpDocs.sh

 

Is this the process you would like us to describe for this issue?

 ;;;","28/Jun/18 7:06 AM;denyeart;[~ChristopherFerris] can you clarify the intended process of generating the peer help text docs for Pam?  I created this JIRA so that the process that you implemented gets written down somewhere.;;;","03/Dec/18 5:33 AM;pandrejko;[~ChristopherFerris] ^^^;;;","06/Dec/18 10:21 PM;pandrejko;Moving to future for now, will reassess for 2.0 after 1.4 goes out.;;;","06/Apr/19 2:30 AM;pandrejko;Notes:
{color:#222222}When you need to build documentation for the Fabric Commands you have to run the /fabric make help-docs command that calls the generateHelpDocs.sh script.{color}
 
{color:#222222}The script is located under /src/github.com/hyperledger/fabric/scripts{color}
 
{color:#222222}It takes the *_preamble.md and *_postscript.md files in src/github.com/hyperledger/fabric/docs/wrappers as input, then it builds the output .md files under  docs/source/commands.{color}
 
 
{color:#222222}Complete the following setup commands:{color}
 
{color:#222222}go version{color}
 
{color:#222222}Make sure your Go library is at 1.11.5  or higher. If it is not, run the following commands:{color}
{color:#222222}git clone {color}{color:#222222}[https://github.com/udhos/update-golang]{color}
{color:#222222}cd update-golang{color}
{color:#222222}sudo ./update-golang.sh{color}
 
{color:#222222}make clean-all  release native{color}
{color:#222222} {color}
 
 
{color:#222222}To update a single command output, for example something in docs/source/commands/peerchannel.md {color}
 
{color:#222222}git status{color}
{color:#222222}git fetch origin{color}
{color:#222222}git pull origin master{color}
{color:#222222}git checkout {color}{color:#222222} -b <your_jira>{color}
{color:#222222}cd /src/github.com/hyperledger/fabric{color}
{color:#222222}make help-docs{color}
{color:#222222}git status{color}
{color:#222222}git add docs/source/commands/{color}{color:#222222}<newly generated file>.md{color}
{color:#222222}git commit -s {color}
{color:#222222}git status{color}
{color:#222222}git push origin HEAD:refs/for/master{color}
 
 
{color:#222222}If you are adding a new CLI command, you need add a section for your CLI command to {color}
{color:#222222}src/github.com/hyperledger/fabric{color}{color:#222222}/{color}{color:#222222}scripts/generateHelpDoc.sh {color}
 
{color:#222222}Under /Users/pamaibm.com/work/src/github.com/hyperledger/fabric/docs/wrappers you need to create {color}
{color:#222222}<command>_preamble.md{color}
{color:#222222}<command>_postscript.md{color}
 
 
 
 
 
 
 
 
 
 
 
 ;;;","06/Aug/19 12:25 AM;wlahti;[~pandrejko] Looks like you already have a draft in the previous comment. Think we can prioritize this doc so it's out there for all? Just noticed one place where a CR directly modified a command md file instead of adding to the preamble/postscript file.;;;","07/Aug/19 1:57 AM;pandrejko;[~wlahti]Thank Will. I'll try to prioritize this.

 ;;;","29/Feb/20 8:36 AM;denyeart;[~pandrejko] I still think this should be added to /docs/README.md.

I ran through the instructions for an update in https://github.com/hyperledger/fabric/pull/770 , everything still works.

Just some clarifications:

If you modify wrapper, you'll need to add both the wrapper and the generated doc to the commit, e.g. in my case:
	modified:   docs/source/commands/peerversion.md
	modified:   docs/wrappers/peer_version_preamble.md

Actually, I'd suggest to simply remove all the git instructions. We have to assume that people know how to use git. I'd focus the readme instructions on the generation part.;;;","04/Mar/20 2:50 AM;pandrejko;[~denyeart]See if this is what you were thinking: https://github.com/hyperledger/fabric/pull/793;;;","02/Apr/20 9:47 PM;pandrejko;Published here: https://github.com/hyperledger/fabric/tree/master/docs#updating-commands-reference-topic;;;",,,,,,,,,,,,,,
Upgrade docker-compose version to 1.21.2,FAB-10882,31393,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,27/Jun/18 4:41 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,27/Jun/18 11:44 AM,,,,,,,,,,,,fabric-ci,,,,,0,,,,,,,Upgrade docker-compose version to 1.21.2 in x86_64 build nodes.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyktb:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jun/18 11:44 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23681/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Index files are failed to download while building testenv image on s390x platform,FAB-10883,31394,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,27/Jun/18 10:50 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,30/Jun/18 5:12 AM,v1.2.0,,,,,,,,v1.2.0,,,fabric-build,,,,,0,ci-failure,,,,,,"{color:#ff0000}E: Some index files failed to download. They have been ignored{color}
on s390x platform.

Below is the error from Jenkins build
{color:#ff0000}W: Failed to fetch [http://security.debian.org/dists/jessie/updates/InRelease]  Unable to find expected entry 'main/binary-s390x/Packages' in Release file (Wrong sources.list entry or malformed file){color}
{code:java}
00:03:33.747 Step 8/10 : RUN bash /tmp/install-softhsm2.sh && rm -f install-softhsm2.sh
00:03:33.821  ---> Running in f87326f01150
00:03:36.380 Get:1 http://ftp.us.debian.org sid InRelease [247 kB]
00:03:36.409 Get:2 http://security.debian.org jessie/updates InRelease [44.9 kB]
00:03:37.804 Ign http://deb.debian.org jessie InRelease
00:03:37.812 Get:3 http://ftp.us.debian.org sid/main s390x Packages [10.3 MB]
00:03:37.817 Get:4 http://deb.debian.org jessie-updates InRelease [145 kB]
00:03:37.921 Get:5 http://deb.debian.org jessie Release.gpg [2420 B]
00:03:38.036 Get:6 http://deb.debian.org jessie Release [148 kB]
00:03:39.596 Get:7 http://deb.debian.org jessie-updates/main s390x Packages [23.0 kB]
00:03:41.946 Get:8 http://deb.debian.org jessie/main s390x Packages [8798 kB]
00:03:43.206 W: Failed to fetch http://security.debian.org/dists/jessie/updates/InRelease  Unable to find expected entry 'main/binary-s390x/Packages' in Release file (Wrong sources.list entry or malformed file)
00:03:43.206 
00:03:43.207 E: Some index files failed to download. They have been ignored, or old ones used instead.
00:03:43.208 Fetched 19.7 MB in 6s (2871 kB/s)
00:03:43.600 The command '/bin/sh -c bash /tmp/i{code}
 ",,denyeart,firas.qutishat,rameshthoomu,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABB-8,,,,,FAB-11018,,,,,,FAB-10945,,,,,,FABG-255,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykt3:",,,,,,,,,,,,,,,,,,,,,denyeart,firas.qutishat,rameshthoomu,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/18 12:45 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23753/;;;","28/Jun/18 6:59 PM;denyeart;[~rameshthoomu] With [https://gerrit.hyperledger.org/r/#/c/23753/]  merged, can we mark this as Done?

I didn't mark it as Done yet since [https://gerrit.hyperledger.org/r/#/c/23753/] links to a different Jira.;;;","30/Jun/18 5:12 AM;rameshthoomu;This issue has been fixed with 0.4.10 baseimage update.;;;",,,,,,,,,,,,,,,,,,,,,,,,
go-grpc version used by orderer and peer is causing a Bag Gateway (502) error behind a grpc proxy,FAB-10885,31400,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,MKQaimari,MKQaimari,27/Jun/18 3:19 PM,12/Sep/18 5:37 PM,28/Oct/23 3:03 AM,04/Jul/18 5:33 AM,,,,,,,,,v1.3.0,,,fabric-orderer,fabric-peer,,,,0,proxy,,,,,," The go-grpc version being used by the fabric orderer and peer is causing a Bag Gateway (502) error when hosting them behind an Nginx grpc proxy.

 

 This issue go-grpc issue is documented and fixed here: [https://github.com/grpc/grpc-go/pull/2045]

 Nginx isn't the root-cause of the issue as documented here:  https://trac.nginx.org/nginx/ticket/1538

 

 ",,luckydogchina,mastersingh24,MKQaimari,Othman.Darwish,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgc7:",,,,,,,,,,,,,,,,,,,,,luckydogchina,mastersingh24,MKQaimari,Othman.Darwish,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/18 10:44 PM;mastersingh24;Looks like grpc-go update will be issued in a new release.  We can't really update grpc-go versions for patch releases.  IMHO, it's too risky to change the version we use for the 1.2 release, but we can update for the 1.3 release.

In the meantime, people should be able to use Envoy or nghttp as alternatives to nginx.;;;","03/Jul/18 8:13 PM;mastersingh24;This is fixed in grpc-go 1.13.0 and later;;;","03/Jul/18 10:10 PM;mastersingh24;https://gerrit.hyperledger.org/r/23987;;;","04/Jul/18 6:12 AM;mastersingh24;[~MKQaimari]  - this is now fixed on the master branch and will go into the v1.3 release;;;","12/Sep/18 5:37 PM;luckydogchina;so, this question had been solved?;;;",,,,,,,,,,,,,,,,,,,,,,
"Channel Creation TX with empty ""tx_id""",FAB-10886,31402,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,arman19940326,arman19940326,27/Jun/18 5:35 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,02/Jul/18 6:55 PM,v1.1.0,,,,,,,,Not a Bug,,,,,,,,0,,,,,,,"In balance-transfer project under the folder /artifacts/channel/ I ran the command below to generate channel creation tx:

configtxgen -profile TwoOrgsChannel -outputCreateChannelTx mychannel2.tx -channelID mychannel

And then inspected the tx and saved the output in a file:

configtxgen -inspectChannelCreateTx mychannel2.tx > mychannel2.txt

 

I did the above inspection and output saving for the default mychannel.tx that was already in the folder:

configtxgen -inspectChannelCreateTx mychannel.tx > mychannel.txt

 

I then compared these two files with diff command:

 diff mychannel.txt mychannel2.txt

 

The resault is shown below:

 

27,29d26
 <                             ""value"": \{
 <                                 ""name"": ""SampleConsortium""
 <                             },
 106,107c103,104
 <                 ""timestamp"": ""2017-09-03T11:17:30.000Z"",
 <                 ""tx_id"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",
 —
 >                 ""timestamp"": ""2018-06-27T07:10:27.000Z"",
 >                 ""tx_id"": """",

 

 

 

As you can see ""tx_id"" is empty in the tx that I'd generated. Is this normal? Did I do something wrong?

 

Also why are the first three lines of the above output result not present in the tx that I generated?",,arman19940326,denyeart,jyellick,mastersingh24,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgcn:",,,,,,,,,,,,,,,,,,,,,arman19940326,denyeart,jyellick,mastersingh24,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jun/18 9:03 PM;mastersingh24;Which version of the samples and which version of Fabric are you using?;;;","27/Jun/18 9:21 PM;arman19940326;Fabric v1.1. fabric samples version? IDK about the version but I ran git log and this is the last commit:

 

[commit f05a132586ae9ca7ce86b9e56ae4bd3b084bc959
 Author: foolcage <5533061@qq.com>
 Date:   Sun Apr 8 18:03:01 2018 +0800

    -FAB-9406- Typo in byfn.sh
     
     I found ""depete"" in first-network/byfn.sh.
     Maybe it should be ""delete"".]

 

So it's not a very old version I suppose.

 

 ;;;","27/Jun/18 9:29 PM;mastersingh24;I don't think this is an issue .... I think the artifact in the repository was generated by an older version of configtxgen (v1.0.2) and there have been multiple changes since then.

[~jyellick] - I don't think this is an issue?;;;","27/Jun/18 9:33 PM;arman19940326;So it's supposed to be empty?  I'm fine to proceed and use this channel creation tx (mychannel2.tx) in my implementation?;;;","27/Jun/18 10:47 PM;mastersingh24;Should work since we are able to successfully use configtxgen with all of our samples;;;","29/Jun/18 2:25 AM;denyeart;Based on latest comments, I'll lower to Medium, but would still like [~jyellick] to provide assessment.;;;","29/Jun/18 3:54 AM;wlahti;I dug through the code and it looks like configtxgen set the txid in the ChannelHeader back in 1.0.x but hasn't since then. 

release-1.0 code: [https://github.com/hyperledger/fabric/blob/release-1.0/common/configtx/template.go#L276]

Also verified that inspecting a newly generated channel.tx contains an empty tx_id in the channel header:
{code:java}
""channel_header"": {
    ""channel_id"": ""mychannel"",
    ""epoch"": ""0"",
    ""timestamp"": ""2018-06-28T18:57:33.000Z"",
    ""tx_id"": """",
    ""type"": 2,
    ""version"": 0
}{code};;;","02/Jul/18 8:12 AM;jyellick;Although {{configtxgen}} used to set the txid, this was an error and is inappropriate.

The txid is computed as a function of the creator and nonce.  Since configtxgen deliberately does not perform actions with a crypto context, there is no creator, and there is no nonce, so setting a txid does not make sense.

When the channel creation transaction is actually sent to ordering, the submitter may (and usually should) set the txid of the transaction before submitting.;;;",,,,,,,,,,,,,,,,,,,
fabric-amcl: script update to align milagro-crypto/amcl,FAB-10887,31404,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,davidkhala,davidkhala,davidkhala,27/Jun/18 6:16 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,28/Jun/18 11:13 AM,v1.2.0,,,,,,,,,,,fabric-amcl,,,,,0,build,,,,,,"In latest commit of `milagro-crypto/amcl`, the index of `amcl/FP256BN` has changed from ""20"" to ""22""

 

The script exec logs:

+ python3 config64.py
Elliptic Curves
1. ED25519
2. C25519
3. NIST256
4. BRAINPOOL
5. ANSSI
6. HIFIVE
7. GOLDILOCKS
8. NIST384
9. C41417
10. NIST521

11. NUMS256W
12. NUMS256E
13. NUMS384W
14. NUMS384E
15. NUMS512W
16. NUMS512E
17. SECP256K1

Pairing-Friendly Elliptic Curves
18. BN254
19. BN254CX
20. BLS383
21. BLS381
22. FP256BN
23. FP512BN
24. BLS461

25. BLS24
26. BLS48

RSA
27. RSA2048
28. RSA3072
29. RSA4096",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7083,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgcv:",,,,,,,,,,,,,,,,,,,,,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jun/18 6:38 PM;davidkhala;https://gerrit.hyperledger.org/r/#/c/23719/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Improve log messaging to signal about skipped pvt items due to BTL,FAB-10888,31405,31368,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,27/Jun/18 7:28 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,29/Jun/18 7:14 AM,,,,,,,,,v1.2.0,,,fabric-gossip,,,,,0,,,,,,,"To address one of the comments for FAB-10864, e.g.:

{quote}
I see what’s happening now:

2018-06-26 16:15:14.049 UTC [gossip/privdata] fetchFromPeers -> DEBU babd {a87cdf388c9206b27d45cabdc59162b115c841ac4b35aaabf415b8d1aae34594 0 marbles02_private_go_ch1 collectionMarblePrivateDetails 9cad126ab41af988c028cadf25072360e351c4c3170fb8bf33e5a2d6964cdd67} was purged or will soon be purged, skipping fetch

Since your blockToLive is 3, the private data executed in peer0 is either purged or will soon be purged, so peer1 doesn’t pull it. Then upon query on peer1 you get a 500 error with message “Private data matching public hash version is not available”. This is as-designed.

Increase your block to live to something like 100, and you should see the private data for the newer ‘fresh’ blocks.

For the data in expired blocks, you will get a 500 error with chaincode message ""Marble private details does not exist”.

 

Artem Barger I think the above message needs to be a Warning so that people notice the reason for the missing private data.  Let's use this JIRA item to make that change.

There is a related (good) warning when peer cannot fetch private data:

Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets:

I think the ‘skipping fetch’ message should look similar…. Warn people that “will commit block with missing private write sets” (I often grep for things like ""missing"", so would be good to keep the message somewhat consistent).
{quote}

the following log message need to be turned into warn instead of debug:

{quote}
2018-06-26 16:15:14.049 UTC [gossip/privdata] fetchFromPeers -> DEBU babd {a87cdf388c9206b27d45cabdc59162b115c841ac4b35aaabf415b8d1aae34594 0 marbles02_private_go_ch1 collectionMarblePrivateDetails 9cad126ab41af988c028cadf25072360e351c4c3170fb8bf33e5a2d6964cdd67} was purged or will soon be purged, skipping fetch
{quote}",,C0rWin,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgd3:",,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/18 7:35 PM;C0rWin;[https://gerrit.hyperledger.org/r/23721] - master (merged);;;","29/Jun/18 4:29 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/23827/] - release-1.2;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode lifecycle - implicit org-specific collections (enables lifecycle 'voting'),FAB-10889,31406,,Epic,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,manish-sethi,denyeart,denyeart,27/Jun/18 7:44 PM,11/Jan/21 2:30 PM,28/Oct/23 3:03 AM,11/Jan/21 2:30 PM,,,,,,,,,v2.0.0,,,fabric-crypto,,,,,5,,,,,,,"With implicit org-specific private data collections, it will be possible for an organization to privately 'pre-approve' transactions that will come for endorsement.  This facility will be used in the new v2.0 lifecycle to approve a chaincode before it becomes active on a channel. The same facility could also be used in regular chaincode applications.

 

*Implicit Collection Background:*

With normal private data collections, each collection must be defined at chaincode instantiation/upgrade time.  While this is fine if there is a limited number of private data partnerships, it is not feasible to administer when there are large numbers of collections, for example if a private data collection is needed for all bilateral (or trilateral, etc) combinations of N channel members. For these scenarios 'implicit' collections are required where the client can choose any N channel members to distribute the private data to.

This is similar to 'local collections', but with the following differences:
 * Each implicit collection has its own key namespace, while local collection has a single key namespace for all transactions
 * With implicit collection the members for any given key (asset) is forever fixed, while with local collections the key (asset) can later be transferred to different members
 * With implicit collection peers handle private data distribution, while with local collections clients have the responsibility to distribute private data

*Implicit org-specific collections (this epic):*

Implicit collections having a single org member is a special case that can be useful for storing ""org specific state"" in a variety of contexts. This org specific state can be used to provide human input to chaincode execution/endorsement for a certain key (asset).  Each org-specific collection has an implicit endorsement policy of the organization itself, so that any data in an org-specific collection can be guaranteed to have been endorsed by a peer of the associated organization. Each org can use their org-specific namespace to provide approval/voting instructions to chaincode for a certain key (asset). Examples include:
 * Provide chaincode with approval (or conditions to meet) prior to successful execution/endorsement of a key (asset) transfer
 * In the context of lifecycle system chaincode, provide lifecycle chaincode with metadata package approved by org, and only endorse chaincode deployment transactions that have a matching chaincode definition.

See charts attached to FAB-8812 for more information on collection types.

*This epic will target org-specific collections only.*",,angelo.decaro,baohua,daijianw,davidkhala,denyeart,elli-androulaki,geahaad,isaacwch,Jan_Rzepecki,jbsloan,jmason900,MichaelWang,mne,sheetal-hlf,SjirNijssen,troyronda,yacovm,ymlbright,zhaochy,zjubfd,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11237,,,,FAB-7593,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"Implemented and used in new v2.0 chaincode lifecycle, need to document for user chaincodes",,Required,,Required,,,Chaincode lifecycle - implicit org-specific collections (enables lifecycle 'voting'),,,,Required,,,,"1|hzzgdb:",,,,No,Not Required,,,,,,,,,,,,,,,,angelo.decaro,baohua,daijianw,davidkhala,denyeart,elli-androulaki,geahaad,isaacwch,Jan_Rzepecki,jbsloan,jmason900,MichaelWang,mne,sheetal-hlf,SjirNijssen,troyronda,yacovm,ymlbright,zhaochy,zjubfd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/20 3:03 PM;davidkhala;what the `local collections` mean? Is it the original private data collection or original State-based Endorsement over private data collection?;;;","19/Feb/20 5:48 AM;denyeart;[~davidkhala] Local collections is a different proposal for the future - see details at FAB-7593.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Update Policy Topic,FAB-10890,31412,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,odowdaibm,odowdaibm,27/Jun/18 9:56 PM,03/Dec/19 6:44 AM,28/Oct/23 3:03 AM,03/Dec/19 6:44 AM,v1.3.0,,,,,,,,v2.0.0,,,fabric-docs,,,,,0,,,,,,,"Update the policy topic for Architects,Operators and Application Developers",,denyeart,joe-alewine,n-horiguchi,odowdaibm,pandrejko,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtgv:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,joe-alewine,n-horiguchi,odowdaibm,pandrejko,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jun/18 9:56 PM;odowdaibm;Hello [~SjirNijssen];;;","27/Jun/18 10:46 PM;SjirNijssen;Fabric has a very powerful functionality for policies. It is a challenge to make this crystal clear to Fabric architects, administrators and application developers. 
I propose to prepare a use case where policies determined by the orgs of the Fabric network as well as policies imposed on the network subjects by government regulations both play a first class role.
I furthermore propose to use one or more testcases that are considered relevant by decision makers.;;;","24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","03/Dec/18 5:31 AM;pandrejko;I'm moving this to release 2.0 since it is unlikely this will be done by the doc cutoff of 12/4 for release 1.4;;;","03/Dec/19 6:43 AM;pandrejko;Content delivered here: https://hyperledger-fabric.readthedocs.io/en/latest/policies/policies.html
closing. ;;;",,,,,,,,,,,,,,,,,,,,,,
Peer discovery does not accept AcceptAllPolicy: Invalid policy,FAB-10891,31413,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,denniskuhnert,denniskuhnert,27/Jun/18 10:11 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,v1.2.0,,,,,,,,,,,fabric-peer,,,,,0,stale-item,,,,,,"For test purposes I was trying to use the {{cauthdsl.AcceptAllPolicy}} policy when instantiating my CC.

image tag: 1.2.0-rc1
channel: my-channel
cc: my-cc
cc-version: 1

{code:java}
AcceptAllPolicy = Envelope(NOutOf(0, []*cb.SignaturePolicy{}), [][]byte{})
{code}

peer log:
{code:java}
Invalid policy, either Identities([]) or Rule(n_out_of:<> ) are empty:
{code}

As a result the {{fabric-sdk-go}} (not related to this issue) returns
{code:java}
error getting channel response for channel [my-channel]: Discovery status Code: (11) UNKNOWN. Description: error received from Discovery Server: error getting endorsers from target [localhost:7051]: failed constructing descriptor for chaincodes:<name:\""my-cc\"" > ""
{code}

more peer logs:
{code:java}
2018-06-27 12:55:31.735 UTC [discovery] validateStructure -> DEBU 1545a Received request from 172.18.0.1:44948
2018-06-27 12:55:31.736 UTC [discovery/lifecycle] Metadata -> DEBU 1545b Returning metadata for channel my-channel , chaincode my-cc : {my-cc 1 […] […] []}
2018-06-27 12:55:31.737 UTC [discovery/lifecycle] Metadata -> DEBU 1545c Returning metadata for channel my-channel , chaincode my-cc : {my-cc 1 […] […] []}
2018-06-27 12:55:31.737 UTC [discovery/DiscoverySupport] PolicyByChaincode -> WARN 1545d Invalid policy, either Identities([]) or Rule(n_out_of:<> ) are empty:
2018-06-27 12:55:31.737 UTC [discovery/endorsement] computePrincipalSets -> DEBU 1545e Policy for chaincode ' name:""my-cc""  'doesn't exist
2018-06-27 12:55:31.737 UTC [discovery/endorsement] PeersForEndorsement -> WARN 1545f Principal set computation failed: policy not found
2018-06-27 12:55:31.737 UTC [discovery] chaincodeQuery -> ERRO 15460 Failed constructing descriptor for chaincode chaincodes:<name:""my-cc"" > ,: policy not found
2018-06-27 12:55:31.738 UTC [discovery] validateStructure -> DEBU 15461 Received request from 172.18.0.1:44948
2018-06-27 12:55:31.739 UTC [discovery/lifecycle] Metadata -> DEBU 15462 Returning metadata for channel my-channel , chaincode my-cc : {my-cc 1 […] […] []}
2018-06-27 12:55:31.739 UTC [discovery/lifecycle] Metadata -> DEBU 15463 Returning metadata for channel my-channel , chaincode my-cc : {my-cc 1 […] […] []}
2018-06-27 12:55:31.739 UTC [discovery/DiscoverySupport] PolicyByChaincode -> WARN 15464 Invalid policy, either Identities([]) or Rule(n_out_of:<> ) are empty:
2018-06-27 12:55:31.739 UTC [discovery/endorsement] computePrincipalSets -> DEBU 15465 Policy for chaincode ' name:""my-cc""  'doesn't exist
2018-06-27 12:55:31.739 UTC [discovery/endorsement] PeersForEndorsement -> WARN 15466 Principal set computation failed: policy not found
2018-06-27 12:55:31.739 UTC [discovery] chaincodeQuery -> ERRO 15467 Failed constructing descriptor for chaincode chaincodes:<name:""my-cc"" > ,: policy not found
2018-06-27 12:55:31.836 UTC [gossip/election] waitForInterrupt -> DEBU 15468 […] : Exiting
{code}",,denniskuhnert,denyeart,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzgdr:",,,,Unset,,,,,,Unset,,,,,,,,,,,denniskuhnert,denyeart,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jun/18 10:30 PM;denyeart;[~yacovm] Could you assess?;;;","27/Jun/18 11:57 PM;yacovm;Sure can, and [~denniskuhnert] here is right in the reason for this - the discovery policy parsing (by design) requires some principals to be present in the policy definition.

I'm not sure it's worthwhile to support this kind of policy though, because I think it's useless for testing purposes for application developers.
 An empty policy means that any client can create its own RWSet and send it to the orderer to be included in the block and then deemed valid by the validation in the peer.
 However - client's don't have any code that creates RWSets on their own, so why would they do that? Instead, for testing - what I think make sense is that the policy would be the default policy which is ""any member"" and this is translated to a signature policy that the discovery service can analyze.

[~denniskuhnert] - can you describe why you're using this policy for testing fabric?

 

Edit: For the meantime I changed this to a story, because to me - this isn't a bug as it works by design.;;;","28/Jun/18 1:30 AM;denniskuhnert;I agree that this is a bad policy :)

I just used it when writing the workflow and structure of my application. And this was a predefined policy which I wanted to change later.

Just wanted to let you know that this predefined policy is not accepted. Wouldn't have thought so. Maybe a hint to the user would be nice ;);;;","28/Jun/18 1:44 AM;yacovm;{quote}Maybe a hint to the user would be nice
{quote}

I think we can just document it in the [special requirements|https://hyperledger-fabric.readthedocs.io/en/latest/discovery-overview.html#special-requirements] section

The thing is - even if the discovery service would consider this policy to be valid, it would return an empty endorsement descriptor, since the smallest set of peers to endorse the policy is actually an empty set of peers, and then the SDK would pick an empty set of peers which is really odd and I'm sure that would fail the transactions in the SDKs, so without SDK support - there is no point in doing this on the server side.

Of course, what we could do in the discovery service is just translate an empty policy to a ""any member"" policy, which would solve the problem completely, but then someone can argue that the discovery service isn't sound because sending to some peer an endorsement isn't the minimal number of peers (which is zero).

I'd like to hear more opinions about whether it's worth to support an empty policy at all and what should be the approach... My opinion is that it's not worth addressing as I don't see a real world use case for that.

[~jyellick] , [~mastersingh24] , [~C0rWin] ,

 ;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare nightly jobs for master branch and publish 1.3.0-stable images,FAB-10896,31419,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,28/Jun/18 2:44 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,28/Jun/18 10:26 PM,,,,,,,,,,,,fabric-ci,,,,,0,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10068,,,,,,,,,"1|hzzgen:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/18 2:48 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23743/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
fail to bring up chaincode container,FAB-10899,31423,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,dongming,dongming,28/Jun/18 4:13 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,10/Jul/18 6:12 PM,,,,,,,,,v1.2.1,v1.3.0,,fabric-peer,,,,,0,,,,,,,"With fabric commit 9acd9cd,

network configuration:

     3 channels, 2 org per channel, toal 6 org, channel 1 has org 1 and 2, channel 2 have org 3 and 4, channel 3 has org 5 and 6

     2 peers per org, total 12 peers

after instantiate chaincode on peer0 org1, peer0 org3, perr0 org5.  Then, in 12 threads simultaneously, execute 1000 queries each, against all 12 peers at the same time, and we observed afterwards that no chaincode containers are created on some of the peers (where instantiation did not occur), while the docker images are up:

 

docker images:

dev-peer0.org4.example.com-sample_cc_ch2-v0-d82729688a91a7d96ade4174ec976285f85e998059961d2ad5241130eb7144b7 latest 03784cbfab5e 20 seconds ago 142MB
 dev-peer1.org3.example.com-sample_cc_ch2-v0-3178b19f4eed07389bb85356b71f900c586879053c8ba96e34849281e5d86949 latest f5bca38920e6 20 seconds ago 142MB
 dev-peer0.org6.example.com-sample_cc_ch3-v0-e7e49f786cab3fb6ef57b7cbb4c3ad86bfde41a1251d6acd8414fc252917ff69 latest c7ef2516616a 21 seconds ago 142MB
 dev-peer0.org2.example.com-sample_cc_ch1-v0-52a7467fa8e42ba684ebaac214a836f53b31da715d22e420dd7e2dfa0eb4b1d2 latest 47cdc960e106 21 seconds ago 142MB
 dev-peer1.org6.example.com-sample_cc_ch3-v0-e5107cc39b5b937c55718c9a0f35d86703ef723d5bf138f9f988e786d9186af3 latest 127a6a32999b 21 seconds ago 142MB
 dev-peer1.org4.example.com-sample_cc_ch2-v0-2475c7fcf8b8c8688030635a4ddc5fc2e17e15b099ba9ed0ad593d5572e9a535 latest 4ed0a22505a4 21 seconds ago 142MB
 dev-peer1.org1.example.com-sample_cc_ch1-v0-d029892e6a969c91ae28bef9d5f1a09ab5cb4e7f95362e71c3d89b1a0d438eb2 latest c7077862c0da 22 seconds ago 142MB
 dev-peer1.org2.example.com-sample_cc_ch1-v0-4702f059e78dcc157b65a573fd4a5b823a5726c32f078bbd7ac6f637adf8a84a latest f098f0f884dd 22 seconds ago 142MB
 dev-peer1.org5.example.com-sample_cc_ch3-v0-170a92884d9e1d04b8ef64540aff03cc849141f9cdbb484c486e1edd58ddb89e latest 055bdd4bc1da 24 seconds ago 142MB
 dev-peer0.org3.example.com-sample_cc_ch2-v0-eae61bb564d0d75ff05476df7ac3b4a019e6258a14dd40c44a80dbc2d1f82dc3 latest 407f4ab37cc1 5 minutes ago 142MB
 dev-peer0.org5.example.com-sample_cc_ch3-v0-7b4389dc667d19de9b84d6f8686f8e76b65c0c77220b9010df90de411a139d72 latest 49f5642d3e2d 5 minutes ago 142MB
 dev-peer0.org1.example.com-sample_cc_ch1-v0-6fbe04d12e1fad15771a4966a0db1c43d0d7aa7008ffa45d045704cf5cfe0d67 latest 2b639e5af564 5 minutes ago 142MB

 

chaincode containers (only the three created from instantiation):

6ca120cfdd18 dev-peer0.org3.example.com-sample_cc_ch2-v0-eae61bb564d0d75ff05476df7ac3b4a019e6258a14dd40c44a80dbc2d1f82dc3 ""chaincode -peer.add…"" 5 minutes ago Up 5 minutes dev-peer0.org3.example.com-sample_cc_ch2-v0
 dc70dc7b60a6 dev-peer0.org5.example.com-sample_cc_ch3-v0-7b4389dc667d19de9b84d6f8686f8e76b65c0c77220b9010df90de411a139d72 ""chaincode -peer.add…"" 5 minutes ago Up 5 minutes dev-peer0.org5.example.com-sample_cc_ch3-v0
 3c42e9bbf76c dev-peer0.org1.example.com-sample_cc_ch1-v0-6fbe04d12e1fad15771a4966a0db1c43d0d7aa7008ffa45d045704cf5cfe0d67 ""chaincode -peer.add…"" 5 minutes ago Up 5 minutes dev-peer0.org1.example.com-sample_cc_ch1-v0

 

 Wait for 30 min and the chaincode containers are still not up.

Then send queries to all peers again, and the chaincode containers come up.

 ",,denyeart,dongming,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/18 4:18 AM;dongming;peer0.org1.zip;https://jira.hyperledger.org/secure/attachment/15187/peer0.org1.zip","28/Jun/18 4:18 AM;dongming;peer1.org1.zip;https://jira.hyperledger.org/secure/attachment/15188/peer1.org1.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgfj:",,,,,,,,,,,,,,,,,,,,,denyeart,dongming,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Jun/18 10:10 PM;denyeart;[~dongming] Did the queries actually work on all the peers?  That is, is there a symptom from user perspective?

I'm trying to understand how queries could work if there was no chaincode container up... or do you suspect it was up for the queries but then went down?

Also, have you noticed any change in behavior between releases?  Or is this simply a new test?;;;","06/Jul/18 2:28 AM;sykesm;First chaincode invocation arrives at 18:58:49.554 and initiates the image build and container creation and completes at 19:01:54.575.
{code:java}
[36m2018-06-27 18:58:49.554 UTC [chaincode] func1 -> DEBU 140d[0m chaincode sample_cc_ch1:v0 is being launched
...
[36m2018-06-27 19:01:54.575 UTC [dockercontroller] deployImage -> DEBU 256d7[0m Created image: dev-peer1.org1.example.com-sample_cc_ch1-v0-d029892e6a969c91ae28bef9d5f1a09ab5cb4e7f95362e71c3d89b1a0d438eb2
{code}
During those 3 minutes, it appears the client that initiated the transaction that caused the chaincode to launch went away. During those same 3 minutes, 2000 requests to invoke the chaincode failed.

This is a problem as the context from the grpc stream handler has been propagated all the way to the container launcher and when the client goes, the context is canceled. When the context it canceled, it doesn't actually stop the image build and container create process but it does ensure that they fail.

So, what we see (and I don't think this is any different from 1.1) is that the image is successfully created, the container is started, and then the container is immediately stopped. We also see that while the container is starting, all transactions that require the chaincode are bounced while the container is starting - instead of queuing them up.

1.1: [https://github.com/hyperledger/fabric/blob/ff5e861deba7b394ed1aaaa85f9220c4677dc6ff/core/container/controller.go#L259-L266]
 1.2: [https://github.com/hyperledger/fabric/blob/77c3aa6ce5b0cfba93bfda009095886dbcadff91/core/container/controller.go#L188-L194];;;","06/Jul/18 2:33 AM;sykesm;To be clear, with the logs that were provided, the container *did* start on org1.peer1. After it was up, it was explicitly stopped due to how the container controller handled context errors.

As for the two issues, the fact that transactions fail while chaincode is starting is a long standing issue. Addressing it should be treated as an _improvement_. The way the context error is currently handled is a *bug*.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Prepare for fabric 1.3.0 development release,FAB-10900,31424,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,28/Jun/18 4:26 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,10/Jul/18 10:30 PM,v1.3.0,,,,,,,,v1.3.0,,,fabric-build,,,,,0,,,,,,,"Prepare for  fabric 1.3.0 development release

Update BASE_VERSION and PREV_VERSION accordingly",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyksv:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/18 4:55 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23761/;;;","10/Jul/18 10:29 PM;rameshthoomu;This change has been abandoned and pushed another patchset to fix this https://gerrit.hyperledger.org/r/#/c/23975/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Prepare for fabric-ca 1.3.0 development release,FAB-10901,31425,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rameshthoomu,rameshthoomu,28/Jun/18 4:27 AM,24/Sep/18 9:34 AM,28/Oct/23 3:03 AM,24/Sep/18 9:34 AM,v1.3.0,,,,,,,,v1.3.0,,,fabric-build,,,,,0,,,,,,,Prepare for fabric-ca 1.3.0 development release. Update BASE_VERSION and PREV_VERSION in makefile,,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyksn:",,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","24/Sep/18 9:34 AM;denyeart;Done in https://gerrit.hyperledger.org/r/#/c/23979/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
PTE validates invoke on peers,FAB-10903,31428,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,28/Jun/18 4:48 AM,03/Aug/18 12:36 AM,28/Oct/23 3:03 AM,02/Aug/18 10:14 PM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"PTE validates invokes on peers:

- all peers

- all invokes vs the last invoke",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11447,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzgfz:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"25/Jul/18 4:00 AM;dongming;https://gerrit.hyperledger.org/r/#/c/24723/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Parametrize Stable and commit versions in pulldockerimages.sh,FAB-10907,31433,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,28/Jun/18 10:16 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,29/Jun/18 4:54 AM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,,,,,,,"Parametrize Stable and commit versions in pulldockerimages.sh. When trigger a PTE or SVT job from Jenkins, user should be able to trigger with Release commit and stable image version.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyks7:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"28/Jun/18 12:45 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23771/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
[dep] dep init -v error for missing package,FAB-10908,31435,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,davidkhala,davidkhala,28/Jun/18 1:02 PM,01/Dec/18 8:27 PM,28/Oct/23 3:03 AM,01/Dec/18 8:27 PM,v1.2.0,,,,,,,,,,,fabric-build,,,,,0,,,,,,,"I try to use dep as my chaincode vendor manager tool, then I init with

`dep init -v`

when dep is searching for best matching version,

 try github.com/hyperledger/fabric@v1.2.0-rc1
(2)     ✗   package github.com/hyperledger/fabric/common/resourcesconfig does not exist within project github.com/hyperledger/fabric

Then I tried to delete fabric source under my GOPATH, then rerun dep init -v,

Another error occurs as attached log file","go version go1.9.2 linux/amd64

dep:
 version     : v0.4.1
 build date  : 2018-01-24
 git hash    : 37d9ea0a
 go version  : go1.9.1
 go compiler : gc
 platform    : linux/amd64

 

Docker version 17.12.1-ce, build 7390fc6

 ",davidkhala,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/18 1:01 PM;davidkhala;log3;https://jira.hyperledger.org/secure/attachment/15189/log3",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgh3:",,,,,,,,,,,,,,,,,,,,,davidkhala,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Aug/18 8:30 PM;denyeart;[~mastersingh24] I know you've got some experience with dep, what do you think?;;;","01/Sep/18 12:48 PM;davidkhala;Currently, I retry dep init and found the error disappear. Close it for now;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Invoke command sometimes take too much time.,FAB-10909,31436,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Invalid: Environment Issue,jyellick,pankajcheema,pankajcheema,28/Jun/18 1:06 PM,21/Aug/18 8:49 PM,28/Oct/23 3:03 AM,21/Aug/18 8:49 PM,v1.1.0,,,,,,,,,,,,,,,,1,,,,,,,"Invoke command is taking too much time in my network. you can check the response time in the postman screenshot attached
[Screenshot|https://chat.hyperledger.org/file-upload/R9YNNps95rCJ9MeLe/login.png]
As you can see the response time is over 7.5 seconds

Right now I can see from logs a process is taking around 7 seconds
please find the logs on [Logs|https://pastebin.com/JxEh6pn1]
and check line time difference between line 118 & 119 

=====================================================================

UPDATE:
As requested by Jason Yellick, I am updating this to attach the Orderer, Peers logs & chaincode function executed at that time.

Please note: It took 17 seconds for a transaction and it was a simple write operation.
The systems are connected using LAN and locally within the organization.

*Orderer Logs* ===> https://hastebin.com/eberafirac.bash
*Peers Logs* ===> https://hastebin.com/gowajocutu.md
*Chaincode Function that was executed* ===> https://hastebin.com/hihusepoqa.sql


Postman Screenshot !hyp.png|thumbnail! 



I tried to use invoke command using peer chaincode invoke and it responded within 1 second.
*Peer Invoke Logs* ==> https://hastebin.com/evajikijor.pl

We are using Fabric v1.1

The Fabric SDK code can be found here : https://github.com/debutdeveloper/fabric_sdk_api",Ubuntu 16.04 LTS 64 Bit,denyeart,gsqtds,jyellick,mastersingh24,pankajcheema,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/18 7:09 PM;pankajcheema;hyp.png;https://jira.hyperledger.org/secure/attachment/15365/hyp.png","28/Jun/18 1:06 PM;pankajcheema;login.png;https://jira.hyperledger.org/secure/attachment/15190/login.png",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzghb:",,,,,,,,,,,,,,,,,,,,,denyeart,gsqtds,jyellick,mastersingh24,pankajcheema,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/18 1:38 PM;mastersingh24;[~pankajcheema]  - not quite sure what you are asking for here?  ;;;","01/Jul/18 1:18 PM;pankajcheema;Gari Singh - Actually I am trying to use invoke command. But invoke command takes 5-6 seconds everytime. If I restart the system, clear everything,it works fine then. This issue occurs randomly. I can not clear everything on a live system. I am trying to figure out what is wrong. I have attached the logs. Did you read that!? You can see a process is taking almost 5 seconds. ;;;","02/Jul/18 10:53 PM;jyellick;The actual invocation is completing in a timely fashion.  Most likely, this is batch timeout related.  Can you please post orderer logs for the same time at debug?;;;","03/Jul/18 1:39 PM;pankajcheema;The batch timeout is 1s. It should not take 7 seconds.;;;","03/Jul/18 11:18 PM;jyellick;[~pankajcheema] You've opened this issue as a bug, which would imply that you believe the system is not working like it should.  If that's the case, then perhaps the batch timeout is not being respected.  If you believe that the system is working as it should, and you are simply looking for help configuring your application, then a JIRA bug is the wrong venue.

Regardless, the log from the peer CLI, and a screenshot is insufficient data to determine the root cause of your problem.  To determine where in the system the transaction is spending the 7 seconds, please provide the orderer logs at debug (as previously requested).  Additionally, the peer logs at debug would also be helpful.;;;","09/Jul/18 12:00 AM;pankajcheema;[~jyellick] You can find the peer logs @ https://pastebin.com/JxEh6pn1. This issue occurs when we set up the network on physical nodes. I didn't know that you require orderer logs for it. I will try to up the physical nodes as soon as possible and will post the orderer logs here.;;;","09/Jul/18 2:12 PM;pankajcheema;[~jyellick] This does not happens when using docker. This happens only when you setup each node on a separate machine using peer, orderer binaries that can be found in /github.com/hyperledger/fabric/build/docker/bin and kafka, zookeepers from apache kafka. 

I can see we have two bin dirs. One can be found in /github.com/hyperledger/fabric/build/docker/bin & other can be found in /github.com/hyperledger/fabric/build/bin.

We are using docker/bin.

And for the orderer logs, right now we are woking on docker but we will post the orderer logs as soon as we start working with physical nodes i.e network of 13 systems.

;;;","24/Jul/18 7:38 PM;pankajcheema;[~jyellick] Description updated. Logs attached;;;","24/Jul/18 11:35 PM;jyellick;Based on the logs you provided:

{noformat}
2018-07-24 15:29:51.946 IST [couchdb] handleRequest -> DEBU 2c2a HTTP Request: GET /assetchain_lscc/assetchaincode?attachments=true HTTP/1.1 | Host: couchdb:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Authorization: Basic YWRtaW46YWRtaW4= | Accept-Encoding: gzip |  | 
2018-07-24 15:29:56.955 IST [couchdb] handleRequest -> DEBU 2c2b Exiting handleRequest()
{noformat}

The bulk of the time for your request (5 seconds worth) is being spent in this couchdb query.  This query is to lookup the chaincode definition for your chaincode as defined in the lifecycle table.  Note, this same request is done again later:

{noformat}
2018-07-24 15:30:04.213 IST [couchdb] handleRequest -> DEBU 2d2b HTTP Request: POST /assetchain_lscc/_all_docs?include_docs=true HTTP/1.1 | Host: couchdb:5984 | User-Agent: Go-http-client/1.1 | Content-Length: 27 | Accept: application/json | Authorization: Basic YWRtaW46YWRtaW4= | Content-Type: application/json | Accept-Encoding: gzip |  | 
2018-07-24 15:30:04.215 IST [couchdb] handleRequest -> DEBU 2d2c Exiting handleRequest()
{noformat}

but this time with much less time spent.  Based on this, it seems to me like the source of your slowness has something to do with your couchdb configuration.  Because the first request is very slow, but subsequent requests are fast, perhaps this is related to the process being paged out, some IO storage which must spin up, or similar.  You might try directly querying couchdb to perform your own profiling of the process without Fabric involved.;;;","25/Jul/18 3:33 PM;pankajcheema;[~jyellick] as per our conversation, I have changed the couchdb system. The new configuration is i5 Processor, 8GB ram Ubuntu 64bit 16.04 LTS. But still same delay. Couchdb is slow with fabric why? Why couchdb is not working properly with Hyperledger Fabric. 

New Logs: new peer logs https://hastebin.com/ezihededuq.md
new orderer logs: https://hastebin.com/enebuxuval.coffeescript;;;","26/Jul/18 4:46 AM;jyellick;Discussed offline, but I do not believe this is a Fabric issue.  The HTTP request is logged in the peer, and the response is quite slow.  I suggest debugging with curl from the peer machine to the couchdb machine.;;;","21/Aug/18 8:48 PM;denyeart;The slow query is a simple keyed lookup in couchdb.  There is nothing Fabric specific about a slow couchdb keyed lookup - the same problem would happen when using any client against this environment. I suggest to troubleshoot the query using a curl client instead of Fabric client, and open an issue in CouchDB jira if you believe the problem is related to CouchDB rather than your environment.

Since there is nothing Fabric can do about a slow CouchDB query, I will close the Bug from Fabric jira perspective.;;;",,,,,,,,,,,,,,,
Fabric - UT fabric/core/container/dockercontroller Failure,FAB-10911,31441,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harsha544,harsha544,harsha544,28/Jun/18 6:42 PM,19/Mar/19 8:12 PM,28/Oct/23 3:03 AM,10/Jul/18 8:24 PM,,,,,,,,,v1.3.0,,,fabric-build,fabric-ci,,,,0,ci-failure,,,,,,"UT *fabric/core/container/dockercontroller consistantly* fails 

{color:#333333}=== RUN Test_Start 2018-06-23 02:50:11.980 UTC [dockercontroller] {color}{color:#333333}Start{color}{color:#333333} -> ERRO {color}{color:#008080}001{color} {color:#333333}start{color}{color:#333333}-could {color}{color:#333333}not{color}{color:#333333} recreate {color}{color:#333333}container{color}{color:#333333} <simple>, because {color}{color:#333333}of{color} {color:#333333}Error{color}{color:#333333} creating the {color}{color:#333333}container{color} {color:#008080}2018{color}{color:#008080}-06{color}{color:#008080}-23{color} {color:#008080}02{color}{color:#333333}:{color}{color:#008080}50{color}{color:#333333}:{color}{color:#008080}11.980{color}{color:#333333} UTC [dockercontroller] {color}{color:#333333}Start{color}{color:#333333} -> ERRO {color}{color:#008080}002{color} {color:#333333}start{color}{color:#333333}-could {color}{color:#333333}not{color}{color:#333333} find image <simple-a7a39b72f29718e653e73503210fbb597057b7a1c77d1fe321a1afcff041d4e1>, because {color}{color:#333333}of{color} {color:#333333}no{color}{color:#333333} such image {color}{color:#008080}2018{color}{color:#008080}-06{color}{color:#008080}-23{color} {color:#008080}02{color}{color:#333333}:{color}{color:#008080}50{color}{color:#333333}:{color}{color:#008080}13.197{color}{color:#333333} UTC [dockercontroller] {color}{color:#333333}Start{color}{color:#333333} -> ERRO {color}{color:#008080}003{color} {color:#333333}start{color}{color:#333333}-could {color}{color:#333333}not{color} {color:#333333}start{color} {color:#333333}container{color}{color:#333333}: {color}{color:#333333}Error{color} {color:#333333}starting{color}{color:#333333} the {color}{color:#333333}container{color} {color:#999988}--- PASS: Test_Start (1.22s){color}{color:#333333} === RUN Test_Stop {color}{color:#999988}--- PASS: Test_Stop (0.00s){color}{color:#333333} === RUN TestGetVMNameForDocker {color}{color:#999988}--- PASS: TestGetVMNameForDocker (0.00s){color}{color:#333333} === RUN TestGetVMName {color}{color:#999988}--- PASS: TestGetVMName (0.00s){color}",,harsha544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10778,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgin:",,,,,,,,,,,,,,,,,,,,,harsha544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/18 1:16 AM;harsha544;Per [~muralisr] suggestion introducing a delay to retain the container for a somemore time allowed +*func Stop*+ to stop the container, hence UT was passing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
TestPluginLoadingFailure fails on MacOS #2,FAB-10912,31445,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,28/Jun/18 11:27 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,06/Jul/18 12:09 AM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"{code:java}
--- FAIL: TestPluginLoadingFailure (2.89s)
    --- FAIL: TestPluginLoadingFailure/ENDORSERS_ESCC (0.07s)
        Error Trace:    main_test.go:45
    Error:      ""2018-06-28 10:26:21.279 EDT [nodeCmd] serve -> INFO 001 Starting peer:
    	           	Version: latest
    	           	Commit SHA: development build
    	           	Go version: go1.10.3
    	           	OS/Arch: darwin/amd64
    	           	Experimental features: true
    	           	Chaincode:
                  Base Image Version: 0.4.8
                  Base Docker Namespace: hyperledger
                  Base Docker Label: org.hyperledger.fabric
                  Docker Namespace: hyperledger
    	           
                2018-06-28 10:26:21.279 EDT [ledgermgmt] initialize -> INFO 002 Initializing ledger mgmt
                2018-06-28 10:26:21.279 EDT [kvledger] NewProvider -> INFO 003 Initializing ledger provider
                panic: Error while trying to create dir if missing: mkdir /var/hyperledger: permission denied
    	           
                goroutine 1 [running]:
                github.com/hyperledger/fabric/common/ledger/util/leveldbhelper.(*DB).Open(0xc420037c00)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/common/ledger/util/leveldbhelper/leveldb_helper.go:84 +0x2dc
                github.com/hyperledger/fabric/core/ledger/kvledger.openIDStore(0xc4200b5a80, 0x36, 0x1)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:250 +0x11d
                github.com/hyperledger/fabric/core/ledger/kvledger.NewProvider(0x4a5cf80, 0x0, 0x0, 0x0)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:60 +0x8e
                github.com/hyperledger/fabric/core/ledger/ledgermgmt.initialize(0xc420031650, 0x0, 0x0, 0x0)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:65 +0x26f
                github.com/hyperledger/fabric/core/ledger/ledgermgmt.Initialize.func1()
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:52 +0x3b
                sync.(*Once).Do(0x52b1220, 0xc4204a55d0)
                /usr/local/Cellar/go/1.10.3/libexec/src/sync/once.go:44 +0xbe
                github.com/hyperledger/fabric/core/ledger/ledgermgmt.Initialize(0xc420031650)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:51 +0x4d
                github.com/hyperledger/fabric/peer/node.serve(0x52b1128, 0x0, 0x0, 0x0, 0x0)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/peer/node/start.go:153 +0x34d
                github.com/hyperledger/fabric/peer/node.glob..func1(0x526dde0, 0x52b1128, 0x0, 0x0, 0x0, 0x0)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/peer/node/start.go:111 +0x9c
                github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0x526dde0, 0x52b1128, 0x0, 0x0, 0x526dde0, 0x52b1128)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:698 +0x46d
                github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x526e440, 0x5293790, 0xf, 0x8)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:783 +0x2e4
                github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x526e440, 0x8, 0xffffffffffffffff)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:736 +0x2b
                main.main()
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/peer/main.go:97 +0x5bf
                "" does not contain ""panic: Error opening plugin at path testdata/invalid_plugins/invalidplugin.so""
    Test:       TestPluginLoadingFailure/ENDORSERS_ESCC
        Error Trace:    main_test.go:46
    Error:      ""2018-06-28 10:26:21.279 EDT [nodeCmd] serve -> INFO 001 Starting peer:
    	           	Version: latest
    	           	Commit SHA: development build
    	           	Go version: go1.10.3
    	           	OS/Arch: darwin/amd64
    	           	Experimental features: true
    	           	Chaincode:
                  Base Image Version: 0.4.8
                  Base Docker Namespace: hyperledger
                  Base Docker Label: org.hyperledger.fabric
                  Docker Namespace: hyperledger
    	           
                2018-06-28 10:26:21.279 EDT [ledgermgmt] initialize -> INFO 002 Initializing ledger mgmt
                2018-06-28 10:26:21.279 EDT [kvledger] NewProvider -> INFO 003 Initializing ledger provider
                panic: Error while trying to create dir if missing: mkdir /var/hyperledger: permission denied
    	           
                goroutine 1 [running]:
                github.com/hyperledger/fabric/common/ledger/util/leveldbhelper.(*DB).Open(0xc420037c00)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/common/ledger/util/leveldbhelper/leveldb_helper.go:84 +0x2dc
                github.com/hyperledger/fabric/core/ledger/kvledger.openIDStore(0xc4200b5a80, 0x36, 0x1)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:250 +0x11d
                github.com/hyperledger/fabric/core/ledger/kvledger.NewProvider(0x4a5cf80, 0x0, 0x0, 0x0)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:60 +0x8e
                github.com/hyperledger/fabric/core/ledger/ledgermgmt.initialize(0xc420031650, 0x0, 0x0, 0x0)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:65 +0x26f
                github.com/hyperledger/fabric/core/ledger/ledgermgmt.Initialize.func1()
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:52 +0x3b
                sync.(*Once).Do(0x52b1220, 0xc4204a55d0)
                /usr/local/Cellar/go/1.10.3/libexec/src/sync/once.go:44 +0xbe
                github.com/hyperledger/fabric/core/ledger/ledgermgmt.Initialize(0xc420031650)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:51 +0x4d
                github.com/hyperledger/fabric/peer/node.serve(0x52b1128, 0x0, 0x0, 0x0, 0x0)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/peer/node/start.go:153 +0x34d
                github.com/hyperledger/fabric/peer/node.glob..func1(0x526dde0, 0x52b1128, 0x0, 0x0, 0x0, 0x0)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/peer/node/start.go:111 +0x9c
                github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0x526dde0, 0x52b1128, 0x0, 0x0, 0x526dde0, 0x52b1128)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:698 +0x46d
                github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x526e440, 0x5293790, 0xf, 0x8)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:783 +0x2e4
                github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x526e440, 0x8, 0xffffffffffffffff)
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:736 +0x2b
                main.main()
                /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/peer/main.go:97 +0x5bf
                "" does not contain ""plugin.Open""
    Test:       TestPluginLoadingFailure/ENDORSERS_ESCC{code}",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10349,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgj3:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jun/18 5:03 AM;sykesm;https://gerrit.hyperledger.org/r/23829;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
peers are unable to fetch the blocks when one of the orderer goes down,FAB-10913,31446,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Ratnakar,Ratnakar,28/Jun/18 11:49 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,29/Jun/18 2:14 AM,v1.2.0,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,quality,,,,,,"*+Network Topology+*: 
 Use the same network topology as *e2e_cli example*, except that used *3 orderers* instead of one orderer.
{panel}
_Step 1:_ Perform the following actions using *Orderer0*
 * Check for orderering service availability
 * Create Channel
 * Update Anchor Peers of both the Orgs.

_Step 2:_ Instantiate the chaincode on Org2 Peer0 , use *Orderer1*

_Step 3:_ Query the chaincode on Org1 Peer0 (Tryout 120 secs)

_Step 4:_ Invoke the chaincode on Org1 Peer0, use *Orderer2*
{panel}
*Testcase Descrption:*
 _+Case 1+ :_
{panel}
 * Execute Step 1
 * Execute Step 2
 * *Kill Orderer0* and wait for 20 secs
 * Execute Step 3

_+Expected Result+:_ State Transfer should happen (fetch block from available orderer) , a chaincode container should be launched and query should be successful


 _+Actual Result+:_ Fails with the following errors
{code:java}
Error: endorsement failure during query. response: status:500 message:""make sure the chaincode mycc has been successfully instantiated and try again: getccdata mychannel/mycc responded with error: could not find chaincode with name 'mycc'""
{code}
{panel}
 
 _+Case 2+ :_
{panel}
 * Execute Step 1
 * Execute Step 2
 * Execute Step 3
 * *Kill Orderer0* and wait for 20 secs
 * Execute Step 4
 * Execute Step 3 *again*

_+Expected Result+:_ State Transfer should happen (fetch block from available orderer) , a and query should be successful with value *90*.


 +_Actual Result:_+ Fails with query result as *100*
{panel}
Logs for case1 and case2 are enclosed [^case1_case2_logs.zip] , 
 cli container logs for [^case1.txt] & [^case2.txt]",,Ratnakar,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/18 11:47 PM;Ratnakar;case1.txt;https://jira.hyperledger.org/secure/attachment/15198/case1.txt","28/Jun/18 11:44 PM;Ratnakar;case1_case2_logs.zip;https://jira.hyperledger.org/secure/attachment/15199/case1_case2_logs.zip","28/Jun/18 11:47 PM;Ratnakar;case2.txt;https://jira.hyperledger.org/secure/attachment/15197/case2.txt","29/Jun/18 12:28 AM;Ratnakar;e2e_cli.zip;https://jira.hyperledger.org/secure/attachment/15200/e2e_cli.zip",,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgjb:",,,,,,,,,,,,,,,,,,,,,Ratnakar,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/18 12:11 AM;Ratnakar;Further the logs indicates that peer is failed to connect to any of the orderers
{code:java}
2018-06-28 15:06:40.067 UTC [ConnProducer] NewConnection -> ERRO 02c Failed connecting to orderer1.example.com:8050 , error: context deadline exceeded
2018-06-28 15:06:43.069 UTC [ConnProducer] NewConnection -> ERRO 02d Failed connecting to orderer2.example.com:9050 , error: context deadline exceeded
2018-06-28 15:06:43.200 UTC [gossip/gossip] learnAnchorPeers -> INFO 02e Anchor peer with same endpoint, skipping connecting to myself
2018-06-28 15:06:43.217 UTC [kvledger] CommitWithPvtData -> INFO 02f Channel [mychannel]: Committed block [1] with 1 transaction(s)
2018-06-28 15:06:45.645 UTC [gossip/gossip] learnAnchorPeers -> INFO 030 Anchor peer with same endpoint, skipping connecting to myself
2018-06-28 15:06:45.679 UTC [kvledger] CommitWithPvtData -> INFO 031 Channel [mychannel]: Committed block [2] with 1 transaction(s)
2018-06-28 15:06:49.670 UTC [gossip/comm] authenticateRemotePeer -> WARN 032 Failed reading messge from 172.18.0.7:47266, reason: Timed out waiting for connection message from 172.18.0.7:47266
2018-06-28 15:06:49.670 UTC [gossip/comm] GossipStream -> ERRO 033 Authentication failed: Timed out waiting for connection message from 172.18.0.7:47266

....

2018-06-28 15:06:50.734 UTC [lscc] executeInstall -> INFO 036 Installed Chaincode [mycc] Version [1.0] to peer
2018-06-28 15:07:06.682 UTC [deliveryClient] try -> WARN 037 Got error: rpc error: code = Unavailable desc = transport is closing , at 1 attempt. Retrying in 1s
2018-06-28 15:07:10.686 UTC [ConnProducer] NewConnection -> ERRO 038 Failed connecting to orderer1.example.com:8050 , error: context deadline exceeded
2018-06-28 15:07:13.689 UTC [ConnProducer] NewConnection -> ERRO 039 Failed connecting to orderer2.example.com:9050 , error: context deadline exceeded
2018-06-28 15:07:16.696 UTC [ConnProducer] NewConnection -> ERRO 03a Failed connecting to orderer0.example.com:7050 , error: context deadline exceeded
2018-06-28 15:07:16.696 UTC [deliveryClient] connect -> ERRO 03b Failed obtaining connection: Could not connect to any of the endpoints: [orderer1.example.com:8050 orderer2.example.com:9050 orderer0.example.com:7050]
2018-06-28 15:07:16.696 UTC [deliveryClient] try -> WARN 03c Got error: Could not connect to any of the endpoints: [orderer1.example.com:8050 orderer2.example.com:9050 orderer0.example.com:7050] , at 2 attempt. Retrying in 2s

{code};;;","29/Jun/18 12:29 AM;Ratnakar;Uploaded the modified scripts [^e2e_cli.zip]  to reproduce the issue.

 

When you see the following log in *cli* container, make sure to stop the *orderer0.example.com* container
{code:java}
============= >>>> docker stop orderer0.example.com <<<< ============
{code};;;","29/Jun/18 1:02 AM;wlahti;FYI for anyone looking at this JIRA, I'm looking into this and hoping to reproduce it using the integration runners. I'm not assigning it to myself yet just in case anybody else comes along and thinks they know what might be going on.;;;","29/Jun/18 2:14 AM;Ratnakar;Apologies for the false alarm.

This is a test configuartion issue. 

From the logs it is observed that peer is trying to connect to the orderers with *wrong ports*
{code}
[deliveryClient] try -> WARN 03c Got error: Could not connect to any of the endpoints: [orderer1.example.com:8050 orderer2.example.com:9050 orderer0.example.com:7050] , at 2 attempt. Retrying in 2s
{code}

the section in configtx.yaml was having wrong ports

{code}
    Addresses:
        - orderer0.example.com:7050
        - orderer1.example.com:8050
        - orderer2.example.com:9050
{code}

After correction to the ports as following , the *case1* and *case2* executed successfully without any failures.
{code}
    Addresses:
        - orderer0.example.com:7050
        - orderer1.example.com:7050
        - orderer2.example.com:7050
 {code}

As the tests are executed as expected and this is a test configuration issue . Closing the issue.
;;;",,,,,,,,,,,,,,,,,,,,,,,
Transaction simulator should provide simulation block height,FAB-10914,31449,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,manish-sethi,denyeart,denyeart,29/Jun/18 12:41 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-ledger,,,,,0,stale-item,,,,,,"Transaction simulator should provide simulation block height.

In v1.2, the endorser gets the simulation height separately, and passes it with the private data dissemination and to transient store (where the block height information is used for purging decisions). It would be better if the transaction simulator provides the block height.

For more details see:

https://gerrit.hyperledger.org/r/#/c/23767",,denyeart,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10264,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5108,,,,,,,,,"1|hzwtok:i",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
System Behave Framework: Only include cert and key files when necessary,FAB-10920,31455,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,latitiah,latitiah,latitiah,29/Jun/18 1:42 AM,30/Jul/19 11:48 AM,28/Oct/23 3:03 AM,30/Jul/19 11:48 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"When using the NodeSDK (and future SDKs) only supply the certificate files when needed in a TLS or mutual TLS enabled network.
",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10921,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgkv:",,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"30/Jul/19 11:48 AM;mastersingh24;No activity for around  a year .... cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE fix to getNewCryptoKeyStore before create new client orderer object,FAB-10921,31456,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,scottz,scottz,29/Jun/18 1:46 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,29/Jun/18 4:13 AM,v1.2.0,,,,,,,,v1.3.0,,,fabric-quality,,,,,0,quality,,,,,,"Look in pte-main during createAndUpdateOneChannel and joinChannel and other functions.

 
This is to fix the logical flow of things. It relates to the following error msg, which is seen now at end of v.12 when create a channel:

{quote}info: [PTE 0 util]: [getTLSCert] key: orderer, subkey: orderer0
(node:11406) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): Error: A crypto suite has not been assigned to this client
(node:11406) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code
(node:11406) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): Error: A crypto suite has not been assigned to this client
{quote}

Comments/suggestions from Rajesh:

FAB-10135 SideDB - CouchDB Performance Test: Concurrent Operation Invoke and Query, 2 orgs, 1 channel.

1. This test needed AnchorPeer setup from PTE. The changes we submitted for pte-main.js for some reason wasn't working and getting failure in create/join channel with error
 ```(node:11343) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): Error: A crypto suite has not been assigned to this client``` 
To fix this I had to move clientNewOrderer/chainAddOrderer further down in create/join channel function in pte-main.js just before the sending call. This fixed it.

2. Later to add the update channel call to preconfig, this needs changes in scripts/test_channel.sh
 ```+echo ""[$0] update channel""
+echo "" ./pte_driver.sh CITest/$PrecfgDir/preconfig/channels/runCases-chan-update-TLS.txt""
+
+ runUpdate=`ls CITest/$PrecfgDir/preconfig/channels/runCases*update*`
+ echo ""runUpdate $runUpdate""
+ for ri in $runUpdate; do
+ echo ""./pte_driver.sh $ri""
+ ./pte_driver.sh $ri
+ sleep 60s
+ done
+```
This runs the update channel to set Anchor peers.

3. To achieve concurrency for invokes and queries.. under Query copied invokes json and set start index higher than first run of invokes. Run invokes and Queries concurrent
 ```ibmadmin@SDBPTE2:/opt/gopath/src/github.com/hyperledger/fabric-test/tools/PTE/CITest/FAB-10135-4q/marbles02_private$ more PTEMgr-FAB-10135-4q-TLS.txt
driver=pte CITest/FAB-10135-4q/marbles02_private/runCases-FAB-10135-4i1-TLS.txt
driver=pte CITest/FAB-10135-4q/marbles02_private/runCases-FAB-10135-4q1-TLS.txt```
This made truly concurrent and could see some dip in TPS. @Scott Zwierzynski I will submit patch for the FAB by Tomorrow for now I will continue with CHAOS testing

 ",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-555,FAB-10920,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzzgl3:",,,,,,,,,,,,,,,,,,,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"29/Jun/18 2:48 AM;dongming;https://gerrit.hyperledger.org/r/#/c/23821/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Fix docs having ""byfn.sh -m <mode>"", should to be ""byfn.sh <mode>",FAB-10922,31458,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,yuki-kon,yuki-kon,yuki-kon,29/Jun/18 2:35 AM,25/Jul/18 5:33 AM,28/Oct/23 3:03 AM,25/Jul/18 5:33 AM,v1.2.0,,,,,,,,v1.3.0,,,fabric-docs,,,,,0,,,,,,,"Some new documents added for v1.2 have unnecessary ""-m"" mode flag to explain the usage of byfn.sh.
These references should be removed.
 
(Should be fixed)
./docs/source/couchdb_tutorial.rst
./docs/source/private_data_tutorial.rst
",,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9913,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzglb:",,,,,,,,,,,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jun/18 2:51 AM;yuki-kon;CR is posted here. https://gerrit.hyperledger.org/r/#/c/23823/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
event server can panic during shutdown,FAB-10923,31462,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,sykesm,sykesm,29/Jun/18 4:37 AM,13/Sep/18 12:37 AM,28/Oct/23 3:03 AM,13/Sep/18 12:37 AM,v1.2.0,,,,,,,,,,,,,,,,0,,,,,,,"Recent changes in the event producer can cause a panic.

[https://github.com/hyperledger/fabric/blob/63b1abe4eec5863a1c60f02b2f116168a3474377/events/producer/events.go#L91] ranges over the event processor's eventChannel. That keeps the loop running as long as the channel remains open.

As soon as the channel closes, the deferred function at [https://github.com/hyperledger/fabric/blob/63b1abe4eec5863a1c60f02b2f116168a3474377/events/producer/events.go#L89] will then close the eventChannel [https://github.com/hyperledger/fabric/blob/63b1abe4eec5863a1c60f02b2f116168a3474377/events/producer/events.go#L166-L168].

Closing a closed channel will panic.

/cc [~wlahti]",,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzglj:",,,,,,,,,,,,,,,,,,,,,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/18 5:12 AM;wlahti;master: [https://gerrit.hyperledger.org/r/c/23839]

-I think this should be cherry-picked to release-1.2.- Nevermind, I tested with the docker images thinking we'd see a panic in the logs every time a peer shuts down but that isn't the case. We can simply fix this in master.;;;","10/Jul/18 4:01 AM;wlahti; https://gerrit.hyperledger.org/r/c/23839;;;","20/Jul/18 5:46 AM;wlahti;Abandoning this due to the plans to remove the EventHub via FAB-11123. ;;;",,,,,,,,,,,,,,,,,,,,,,,,
Data race between eventProcessor.start and EventsServer.Chat cleaning up handlers,FAB-10924,31463,28851,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,29/Jun/18 4:45 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,03/Jul/18 5:35 AM,,,,,,,,,,,,,,,,,0,race,,,,,,"The following data race was reported:

When sending a message to a handler fails due to session timeout or some other transient failure, the channel range loop in the (misnamed) start method will cleanup the handler from the event processor.

When the event server stream associated with a handler encounters an error, the server will cleanup the handler from the event processor.

When the two things happen concurrently, two go routines will concurrently execute cleanup. This results in a concurrent map modification on the handler's interestedEvents map.
{code:java}
==================
WARNING: DATA RACE
Read at 0x00c4204e1350 by goroutine 83:
  runtime.mapiterinit()
      /usr/local/Cellar/go/1.10.3/libexec/src/runtime/hashmap.go:691 +0x0
  github.com/hyperledger/fabric/events/producer.(*eventProcessor).deregisterAll()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/events/producer/events.go:222 +0xa3
  github.com/hyperledger/fabric/events/producer.(*eventProcessor).cleanupHandler()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/events/producer/events.go:131 +0x46
  github.com/hyperledger/fabric/events/producer.(*EventsServer).Chat()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/events/producer/producer.go:56 +0x53a

Previous write at 0x00c4204e1350 by goroutine 16:
  runtime.mapdelete_faststr()
      /usr/local/Cellar/go/1.10.3/libexec/src/runtime/hashmap_fast.go:883 +0x0
  github.com/hyperledger/fabric/events/producer.(*eventProcessor).deregisterAll()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/events/producer/events.go:227 +0x2a3
  github.com/hyperledger/fabric/events/producer.(*eventProcessor).cleanupHandler()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/events/producer/events.go:131 +0x46
  github.com/hyperledger/fabric/events/producer.(*eventProcessor).start()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/events/producer/events.go:113 +0x653

Goroutine 83 (running) created at:
  github.com/hyperledger/fabric/events/producer.TestRegister_ExpiredIdentity()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/events/producer/producer_test.go:429 +0x1a8
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Goroutine 16 (running) created at:
  github.com/hyperledger/fabric/events/producer.initializeEvents()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/events/producer/events.go:161 +0x1eb
  github.com/hyperledger/fabric/events/producer.NewEventsServer()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/events/producer/producer.go:44 +0x58
  github.com/hyperledger/fabric/events/producer.TestMain()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/events/producer/producer_test.go:692 +0x504
  main.main()
      _testmain.go:70 +0x22a
=================={code}
In context, it doesn't appear that the map removal is needed since the handler's interests are all being purged.

 ",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9148,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzglr:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jun/18 5:05 AM;sykesm;https://gerrit.hyperledger.org/r/23837;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Include LICENSEs in Docker images,FAB-10926,31467,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,G-DazWilkin,G-DazWilkin,29/Jun/18 5:39 AM,20/Sep/19 7:53 PM,28/Oct/23 3:03 AM,20/Sep/19 7:53 PM,,,,,,,,,,,,,,,,,0,license,licensing,,,,,"Our lawyers have a specific requirement that our organization's use of Fabric['s Docker images] requires that OSS licenses be included *within* the images and that I be able to provide paths for each image to the OSS licenses on the image.



An admittedly cursory review (assuming 'LICENSE') of the images (excl. NPM as this appears to diligently include package LICENSEs) shows that few LICENSE-named files are included:

{{./opt/go/LICENSE}}
{{./opt/go/misc/tour/static/lib/codemirror/LICENSE}}
{{./opt/go/src/cmd/vendor/github.com/google/pprof/LICENSE}}
{{./opt/go/src/cmd/vendor/github.com/ianlancetaylor/demangle/LICENSE}}
{{./usr/local/LICENSE}}
{{./usr/share/doc/git/contrib/persistent-https/LICENSE}}

 

Even for the Hyperledger Fabric components, multi-stage builds remove the sources from the runtime images (including LICENSE).

Request:
 * Licenses be included in the images (if not already)
 * Licenses be readily enumerable, i.e. find -name LICENSE
 * Some affirmation that the images contain definitive lists of OSS licenses

I'm willing to pursue with our attorneys (legally) considered alternatives that are being employed by this community|others.",,G-DazWilkin,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzgm7:",,,,Unset,,,,,,Unset,,,,,,,,,,,G-DazWilkin,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Sep/19 7:52 PM;mastersingh24;[~G-DazWilkin]
I don't see this happening as it's not a requirement for us to be able to distribute the Docker images.  The actual ""release"" software is the code in the various repositories.

If Google requires you to do this, then you will need to build your own images (we have to do this in IBM as well);;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Daily job: fabric-end-2-end-daily-release-1.1-x86_64 has failed,FAB-10928,31470,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,jtclark,jtclark,29/Jun/18 6:22 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,03/Oct/18 3:56 AM,v1.2.0,,,,,,,,Future,,,,,,,,0,ci-failure,,,,,,"*fabric-end-2-end-daily-release-1.1-x86_64* has failed with the following error:

{code:java}
Error: Error endorsing chaincode: rpc error: code = Unknown desc = error starting container: API error (404): {""message"":""network e2ecli_default not found""}
{code}

h1. Commit Info

{code:java}
FABRIC_COMMIT ------> ff5e861
CA COMMIT ------> e656889
{code}

h1. Build Logs

*Current Log*: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-release-1.1-x86_64/116

*Previous Log*: https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-release-1.1-x86_64/115/",,denyeart,jtclark,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgmn:",,,,,,,,,,,,,,,,,,,,,denyeart,jtclark,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/18 8:42 PM;denyeart;[~jtclark] When opening defects from automated test failures we need some indication of whether this is a recurring/reproducible error, or a one-time 'flake' that goes away upon re-execution.

Also it looks like the test is on release-1.1, however the Affects Version and Fix Version are set to v1.2.  Please clarify.;;;","10/Jul/18 9:51 PM;rameshthoomu;This is failing since we upgraded the docker-compose version to newer version. The latest docker-compose version is not supporting the configuration what we have in [https://github.com/hyperledger/fabric/blob/release-1.1/examples/e2e_cli/base/peer-base.yaml#L15|https://github.com/hyperledger/fabric/blob/release-1.0/examples/e2e_cli/base/peer-base.yaml#L15].
{noformat}
00:00:22.243 + docker-compose version
00:00:23.216 docker-compose version 1.21.2, build a133471{noformat};;;","27/Jul/18 3:54 PM;rameshthoomu;e2e cli tests are skipped in CI on release-1.1 branch


if [[ ""$GERRIT_BRANCH"" == ""release-1.0"" || ""$GERRIT_BRANCH"" == ""release-1.1"" ]]; then
 echo ""----------> SKIP e2e_cli tests FAB-11077"";;;","03/Oct/18 3:56 AM;sambhavdutt;Please let me know If I have to revert this back to its previous state.;;;",,,,,,,,,,,,,,,,,,,,,,,
Parametrize Stable and commit versions in release jobs,FAB-10929,31471,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,29/Jun/18 6:30 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,30/Jun/18 1:17 AM,,,,,,,,,v1.2.0,,,fabric-ci,,,,,0,,,,,,,"Parametrize Stable and commit versions in release jobs

The existing release jobs works on a hardcoded release version and commit number, we should have a flexibility to trigger the jobs based on the given image version and commit number. Also,

update the existing curl commands to pull from the updated nexus url..",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykrz:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/18 8:41 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23849/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update Baseimage version in fabric release-1.2 ,FAB-10933,31478,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,29/Jun/18 2:24 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,29/Jun/18 11:09 PM,,,,,,,,,v1.2.0,,,fabric-build,,,,,0,,,,,,,Update Baseimage version to 0.4.10 in fabric release-1.2,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykrr:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
"undefined: proto.InternalMessageInfo,ipamutils.NetworkToSplit",FAB-10936,31481,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Not Supported,,davidkhala,davidkhala,29/Jun/18 3:47 PM,15/Oct/18 1:09 PM,28/Oct/23 3:03 AM,14/Oct/18 11:34 PM,v1.2.0,,,,,,,,Future,,,fabric-build,fabric-peer,,,,0,,,,,,,"From 1.2, I turned to use dep as pkg manager.

When run go-test with fabric as dependencies for golang chaincode, I found error
{code:java}
# github.com/davidkhala/chaincode/golang/admin/vendor/google.golang.org/genproto/googleapis/rpc/status
vendor/google.golang.org/genproto/googleapis/rpc/status/status.pb.go:111:28: undefined: proto.InternalMessageInfo
# github.com/davidkhala/chaincode/golang/admin/vendor/github.com/docker/docker/opts
vendor/github.com/docker/docker/opts/address_pools.go:15:12: undefined: ipamutils.NetworkToSplit
{code}",go version go1.10.1 linux/amd64,arner,davidkhala,mastersingh24,sykesm,tanykj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Sep/18 12:13 PM;davidkhala;Gopkg.lock;https://jira.hyperledger.org/secure/attachment/15794/Gopkg.lock","10/Sep/18 12:13 PM;davidkhala;Gopkg.toml;https://jira.hyperledger.org/secure/attachment/15793/Gopkg.toml",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgnj:",,,,,,,,,,,,,,,,,,,,,arner,davidkhala,mastersingh24,sykesm,tanykj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/18 3:50 PM;davidkhala;Solutions can be found at

[https://github.com/google/protobuf/issues/4582]
[https://github.com/golang/dep/issues/1888];;;","07/Sep/18 2:51 AM;sykesm;There's not enough information in here to determine where your dep issue was introduced. We've been using dep for our builds since 1.2 and we build various chaincode examples in the tree.

The references that you have flagged ({{proto.InternalMessageInfo}}, {{ipamutils.NetworkToSplit}}) are included or transitively referenced by fabric proper.

Please provide additional information about what you're building/testing as well as the Gopkg.toml and Gopkg.lock.;;;","10/Sep/18 12:13 PM;davidkhala;Another is witnessed on latest run after `dep ensure --update`

# github.com/davidkhala/fabric-common-chaincode-golang/vendor/github.com/hyperledger/fabric/idemix
 vendor/github.com/hyperledger/fabric/idemix/util.go:60:11: not enough arguments in call to E.ToBytes
 have ([]byte)
 want ([]byte, bool)

Attached is my current [^Gopkg.lock][^Gopkg.toml];;;","10/Sep/18 1:12 PM;davidkhala;[~sykesm] Dear Matt, and what is your environment? like OS, golang version? 

And just to clarify, what I did is not build fabric itself but develop golang chaincode with dep to import fabric source as dependency, are you doing the same way? Surely we can build chaincode based on 1.2 peer/orderer without dep as pkg manager for chaincode?;;;","14/Sep/18 8:08 PM;arner;[~davidkhala] I have the same issue, importing fabric from a tool I'm writing. This workaround in Gopkg.toml worked for me (though it's not pretty):
{quote}{{# https://jira.hyperledger.org/browse/FAB-11856}}
 {{[[override]]}}
   name = ""github.com/hyperledger/fabric-amcl""
   revision = ""ea8d504acd07754482414591d1ae105ff448dea2""

{{# [https://github.com/fsouza/go-dockerclient/issues/736]}}
 {{[[override]]}}
   name = ""github.com/fsouza/go-dockerclient""
   version = ""=1.2.1""

{{# [https://github.com/protocolbuffers/protobuf/issues/4582]}}
 {{[[override]]}}
   name= ""github.com/golang/protobuf""
   version = ""=1.2.0""
{quote}
[~sykesm] shouldn't the build process catch breaking dependencies?

Docker-client is still the old version on master (https://github.com/hyperledger/fabric/blob/master/Gopkg.toml#L37).;;;","14/Sep/18 11:28 PM;sykesm;Fabric is not structured as a version-stable repository. We vendor what we need to produce the binaries that are published. I agree that it's a problem that what exists can't be easily used like other conventional golang projects but that's a historical problem. I don't like it but it's not going to change in the very near term.

Assets that are intended to be used as libraries need to be extracted from fabric and all of the golang chaincode support code needs to be extracted or refactored. These are work items that need to be proposed and prioritized and neither has occurred yet.;;;","17/Sep/18 11:42 AM;davidkhala;[~arner] I find a work-around looking more simple


 [[override]]
 name = ""github.com/fsouza/go-dockerclient""
 version = ""=1.2.1""

[[constraint]]
 name = ""github.com/hyperledger/fabric""
 branch = ""master""

 

Well I am also helping on fabric-amcl, thus curious about the problem of why not using master branch.;;;","19/Sep/18 11:29 PM;davidkhala;I created a patch to tracking it https://gerrit.hyperledger.org/r/#/c/26386/;;;","14/Oct/18 11:34 PM;mastersingh24;The fabric repo is NOT a library or set of libraries;;;","15/Oct/18 1:04 PM;davidkhala;[~mastersingh24] Sure, but as [~sykesm] mentioned, 

??Assets that are intended to be used as libraries need to be extracted from fabric and all of the golang chaincode support code needs to be extracted or refactored. These are work items that need to be proposed and prioritized and neither has occurred yet.??

 We are only allowed to make fabric as a library, otherwise we could not use other third-party library for golang chaincode. Third-party library is quite fundamental for large scale production usage of fabric as we are doing. 

 At first stage, I think 
at least ""github.com/hyperledger/fabric/core/chaincode/shim"" and peer.response struct in ""github.com/hyperledger/fabric/protos/peer"" could be extracted out from fabric repo
;;;",,,,,,,,,,,,,,,,,
"Add e2e, unit-test daily jobs on release-1.2 branch in prodcution CI",FAB-10937,31483,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,rameshthoomu,rameshthoomu,29/Jun/18 3:53 PM,24/Jul/18 1:33 AM,28/Oct/23 3:03 AM,24/Jul/18 1:33 AM,,,,,,,,,Future,,,fabric-ci,,,,,0,,,,,,,"Job 1). Create *e2e daily cron job* which executes e2e_cli, fabric-sdk-node, fabric-sdk-java tests on release-1.2 branch.

FYI: We have a nightly job on release-1.2 but it executes byfn,eyfn and Integration tests (make integration-test)..

Job 2) Create unit-test daily cron job which executes fabric unit-tests on release-1.2 branch.",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgnz:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jul/18 3:20 AM;jtclark;Patch set is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/23953/;;;","03/Jul/18 3:21 AM;jtclark;The new job is being tested here: https://jenkins.hyperledger.org/sandbox/job/fabric-unit-test-coverage-daily-release-1.2-x86_64/;;;","03/Jul/18 10:02 PM;rameshthoomu;Update: Unit-test daily job has been added on release-1.2 branch.
[https://jenkins.hyperledger.org/sandbox/job/fabric-unit-test-coverage-daily-release-1.2-x86_64/];;;","17/Jul/18 1:06 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/24443/;;;","24/Jul/18 1:33 AM;jtclark;Patchsets have been **MERGED**.

- https://gerrit.hyperledger.org/r/#/c/24443/
- https://gerrit.hyperledger.org/r/#/c/23953/;;;",,,,,,,,,,,,,,,,,,,,,,
Remove go file because of deadcode,FAB-10938,31484,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,diizuka,diizuka,diizuka,29/Jun/18 4:22 PM,26/Jul/18 12:56 PM,28/Oct/23 3:03 AM,26/Jul/18 12:56 PM,v1.0.0,v1.1.0,,,,,,,Future,,,fabric-common,,,,,0,,,,,,," Remove file fabric/common/cauthdsl/polity_util.go

because it is never called nor referenced from anywhere since v1.0,  At v1.0.0-preview, the func on this file was called from fabric/orderer/common/bootstrap/provisional/provisional.go.

The caller go file has removed since v1.0.",,diizuka,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgo7:",,,,,,,,,,,,,,,,,,,,,diizuka,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/18 3:36 AM;wlahti;https://gerrit.hyperledger.org/r/c/23935/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
document bug in https://hyperledger-fabric.readthedocs.io/en/release-1.1/build_network.html,FAB-10939,31485,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,chengweiv5,chengweiv5,29/Jun/18 4:29 PM,18/Mar/19 11:28 PM,28/Oct/23 3:03 AM,18/Mar/19 11:28 PM,,,,,,,,,v1.4.1,v2.0.0,,fabric-docs,,,,,0,doc,,,,,,"[https://hyperledger-fabric.readthedocs.io/en/release-1.1/build_network.html]

 

Environment variables

For the following CLI commands against {{peer0.org1.example.com}} to work, we need to preface our commands with the four environment variables given below. These variables for {{peer0.org1.example.com}} are baked into the CLI container, therefore we can operate without passing them. *HOWEVER*, if you want to send calls to other peers or the orderer, then you will need to provide these values accordingly. Inspect the {{docker-compose-base.yaml}} for the specific paths:

 

`docker-compose-base.yaml` above should be `docker-compose-cli.yaml`.",,chengweiv5,denyeart,joe-alewine,SjirNijssen,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwrsv:",,,,,,,,,,,,,,,,,,,,,chengweiv5,denyeart,joe-alewine,SjirNijssen,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/18 3:51 AM;wlahti;I think the document is really suggesting that you refer to docker-compose-base.yaml to figure out the values for the environment variables for the peer you're trying to connect to. For example, while the CORE_PEER_MSPGCONFIGPATH and CORE_PEER_TLS_ROOTCERT_FILE variables aren't explicitly in docker-compose-base.yaml, the volumes for each container show the path to the crypto materials. The CORE_PEER_ADDRESS and CORE_PEER_LOCALMSPID can be used as-is. ;;;","21/Aug/18 8:58 PM;denyeart;[~joe-alewine] [~pandrejko] Looks like a simple clarification is needed in the docs.;;;","22/Aug/18 12:04 PM;denyeart;I think the whole paragraph needs a redo.
I'm not sure what the original intent was here... but I think we can say that there are two ways to change the environment variables for the desired target peer.

1) You can update the default environment variables baked into the CLI container by updating these four variabes at the following location, and restarting the network:
https://github.com/hyperledger/fabric-samples/blob/release-1.2/first-network/docker-compose-cli.yaml#L71-L77

2) Alternatively you could keep the CLI container defaults targeting peer0.org1.example.com, but when you make any CLI calls override the environment variables as seen later in the doc with the example call targeting peer0.org2.;;;","04/Dec/18 4:49 AM;joe-alewine;New version of this commit. I compressed the section together and removed some extraneous content, focusing on Dave's option #2 from his comment above. Hopefully this clears it up.

 

[https://gerrit.hyperledger.org/r/c/27889/];;;",,,,,,,,,,,,,,,,,,,,,,,
Data race when running core/committer tests,FAB-10942,31489,28851,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,sykesm,sykesm,29/Jun/18 10:39 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,06/Jul/18 12:02 AM,,,,,,,,,,,,,,,,,0,race,,,,,,"{code:java}
==================
WARNING: DATA RACE
Read at 0x00c4230fcb80 by goroutine 61:
  go.(*struct { *github.com/hyperledger/fabric/core/mocks/txvalidator.Support; *github.com/hyperledger/fabric/vendor/golang.org/x/sync/semaphore.Weighted }).Capabilities()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/mocks/txvalidator/support.go:38 +0x68
  github.com/hyperledger/fabric/core/committer/txvalidator.(*TxValidator).validateTx()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:298 +0x62a
  github.com/hyperledger/fabric/core/committer/txvalidator.(*TxValidator).Validate.func1.1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:158 +0x10f

Previous write at 0x00c4230fcb80 by goroutine 60:
  go.(*struct { *github.com/hyperledger/fabric/core/mocks/txvalidator.Support; *github.com/hyperledger/fabric/vendor/golang.org/x/sync/semaphore.Weighted }).Capabilities()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/mocks/txvalidator/support.go:38 +0x84
  github.com/hyperledger/fabric/core/committer/txvalidator.(*TxValidator).validateTx()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:298 +0x62a
  github.com/hyperledger/fabric/core/committer/txvalidator.(*TxValidator).Validate.func1.1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:158 +0x10f

Goroutine 61 (running) created at:
  github.com/hyperledger/fabric/core/committer/txvalidator.(*TxValidator).Validate.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:155 +0x196

Goroutine 60 (running) created at:
  github.com/hyperledger/fabric/core/committer/txvalidator.(*TxValidator).Validate.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:155 +0x196{code}
This is due to unlocked update of call count in the mocks",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgp3:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/18 12:16 AM;sykesm;https://gerrit.hyperledger.org/r/23875;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Daily Job: fabric-nightly-release-job-master-s390x has failed.,FAB-10945,31492,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,jtclark,jtclark,30/Jun/18 12:35 AM,19/Mar/19 8:12 PM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,v1.2.0,,,,,,,,Future,,,,,,,,0,ci-failure,,,,,,"*fabric-nightly-release-job-master-s390x* fails with the following error:

{code:java}
00:02:06.103 W: Failed to fetch http://security.debian.org/dists/jessie/updates/InRelease  Unable to find expected entry 'main/binary-s390x/Packages' in Release file (Wrong sources.list entry or malformed file)
00:02:06.103 
00:02:06.103 E: Some index files failed to download. They have been ignored, or old ones used instead.
00:02:06.470 The command '/bin/sh -c bash /tmp/install-softhsm2.sh && rm -f install-softhsm2.sh' returned a non-zero code: 100
00:02:06.477 Makefile:303: recipe for target '.build/image/testenv/.dummy-s390x-1.3.0-stable' failed
00:02:06.477 make: *** [.build/image/testenv/.dummy-s390x-1.3.0-stable] Error 100
00:02:06.477 ----------> make docker failed
00:02:06.541 Build step 'Execute shell' marked build as failure
{code}

*----------> FABRIC_COMMIT : a6d1ec2*

*Console output:* https://jenkins.hyperledger.org/view/Daily/job/fabric-nightly-release-job-master-s390x/2/console

*Build Logs:*

Current Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-nightly-release-job-master-s390x/2

Previous Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-nightly-release-job-master-s390x/1",,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10883,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgpr:",,,,,,,,,,,,,,,,,,,,,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Daily Job: fabric-end-2-end-daily-release-1.1-x86_64 has failed.,FAB-10946,31493,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,jtclark,jtclark,30/Jun/18 12:40 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,03/Oct/18 3:59 AM,v1.1.0,,,,,,,,,,,,,,,,0,ci-failure,,,,,,"*fabric-end-2-end-daily-release-1.1-x86_64* fails with the following error:

{code:java}
Error: Error endorsing chaincode: rpc error: code = Unknown desc = error starting container: API error (404): {""message"":""network e2ecli_default not found""}
{code}

*FABRIC_COMMIT ------> ff5e861*
*CA COMMIT ------> e656889*

*Console output:* https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-release-1.1-x86_64/117/consoleFull

*Build Logs:*

Current Log:https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-release-1.1-x86_64/117

Previous Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-release-1.1-x86_64/116",,denyeart,jtclark,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgpz:",,,,,,,,,,,,,,,,,,,,,denyeart,jtclark,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/18 6:31 AM;rameshthoomu;This is failing since we upgrade the docker-compose version. The latest docker-compose version and [https://github.com/hyperledger/fabric/blob/release-1.1/examples/e2e_cli/base/peer-base.yaml#L15|https://github.com/hyperledger/fabric/blob/release-1.0/examples/e2e_cli/base/peer-base.yaml#L15] the network mode specified in this line is not supporting in newer docker compose version.
{noformat}
00:00:22.243 + docker-compose version
00:00:23.216 docker-compose version 1.21.2, build a133471{noformat};;;","27/Jul/18 3:54 PM;rameshthoomu;e2e cli tests are skipped in CI on release-1.1 branch


if [[ ""$GERRIT_BRANCH"" == ""release-1.0"" || ""$GERRIT_BRANCH"" == ""release-1.1"" ]]; then
 echo ""----------> SKIP e2e_cli tests FAB-11077"";;;","21/Aug/18 9:02 PM;denyeart;[~rameshthoomu] Could you clarify the last comment... do you mean we intend to forever disable e2e tests in release-1.1 due to this problem?;;;","19/Sep/18 10:21 PM;denyeart;[~rameshthoomu] Could you clarify the last comment... do you mean we intend to forever disable e2e tests in release-1.1 due to this problem?;;;","03/Oct/18 3:59 AM;sambhavdutt;Please let me know If I have to revert this back to its previous state.;;;",,,,,,,,,,,,,,,,,,,,,,
Daily Job: fabric-end-2-end-daily-release-1.0-x86_64 has failed.,FAB-10948,31496,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,jtclark,jtclark,30/Jun/18 1:19 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,v1.0.0,,,,,,,,Future,,,fabric-build,,,,,0,ci-failure,,,,,,"*fabric-end-2-end-daily-release-1.0-x86_64* fails with the following error:

{code:java}
Error: Error endorsing chaincode: rpc error: code = Unknown desc = Error starting container: API error (404): {""message"":""network e2ecli_default not found""}

Usage:
  peer chaincode instantiate [flags]

Flags:
  -C, --channelID string   The channel on which this command should be executed (default ""testchainid"")
  -c, --ctor string        Constructor message for the chaincode in JSON format (default ""{}"")
  -E, --escc string        The name of the endorsement system chaincode to be used for this chaincode
  -l, --lang string        Language the chaincode is written in (default ""golang"")
  -n, --name string        Name of the chaincode
  -P, --policy string      The endorsement policy associated to this chaincode
  -v, --version string     Version of the chaincode specified in install/instantiate/upgrade commands
  -V, --vscc string        The name of the verification system chaincode to be used for this chaincode

Global Flags:
      --cafile string              Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string             Ordering service endpoint
      --test.coverprofile string   Done (default ""coverage.cov"")
      --tls                        Use TLS when communicating with the orderer endpoint

!!!!!!!!!!!!!!! Chaincode instantiation on PEER2 on channel 'mychannel' failed !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================
{code}

*FABRIC_COMMIT ------> 1575ea6*
*CA COMMIT ------> b3f16df*

*Console output:* {CONSOLE_OUTPUT_LINK}

*Build Logs:*

Current Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-release-1.0-x86_64/108

Previous Log: {PREVIOUS_LOG_LINK}",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgqf:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/18 6:30 AM;rameshthoomu;This is failing since we upgrade the docker-compose version. The latest docker-compose version and [https://github.com/hyperledger/fabric/blob/release-1.0/examples/e2e_cli/base/peer-base.yaml#L15] the network mode specified in this line is not supporting in newer docker compose version.
*00:00:22.243* + docker-compose version*00:00:23.216* docker-compose version 1.21.2, build a133471
 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
data race when running TestResubmission,FAB-10949,31497,28851,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,30/Jun/18 1:45 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,02/Jul/18 9:29 PM,,,,,,,,,v1.3.0,,,,,,,,0,race,,,,,,"{code:java}
--- FAIL: TestResubmission (9.34s)
    --- FAIL: TestResubmission/Normal (4.01s)
        --- FAIL: TestResubmission/Normal/ValidResubmit (1.00s)
        testing.go:730: race detected during execution of test
    testing.go:730: race detected during execution of test
testing.go:730: race detected during execution of test{code}
{code:java}
==================
WARNING: DATA RACE
Read at 0x00c42038ae80 by goroutine 143:
  github.com/hyperledger/fabric/protos/orderer._KafkaMessage_OneofMarshaler()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/orderer/kafka.pb.go:110 +0x68
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_struct()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:1257 +0xa6a
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).Marshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:274 +0x38d
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.Marshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:236 +0x12d
  github.com/hyperledger/fabric/protos/utils.MarshalOrPanic()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/utils/commonutils.go:33 +0x46
  github.com/hyperledger/fabric/orderer/consensus/kafka.newMockConsumerMessage()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/consenter_test.go:129 +0x48
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2540 +0x102e
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Previous write at 0x00c42038ae80 by goroutine 53:
  github.com/hyperledger/fabric/protos/orderer._KafkaMessage_OneofUnmarshaler()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/orderer/kafka.pb.go:142 +0x120
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).unmarshalType()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:508 +0xc6e
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).Unmarshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:452 +0x2c9
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.UnmarshalMerge()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:412 +0x118
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.Unmarshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:398 +0x78
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4.1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2470 +0x9d
  github.com/hyperledger/fabric/vendor/github.com/Shopify/sarama/mocks.(*SyncProducer).SendMessage()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/Shopify/sarama/mocks/sync_producer.go:55 +0x5be
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).enqueue()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:241 +0x61f
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).order()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:203 +0x2c5
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).processRegular()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:754 +0x2446
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).processMessagesToBlocks()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:433 +0x123c
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4.2()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2510 +0x3c

Goroutine 143 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2436 +0x63c
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Goroutine 53 (running) created at:
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2509 +0xc1d
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d
=================={code}
 ",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgqn:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/18 1:46 AM;sykesm;and
{code:java}
==================
WARNING: DATA RACE
Read at 0x00c4205c02a0 by goroutine 143:
  github.com/hyperledger/fabric/protos/orderer._KafkaMessage_OneofMarshaler()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/orderer/kafka.pb.go:113 +0x22f
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_struct()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:1257 +0xa6a
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).Marshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:274 +0x38d
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.Marshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:236 +0x12d
  github.com/hyperledger/fabric/protos/utils.MarshalOrPanic()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/utils/commonutils.go:33 +0x46
  github.com/hyperledger/fabric/orderer/consensus/kafka.newMockConsumerMessage()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/consenter_test.go:129 +0x48
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2540 +0x102e
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Previous write at 0x00c4205c02a0 by goroutine 53:
  github.com/hyperledger/fabric/protos/orderer._KafkaMessage_OneofUnmarshaler()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/orderer/kafka.pb.go:142 +0xf1
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).unmarshalType()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:508 +0xc6e
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).Unmarshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:452 +0x2c9
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.UnmarshalMerge()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:412 +0x118
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.Unmarshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:398 +0x78
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4.1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2470 +0x9d
  github.com/hyperledger/fabric/vendor/github.com/Shopify/sarama/mocks.(*SyncProducer).SendMessage()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/Shopify/sarama/mocks/sync_producer.go:55 +0x5be
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).enqueue()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:241 +0x61f
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).order()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:203 +0x2c5
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).processRegular()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:754 +0x2446
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).processMessagesToBlocks()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:433 +0x123c
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4.2()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2510 +0x3c

Goroutine 143 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2436 +0x63c
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Goroutine 53 (running) created at:
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2509 +0xc1d
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d
=================={code};;;","30/Jun/18 1:47 AM;sykesm;and
{code:java}
==================
WARNING: DATA RACE
Read at 0x00c4204e68a0 by goroutine 143:
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_proto3_slice_byte()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:686 +0x88
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_struct()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:1235 +0x1a9
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_len_struct.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:1305 +0x53
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_len_thing()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:1313 +0x19a
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_len_struct()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:1305 +0xc2
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).EncodeMessage()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:253 +0x10c
  github.com/hyperledger/fabric/protos/orderer._KafkaMessage_OneofMarshaler()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/orderer/kafka.pb.go:113 +0x259
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_struct()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:1257 +0xa6a
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).Marshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:274 +0x38d
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.Marshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:236 +0x12d
  github.com/hyperledger/fabric/protos/utils.MarshalOrPanic()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/utils/commonutils.go:33 +0x46
  github.com/hyperledger/fabric/orderer/consensus/kafka.newMockConsumerMessage()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/consenter_test.go:129 +0x48
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2540 +0x102e
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Previous write at 0x00c4204e68a0 by goroutine 53:
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).dec_slice_byte()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:678 +0xbb
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).unmarshalType()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:537 +0x2fa
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).Unmarshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:452 +0x2c9
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).DecodeMessage()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:421 +0x130
  github.com/hyperledger/fabric/protos/orderer._KafkaMessage_OneofUnmarshaler()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/orderer/kafka.pb.go:141 +0xb7
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).unmarshalType()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:508 +0xc6e
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).Unmarshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:452 +0x2c9
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.UnmarshalMerge()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:412 +0x118
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.Unmarshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:398 +0x78
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4.1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2470 +0x9d
  github.com/hyperledger/fabric/vendor/github.com/Shopify/sarama/mocks.(*SyncProducer).SendMessage()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/Shopify/sarama/mocks/sync_producer.go:55 +0x5be
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).enqueue()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:241 +0x61f
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).order()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:203 +0x2c5
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).processRegular()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:754 +0x2446
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).processMessagesToBlocks()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:433 +0x123c
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4.2()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2510 +0x3c

Goroutine 143 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2436 +0x63c
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Goroutine 53 (running) created at:
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2509 +0xc1d
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d
=================={code};;;","30/Jun/18 1:47 AM;sykesm;and
{code:java}
==================
WARNING: DATA RACE
Read at 0x00c4203dcc80 by goroutine 143:
  runtime.slicecopy()
      /usr/local/Cellar/go/1.10.3/libexec/src/runtime/slice.go:192 +0x0
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).EncodeRawBytes()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:201 +0xe2
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_proto3_slice_byte()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:691 +0x218
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_struct()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:1235 +0x1a9
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_len_struct.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:1305 +0x53
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_len_thing()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:1313 +0x19a
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_len_struct()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:1305 +0xc2
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).EncodeMessage()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:253 +0x10c
  github.com/hyperledger/fabric/protos/orderer._KafkaMessage_OneofMarshaler()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/orderer/kafka.pb.go:113 +0x259
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).enc_struct()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:1257 +0xa6a
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).Marshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:274 +0x38d
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.Marshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/encode.go:236 +0x12d
  github.com/hyperledger/fabric/protos/utils.MarshalOrPanic()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/utils/commonutils.go:33 +0x46
  github.com/hyperledger/fabric/orderer/consensus/kafka.newMockConsumerMessage()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/consenter_test.go:129 +0x48
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2540 +0x102e
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Previous write at 0x00c4203dcc80 by goroutine 53:
  runtime.slicecopy()
      /usr/local/Cellar/go/1.10.3/libexec/src/runtime/slice.go:192 +0x0
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).DecodeRawBytes()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:299 +0x271
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).dec_slice_byte()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:674 +0x44
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).unmarshalType()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:537 +0x2fa
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).Unmarshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:452 +0x2c9
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).DecodeMessage()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:421 +0x130
  github.com/hyperledger/fabric/protos/orderer._KafkaMessage_OneofUnmarshaler()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/orderer/kafka.pb.go:141 +0xb7
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).unmarshalType()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:508 +0xc6e
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).Unmarshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:452 +0x2c9
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.UnmarshalMerge()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:412 +0x118
  github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.Unmarshal()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:398 +0x78
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4.1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2470 +0x9d
  github.com/hyperledger/fabric/vendor/github.com/Shopify/sarama/mocks.(*SyncProducer).SendMessage()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/Shopify/sarama/mocks/sync_producer.go:55 +0x5be
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).enqueue()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:241 +0x61f
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).order()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:203 +0x2c5
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).processRegular()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:754 +0x2446
  github.com/hyperledger/fabric/orderer/consensus/kafka.(*chainImpl).processMessagesToBlocks()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain.go:433 +0x123c
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4.2()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2510 +0x3c

Goroutine 143 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2436 +0x63c
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Goroutine 53 (running) created at:
  github.com/hyperledger/fabric/orderer/consensus/kafka.TestResubmission.func3.4()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/consensus/kafka/chain_test.go:2509 +0xc1d
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d
=================={code};;;","30/Jun/18 2:36 AM;sykesm;https://gerrit.hyperledger.org/r/23889;;;",,,,,,,,,,,,,,,,,,,,,,,
Data race when running TestUpdateRootsFromConfigBlock,FAB-10951,31506,28851,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,30/Jun/18 4:29 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,03/Jul/18 5:35 AM,,,,,,,,,,,,,,,,,0,race,,,,,,"Another race related to viper (doesn't support concurrency) and gossip (constantly retrieves config data from the map).
{code:java}
==================
WARNING: DATA RACE
Write at 0x00c4200cbfb0 by goroutine 154:
  runtime.mapassign_faststr()
      /usr/local/Cellar/go/1.10.3/libexec/src/runtime/hashmap_fast.go:694 +0x0
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).Set()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:772 +0xc6
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.Set()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:768 +0x72
  github.com/hyperledger/fabric/core/peer_test.TestUpdateRootsFromConfigBlock.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/peer/pkg_test.go:170 +0x90
  github.com/hyperledger/fabric/core/peer_test.TestUpdateRootsFromConfigBlock.func3()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/peer/pkg_test.go:267 +0x5a
  github.com/hyperledger/fabric/core/peer_test.TestUpdateRootsFromConfigBlock.func5()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/peer/pkg_test.go:326 +0x846
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Previous read at 0x00c4200cbfb0 by goroutine 39:
  runtime.mapaccess2_faststr()
      /usr/local/Cellar/go/1.10.3/libexec/src/runtime/hashmap_fast.go:261 +0x0
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).find()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:628 +0x16a
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).Get()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:404 +0x106
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).GetDuration()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:481 +0x4c
  github.com/hyperledger/fabric/vendor/github.com/spf13/viper.GetDuration()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:479 +0x5e
  github.com/hyperledger/fabric/gossip/util.GetDurationOrDefault()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/util/misc.go:177 +0x87
  github.com/hyperledger/fabric/gossip/gossip/algo.(*PullEngine).processIncomingDigests()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/gossip/algo/pull.go:216 +0x729
  github.com/hyperledger/fabric/gossip/gossip/algo.(*PullEngine).initiatePull.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/gossip/algo/pull.go:189 +0x41

Goroutine 154 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  github.com/hyperledger/fabric/core/peer_test.TestUpdateRootsFromConfigBlock()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/peer/pkg_test.go:298 +0x2952
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Goroutine 39 (finished) created at:
  time.goFunc()
      /usr/local/Cellar/go/1.10.3/libexec/src/time/sleep.go:172 +0x51
=================={code}
 ",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgr3:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/18 4:33 AM;sykesm;https://gerrit.hyperledger.org/r/23897;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Data race when running core/comm tests,FAB-10952,31507,28851,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,30/Jun/18 4:50 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,02/Jul/18 11:48 PM,,,,,,,,,,,,,,,,,0,race,,,,,,"The tests use package scoped variables to hold client and server certificates that get generated by tests and referenced by tests that have been explicitly tagged for parallel execution. This results in a data race on the client and server certs.
{code:java}
==================
WARNING: DATA RACE
Write at 0x000004dbabe0 by goroutine 28:
  github.com/hyperledger/fabric/core/comm_test.loadCerts()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/comm/client_test.go:476 +0x4fa
  github.com/hyperledger/fabric/core/comm_test.TestSetServerRootCAs()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/comm/client_test.go:300 +0x64
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Previous write at 0x000004dbabe0 by goroutine 27:
  github.com/hyperledger/fabric/core/comm_test.loadCerts()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/comm/client_test.go:476 +0x4fa
  github.com/hyperledger/fabric/core/comm_test.TestNewConnection()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/comm/client_test.go:146 +0x64
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Goroutine 28 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  testing.runTests.func1()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1063 +0xa4
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d
  testing.runTests()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1061 +0x4e1
  testing.(*M).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:978 +0x2cd
  main.main()
      _testmain.go:116 +0x22a

Goroutine 27 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  testing.runTests.func1()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1063 +0xa4
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d
  testing.runTests()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1061 +0x4e1
  testing.(*M).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:978 +0x2cd
  main.main()
      _testmain.go:116 +0x22a
=================={code}",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgrb:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/18 5:06 AM;sykesm;https://gerrit.hyperledger.org/r/23901;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
bootstrap.sh does not correctly parse arguments and flags,FAB-10953,31509,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,G-DazWilkin,G-DazWilkin,30/Jun/18 5:01 AM,21/Aug/18 9:05 PM,28/Oct/23 3:03 AM,21/Aug/18 9:05 PM,,,,,,,,,,,,,,,,,0,,,,,,,"It's not possible to use the provided bootstrap.sh to e.g. only show help, e.g. download some subset of images, binaries or samples.

 

1.2: grep '\d' does not work-as-intended on Debian (Linux), the arguments are thus excluded, the shift doesn't occur and so getopts doesn't see flags.

[https://raw.githubusercontent.com/hyperledger/fabric/release-1.2/scripts/bootstrap.sh]

master: IIUC swallows flags during the arguments assignment and shifting

[https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap.sh]

Propose:
 * Hackier – '[0-9]' or perhaps something more closely representative of the version types
 * Better(er) – while it would be a breaking change, consider making everything a flag

Follow-up:

If I put the flags before the arguments, 1.2 appears to work. So, in this case, it could be that only the help is wrong and should read:

{{bootstrap.sh [-d -s -b][<version>] [<ca_version>] [<thirdparty_version>]}}",,denyeart,G-DazWilkin,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10854,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgrj:",,,,,,,,,,,,,,,,,,,,,denyeart,G-DazWilkin,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/18 7:58 AM;nnao;This is the same issue.
https://jira.hyperledger.org/browse/FAB-10579;;;","21/Aug/18 9:05 PM;denyeart;I believe this was fixed in FAB-10854, if not please re-open.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Data race when running TestDisableEndpoint,FAB-10954,31512,28851,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,30/Jun/18 5:33 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,02/Jul/18 11:45 PM,,,,,,,,,v1.3.0,,,,,,,,0,race,,,,,,"The tests in the comm package have been explicitly enabled for parallel execution yet they rely on package level state for configuration information. TestDisableEndpoint would modify the package level config in its test and restore it at the end. This modification would race against all of the other tests that were reading it.
{code:java}
==================
WARNING: DATA RACE
Read at 0x000004d6b850 by goroutine 22:
  github.com/hyperledger/fabric/core/comm.TestUpdateEndpoints()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/comm/producer.go:60 +0x1e1
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

2018-06-29 16:25:38.290 EDT [ConnProducer] DisableEndpoint -> WARN 001 Only 1 endpoint remained, will not black-list it
Previous write at 0x000004d6b850 by goroutine 23:
  github.com/hyperledger/fabric/core/comm.TestDisableEndpoint()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/comm/producer_test.go:105 +0x7f
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Goroutine 22 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  testing.runTests.func1()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1063 +0xa4
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d
  testing.runTests()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1061 +0x4e1
  testing.(*M).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:978 +0x2cd
  main.main()
      _testmain.go:116 +0x22a

Goroutine 23 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  testing.runTests.func1()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1063 +0xa4
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d
  testing.runTests()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1061 +0x4e1
  testing.(*M).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:978 +0x2cd
  main.main()
      _testmain.go:116 +0x22a
=================={code}",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgrr:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/18 5:35 AM;sykesm;https://gerrit.hyperledger.org/r/23903;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Daily Job: fabric-test-merge-x86_64 has failed.,FAB-10955,31513,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,jtclark,jtclark,30/Jun/18 6:04 AM,01/Dec/18 11:38 AM,28/Oct/23 3:03 AM,01/Dec/18 11:38 AM,v1.2.0,,,,,,,,Future,,,,,,,,0,,,,,,,"*fabric-test-merge-x86_64* fails with the following error:

{code:java}
00:17:27.503 # cd .; git clone https://github.com/lib/pq /opt/gopath/src/github.com/lib/pq
00:17:27.503 Cloning into '/opt/gopath/src/github.com/lib/pq'...
00:17:27.503 error: RPC failed; curl 56 GnuTLS recv error (-54): Error in the pull function.
00:17:27.503 fatal: The remote end hung up unexpectedly
00:17:27.503 fatal: early EOF
00:17:27.503 fatal: index-pack failed
00:17:27.503 package github.com/lib/pq: exit status 128
00:17:29.044 The command '/bin/sh -c go get github.com/lib/pq' returned a non-zero code: 1
00:17:29.046 Makefile:128: recipe for target 'build/image/fabric-ca-fvt/.dummy-amd64-1.2.0-snapshot-0334c90' failed
{code}

*COMMIT =========> dc23f99*

*Console output:* {CONSOLE_OUTPUT_LINK}

*Build Logs:*

Current Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-merge-x86_64/357

Previous Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-merge-x86_64/356",,denyeart,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgrz:",,,,,,,,,,,,,,,,,,,,,denyeart,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Dec/18 11:38 AM;denyeart;I haven't seen this recently... if it happens again please re-open.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"fabric-test daily OTE test failure, bad port number",FAB-10956,31515,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,30/Jun/18 6:13 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,02/Jul/18 12:42 AM,,,,,,,,,v1.2.0,,,fabric-quality,,,,,0,ci-failure,,,,,,"Since the ports used by NetworkLauncher were changed a few days ago, we are seeing OTE tests fail. OTE tests use the NL, so we need to change the ports expected/used by OTE too.
There are connection failures when trying to connect to orderers, since OTE is  using different port than NL.
Also, the ote.go code panics due to an index error, so we can fix that to produce a useful error message (and then panic ""gracefully"").

{{Started client Consumer-o0-c2 to recv delivered batches srvr=orderer0.example.com:5005 chID=testorgschannel3
Got DeliverResponse_Status: &\{NOT_FOUND}
panic: runtime error: index out of range
goroutine 44 [running]:
github.com/hyperledger/fabric/OTE.startConsumer(0xc42056a380, 0x19, 0xc420461fc0, 0x10, 0x1, 0x0, 0xc42056bf40, 0xc42056bf20, 0xc4205aa640, 0xfffffffffffffffe, ...)
        /opt/gopath/src/github.com/hyperledger/fabric/OTE/ote.go:335 +0x14f4
created by github.com/hyperledger/fabric/OTE.ote
        /opt/gopath/src/github.com/hyperledger/fabric/OTE/ote.go:1239 +0x1b17
exit status 2        FAIL        github.com/hyperledger/fabric/OTE        8.075s}}",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10601,FAB-10746,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgs7:",,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,true,"30/Jun/18 6:28 AM;scottz;https://gerrit.hyperledger.org/r/#/c/23905/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent failures in TestCreateChainWithTimeoutErr,FAB-10957,31517,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,wlahti,sykesm,sykesm,30/Jun/18 6:36 AM,19/Mar/19 7:57 PM,28/Oct/23 3:03 AM,12/Jan/19 12:47 AM,,,,,,,,,v1.4.1,v2.0.0,,fabric-peer,,,,,0,ci-flake,,,,,,"{code:java}
2018-06-29 17:28:33.542 EDT [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
Error: timeout waiting for channel creation
2018-06-29 17:28:34.004 EDT [channelCmd] InitCmdFactory -> INFO 002 Endorser and orderer connections initialized
Error: timeout waiting for channel creation
--- FAIL: TestCreateChainWithTimeoutErr (0.93s)
        Error Trace:    create_test.go:334
Error:      ""timeout waiting for channel creation"" does not contain ""failed connecting""
Test:       TestCreateChainWithTimeoutErr
FAIL
FAIL	github.com/hyperledger/fabric/peer/channel	1.005s{code}
The production code is in a select where one path is the timeout error and the other is the expected ""failed connecting"" error. 

[https://github.com/hyperledger/fabric/blob/a6d1ec2feaf2bd6b6132118f629914a3df5a64be/peer/channel/create.go#L202-L225]

This occurs most often on MacOS.

/cc [~wlahti]",,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgsf:",,,,,,,,,,,,,,,,,,,,,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Jul/18 9:51 PM;sykesm;This appears to be specific to my environment as I run a proxy on 9999.;;;","21/Dec/18 12:16 AM;denyeart;Saw this again on release-1.4 branch CI, re-opening: [https://jenkins.hyperledger.org/job/fabric-verify-unit-tests-x86_64/7411/console]

 
{code:java}
14:28:29 Error: timeout waiting for channel creation
14:28:29 --- FAIL: TestCreateChainWithTimeoutErr (2.28s)
14:28:29     <autogenerated>:1: 
14:28:29         	Error Trace:	create_test.go:334
14:28:29         	Error:      	""timeout waiting for channel creation"" does not contain ""failed connecting""
14:28:29         	Test:       	TestCreateChainWithTimeoutErr
14:28:29 2018-12-20 14:27:58.247 UTC [common.tools.configtxgen.localconfig] Load -> INFO 008 Loaded configuration: /w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/sampleconfig/configtx.yaml
14:28:29 Error: luge
14:28:29 2018-12-20 14:27:59.415 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009 Loaded configuration: /w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/sampleconfig/configtx.yaml
14:28:29 Error: skeleton
14:28:29 Error: must supply channel ID
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,
Clarify documentation for private data limitations,FAB-10960,31520,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,denyeart,denyeart,30/Jun/18 10:48 PM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,02/Jul/18 9:27 PM,,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,,,,,,,Clarify documentation for private data limitations wrt types of queries supported.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtlz:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/18 10:52 PM;denyeart;[https://gerrit.hyperledger.org/r/#/c/23911/] release-1.2

[https://gerrit.hyperledger.org/r/#/c/23909/] master

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
fix curl command to download binaries ,FAB-10961,31521,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,01/Jul/18 10:12 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,03/Jul/18 4:39 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykrb:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"03/Jul/18 4:40 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/23915/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Extract discovery endorsement peer filtering,FAB-10962,31522,31359,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,01/Jul/18 7:13 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,09/Jul/18 5:13 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"The discovery endorsement package contains logic that filters peers by collection policies and by chaincodes.

In order to enhance membership queries with collections, we need to extract this part from the endorsement logic to a separate function to be reused by the service itself.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgt3:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jul/18 12:20 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/23919/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add chaincodes and collections to discovery membership queries,FAB-10963,31523,31359,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,01/Jul/18 9:02 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,03/Jul/18 11:09 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgtb:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Jul/18 12:20 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/23921/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add link to Dave's Private Data video in Private Data Tutorial,FAB-10967,31529,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,pandrejko,pandrejko,02/Jul/18 10:15 PM,21/Jul/18 3:50 AM,28/Oct/23 3:03 AM,11/Jul/18 2:19 AM,,,,,,,,,v1.3.0,,,fabric-docs,,,,,0,,,,,,,"[~denyeart]  created a great video describing some private data concepts, beyond what is covered in the Private Data tutorial and I think the information would be beneficial to the community. We could link to the video, in a For more information....  link.

[https://ibm.box.com/s/j4vkrfcsajoouy85vob9w5aznfwe5vfn]

The video is published on YouTube https://www.youtube.com/watch?v=qyjDi93URJE

I'm talking to Mark P about that.

 

[~joe-alewine]",,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtk7:",,,,Unset,,,,,,Unset,,,,,,,,,,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Jul/18 5:23 AM;pandrejko;https://gerrit.hyperledger.org/r/24269;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Address races reported by the race detector in fabric/discovery,FAB-10968,31530,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,sykesm,sykesm,02/Jul/18 10:25 PM,24/Jul/18 9:19 PM,28/Oct/23 3:03 AM,24/Jul/18 9:19 PM,,,,,,,,,v1.3.0,,,fabric-gossip,,,,,0,hygiene,race,,,,,"Examples:
{code:java}
==================
WARNING: DATA RACE
Write at 0x0000051a3fd0 by goroutine 23:
  github.com/hyperledger/fabric/discovery/test.createSupport()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:394 +0xb9a
  github.com/hyperledger/fabric/discovery/test.createClientAndService()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:444 +0x2ba
  github.com/hyperledger/fabric/discovery/test.TestRevocation()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:246 +0x8c
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Previous write at 0x0000051a3fd0 by goroutine 21:
  github.com/hyperledger/fabric/discovery/test.createSupport()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:394 +0xb9a
  github.com/hyperledger/fabric/discovery/test.createClientAndService()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:444 +0x2ba
  github.com/hyperledger/fabric/discovery/test.TestEndorsementComputationFailure()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:193 +0x8c
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Goroutine 23 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  testing.runTests.func1()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1063 +0xa4
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d
  testing.runTests()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1061 +0x4e1
  testing.(*M).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:978 +0x2cd
  github.com/hyperledger/fabric/discovery/test.TestMain()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:101 +0x223
  main.main()
      _testmain.go:46 +0x22a

Goroutine 21 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  testing.runTests.func1()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1063 +0xa4
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d
  testing.runTests()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1061 +0x4e1
  testing.(*M).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:978 +0x2cd
  github.com/hyperledger/fabric/discovery/test.TestMain()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:101 +0x223
  main.main()
      _testmain.go:46 +0x22a{code}
and
{code:java}
WARNING: DATA RACE
Read at 0x00c4202484d0 by goroutine 23:
  github.com/hyperledger/fabric/discovery/test.testPeerSet.toMembershipSet()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:662 +0x9d
  github.com/hyperledger/fabric/discovery/test.createSupport()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:404 +0x100c
  github.com/hyperledger/fabric/discovery/test.createClientAndService()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:444 +0x2ba
  github.com/hyperledger/fabric/discovery/test.TestRevocation()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:246 +0x8c
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Previous write at 0x00c4202484d0 by goroutine 22:
  github.com/hyperledger/fabric/discovery/test.createSupport()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:394 +0xb31
  github.com/hyperledger/fabric/discovery/test.createClientAndService()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:444 +0x2ba
  github.com/hyperledger/fabric/discovery/test.TestLedgerFailure()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:220 +0x8c
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d

Goroutine 23 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  testing.runTests.func1()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1063 +0xa4
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d
  testing.runTests()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1061 +0x4e1
  testing.(*M).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:978 +0x2cd
  github.com/hyperledger/fabric/discovery/test.TestMain()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:101 +0x223
  main.main()
      _testmain.go:46 +0x22a

Goroutine 22 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564
  testing.runTests.func1()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1063 +0xa4
  testing.tRunner()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d
  testing.runTests()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1061 +0x4e1
  testing.(*M).Run()
      /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:978 +0x2cd
  github.com/hyperledger/fabric/discovery/test.TestMain()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/discovery/test/integration_test.go:101 +0x223
  main.main()
      _testmain.go:46 +0x22a{code}
 ",,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9128,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzgun:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jul/18 7:00 AM;yacovm;1) I'm not sure why *Data races when running TestDisconnectAndDisableEndpoint* was a subtask of this... I converted it to its own issue.

2) I fixed this in [https://gerrit.hyperledger.org/r/#/c/24227/]  , thanks for running the race detector ;);;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Address races reported by the race detector in gossip,FAB-10969,31531,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sykesm,sykesm,02/Jul/18 10:32 PM,13/Mar/20 2:14 AM,28/Oct/23 3:03 AM,13/Mar/20 2:14 AM,,,,,,,,,,,,fabric-gossip,,,,,0,hygiene,race,,,,,"Here's a small sample of tests that fail when running with the race detector running.
{code:java}
--- FAIL: TestGossipDiscoveryStopping (1.05s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestUpdate (1.93s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestGossipDiscoverySkipConnectingToLocalhostBootstrap (3.03s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestSelf (0.04s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestMemRespDisclosurePol (3.10s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestConnect (10.63s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestGetFullMembership (16.89s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestDisclosurePolicyWithPull (18.37s)
testing.go:730: race detected during execution of test{code}",,ronenschafferibm,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9128,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzguv:",,,,Unset,,,,,,Unset,,,,,,,,,,,ronenschafferibm,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jul/18 10:38 PM;sykesm;{code:java}
--- FAIL: TestInitiateSync (19.80s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestExpiration (21.41s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestMsgStoreExpirationWithMembershipMessages (25.18s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestConvergence (31.98s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestMsgStoreExpiration (44.48s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestCertRevocation (7.18s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestCertExpiration (16.05s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestConfidentiality (0.02s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestChannelReconfigureChannel (1.01s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestChannelStateInfoSnapshot (1.02s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestChannelPeriodicalPublishStateInfo (0.10s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestChannelPullWithDigestsFilter (1.16s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestChannelPull (1.15s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestOnDemandGossip (1.40s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestChannelAddToMessageStore (1.00s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestMsgStoreNotExpire (2.01s)
testing.go:730: race detected during execution of test{code};;;","02/Jul/18 10:44 PM;sykesm;{code:java}
--- FAIL: TestLeaveChannel (4.01s)
testing.go:730: race detected during execution of tes{code}
{code:java}
--- FAIL: TestChannelPeerNotInChannel (4.02s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestChannelStop (3.00s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestChannelMsgStoreEviction (4.19s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestChannelPulledBadBlocks (4.62s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestChannelBlockExpiration (16.02s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestExpiration (8.01s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestHandleMessage (0.67s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestFilter (0.67s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestRegisterMsgHook (0.68s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestAddAndRemove (2.69s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestListInvalidIdentities (9.01s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestNewGossipCryptoService (0.12s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestInitGossipService (2.04s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestWithStaticDeliverClientNotLeader (4.02s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestOverPopulation (0.27s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestGossipReception (0.00s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestBlockingEnqueue (5.61s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestGossipStateProvider_TestStateMessages (8.92s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestLedgerHeightFromProperties (10.01s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestTransferOfPvtDataBetweenPeers (10.01s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestNewGossipStateProvider_BatchingOfStateRequest (15.36s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestLargeBlockGap (20.51s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestAccessControl (34.42s)
testing.go:730: race detected during execution of test{code}
{code:java}
--- FAIL: TestNewGossipStateProvider_SendingManyMessages (36.05s)
testing.go:730: race detected during execution of test{code};;;","20/Jun/19 9:22 PM;ronenschafferibm;Current races in gossip (commit: 3d7e30406a288f985d5b088620df5d402250ccea)

h1. gossip/gossip package
h4.	TestIdentityExpiration() & TestMembership()

{code}
==================
WARNING: DATA RACE
Write at 0x00c00020e7b0 by goroutine 57:
  runtime.mapassign_faststr()
      /usr/local/go/src/runtime/map_faststr.go:202 +0x0
  github.com/hyperledger/fabric/gossip/gossip.TestIdentityExpiration()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:1418 +0x4a1
  testing.tRunner()
      /usr/local/go/src/testing/testing.go:865 +0x163

Previous read at 0x00c00020e7b0 by goroutine 581:
  runtime.mapaccess2_faststr()
      /usr/local/go/src/runtime/map_faststr.go:107 +0x0
  github.com/hyperledger/fabric/gossip/gossip.(*naiveCryptoService).Expiration()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:122 +0xe5
  github.com/hyperledger/fabric/gossip/identity.(*identityMapperImpl).Put()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/identity/identity.go:113 +0xcf
  github.com/hyperledger/fabric/gossip/gossip.(*discoverySecurityAdapter).ValidateAliveMsg()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:1001 +0x36b
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleMsgFromComm()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:372 +0xeb4
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleMessages()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:297 +0x162

Goroutine 57 (running) created at:
  testing.(*T).Run()
      /usr/local/go/src/testing/testing.go:916 +0x65a
  testing.runTests.func1()
      /usr/local/go/src/testing/testing.go:1157 +0xa8
  testing.tRunner()
      /usr/local/go/src/testing/testing.go:865 +0x163
  testing.runTests()
      /usr/local/go/src/testing/testing.go:1155 +0x523
  testing.(*M).Run()
      /usr/local/go/src/testing/testing.go:1072 +0x2eb
  github.com/hyperledger/fabric/gossip/gossip.TestMain()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:45 +0x15d
  main.main()
      _testmain.go:156 +0x330

Goroutine 581 (running) created at:
  github.com/hyperledger/fabric/gossip/discovery.NewDiscoveryService()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:117 +0x838
  github.com/hyperledger/fabric/gossip/gossip.New()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:129 +0x1240
  github.com/hyperledger/fabric/gossip/gossip.newGossipInstanceWithGrpcMcsMetrics()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:249 +0x8b1
  github.com/hyperledger/fabric/gossip/gossip.newGossipInstanceCreateGRPCWithMCSWithMetrics()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:317 +0xc6
  github.com/hyperledger/fabric/gossip/gossip.newGossipInstanceCreateGRPC()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:323 +0xfe
  github.com/hyperledger/fabric/gossip/gossip.TestMembership.func1()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:579 +0xa1
==================
{code}

h4. TestDataLeakage()
{code}
==================
WARNING: DATA RACE
Write at 0x00c011808d80 by goroutine 360:
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).learnExistingMembers()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:821 +0x6c2
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleAliveMessage()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:533 +0xcf1
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleMsgFromComm()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:373 +0xe6a
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleMessages()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:297 +0x162

Previous read at 0x00c011808d80 by goroutine 2941:
  github.com/hyperledger/fabric/gossip/discovery.(*NetworkMember).String()
      <autogenerated>:1 +0x77
  fmt.(*pp).handleMethods()
      /usr/local/go/src/fmt/print.go:616 +0x433
  fmt.(*pp).printArg()
      /usr/local/go/src/fmt/print.go:699 +0x24f
  fmt.(*pp).doPrintln()
      /usr/local/go/src/fmt/print.go:1159 +0xb2
  fmt.Sprintln()
      /usr/local/go/src/fmt/print.go:282 +0x5f
  github.com/hyperledger/fabric/common/flogging.formatArgs()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/common/flogging/zap.go:105 +0x50
  github.com/hyperledger/fabric/common/flogging.(*FabricLogger).Warning()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/common/flogging/zap.go:79 +0x70
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).expireDeadMembers()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:712 +0x430
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).periodicalCheckAlive()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:678 +0x2b5

Goroutine 360 (running) created at:
  github.com/hyperledger/fabric/gossip/discovery.NewDiscoveryService()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:117 +0x838
  github.com/hyperledger/fabric/gossip/gossip.New()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:129 +0x1240
  github.com/hyperledger/fabric/gossip/gossip.newGossipInstanceWithGrpcMcsMetrics()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:249 +0x8b1
  github.com/hyperledger/fabric/gossip/gossip.TestDataLeakage.func1()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:1071 +0x382

Goroutine 2941 (running) created at:
  github.com/hyperledger/fabric/gossip/discovery.NewDiscoveryService()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:116 +0x816
  github.com/hyperledger/fabric/gossip/gossip.New()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:129 +0x1240
  github.com/hyperledger/fabric/gossip/gossip.newGossipInstanceWithGrpcMcsMetrics()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:249 +0x8b1
  github.com/hyperledger/fabric/gossip/gossip.TestDataLeakage.func1()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:1071 +0x382
==================
{code}


h4. TestConfidentiality()
{code}
==================
WARNING: DATA RACE
Write at 0x00c01504f980 by goroutine 4278:
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).learnExistingMembers()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:821 +0x6c2
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleAliveMessage()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:533 +0xcf1
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleMsgFromComm()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:329 +0x8ce
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleMessages()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:297 +0x162

Previous read at 0x00c01504f980 by goroutine 4731:
  github.com/hyperledger/fabric/gossip/discovery.(*NetworkMember).String()
      <autogenerated>:1 +0x77
  fmt.(*pp).handleMethods()
      /usr/local/go/src/fmt/print.go:616 +0x433
  fmt.(*pp).printArg()
      /usr/local/go/src/fmt/print.go:699 +0x24f
  fmt.(*pp).doPrintln()
      /usr/local/go/src/fmt/print.go:1159 +0xb2
  fmt.Sprintln()
      /usr/local/go/src/fmt/print.go:282 +0x5f
  github.com/hyperledger/fabric/common/flogging.formatArgs()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/common/flogging/zap.go:105 +0x50
  github.com/hyperledger/fabric/common/flogging.(*FabricLogger).Warning()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/common/flogging/zap.go:79 +0x70
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).expireDeadMembers()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:712 +0x430
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).periodicalCheckAlive()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:678 +0x2b5

Goroutine 4278 (running) created at:
  github.com/hyperledger/fabric/gossip/discovery.NewDiscoveryService()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:117 +0x838
  github.com/hyperledger/fabric/gossip/gossip.New()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:129 +0x1240
[33m2019-06-19 09:56:44.939 UTC [gossip.comm] func1 -> WARN 5c9d[0m 127.0.0.1:23279, PKIid:3132372e302e302e313a3233323739 isn't responsive: EOF
  github.com/hyperledger/fabric/gossip/gossip.newGossipInstanceWithGRPCWithExternalEndpoint()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/orgs_test.go:136 +0x829
  github.com/hyperledger/fabric/gossip/gossip.TestConfidentiality()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/orgs_test.go:362 +0xdc5
  testing.tRunner()
      /usr/local/go/src/testing/testing.go:865 +0x163

Goroutine 4731 (running) created at:
  github.com/hyperledger/fabric/gossip/discovery.NewDiscoveryService()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:116 +0x816
  github.com/hyperledger/fabric/gossip/gossip.New()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:129 +0x1240
  github.com/hyperledger/fabric/gossip/gossip.newGossipInstanceWithGRPCWithExternalEndpoint()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/orgs_test.go:136 +0x829
  github.com/hyperledger/fabric/gossip/gossip.TestConfidentiality()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/orgs_test.go:362 +0xdc5
  testing.tRunner()
      /usr/local/go/src/testing/testing.go:865 +0x163
==================
{code}

h4. TestPull()
{code}
==================
WARNING: DATA RACE
Write at 0x00c00c7cf680 by goroutine 4456:
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).learnExistingMembers()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:821 +0x6c2
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleAliveMessage()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:533 +0xcf1
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleMsgFromComm()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:329 +0x8ce
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleMessages()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:297 +0x162

Previous read at 0x00c00c7cf680 by goroutine 4915:
  github.com/hyperledger/fabric/gossip/discovery.(*NetworkMember).String()
      <autogenerated>:1 +0x77
  fmt.(*pp).handleMethods()
      /usr/local/go/src/fmt/print.go:616 +0x433
  fmt.(*pp).printArg()
      /usr/local/go/src/fmt/print.go:699 +0x24f
  fmt.(*pp).doPrintln()
      /usr/local/go/src/fmt/print.go:1159 +0xb2
  fmt.Sprintln()
      /usr/local/go/src/fmt/print.go:282 +0x5f
  github.com/hyperledger/fabric/common/flogging.formatArgs()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/common/flogging/zap.go:105 +0x50
  github.com/hyperledger/fabric/common/flogging.(*FabricLogger).Warning()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/common/flogging/zap.go:79 +0x70
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).expireDeadMembers()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:712 +0x430
  github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handlePresumedDeadPeers()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:275 +0x2f1

Goroutine 4456 (running) created at:
  github.com/hyperledger/fabric/gossip/discovery.NewDiscoveryService()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:117 +0x838
  github.com/hyperledger/fabric/gossip/gossip.New()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:129 +0x1240
  github.com/hyperledger/fabric/gossip/gossip.newGossipInstanceWithGRPCWithOnlyPull()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:306 +0x8af
  github.com/hyperledger/fabric/gossip/gossip.newGossipInstanceCreateGRPCWithOnlyPull()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:329 +0xc6
  github.com/hyperledger/fabric/gossip/gossip.TestPull.func1()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:411 +0xd3

Goroutine 4915 (running) created at:
  github.com/hyperledger/fabric/gossip/discovery.NewDiscoveryService()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:119 +0x87c
  github.com/hyperledger/fabric/gossip/gossip.New()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:129 +0x1240
  github.com/hyperledger/fabric/gossip/gossip.newGossipInstanceWithGRPCWithOnlyPull()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:306 +0x8af
  github.com/hyperledger/fabric/gossip/gossip.newGossipInstanceCreateGRPCWithOnlyPull()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:329 +0xc6
  github.com/hyperledger/fabric/gossip/gossip.TestPull.func1()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:411 +0xd3
==================
{code}

h1. gossip/state package

h4. TestHaltChainProcessing()
{code}
==================
WARNING: DATA RACE
Write at 0x0000020ad300 by goroutine 75:
  github.com/hyperledger/fabric/gossip/state.TestHaltChainProcessing.func4()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/state/state_test.go:767 +0x3a
  github.com/hyperledger/fabric/gossip/state.TestHaltChainProcessing()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/state/state_test.go:792 +0x1102
  testing.tRunner()
      /usr/local/go/src/testing/testing.go:865 +0x163

Previous read at 0x0000020ad300 by goroutine 79:
  github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).antiEntropy()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/state/state.go:651 +0xba

Goroutine 75 (running) created at:
  testing.(*T).Run()
      /usr/local/go/src/testing/testing.go:916 +0x65a
  testing.runTests.func1()
      /usr/local/go/src/testing/testing.go:1157 +0xa8
  testing.tRunner()
      /usr/local/go/src/testing/testing.go:865 +0x163
  testing.runTests()
      /usr/local/go/src/testing/testing.go:1155 +0x523
  testing.(*M).Run()
      /usr/local/go/src/testing/testing.go:1072 +0x2eb
  main.main()
      _testmain.go:134 +0x334

Goroutine 79 (running) created at:
  github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/state/state.go:336 +0xdc7
  github.com/hyperledger/fabric/gossip/state.newPeerNodeWithGossipWithValidatorWithMetrics()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/state/state_test.go:418 +0x5b9
  github.com/hyperledger/fabric/gossip/state.newPeerNodeWithGossipWithValidator()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/state/state_test.go:447 +0xf1
  github.com/hyperledger/fabric/gossip/state.TestHaltChainProcessing()
      /gpfs/haifa/home/r/o/ronensch/m2/go/src/github.com/hyperledger/fabric/gossip/state/state_test.go:785 +0xd12
  testing.tRunner()
      /usr/local/go/src/testing/testing.go:865 +0x163
==================
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,
Don't refuse peers with unexpected PKI-IDs if they belong to the same org,FAB-10970,31533,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,02/Jul/18 10:57 PM,20/Sep/18 1:38 AM,28/Oct/23 3:03 AM,06/Jul/18 4:24 AM,,,,,,,,,v1.2.1,v1.3.0,,fabric-gossip,,,,,0,,,,,,,"The gossip communication layer has an API which allows to send a message to a peer given an endpoint and a PKI-ID.

If the remote peer presents a different PKI-ID from what is given in the Send() method - the connection aborts.  This keeps on until the peer eventually purges the PKI-ID from its memory, however it may take ~ 30 minutes.

This is problematic for cases in which a peer has renewed his certificate and now its PKI-ID has changed. Ideally we could identify if the certificate belongs to the same peer, but there is no API for that in the MSP as GetIdentifier() is implemented as a hash over the raw certificate. 

A trivial solution for this problem that I think is good enough is to not abort the connection in case the peer still belongs to the organization that it belonged to beforehand. ",,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzgvb:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jul/18 9:56 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/23985/;;;","20/Sep/18 1:38 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/26380/] for release-1.2 backport merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
JavaEnv does not build on x86_64 systems for v1.1,FAB-10971,31535,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,C0rWin,mrshah-ibm,mrshah-ibm,02/Jul/18 11:31 PM,02/Dec/18 8:11 AM,28/Oct/23 3:03 AM,02/Dec/18 8:11 AM,v1.1.0,v1.1.1,,,,,,,,,,fabric-build,,,,,0,,,,,,,"When building the javaenv image, I get the following error:

 
{quote}docker build -t hyperledger/fabric-javaenv build/image/javaenv
Sending build context to Docker daemon 50.18kB

Step 1/15 : FROM hyperledger/fabric-baseimage:0.4.6
 ---> d41e75e114ef
Step 2/15 : RUN curl -sSL https://services.gradle.org/distributions/gradle-2.12-bin.zip > /tmp/gradle-2.12-bin.zip
 ---> Running in df30d2d95011
Removing intermediate container df30d2d95011
 ---> 2008eeb2351e
Step 3/15 : RUN unzip -qo /tmp/gradle-2.12-bin.zip -d /opt && rm /tmp/gradle-2.12-bin.zip
 ---> Running in 4ddafd11895c
Removing intermediate container 4ddafd11895c
 ---> 26fc0e018d49
Step 4/15 : RUN ln -s /opt/gradle-2.12/bin/gradle /usr/bin
 ---> Running in 95ea5f700f1a
Removing intermediate container 95ea5f700f1a
 ---> a1d309b3829e
Step 5/15 : ENV MAVEN_VERSION=3.3.9
 ---> Running in d529cc24a855
Removing intermediate container d529cc24a855
 ---> 73da8b1955b3
Step 6/15 : ENV USER_HOME_DIR=""/root""
 ---> Running in 022eb2a7272d
Removing intermediate container 022eb2a7272d
 ---> ad2e5fb646b5
Step 7/15 : RUN mkdir -p /usr/share/maven /usr/share/maven/ref && curl -fsSL http://www-us.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar -xzC /usr/share/maven --strip-components=1 && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
 ---> Running in 36ae34b90538
Removing intermediate container 36ae34b90538
 ---> 9fbbc5b8aed9
Step 8/15 : ENV MAVEN_HOME /usr/share/maven
 ---> Running in d7505f1cb6b2
Removing intermediate container d7505f1cb6b2
 ---> 9eb6074512a7
Step 9/15 : ENV MAVEN_CONFIG ""$USER_HOME_DIR/.m2""
 ---> Running in cddda5460704
Removing intermediate container cddda5460704
 ---> 795cafaa1c6f
Step 10/15 : ADD payload/javashim.tar.bz2 /root
 ---> f9f5813c2811
Step 11/15 : ADD payload/protos.tar.bz2 /root
 ---> 5f8d81e49e50
Step 12/15 : ADD payload/settings.gradle /root
 ---> 4fdd483fadeb
Step 13/15 : WORKDIR /root
Removing intermediate container a9330af061c7
 ---> 4f3d9a4b8304
Step 14/15 : RUN core/chaincode/shim/java/javabuild.sh
 ---> Running in 3e1096eb15f1
�[91m
�[0m�[91mFAILURE: �[0m�[91mBuild failed with an exception.�[0m�[91m
�[0m�[91m
�[0m�[91m* What went wrong:
�[0m�[91mA problem occurred configuring project ':core:chaincode:shim:java'.
�[0m�[91m> �[0m�[91mCould not resolve all dependencies for configuration ':core:chaincode:shim:java:classpath'.
�[0m�[91m �[0m�[91m> �[0m�[91mCould not resolve com.google.protobuf:protobuf-gradle-plugin:0.8.0.
�[0m�[91m Required by:
�[0m�[91m root.core.chaincode.shim:java:unspecified
�[0m�[91m �[0m�[91m> �[0m�[91mCould not resolve com.google.protobuf:protobuf-gradle-plugin:0.8.0.
�[0m�[91m �[0m�[91m> �[0m�[91mCould not get resource 'https://repo1.maven.org/maven2/com/google/protobuf/protobuf-gradle-plugin/0.8.0/protobuf-gradle-plugin-0.8.0.pom'.
�[0m�[91m �[0m�[91m> �[0m�[91mCould not GET 'https://repo1.maven.org/maven2/com/google/protobuf/protobuf-gradle-plugin/0.8.0/protobuf-gradle-plugin-0.8.0.pom'.
�[0m�[91m �[0m�[91m> �[0m�[91mReceived fatal alert: protocol_version
�[0m�[91m �[0m�[91m> �[0m�[91mCould not resolve com.google.protobuf:protobuf-gradle-plugin:0.8.0.
�[0m�[91m �[0m�[91m> �[0m�[91mCould not get resource 'https://jcenter.bintray.com/com/google/protobuf/protobuf-gradle-plugin/0.8.0/protobuf-gradle-plugin-0.8.0.pom'.
�[0m�[91m �[0m�[91m> �[0m�[91mCould not GET 'https://jcenter.bintray.com/com/google/protobuf/protobuf-gradle-plugin/0.8.0/protobuf-gradle-plugin-0.8.0.pom'.
�[0m�[91m �[0m�[91m> �[0m�[91mConnection reset
�[0m�[91m �[0m�[91m> �[0m�[91mCould not resolve com.google.protobuf:protobuf-gradle-plugin:0.8.0.
�[0m�[91m �[0m�[91m> �[0m�[91mCould not get resource 'https://plugins.gradle.org/m2/com/google/protobuf/protobuf-gradle-plugin/0.8.0/protobuf-gradle-plugin-0.8.0.pom'.
�[0m�[91m �[0m�[91m> �[0m�[91mCould not GET 'https://plugins.gradle.org/m2/com/google/protobuf/protobuf-gradle-plugin/0.8.0/protobuf-gradle-plugin-0.8.0.pom'.
�[0m�[91m �[0m�[91m> �[0m�[91mConnection reset
�[0m�[91m �[0m�[91m> �[0m�[91mCould not resolve com.google.guava:guava:18.0.
�[0m�[91m Required by:
�[0m�[91m root.core.chaincode.shim:java:unspecified > gradle.plugin.com.google.protobuf:protobuf-gradle-plugin:0.8.0
�[0m�[91m �[0m�[91m> �[0m�[91mCould not resolve com.google.guava:guava:18.0.
�[0m�[91m �[0m�[91m> �[0m�[91mCould not get resource 'https://repo1.maven.org/maven2/com/google/guava/guava/18.0/guava-18.0.pom'.
�[0m�[91m �[0m�[91m> �[0m�[91mCould not GET 'https://repo1.maven.org/maven2/com/google/guava/guava/18.0/guava-18.0.pom'.
�[0m�[91m > Received fatal alert: protocol_version
�[0m�[91m > �[0m�[91mCould not resolve com.google.guava:guava:18.0.
 �[0m�[91m> Could not get resource 'https://jcenter.bintray.com/com/google/guava/guava/18.0/guava-18.0.pom'.
�[0m�[91m > �[0m�[91mCould not GET 'https://jcenter.bintray.com/com/google/guava/guava/18.0/guava-18.0.pom'.
�[0m�[91m > �[0m�[91mConnection reset
 > Could not resolve com.google.guava:guava:18.0.
�[0m�[91m > �[0m�[91mCould not get resource 'https://plugins.gradle.org/m2/com/google/guava/guava/18.0/guava-18.0.pom'.
�[0m�[91m > Could not GET 'https://plugins.gradle.org/m2/com/google/guava/guava/18.0/guava-18.0.pom'.
�[0m�[91m > �[0m�[91mConnection reset
�[0m�[91m > �[0m�[91mCould not resolve com.google.gradle:osdetector-gradle-plugin:1.4.0.
�[0m�[91m Required by:
�[0m�[91m root.core.chaincode.shim:java:unspecified > gradle.plugin.com.google.protobuf:protobuf-gradle-plugin:0.8.0
�[0m�[91m > Could not resolve com.google.gradle:osdetector-gradle-plugin:1.4.0.
�[0m�[91m �[0m�[91m> �[0m�[91mCould not get resource 'https://repo1.maven.org/maven2/com/google/gradle/osdetector-gradle-plugin/1.4.0/osdetector-gradle-plugin-1.4.0.pom'.
 �[0m�[91m> Could not GET 'https://repo1.maven.org/maven2/com/google/gradle/osdetector-gradle-plugin/1.4.0/osdetector-gradle-plugin-1.4.0.pom'.
 > �[0m�[91mReceived fatal alert: protocol_version
 > �[0m�[91mCould not resolve com.google.gradle:osdetector-gradle-plugin:1.4.0.
 > �[0m�[91mCould not get resource 'https://jcenter.bintray.com/com/google/gradle/osdetector-gradle-plugin/1.4.0/osdetector-gradle-plugin-1.4.0.pom'.
 > �[0m�[91mCould not GET 'https://jcenter.bintray.com/com/google/gradle/osdetector-gradle-plugin/1.4.0/osdetector-gradle-plugin-1.4.0.pom'.
 > �[0m�[91mConnection reset
 > Could not resolve com.google.gradle:osdetector-gradle-plugin:1.4.0.
�[0m�[91m > �[0m�[91mCould not get resource 'https://plugins.gradle.org/m2/com/google/gradle/osdetector-gradle-plugin/1.4.0/osdetector-gradle-plugin-1.4.0.pom'.
 > �[0m�[91mCould not GET 'https://plugins.gradle.org/m2/com/google/gradle/osdetector-gradle-plugin/1.4.0/osdetector-gradle-plugin-1.4.0.pom'.
�[0m�[91m > �[0m�[91mConnection reset
�[0m�[91m > Could not resolve commons-lang:commons-lang:2.6.
 Required by:
�[0m�[91m root.core.chaincode.shim:java:unspecified > gradle.plugin.com.google.protobuf:protobuf-gradle-plugin:0.8.0
 �[0m�[91m> Could not resolve commons-lang:commons-lang:2.6.
�[0m�[91m > Could not get resource 'https://repo1.maven.org/maven2/commons-lang/commons-lang/2.6/commons-lang-2.6.pom'.
�[0m�[91m > �[0m�[91mCould not GET 'https://repo1.maven.org/maven2/commons-lang/commons-lang/2.6/commons-lang-2.6.pom'.
�[0m�[91m > Received fatal alert: protocol_version
�[0m�[91m > �[0m�[91mCould not resolve commons-lang:commons-lang:2.6.
 �[0m�[91m> Could not get resource 'https://jcenter.bintray.com/commons-lang/commons-lang/2.6/commons-lang-2.6.pom'.
�[0m�[91m > Could not GET 'https://jcenter.bintray.com/commons-lang/commons-lang/2.6/commons-lang-2.6.pom'.
�[0m�[91m > Connection reset
�[0m�[91m > Could not resolve commons-lang:commons-lang:2.6.
�[0m�[91m > �[0m�[91mCould not get resource 'https://plugins.gradle.org/m2/commons-lang/commons-lang/2.6/commons-lang-2.6.pom'.
 > �[0m�[91mCould not GET 'https://plugins.gradle.org/m2/commons-lang/commons-lang/2.6/commons-lang-2.6.pom'.
 �[0m�[91m> Connection reset

�[0m�[91m* Try:
�[0m�[91mRun with --stacktrace option to get the stack trace. Run with �[0m�[91m--info or --debug�[0m�[91m option to get more log output.
�[0mThe command '/bin/sh -c core/chaincode/shim/java/javabuild.sh' returned a non-zero code: 1
Makefile:304: recipe for target 'build/image/javaenv/.dummy-x86_64-1.1.0' failed
make: *** [build/image/javaenv/.dummy-x86_64-1.1.0] Error 1
{quote}
 ",,C0rWin,denyeart,mastersingh24,mrshah-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgvr:",,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,mastersingh24,mrshah-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jul/18 6:44 AM;C0rWin;https://gerrit.hyperledger.org/r/23963;;;","11/Sep/18 9:20 PM;denyeart;[~C0rWin] This one is abandoned. Do we need to do anything here, or just close the Jira?;;;","12/Sep/18 12:55 AM;C0rWin;[~denyeart]
{quote}
Artem Barger This one is abandoned. Do we need to do anything here, or just close the Jira?
{quote}

I think this is a question for [~mrshah-ibm], last time I've asked whenever they still need a fix, I've got an impression they manage w/o it.;;;","02/Dec/18 8:11 AM;mastersingh24;Not going to deal with Java CC for 1.1;;;",,,,,,,,,,,,,,,,,,,,,,,
Remove LSCC invocations from chaincode package,FAB-10972,31537,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,02/Jul/18 11:42 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:20 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"Presently, the core/chaincode package does a chaincode invocation of the LSCC in order to get back the chaincode definition information necessary to properly route chaincode requests and start chaincode containers.

This is a tight coupling between the external LSCC API and the internal chaincode package implementation which is a problem to begin with, but additionally, there are unnecessary rounds of marshaling and unmarshaling, and added complexities in mocking and wiring.

Instead, lifecycle should be presented to the chaincode package as an invokable interface which is not chaincode.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11237,,,,,,,,,"1|hzzgwf:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hygiene removal of internal state passed by external message types,FAB-10973,31538,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,02/Jul/18 11:45 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:20 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"The peer codebase makes extensive use of messaging protos, particularly the ChaincodeDeploymentSpec, ChaincodeInvocationSpec, and ChaincodeSpec messages, to pass state through the peer internally.  This creates a tight coupling between the external interfaces of peer and lifecycle and the internal implementations.

In order to implement a new lifecycle these tight couplings must be eliminated.  This task is making the state dependencies of various components explicit and to pass internal messages rather than external protos.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11237,,,,,,,,,"1|hzzgwn:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove ChaincodeSpec from core/controller,FAB-10974,31540,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,02/Jul/18 11:47 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 8:30 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgx3:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Split Execute into Execute/ExecuteInit,FAB-10975,31543,31537,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,02/Jul/18 11:53 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 8:46 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"Presently, the Execute function can either take a
'ChaincodeInvocationSpec' or a 'ChaincodeDeploymentSpec', and the path
switches in a few different places depending on which it is.  This makes
the code complicated and difficult to understand, and in the interest of
removing the chaincode deployment spec entirely, this code path should
be isolated.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgxj:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move lifecycle.go to its own package,FAB-10976,31545,31537,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 12:14 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 8:34 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgxz:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Abstract lifecycle operations to interface,FAB-10977,31546,31537,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 12:18 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 8:47 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgy7:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove ChaincodeSpec from container runtime,FAB-10978,31547,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 12:33 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 9:20 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgyf:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
PackageProvider should only return code package,FAB-10979,31548,31537,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 12:39 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 9:22 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgyn:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unhide LSCC implementation,FAB-10981,31550,31537,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 12:41 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 9:23 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgyv:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add direct accessor for LSCC GetChaincodeDeploymentSpec,FAB-10982,31551,31537,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 12:43 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 9:25 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgz3:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
System chaincode lifecycle should not be handled separately,FAB-10983,31552,,Task,To Do,FAB,Fabric,software,denyeart,,,Medium,,,jyellick,jyellick,03/Jul/18 2:12 AM,05/Apr/19 12:55 AM,28/Oct/23 3:03 AM,,,,,,,,,,v2.1.0,,,fabric-peer,,,,,0,,,,,,,"Presently, the core/scc/ package declares all of the system chaincodes which exist, and their attributes, and is used by the chaincode package to determine which chaincodes are system chaincodes and to apply special checks to these chaincodes.

There is no compelling reason why system chaincodes should be treated differently than user chaincode, especially why that treatment should spill into other sections of the code.  Ultimately, system chaincodes should be managed by the same lifecycle as user ones.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-14628,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11237,,,,,,,,,"1|hzzgzb:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare system chaincodes to describe themselves,FAB-10984,31553,31552,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 2:13 AM,05/Apr/19 2:13 AM,28/Oct/23 3:03 AM,05/Apr/19 2:13 AM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgzj:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Builtin system chaincodes should describe themselves,FAB-10985,31554,31552,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 3:27 AM,05/Apr/19 2:14 AM,28/Oct/23 3:03 AM,05/Apr/19 2:14 AM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgzr:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove CDS from runtime_launcher start(...),FAB-10986,31555,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 3:30 AM,20/Aug/19 1:00 PM,28/Oct/23 3:03 AM,20/Aug/19 1:00 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgzz:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use LSCC direct accessor for GetChaincodeDeploymentSpec,FAB-10987,31556,31537,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 3:32 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 2:46 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh07:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
"fabric-test daily svt, 4 behave tests with cc upgrades, value cannot be unmarshalled",FAB-10988,31557,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,nnao,scottz,scottz,03/Jul/18 3:33 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,18/Jul/18 3:14 AM,,,,,,,,,Future,,,fabric-quality,,,,,0,ci-failure,,,,,,"In today's daily svt fabric-test results in master (v1.2), [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-svt-x86_64/68/consoleFull,] 4 behave tests are failing. The ""peer chaincode upgrade"" command is at fault

Failing testcases in peer.feature: FAB-8381, FAB-8759, FAB-8759, FAB-8407

Suspect this might be a test framework issue, which probably must be changed to adapt to an API change - but this is still TBD.

It is reproducible on desktop: I executed `fabric-test/feature$ behave -k -n ""values change"" peer.feature `, which failed at step `When an admin upgrades the chaincode on channel` with the following error information:

\{'peer0.org1.example.com': 'Error occurred [\'docker exec peer0.org1.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/23f663ec7e2311e8a3da02c9fd7cbfce/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/configs/23f663ec7e2311e8a3da02c9fd7cbfce/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt CORE_PEER_TLS_CERT_FILE=/var/hyperledger/configs/23f663ec7e2311e8a3da02c9fd7cbfce/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt CORE_PEER_TLS_KEY_FILE=/var/hyperledger/configs/23f663ec7e2311e8a3da02c9fd7cbfce/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key peer chaincode upgrade --name mycc --version 3 --channelID versioningtest --ctor \\\'\{\\\\""Args\\\\"": [\\\\""init\\\\"",\\\\""a\\\\"",\\\\""1000\\\\"",\\\\""b\\\\"",\\\\""2000\\\\""]}\\\' --tls true --cafile /var/hyperledger/configs/23f663ec7e2311e8a3da02c9fd7cbfce/ordererOrganizations/example.com/orderers/orderer0.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --orderer orderer0.example.com:7050 ""\']: \x1b[36m2018-07-02 18:12:38.918 UTC [viperutil] getKeysRecursively -> DEBU 001\x1b[0m Found map[string]interface\{} value for peer.BCCSP\n\x1b[36m2018-07-02 18:12:38.918 UTC [viperutil] unmarshalJSON -> DEBU 002\x1b[0m Unmarshal JSON: value cannot be unmarshalled: invalid character \'S\' looking for beginning of value

 ",,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh0f:",,,,,,,,,,,,,,,,,,,,,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"04/Jul/18 6:14 AM;scottz;Failing scenarios:
|13:44:29 peer.feature:251 FAB-8381: Test MSP Identity - Malicious Peer (Clients set as writers in policy)|
|13:44:29 peer.feature:292 FAB-8759: Test querying a peer with two different versions of chaincode - values change|
|13:44:29 peer.feature:314 FAB-8759: Test querying a peer that has two different versions of chaincode - no change in data|
|13:44:29 peer.feature:336 FAB-7407: Update the channel policies - add an organization|;;;","06/Jul/18 2:06 PM;nnao;https://gerrit.hyperledger.org/r/c/24139/;;;","07/Jul/18 5:48 PM;nnao;Is there any document which written how to remove an organization.
Deletion of the organization of org 2 has failed in the test of FAB-7407.;;;","07/Jul/18 11:37 PM;scottz;Try:

[https://www.ibm.com/developerworks/cloud/library/cl-add-an-organization-to-your-hyperledger-fabric-blockchain/index.html]

or

[https://hyperledger-fabric.readthedocs.io/en/release-1.2/channel_update_tutorial.html]

After we fetch and edit to remove the third org from the config, make sure the system channel config update (to remove the org) is signed by all the necessary org admins. Check the policy: if it is ""ALL"" then all three must sign it. Otherwise, the removal transaction would fail, and the 3rd org would remain in the channel and continue to receive new blocks.;;;","08/Jul/18 8:51 AM;nnao;[~scottz] Thanks. I will try it.;;;","11/Jul/18 10:19 AM;nnao;I tried to remove an org2 manually. Channel update was a success. But an invoke was failed from org3(the response is a success but not change the value).
Of course, an invoke was failed from org2(Error: error sending transaction for invoke: got unexpected status: FORBIDDEN). Do I need something else? Do I need to update the chaincode?
;;;","11/Jul/18 9:04 PM;scottz;I am sure this worked previously. Maybe you could try it using a load from a week or two earlier to compare behavior.

Did you check the policy we are using ([~latitiah] could help too) for the channel update transactions, and the policy for the invoke transactions? Did you check the peer logs? (Use @doNotDecompose for the individual test, to leave all the artifacts when failure occurs.)

The expected behavior is:  if you successfully remove an org, then queries on a peer in that removed org should continue to give the last known value from before the removal. Invokes on the peers of the removed org would fail. Invokes and queries on the remaining member peers should work fine, assuming they do not require approvals from the revoked org.;;;",,,,,,,,,,,,,,,,,,,,
fabric-test daily svt failures: 18 behave tests using the NodeJS SDK interface,FAB-10989,31558,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,latitiah,scottz,scottz,03/Jul/18 3:40 AM,19/Mar/19 8:12 PM,28/Oct/23 3:03 AM,19/Jul/18 11:00 PM,,,,,,,,,Future,,,fabric-quality,,,,,0,ci-failure,,,,,,"In today's daily svt fabric-test results in master (v1.2), [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-svt-x86_64/68/consoleFull,] 18 behave test scenarios are failing which all use the node SDK interface instead of the CLI

Suspect this might be a test framework issue, which probably must be changed to adapt to an API change - but this is still TBD.

In CI, the tests fail when first trying to use the network to  invoke, sometimes a couple steps after the `use the NodeJS SDK interface` step.

Reproduced on the desktop, where the tests fail when internally executing the ""npm install --silent"" procedure call from the python framework during the step:


*And I use the NodeJS SDK interface* # steps/basic_impl.py:27 91.812s
 Traceback (most recent call last):
 File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 1329, in run
 match.run(runner.context)
 File ""/usr/local/lib/python2.7/dist-packages/behave/matchers.py"", line 98, in run
 self.func(context, *args, **kwargs)
 File ""steps/basic_impl.py"", line 29, in step_impl
 context.interface = SDKInterface(context, language)
 File ""/opt/gopath/src/github.com/hyperledger/fabric-test/feature/steps/endorser_util.py"", line 237, in __init__
 self.initializeNode()
 File ""/opt/gopath/src/github.com/hyperledger/fabric-test/feature/steps/endorser_util.py"", line 271, in initializeNode
 shell=True)
 File ""/usr/lib/python2.7/subprocess.py"", line 574, in check_output
 raise CalledProcessError(retcode, cmd, output=output)
 subprocess.CalledProcessError: Command *'['npm install --silent']' returned non-zero exit status 254*

 ",,latitiah,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh0n:",,,,,,,,,,,,,,,,,,,,,latitiah,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"04/Jul/18 6:13 AM;scottz;|Failing scenarios : ""npm install --silent"" fails during test|
|13:44:29 orderer.feature:118 FAB-3851: Message Payloads of size 1048576, for solo orderer -- @1.1|
|13:44:29 orderer.feature:119 FAB-3851: Message Payloads of size 2097152, for solo orderer -- @1.2|
|13:44:29 orderer.feature:120 FAB-3851: Message Payloads of size 4194304, for solo orderer -- @1.3|
|13:44:29 orderer.feature:121 FAB-3851: Message Payloads of size 1048576, for kafka orderer -- @1.4|
|13:44:29 orderer.feature:122 FAB-3851: Message Payloads of size 2097152, for kafka orderer -- @1.5|
|13:44:29 orderer.feature:123 FAB-3851: Message Payloads of size 4194304, for kafka orderer -- @1.6|
|13:44:29 orderer.feature:146 FAB-3859: Message Sizes with Configuration Tweaks -- @1.1|
|13:44:29 orderer.feature:147 FAB-3859: Message Sizes with Configuration Tweaks -- @1.2|
|13:44:29 orderer.feature:148 FAB-3859: Message Sizes with Configuration Tweaks -- @1.3|
|13:44:29 orderer.feature:149 FAB-3859: Message Sizes with Configuration Tweaks -- @1.4|
|13:44:29 orderer.feature:172 FAB-3857: 20 key/value pairs in Payloads of size 2048 -- @1.1|
|13:44:29 orderer.feature:173 FAB-3857: 1024 key/value pairs in Payloads of size 1048576 -- @1.2|
|13:44:29 orderer.feature:174 FAB-3857: 1024 key/value pairs in Payloads of size 2097152 -- @1.3|
| |
|13:44:29 peer.feature:32 FAB-3505: Test chaincode example02 deploy, invoke, and query, with solo orderer -- @1.1|
|13:44:29 peer.feature:33 FAB-3505: Test chaincode example02 deploy, invoke, and query, with kafka orderer -- @1.2|
|13:44:29 peer.feature:198 FAB-7150/FAB-7153/FAB-7759: Test Mutual TLS/ClientAuth with tls with kafka based-orderer -- @1.1|
|13:44:29 peer.feature:199 FAB-7150/FAB-7153/FAB-7759: Test Mutual TLS/ClientAuth with tls with solo based-orderer -- @1.2|
|13:44:29 peer.feature:203 FAB-7150/FAB-7153/FAB-7759: Test Mutual TLS/ClientAuth without tls with solo based-orderer -- @1.6|
| |;;;","17/Jul/18 10:30 AM;latitiah;There is an issue with using npm in a vagrant VM, where the node_modules directory needs to be native on the machine and cannot be a synced directory. With the change to sync the ""hyperledger"" directory when using vagrant, going up 3 levels gets us to a native machine directory.;;;","17/Jul/18 10:32 AM;latitiah;https://gerrit.hyperledger.org/r/24419;;;",,,,,,,,,,,,,,,,,,,,,,,,
fabric-test daily svt failures: 6 behave test scenarios of FAB-7150,FAB-10990,31559,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,03/Jul/18 3:45 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,06/Jul/18 1:35 AM,,,,,,,,,Future,,,fabric-quality,,,,,0,ci-failure,,,,,,"This one is easy to fix. There is one line that was missed during recent change: In peer.feature, change from

`a user queries for the first block`

to

`an admin queries for the first block`",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh0v:",,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"03/Jul/18 6:57 AM;scottz;https://gerrit.hyperledger.org/r/#/c/23965/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"fabric-test daily svt, 2 behave test scenarios fail for orderer.feature test FAB-4808 when batchTimeout=10s",FAB-10991,31562,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,03/Jul/18 3:59 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,06/Jul/18 1:35 AM,,,,,,,,,Future,,,fabric-quality,,,,,0,ci-failure,,,,,,"In today's daily svt fabric-test results in master (v1.2), https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-svt-x86_64/68/consoleFull, 2 out of 4 behave test scenarios for FAB-4808 are failing - the two with a longer batchTimeout of 10s (instead of 2s).

This passes fine on desktop. And usually passes in the CI tests too. Not sure what happened today. It appears it is taking longer for our behave framework code to get a return, and when we try to sleep 5s and query before the 10s timeout, we are too late. The invoke is getting processed BEFORE we expect. My proposed solution is to allow a few seconds for this inconsistency. We can increase the batchTimeout to 20s in our test (and increase the internal ""wait time"" after the first query from 8 to 16 secs.

 

The failing test scenarios are:
|13:44:29 orderer.feature:306 FAB-4808,FAB-3937,FAB-3938: Orderer_BatchTimeOut is honored, for solo orderer -- @1.3|
|13:44:29 orderer.feature:307 FAB-4808,FAB-3937,FAB-3938: Orderer_BatchTimeOut is honored, for kafka orderer -- @1.4|",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh3z:",,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"03/Jul/18 6:57 AM;scottz;https://gerrit.hyperledger.org/r/#/c/23965/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Make lifecycle abstraction use internal data type,FAB-10992,31565,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 4:24 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 2:48 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh4f:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extraneous options are present for application capabilities,FAB-10993,31566,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 4:32 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 11:03 PM,,,,,,,,,v1.2.1,v1.3.0,,fabric-tools,,,,,0,,,,,,,,,ChristopherFerris,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh4n:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jul/18 4:34 AM;jyellick;In review via:  https://gerrit.hyperledger.org/r/23961 ;;;","04/Jul/18 9:46 PM;denyeart;Merged in release-1.2.  [~jyellick] do you intend to cherry pick to master?;;;","05/Jul/18 8:25 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/24063;;;",,,,,,,,,,,,,,,,,,,,,,,,
Remove CDS from chaincode Launch,FAB-10994,31567,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 4:37 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 2:48 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh4v:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove CDS from runtime_launcher.go,FAB-10995,31568,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 4:38 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 2:59 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh53:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove lifecycle dependency from runtime_launcher,FAB-10996,31569,31537,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 4:45 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 3:03 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh5b:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add direct accessor for LSCC GetChaincodeDefinition,FAB-10997,31570,31537,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 4:47 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 3:04 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh5j:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode package should use LSSC GetChaincodeDefinition directly,FAB-10998,31571,31537,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 4:48 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:20 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh5r:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inject explicit chaincode_support to inproccontroller,FAB-10999,31572,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 5:09 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:19 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh5z:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove unused context,FAB-11000,31573,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 5:09 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:19 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh67:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
discover exits with a return code 0 when parameters are missing,FAB-11001,31578,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,yacovm,sykesm,sykesm,03/Jul/18 6:07 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,04/Jul/18 7:45 PM,v1.2.0,,,,,,,,v1.3.0,,,fabric-common,,,,,0,,,,,,,"When required flags are omitted, the error is reported to standard out instead of standard error and the exit code of the process is 0.

The error message going to stdout is a problem as the output of the tool is intended to be valid JSON.

The exit code is a problem as bad commands appear to be successful.",,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh73:",,,,,,,,,,,,,,,,,,,,,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jul/18 9:47 PM;sykesm;Error responses also result in a successful return code and an error message to stdout instead of stderr.;;;","03/Jul/18 10:14 PM;yacovm;Hi Matt - can you give me an example when the exit code is 0? 

When I try:
{code}
yacovm@yacoVM ~/OBC/shared/gopath/src/github.com/hyperledger/fabric (FAB-11001) $ .build/bin/discover --MSP msp --userCert userCert --configFile file saveConfig ; echo $?
discover: error: open userCert: no such file or directory, try --help
1
yacovm@yacoVM ~/OBC/shared/gopath/src/github.co
{code}

It looks like it's 1... ;;;","03/Jul/18 10:21 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/23989/ 

can you check?;;;","04/Jul/18 1:03 AM;sykesm;Omitting the {{--server}} argument:
{code}
STEP: discovering peers
[o][discover-peers] [no server specified]
session.Command.Path: /var/folders/tw/dsbwtnf50w7dhvhh0tkg7fwr0000gn/T/gexec_artifacts385960824/g355039806/discover
session.Command.Args: []string{""/var/folders/tw/dsbwtnf50w7dhvhh0tkg7fwr0000gn/T/gexec_artifacts385960824/g355039806/discover"", ""--userCert"", ""/var/folders/tw/dsbwtnf50w7dhvhh0tkg7fwr0000gn/T/e2e-sd326925957/crypto/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/signcerts/User1@org1.example.com-cert.pem"", ""--userKey"", ""/var/folders/tw/dsbwtnf50w7dhvhh0tkg7fwr0000gn/T/e2e-sd326925957/crypto/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore/9ca4ca2e3b982e5dce71c10994f8f502351976ff275a1c42ea6ec6dd0d019183_sk"", ""--MSP"", ""Org1MSP"", ""peers"", ""--channel"", ""testchannel""}
session.Command.ProcessState: exit status 0
{code};;;","04/Jul/18 3:23 AM;yacovm;Nice catch, thanks.
I edited the change set and included the fix for that too https://gerrit.hyperledger.org/r/#/c/23989/;;;","04/Jul/18 8:07 PM;yacovm;Pushed a change to the release 1.2 branch https://gerrit.hyperledger.org/r/#/c/24033/ ;;;",,,,,,,,,,,,,,,,,,,,,
fix error message in NewDeliverClientForOrderer,FAB-11002,31580,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,n-horiguchi,n-horiguchi,n-horiguchi,03/Jul/18 9:32 AM,15/Mar/19 2:31 AM,28/Oct/23 3:03 AM,15/Mar/19 2:31 AM,,,,,,,,,v2.0.0,,,fabric-peer,,,,,0,,,,,,,"NewDeliverClientForOrderer() has two error return points like below:
{code:none}
func NewDeliverClientForOrderer(channelID string) (*DeliverClient, error) {
    var tlsCertHash []byte
    oc, err := NewOrdererClientFromEnv()
    if err != nil {
        return nil, errors.WithMessage(err, ""failed to create deliver client"")
    }

    dc, err := oc.Deliver()
    if err != nil {
        return nil, errors.WithMessage(err, ""failed to create deliver client"")
    }
   ...
{code}                                                    
The first error message mentions ""deliver client"" but what it actually means is ""orderer client"".",,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzh7b:",,,,Unset,,,,,,Unset,,,,,,,,,,,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jul/18 9:48 AM;n-horiguchi;here is the patch: https://gerrit.hyperledger.org/r/#/c/23967/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Peer stuck at futex() system call..,FAB-11003,31581,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,xonathan,xonathan,03/Jul/18 1:10 PM,21/Aug/18 9:08 PM,28/Oct/23 3:03 AM,21/Aug/18 9:08 PM,,,,,,,,,,,,fabric-peer,,,,,0,quality,,,,,,"I made fabric network with 4 nodes(linux1, linux2, linux3, linux4)

 - each node has 2 peers(on linux1, linux2, linux3, linux4)

 - total 3 orders are running(on linux1, linux2, linux3)

 - 3 kafka, 3 zookeeper(on linux1, linux2, linux3)

(linux1, linux2, linux3, linux4 are physical linux boxes)

And 9 node.js applications are running to call invoke function in chaincode.

While I am testing, one of them among peer is stopped.

I traced them with ""strace"" command and I found that peer is stuck at futex() system call.

I guess they are under deadlock situation.

Of course I was trying to read source code, but... I am not used go-language.

Have you guys ever met this problem?

My fabric version is 1.2.0-rc1.",,denyeart,mastersingh24,xonathan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh7j:",,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,xonathan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jul/18 4:22 PM;mastersingh24;[~xonathan]  - can you post the longs and/or stack trace?  And how are you running the peer?  Docker?;;;","06/Jul/18 4:39 PM;xonathan;Thanks for your interested Gari Singh..

Unfortunately I lost all logs and traces.

By the way I'm running my peers in docker, but not in docker swarm.

After I upgraded to v1.2.0, situations got better.(Even it work well more than 24 hours)

I think v 1.2.0 has still not so strong, but it is getting better.

Soon or later, hopefully, fabric will be more stable and better performance.

So we decide to concentrate on implementation our business.

Of course I will test Fabric with my test tools and report here.

Somehow,,, I want to contribute even small activities...;;;","21/Aug/18 9:08 PM;denyeart;Cannot reproduce.  If you see the problem again, please re-open and provide stacktrace.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Test: fix flaky error in discovery service e2e test,FAB-11004,31583,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,nirro,nirro,03/Jul/18 5:06 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,12/Jul/18 9:31 PM,v1.2.0,,,,,,,,,,,fabric-gossip,,,,,0,,,,,,,"in discovery service e2e test, the last check is done as a sync call instead of async call, which leads to flaky errors.
full log can be found here:
https://jenkins.hyperledger.org/job/fabric-verify-integration-tests-x86_64/523/console",,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8779,,,,,,,,,"1|hzwqfk:r",,,,,,To Do,,,,,,,,,,,,,,,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jul/18 5:31 PM;nirro;https://gerrit.hyperledger.org/r/23973;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Cut v1.2.0 release,FAB-11005,31585,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,denyeart,ChristopherFerris,03/Jul/18 7:09 PM,25/Sep/18 5:56 AM,28/Oct/23 3:03 AM,05/Jul/18 8:03 PM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,"Prepare and publish v1.2.0 release of Hyperledger Fabric. The tasks are listed in execution order and I have indicated any dependencies in the description of each.

 

Note that until we address, the repositories must be tagged and published serially: fabric-ca, fabric-sdk-node, others.",,ChristopherFerris,denyeart,JonathanLevi,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10748,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh8f:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,JonathanLevi,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - verify release jobs to support 1.2.0 release,FAB-11006,31586,31585,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,ChristopherFerris,03/Jul/18 7:09 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,03/Jul/18 9:10 PM,,,,,,,,,v1.2.0,,,fabric-ci,fabric-release,,,,0,fabric-ci,,,,,,Make sure all the release jobs are ready for release.,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh8n:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for 1.2.0 release,FAB-11007,31587,31585,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,03/Jul/18 7:09 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,03/Jul/18 10:41 PM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

*----------*

{{git checkout release-1.2 }}

{{git pull}}

_*checkout the CR from Gerrit - be sure you have latest!!!*_ 

{{git checkout -b <newbranch>}}

{{git rebase release-1.2 }}

git commit --amend

*_make a tweak to commit message_*

git review

 

Check for clean CI passes

merge

----------------------

Changes

----------------------------

Update bootstrap.sh for latest baseimage:

export THIRDPARTY_IMAGE_VERSION=0.4.10

 

Update Makefile

{{BASE_VERSION = 1.2.0}}
 {{PREV_VERSION = 1.2.0-rc1}}

EXPERIMENTAL ?= false

 
 Update docs/source/samples.rst for  1.2.0

e.g. 
 curl -sSL [https://goo.gl/6wtTN5] | bash -s 1.2.0
  
 {{release_notes/v1.2.0.txt should be created}}

{{docs/source/releases.rst should be updated with prose and link to GH release page}}

{{change log should be generated just *after* *rebasing* to pick up the last minute merged CRs and linked from docs/source/releases.rst}}

./scripts/changelog.sh v1.2.0-rc1 v1.2.0",,ChristopherFerris,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh8v:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,purge-pd,main-emeritius,main,release-1.2,correct-nodeenv-version,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jul/18 7:31 PM;ChristopherFerris;[https://gerrit.hyperledger.org/r/c/23975/]

[https://gerrit.hyperledger.org/r/c/23977/]

 ;;;","06/Jul/18 3:54 AM;denyeart;install.rst updates:

[https://gerrit.hyperledger.org/r/#/c/24019/] release-1.2

[https://gerrit.hyperledger.org/r/#/c/24087/] master;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for next release,FAB-11008,31588,31585,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,03/Jul/18 7:09 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,04/Jul/18 12:14 AM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,"Note that this change must be stacked on the previous CR to prepare for the v1.2 release.

Update Makefile

BASE_VERSION = 1.2.1

PREV_VERSION = 1.2.0

EXPERIMENTAL ?= true

 

Also, update master branch to have BASE_VERSION=1.3.0

Note: Release should be tagged prior to merging this ""prepare for next CR"".",,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh93:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,release-1.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jul/18 10:59 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/23993;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for 1.2.0 release,FAB-11009,31589,31585,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,03/Jul/18 7:09 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,04/Jul/18 2:49 AM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

Check for clean CI

Update Makefile

{{BASE_VERSION = 1.2.0}}
 {{PREV_VERSION = 1.2.0-rc1}}
 {{IS_RELEASE = true}}

change log should be generated just *after* *rebasing* to pick up the last minute merged CRs 
 ./scripts/changelog.sh v1.2.0-rc1 v1.2.0

update release_notes/v1.2.0.txt

 ",,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh9b:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for next release,FAB-11010,31590,31585,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,03/Jul/18 7:09 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,04/Jul/18 4:43 AM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,"Note that this change must be stacked on the previous CR to prepare for the next release on the release-1.2 branch

1. Update Makefile

{{BASE_VERSION = 1.2.1}}
 {{PREV_VERSION = 1.2.0}}
 {{IS_RELEASE = false}}

2. Update lib/metadata/version.go

var Version = ""1.2.1""
  
 Note: Release should be tagged prior to merging this ""prepare for next CR"".

 Note, also update master branch with:

1. Update Makefile

{{BASE_VERSION = 1.3.0}}
 {{PREV_VERSION = 1.2.0}}
 {{IS_RELEASE = false}}

2. Update lib/metadata/version.go

var Version = ""1.3.0""",,aambati,ChristopherFerris,denyeart,rennman,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh9j:",,,,,,,,,,,,,,,,,,,,,aambati,ChristopherFerris,denyeart,rennman,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jul/18 1:38 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/24003;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Tag repositories for 1.2.0,FAB-11011,31591,31585,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,03/Jul/18 7:09 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,04/Jul/18 5:58 AM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,"*NOTE:* depends on preceding related CRs being merged.

Tag each repository local clone with the release_notes/v1.2.0.txt as the tag comment

{{% git tag -a v1.2.0 -F release_notes/v1.2.0.txt}}

{{% git push origin v1.2.0 HEAD:refs/heads/master}}

Tag each of fabric, fabric-ca, fabric-chaincode-node, fabric-sdk-node, and fabric-samples (use v1.2.0).

 
----
Note, that one can also tag the repo at a specific commit-level.

NOTE *e4b4704 should be updated with latest commit sha*

E.g., to add the {color:#f79232}*v1.2.0*{color} tag at commit level {color:#205081}*e4b4704*{color}, I used

{{% git tag -a *{color:#f79232}v1.2.0{color} {color:#205081}e4b4704{color}* -F release_notes/v1.2.0.txt}}

 

 ",,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh9r:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Verify fabric, fabric-ca docker images are published with 1.2.0 tag to hyperledger dockerhub account",FAB-11012,31592,31585,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,ChristopherFerris,03/Jul/18 7:09 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,04/Jul/18 6:30 AM,,,,,,,,,v1.2.0,,,fabric-ci,fabric-release,,,,0,,,,,,,"Verify fabric, fabric-ca docker images are published to hyperledger docker-hub account and make sure fabric-binaries are published to nexus repository.",,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzh9z:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test download of v1.2.0 release artifacts and samples across all platforms,FAB-11013,31593,31585,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,ChristopherFerris,ChristopherFerris,03/Jul/18 7:09 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,04/Jul/18 12:27 PM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,test download of release artifacts and samples across all platforms,,ChristopherFerris,denyeart,harrijk,rameshthoomu,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzha7:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrijk,rameshthoomu,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jul/18 12:27 PM;rameshthoomu;# e2e_cli
 # byfn, efyn with default, custom channels, couchdb, nodejs based chaincode, fabric-car, fabric-ca samples, balance transfer with both 'go & nodejs' based chaincode. Executed above tests on s390x and amd64;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Verify doc build status on v1.2.0 release tag in ReadTheDocs,FAB-11014,31594,31585,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,rameshthoomu,ChristopherFerris,03/Jul/18 7:09 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,04/Jul/18 5:58 AM,,,,,,,,,v1.2.0,,,fabric-ci,fabric-docs,fabric-release,,,0,,,,,,,Verify readthedocs version release-1.2 gets built and published from release-1.2 branch edits.,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhaf:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Send email to hyperledger-fabric mailing list,FAB-11015,31595,31585,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,03/Jul/18 7:09 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,04/Jul/18 8:01 PM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,send email announcing the release to hyperledger-fabric@lists.hyperledger.org mailing list.,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhan:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Push multiarch manifests,FAB-11017,31597,31585,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,03/Jul/18 7:10 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,04/Jul/18 6:30 AM,v1.2.0,,,,,,,,v1.2.0,,,fabric-build,,,,,0,,,,,,,BASE_VERSION=1.2.0-rc1 scripts/multiarch.sh user password,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhav:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CLONE - Index files are failed to download while building testenv image on s390x platform on release-1.0,release-1.1 branches",FAB-11018,31599,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,rameshthoomu,rameshthoomu,03/Jul/18 9:39 PM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,29/Sep/18 10:38 PM,v1.0.6,v1.1.1,,,,,,,v1.1.2,,,fabric-build,,,,,0,ci-failure,,,,,,"{color:#ff0000}E: Some index files failed to download. They have been ignored{color}
on s390x platform.

Below is the error from Jenkins build
{color:#ff0000}W: Failed to fetch [http://security.debian.org/dists/jessie/updates/InRelease]  Unable to find expected entry 'main/binary-s390x/Packages' in Release file (Wrong sources.list entry or malformed file){color}
{code:java}
00:03:33.747 Step 8/10 : RUN bash /tmp/install-softhsm2.sh && rm -f install-softhsm2.sh
00:03:33.821  ---> Running in f87326f01150
00:03:36.380 Get:1 http://ftp.us.debian.org sid InRelease [247 kB]
00:03:36.409 Get:2 http://security.debian.org jessie/updates InRelease [44.9 kB]
00:03:37.804 Ign http://deb.debian.org jessie InRelease
00:03:37.812 Get:3 http://ftp.us.debian.org sid/main s390x Packages [10.3 MB]
00:03:37.817 Get:4 http://deb.debian.org jessie-updates InRelease [145 kB]
00:03:37.921 Get:5 http://deb.debian.org jessie Release.gpg [2420 B]
00:03:38.036 Get:6 http://deb.debian.org jessie Release [148 kB]
00:03:39.596 Get:7 http://deb.debian.org jessie-updates/main s390x Packages [23.0 kB]
00:03:41.946 Get:8 http://deb.debian.org jessie/main s390x Packages [8798 kB]
00:03:43.206 W: Failed to fetch http://security.debian.org/dists/jessie/updates/InRelease  Unable to find expected entry 'main/binary-s390x/Packages' in Release file (Wrong sources.list entry or malformed file)
00:03:43.206 
00:03:43.207 E: Some index files failed to download. They have been ignored, or old ones used instead.
00:03:43.208 Fetched 19.7 MB in 6s (2871 kB/s)
00:03:43.600 The command '/bin/sh -c bash /tmp/i{code}
 ",,denyeart,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10883,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhbb:",,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,release-1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jul/18 9:43 PM;rameshthoomu;Have to update the fabric-baseimage with s390x/debian:stretch to fix this issue.. [https://gerrit.hyperledger.org/r/#/c/23753/] with this change we have pushed 0.4.10 fabric-baseimage and pointed the same in release-1.2 branch. But the same issue observed in (master, release-1.1, release-1.0) branches.;;;","06/Sep/18 7:59 PM;denyeart;[~rameshthoomu] I see you assigned to [~mastersingh24] .  Can you clarify what you are looking for here? Do we need to create release branches for baseimage so that v1.1.x and v1.0.x can point to a fixed baseimage, without having to jump all the way to 0.4.10?  Note that master is already on 0.4.10.  [~ChristopherFerris];;;","19/Sep/18 6:01 AM;mastersingh24;Isn't a simpler fix to just remove Z from the CI jobs for 1.0 and 1.1?

The other option is to just disable PKCS11 / HSM testing as well.;;;","19/Sep/18 7:20 AM;mastersingh24;actually .. I think I fixed this by simply updating the the source repos 

[https://gerrit.hyperledger.org/r/26377]  (1.1)
[https://gerrit.hyperledger.org/r/26378] (1.0);;;","27/Sep/18 11:08 PM;rameshthoomu;[https://gerrit.hyperledger.org/r/#/c/26629/] (releaes-1.0);;;",,,,,,,,,,,,,,,,,,,,,,
Javascript SDK,FAB-11019,31600,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Tecnalia,Tecnalia,Tecnalia,03/Jul/18 9:41 PM,23/Jan/20 7:33 AM,28/Oct/23 3:03 AM,23/Jan/20 7:33 AM,Future,,,,,,,,Future,,,fabric-ca,fabric-common,,,,4,js,sdk,stale-item,,,,"This issue is a New Feature request/specification from Tecnalia Research & Innovation

Current developments of *Hyperledger Fabric* relay on the creation of a REST API services for interactions. This is an easy way to start an interaction with the *CA* and with the smart contracts code but it generates a *SPOF* and in most cases, breaks with decentralization of apps, forcing to all clients to go through the rest api for interacting.

 

We propose the creation of a *Javascript* based SDK (based on Node.js) which will support basic interactions against the Blockchain.

 ",,gl7doqu97svck56tzyjzzhxj,Koptan,nnao,smartheye,sykesm,Tecnalia,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-408,,,,,,,,,,,FABN-653,,,,,,,,,FAB-11687,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,,,,,Unset,,,,"1|hzzhbj:",,,,Unset,Unset,,,,,,,,,,,,,,,,gl7doqu97svck56tzyjzzhxj,Koptan,nnao,smartheye,sykesm,Tecnalia,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jul/18 9:44 PM;Tecnalia;From official Node.js SDK we have identified next issues to be solved:
 * winston based logger is not supported in JS
 * fs and fs-extra are not supported in JS (are used for chaincode packaging and compression)
 * pkcs11 (HSM) is not supported in native JS
 * client and ca configuration from json is not successfully loaded beacuse is loaded from a file on FS
 * KV Storage needs to be change to work on Browsers;;;","04/Jul/18 4:30 PM;Tecnalia;Interactions with *fabric-ca* are locked due to missing CORS policy bug

https://jira.hyperledger.org/browse/FAB-11045

 ;;;","04/Jul/18 5:26 PM;yacovm;* I don't think the fabric-CA should be a blocker for such a thing to manifest. You can use fabric without fabric-CA at all. 
* I don't know if you can use gRPC from javascript - can you contact a remote endpoint that isn't your web server?;;;","04/Jul/18 6:16 PM;Tecnalia;Well, it is a blocker if you want to make cross origin request, as you can see on the picture. Also, I know that fabric can be used withour CA, you can use cryptogen or even an external CA for certificates, but it is good to have the option to enable/disable cors as part of a less failure prone software for fabric-ca.;;;","08/Jul/18 6:18 AM;vdods;Re: GRPC calls from Javascript client – it looks like it can be done: [https://github.com/grpc/grpc-web] but IIRC, there's some requirement of having an HTTP proxy service.  I haven't actually tried this myself (yet?).;;;","09/Jul/18 7:20 PM;Tecnalia;We were able to execute a minor migration of the Node SDK code to JS being able to:
 * Compile fabric .proto files for Javascript.
 * Load users authentication data from Browser persistence storage.
 * Executing enroll operation against fabric-ca server and saving the result on browser storage.

To do these tests, we ran into problems due to CORS, but we were able to make a workaround on Chrome using next flags:

{{google-chrome --disable-web-security --user-data-dir $HOME}} 

Still, is s slow process because we need to port all the logic in charge of loading network configuration (connection profile, etc), and also figure out a way of using web-grpc (as proxy or whatever) to communicate with fabric;;;","11/Jul/18 9:37 PM;Tecnalia;An *envoy* ([https://github.com/envoyproxy/envoy]) based proxy (with *native grpc* support) seems a pretty good option to work with web-grpc from *JS*.;;;","08/Mar/19 1:49 AM;Tecnalia;So far, we are experimenting with alternative ways that do not involve protobuffers and GRPC for peer communication, but nothing solid yet;;;","17/Jan/20 11:24 AM;Koptan;[~Tecnalia] . I am interesting to work with you to solve this issue or create POC for browser wallet , please let me know how to help .;;;","23/Jan/20 7:33 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,
goimports needed for orderer/common/server/main.go,FAB-11020,31602,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,yacovm,yacovm,03/Jul/18 9:57 PM,18/Sep/18 4:29 PM,28/Oct/23 3:03 AM,18/Sep/18 4:29 PM,,,,,,,,,,,,,,,,,0,,,,,,,"
12:31:09 >>>Checking code under ./orderer/
12:31:09 Checking with gofmt
12:31:10 Checking with goimports
12:31:10 The following files contain goimports errors
12:31:10 orderer/common/server/main.go
12:31:10 The goimports command 'goimports -l -w' must be run for these files
12:31:10 Makefile:212: recipe for target 'linter' failed",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhbr:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
goimports error for orderer/common/server/main.go,FAB-11021,31604,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,mastersingh24,mastersingh24,03/Jul/18 11:27 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,04/Jul/18 3:54 AM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"The new version of goimports seems to have an issue with 
orderer/common/server/main.go",,mastersingh24,qinghua0310,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhbz:",,,,,,,,,,,,,,,,,,,,,mastersingh24,qinghua0310,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jul/18 11:30 PM;mastersingh24;https://gerrit.hyperledger.org/r/23995;;;","08/Jul/18 2:31 AM;qinghua0310;Hi [~mastersingh24], I need help. From the commit history, I just see you add a new line, but I don't know why this can fix this issue. I hope you can give a word. Thank you!;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Unhide system chaincode provider,FAB-11022,31609,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 11:39 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:19 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhdj:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unhide system chaincode provider,FAB-11023,31612,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 11:39 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:19 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhdz:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move ChaincodeContainerInfo to ccprovider package,FAB-11024,31613,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 11:40 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:19 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhe7:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use LSCC directly to implement the chaincode lifecycle interface,FAB-11025,31615,31537,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 11:41 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:20 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhef:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use LSCC directly to implement the chaincode lifecycle interface,FAB-11026,31616,31537,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Jul/18 11:42 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:20 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhen:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
discover endorsers response is inconsistent,FAB-11028,31624,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,yacovm,sykesm,sykesm,04/Jul/18 12:54 AM,26/Jul/18 10:15 PM,28/Oct/23 3:03 AM,26/Jul/18 10:15 PM,v1.2.0,,,,,,,,,,,fabric-gossip,,,,,0,,,,,,,"When running {{discover endorsers}}, the output includes {{""Chaincodes"":null}} in the response even though the {{""Chaincode"": ""cc-name""}} is included in the output. This is inconsistent and a bit confusing.

Example:
{code:java}
[d][discover endorsers] spawned /var/folders/tw/dsbwtnf50w7dhvhh0tkg7fwr0000gn/T/gexec_artifacts412566519/g177360901/discover (pid: 96664)
[o][discover endorsers] [
[o][discover endorsers]     {
[o][discover endorsers]         ""Chaincode"": ""mycc"",
[o][discover endorsers]         ""EndorsersByGroups"": {
[o][discover endorsers]             ""G0"": [
[o][discover endorsers]                 {
[o][discover endorsers]                     ""MSPID"": ""Org1MSP"",
[o][discover endorsers]                     ""LedgerHeight"": 8,
[o][discover endorsers]                     ""Endpoint"": ""0.0.0.0:7051"",
[o][discover endorsers]                     ""Identity"": ""-----BEGIN CERTIFICATE-----\nMIICGTCCAcCgAwIBAgIRAOJUvWT7iT7OnSLpplM7H1IwCgYIKoZIzj0EAwIwczEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh\nLm9yZzEuZXhhbXBsZS5jb20wHhcNMTgwNzAzMTU0MDI2WhcNMjgwNjMwMTU0MDI2\nWjBbMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN\nU2FuIEZyYW5jaXNjbzEfMB0GA1UEAxMWcGVlcjAub3JnMS5leGFtcGxlLmNvbTBZ\nMBMGByqGSM49AgEGCCqGSM49AwEHA0IABE5OYBMLf8APx5cFy8ZQ0a4rolTTYBsU\ntqohSlg7zO+FSk7VSG8H/XwBvPHo5rdBWzcuG+jUm7KuZXBxuasb8eqjTTBLMA4G\nA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMCsGA1UdIwQkMCKAINu8a2DpfG1n\nCnqhdtZwUfRzmtANb6UIhCD5cmQYLeYgMAoGCCqGSM49BAMCA0cAMEQCIAFs87D7\n+Sz6QhKerpOxBgoNU/m6WzF6YSsuO2OK1Z3QAiBerJNtl1xyDj5UvlzLRC4XU0m9\nSjiboCzzSJSKcyhkEA==\n-----END CERTIFICATE-----\n"",
[o][discover endorsers]                     ""Chaincodes"": null
[o][discover endorsers]                 }
[o][discover endorsers]             ],
[o][discover endorsers]             ""G1"": [
[o][discover endorsers]                 {
[o][discover endorsers]                     ""MSPID"": ""Org2MSP"",
[o][discover endorsers]                     ""LedgerHeight"": 8,
[o][discover endorsers]                     ""Endpoint"": ""0.0.0.0:8051"",
[o][discover endorsers]                     ""Identity"": ""-----BEGIN CERTIFICATE-----\nMIICGTCCAcCgAwIBAgIRANvNTV1zmbKQPMnwSeN3yVMwCgYIKoZIzj0EAwIwczEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh\nLm9yZzIuZXhhbXBsZS5jb20wHhcNMTgwNzAzMTU0MDI2WhcNMjgwNjMwMTU0MDI2\nWjBbMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN\nU2FuIEZyYW5jaXNjbzEfMB0GA1UEAxMWcGVlcjAub3JnMi5leGFtcGxlLmNvbTBZ\nMBMGByqGSM49AgEGCCqGSM49AwEHA0IABPv0aoSHhWKE62d5wv9RXzZzip2mHo79\n3d7NMi4Humuv4C9/hCGyf1xdfXfDTjCIdxq9sRQhq1wF7bb0R2/rEi+jTTBLMA4G\nA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMCsGA1UdIwQkMCKAIJrAFU+DE5rF\nk0ZIHQE3vfUPgmxJdpIgoeyMUVEDCOaTMAoGCCqGSM49BAMCA0cAMEQCICGsDyIV\n/eKBES6iqugbM/DNpoklxXCbg2IEjSP0rM7IAiAD+uWFuI3Z4oNLJXwL8fi8/+cP\nyulm2MjSe/l0wg+CJA==\n-----END CERTIFICATE-----\n"",
[o][discover endorsers]                     ""Chaincodes"": null
[o][discover endorsers]                 }
[o][discover endorsers]             ]
[o][discover endorsers]         },
[o][discover endorsers]         ""Layouts"": [
[o][discover endorsers]             {
[o][discover endorsers]                 ""quantities_by_group"": {
[o][discover endorsers]                     ""G0"": 1,
[o][discover endorsers]                     ""G1"": 1
[o][discover endorsers]                 }
[o][discover endorsers]             }
[o][discover endorsers]         ]
[o][discover endorsers]     }
[o][discover endorsers] ]
{code}",,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhg7:",,,,,,,,,,,,,,,,,,,,,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jul/18 1:34 AM;sykesm;Also note that the JSON field names are all capitalized default names from the go serialization except {{quantitites_by_group}} which is snake cased.;;;","09/Jul/18 7:33 AM;yacovm;[https://gerrit.hyperledger.org/r/#/c/24229/]

 ;;;","09/Jul/18 7:40 AM;yacovm;{quote}Also note that the JSON field names are all capitalized default names from the go serialization except {{quantitites_by_group}} which is snake cased.
{quote}
I don't think this is critical... is it?;;;","09/Jul/18 8:07 AM;yacovm;also opened FAB-11097 which is a similar issue...;;;",,,,,,,,,,,,,,,,,,,,,,,
Make chaincode stop use ChaincodeContainerInfo instead of DeploymentSpec,FAB-11029,31625,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,04/Jul/18 2:28 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:19 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhgf:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove skipped and unmaintained chaincode package tests,FAB-11030,31626,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,04/Jul/18 2:29 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:19 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhgn:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove SCC field from CCContext,FAB-11031,31627,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,04/Jul/18 2:31 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:19 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhgv:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Complete removal of ChaincodeDeploymentSpec from launch,FAB-11033,31630,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,04/Jul/18 3:25 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:19 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhhb:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Replace context with explicit parameters,FAB-11034,31631,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,04/Jul/18 3:26 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:19 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhhj:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove unused ccprovider legacy code,FAB-11035,31632,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,04/Jul/18 3:35 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:19 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhhr:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove transaction params from cccid,FAB-11036,31633,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,04/Jul/18 3:36 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:19 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhhz:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove ChaincodeInvocationSpec from core/chaincode package,FAB-11037,31634,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,04/Jul/18 3:37 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:20 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhi7:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Disable chaincode cache lookup switching,FAB-11038,31635,31538,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,04/Jul/18 4:58 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 10:19 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhif:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer chaincode list --instantiated outputs garbage to the console,FAB-11039,31636,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,04/Jul/18 4:59 AM,17/Jan/19 1:44 AM,28/Oct/23 3:03 AM,10/Jan/19 4:01 AM,v1.2.0,,,,,,,,v1.2.2,v1.3.0,,fabric-peer,,,,,0,,,,,,,"install and instantiate chaincode with a collection config and then list instantiated chain codes.

The result is garbage:

{{code}}
o][peer-chaincode-list-instantiated] Get instantiated chaincodes on channel testchannel:
[o][peer-chaincode-list-instantiated] Name: mycc, Version: 2.0, Path: github.com/hyperledger/fabric/integration/chaincode/simple/cmd, Escc: escc, Vscc: vscc
[o][peer-chaincode-list-instantiated] Name: 
[o][peer-chaincode-list-instantiated] G
[o][peer-chaincode-list-instantiated] collectionMarbles*
[o][peer-chaincode-list-instantiated] (

[o][peer-chaincode-list-instantiated] 
                                   	
[o][peer-chaincode-list-instantiated] Org1MSP
                                             	
[o][peer-chaincode-list-instantiated] Org2MSP (??=

OUT
Get instantiated chaincodes on channel testchannel:
Name: mycc, Version: 2.0, Path: github.com/hyperledger/fabric/integration/chaincode/simple/cmd, Escc: escc, Vscc: vscc
Name: 
G
collectionMarbles*
(


	
Org1MSP
       	
Org2MSP (??=

---

ERR

---
{{code}}",,denyeart,sykesm,vdods,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12342,FAB-13274,,,,,,,,,,,FAB-5871,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhin:",,,,,,,,,,,,,,,,,,,,,denyeart,sykesm,vdods,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jul/18 10:44 PM;sykesm;Introduced with FAB-5871 when collection config was added.;;;","08/Oct/18 4:24 PM;vdods;This was fixed in 1.3 but not in 1.2 (which is the version it was reported for).  Can you apply the fix to the release-1.2 branch as well?  Thank you!;;;","09/Oct/18 9:57 AM;denyeart;Merged in v1.3.0.

[~sykesm] I've re-opened for the backport to v1.2.x, due to multiple requests.;;;","12/Dec/18 12:04 AM;sykesm;[~denyeart] The last update on this was in October. Do you still desire a backport to 1.2?;;;","12/Dec/18 10:45 AM;vdods;Ideally yes, but honestly I stopped attempting to use `peer chaincode list --instantiated` altogether.  So I'm content with an upgrade to 1.3 whenever that makes sense for me.  Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,
Update bootstrap.sh script,FAB-11041,31638,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,rameshthoomu,rameshthoomu,04/Jul/18 6:19 AM,02/Oct/18 8:39 PM,28/Oct/23 3:03 AM,02/Oct/18 8:39 PM,,,,,,,,,v1.3.0,v1.4.0,,fabric-build,,,,,0,,,,,,,"Observed branch word in this script which should be replace with tag. [https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap.sh]

 ",,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykqv:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.3,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jul/18 12:04 AM;ChristopherFerris;[~rameshthoomu] ? It is supposed to be the branch we checkout.;;;","07/Jul/18 12:57 AM;rameshthoomu;No we don't checkout to branch.. If you see below command from bootstrap.sh

git checkout v$\{VERSION} # VERSION here we specify 1.2.0 which is a tag not a branch (release-1.2);;;","21/Aug/18 9:13 PM;denyeart;[~rameshthoomu] Could you clarify the issue?  Are you simply saying that the comment:
""Checking out v${VERSION} *branch* of hyperledger/fabric-samples""
should be changed to:
""Checking out v${VERSION} of hyperledger/fabric-samples"";;;","20/Sep/18 5:23 AM;denyeart;[~rameshthoomu] Could you clarify the issue? Are you simply saying that the comment:
 ""Checking out v${VERSION} *branch* of hyperledger/fabric-samples""
 should be changed to:
 ""Checking out v${VERSION} of hyperledger/fabric-samples"";;;","27/Sep/18 4:08 AM;rameshthoomu;yes that's correct [~denyeart] We checkout to *tag* not to the *branch*. So just remove or rename this to tag will fix this.;;;","02/Oct/18 1:48 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/26697/] - master

[https://gerrit.hyperledger.org/r/#/c/26698/] - release-1.3;;;",,,,,,,,,,,,,,,,,,,,,
Broken links in documents,FAB-11042,31639,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,yuki-kon,yuki-kon,yuki-kon,04/Jul/18 6:39 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,17/Jul/18 7:20 PM,v1.1.0,,,,,,,,v1.2.0,v1.3.0,,fabric-docs,,,,,0,,,,,,,"There are some broken links in documents below. We need to update the documents correctly.
 
- docs/source/Gerrit/changes.rst -> https://github.com/hyperledger/ci-management/blob/master/docs/fabric_ci_process.md
- docs/source/submit_cr.rst -> https://github.com/hyperledger/ci-management/blob/master/docs/fabric_ci_process.md
- docs/source/understand_fabcar_network.rst -> https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/interfaces_stable.go
- examples/e2e_cli/end-to-end.rst -> https://github.com/hyperledger/fabric/blob/master/docs/source/configtxgen.rst
 
",,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhj3:",,,,,,,,,,,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jul/18 8:31 AM;yuki-kon;CR is posted here. https://gerrit.hyperledger.org/r/#/c/24027/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update upgrade documentation to remove the stable reference,FAB-11043,31640,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,rameshthoomu,rameshthoomu,04/Jul/18 7:32 AM,01/Dec/18 3:49 AM,28/Oct/23 3:03 AM,01/Dec/18 3:49 AM,,,,,,,,,v1.4.0,,,fabric-docs,,,,,0,,,,,,,"Observed stable word reference in upgrade documentation.. We should not refer stable reference as stable image tag is not available in hyperledger docker hub.

https://hyperledger-fabric.readthedocs.io/en/release-1.2/upgrading_your_network_tutorial.html?highlight=upgrade#upgrade-the-orderer-containers",,denyeart,nnao,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykqn:",,,,,,,,,,,,,,,,,,,,,denyeart,nnao,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Aug/18 9:16 PM;denyeart;[~rameshthoomu] Could you clarify.  Are you simply suggesting to change:

""export IMAGE_TAG=$(go env GOARCH)-1.2.0-stable""
to:
""export IMAGE_TAG=$(go env GOARCH)-1.2.0"";;;","20/Sep/18 5:24 AM;denyeart;[~rameshthoomu] Could you clarify. Are you simply suggesting to change:

""export IMAGE_TAG=$(go env GOARCH)-1.2.0-stable""
 to:
 ""export IMAGE_TAG=$(go env GOARCH)-1.2.0"";;;","03/Nov/18 6:27 AM;nnao;https://gerrit.hyperledger.org/r/c/27343/;;;",,,,,,,,,,,,,,,,,,,,,,,,
Fabric 1.2.0 doesn't work...,FAB-11044,31643,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,xonathan,xonathan,04/Jul/18 3:48 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,05/Jul/18 9:03 AM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,quality,,,,,,"It work well, after I downloaded again...",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhjr:",,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jul/18 8:12 PM;C0rWin;[~xonathan] can you please confirm this ticket could be closed now?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Increase test coverage for cauthdsl,FAB-11046,31646,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Won't Do,diizuka,diizuka,diizuka,04/Jul/18 4:32 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-common,,,,,0,stale-item,,,,,,Increase test coverage for fabric/common/cauthdsl/,,denyeart,diizuka,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11387,FAB-11404,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzhkf:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,diizuka,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jan/19 7:09 AM;denyeart;[~diizuka] Do you intend to work on this? If not, please unassign yourself.;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Enlarge discovery golang client credential cache,FAB-11047,31648,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,04/Jul/18 5:28 PM,14/Aug/18 10:36 AM,28/Oct/23 3:03 AM,16/Jul/18 6:58 PM,,,,,,,,,v1.3.0,,,fabric-common,,,,,0,,,,,,,"The golang discovery client implementation only caches the last signature, and for maximum performance gains we should cache more to be able to take advantage of the peer side credential cache ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABG-712,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzhkv:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add helpers to read and write ordered and peer configuration files,FAB-11049,31651,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,05/Jul/18 12:35 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,08/Jul/18 9:37 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhr3:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add OutputAnchorPeersUpdate command,FAB-11050,31652,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,05/Jul/18 12:35 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,08/Jul/18 9:38 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhrb:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor install/instantitate/upgrade commands,FAB-11051,31653,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,05/Jul/18 12:37 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,12/Jul/18 11:32 PM,,,,,,,,,,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhrj:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add preliminary discovery support to nwo,FAB-11052,31654,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,05/Jul/18 12:37 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,12/Jul/18 11:34 PM,,,,,,,,,,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhrr:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extract configuration block update helpers to nwo,FAB-11053,31655,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,05/Jul/18 12:38 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,12/Jul/18 11:40 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhrz:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Recreate discovery tests with nwo,FAB-11054,31656,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,05/Jul/18 12:38 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,12/Jul/18 11:43 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhs7:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add UpdateChannelAnchors to nwo Network,FAB-11055,31657,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,05/Jul/18 12:41 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,08/Jul/18 9:38 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhsf:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
update channel config batchsize not work,FAB-11057,31663,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,gsqtds,gsqtds,05/Jul/18 4:49 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,19/Jul/18 11:04 AM,v1.1.0,,,,,,,,,,,fabric-orderer,,,,,0,,,,,,,"when i modify the batchsize.max_message_count from 10 to 30, i invoke chaincode from java-client,the block build speed always 10 tx max. when i saw the channel config, it show batchsize.max_message_count is 30


when i restart the orderer ,it works,the speed became 30 tx max.",,gsqtds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jul/18 5:23 PM;gsqtds;debug.log;https://jira.hyperledger.org/secure/attachment/15263/debug.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzht3:",,,,,,,,,,,,,,,,,,,,,gsqtds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jul/18 4:53 PM;gsqtds;I try update batchtimeout config ,find it is work;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
wrong logging method used in ExtractStatedbArtifactsForChaincode,FAB-11058,31672,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,05/Jul/18 9:35 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,12/Jul/18 11:44 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"The informational message includes format strings but does not use the logging method that actually uses them.
{code}
[e][org1.peer1] 2018-07-05 08:25:32.101 EDT [ccprovider] ExtractStatedbArtifactsForChaincode -> INFO 03f Error while loading installation package for ccname=%s, ccversion=%s. Err=%s mycc 1.0 open /var/folders/tw/dsbwtnf50w7dhvhh0tkg7fwr0000gn/T/e2e-sd868047221/peers/org1.peer1/filesystem/chaincodes/mycc.1.0: no such file or directory
{code}",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7581,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhun:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Hyperledger Fabric v1.1.1,FAB-11060,31676,,Task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,mastersingh24,mastersingh24,05/Jul/18 10:33 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,06/Jul/18 5:04 AM,,,,,,,,,v1.1.1,,,,,,,06/Jul/18 12:00 AM,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11061,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhv3:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jul/18 10:36 PM;mastersingh24;https://gerrit.hyperledger.org/r/24079;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for 1.1.2 release,FAB-11061,31677,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,05/Jul/18 10:37 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,06/Jul/18 5:04 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11060,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhvb:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jul/18 10:41 PM;mastersingh24;https://gerrit.hyperledger.org/r/24081;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update README and bootstrap script for 1.2.0,FAB-11062,31678,31585,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,05/Jul/18 10:40 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,06/Jul/18 5:05 AM,,,,,,,,,v1.2.0,,,fabric-release,,,,,0,,,,,,,Update README and bootstrap script for 1.2.0,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhvj:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jul/18 10:44 PM;denyeart;[https://gerrit.hyperledger.org/r/#/c/24085/] release-1.2

[https://gerrit.hyperledger.org/r/#/c/24083/] master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update dep lock and vendor files,FAB-11072,31692,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,06/Jul/18 1:44 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,06/Jul/18 4:56 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"The existing dep status is out-of-dated.
Update the dependencies to the latest allowed versions.",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhxj:",,,,,,,,,,,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jul/18 1:58 PM;baohua;https://gerrit.hyperledger.org/r/24137;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix linter to check new package,FAB-11073,31693,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,06/Jul/18 3:15 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,13/Jul/18 4:10 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"The linter checking ignores the new added cmd pkg.
At the same time, in order to pass CI checking.
Fix the dep's ""Gopkg.lock was not up to dat"" error.",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzhxr:",,,,,,,,,,,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Jul/18 3:24 PM;baohua; https://gerrit.hyperledger.org/r/24141;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Enable CI jobs for fabric-samples release-1.2 branches,FAB-11076,31703,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Jul/18 10:52 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,10/Jul/18 1:35 PM,,,,,,,,,,,,fabric-ci,,,,,0,,,,,,,Enable CI jobs for fabric-samples release-1.2 branches,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx27z:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/18 1:35 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/24167/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Initial JSON RPC Calls,FAB-11080,31717,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,swetharepakula,swetharepakula,swetharepakula,07/Jul/18 2:20 AM,06/Dec/18 11:01 AM,28/Oct/23 3:03 AM,05/Sep/18 2:29 AM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"Fabproxy will implement ""getCode"", ""call"", ""sendTransaction"",""getTransactionReceipt"", ""account"". These API calls are the bare minimum to interact using the web3.js library.",,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCE-5,,,,,,,,,"1|hzzi2v:",,,,,,,,,4.0,,,,,,,,,,,,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jul/18 5:07 AM;swetharepakula;Changes for vendored deps: https://gerrit.hyperledger.org/r/24183

Proxy changes: https://gerrit.hyperledger.org/r/24185;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Integration Tests,FAB-11081,31718,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,swetharepakula,swetharepakula,swetharepakula,07/Jul/18 2:21 AM,19/Dec/18 3:46 PM,28/Oct/23 3:03 AM,14/Nov/18 10:56 AM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"Create integration tests to test the proxy with Fabric, either combine with the e2e tests or with the future integration framework",,ChristopherFerris,MHBauer,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCE-5,,,No,,,,,,"1|hzzi33:",,,,,,,,,,,,,,,,Unset,,Integration Test,,,ChristopherFerris,MHBauer,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Sep/18 2:13 AM;ChristopherFerris;[~swetharepakula] any update on this?;;;","12/Sep/18 2:29 AM;swetharepakula;Not yet. Picking this up. Going to use web3 & node to test agains the network that ginkgo starts up.;;;","06/Oct/18 8:52 AM;swetharepakula;Respective CRs:

Moving e2e to separate dir: [https://gerrit.hyperledger.org/r/#/c/26821/ |https://gerrit.hyperledger.org/r/#/c/26821/]

Use Ginkgo to run tests: [https://gerrit.hyperledger.org/r/#/c/26829/] 

Creating tests hitting fab3 with json rpc requests : [https://gerrit.hyperledger.org/r/#/c/26822/]

Add node modules for web3 as client requests: [https://gerrit.hyperledger.org/r/#/c/26823/]

Add web3 as client tests: [https://gerrit.hyperledger.org/r/#/c/26824/]

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,
Add CORS support,FAB-11083,31720,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,swetharepakula,swetharepakula,swetharepakula,07/Jul/18 2:23 AM,05/Sep/18 2:29 AM,28/Oct/23 3:03 AM,05/Sep/18 2:29 AM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,Fabproxy needs CORS support to allow for requests other than locally.,,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCE-5,,,,,,,,,"1|hzzi3j:",,,,,,,,,1.0,,,,,,,,,,,,swetharepakula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Aug/18 2:30 AM;swetharepakula;https://gerrit.hyperledger.org/r/#/c/25767/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Disable fabric-end-2-end-daily-master-ppc64le job from CI,FAB-11084,31721,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,07/Jul/18 2:28 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 12:07 AM,,,,,,,,,,,,fabric-ci,,,,,0,,,,,,,Disable fabric-end-2-end-daily-master-ppc64le job from CI,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx287:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/18 1:07 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/24443/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric-unit-test-coverage-daily-release-1.2-x86_64 job configuration to build ccenv image,FAB-11085,31722,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,07/Jul/18 2:39 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,10/Jul/18 1:34 PM,,,,,,,,,,,,fabric-ci,,,,,0,,,,,,,Update fabric-unit-test-coverage-daily-release-1.2-x86_64 job configuration to build ccenv image before run unit-tests.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx28f:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/18 1:34 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/24253/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
lint errors on orderer/main_test.go file,FAB-11086,31723,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,rameshthoomu,rameshthoomu,07/Jul/18 2:42 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,17/Jul/18 4:58 AM,v1.0.7,,,,,,,,v1.0.7,,,fabric-build,,,,,0,,,,,,,"Observed golint errors on below file
{code:java}
00:00:54.065 The following files contain goimports errors
00:00:54.065 orderer/main_test.go
00:00:54.065 The goimports command must be run for these files
00:00:54.415 Makefile:187: recipe for target 'linter' failed{code}",,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx28n:",,,,,,,,,,,,,,,,,,,,,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/18 11:48 PM;mastersingh24;https://gerrit.hyperledger.org/r/24425;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update Job configuration to publish 1.2.1 stable images and binaries to nexus,FAB-11087,31725,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,07/Jul/18 3:19 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,10/Jul/18 9:11 PM,,,,,,,,,,,,fabric-ci,,,,,0,,,,,,,Update Job configuration to publish 1.2.1 stable images and binaries to nexus,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx28v:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/18 9:11 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/24253/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"SERVICE_UNAVAILABLE -- will not enqueue, consenter for this channel hasn't started yet",FAB-11088,31726,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,kchristidis,pvrbharg,pvrbharg,07/Jul/18 3:46 AM,01/Nov/18 7:51 AM,28/Oct/23 3:03 AM,01/Nov/18 7:51 AM,,,,,,,,,,,,fabric-orderer,,,,,0,kafka,v1.1.0,zookeeper,,,,"Client Side Error:

=============

2018-07-03 15:54:25.032 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
Error: got unexpected status: SERVICE_UNAVAILABLE -- will not enqueue, consenter for this channel hasn't started yet

Server Side Error:

=============

2018-07-03 15:54:25.047 UTC [orderer/common/broadcast] Handle -> DEBU 4ed Starting new broadcast loop for 172.18.0.14:49752
2018-07-03 15:54:25.047 UTC [orderer/common/broadcast] Handle -> WARN 4ee [channel: mychannel] Rejecting broadcast of message from 172.18.0.14:49752 with SERVICE_UNAVAILABLE: rejected by Consenter: will not enqueue, consenter for this channel hasn't started yet
2018-07-03 15:54:25.047 UTC [orderer/common/server] func1 -> DEBU 4ef Closing Broadcast stream
2018-07-03 15:54:25.050 UTC [common/deliver] Handle -> WARN 4f0 Error reading from 172.18.0.14:49750: rpc error: code = Canceled desc = context canceled
2018-07-03 15:54:25.050 UTC [orderer/common/server] func1 -> DEBU 4f1 Closing Deliver stream
2018-07-03 15:55:35.747 UTC [orderer/consensus/kafka] try -> DEBU 4f2 [channel: testchainid] Connecting to the Kafka cluster",64 bit Linux - both Ubuntu and Redhat - amd64 platforms,kchristidis,mikailoral,pvrbharg,pyraman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Oct/18 9:05 AM;pvrbharg;FAB-11088.docx;https://jira.hyperledger.org/secure/attachment/16124/FAB-11088.docx","07/Jul/18 3:42 AM;pvrbharg;ServiceUnavailableErrorLogs_July052018.zip;https://jira.hyperledger.org/secure/attachment/15276/ServiceUnavailableErrorLogs_July052018.zip","12/Oct/18 12:42 PM;pyraman;logs.tar.gz;https://jira.hyperledger.org/secure/attachment/16132/logs.tar.gz",,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzi3r:",,,,,,,,,,,,,,,,,,,,,kchristidis,mikailoral,pvrbharg,pyraman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/18 3:02 AM;kchristidis;User error.;;;","09/Oct/18 5:19 PM;mikailoral;Hi [~kchristidis] 

Could you explain, What is the user error and its solution?;;;","10/Oct/18 10:16 AM;pyraman;Yes! I noticed some similar issues and all i got is user error. Please clarify.;;;","10/Oct/18 7:46 PM;kchristidis;[~mikailoral], [~pyraman]: Your client is hitting the consenter too early. The consenter needs a few seconds to reach steady state (the Kafka cluster needs to get up, and the consenter needs to establish a connection with it before being able to serve requests). If you wait a few seconds and repeat the request, you should be fine.;;;","11/Oct/18 12:42 AM;pvrbharg;OK - should the above information be properly disseminated when the above specific error occurs in user interactions - such as in troubleshooting section of the documentation - so that users do not need to open the issue tickets and keep IBM busy answering these issues in piece meal manner? Also the user error comment does not convey anything and more importantly - it does not convey how to recover from this issue - other than by reading the code or searching for answers from previous sufferings of users.

Given above - my humble suggestion - we should add this error message to FAQ or troubleshooting section of documentation with clear steps to recover from this issue - so we can ward off future problem tickets.

Thanks.;;;","11/Oct/18 5:02 AM;kchristidis;[~pvrbharg]: The code should print out a succinct error message, not a multi-line guide on recovery.

With you on adding more info about this to the FAQ. We have a FAQ section [here|https://hyperledger-fabric.readthedocs.io/en/release-1.3/Fabric-FAQ.html]; feel free to push a CR adding a Q&A for this one. If you add me as a reviewer I'll make sure it doesn't slip through the cracks.;;;","11/Oct/18 6:15 AM;pvrbharg;Dear Kostas, Thank you for your comments.

Just to clarify - there was no suggestion for ""a multi-line guide on recovery."" The suggestion is for ""a succinct error message"" - as you indicated and that is not happening now clearly - as evidenced by these issue tickets.

I agree with your plan of action and I would do the needful for us here. 

Regards.;;;","11/Oct/18 7:33 AM;kchristidis;[~pvrbharg]: I'm certainly open to rephrasing the message. What do you suggest?;;;","11/Oct/18 9:05 AM;pvrbharg;Dear Kostas, Thank you for your consideration and in the spirit of continuous improvement/enhanced quality -   [^FAB-11088.docx] , here are my thoughts in the attachment and rationale for it. Please feel free to rephrase or adjust what I wrote up in draft - trying to nudge user to some kind of recovery path...

Thank you!;;;","11/Oct/18 9:22 AM;kchristidis;https://gerrit.hyperledger.org/r/c/26923/;;;","11/Oct/18 9:25 AM;kchristidis;[~pvrbharg]: Thanks for the follow-up, see CR above and let me know if this is any better.;;;","11/Oct/18 10:33 AM;pyraman;[~kchristidis] [~pvrbharg] thank for clarifying the issue and your spirit to enhance quality. But in my case it is diferent: I deploy the network manually without docker on different physical machines (I managed 9 machines). Everything was Ok in Solo mode. I faced the issue with kafka mode as you known. My steps:
1 - start 3 zookeeper instances.
2 - start 4 broker instances and point to zookeepers from server.properties.
3 - generate artifacts for 4 orgs (one peer each org) and 3 orderers.
4 - generate genesisblock.
5 - deploy to 7 different machines.
6 - start orderers and then peers.
7 - update anchor.
8 - create channel. STUCK HERE.
I mean i did it manually so components have enough time to establish connection.
I've tried to add timeout by adding ""-t 150s"" in command for creating channel.
I did it several times but no luck.
My suggestion: we should find the root cause and document it as suggested by [~pvrbharg] .;;;","11/Oct/18 11:16 AM;pvrbharg;Dear Kostas - Your CR is good and definitely valuable. THANK YOU!
Dear Quan Hoang: I still submit - the CR should be checked in irrespective of your issue. Still regarding your step 8 - yes this could be a separate issue that potentially needs debugging and isolating on its own for the root cause. These two activities could coexist in my view. 

Regards.;;;","11/Oct/18 10:32 PM;kchristidis;[~pyraman]: I'll need logs to debug this. Specifically, orderer logs set at DEBUG level around the time you're invoking channel creation.;;;","12/Oct/18 12:42 PM;pyraman;[~kchristidis] thanks for your kindly support.

The attachment consists of logs and yaml. I also attach a sh file to show how I deploy the network.

The most important log is located in directory: orderer0/orderer0.trade.com - please seach for line: ""2018-10-12 10:08:41.972 ICT [orderer/common/broadcast] Handle -> WARN 125 [channel: tradechannel] Rejecting broadcast of message from 192.168.167.149:52769 with SERVICE_UNAVAILABLE: rejected by Consenter: will not enqueue, consenter for this channel hasn't started yet"".[^logs.tar.gz]

Edited: I'm using Fabric 1.2.0;;;","13/Oct/18 3:27 AM;kchristidis;[~pyraman]: Something's up with your Kafka (as in: Apache Kafka/ZooKeeper) setup. Right around the line you're pointing in the orderer log, you'll also see this message.

{{2018-10-12 10:08:39.238 ICT [orderer/consensus/kafka] try -> DEBU 11e [channel: tradechannel] Initial attempt failed = kafka server: In the middle of a leadership election, there is currently no leader for this partition and hence it is unavailable for writes.}}

(Grepping your Kafka logs real quick I also saw a replication factor of 1 for a channel. Why is that?) ;;;","15/Oct/18 10:20 AM;pyraman;[~kchristidis] thanks for your support. I will take a look at kafka/zookeeper configuration today. Will let you know soon. :). Thanks;;;","17/Oct/18 12:25 PM;pyraman;I've reconfigured apache kafka with 3 zookeepers and 4 brokers. It seems OK with kafka now (I've tested by producing message from producer and seen it in consumer).

The error message ""SERVICE_UNAVAILABLE: rejected by Consenter: will not enqueue, consenter for this channel hasn't started yet"" disappeared.

But I'm facing another issue with creating channel (again = creating channel).

The error message is strange. I don't think we need Orderer MSP while creating channel.

If i deploy network in 'solo' mode, then everything is fine.

 

 

2018-10-17 10:15:46.813 ICT [cauthdsl] func2 -> DEBU 199 0xc4200b82a0 identity 0 does not satisfy principal: the identity is a member of a different MSP (expected TradeOrdererMSP, got ImporterOrgMSP)

2018-10-17 10:15:46.813 ICT [cauthdsl] func2 -> DEBU 19a 0xc4200b82a0 principal evaluation fails

2018-10-17 10:15:46.813 ICT [cauthdsl] func1 -> DEBU 19b 0xc4200b82a0 gate 1539746146813288921 evaluation fails

2018-10-17 10:15:46.813 ICT [policies] Evaluate -> DEBU 19c Signature set did not satisfy policy /Channel/Orderer/TradeOrdererOrg/Writers

2018-10-17 10:15:46.814 ICT [policies] Evaluate -> DEBU 19d == Done Evaluating *cauthdsl.policy Policy /Channel/Orderer/TradeOrdererOrg/Writers

2018-10-17 10:15:46.814 ICT [policies] func1 -> DEBU 19e Evaluation Failed: Only 0 policies were satisfied, but needed 1 of [ TradeOrdererOrg.Writers ]

2018-10-17 10:15:46.814 ICT [policies] Evaluate -> DEBU 19f Signature set did not satisfy policy /Channel/Orderer/Writers

2018-10-17 10:15:46.814 ICT [policies] Evaluate -> DEBU 1a0 == Done Evaluating *policies.implicitMetaPolicy Policy /Channel/Orderer/Writers

2018-10-17 10:15:46.814 ICT [policies] func1 -> DEBU 1a1 Evaluation Failed: Only 0 policies were satisfied, but needed 1 of [ Consortiums.Writers Orderer.Writers ]

2018-10-17 10:15:46.814 ICT [policies] Evaluate -> DEBU 1a2 Signature set did not satisfy policy /Channel/Writers

2018-10-17 10:15:46.814 ICT [policies] Evaluate -> DEBU 1a3 == Done Evaluating *policies.implicitMetaPolicy Policy /Channel/Writers;;;",,,,,,,,,
No need to trigger integration tests for 1.1 and 1.0 branches.,FAB-11091,31731,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,C0rWin,C0rWin,07/Jul/18 8:05 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,10/Jul/18 9:12 PM,,,,,,,,,,,,fabric-ci,,,,,0,ci-failure,,,,,,"We did not use to have integration tests task for 1.0 and 1.1 branches, hence any update/CR fails to run them, see example:

{quote}
19:15:50 + vote -m '""Starting Integration tests""' -l F3-IntegrationTest=0
19:15:50 + ssh -p 29418 hyperledger-jobbuilder@gerrit.hyperledger.org gerrit review 24179,1 --notify '""NONE""' -m '""Starting Integration tests""' -l F3-IntegrationTest=0
19:15:51 + cd gopath/src/github.com/hyperledger/fabric
19:15:51 + make integration-test
19:15:52 make: *** No rule to make target 'integration-test'.  Stop.
{quote}

example from: https://jenkins.hyperledger.org/job/fabric-verify-integration-tests-x86_64/660/console",,C0rWin,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzi4n:",,,,,,,,,,,,,,,,,,,,,C0rWin,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/18 9:12 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/24253/2/jjb/fabric/fabric-macros.yaml;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
ledger deadlock can occur under a peer with frequent Deliver cancellations,FAB-11094,31734,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,mlishok,mlishok,08/Jul/18 6:01 AM,19/Sep/18 8:44 PM,28/Oct/23 3:03 AM,08/Jul/18 8:02 PM,v1.1.0,v1.2.0,,,,,,,v1.1.1,v1.2.1,v1.3.0,fabric-common,,,,,0,,,,,,,"testing on pre 1.1.1 master for FAB-10799 with composer nodeJS chaincode workload encountered repeatable ledger deadlock.

goroutine 166293 [semacquire, 5 minutes]:
sync.runtime_SemacquireMutex(0xc42196864c, 0x1bb5f8a)
    /opt/go/src/runtime/sema.go:71 +0x3c
sync.(*Mutex).Lock(0xc421968648)
    /opt/go/src/sync/mutex.go:134 +0x158
github.com/hyperledger/fabric/common/ledger/blkstorage/fsblkstorage.(*blocksItr).Close(0xc42312c3f0)
    /opt/gopath/src/github.com/hyperledger/fabric/common/ledger/blkstorage/fsblkstorage/blocks_itr.go:98 +0x9a

 

 

 ",,denyeart,mlishok,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11720,FAB-12021,,,,,,,,FAB-10799,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzi5b:",,,,,,,,,,,,,,,,,,,,,denyeart,mlishok,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Aug/18 10:24 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/24215/ master (1.3.0)
https://gerrit.hyperledger.org/r/#/c/24217/ release-1.2 (1.2.1)
https://gerrit.hyperledger.org/r/#/c/24213/ release-1.1 (1.1.1);;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Docker images should use Alpine rather than Ubuntu or Debian,FAB-11096,31736,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,09/Jul/18 4:52 AM,20/Sep/19 7:58 PM,28/Oct/23 3:03 AM,21/Dec/18 12:30 AM,,,,,,,,,v2.0.0,,,,,,,,0,,,,,,,Alpine is the recommended base OS for Docker images.  It is generally more secure than other distros (i.e. typically does not have any vulnerabilities) and is much smaller than other distros.,,gregnotso,mastersingh24,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-735,,,FAB-10852,,,,,,,,,FAB-11209,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzi5r:",,,,Unset,,,,,,Unset,,,,,,,,,,,gregnotso,mastersingh24,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Nov/18 8:29 PM;mastersingh24;https://gerrit.hyperledger.org/r/27491;;;","30/Nov/18 7:47 AM;mastersingh24;moving to 2.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,
discover local peers response has redundant fields,FAB-11097,31737,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,09/Jul/18 8:00 AM,19/Sep/18 5:30 AM,28/Oct/23 3:03 AM,19/Sep/18 5:30 AM,,,,,,,,,,,,fabric-common,,,,,0,,,,,,,"When the discover CLI returns the local peers (channel-less) query - it also prints ledger height as zeros and chaincodes as nils, since these are not set.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzi5z:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jul/18 8:07 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/24231/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Document local collections,FAB-11099,31741,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,pandrejko,pandrejko,10/Jul/18 12:37 AM,11/Jan/20 1:28 AM,28/Oct/23 3:03 AM,11/Jan/20 1:28 AM,v1.3.0,,,,,,,,,,,fabric-docs,,,,,0,Documentation,,,,,,,,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-7593,,,,,,,,,"1|hzwthj:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/20 7:45 AM;pandrejko;[~denyeart] I think we already delivered this information as part of the Fabric 2.0 Beta? Can this be closed?;;;","11/Jan/20 1:28 AM;denyeart;Local collections is a proposed feature for the future.... yes we can close this until the feature gets prioritized.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
System Behave Framework: Add dumping memory between test runs,FAB-11100,31742,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,10/Jul/18 12:59 AM,13/Nov/18 1:08 AM,28/Oct/23 3:03 AM,10/Aug/18 9:50 PM,,,,,,,,,,,,,,,,,0,,,,,,,The request was made to dump the memory usage between each test run in the system behave framework.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10805,,,,,,,,,FAB-10805,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzi6f:",,,,Unset,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Aug/18 2:44 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/24993/

Adding package in CI: https://gerrit.hyperledger.org/r/#/c/25013/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE not init service discovery for non-discovery targetPeers,FAB-11101,31743,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,10/Jul/18 1:06 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,18/Jul/18 6:31 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"Current PTE init service discovery regardless the setting of targetPeers.  Indeed, no need to init service discovery if the targetPeers is not discovery, i.e. user specified the target peers for the transactions.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2247,,,,,,,,,"1|hzzi6n:",,,,Unset,,,,,,Unset,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"12/Jul/18 2:58 AM;dongming;https://gerrit.hyperledger.org/r/#/c/24323/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add visual vocab images to glossary,FAB-11102,31744,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,pandrejko,pandrejko,10/Jul/18 2:32 AM,24/Sep/18 4:40 AM,28/Oct/23 3:03 AM,24/Sep/18 4:40 AM,,,,,,,,,v1.3.0,,,fabric-docs,,,,,0,Documentation,,,,,,Following the pattern that [~odowdaibm] started for including basic images in the glossary to represent glossary items.,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzi6v:",,,,Unset,,,,,,Unset,,,,,,,,,,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Jul/18 4:41 AM;pandrejko;https://gerrit.hyperledger.org/r/24263;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Document Fabric failure models,FAB-11103,31746,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jyellick,jyellick,10/Jul/18 3:25 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,fabric-docs,,,,,0,stale-item,,,,,,"There as a user request on rocket-chat that the fault tolerance and failure modes of Fabric be more clearly documented.  https://chat.hyperledger.org/channel/fabric-orderer?msg=mhD9XJpcHaXXB2FEy

This seems like it would be a good idea. The user's suggestion was as a new section under https://hyperledger-fabric.readthedocs.io/en/release-1.2/architecture.html

Some possible topics for discussion could be:
# Replacing a failed peer
# Replacing a failed OSN
# Fault tolerance limitation of Kafka based ordering
# Strategies for disaster preparedness (ie, spreading deployments over multiple datacenters)

The above is not meant to be exhaustive, but simply as a starting point.",,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzi73:",,,,Unset,,,,,,Unset,,,,,,,,,,,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Add line in ""What's new"" doc for Service Discovery CLI",FAB-11104,31748,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,10/Jul/18 5:08 AM,21/Jul/18 3:48 AM,28/Oct/23 3:03 AM,10/Jul/18 9:42 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-docs,,,,,0,Documentation,,,,,,Every doc has a description except the Service Discovery CLI. Should add one.,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzi7b:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve ledger serviceability - Create custom errors with stack,FAB-11105,31749,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wenjian,wenjian,10/Jul/18 10:31 AM,30/Apr/19 11:42 PM,28/Oct/23 3:03 AM,30/Apr/19 11:41 PM,,,,,,,,,,,,fabric-ledger,,,,,0,serviceability,,,,,,"Currently custom errors do not contain stack info. For serviceability, need to include stack when creating custom errors. 

Because the structs defined in the package 'github.com/pkg/errors' are not public, we could not extend our custom errors from it. Therefore, we will have to do the following
 - create the actual error using errors.New...
 - wrap the above error in our custom error
 - Implement the additional function 'Format' in our custom error (this will simply invoke the 'Format' function of the wrapped error)

 ",,manish-sethi,sykesm,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11218,,,FAB-5766,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzu9o:",,,,Unset,,,,,,Unset,,,,,,,,,,,manish-sethi,sykesm,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/18 10:24 PM;manish-sethi;For a better reference to the code see - https://gerrit.hyperledger.org/r/#/c/23735/4/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/helper.go@121;;;","30/Apr/19 11:42 PM;sykesm;The two sub-tasks are closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Fix chaincode name checking,FAB-11106,31750,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,10/Jul/18 11:33 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 6:59 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"The existing checking of chaincode is a simple ""[A-Za-z0-9_-]+"".

However, using ""_-"" at the start/end will trigger problem.

Hence we need to fix the naming checking to disable the problematic cases.

Experimental results with e2e_cli:

*Chaincode Name**: -exp02*

Error: could not assemble transaction, err Proposal response was not successful, error code 500, msg failed to execute transaction d698c823ac724202c62791841981e2b1f8e16586dc2c10957c745e0f41d12fd6: error starting container: error starting container: Error constructing Docker VM Name. 'dev-peer0.org1.example.com--exp02-1.0-040e5bf65c5e3d1640909cb0ed5a51591f32a54e249644ee3a5b305209fd520e' breaks Docker's repository naming rules

 

*Chaincode Name: _exp02*

Error: could not assemble transaction, err Proposal response was not successful, error code 500, msg failed to execute transaction adde86a63d1571a57ea363235bc2c1964a3db1888c23d08c826c04c410fa2881: error starting container: error starting container: Error constructing Docker VM Name. 'dev-peer0.org1.example.com-_exp02-1.0-77fa43ec960f1ba05d9d7fe0175badf73ec5d0aeec095d595080389af5c5a0e8' breaks Docker's repository naming rules

 

*Chaincode Name:exp02_*

Error: could not assemble transaction, err Proposal response was not successful, error code 500, msg failed to execute transaction fac6bbb25bd0529b8d056420db173c3f246123c83c98f1e40280e41018ada42c: error starting container: error starting container: Error constructing Docker VM Name. 'dev-peer0.org1.example.com-exp02_-1.0-21b747784befe7787dd71568e19d1603ed4cf15c045c482c20d975525c3e53fa' breaks Docker's repository naming rules

 

*Chaincode Name: exp02-*

fatal error: unexpected signal during runtime execution
 [signal SIGSEGV: segmentation violation code=0x1 addr=0xe5 pc=0x7f4fe49477f8]

runtime stack:
 runtime.throw(0x106be8c, 0x2a)
 /usr/local/go/src/runtime/cgocall.go:128 +0x64 fp=0xc420434a50 sp=0xc420434a18 pc=0x402314
 os/user._Cfunc_mygetpwuid_r(0x3e8, 0xc42019eb40, 0x7f4fdc000c80, 0x400, 0xc42000e008, 0x0)
 _cgo_gotypes.go:170 +0x4d fp=0xc420434a98 sp=0xc420434a50 pc=0x8ed0dd
 os/user.lookupUnixUid.func1.1(0x7f4f000003e8, 0xc42019eb40, 0x7f4fdc000c80, 0x400, 0xc42000e008, 0xc420434b28)
 /usr/local/go/src/os/user/cgo_lookup_unix.go:100 +0x13f fp=0xc420434ad8 sp=0xc420434a98 pc=0x8eecbf
 os/user.lookupUnixUid.func1(0x10)
 /usr/local/go/src/os/user/cgo_lookup_unix.go:100 +0x50 fp=0xc420434b18 sp=0xc420434ad8 pc=0x8eed60
 os/user.retryWithBuffer(0xc4203d6000, 0xc420434c08, 0xc4203d6000, 0xf9b000)
 /usr/local/go/src/os/user/cgo_lookup_unix.go:253 +0x3b fp=0xc420434b78 sp=0xc420434b18 pc=0x8ee18b
 os/user.lookupUnixUid(0x3e8, 0x0, 0x0, 0x0)
 /usr/local/go/src/os/user/cgo_lookup_unix.go:96 +0x130 fp=0xc420434c40 sp=0xc420434b78 pc=0x8ed610
 os/user.lookupUserId(0xc4206e61a0, 0x4, 0x0, 0x482444, 0x3e8)
 /usr/local/go/src/os/user/cgo_lookup_unix.go:86 +0x73 fp=0xc420434c78 sp=0xc420434c40 pc=0x8ed4a3
 os/user.LookupId(0xc4206e61a0, 0x4, 0x4, 0x0, 0x0)
 /usr/local/go/src/os/user/lookup.go:41 +0x51 fp=0xc420434cc8 sp=0xc420434c78 pc=0x8ecaa1
 archive/tar.statUnix(0x11324a0, 0xc4206da820, 0xc420499260, 0x1960280, 0x106)
 /usr/local/go/src/archive/tar/stat_unix.go:39 +0x4c1 fp=0xc420434d48 sp=0xc420434cc8 pc=0x8f87d1
 archive/tar.FileInfoHeader(0x11324a0, 0xc4206da820, 0xc420698d70, 0x48, 0x0, 0x0, 0x7f4fe651cd80)
 /usr/local/go/src/archive/tar/common.go:699 +0x491 fp=0xc420434ec8 sp=0xc420434d48 pc=0x8f1ca1
 github.com/hyperledger/fabric/core/container/util.WriteStreamToPackage(0x1116840, 0xc4206b5200, 0xc420698d70, 0x48, 0xc420698d74, 0x44, 0xc420651500, 0xc420435158, 0x4112ad)
 /go/src/github.com/hyperledger/fabric/core/container/util/writer.go:180 +0x18b fp=0xc420435080 sp=0xc420434ec8 pc=0x9862cb
 github.com/hyperledger/fabric/core/container/util.WriteFileToPackage(0xc420698d70, 0x48, 0xc420698d74, 0x44, 0xc420651500, 0x0, 0x0)
 /go/src/github.com/hyperledger/fabric/core/container/util/writer.go:170 +0x3aa fp=0xc420435198 sp=0xc420435080 pc=0x98609a
 github.com/hyperledger/fabric/core/chaincode/platforms/golang.(*Platform).GetDeploymentPayload(0x1984938, 0xc4206ba560, 0x0, 0x0, 0x0, 0x0, 0x0)
 /go/src/github.com/hyperledger/fabric/core/chaincode/platforms/golang/platform.go:467 +0x1331 fp=0xc4204359a8 sp=0xc420435198 pc=0x98dd81
 github.com/hyperledger/fabric/core/chaincode/platforms.GetDeploymentPayload(0xc4206ba560, 0xc4206ba560, 0x0, 0x0, 0x0, 0xc420555550)
 /go/src/github.com/hyperledger/fabric/core/chaincode/platforms/platforms.go:80 +0x89 fp=0xc4204359f0 sp=0xc4204359a8 pc=0x992d29
 github.com/hyperledger/fabric/core/container.GetChaincodePackageBytes(0xc4206ba560, 0x0, 0x0, 0xc4206b64e0, 0xc42066d870, 0x6)
 /go/src/github.com/hyperledger/fabric/core/container/controller.go:203 +0x96 fp=0xc420435a38 sp=0xc4204359f0 pc=0xc2e7f6
 github.com/hyperledger/fabric/peer/chaincode.getChaincodeDeploymentSpec(0xc4206ba560, 0xc4206ba501, 0x0, 0x0, 0x0)
 /go/src/github.com/hyperledger/fabric/peer/chaincode/common.go:64 +0x112 fp=0xc420435aa0 sp=0xc420435a38 pc=0xc4abb2
 github.com/hyperledger/fabric/peer/chaincode.genChaincodeDeploymentSpec(0xc420103200, 0x7ffd31c9571b, 0x6, 0x7ffd31c95725, 0x3, 0x0, 0x1, 0xc420435c70)
 /go/src/github.com/hyperledger/fabric/peer/chaincode/install.go:104 +0xab fp=0xc420435b68 sp=0xc420435aa0 pc=0xc51e3b
 github.com/hyperledger/fabric/peer/chaincode.chaincodeInstall(0xc420103200, 0x0, 0x0, 0xc42056b340, 0x0, 0x0)
 /go/src/github.com/hyperledger/fabric/peer/chaincode/install.go:172 +0x15c fp=0xc420435c58 sp=0xc420435b68 pc=0xc525bc
 github.com/hyperledger/fabric/peer/chaincode.installCmd.func1(0xc420103200, 0xc420495500, 0x0, 0x6, 0x0, 0x0)
 /go/src/github.com/hyperledger/fabric/peer/chaincode/install.go:44 +0x
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/resolver_conn_wrapper.go:109 +0x182
 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ccResolverWrapper).start
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/resolver_conn_wrapper.go:95 +0x3f

goroutine 7 [select]:
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ccBalancerWrapper).watcher(0xc420087d80)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/balancer_conn_wrappers.go:122 +0x14a
 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newCCBalancerWrapper
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/balancer_conn_wrappers.go:113 +0x14c

goroutine 8 [select]:
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc4204e6b40)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:1243 +0x235
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).connect.func1(0xc4204e6b40)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:854 +0x1b5
 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).connect
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:845 +0xe1

goroutine 14 [IO wait]:
 internal/poll.runtime_pollWait(0x7f4fe651cff0, 0x72, 0xc420066970)
 /usr/local/go/src/runtime/netpoll.go:173 +0x57
 internal/poll.(*pollDesc).wait(0xc4204f6818, 0x72, 0xffffffffffffff00, 0x111a740, 0x1899400)
 /usr/local/go/src/internal/poll/fd_poll_runtime.go:85 +0x9b
 internal/poll.(*pollDesc).waitRead(0xc4204f6818, 0xc4204d8c00, 0x400, 0x400)
 /usr/local/go/src/internal/poll/fd_poll_runtime.go:90 +0x3d
 internal/poll.(*FD).Read(0xc4204f6800, 0xc4204d8c00, 0x400, 0x400, 0x0, 0x0, 0x0)
 /usr/local/go/src/internal/poll/fd_unix.go:157 +0x17d
 net.(*netFD).Read(0xc4204f6800, 0xc4204d8c00, 0x400, 0x400, 0x8, 0x8, 0x3f3)
 /usr/local/go/src/net/fd_unix.go:202 +0x4f
 net.(*conn).Read(0xc4200ba7a8, 0xc4204d8c00, 0x400, 0x400, 0x0, 0x0, 0x0)
 /usr/local/go/src/net/net.go:176 +0x6a
 crypto/tls.(*block).readFromUntil(0xc42064e150, 0x7f4fe5364838, 0xc4200ba7a8, 0x5, 0xc4200ba7a8, 0x0)
 /usr/local/go/src/crypto/tls/conn.go:493 +0x96
 crypto/tls.(*Conn).readRecord(0xc420650000, 0x1097417, 0xc420650120, 0x0)
 /usr/local/go/src/crypto/tls/conn.go:595 +0xe0
 crypto/tls.(*Conn).Read(0xc420650000, 0xc42065c000, 0x8000, 0x8000, 0x0, 0x0, 0x0)
 /usr/l
 goroutine 15 [select]:
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.loopyWriter(0x112f3e0, 0xc420087e40, 0xc42064e7b0, 0xc420635fb8)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:741 +0x368
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client.func3(0xc420001b00)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:290 +0x5e
 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:289 +0xd42

goroutine 16 [select]:
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).keepalive(0xc420001b00)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1330 +0x137
 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:294 +0xdb5

goroutine 34 [select]:
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ccResolverWrapper).watcher(0xc42064f080)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/resolver_conn_wrapper.go:109 +0x182
 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ccResolverWrapper).start
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/resolver_conn_wrapper.go:95 +0x3f

goroutine 35 [select]:
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ccBalancerWrapper).watcher(0xc4206523c0)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/balancer_conn_wrappers.go:122 +0x14a
 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newCCBalancerWrapper
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/balancer_conn_wrappers.go:113 +0x14c

goroutine 36 [select]:
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc4204e7b00)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:1243 +0x235
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).connect.func1(0xc4204e7b00)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:854 +0x1b5
 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).connect
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:845 +0xe1

goroutine 41 [IO wait]:
 internal/poll.runtime_pollWait(0x7f4fe651cf20, 0x72, 0xc42006d970)
 /usr/local/go/src/runtime/netpoll.go:173 +0
 crypto/tls.(*block).readFromUntil(0xc42064f500, 0x7f4fe5364838, 0xc4200ba840, 0x5, 0xc4200ba840, 0x0)
 /usr/local/go/src/crypto/tls/conn.go:493 +0x96
 crypto/tls.(*Conn).readRecord(0xc420650380, 0x1097417, 0xc4206504a0, 0x0)
 /usr/local/go/src/crypto/tls/conn.go:595 +0xe0
 crypto/tls.(*Conn).Read(0xc420650380, 0xc42069c000, 0x8000, 0x8000, 0x0, 0x0, 0x0)
 /usr/local/go/src/crypto/tls/conn.go:1156 +0x100
 bufio.(*Reader).Read(0xc42069a000, 0xc420498f18, 0x9, 0x9, 0x30, 0x28, 0xf83d40)
 /usr/local/go/src/bufio/bufio.go:216 +0x238
 io.ReadAtLeast(0x1116840, 0xc42069a000, 0xc420498f18, 0x9, 0x9, 0x9, 0xc42006ddf0, 0x400ece, 0xc42006de9f)
 /usr/local/go/src/io/io.go:309 +0x86
 io.ReadFull(0x1116840, 0xc42069a000, 0xc420498f18, 0x9, 0x9, 0x85e574, 0xc4206403f0, 0xc420640004)
 /usr/local/go/src/io/io.go:327 +0x58
 github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.readFrameHeader(0xc420498f18, 0x9, 0x9, 0x1116840, 0xc42069a000, 0x0, 0x0, 0xc4206403f0, 0x0)
 /go/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:237 +0x7b
 github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.(*Framer).ReadFrame(0xc420498ee0, 0xc4206403f0, 0xc420640300, 0x0, 0x0)
 /go/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:492 +0xa4
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc42067cd80)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1180 +0xe1
 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:258 +0xbf1

goroutine 42 [select]:
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.loopyWriter(0x112f3e0, 0xc420652480, 0xc42064fb90, 0xc42006bfb8)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:741 +0x368
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client.func3(0xc42067cd80)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:290 +0x5e
 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:289 +0xd42

goroutine 43 [select]:
 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).keepalive(0xc42067cd80)
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1330 +0x137
 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client
 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:294 +0xdb5
 Chaincode installation on remote org 2/peer0 has Failed

 

*Chaincode Name: exp__02*

Error: could not assemble transaction, err Proposal response was not successful, error code 500, msg failed to execute transaction a7d12f663312a15dbd705a99370df60ca0fc5e7ab650c5a3cdcd14b51f9fa831: error starting container: error starting container: Error constructing Docker VM Name. 'dev-peer0.org1.example.com-exp__02-1.0-c2ce1346e2bb24e9b1f72a9929e288c4e7b23a2f8e355681e0babf3082aead68' breaks Docker's repository naming rules
ChaincodeInstantiation on org 1/peer0 in channel businesschannel failed 

 

*Chaincode Name: exp__02*

Error: could not assemble transaction, err Proposal response was not successful, error code 500, msg failed to execute transaction a97586089a3f0b15610959f526bf16ee89174cedfee7d26e4e45fc7c9177a8bd: error starting container: error starting container: Error constructing Docker VM Name. 'dev-peer0.org1.example.com-exp_-02-1.0-ff380c749f877c48069d76ba62a4ad9a49d6bd2344be5878950fac4ae9d6f97f' breaks Docker's repository naming rules
ChaincodeInstantiation on org 1/peer0 in channel businesschannel failed

 

*Chaincode Name: exp_-02*

Error: could not assemble transaction, err Proposal response was not successful, error code 500, msg failed to execute transaction a97586089a3f0b15610959f526bf16ee89174cedfee7d26e4e45fc7c9177a8bd: error starting container: error starting container: Error constructing Docker VM Name. 'dev-peer0.org1.example.com-exp_-02-1.0-ff380c749f877c48069d76ba62a4ad9a49d6bd2344be5878950fac4ae9d6f97f' breaks Docker's repository naming rules
ChaincodeInstantiation on org 1/peer0 in channel businesschannel failed",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzi7j:",,,,,,,,,,,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Jul/18 11:56 AM;baohua;https://gerrit.hyperledger.org/r/#/c/24281/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
launchAndWaitForRegister failed Timeout expired while starting chaincode,FAB-11108,31753,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,StevenXu,StevenXu,10/Jul/18 6:43 PM,01/Dec/18 9:04 PM,28/Oct/23 3:03 AM,01/Dec/18 9:04 PM,v1.0.0,,,,,,,,v1.0.0,,,fabric-peer,,,,,0,v1.0,,,,,,"I deployed fabric v1.0.0, one organization with 4 peer and 3 orderer, and then we test HA for fabric, we invoke the chaincode successfully after deployed, then we stop 3 peer and then invoke chaincode, also work, but when I start the stoped 3 peer and then stop another peer, I find invoke the chaincode failed, the log from one peer are attached:

 

\{""log"":""2018-07-09 09:47:28.875 UTC [kvledger] Commit -\u003e INFO 041\u001b[0m Channel [pubchain]: Created block [44] with 1 transaction(s)\n"",""stream"":""stderr"",""time"":""2018-07-09T09:47:28.876088744Z""}
\{""log"":""\u001b[33m2018-07-09 09:47:35.239 UTC [gossip/state] handleStateResponse -\u003e WARN 042\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:47:35.23993663Z""}
\{""log"":""\u001b[33m2018-07-09 09:47:45.249 UTC [gossip/state] handleStateResponse -\u003e WARN 043\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:47:45.249787759Z""}
\{""log"":""\u001b[33m2018-07-09 09:47:55.260 UTC [gossip/state] handleStateResponse -\u003e WARN 044\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:47:55.260823908Z""}
\{""log"":""\u001b[33m2018-07-09 09:48:05.270 UTC [gossip/state] handleStateResponse -\u003e WARN 045\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:48:05.270697312Z""}
\{""log"":""\u001b[33m2018-07-09 09:48:15.280 UTC [gossip/state] handleStateResponse -\u003e WARN 046\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:48:15.280769438Z""}
\{""log"":""\u001b[33m2018-07-09 09:48:25.293 UTC [gossip/state] handleStateResponse -\u003e WARN 047\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:48:25.293730135Z""}
\{""log"":""\u001b[33m2018-07-09 09:48:35.303 UTC [gossip/state] handleStateResponse -\u003e WARN 048\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:48:35.304151553Z""}
\{""log"":""\u001b[33m2018-07-09 09:48:45.314 UTC [gossip/state] handleStateResponse -\u003e WARN 049\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:48:45.314596926Z""}
\{""log"":""\u001b[33m2018-07-09 09:48:55.323 UTC [gossip/state] handleStateResponse -\u003e WARN 04a\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:48:55.32396509Z""}
\{""log"":""\u001b[33m2018-07-09 09:49:05.335 UTC [gossip/state] handleStateResponse -\u003e WARN 04b\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:49:05.33534326Z""}
\{""log"":""\u001b[33m2018-07-09 09:49:15.346 UTC [gossip/state] handleStateResponse -\u003e WARN 04c\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:49:15.346605507Z""}
\{""log"":""\u001b[33m2018-07-09 09:49:25.356 UTC [gossip/state] handleStateResponse -\u003e WARN 04d\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:49:25.356562117Z""}
\{""log"":""\u001b[33m2018-07-09 09:49:35.366 UTC [gossip/state] handleStateResponse -\u003e WARN 04e\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:49:35.366396881Z""}
\{""log"":""\u001b[33m2018-07-09 09:49:45.377 UTC [gossip/state] handleStateResponse -\u003e WARN 04f\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:49:45.377264305Z""}
\{""log"":""\u001b[33m2018-07-09 09:49:55.387 UTC [gossip/state] handleStateResponse -\u003e WARN 050\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:49:55.387663413Z""}
\{""log"":""\u001b[33m2018-07-09 09:50:05.398 UTC [gossip/state] handleStateResponse -\u003e WARN 051\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:50:05.398221255Z""}
\{""log"":""\u001b[33m2018-07-09 09:50:15.413 UTC [gossip/state] handleStateResponse -\u003e WARN 052\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:50:15.413370234Z""}
\{""log"":""\u001b[33m2018-07-09 09:50:25.423 UTC [gossip/state] handleStateResponse -\u003e WARN 053\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:50:25.423362688Z""}
\{""log"":""\u001b[33m2018-07-09 09:50:35.434 UTC [gossip/state] handleStateResponse -\u003e WARN 054\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:50:35.434440066Z""}
\{""log"":""\u001b[33m2018-07-09 09:50:45.444 UTC [gossip/state] handleStateResponse -\u003e WARN 055\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:50:45.445061855Z""}
\{""log"":""\u001b[33m2018-07-09 09:50:55.457 UTC [gossip/state] handleStateResponse -\u003e WARN 056\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:50:55.457556678Z""}
\{""log"":""\u001b[33m2018-07-09 09:51:05.468 UTC [gossip/state] handleStateResponse -\u003e WARN 057\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:51:05.468371806Z""}
\{""log"":""\u001b[33m2018-07-09 09:51:15.478 UTC [gossip/state] handleStateResponse -\u003e WARN 058\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:51:15.478780157Z""}
\{""log"":""\u001b[33m2018-07-09 09:51:25.489 UTC [gossip/state] handleStateResponse -\u003e WARN 059\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:51:25.489576225Z""}
\{""log"":""\u001b[33m2018-07-09 09:51:35.500 UTC [gossip/state] handleStateResponse -\u003e WARN 05a\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:51:35.500314896Z""}
\{""log"":""\u001b[33m2018-07-09 09:51:45.509 UTC [gossip/state] handleStateResponse -\u003e WARN 05b\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:51:45.509986275Z""}
\{""log"":""\u001b[33m2018-07-09 09:51:55.523 UTC [gossip/state] handleStateResponse -\u003e WARN 05c\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:51:55.523704458Z""}
\{""log"":""\u001b[33m2018-07-09 09:52:05.537 UTC [gossip/state] handleStateResponse -\u003e WARN 05d\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:52:05.537837682Z""}
\{""log"":""\u001b[33m2018-07-09 09:52:15.547 UTC [gossip/state] handleStateResponse -\u003e WARN 05e\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:52:15.547794714Z""}
\{""log"":""\u001b[33m2018-07-09 09:52:25.559 UTC [gossip/state] handleStateResponse -\u003e WARN 05f\u001b[0m Payload with sequence number 45 was received earlier\n"",""stream"":""stderr"",""time"":""2018-07-09T09:52:25.559325165Z""}
\{""log"":""\u001b[31m2018-07-09 09:52:27.993 UTC [chaincode] processStream -\u003e ERRO 060\u001b[0m Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled\n"",""stream"":""stderr"",""time"":""2018-07-09T09:52:27.993555871Z""}
\{""log"":""\u001b[31m2018-07-09 09:52:28.147 UTC [chaincode] Launch -\u003e ERRO 061\u001b[0m launchAndWaitForRegister failed Timeout expired while starting chaincode syccMember:1.0(networkid:dev,peerid:peer2.org1.arxanfintech.com,tx:48517846ccd2f17c7f9ce203de28d4dfaffe42f8ada3b8a0f46babbf162a9b69)\n"",""stream"":""stderr"",""time"":""2018-07-09T09:52:28.148155086Z""}
\{""log"":""\u001b[31m2018-07-09 09:52:28.148 UTC [chaincode] ExecuteChaincode -\u003e ERRO 062\u001b[0m Error executing chaincode: Timeout expired while starting chaincode syccMember:1.0(networkid:dev,peerid:peer2.org1.arxanfintech.com,tx:48517846ccd2f17c7f9ce203de28d4dfaffe42f8ada3b8a0f46babbf162a9b69)\n"",""stream"":""stderr"",""time"":""2018-07-09T09:52:28.148305481Z""}
\{""log"":""\u001b[31m2018-07-09 09:52:28.149 UTC [endorser] simulateProposal -\u003e ERRO 063\u001b[0m failed to invoke chaincode name:\""syccMember\"" on transaction 48517846ccd2f17c7f9ce203de28d4dfaffe42f8ada3b8a0f46babbf162a9b69, error: Error executing chaincode: Timeout expired while starting chaincode syccMember:1.0(networkid:dev,peerid:peer2.org1.arxanfintech.com,tx:48517846ccd2f17c7f9ce203de28d4dfaffe42f8ada3b8a0f46babbf162a9b69)\n"",""stream"":""stderr"",""time"":""2018-07-09T09:52:28.149514747Z""}
\{""log"":""\u001b[31m2018-07-09 09:52:28.447 UTC [chaincode] Launch -\u003e ERRO 064\u001b[0m launchAndWaitForRegister failed Timeout expired while starting chaincode syccMember:1.0(networkid:dev,peerid:peer2.org1.arxanfintech.com,tx:4ba01b6b2e82b92005e6cbf2fe1fbb8020ae06eb2d245361fe6f6878e91e18b9)\n"",""stream"":""stderr"",""time"":""2018-07-09T09:52:28.447962173Z""}
\{""log"":""\u001b[31m2018-07-09 09:52:28.447 UTC [chaincode] ExecuteChaincode -\u003e ERRO 065\u001b[0m Error executing chaincode: Timeout expired while starting chaincode syccMember:1.0(networkid:dev,peerid:peer2.org1.arxanfintech.com,tx:4ba01b6b2e82b92005e6cbf2fe1fbb8020ae06eb2d245361fe6f6878e91e18b9)\n"",""stream"":""stderr"",""time"":""2018-07-09T09:52:28.449064003Z""}
\{""log"":""\u001b[31m2018-07-09 09:52:28.449 UTC [endorser] simulateProposal -\u003e ERRO 066\u001b[0m failed to invoke chaincode name:\""syccMember\"" on transaction 4ba01b6b2e82b92005e6cbf2fe1fbb8020ae06eb2d245361fe6f6878e91e18b9, error: Error executing chaincode: Timeout expired while starting chaincode syccMember:1.0(networkid:dev,peerid:peer2.org1.arxanfintech.com,tx:4ba01b6b2e82b92005e6cbf2fe1fbb8020ae06eb2d245361fe6f6878e91e18b9)\n"",""stream"":""stderr"",""time"":""2018-07-09T09:52:28.449509848Z""}

 

 ",,mastersingh24,StevenXu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzi7z:",,,,,,,,,,,,,,,,,,,,,mastersingh24,StevenXu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Dec/18 9:04 PM;mastersingh24;There have been many changes since then and we are about to release 1.4.

1.0.0 should no longer be used;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Be connected to wrong URL in README,FAB-11109,31756,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,qpakzk,qpakzk,10/Jul/18 10:23 PM,01/Dec/18 8:26 PM,28/Oct/23 3:03 AM,01/Dec/18 8:26 PM,,,,,,,,,v1.2.0,,,fabric-samples,,,,,0,Documentation,,,,,,"The URL is for a different release, so it cannot be connected to correct location.",,denyeart,qpakzk,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzi87:",,,,,,,,,,,,,,,,,,,,,denyeart,qpakzk,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/18 3:56 AM;wlahti;Can you provide a link to the document you have in mind? ;;;","01/Dec/18 8:26 PM;denyeart;No response from reporter, closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Configtxlator 1.2 not fully backwards compatible with 1.1,FAB-11110,31758,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,jyellick,dshuffma,dshuffma,10/Jul/18 10:51 PM,01/Dec/18 6:19 AM,28/Oct/23 3:03 AM,01/Dec/18 6:19 AM,v1.2.0,,,,,,,,,,,fabric-tools,,,,,0,,,,,,,"It seems most operations work fine.  However if you are using a 1.2 fabric configtxlator and send it a fabric 1.1 *channel update config block*, it cannot parse it.  You will see this error when trying to calculate the delta between the two config block protobuffs:

{code:java}
Error occurred encoding update: *common.Config: unknown field ""type"" in common.Config
{code}

sending the same payload to a 1.1 based configtxlator works fine.

*update*: the encoding/decoding and delta calculations are all being sent to a 1.2 configtxlator.  the fabric data in question is a 1.1 fabric channel.",,dshuffma,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzi8f:",,,,,,,,,,,,,,,,,,,,,dshuffma,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/18 10:55 PM;jyellick;Was the JSON created with a v1.2 {{configtxlator}}?  This error sounds to me like the config was decoded with a v1.1 version of configtxlator and you are attempting to re-encode with a v1.2 version.;;;","10/Jul/18 11:53 PM;dshuffma;[~jyellick] nope, all using a 1.2 configtxlator.  side note - its not possible for our code to use a different configtxlator for different operations since we only feed it 1 url.

looking back at the issue, I see my wording is a little confusing, i'll correct that.;;;","11/Jul/18 12:16 AM;jyellick;Can you post the original (binary) message to this JIRA so that I can attempt to reproduce locally?;;;","11/Jul/18 3:02 AM;dshuffma;since these are customer networks, I can't hand those out (probably). I suppose I can make my own network and contrive an update and give you that.  I'll try to get that together and post back tomorrow.;;;","18/Jul/18 12:22 AM;jyellick;I've been unable to reproduce this.  To attempt, first I create a bare minimum proto message for the config containing a ""type"" field.

{noformat}
$ cat test.json
{
    ""config"": {
        ""type"": 1
    }
}
{noformat}

Then, using the official v1.1 configtxlator release binary, I encoded this into its binary protobuf form.

{noformat}
$ fabric-samples-v1.1/bin/configtxlator proto_encode --type common.ConfigEnvelope --input test.json --output test.pb
{noformat}

From here, I used the official v1.2 configtxlator release binary to decode that binary proto to JSON.  Note, that there is no 'type' field present (though it does emit a default 'sequence' field, which is unrelated).

{noformat}
$ fabric-samples-v1.2/bin/configtxlator proto_decode --type common.ConfigEnvelope --input test.pb
{
        ""config"": {
                ""sequence"": ""0""
        }
}
{noformat}

Just to verify, I also tried taking this 'type'-less output JSON back into binary protobuf, and things worked fine.

{noformat}
$ fabric-samples-v1.2/bin/configtxlator proto_decode --type common.ConfigEnvelope --input test.pb | fabric-samples-v1.2/bin/configtxlator proto_encode --type common.ConfigEnvelope --output test-v12.pb
{noformat}

Are you absolutely certain that the JSONs were generated by a v1.2 configtxlator and not an earlier version?;;;","18/Jul/18 2:23 AM;dshuffma;Well, i'm absolutely certain of nothing...

I'm wondering now if I picked up the wrong version of configtxlator and sent you on a wild goose chase...  Looks like I'm using `1.2.0-rc1`, which is mostly likely out of date. Can we keep this issue in the ""returned"" state until I find the time to update that and retest?  If I repeat it i'll post back with the binary this time.  thanks for the help so far!

also as a side note, the service is not blocked by this.  we now have the ability to switch between different configtxlators for different fabric versions.;;;","18/Jul/18 2:47 AM;jyellick;Works for me, if this is still open in a week or two I may give you a nudge, but no harm for now.;;;",,,,,,,,,,,,,,,,,,,,
"There should be ability to set CKA_EXTRACTABLE attribute of Secret Key to false , if it has been set to true",FAB-11111,31759,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,ashutosh_kumar,ashutosh_kumar,ashutosh_kumar,10/Jul/18 11:39 PM,23/Sep/19 11:40 PM,28/Oct/23 3:03 AM,23/Sep/19 11:40 PM,,,,,,,,,,,,fabric-crypto,,,,,0,Security,,,,,,"If CKA_EXTRACTABLE is set to true , it is prone to wrapping attack. There should be a utility to set CKA_EXTRACTABLE attribute to false.

This implementation will safeguard existing vulnerable key from future Key Wrap attack. [~vpaprots] [~mastersingh24] , comments please.

Best way to implement this is to write a utility script , which is not part of main fabric or fabric ca code base.

 

 ",,ashutosh_kumar,elli-androulaki,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzi8n:",,,,,,,,,,,,,,,,,,,,,ashutosh_kumar,elli-androulaki,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Sep/18 6:59 PM;elli-androulaki;[~ashutosh_kumar] is this still relevant?;;;","19/Sep/18 5:25 AM;ashutosh_kumar;[~elli-androulaki] , you can close this one. Thanks for tracking.;;;","19/Sep/18 1:40 PM;rhegde;can we have a update on the delivery of this utility. Preference would be to make it as a part of fabric-tool docker image.

 

Today, we do package fabric-tool on pre-prod and production system and making it as part of the fabric-tool would not allow us to change deployment deliverable. Having all tools (others already present configtxlator, fabric-ca-client) and now like the said would be 1-stop solution for fabric.;;;",,,,,,,,,,,,,,,,,,,,,,,,
"As a fabric developer, I need a way to convert CDS and SignedCDS to the new package format.",FAB-11112,31761,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,jyellick,jyellick,11/Jul/18 2:10 AM,02/Aug/18 1:42 AM,28/Oct/23 3:03 AM,02/Aug/18 1:42 AM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"In order to facilitate upgrade, we will need to convert the old chaincode install packages to the new format, and persist them.  Note, this will be discarding some of the irrelevant fields, like the instantiation policy, signers, etc. but as they are unneeded in the new lifecycle approach this should not be a problem.

To fulfill this story, there needs to be two utility functions, one which accepts a SignedCDSPackage and outputs name, version, ChaincodeInstallPackage, and one which accepts a CDSPackage and outputs the same.  Note, that the SignedCDSPackage embeds a CDS, so likely the one function will ultimately call the other.",,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11237,,,,,,,,,"1|hzzi93:",,,,Unset,,,,,,Unset,,,,,,,,,,,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/18 3:14 AM;wlahti;https://gerrit.hyperledger.org/r/c/24325/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a peer admin, I need my already installed chaincodes to be migrated to the new chaincode package format on upgrade.",FAB-11113,31762,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,wlahti,jyellick,jyellick,11/Jul/18 2:14 AM,07/Jan/19 12:20 PM,28/Oct/23 3:03 AM,07/Jan/19 12:20 PM,,,,,,,,,Future,,,fabric-peer,,,,,0,,,,,,,"We should add a hook in peer/node/start.go to call an upgrade procedure which migrates the old chaincode package format to the new.  Note, that this migration will necessarily duplicate data, as the old package format is required for channels which do not upgrade to the new lifecycle.

This hook should read in each installed chaincode, convert it into the new package format, and write it to the new package format (if a chaincode of that name does not already exist.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11237,,,,,,,,,"1|hzzi9b:",,,,Unset,,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jan/19 12:20 PM;jyellick;Since we've decided to allow concurrent existence of the old and new lifecycle, the migration path will instead be to (as desired) redefine a chaincode in the new lifecycle to override the old definition.

After a a release or two once all users have migrated to the new lifecycle, we can disable support for the old lifecycle.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE to support chaincode upgrade,FAB-11114,31766,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,11/Jul/18 5:29 AM,27/Jul/18 12:10 AM,28/Oct/23 3:03 AM,27/Jul/18 12:10 AM,,,,,,,,,,,,fabric-quality,,,,,0,PTE,,,,,,"Right now, PTE can install/instantiate the chaincode, but does not have the capability to upgrade the chaincode.

Upgrading chincode mechanism in PTE is to closely follow the instantiate mechanism in PTE.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2247,,,,,,,,,"1|hzzi9j:",,,,Unset,,,,,,Unset,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
idemixgen is not built into fabric-tools docker image,FAB-11115,31768,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,xue35,xue35,xue35,11/Jul/18 12:38 PM,29/Aug/18 1:39 AM,28/Oct/23 3:03 AM,29/Aug/18 1:39 AM,v1.2.0,,,,,,,,v1.2.1,,,fabric-tools,,,,12/Jul/18 12:00 AM,0,,,,,,,"*Sympton:* 

In 1.2 release, idemixgen is not built into fabric-tools docker image.

*Consequence:*

Missing idemixgen in a pure docker fabric network set-up will fail the process (e.g. e2e_cli) example.

*Solution:*

build idemixgen command as part of fabric-tool docker image.",,xue35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,3600,,0%,7200,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10120,,,,,,,,,"1|hzzi9r:",,,,,,,,,,,,,,,,,,,,,xue35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Aug/18 10:15 AM;xue35;git change id If0401549149d4ff1111be9ac3ffb97b7c6918d35;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Issues of installing fabric on Raspberry Pi 3 B+,FAB-11117,31770,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,SashaPESIC,sang,sang,11/Jul/18 2:26 PM,25/Jan/20 2:07 AM,28/Oct/23 3:03 AM,15/Aug/18 12:32 AM,v1.2.1,,,,,,,,,,,,,,,,1,kafka,,,,,,"I am trying to install Fabric on Raspberry Pi 3 B+, and I built it manually. I am using a 64-bit Xubuntu OS on the pi. Until now, I have built fabric-baseimage and fabric, and I got the following images, and it seems there is no images for fabric-couchdb, fabric-kafka, fabric-zookeeper and fabric-javaenv:

REPOSITORY                     TAG                              IMAGE ID            CREATED             SIZE
 hyperledger/fabric-ca          arm64-1.2.1-snapshot-3bcdbb2     656013b13c84        2 minutes ago       302MB
 hyperledger/fabric-ca          latest                           656013b13c84        2 minutes ago       302MB
 hyperledger/fabric-tools       arm64-1.2.1-snapshot-a7f600adb   21faf7c5683b        19 minutes ago      1.53GB
 hyperledger/fabric-tools       arm64-latest                     21faf7c5683b        19 minutes ago      1.53GB
 hyperledger/fabric-tools       latest                           21faf7c5683b        19 minutes ago      1.53GB
 <none>                         <none>                           2adde1fe623b        20 minutes ago      1.67GB
 hyperledger/fabric-testenv     arm64-1.2.1-snapshot-a7f600adb   3e03270a4e18        30 minutes ago      1.58GB
 hyperledger/fabric-testenv     arm64-latest                     3e03270a4e18        30 minutes ago      1.58GB
 hyperledger/fabric-testenv     latest                           3e03270a4e18        30 minutes ago      1.58GB
 hyperledger/fabric-buildenv    arm64-1.2.1-snapshot-a7f600adb   4b394dc00ecf        32 minutes ago      1.5GB
 hyperledger/fabric-buildenv    arm64-latest                     4b394dc00ecf        32 minutes ago      1.5GB
 hyperledger/fabric-buildenv    latest                           4b394dc00ecf        32 minutes ago      1.5GB
 hyperledger/fabric-ccenv       arm64-1.2.1-snapshot-a7f600adb   05cf09ed174b        34 minutes ago      1.45GB
 hyperledger/fabric-ccenv       arm64-latest                     05cf09ed174b        34 minutes ago      1.45GB
 hyperledger/fabric-ccenv       latest                           05cf09ed174b        34 minutes ago      1.45GB
 hyperledger/fabric-orderer     arm64-1.2.1-snapshot-a7f600adb   37106a5d4ecb        40 minutes ago      205MB
 hyperledger/fabric-orderer     arm64-latest                     37106a5d4ecb        40 minutes ago      205MB
 hyperledger/fabric-orderer     latest                           37106a5d4ecb        40 minutes ago      205MB
 hyperledger/fabric-peer        arm64-1.2.1-snapshot-a7f600adb   c19f829d154b        43 minutes ago      212MB
 hyperledger/fabric-peer        arm64-latest                     c19f829d154b        43 minutes ago      212MB
 hyperledger/fabric-peer        latest                           c19f829d154b        43 minutes ago      212MB
 hyperledger/fabric-baseimage   arm64-0.4.11-snapshot-2ccd597    dfac137aa3e4        20 hours ago        1.41GB
 hyperledger/fabric-baseimage   latest                           dfac137aa3e4        20 hours ago        1.41GB
 <none>                         <none>                           0d7dafdf61ee        23 hours ago        490MB
 hyperledger/fabric-basejvm     arm64-0.4.11-snapshot-2ccd597    a0e8a6dd8e92        23 hours ago        490MB
 hyperledger/fabric-basejvm     latest                           a0e8a6dd8e92        23 hours ago        490MB
 hyperledger/fabric-baseos      arm64-0.4.11-snapshot-2ccd597    8d7e8dcba85b        23 hours ago        186MB
 hyperledger/fabric-baseos      latest                           8d7e8dcba85b        23 hours ago        186MB
 hello-world                    latest                           993097e7b835        2 months ago        4.75kB
 aarch64/ubuntu                 xenial                           a7d1ddc47ced        14 months ago       110MB

 

I tried to pull these files using docker, using the following command:

curl -sSL [https://goo.gl/6wtTN5] | bash

But it gives me the following errors:

Installing hyperledger/fabric-samples repo

===> Checking out v1.2.0 branch of hyperledger/fabric-samples
 M    balance-transfer/typescript/artifacts
 Previous HEAD position was 9f9fc7e ----FAB-8633---- Correct revoked error check
 HEAD is now at ed81d7b ----FAB-10811---- fabric-ca sample is broken on v1.2

Installing Hyperledger Fabric binaries

===> Downloading version 1.2.0 platform specific fabric binaries
 ===> Downloading:  [https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/linux-aarch64-1.2.0/hyperledger-fabric-linux-aarch64-1.2.0.tar.gz]
   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                  Dload  Upload   Total   Spent    Left  Speed
 100  1127    0  1127    0     0   2263      0 --:--:-- --:--:-- --:--:--  2263

gzip: stdin: not in gzip format
 tar: Child returned status 1
 tar: Error is not recoverable: exiting now
 ==> There was an error downloading the binary file. Switching to incremental download.
 ==> Downloading file...

------> 1.2.0 platform specific fabric binary is not available to download <----

===> Downloading version 1.2.0 platform specific fabric-ca-client binary
 ===> Downloading:  [https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric-ca/hyperledger-fabric-ca/linux-aarch64-1.2.0/hyperledger-fabric-ca-linux-aarch64-1.2.0.tar.gz]
   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                  Dload  Upload   Total   Spent    Left  Speed
 100  1154    0  1154    0     0   3028      0 --:--:-- --:--:-- --:--:--  3028

gzip: stdin: not in gzip format
 tar: Child returned status 1
 tar: Error is not recoverable: exiting now
 ==> There was an error downloading the binary file. Switching to incremental download.
 ==> Downloading file...

------> 1.2.0 fabric-ca-client binary is not available to download  (Available from 1.1.0-rc1) <----

Installing Hyperledger Fabric docker images

===> Pulling fabric Images
 ==> FABRIC IMAGE: peer

1.2.0: Pulling from hyperledger/fabric-peer
 no matching manifest for linux/arm64 in the manifest list entries
 Error response from daemon: No such image: hyperledger/fabric-peer:1.2.0
 ==> FABRIC IMAGE: orderer

1.2.0: Pulling from hyperledger/fabric-orderer
 no matching manifest for linux/arm64 in the manifest list entries
 Error response from daemon: No such image: hyperledger/fabric-orderer:1.2.0
 ==> FABRIC IMAGE: ccenv

1.2.0: Pulling from hyperledger/fabric-ccenv
 no matching manifest for linux/arm64 in the manifest list entries
 Error response from daemon: No such image: hyperledger/fabric-ccenv:1.2.0
 ==> FABRIC IMAGE: tools

1.2.0: Pulling from hyperledger/fabric-tools
 no matching manifest for linux/arm64 in the manifest list entries
 Error response from daemon: No such image: hyperledger/fabric-tools:1.2.0
 ===> Pulling fabric ca Image
 ==> FABRIC CA IMAGE

1.2.0: Pulling from hyperledger/fabric-ca
 no matching manifest for linux/arm64 in the manifest list entries
 Error response from daemon: No such image: hyperledger/fabric-ca:1.2.0
 ===> Pulling thirdparty docker images
 ==> THIRDPARTY DOCKER IMAGE: couchdb

0.4.10: Pulling from hyperledger/fabric-couchdb
 no matching manifest for linux/arm64 in the manifest list entries
 Error response from daemon: No such image: hyperledger/fabric-couchdb:0.4.10
 ==> THIRDPARTY DOCKER IMAGE: kafka

0.4.10: Pulling from hyperledger/fabric-kafka
 no matching manifest for linux/arm64 in the manifest list entries
 Error response from daemon: No such image: hyperledger/fabric-kafka:0.4.10
 ==> THIRDPARTY DOCKER IMAGE: zookeeper

0.4.10: Pulling from hyperledger/fabric-zookeeper
 no matching manifest for linux/arm64 in the manifest list entries
 Error response from daemon: No such image: hyperledger/fabric-zookeeper:0.4.10

 

I looked at the repositories here: {color:#0066cc}[https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/]{color} and it seems no file supports the arm64 or aarch64 architecture at all. Is there anywhere else that I could find these files which support the arm64 architecture? Is there any way that I could still install Hyperledger Fabric on Raspberry Pi?",,diestrin,gphofficial,sang,SashaPESIC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jan/20 6:29 PM;SashaPESIC;steps.txt;https://jira.hyperledger.org/secure/attachment/18103/steps.txt",,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzia7:",,,,Unset,,,,,,Unset,,,,,,,,,,,diestrin,gphofficial,sang,SashaPESIC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Aug/18 1:57 AM;SashaPESIC;Hi [~sang],

In regard to the original question the kafka, zookeeper, couchdb are inside fabric-baseimage/images folder. When you issue a make kafka command from the fabric-baseimage folder the image will be made for you. Same goes for zookeeper and couchdb. The easiest solution is really just to issue a make all command from the fabric-baseimage folder. 

Yes, there are no official images availbale for aarch64. What you can do is use the images I have built (Using 64-bit Debian Stretch). You can find them on my Docker Hub: https://hub.docker.com/r/pesicsasa/. You have all the images you need built here for Hyperledger Fabric, and also a couchdb image. 

Regarding the building process, I have also gone through some troubles with the previous version. I have built the new 1.2 images without any major issues. 

Greets,
SP;;;","24/Jan/20 6:05 AM;diestrin;[~SashaPESIC], could you share how did you get to build those images? I'm on the same task, I'm using your images actually, but I need to compile tag 1.4.0, and yours are older than that.

Thanks.;;;","24/Jan/20 6:30 PM;SashaPESIC;Hello [~diestrin],

 Lastly I worked with [~ZakiAlam] to build these images ([https://hub.docker.com/u/zakialam]), and those are for HF version 1.4.1. However, i do have noted the steps needed to build the images. Note that this was last tested on HF 1.1 on my side, so these commands might need modification, but the process is the same. I attached the steps in this file ([^steps.txt]

If you have any further problems and need help do not hesitate to write on this post. I will help as much as I can. Meanwhile try running the images from [~ZakiAlam].

Greets,

SP;;;","25/Jan/20 2:07 AM;diestrin;Thank you very much!;;;",,,,,,,,,,,,,,,,,,,,,,,
Add tendermint protobuf definition,FAB-11118,31775,28201,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,grapebaba,grapebaba,grapebaba,11/Jul/18 5:24 PM,25/Aug/19 11:39 PM,28/Oct/23 3:03 AM,25/Aug/19 11:39 PM,,,,,,,,,,,,,,,,,0,,,,,,," 
{code:java}
message TendermintValidator {
    // The public key of tendermint validator
    string pub_key = 1;
    // The p2p listen address of tendermint validator
    string p2p_laddr = 2;
    // The rpc listen address of tendermint validator
    string rpc_laddr = 3;
}

// TendermintGenesis is a tendermint core genesis config for one channel
message TendermintGenesis {
    // The string format of genesis time
    string genesis_time = 1;

    // Validators of the tendermint network
    repeated TendermintValidator validators = 2;
}

// ChannelTendermintGenesis is tendermint core genesis configs for all channels
message ChannelTendermintGenesis {
    map<string, TendermintGenesis> channel_tendermint_genesis = 1;
}{code}
Right now we implement it with one channel per tendermint core model. So we have 'ChannelTendermintGenesis' config, each channel has a 'TendermintGenesis' config. 

'TendermintGenesis' has most basic config for running tendermint core, genesis_time and validators.

'TendermintValidator' also has most basic for tendermint validator, the 'pub_key' config need more explains. Since currently tendermint not support scep256r1, we cannot use orderer's msp for tendermint validator identity. We need generate another ed25516 key pair for running tendermint validator right now, we will submit a patch to tendermint soon in order to support scep256r1 and we can remove this config and just use orderer msp.

 ",,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzziav:",,,,,,,,,,,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move the legacy world to the last remaining user,FAB-11120,31797,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sykesm,sykesm,12/Jul/18 2:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 12:36 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzid3:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
scripts/run-integration-test should not use ginkgo's recursive flag,FAB-11121,31799,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,12/Jul/18 2:30 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,15/Jul/18 5:55 AM,,,,,,,,,,,,,,,,,0,,,,,,,Recursion can cause suites to run multiple times.,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzidb:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/18 2:32 AM;sykesm;https://gerrit.hyperledger.org/r/24319;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Remove the EventHub,FAB-11122,31801,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,wlahti,mastersingh24,mastersingh24,12/Jul/18 3:17 AM,25/Sep/18 3:47 AM,28/Oct/23 3:03 AM,25/Sep/18 3:47 AM,,,,,,,,,v1.3.0,,,fabric-peer,fabric-sdk-go,fabric-sdk-node,fabric-sdk-py,,0,hygiene,sdk,Usability,,,,"The EventHub functionality was replaced by the much improved Channel Event Service in v1.1.0.  We've always known that the EventHub was a stop gap on the way to a channel-scoped event service.

Given this and given the number of issue that exist with the EventHub (many of which cannot really be fixed without major surgery if at all), we should remove the EventHub from the peer as well as all of the SDKs.",,denyeart,ekc 2,Hangyu_FJH,mastersingh24,MichaelWang,raspydev,rickr,TiantianGao,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-832,,,,,,,,,,,,,,,,,,,,,Yes,,,,,,,,,,,,"1|hzzidj:","Since 'old' event hub is removed in v1.3.0, a release note will be required advising applications that use the old event hub that they must switch to the channel event service before upgrading peers or sdk.",Yes,,Yes,,,,,,Yes,,,,,,,,,,,denyeart,ekc 2,Hangyu_FJH,mastersingh24,MichaelWang,raspydev,rickr,TiantianGao,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/18 9:36 PM;rickr;From the SDK perspective : 
It seems to me we would really need to move the SDK version 2.0 to do this. This change would necessitate client to change their application code. I think there would be a lot of confusion for the SDKs to be at 2.0 and Fabric at 1.3 level. [~harrisob@us.ibm.com];;;","27/Jul/18 2:23 AM;denyeart;Let's collect the facts before we make a decision about which release event hub is removed in.

For each of the SDKs, what is the last release that used the peer's event hub?  [~rickr] [~harrisob@us.ibm.com] [~troyronda];;;","27/Jul/18 4:12 AM;denyeart;Looks like java sdk makes both the old event hub and the new event deliver service available in v1.1 and v1.2.  Java sdk release notes gave warning not to use the old event hub as of 1.1.

Looks like node sdk made both the old event hub and the new event deliver service available in v1.1 and v1.2, and used old event hub in samples until FAB-11220. 

Go SDK already automatically uses delivery service based on channel capabilities.;;;","14/Aug/18 11:37 PM;troyronda;Go SDK has been updated - EventHub code is removed and deliver service is now always used.
https://gerrit.hyperledger.org/r/c/25495/
;;;","24/Aug/18 2:28 AM;rickr;Removing java-sdk  tests fixed so they don't reference eventhubs for 1.3;;;",,,,,,,,,,,,,,,,,,,,,,
Remove EventHub service from the peer,FAB-11123,31802,31801,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,wlahti,mastersingh24,mastersingh24,12/Jul/18 3:19 AM,27/Jul/18 1:46 AM,28/Oct/23 3:03 AM,27/Jul/18 1:46 AM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,Remove the gRPC service and all uses of the EventHub,,mastersingh24,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzidz:",,,,,,,,,,,,,,,,,,,,,mastersingh24,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jul/18 5:44 AM;wlahti;https://gerrit.hyperledger.org/r/c/24593/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Remove usage of and reference to the EventHub (node sdk),FAB-11124,31803,31801,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,harrisob@us.ibm.com,mastersingh24,mastersingh24,12/Jul/18 3:20 AM,10/Aug/18 1:36 AM,28/Oct/23 3:03 AM,10/Aug/18 1:36 AM,,,,,,,,,v1.3.0,,,fabric-sdk-node,,,,,0,,,,,,,,,davidkhala,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11125,FAB-11220,,,,,,,,,,,,,,FABN-837,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzie7:",,,,,,,,,,,,,,,,,,,,,davidkhala,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jul/18 12:27 AM;davidkhala;could we clean the legacy eventUrl, events and ports mapping to 7053 as they are for deprecated EventHub ?

[https://gerrit.hyperledger.org/r/#/c/24825/];;;","27/Jul/18 4:16 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/24499/ (merged) removed EventHub code from node sdk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Remove usage of and reference to the EventHub (java sdk),FAB-11125,31804,31801,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,rickr,mastersingh24,mastersingh24,12/Jul/18 3:21 AM,28/Jul/18 12:27 PM,28/Oct/23 3:03 AM,28/Jul/18 12:27 PM,,,,,,,,,v1.3.0,,,fabric-sdk-java,,,,,0,,,,,,,https://gerrit.hyperledger.org/r/#/c/24879/,,denyeart,jyellick,mastersingh24,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11126,,FAB-11124,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzief:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,mastersingh24,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/18 9:35 PM;rickr;It seems to me we would really need to move the SDK version 2.0 to do this.  This change would necessitate client to change their application code. I think there would be a lot of confusion for the SDKs to be at 2.0 and Fabric at 1.3 level.;;;","24/Jul/18 4:02 AM;jyellick;[~mastersingh24] Any response to the above?

To my mind, the old eventhub is a bug.  It doesn't function correctly, and by design never really will.  Any 'serious' clients are already using the newer APIs to get around the old behavior, so I think removing in v1.3 is fine.  Regardless, we should do this early in v1.3 if it's going to be done.;;;","28/Jul/18 12:27 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/24879/ merged in java sdk to de-support old event hub if fabric version if v1.3 or later. This was needed to get java sdk tests working again.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Remove usage of and reference to the EventHub (go sdk),FAB-11126,31805,31801,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,troyronda,mastersingh24,mastersingh24,12/Jul/18 3:21 AM,14/Aug/18 11:36 PM,28/Oct/23 3:03 AM,14/Aug/18 11:36 PM,,,,,,,,,v1.3.0,,,fabric-sdk-go,,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABG-716,,,,,,,FAB-11125,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzien:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add UT for kvledger,FAB-11127,31808,,Story,To Do,FAB,Fabric,software,denyeart,,,Lowest,,diizuka,diizuka,diizuka,12/Jul/18 9:18 AM,02/Dec/19 10:45 PM,28/Oct/23 3:03 AM,,v1.1.0,v1.2.0,,,,,,,v2.1.0,,,fabric-ledger,,,,,0,ledger,,,,,,"Add unit test for

fabric/core/ledger/kvledger/txmgmt/validator/valinternal/

to increase test coverage 0% to 100%",,denyeart,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,No,,,"1|hzziev:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","09/Oct/18 11:05 PM;denyeart;Note that the validation code and tests will be refactored in v2.0 timeframe, which [~manish-sethi] is leading. [~diizuka] do you want to be involved in that effort?;;;","23/Jan/19 7:08 AM;denyeart;[~diizuka] [~manish-sethi]  I assume it makes sense to do this as part of the validation refactoring work in v2.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Ensure that protobuf encodes strings and bytes in the same fashion,FAB-11129,31810,30497,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,12/Jul/18 6:45 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 10:04 PM,,,,,,,,,v1.3.0,,,fabric-common,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,No,,,"1|hzzifb:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/18 6:51 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/24343/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix all vet errors that are excluded by the `-composites=false',FAB-11130,31815,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,12/Jul/18 9:25 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,16/Jul/18 4:02 PM,,,,,,,,,v1.3.0,,,,,,,,0,hygiene,,,,,,"When removing re-enabling the composite checks, the following files no longer pass the vet checks due to their use of unkeyed struct literals.
{code:java}
common/channelconfig/msp.go
core/chaincode/chaincode_support_test.go
core/chaincode/platforms/golang/platform.go
core/chaincode/platforms/java/platform.go
core/chaincode/platforms/node/platform.go
core/chaincode/shim/shim_test.go
core/committer/txvalidator/vscc_validator.go
core/common/privdata/store_test.go
core/deliverservice/deliveryclient_test.go
core/handlers/validation/builtin/validation_logic_test.go
core/ledger/kvledger/txmgmt/validator/valimpl/helper_test.go
core/policy/policy_test.go
core/scc/lscc/lscc_test.go
integration/discovery_service/e2e_test.go
integration/pvtdata/e2e_test.go
integration/runner/couchdb.go
integration/runner/couchdb_test.go
integration/runner/discovery_service_test.go
integration/runner/kafka.go
integration/runner/zookeeper.go
integration/world/config.go
integration/world/config_test.go
msp/mgmt/mgmt.go
peer/gossip/mcs_test.go
peer/gossip/sa_test.go
{code}

Use the {{keyify}} tool to add the field names and then format as necessary.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11131,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,No,,,"1|hzzifr:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/18 9:35 PM;sykesm;https://gerrit.hyperledger.org/r/24347;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
golinter.sh should run against all code and enable all vet checks,FAB-11131,31816,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,12/Jul/18 9:26 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,17/Jul/18 12:33 AM,,,,,,,,,,,,,,,,,0,hygiene,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11130,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,No,,,"1|hzzifz:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/18 9:35 PM;sykesm;https://gerrit.hyperledger.org/r/24349;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
ConfigUpdate should support a variadic list of additional signers,FAB-11133,31820,31066,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,sykesm,sykesm,12/Jul/18 11:58 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 9:50 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,Based on a review comment from [~jyellick],,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,No,,,"1|hzzign:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flakey peer CLI unit tests due to low connection timeout,FAB-11136,31826,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,13/Jul/18 2:51 AM,19/Mar/19 7:57 PM,28/Oct/23 3:03 AM,26/Jul/18 12:54 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,ci-flake,,,,,,"The peer CLI unit tests occasionally fail due to a ""context deadline exceeded"" error. This is likely due to CI needing a longer connection timeout value than is necessary for running the tests locally. This task will up the connTimeout value from 10ms to 1s for regular use and set the timeout to 10ms for unit tests where a connection failure is expected. 

Example error:
{code:java}
17:40:07 unit-tests_1  | --- FAIL: TestOrdererClient (0.02s)
17:40:07 unit-tests_1  | 	assertions.go:247: 
                          
	Error Trace:	ordererclient_test.go:94
17:40:07 unit-tests_1  | 		
	Error:      	Received unexpected error:
17:40:07 unit-tests_1  | 		
	            	context deadline exceeded
17:40:07 unit-tests_1  | 		
	            	github.com/hyperledger/fabric/core/comm.(*GRPCClient).NewConnection
17:40:07 unit-tests_1  | 		
	            		/opt/gopath/src/github.com/hyperledger/fabric/core/comm/client.go:186
17:40:07 unit-tests_1  | 		
	            	github.com/hyperledger/fabric/peer/common.(*OrdererClient).Broadcast
17:40:07 unit-tests_1  | 		
	            		/opt/gopath/src/github.com/hyperledger/fabric/peer/common/ordererclient.go:45
17:40:07 unit-tests_1  | 		
	            	github.com/hyperledger/fabric/peer/common_test.TestOrdererClient
17:40:07 unit-tests_1  | 		
	            		/opt/gopath/src/github.com/hyperledger/fabric/peer/common/ordererclient_test.go:93
17:40:07 unit-tests_1  | 		
	            	testing.tRunner
17:40:07 unit-tests_1  | 		
	            		/opt/go/src/testing/testing.go:777
17:40:07 unit-tests_1  | 		
	            	runtime.goexit
17:40:07 unit-tests_1  | 		
	            		/opt/go/src/runtime/asm_amd64.s:2361
17:40:07 unit-tests_1  | 		
	            	failed to create new connection
17:40:07 unit-tests_1  | 		
	            	orderer client failed to connect to 127.0.0.1:44740
17:40:07 unit-tests_1  | 		
	Test:       	TestOrdererClient
17:40:07 unit-tests_1  | 	assertions.go:247: 
                          
	Error Trace:	ordererclient_test.go:95
17:40:07 unit-tests_1  | 		
	Error:      	Expected value not to be nil.
17:40:07 unit-tests_1  | 		
	Test:       	TestOrdererClient
17:40:07 unit-tests_1  | FAIL
17:40:07 unit-tests_1  | coverage: 62.0% of statements
17:40:07 unit-tests_1  | FAIL	github.com/hyperledger/fabric/peer/common	0.247s{code}",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,No,,,"1|hzzih3:",,,,Unset,,,,,,Unset,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Jul/18 3:05 AM;wlahti;https://gerrit.hyperledger.org/r/c/24367/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Replace usage of gogo/protobuf with golang/protobuf,FAB-11138,31829,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,sykesm,sykesm,13/Jul/18 3:58 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,14/Jul/18 10:59 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"gogo is an implicit dependency we pick up through the docker libraries we vendor; we should be importing and using golang/protobuf.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,No,,,"1|hzzihj:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Jul/18 4:04 AM;sykesm;https://gerrit.hyperledger.org/r/24375;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
use fmt.println replace logging,FAB-11140,31847,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,asaningmaxchain123,asaningmaxchain123,13/Jul/18 11:46 AM,01/May/19 3:31 AM,28/Oct/23 3:03 AM,01/May/19 3:31 AM,,,,,,,,,,,,fabric-peer,,,,,0,,,,,,,use the fmt.println replace logger.info in the `peer logging getlevel` cmd,,asaningmaxchain123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,No,,,"1|hzzijb:",,No,,Unset,,,,,,Unset,,,,,,,,,,,asaningmaxchain123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Collection level endorsement policy to restrict collection non-member peers from endorsing private data writes,FAB-11141,31848,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Duplicate,ales,yuki-kon,yuki-kon,13/Jul/18 11:52 AM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,06/Nov/19 11:44 PM,v1.2.0,,,,,,,,v2.0.0,,,fabric-ledger,,,,,1,,,,,,,"According to the concept, private data collection allows a defined subset of organizations on a channel the ability to endorse, commit, or query private data without having to create a separate channel.
However, the unauthorized organization can endorse a transaction to put private data and the proposed transaction is stored on the ledger.

Steps to reproduce 
--------------------------
I tried a tutorial for private data (http://hyperledger-fabric.readthedocs.io/en/latest/private_data_tutorial.html) with fabric v1.2.0.
I changed test steps a little to see that the unauthorized organization (= org2) can’t put private data collection `collectionMarblePrivateDetails`. 
After switching the test user to org2, I invoked `initMarble`.

Expected Results
--------------------------
The peer on org2 returns a proposal error at endorsement time because the peer is not allowed to access to a private collection.
There is no update on private data collections.

Actual Results
--------------------------
The peer on org2 returned success as a proposal response.
There was update on private data collection `collectionMarblePrivateDetails`. The physical file is located under /var/hyperledger/production/ledgersData/pvtdataStore.
- Org1’s peer has private data. Org1 can get this data when calling `readMarblePrivateDetails`.
- Org2’s peer doesn’t have private data. Org2 fails to get this data when calling `readMarblePrivateDetails`.

Issue 
--------------------------
The namespace under private data collection can be consumed by unauthorized organizations.
As a result, the authorized organizations can read incorrect data produced by unauthorized organizations.
",commit 7893ab37e4c2e8c6ae2a382c3e248ba840d77014,denyeart,joaquimpedrooliveira,mastersingh24,MichaelWang,sheetal-hlf,yacovm,yuki-kon,zjubfd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15066,,,,,,,,,FAB-8812,FAB-13581,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5108,,,No,,,No,,,"1|hzwqfk:s",,No,,Unset,,To Do,,,,Unset,,,,,,,,,,,denyeart,joaquimpedrooliveira,mastersingh24,MichaelWang,sheetal-hlf,yacovm,yuki-kon,zjubfd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jul/18 4:15 PM;yacovm;I believe this is by design.... [~denyeart] ?;;;","16/Jul/18 1:45 AM;mastersingh24;[~yacovm] is correct .... there is no tie between collections and endorsement policy.  Endorsement policy is still scoped to the combination of channel / chaincode ... not to collections.  See FAB-8812 for finer-grained endorsement policies.   In v1.2, you can of course create pluggable endorsement and validation logic but FAB-8812 will provide some nice capabilities out of the box as well.;;;","16/Jul/18 11:40 PM;yuki-kon;[~mastersingh24] Thank you for your comments. I will check the doc about finer-grained endorsement policy.
My initial question was simple. When unauthorized organizations call stub.GetPrivateData, ChaincodeShim returns an error `GET_STATE failed`.
I think it may be user friendly if ChaincodeShim returns an error (e.g. collection policy validation error) when unauthorized organizations call stub.PutPrivateData.;;;","13/Aug/18 3:07 PM;zjubfd;@[~mastersingh24]  Can you give more detail about how  FAB-8812 can resolve the problem. In my option  FAB-8812 just provide a finer grained endorsement policies.;;;","22/Oct/18 7:45 PM;sheetal-hlf;I tried the same process and expected error while unauthorized org writes to private data.

Though the unauthorized peers do not persist the private data, I too agree that this activity should not be allowed so that unauthorized peers don't mess up the private data. 

E.g. editing the price details stored in private data; even though the unauthorized peers do not have the data they are permitted to change the value.

 

[~denyeart] could you please share your thoughts?;;;","23/Oct/18 2:25 AM;denyeart;For Updates, you can protect from non-member writes by first doing a read in the chaincode, which would require the peer to have the private data. This is anyways typical for updates in order to protect against write collisions (since Fabric does readset version validation at commit time).

For Creates, the initial design allowed non-members to endorse write-only transactions without persisting the private data, as in the initial use cases there were scenarios where peers would be allowed to see the private but not provide it to others later (not persist it).  I agree it would make sense to have an option to completely restrict non-member peers from endorsing any transaction.  Let's use this work item to add another config option to the collection config that would enforce the check at validation time (the same check could be made at chaincode execution time, to avoid submitting invalid transactions in the first place).  I've updated the title accordingly.;;;","24/Oct/18 1:02 PM;sheetal-hlf;Could you please share some of the scenarios where orgs would be involved in write-only transactions and not in update?

As the initial design allowed non-members to endorse write-only transactions without persisting the private data, there would be some thought behind it.;;;","24/Oct/18 7:22 PM;denyeart;[~sheetal-hlf] Two examples where an org/peer may be authorized to create private data but not update it later:

1) For personal information, an org/peer may be authorized to do a transaction that creates private data but not persist/retain it.

2) A org/peer like a central authority may be able to 'issue' (create) tokens but is not able see tokens/ownership after issuance.;;;","25/Oct/18 8:10 PM;sheetal-hlf;Thank you for the response, David

if the peer is not able to verify the token it generated then why would the peer be allowed to generate it?

Also I am not able to relate this case with any real-life scenario i.e. we are allowing a non-authorized peer to endorse write-only transactions to private data.

Could you please elaborate or give me some pointers?;;;","26/Oct/18 7:00 AM;denyeart;[~sheetal-hlf] There are indeed real-life regulations that allow organizations to transact on private personal data but not retain the personal data long term, in fact it was a real-life requirement for one of the private data project sponsors. In other scenarios it is up to the client to determine who should transact on the private data, and it is the client responsibility not to divulge the private data to any unauthorized peers. Fabric itself will not share the private data with non-collection members. I completely agree that depending on the scenario you may or may not want endorsements from organizations that have seen the private data from a client, but are non-members of the collection, to count towards the endorsement policy, and as such the intent is to add such a config option. Contribution of such code would in fact be very welcomed.;;;","18/Jan/19 12:42 AM;denyeart;Current thinking is that this will be implemented as an endorsement policy at the collection level in FAB-15066.;;;","03/Dec/19 2:55 AM;denyeart;[~sheetal-hlf] To close the loop on this one... collection level endorsement policies have been implemented for Fabric v2.0. Also, see the patterns that have been documented regarding sharing private data:

https://hyperledger-fabric.readthedocs.io/en/latest/private-data/private-data.html#sharing-private-data;;;",,,,,,,,,,,,,,,
Endoresment failed during query,FAB-11143,31854,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,rameshthoomu,rameshthoomu,13/Jul/18 10:20 PM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,20/Sep/18 5:30 AM,v1.3.0,,,,,,,,v1.3.0,,,fabric-samples,,,,,0,ci-failure,,,,,,"timeout expired while executing query transaction on peer1.org2. See the below log

fabric# *7893ab3*
{code:java}
00:13:35.542 ===================== Querying on peer1.org2 on channel 'mychannel'... ===================== 
00:13:38.546 Attempting to Query peer1.org2 ...3 secs
00:13:38.547 + peer chaincode query -C mychannel -n mycc -c '{""Args"":[""query"",""a""]}'
00:25:28.629 + res=1
00:25:28.629 + set +x
00:25:28.630 
00:25:28.631 Error: endorsement failure during query. response: status:500 message:""failed to execute transaction 6dfcb23d89c5a5e13eb90071f749bda800a60f7e96fe032e387792f0a02cfb4d: timeout expired while starting chaincode mycc:1.0 for transaction 6dfcb23d89c5a5e13eb90071f749bda800a60f7e96fe032e387792f0a02cfb4d"" 
00:25:28.631 !!!!!!!!!!!!!!! Query result on peer1.org2 is INVALID !!!!!!!!!!!!!!!!
00:25:28.631 ================== ERROR !!! FAILED to execute End-2-End Scenario ==================
00:25:28.631 
00:25:28.631 ERROR !!!! Test failed
00:25:29.221 {code}
I see this case is failing inconsistently.. Shall we increase the timeout ?

 

BuildLog: https://jenkins.hyperledger.org/view/Daily/job/fabric-nightly-release-job-master-s390x/18/consoleFull",,denyeart,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,No,,,"1|hzzikf:",,No,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jul/18 10:43 PM;scottz;Has this been fixed by latitiia's other submissions, [~latitiah] / [~rameshthoomu] ?;;;","11/Sep/18 1:10 PM;denyeart;[~latitiah] [~rameshthoomu] Is this still a problem?;;;","20/Sep/18 5:30 AM;denyeart;If you see the issue again, please re-open.;;;",,,,,,,,,,,,,,,,,,,,,,,,
"Token (base support) - Support Issue, Transfer, and Redeem Token Operations",FAB-11144,31859,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,elli-androulaki,elli-androulaki,14/Jul/18 12:39 AM,14/Jan/20 12:12 AM,28/Oct/23 3:03 AM,14/Jan/20 12:12 AM,,,,,,,,,Future,,,fabric-crypto,fabric-peer,,,,2,fabtoken,,,,,,"This is one epic from the many to follow to allow for token management enablement of Fabric. [Current proposal|https://docs.google.com/document/d/1fzxoQYARFPTTIM-eIw8zs6tYkg6t6uRVI6fmnCQJz9I/edit?usp=sharing] for the higher level design.

 

At the completion of this epic work:
 * a new Token transaction type is defined to accommodate issue and transfer of tokens
 * a Token transaction passes the ordering service checks and arrives at the committing peer 
 * a committing peer validates the received FabToken transaction using custom (FabToken-specific) validation logic 
 * a committing peer commits the received FabToken transaction using custom (FabToken-specific) transaction processor 
 * a well formed FabToken transaction that respects FabToken rules is marked *valid* and issues *writes*  to the ledger
 * a malformed FabToken transaction or a FabToken transaction that does not respect FabToken rules is marked *invalid* and has *no impact* to the ledger

 

Adding [~sykesm], [~angelo.decaro], [~mathiasb303], [~jyellick], [~denyeart].",,alacambra,antitoine,binhn,C0rWin,cagdast,daijianw,denyeart,elli-androulaki,guoger,huxd,idiota101,liuruifei,MichaelWang,minollo,qsmen,seokm0,Shubham-koli,SjirNijssen,wutongtree,yingmsky,ymlbright,yoheiueda,zhaochy,Zhixiang Nie,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11285,,,,,,,,,,,,,,,,,"28/Jul/18 12:19 AM;elli-androulaki;fabtoken-design-overview-jira.pdf;https://jira.hyperledger.org/secure/attachment/15404/fabtoken-design-overview-jira.pdf",,,,,,,,,,,,,Dev done. Testing end-to-end done. Docs in review.,,Available,Unset,Required,ghx-label-8,,"Token (base support) - Support Issue, Transfer, and Redeem Token Operations",To Do,No,,Required,No,,,"1|hzzikn:",,Yes,,Yes,Required,,,,,Unset,,,,,,,,,,,alacambra,antitoine,binhn,C0rWin,cagdast,daijianw,denyeart,elli-androulaki,guoger,huxd,idiota101,liuruifei,MichaelWang,minollo,qsmen,seokm0,Shubham-koli,SjirNijssen,wutongtree,yingmsky,ymlbright,yoheiueda,zhaochy,Zhixiang Nie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Feb/19 8:14 AM;denyeart;[~angelo.decaro] [~wenjian] I switched back to In Progress until all test is done including system test.

I've updated Current Status to ""Dev done. Testing end-to-end"".  Feel free to edit.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
(CLOSED) As a Fabric core developer I would like to provide a Token Management System (TMS) Component that does not offer any privacy,FAB-11145,31862,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,elli-androulaki,elli-androulaki,14/Jul/18 1:13 AM,09/Jan/19 12:22 AM,28/Oct/23 3:03 AM,22/Aug/18 4:29 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,," This is one epic from many to follow to allow for token management enablement of Fabric. Current proposal for the higher level design is TBA soon.

 

A Token Management System is an abstraction that aims to generalise the set of operations associated to the issuing, transfer and listing of tokens at a relatively lower level. It is essentially a library that can be used by FabToken entities (client, prover peer) to construct the FabToken issue and transfer transactions, to list the tokens owned by a specific user, etc, and to validate/commit FabToken transactions (committing peer side).

 

At the completion of this epic work a Token Management System (TMS) component is defined and implemented as follows: 
 * the Token Management System accommodates requests to construct _transfer requests_
 * the TMS accommodates requests to verify _issue_ and _transfer_ requests __ assuming a mockup of ledger (KVS) as follows:
 ** *malformed* _issue_ or _transfer_ _requests_ or_requests_ that do *not* conform with the TMS rules (e.g., correctness of the tokens created, double-
 ** the TMS accommodates requests to construct _issue requests_
 ** the TMS accommodates requests to verify _issue requests_ assuming a mockup of ledger (KVS) as follows:
 *** *malformed* _issue requests_ or _issue requests_ that do *not* conform with the TMS rules (e.g., correctness of the tokens created) are *rejected* and have *no* impact to the mockup ledger
 *** *wellformed* _issue requests_ or _issue requests_ that conform with the TMS rules (e.g., correctness of the tokens created) are *accepted* and modify the state of mockup ledger 
 ** spending attacjs) are *rejected* and have *no* impact to the mockup ledger
 ** *wellformed* _issue or_ _transfer_ _requests_ or _requests_ that conform with the TMS rules (e.g., correctness of the tokens created w.r.t. the ones consumed/imported) are *accepted* and modify the state of mockup ledger 
 * the TMS accommodates requests to _list tokens_ assuming a mockup ledger 

 

Potential break down of the work involved in this epic into pieces:
 # Design 
 # As a Fabric core developer I would like to provide a Token Management System (TMS) with the logic to accommodate issue token related requests
 ## As a TMS developer I would like to design an interface for a _TMS issuer_ that would generate token issue requests and of a _TMS Verifier_ interface that would verify token issue requests upon demand
 ## As a TMS developer I would like to implement the part of _TMS Issuer_ interface that refers to the generation of TMS issue requests
 ## As a TMS developer I would like to implement the _TMS Verifier_ interface that refers to the verification of TMS issue requests 
 # As a Fabric core developer I would like to enhance the TMS with token transfer abilities
 ## As a TMS developer I would like to design the interface of a _TMS transactor_ that would generate TMS token transfer requests and extend the _TMS Verifier_ interface to allow for verification of TMS token transfer requests
 ## As a TMS developer I would like to implement the part of the _TMS Transactor_ interface that refers to the generation of TMS transfer requests
 ## As a TMS developer I would like to implement the part of the _TMS Verifier_ interface that refers to the verification of TMS transfer requests
 # As a Fabric core developer I would like to enhance the _TMS Transactor_ functionalities with token listing abilities
 ## As a TMS developer I would like to extend the _TMS Transactor_ interface with the capability to accommodate list token requests
 ## As a TMS developer I would like to Implement the _TMSTransactor_ interfaces for processing TMS list token requests
 # As a Fabric core developer I would like to enhance the TMS with the ability to configure itself
 ## As an infrastructure developer I would like to be able to build a _TMS factory_ to allow for the setup of a configurable TMS and respective Transactors, Issuers and Verifiers
 # Documentation
 # System Test

 

Adding [~sykesm], [~angelo.decaro], [~mathiasb303], [~jyellick], [~denyeart].

 ",,elli-androulaki,grapebaba,MichaelWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11295,FAB-11293,,,,,,,,,,,,,"28/Jul/18 12:19 AM;elli-androulaki;fabtoken-design-overview-jira.pdf;https://jira.hyperledger.org/secure/attachment/15403/fabtoken-design-overview-jira.pdf",,,,,,,,,,,,,,,Unset,Unset,Unset,ghx-label-1,,Offer a Token Management System (TMS) with no privacy support,To Do,No,,Unset,No,,,"1|hzzikv:",,No,,Unset,Unset,,,,,Unset,,,,,,,,,,,elli-androulaki,grapebaba,MichaelWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move Key Concepts Above Getting Started in TOC,FAB-11146,31863,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,pandrejko,pandrejko,14/Jul/18 1:22 AM,28/Jul/18 9:00 PM,28/Oct/23 3:03 AM,28/Jul/18 8:59 PM,,,,,,,,,v1.3.0,,,fabric-docs,,,,,0,Documentation,,,,,,"In our documentation workgroup call today, it was recommended that we move the Key Concepts item in the TOC above Getting Started.  So the order of the 'chapters' would be
Introduction

Key Concepts

Getting Started

[~SjirNijssen]",,pandrejko,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,No,,,"1|hzwtin:",,No,,Unset,,,,,,Unset,,,,,,,,,,,pandrejko,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Jul/18 1:45 AM;SjirNijssen;Thanks Pam.
Let me add a bit about the WHY.

Chapter 1 (Introduction) in the docs (1.2) is for decision makers and Fabric architects.
Chapter 2 (Getting started) is CURRENTLY primarily for code writers.
Chapter 3 (Key concepts) is for Fabric architects, admins, client app dev, smart contract developers
Chapter 4 (Tutorial) is for Smart contract developers.

The current chapter 2 could much better be subchapter 4.1. and all chapters move up one position. This would be a more logical sequence of a textbook.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE extends burst mode to n modes,FAB-11147,31865,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,14/Jul/18 1:59 AM,25/Jul/18 2:11 AM,28/Oct/23 3:03 AM,25/Jul/18 2:11 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"PTE extends burst mode transaction from 2 modes to n mode, i.e., up to user specified. Below is an example of 4 modes (in ms):

""burstOpt"": \{
      ""burstFreq"": [""500"", ""200"", ""300"", ""100""],
      ""burstDur"": [""3000"", ""2000"", ""3000"", ""1000""]
 },",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2247,,,No,,,No,,,"1|hzzil3:",,No,,Unset,,,,,,Unset,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,true,"19/Jul/18 11:36 PM;dongming;https://gerrit.hyperledger.org/r/#/c/24575/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
NL generates PTE cfg json,FAB-11148,31866,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,14/Jul/18 2:02 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,19/Jul/18 3:57 AM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,NL adds a script to generate PTE service credential json files.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6742,,,No,,,No,,,"1|hzzilb:",,No,,Unset,,,,,,Unset,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"14/Jul/18 2:38 AM;dongming;https://gerrit.hyperledger.org/r/#/c/24407/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Token (base support) - Prover Peer: Assemble, List, History",FAB-11149,31867,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,wenjian,elli-androulaki,elli-androulaki,14/Jul/18 2:24 AM,14/Jan/20 12:12 AM,28/Oct/23 3:03 AM,14/Jan/20 12:12 AM,,,,,,,,,Future,,,fabric-crypto,fabric-peer,,,,0,fabtoken,,,,,,"This is one epic from the many to follow to allow for token management enablement of Fabric. [Current proposal|https://docs.google.com/document/d/1fzxoQYARFPTTIM-eIw8zs6tYkg6t6uRVI6fmnCQJz9I/edit?usp=sharing] for the higher level design.

 

We define as *prover peer* a peer that is in the trust domain of a client, and helps the client  construct a FabToken transaction according to the client's wishes. More specifically, the prover peer leverages its inherent access to a channel's (and respective FabToken system's) state to construct _token issue, token transfer_ requests on behalf of the client. The client will subsequently integrate these requests into a _FabToken transaction_ as described in FAB-11144. Additionally, the prover peer can answer queries of the client for the list of tokens that are owned by the client, and lookups on other system parameters. 

To offer such functionality, the prover peer exposes a GRPC service.

The *motivation* behind the existence of a *prover peer* is essentially convenience, as the construction of such requests require lookups on the ledger, and in some cases intensive computations that would be done by the client. The benefit of the outsourcing of such computations is clearer in the privacy preserving version of FabToken where the construction of both _issue and transfer requests_ entails heavy zero-knowledge proof computations that would otherwise need to be made available to each client code-base (sdk-s).

 

Adding  [~sykesm], [~angelo.decaro], [~mathiasb303], [~KaoutarEL],  [~jyellick], [~denyeart].",,alacambra,daijianw,denyeart,elli-androulaki,harrisob@us.ibm.com,huxd,MichaelWang,wenjian,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/18 12:19 AM;elli-androulaki;fabtoken-design-overview-jira.pdf;https://jira.hyperledger.org/secure/attachment/15402/fabtoken-design-overview-jira.pdf",,,,,,,,,,,,,Dev done. Testing end-to-end done.,,Available,Unset,Required,ghx-label-3,,Token (base support) - Prover Peer GRPC Service,To Do,No,,Required,No,,,"1|hzzilj:",,,,Yes,Required,,,,,Unset,,,,,,,,,,,alacambra,daijianw,denyeart,elli-androulaki,harrisob@us.ibm.com,huxd,MichaelWang,wenjian,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/19 10:59 PM;wenjian;Closed by mistake. Change it back to in progress.;;;","09/Jan/19 5:51 AM;harrisob@us.ibm.com;Could we get an understanding of the user experience to help in the SDK changes, actually what I really want to know is what is the application code going to look like. I see many boxes and arrows in the charts and  few related to the fabric-client SDK.  Will applications be using a new SDK to help with the other flows ?;;;","10/Jan/19 1:07 AM;wenjian;[~harrisob@us.ibm.com] 

We have implemented a client package in go that can be used as a reference implementation for SDK. You may refer to token-client-design.docx in FAB-11153.  Download [https://gerrit.hyperledger.org/r/#/c/27608 |https://gerrit.hyperledger.org/r/#/c/27608/4/integration/token/token_test.go]and take a look at fabric/token/client package.

This client package has been used to run integration e2e tests for token transactions. You can look at CR  [https://gerrit.hyperledger.org/r/#/c/27608/4/integration/token/token_test.go] to understand the e2e flow.

We need to enhance the existing SDK to support token transactions. In token client package, we used a single API to send request to prover peer and orderer, but SDK can use 2 separate APIs if it fits better to SDK flow.
 # SDK provides APIs (e.g., IssueTokens, ListTokens, TransferTokensetc.) that will communicate to prover peer and get back a TokenTransaction. If it makes more sense, SDK may provide a generic token API (e.g., sendTokenCommand with command name and parameters) to wrap individual commands.
 # SDK sends token transaction to the orderer and allows applications to listen to the transaction event

 

 ;;;","20/Feb/19 8:13 AM;denyeart;[~angelo.decaro] [~wenjian] I switched back to In Progress until all test is done including system test.

I've updated Current Status to ""Dev done. Testing end-to-end"".  Feel free to edit.;;;",,,,,,,,,,,,,,,,,,,,,,,
TEST - Integration Test 1,FAB-11150,31870,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,suzetreacy,suzetreacy,14/Jul/18 2:52 AM,01/May/19 3:42 AM,28/Oct/23 3:03 AM,01/May/19 3:42 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,suzetreacy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzzilz:",,No,,Unset,Not Required,,,,,Unset,,,,,,,,,,,suzetreacy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test - Integration Test 2,FAB-11151,31871,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,suzetreacy,suzetreacy,14/Jul/18 2:52 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,,,,,,0,stale-item,,,,,,,,denyeart,suzetreacy,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzzim7:",,No,,Unset,Not Required,,,,,Unset,,,,,,,,,,,denyeart,suzetreacy,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jul/18 6:24 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/24439/;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
TEST - Integration Test 3,FAB-11152,31872,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,suzetreacy,suzetreacy,14/Jul/18 2:52 AM,01/May/19 3:42 AM,28/Oct/23 3:03 AM,01/May/19 3:42 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,suzetreacy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzzimf:",,No,,Unset,Not Required,,,,,Unset,,,,,,,,,,,suzetreacy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Token - Client Wallet Library (including SDKs),FAB-11153,31885,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,elli-androulaki,elli-androulaki,14/Jul/18 4:32 AM,14/Jan/20 12:12 AM,28/Oct/23 3:03 AM,14/Jan/20 12:12 AM,,,,,,,,,Future,,,fabric-crypto,fabric-sdk-go,,,,3,fabtoken,,,,,,"This is one epic from many to follow to allow for token management enablement of Fabric. [Current proposal|https://docs.google.com/document/d/1fzxoQYARFPTTIM-eIw8zs6tYkg6t6uRVI6fmnCQJz9I/edit?usp=sharing] for the higher level design.

This epic aims at offering a *client-side library for FabToken operations*. The FabToken client wallet library would expose a user-friendly interface to a FabToken application developer that would allow the latter to request a submission on its behalf of a transaction for _issuing or transferring tokens_, or a query for _listing tokens_ etc. To do so, the FabToken client wallet library would leverage calls to the prover peer grpc service as explained in FAB-11149 to construct the low level requests, and a component with a functionality equivalent to the one of client sdk that would integrate the response of the grpc service into a FabToken transaction and submit it to the ordering service.

 

Adding [~sykesm], [~angelo.decaro], [~mathiasb303], [~KaoutarEL] [~jyellick], [~denyeart].",,alacambra,antitoine,cmhy,daijianw,elli-androulaki,Garrett,harrisob@us.ibm.com,huxd,jmason900,MichaelWang,nextisd,Vishal3152,wutongtree,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/18 12:18 AM;elli-androulaki;fabtoken-design-overview-jira.pdf;https://jira.hyperledger.org/secure/attachment/15401/fabtoken-design-overview-jira.pdf","16/Jan/19 4:00 AM;wenjian;token-client-design-01152019.docx;https://jira.hyperledger.org/secure/attachment/16558/token-client-design-01152019.docx",,,,,,,,,,,,Node.js SDK and CLI support available.,,Available,Unset,Required,ghx-label-2,,Token - Client Wallet Library (including SDKs),To Do,No,,Required,No,,,"1|hzzimn:",,No,,Yes,Required,,,,,Unset,,,,,,,,,,,alacambra,antitoine,cmhy,daijianw,elli-androulaki,Garrett,harrisob@us.ibm.com,huxd,jmason900,MichaelWang,nextisd,Vishal3152,wutongtree,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Run Channel Client benchmark in parallel,FAB-11154,31886,30897,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Baha-sk,Baha-sk,Baha-sk,14/Jul/18 5:27 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 5:25 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,Baha-sk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzzimv:",,No,,Unset,Not Required,,,,,Unset,,,,,,,,,,,Baha-sk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provisioning Read-Only User for Couch Database,FAB-11155,31889,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,rhegde,rhegde,14/Jul/18 6:03 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,,,,,,0,stale-item,,,,,,"***Requirement*
 Those opting couch database as world state ledger can use the same for running rich queries for production support. This could include Operations or Support user. This avoid user to go through chaincode log which most of the time would be in ERROR mode in Production or Pre-Production.

Server Admin credential cannot be shared for such purpose and should be used exclusively by the respective fabric-peer. This is already implemented as part of -FAB-10048-.

This JIRA is filed to further extended the current functionality to provision Read Only User.

 

This can be achieved by allowing Server Admin creates a couch database user (_users database) and add following JSON
{code:java}
{
 ""name"": ""readonlyuser_username"",
 ""password"": ""readonlyuser_password"",
 ""roles"": [""channel1_member""],
 ""type"": ""user""
}{code}
 

2.  Same read only user name can be added to \{db}/_security object to the member list

for example - consider the database (channel name) = channel1
{code:java}
'{""admins"": { ""names"": [], ""roles"": [] }, ""members"": { ""names"": [], ""roles"": [""channel1_member""] } }'{code}
  OR

(haven't tried the below option)
{code:java}
'{""admins"": { ""names"": [], ""roles"": [] }, ""members"": { ""names"": [""readonlyuser_username""], ""roles"": [] } }'{code}
   

3. Adding a validate function that allows write only to _admin
{code:java}
""validate_doc_update"": ""function(newDoc, oldDoc, userCtx, secObj) { if (userCtx.roles.indexOf('_admin') == -1) { throw({forbidden: 'Document can be updated only by server admin user.'});}}"" }'{code}
 

FAB-1308 has a similar Point 3 requirement - this can be further restricted to use userCtx.names as validation logic.",,ashutosh_kumar,rhegde,sanchezl,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1308,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzzin3:",,No,,Unset,Not Required,,,,,Unset,,,,,,,,,,,ashutosh_kumar,rhegde,sanchezl,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/18 11:53 PM;ashutosh_kumar;How this JIRA relates to Fabric if once FAB-1308 is implemented ?;;;","27/Jul/18 10:59 PM;sanchezl;I would suggest that this issue is changed to ask that fabric simply leave the members section intact and only update the admins section when updating the security object. A user would then be free to update the members section of the security object without fabric clobbering it. ;;;","28/Jul/18 5:22 AM;rhegde;[~ashutosh_kumar] FAB-1308 will add validation function which should prevent any write operation by any other user than server admin user used by peer. This is how we will provision read only user.

[~sanchezl] since v1.2 add database _security object, I agree the peer should not revert any changes done through external provisioning. Can you confirm.;;;","03/Aug/18 11:39 PM;sanchezl;[~rhegde] the peer currently WILL overwrite the {{_security}} object. As mentioned in my previous comment, I think the best you can ask for is that future versions do not clobber the {{members}} property of the {{_security}} object, the peer will need to maintain control over the {{admins}} property. 

 ;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
How to debug chaincode in Goland IDE,FAB-11157,31891,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jychao0510,jychao0510,14/Jul/18 7:44 PM,01/May/19 3:35 AM,28/Oct/23 3:03 AM,01/May/19 3:35 AM,,,,,,,,,,,,,,,,,0,,,,,,,"I use vagrant Shared directory on Windows ,and set up a virtual machine, launched the fabric network in the virtual machine, and then I want to debugging chaincode in Windows Goland IDE, i don't know what should i do?",,jychao0510,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzzinj:",,,,Unset,Not Required,,,,,Unset,,,,,,,,,,,jychao0510,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/May/19 3:35 AM;mastersingh24;Vagrant is gone;;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
LTE tests not working,FAB-11158,31893,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,14/Jul/18 11:24 PM,21/Jul/18 3:16 AM,28/Oct/23 3:03 AM,21/Jul/18 3:16 AM,,,,,,,,,,,,fabric-ledger,,,,,0,,,,,,,LTE tests are not working due to changes made in Ledger.,,chris.elder,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11228,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzwu5j:",,,,Unset,Not Required,,,,,Unset,,,,,,,,,,,chris.elder,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"14/Jul/18 11:29 PM;chris.elder;https://gerrit.hyperledger.org/r/#/c/24423/;;;","21/Jul/18 3:16 AM;scottz;LTE tests passed yesterday in the daily test suite, after incorporating the solution for FAB-11158. This can be considered fixed/closed/done/resolved.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"As a Fabric user, I want my barebones etcd/raft-based ordering service to support more than one Raft node",FAB-11161,31897,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,15/Jul/18 8:21 PM,21/Jan/19 12:42 AM,28/Oct/23 3:03 AM,21/Jan/19 12:42 AM,,,,,,,,,v2.0.0,,,fabric-orderer,,,,,0,raft,,,,,,"We need 3 things to make this work:

1. A communication layer that allows the replicas in a cluster to communicate with each other.

The communication layer shall expose a channel-based API (every operation is in the context of a specific channel) to do the following:
 * Establish a secure, authenticated (via [TLS certificate pinning|https://security.stackexchange.com/a/29990]) connection given a node ID, and use the connection to send transactions or raft messages to remote cluster nodes.
 * Receive messages from cluster nodes and identify their corresponding IDs based on the TLS client certificate of the remote cluster node.
 * Reconfigure the cluster membership (mapping of IDs to client/server TLS certificates and endpoints).

The actual gRPC connections are going to be shared among all the gRPC logical channel-based streams/RPCs, and every outgoing connection is going to be dedicated for a specific TLS server certificate and endpoint.

2. Full Type B configuration support. This requires extending FAB-12015 to allow us to expand the consenter set. This also requires adding the logic described [in the design doc|https://docs.google.com/document/d/138Brlx2BiYJm5bzFk_B0csuEUKYdXXr7Za9V7C76dwo/edit#heading=h.sn7gul2qszyp], where a new leader checks to make sure that such a Fabric configuration update is not sitting at the tip of the chain; if it is, the leader needs to make sure that the corresponding Raft config update is committed before any other transaction.

3. Onboarding a new orderer node to an existing cluster ([FAB-12016|https://jira.hyperledger.org/browse/FAB-12016]).

h2. Acceptance Criteria

h3. Scenario 1 (check that the comms layer works as expected)

# User edits {{configtx.yaml}} so as to have a network with a 3-node etcd/raft-based ordering service and a system channel that is also an application channel. Assume {{BatchSize}} is set to 1.
# User launches the multi-node etcd/raft-based ordering service.
# User invokes the Broadcast RPC to send transaction {{foo-1}} to the 1st node in the service. Repeat for {{foo-2}} and the 2nd node, and {{foo-3}} and the 3rd node.
# User invokes the Deliver RPC. They should receive 3 blocks, each containing one of the transactions sent above. The order does not have to be the same.

h3. Scenario 2 (check that Type B config support works as expected)

# User edits {{configtx.yaml}} so as to have a network with a 5-node etcd/raft-based ordering service and a system channel that is also an application channel.
# User launches multi-node etcd/raft-based ordering service.
# User invokes the Broadcast RPC to send a Type B configuration that removes the node-5 from the consenter set.
# User invokes the Deliver RPC targeting one of the remaining 4 nodes. Ensure that the configuration update sent in the step above has been ordered and committed.
# User invokes the Broadcast RPC to order transaction {{foo}} targeting one of the remaining 4 nodes in the cluster.
# User invokes the Deliver RPC targeting one of the remaining 4 nodes. Ensure that a block containing the transaction above is received.
# Repeat step above, targeting node-5. The node should be unable to return the block containing transaction {{foo}}.",,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12653,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,FAB-6135,,,No,,,No,,,"1|i000tj:",,,,Unset,Not Required,,,,,Unset,,,,,,,,,,,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Aug/18 11:33 PM;kchristidis;Clarifying statements/questions:

# The channel-based API is the {{Step}}/{{Submit}} set of RPCs introduced in FAB-11142.
# What does the comm layer use as its input? Presumably it's the struct carrying the cluster membership — the mapping of IDs to client/server TLS certificates and endpoints that you refer to in your 3rd bullet point.
# A message is received by the comm layer and we can resolve its ID in the corresponding cluster successfully. How does the comm layer communicate this ID upstream?
# What does reconfiguration (3rd bullet point) entail, and why is the responsibility of the comm layer?;;;","04/Aug/18 6:02 AM;yacovm;# yes
 # at initialization - nothing. at config (for a channel) - the entire cluster membership in the form of a slice of structs each containing TLS server+client certificates in DER encoding, endpoint, and id. The mapping is computed on the fly.
 # it simply passes it as an argument when it invokes the method which passes the message.
 # I meant reconfiguraiton of the communication layer. It mutates the internal data structures of the comm layer (i.e - mapping of certs to (connections, IDs)),  and ensures that connections that point to stale TLS certificates are closed, and logical gRPC ""connections"" (i.e - streams) are connected to the TLS server certificate denoted in the new config (and if not - makes them reconnect again with the expectation of encountering the new server TLS cert. );;;","07/Aug/18 8:28 AM;kchristidis;(Converted to Story and renamed to be inline with the plan in the spreadsheet. The scope of this work remains untouched. TODO for me: define acceptance criteria.);;;","21/Oct/18 12:04 AM;kchristidis;[~C0rWin]: Added a scenario for Type B. We'll need an additional one where we change leaders right after the Fabric update is ordered, but before the corresponding Raft update is — this will allow us to check that the handoff is taking place correctly. I suspect that this is difficult to test with what we have in place under the top-level {{integration}} package. What do you think? How can we be certain that what we have out there works as prescribed? A test case for [FAB-12518|https://jira.hyperledger.org/browse/FAB-12518]?;;;",,,,,,,,,,,,,,,,,,,,,,,
Implement Raft FSM ,FAB-11162,31898,32551,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guoger,yacovm,yacovm,15/Jul/18 8:30 PM,22/Sep/18 4:31 AM,28/Oct/23 3:03 AM,06/Sep/18 11:31 PM,,,,,,,,,,,,,,,,,0,,,,,,,"Build an object, tentatively called {{FSM}}, that wraps around etcd's {{raft.Node}} (see: [sample|https://github.com/coreos/etcd/tree/master/contrib/raftexample]) and interacts with the {{Chain}} object from FAB-11163 according to the contract shown in [Page 1|https://docs.google.com/presentation/d/1olukZUnriPS3HfWMPkQfKjypa3QV_iTacfI1lH8Mtqg/edit#slide=id.g3dec6414ec_0_0].

At this stage, we should not worry about WALs, snapshots, or crash-fault tolerance.

Expect the {{Chain}} object from FAB-11163 to route transactions to you for appending to the channel's ledger (read: {{Chain.Order}} will eventually wire through to you).

As part of this story, you will definitely be the channel leader, so you should push the transaction back to the {{Chain}} object and have it pipe that transaction to the {{blockcutter}} (that is FAB-11163's responsibility).

Expect the {{Chain}} object to route _blocks_ to you for ordering. These should be proposed to the {{raft.Node}} via {{raft.Propose}} and eventually returned back to the {{Chain}} object via {{raft.Ready}} so that they can be appended to the local ledger. (Again this last part is FAB-11163's responsibility.)

 

 

{{Chain}} should interact with the {{FSM}} via the following APIs:
 * {{OnSubmit(orderer.SubmitRequest)}} submits a {{SubmitRequest}}, which contains an envelope, to the {{FSM}}. {{SubmitRequest}} originates either from other OSNs, or locally, from the {{Broadcast}} API. It:
 ** returns an error *if* there's no leader
 ** sends the {{SubmitRequest}} back to {{Chain}} *if* the current OSN is the leader (this is done via the {{RecvSubmitReq}} API)
 ** forwards {{SubmitRequest}} to the channel leader *if* the current OSN is a Raft follower (this will be addressed in a follow-up JIRA)
 * {{OnStep(orderer.StepRequest)}} relays a {{StepRequest}} received from other replicas to the {{FSM}}
 * {{IsLeader() bool}} indicates if this node is currently raft leader, so that {{Chain}} may make better decisions, e.g. purging blockcutter envelopes
 * {{RecvSubmitReq() <-chan *orderer.SubmitRequest}} returns a channel that {{Chain}} receives SubmitRequests on (these are then meant to be passed to the {{blockcutter}}
 * {{RecvBlock() <-chan *common.Block}} returns a channel that {{Chain}} can receive *consented* blocks on (these are meant to be passed to the local ledger for appending)
 * {{Propose(*common.Block) error}} proposes a block to the {{FSM}} to be ordered/consented
 * {{NewNode()}} constructor that assembles a Node instance with necessary dependencies
  ",,adarshsaraf123,baohua,C0rWin,guoger,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzzinz:",,,,Unset,Not Required,,,,,Unset,,,,,,,,,,,adarshsaraf123,baohua,C0rWin,guoger,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Aug/18 5:48 AM;kchristidis;Jay: If something's missing/wrong please edit accordingly, or let me know and I'll correct it.

For this story (FAB-11474), routing messages from {{raft.Node}} to the communication layer (FAB-11161) is not needed. I do understand this is a last-minute change however, two weeks into development. If you've written code for this, keep it in. Likewise, you have most likely written code that checks whether the current FSM is the leader and invokes the  Submit RPC the via the comm layer (FAB-11161); keep that as well, if that's the case - it will come handy soon.;;;","09/Aug/18 11:32 PM;kchristidis;[~guoger]: Is the CR out there WIP, or should this be changed to ""In Review""?;;;","10/Aug/18 7:47 PM;guoger;CR: [https://gerrit.hyperledger.org/r/c/24919/]

 

[~kchristidis] I just saw your comment. Reverted CR to implement only bare minimum FSM: no communication, no WAL, no Snapshot, only single node support. I'll push follow-up patches separately.;;;","14/Aug/18 1:10 AM;guoger;we also need to notify {{Chain}} about leadership change, to avoid following case:
- config seq is 1
- nodeA is leader. It has 2 txs in blockcutter: 
  {normalMsg, configSeq: 1}
  {normalMsg, configSeq: 1}
- nodeA loses leadership, nodeB becomes leader
- nodeB receives msg {configMsg, configSeq: 1}, it cuts a block and apply
- config seq now moves to 2
- nodeB loses leadership, nodeA becomes leader again
- nodeA cuts two _invalid_ messages into block due to timeout, and we have a problem.

_Specific signal design is not decided yet and will be added here_;;;","15/Aug/18 2:30 AM;kchristidis;Remind me again: what happens when {{Propose}} is invoked?;;;","15/Aug/18 7:35 AM;C0rWin;From design doc:

{quote}
We interact with this FSM in three ways:

Via a handling (infinite) loop, where we make sure to (a) increment its internal logical clock, and (b) read from it data that we need to save to disk and/or replicate to other nodes in the cluster.
Via the provided Propose / ProposeConfChange methods for messages that the application wishes to have ordered (in our case —as noted above— these are blocks)
Via the provided Step method for messages generated by other Raft nodes.
{quote}

it seems we deviate a bit from the design as updated description and update API doesn't contains {{ProposeConfChange}} method, [~guoger] have you drop it on purpose or will you add it later on?

/cc [~kchristidis];;;","15/Aug/18 9:43 PM;kchristidis;[~C0rWin]: Remember that configuration comes later on (Weeks 5-7 (Cell G3) in [the spreadsheet|https://docs.google.com/spreadsheets/d/1R02-xjdl4hNw90kN4NZ1kX0f4QoIYn51_1UHlwy-GQs/edit#gid=2125670104] and FAB-11161). So for now you should stub it out and let it be a panic/error path.;;;","15/Aug/18 9:45 PM;kchristidis;{quote}Remind me again: what happens when Propose is invoked?{quote}

Looking at [Jay's CR|https://gerrit.hyperledger.org/r/c/24919/12/orderer/consensus/etcdraft/fsm/node.go#137]: {{Propose}} can only be successfully invoked by the channel leader and it wires through to {{raft.Propose}}, i.e. to actually ordering the block via the Raft protocol.;;;",,,,,,,,,,,,,,,,,,,
Implement barebones etcd/raft consenter,FAB-11163,31899,32551,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guoger,yacovm,yacovm,15/Jul/18 8:41 PM,10/Oct/18 6:10 AM,28/Oct/23 3:03 AM,10/Oct/18 6:10 AM,,,,,,,,,,,,,,,,,0,,,,,,,"(This goes hand-in-hand with FAB-11162 and (part of) the contract between these two pieces of work is captured in [Page 1|https://docs.google.com/presentation/d/1olukZUnriPS3HfWMPkQfKjypa3QV_iTacfI1lH8Mtqg/edit#slide=id.g3dec6414ec_0_0]. Please feel free to expand that diagram and the text here as you see fit.)

Create a, say, {{Consenter}} object with a logger and the certificates that correspond to this OSN/replica (so that it can determine its own Raft node ID). Assume that the certificates are passed on to you via a {{etcdraftplugin.New()}} constructor from the configuration, [similar to how the Kafka constructor reads the list of Kafka brokers|https://github.com/hyperledger/fabric/blob/668456b1d37e8b3f6ea48c7ac54cca277d0543de/orderer/common/server/main.go#L258].

This {{Consenter}} object should implement the {{consensus.Consenter}} interface, i.e. it should be able to {{HandleChain}} when asked by the multichannel registrar, and output a {{Chain}} object.

The {{Chain}} (tentative name) object should implement the {{consensus.Chain}} interface, and wrap around the Raft FSM (see FAB-11162), interacting with it according to the diagram shown in [Page 1|https://docs.google.com/presentation/d/1olukZUnriPS3HfWMPkQfKjypa3QV_iTacfI1lH8Mtqg/edit#slide=id.g3dec6414ec_0_0].

It should be able to pass envelopes coming from the {{FSM}} (FAB-11162) to the {{blockcutter}}, and pass any blocks from the {{blockcutter}} back to the {{FSM}} (so that they can be Proposed to {{raft.Node}} - this last bit is FAB-11162's responsibility).

The {{Chain}} object should also be able to work with blocks coming off of the {{FSM}}, and append them to the local ledger so that they can be returned to {{Deliver}} RPC clients.",,C0rWin,guoger,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzzmtz:",,,,Unset,Not Required,,,,,Unset,,,,,,,,,,,C0rWin,guoger,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Aug/18 12:36 AM;kchristidis;I keep coming back to this, and I don't quite get what is it precisely that we intend to deliver here. Let's work together to identify what we're trying to do with this task (acceptance crtiteria, etc.), and we can revise the Description accordingly.;;;","04/Aug/18 5:58 AM;kchristidis;Artem: If you see something that needs correction or clarification, let me know.;;;","04/Aug/18 6:33 PM;C0rWin;[~kchristidis]:

{quote}
Create a, say, Consenter object with a logger and the certificates that correspond to this OSN/replica (so that it can determine its own Raft node ID). Assume that the certificates are passed on to you via a etcdraftplugin.New() constructor from the configuration, similar to how the Kafka constructor reads the list of Kafka brokers.
{quote}

not sure I'm 100% following you on this ^^^, can you expand a bit?;;;","04/Aug/18 10:27 PM;kchristidis;Sure. Perhaps it's best to be a bit less prescriptive.

At the end of the day, the {{Chain}} — and more specifically the {{raft.Node}} encapsulated by the {{Chain}}) — needs to know the Raft ID it is assigned with.

How do we achieve this? [The design document|https://docs.google.com/document/d/138Brlx2BiYJm5bzFk_B0csuEUKYdXXr7Za9V7C76dwo/edit#heading=h.51n1zdupze13] covers this (Section C.II.2 ""How do we assign Raft node IDs to consenter nodes"", skip to the ""When bootstrapping"" part, pg. 15).

It basically comes down to:
# Retrieving the channel configuration
# Iterating over the {{Consenters}} slice contained there in
# Comparing our own TLS client/server cert bytes, with the ones contained in the {{Consenters}} slice

The index in {{Consenters}} that corresponds to us (+1 because Raft IDs are non-zero) is our Raft ID.

So I would argue that your {{etcdraft.New}} constructor _needs_ access to the configuration. (As an example, [see this Gist|https://gist.github.com/kchristidis/47cf9b996e6ae2c67f1b84e6fbad9cf3], which should be augmented for both client and server certs.)

But perhaps there is a better way to achieve this? Let me know what you think.;;;","13/Sep/18 6:18 PM;guoger;https://gerrit.hyperledger.org/r/c/25964;;;",,,,,,,,,,,,,,,,,,,,,,
bootstrap.sh to download V 1.1.0,FAB-11164,31901,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid: Works as Expected,,LabibFarag,LabibFarag,16/Jul/18 6:43 AM,01/Dec/18 8:26 PM,28/Oct/23 3:03 AM,01/Dec/18 8:26 PM,,,,,,,,,,,,fabric-samples,,,,,0,build-system,common-components,v1.0,,,,"After cloning fabric samples from 

[https://github.com/hyperledger/fabric-samples]

or [https://gerrit.hyperledger.org/r/#/admin/projects/fabric-samples]

then navgating to folder script to  download binaries and docker images for version 1.1.0 

by running command  ( ./bootstrap.sh 1.1.0 1.1.0 0.4.7 )

but it start downloading 1.2.0 versions 

!versions.jpg!

 ",Ubuntu 16.04 ,LabibFarag,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jul/18 6:40 AM;LabibFarag;versions.jpg;https://jira.hyperledger.org/secure/attachment/15319/versions.jpg",,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzziof:",,,,Unset,Not Required,,,,,Unset,,,,,,,,,,,LabibFarag,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Aug/18 9:02 PM;mastersingh24;[~LabibFarag]  I just tried this and it seemed to work fine for me

 
{code:java}
git clone https://github.com/hyperledger/fabric-samples
cd fabric-samples/scripts
./bootstrap.sh 1.1.0 1.1.0 0.4.7
{code}
 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric transaction failed every 12hours after long time without a transaction,FAB-11166,31903,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,cs-wang,cs-wang,16/Jul/18 12:20 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:05 PM,v1.0.0,,,,,,,,,,,fabric-peer,,,,,0,,,,,,,"Fabric 1.0.0 transaction keeps failed every 12hours, when very few transaction created during this duration, we get Fabric peer log in core/deliverservice/client.go:line111 like this:

\{

[blocksProvider] DeliverBlocks WARN [channel1] Receive error: Attempts (1) or elapsed time (10m24.45684764s) exhausted""

}",,cs-wang,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzziov:",,,,Unset,Not Required,,,,,Unset,,,,,,,,,,,cs-wang,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jul/18 7:25 PM;yacovm;This is a known bug... see FAB-8075.
should be fixed in 1.0.6
There are also a few more bugs in that area, that are all fixed in *v1.1.x*  (latest v1.1).

If you use v1.0.x, you should really upgrade to at least v1.1 and better yet v1.2;;;","16/Jul/18 11:23 PM;cs-wang;[~yacovm]， thanks for your  help;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Add a transaction count,FAB-11167,31904,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,Tecnalia,Tecnalia,16/Jul/18 4:37 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,fabric-ledger,,,,,0,explorer,fabric,ledger,stale-item,transaction,tx,"Although there's a _Block Number_ attribute inside the _Block Header_ (explained at [Read-the-docs|https://hyperledger-fabric.readthedocs.io/en/release-1.2/ledger/ledger.html#blocks]), there are [no attributes|https://hyperledger-fabric.readthedocs.io/en/release-1.2/ledger/ledger.html#transactions] stated to know the depth of a transaction.

Some transaction attributes can be explored, e.g. name and version for its chaincode. But they have no link with other block transactions in a single channel, forcing developers to search workarounds, making the implementation heavier and adding an overhead.

As an example, Hyperledger Explorer inspects each block to store the _count_ value on a local database.

In order to provide new features, the ability to supply the ""channel transaction count"" value directly from the ledger is a nice improvement.",,sykesm,Tecnalia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzzip3:",,,,Unset,Not Required,,,,,Unset,,,,,,,,,,,sykesm,Tecnalia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Broken doc links to CI process page,FAB-11168,31905,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,denyeart,denyeart,16/Jul/18 5:00 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 9:56 AM,,,,,,,,,v1.3.0,,,fabric-ci,,,,,0,,,,,,,"The main CI readme at [https://github.com/hyperledger/ci-management/blob/master/README.md] has a  broken link to:

[https://github.com/hyperledger/ci-management/blob/master/docs/fabric_ci_process.md]

The new link should be:

[https://github.com/hyperledger/ci-management/blob/master/docs/source/fabric_ci_process.rst]

 ",,denyeart,jtclark,rameshthoomu,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10323,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzwtmf:",,,,Unset,Not Required,,,,,Unset,,,,,,,,,,,denyeart,jtclark,rameshthoomu,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jul/18 11:58 PM;yuki-kon;I reported the same broken doc links as FAB-11042 (https://jira.hyperledger.org/browse/FAB-11042). The CR is also posted here. https://gerrit.hyperledger.org/r/#/c/24027/
The CR was merged to Fabric’s release1.2 branch (https://gerrit.hyperledger.org/r/#/c/24059/). However, the CR has not been merged to master branch yet. I will post a comment to ask merging them to master branch.
My CR was written for fabric repository. Please submit a CR for ci-management repository.
;;;","17/Jul/18 7:23 PM;denyeart;[~yuki-kon] Thanks - I've now merged your fix to master.

I've clarified in the Description that this JIRA item should be used to fix the link in the CI README.

[~jtclark] Can you provide the fix to CI README?;;;","17/Jul/18 11:09 PM;yuki-kon;[~denyeart] Thank you for merging FAB-11042 to master branch.;;;","18/Jul/18 8:48 AM;jtclark;Patch is *IN-REVIEW*: https://gerrit.hyperledger.org/r/24509;;;","18/Jul/18 6:26 PM;jtclark;Patch has been *MERGED*: https://gerrit.hyperledger.org/r/24509;;;",,,,,,,,,,,,,,,,,,,,,,
Token (base support) - Life Cycle,FAB-11169,31908,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,elli-androulaki,elli-androulaki,16/Jul/18 5:43 PM,14/Jan/20 12:12 AM,28/Oct/23 3:03 AM,14/Jan/20 12:12 AM,,,,,,,,,Future,,,fabric-common,fabric-crypto,fabric-peer,,,2,fabtoken,,,,,,"This is one epic from many to follow to allow for token management enablement of Fabric. [Current proposal|https://docs.google.com/document/d/1fzxoQYARFPTTIM-eIw8zs6tYkg6t6uRVI6fmnCQJz9I/edit?usp=sharing] for the higher level design.

 

*What:* This epic aims at allowing the activation and definition of a channel's FabToken system via transactions submitted to the blockchain, and the subsequent setup of all the involved FabToken entities (i.e., prover/commiting peer, client). 

In particular, this epic requires that FabToken system's stakeholders announce the agreed-upon FabToken configuration to the chain, and feed in this way the committing peers of the system that are to process this channel's (FabToken) transactions (see, FAB-11144 for more details on the committing peer processing). 

To help out client-setup, prover peers are required to use the chain-advertised FabToken parameters into their responses to the GRPC service. 

 

*Why:* Announcing the FabToken configuration details allows every committing peer in the channel to have a consistent view of the terms under which a FabToken transaction is to be validated against. It also allows for upgrades of the system to be openly and consistently verifiable by all the members of the system. This way of configuring FabToken is consistent to way chaincodes are deployed and configured within the system, and as such there is  well-thought code that can be reused (chaincode lifecycle). Also, allowing the prover peer to return to the client the configuration parameters of FabToken allows for a short and easy to configure FabToken client.

 

*How:* A potential break-down of this epic into work-items is as follows:
 # Design - in progress
 # As a Fabric core developer I would like to setup a prover peer (this is offered to large extend by FAB-11149, item 7)
 # As  a Fabric core developer I would like to leverage chaincode lifecycle to activate FabToken and configure it
 # As  a Fabric core developer  I would like to setup the client wallet library with the FabToken (this is offered to large extend by FAB-11153, item 6)
 # Documentation
 # Update the e2e test of FAB-11153 to account for configurability aspects of the system

 

Adding  [~sykesm], [~angelo.decaro], [~mathiasb303], @KaoutaEl,  [~jyellick], [~denyeart].",,binhn,daijianw,elli-androulaki,Garrett,grapebaba,huxd,MichaelWang,praveen.j,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11237,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In progress,,Available,Unset,Required,ghx-label-4,,Token - Configurable Token System (lifecycle),To Do,No,,Required,No,,,"1|hzzipz:",,,,Yes,Required,,,,,Unset,,,,,,,,,,,binhn,daijianw,elli-androulaki,Garrett,grapebaba,huxd,MichaelWang,praveen.j,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor discovery client cache ,FAB-11170,31909,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,inbarbadian,yacovm,yacovm,16/Jul/18 7:14 PM,03/Oct/18 9:55 PM,28/Oct/23 3:03 AM,23/Jul/18 10:38 PM,,,,,,,,,,,,fabric-gossip,,,,,0,hygiene,,,,,,"* Change [maxMemorySize|https://github.com/hyperledger/fabric/blob/master/discovery/client/signer.go#L19] field to maxEntrySize
* Make the parameter be an unsigned integer
* Change the parameter in CLI [initialization|https://github.com/hyperledger/fabric/blob/master/discovery/cmd/stub.go#L64] from 10 to 0
* Make the code that [purges|https://github.com/hyperledger/fabric/blob/master/discovery/client/signer.go#L75-L82] the cache skip putting into the cache if the max size is 0",,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzziq7:",,,,Unset,Not Required,,,,,Unset,,,,,,,,,,,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a token infrastructure (peer) developer I would like to implement the Token Management System Issuer interfaces and be able to verify its outputs,FAB-11171,31911,32184,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mathiasb303,elli-androulaki,elli-androulaki,16/Jul/18 8:39 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,08/Sep/18 3:16 AM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,"*Description*:

Offer a TMS system with the ability to construct and verify _issue requests_, i.e., 
 # As a TMS developer I would like to implement the part of _TMS Issuer_ interface that refers to the generation of TMS issue requests
 # As a TMS developer I would like to implement the _TMS Verifier_ interface that refers to the verification of TMS issue requests 

 

*Success Criteria*: At the end of this work-item:
 * the TMS accommodates requests to construct _issue requests_
 * the TMS accommodates requests to verify _issue requests_ assuming a mockup of ledger (KVS) as follows:
 ** *malformed* _issue requests_ or _issue requests_ that do *not* conform with the TMS rules (e.g., correctness of the tokens created) are *rejected* and have *no* impact to the mockup ledger
 ** *wellformed* _issue requests_ or _issue requests_ that conform with the TMS rules (e.g., correctness of the tokens created) are *accepted* and modify the state of mockup ledger ",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11541,FAB-11540,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzwqfk:t",,,,Unset,Not Required,To Do,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Aug/18 3:31 PM;elli-androulaki;https://gerrit.hyperledger.org/r/#/c/25671/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
As a Fabric core developer I would like to provide a Transaction proto message that accommodates the token issue needs,FAB-11172,31915,31920,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,elli-androulaki,elli-androulaki,elli-androulaki,16/Jul/18 9:42 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,17/Aug/18 4:38 AM,,,,,,,,,Future,,,fabric-crypto,fabric-peer,,,,0,fatoken,,,,,,"*What:* In this story we aim to define proto message for the new transaction structure aiming to accommodate FabToken needs for token issue,.

*How:* New FabToken transaction proto message is to be created under fabric/token/

Parts of this proto structure should be re-usable by the prover peer GRPC service responses in FAB-11149.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11287,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzwqfk:u",,,,Unset,Not Required,To Do,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Jul/18 12:25 AM;elli-androulaki;https://gerrit.hyperledger.org/r/#/c/24849/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
As a Fabric core  developer I would like to create on the peer a new skeleton Validation plugin for FabToken txs,FAB-11173,31916,31920,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,angelo.decaro,angelo.decaro,16/Jul/18 9:44 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,28/Jul/18 3:03 AM,,,,,,,,,Future,,,fabric-crypto,fabric-peer,,,,0,fabtoken,icebox,,,,,"*What*: This story is related to the creation of a skeleton of a validation plugin for fabtoken transaction as defined by the proto messages in https://jira.hyperledger.org/browse/FAB-11172
*How*: Under *core/handlers/validation/builtin*, a new skeleton implementation of PluginFactory and Plugin will be introduced. The new *FabtokenPluginFactory* will return instances of the new *FabTokenValidation* whose default implementation returns *no error*. ",,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzwqfk:v",,,,Unset,Not Required,To Do,,,,Unset,,,,,,,,,,,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a Fabric core  developer I would like to define a new skeleton Transaction Processor for FabToken txs,FAB-11174,31919,31920,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,angelo.decaro,angelo.decaro,16/Jul/18 10:20 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,11/Aug/18 10:34 PM,,,,,,,,,Future,,,fabric-crypto,fabric-peer,,,,0,fabtoken,icebox,,,,,"*What*: FabToken transactions are to be executed post-ordering. Therefore we need a customised transaction process that will generate the RW set on the fly. 
*How*: Under core/peer, a new skeleton implementation of *customtx.Processor* will be introduced. The new *fabTokenProcessor* will return no error independently of the inputs.",,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzwqfk:w",,,,Unset,Not Required,To Do,,,,Unset,,,,,,,,,,,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Aug/18 2:55 PM;wonderfan;What are the logic steps of this custom processor except this interface and struct skeleton?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (committing peer) developer, I can recognise and process an  ""issue tokens"" transaction without impacting the ledger state",FAB-11175,31920,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,angelo.decaro,angelo.decaro,16/Jul/18 10:39 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,08/Nov/18 6:22 PM,,,,,,,,,Future,,,fabric-crypto,fabric-peer,,,,0,fabtoken,,,,,,"*Acceptance*: A (simulated) client generates an ""issue tokens"" transaction. Upon receiving this transaction, a committing peer redirects its processing to its FabToken specific validation & commit components.  The transaction is to be marked as valid during validation and invalid in the end of commit phase and will have no impact on the ledger state.

In more details, these are the points of entry:
 * *Enabling FabToken Transaction Processor*: Customised transaction processors are setup with a call to *ledgermgmt.Initialize(...)*. This function is invoked in two places: *peer/peer.go* and *node/start.go*. In order to enable fabtoken transaction processing, those two entry points will be modified to include also *fabtoken.TxProcessor*.
 * *Enabling FabToken Validation:* FabToken Validation is to be considered as a _statically compiled handler_, therefore a new method called *FabTokenValidation* will be added to *library.HandleLibray*. * *The new method will return an instance of *fabtoken.ValidationFactory*.",,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11287,FAB-11291,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,FAB-11144,,,No,,,No,,,"1|hzwqfk:x",,,,Unset,Not Required,To Do,,,,Unset,,,,,,,,,,,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Disable SSL CBC Cipher Suites,FAB-11176,31923,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ashutosh_kumar,rhegde,rhegde,16/Jul/18 11:00 PM,27/Jul/18 5:55 AM,28/Oct/23 3:03 AM,19/Jul/18 3:48 AM,v1.0.6,,,,,,,,,,,fabric-crypto,fabric-orderer,fabric-peer,,,0,,,,,,,"The remote service supports the use of SSL Cipher Block Chaining ciphers, which combine previous blocks with subsequent ones. These cipher suites offer additional security over Electronic Codebook (ECB) mode, but have the potential to leak information if used improperly.

Recommendation is to disable CBC mode cipher encryption.",,ashutosh_kumar,rhegde,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Required,Unset,Not Required,,,,,No,,,No,,,"1|hzzirb:",,,,Unset,Not Required,,,,,Unset,,,,,,,,,,,ashutosh_kumar,rhegde,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/18 12:28 AM;yacovm;What version is this? The [latest|https://github.com/hyperledger/fabric/blob/master/core/comm/config.go#L32-L37] one supports only GCM.

Is this v1.0?;;;","17/Jul/18 1:31 AM;ashutosh_kumar;The CBC mode is being introduced by intermediate node that sits in between client and the Fabric component. This statement is based on the testing that I performed couples of week back.

Fabric TLS config does not support CBC mode.

 ;;;","17/Jul/18 2:10 AM;rhegde;This was found by a pen test on Fabric 1.0.6. I have updated the affected version. As I understand [go-crypto/tls 1.7|https://github.com/golang/go/blob/release-branch.go1.7/src/crypto/tls/common.go#L35] was used in fabric-1.0.x and hence the minimum version supported by server is TLS1.0. The following CBC padding attack is limited to SSL3.0 and this would never occur on TLS1.0 even though server advertises it for support.

[~yacovm] can you confirm and mark the JIRA as duplicate;;;","17/Jul/18 2:27 AM;yacovm;/cc [~mastersingh24];;;","17/Jul/18 5:17 AM;ashutosh_kumar;There are CBC cipher in TLS 1.x also. I looked at the fabric code and found that CBC cipher is not supported. [~rhegde] Can you rerun test on Fabric 1.2  and let us know the result ?

The test that I did against Fabric image where I set the client TLS to be SSL v3 and it was rejected by Fabric.

 

 ;;;","19/Jul/18 3:48 AM;ashutosh_kumar;I tested this couple of weeks against Fabric 1.2 image and found that CBC Cipher is not supported. [~rhegde] , you might try it out with 1.2. You have to make sure that you are hitting Fabric TLS end point directly. There should not be any intermediary involved.;;;","27/Jul/18 5:55 AM;ashutosh_kumar;[~rhegde] ,  can you please tell me on which fabric component and which platform this test was run ? I want to make sure I am able to mimic your test result. Thanks.;;;",,,,,,,,,,,,,,,,,,,,
Create CI job to execute OTE tests daily,FAB-11182,31931,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,jtclark,rameshthoomu,rameshthoomu,17/Jul/18 4:17 AM,03/Aug/18 5:54 AM,28/Oct/23 3:03 AM,03/Aug/18 5:54 AM,,,,,,,,,v1.3.0,,,fabric-ci,fabric-quality,,,,0,,,,,,,"The existing SVT job executes LTE, OTE and Behave tests and this job run for 8-9 hrs. We have discussed to split this job to run less number of hours and give flexibility to run these tests individually. Split the SVT job into three separate jobs.

This one is for fabric-ote
 # fabric-ote job runs only the tests from [https://github.com/hyperledger/fabric-test/blob/master/regression/daily/orderer_ote.py], **[https://github.com/hyperledger/fabric-test/blob/master/regression/daily/runDailyTestSuite.sh]",,AdnanChoudhury,dongming,jtclark,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11185,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,No,,,"1|hzzisn:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,AdnanChoudhury,dongming,jtclark,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"24/Jul/18 11:29 PM;jtclark;Patchset to modify the fabric-test repo is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/24683/
Patchset to add the separate OTE and LTE jobs is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/24709/;;;","31/Jul/18 6:09 AM;jtclark;OTE Tests running on the Sandbox: https://jenkins.hyperledger.org/sandbox/job/fabric-test-svt-daily-ote-x86_64/3/console;;;","31/Jul/18 6:12 AM;jtclark;https://gerrit.hyperledger.org/r/#/c/24683/ has been *MERGED*. Waiting for the last patchset before marking this as DONE.;;;","01/Aug/18 4:37 AM;scottz;Please link this task to (""relates to"") the other Jira task (and create one if necessary) that will be used to rename the existing jobs to be consistent with these new ones that you added for LTE and OTE. e.g, You will need to edit the same file, and change the test jobs names to something like:

fabric-test-svt-daily-pte-

fabric-test-svt-daily-functiontests-;;;",,,,,,,,,,,,,,,,,,,,,,,
Update fabric-test submodules versions for 1.2,FAB-11183,31932,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,17/Jul/18 4:27 AM,01/Aug/18 3:24 AM,28/Oct/23 3:03 AM,01/Aug/18 3:24 AM,v1.2.0,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"The submodules need to be updated to use the release 1.2 commits before tagging the fabric-test with v1.2

After tagging be sure to change the master branch's submodules to follow master commits.",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,No,,,"1|hzzisv:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,true,"20/Jul/18 5:55 AM;latitiah;https://gerrit.hyperledger.org/r/24595 - revert fabric-sdk-node to master branch
https://gerrit.hyperledger.org/r/#/c/24497/ - reset the release-1.2 commits and update the Makefile to look in release-1.2 branches

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Create CI job to execute LTE tests daily,FAB-11185,31935,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,jtclark,rameshthoomu,rameshthoomu,17/Jul/18 4:39 AM,04/Sep/18 11:44 PM,28/Oct/23 3:03 AM,04/Sep/18 11:44 PM,,,,,,,,,v1.3.0,,,fabric-ci,fabric-quality,,,,0,,,,,,,"The existing SVT job executes LTE, OTE and Behave tests and this job run for 8-9 hrs. We have discussed to split this job to run less number of hours and give flexibility to run these tests individually. Split the SVT job into three individual jobs and run them daily.

This one is for fabric-lte
 # fabric-lte job runs only the tests from [https://github.com/hyperledger/fabric-test/blob/master/regression/daily/ledger_lte.py] , **[https://github.com/hyperledger/fabric-test/blob/master/regression/daily/runDailyTestSuite.sh]",,AdnanChoudhury,dongming,jtclark,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11182,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,No,,,"1|hzzitb:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,AdnanChoudhury,dongming,jtclark,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/18 11:29 PM;jtclark;Patchset to modify the fabric-test repo is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/24683/
Patchset to add the separate OTE and LTE jobs is *IN-REVIEW*: https://gerrit.hyperledger.org/r/#/c/24709/;;;","31/Jul/18 6:10 AM;jtclark;LTE tests running in the Sandbox: https://jenkins.hyperledger.org/sandbox/job/fabric-test-svt-daily-lte-x86_64/3/console;;;","31/Jul/18 6:13 AM;jtclark;https://gerrit.hyperledger.org/r/#/c/24683/ has been *MERGED*. Waiting for the last patchset before marking this as DONE.;;;","04/Sep/18 11:44 PM;jtclark;All patch sets related to this task have been *MERGED*. Marking task as DONE.;;;",,,,,,,,,,,,,,,,,,,,,,,
Create a weekly PTE job to run 12 hr longrun in hyperledger Jenkins,FAB-11186,31936,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,rameshthoomu,rameshthoomu,17/Jul/18 4:44 AM,28/Aug/18 4:52 AM,28/Oct/23 3:03 AM,28/Aug/18 4:52 AM,,,,,,,,,v1.3.0,,,fabric-ci,fabric-quality,,,,0,,,,,,,"Create a weekly PTE job to run 12 hr longrun in hyperledger Jenkins. Execute -FAB-7204--4i.sh script from weekly tab [https://github.com/hyperledger/fabric-test/tree/master/regression/weekly.]

You can split this task into:
 # Create a script 12HrTest.py which invokes the test script listed above. _(The 12HrTest.py will look similar to fabric-test/regression/weekly/systest_pte.py)._
 # Create a script which executes it, such as run12HrTest.sh _(similar to runGroup2.sh)_
 # Create a weekly CI job to execute run12HrTest.sh. _(For future consideration: consider pros and cons of whether or not we should maintain a single weekly jenkins job which could kick off several different tests which we will be putting in the weekly folder - as explained in the weekly/README; or maybe instead we should create individual jenkins jobs per each of several groups of tests, with each group running anywhere from a few hours to a few days.)_",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11637,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,No,,,"1|hzzitj:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"19/Jul/18 11:30 AM;jtclark;fabric-test patch is *WIP*: https://gerrit.hyperledger.org/r/24545;;;","01/Aug/18 2:39 AM;jtclark;fabric-test patch was rebased and updated per developer comments: https://gerrit.hyperledger.org/r/24545;;;","01/Aug/18 11:11 PM;jtclark;Dependency patches to the above patch:

https://gerrit.hyperledger.org/r/#/c/25017/ - add the new make target to fabric-test
https://gerrit.hyperledger.org/r/#/c/25019/ - add the new Jenkins job
;;;","06/Aug/18 8:14 PM;jtclark;h2. ABANDONDED PATCHES
* https://gerrit.hyperledger.org/r/#/c/25017/  - This change is now included with: https://gerrit.hyperledger.org/r/#/c/24545/
* https://gerrit.hyperledger.org/r/#/c/25019/ - This change had a MERGE CONFLICT. New patch set is now: https://gerrit.hyperledger.org/r/25141

h2. NEW PATCH SETS IN-REVIEW

https://gerrit.hyperledger.org/r/#/c/24545/ - Adds new make target and test scripts to fabric-test
https://gerrit.hyperledger.org/r/25141 - New Jenkins job;;;","06/Aug/18 9:30 PM;jtclark;Both of the above patch sets are being tested here on the sandbox:https://jenkins.hyperledger.org/sandbox/job/fabric-test-svt-weekly-pte-x86_64/3/;;;","24/Aug/18 10:32 AM;jtclark;https://gerrit.hyperledger.org/r/#/c/25141/ - *{color:red}ABANDONED.{color}* Jenkins job was in the wrong format.

https://gerrit.hyperledger.org/r/#/c/24545/ - *MERGED* Add the new make target
https://gerrit.hyperledger.org/r/#/c/25277/ - *IN-REVIEW* Adds the new Jenkins job

New Jenkins job is running on the sandbox:
https://jenkins.hyperledger.org/sandbox/job/fabric-test-svt-weekly-pte-x86_64/;;;","27/Aug/18 7:49 PM;jtclark;https://jenkins.hyperledger.org/sandbox/job/fabric-test-svt-weekly-pte-x86_64/lastSuccessfulBuild/artifact/gopath/src/github.com/hyperledger/fabric-test/tools/PTE/CITest/Logs/FAB-7204-4i_0827102646.log

The above shows a successful test run of the 12-hr. PTE test (quickly ran for 2 mins).;;;","28/Aug/18 4:52 AM;jtclark;https://gerrit.hyperledger.org/r/#/c/25277/ has been *MERGED*.;;;",,,,,,,,,,,,,,,,,,,
Improve Ledger serviceability - Add entry/exit logging statement to major methods,FAB-11189,31945,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,wenjian,wenjian,17/Jul/18 9:43 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,fabric-ledger,,,,,0,Ledger,stale-item,,,,,"FAB-1870 has a set of guidelines in regards to logging. One of the guidelines is to add an entry and exit logging statement to major methods that includes any important entry/exit parameters. This can help debugging.
{code:java}
logger.Debugf(""Entry"") // modify to include any input parameters
defer logger.Debugf(""Exit""){code}
 ",,sykesm,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5766,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,No,,,"1|hzziuf:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,sykesm,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/18 2:53 AM;wenjian;To manage code merge conflicts and control CR size, split the changes into several independent CRs. 

core/ledger/kvledger: [https://gerrit.hyperledger.org/r/#/c/24627/]

core/ledger (other than kvledger) [https://gerrit.hyperledger.org/r/#/c/24635/]

common/ledger [https://gerrit.hyperledger.org/r/#/c/24667/]

 ;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Fix invalid security link in docs,FAB-11191,31955,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,17/Jul/18 6:51 PM,21/Jul/18 1:52 AM,28/Oct/23 3:03 AM,20/Jul/18 9:35 PM,,,,,,,,,v1.3.0,,,fabric-docs,,,,,0,,,,,,,"RTD page
[http://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#reporting-bugs]
has an invalid link to:
[_+{color:#0000ee}https://wiki.hyperledger.org/security/bug-handling-process{color}+_|https://urldefense.proofpoint.com/v2/url?u=https-3A__wiki.hyperledger.org_security_bug-2Dhandling-2Dprocess&d=DwMFaQ&c=jf_iaSHvJObTbx-siA1ZOg&r=FWiwMUSIAq7Ii1KJX8rdZWEsrplZzcrGwWreBa-fmbA&m=UMPjGvsEwIbrAJ1Tra5ey7Ncfkndi-Vv7ZRYYaiZGqQ&s=8Ni8sRwmU8_52JjBInExu38n4KW7CmKgyg-53L5DuSE&e=]
it should be:
[_+{color:#0000ee}https://wiki.hyperledger.org/security{color}+_|https://urldefense.proofpoint.com/v2/url?u=https-3A__wiki.hyperledger.org_security_bug-2Dhandling-2Dprocess&d=DwMFaQ&c=jf_iaSHvJObTbx-siA1ZOg&r=FWiwMUSIAq7Ii1KJX8rdZWEsrplZzcrGwWreBa-fmbA&m=UMPjGvsEwIbrAJ1Tra5ey7Ncfkndi-Vv7ZRYYaiZGqQ&s=8Ni8sRwmU8_52JjBInExu38n4KW7CmKgyg-53L5DuSE&e=]",,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,No,,,"1|hzwtmn:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jul/18 1:52 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/24475/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Failed getting validated identity from peer identity,FAB-11192,31959,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Invalid: Works as Expected,,pankajcheema,pankajcheema,17/Jul/18 8:46 PM,25/Jan/19 7:01 PM,28/Oct/23 3:03 AM,24/Jan/19 5:25 PM,v1.1.0,v1.2.0,v1.3.0,v1.4.0,,,,,Not a Bug,,,fabric-gossip,fabric-peer,,,,0,gossip,,,,,,"I am using everything default as suggested in official documentation everything goes well.But when  network is up and we create the the channel it works fine. After this when we try to update channel with Anchor peer configuration It started giving the error as above. I Am using 1.2 fabric images .We also faced this issue in 1.1 also.

If we escape this step of updating anchor peers evrything goes well . We are using default byfn network .No changes introduced .

Here are the logs https://pastebin.com/6gdijNge","Hyperlader fabric samples 1.2 
images 1.2
OS Ubuntu 16.04
using docker
using BYFN without any custom changes
",baohua,mastersingh24,pankajcheema,tkuhrt,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,No,,,"1|hzziw7:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,baohua,mastersingh24,pankajcheema,tkuhrt,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/18 9:49 PM;yacovm;My guess is that some of the peers didn't join the channel and as a result the channel MSP manager can't locate the channel MSP.;;;","17/Jul/18 9:59 PM;pankajcheema;[~yacovm]All the peers has joined the channel and it still throws same warning & error

EDIT: I thought only anchor peers need to join the channel. But as you said all the peers need to join the channel.

Thanks [~yacovm];;;","24/Jan/19 3:46 PM;baohua;IMHO, It's unreasonable to force all peers to join the channel.

The correct ways should be to improve the gossip msg handling, especially the unknown peers, which should not waste too much resource, otherwise, it will be easy to trigger DoS.;;;","24/Jan/19 5:24 PM;yacovm;{quote}IMHO, It's unreasonable to force all peers to join the channel.
{quote}
 

Peers should not gossip with foreign peers (from other organizations) *UNLESS* they share a channel.

This is by design.

 ;;;","24/Jan/19 11:51 PM;baohua;[~yacovm], the case happens when two orgs joined the same channel, while only part of their peers joined that channel. The other peers will be member of the gossip, but they cannot verify the identities. 

And this case is very usual to see.

Two potential solutions:
 # Enhance the verification process to improve the performance;
 # Let unjoined peer tell others his special case.;;;","25/Jan/19 12:44 AM;yacovm;{quote}The other peers will be member of the gossip, but they cannot verify the identities.
{quote}
 

Oh, I see what you mean now - you're saying that a peer in org O1 in channel A that also knows peers from org O2 , will forward alive messages to peers from O2 despite them not being in channel A, and they can't verify the peer's identity, right?

Unfortunately it's kinda of a chicken and egg problem, because you don't know if the other peer from org O2 is in the channel or not, before it tells you about it - but in order for it to tell you about it, it needs to know about you so you should send it a message before.

So, channel membership is built on top of non channel membership. That is actually to be more efficient, and not replicate non channel membership for each channel.

 
{quote}Enhance the verification process to improve the performance;
{quote}
 

It actually doesn't have any impact on performance since no MSP manager can be found to verify a peer from another org that you don't share a channel with, so it costs nothing - it only prints an annoying message to the logs, but I hope I changed all the places to debug by now. 

 
{quote}Let unjoined peer tell others his special case.
{quote}
Let it tell what?;;;","25/Jan/19 3:53 AM;yacovm;By the way - another option would be to make the peers not in the channel - not see the other peers in the channel (from the same org) by not setting bootstrap peers and only using anchor peers. if the anchor peers are disjoint - the peers of the same org won't know about each other and won't tell each other about peers of channels that a subset of peers in the org isn't part of.;;;","25/Jan/19 4:29 PM;baohua;[~yacovm], exactly.

These annoying warnings occupy CPU in comparing MSP and signature. When there're lot, it's noticeable.

Besides, i noticed that we enable the cache for valid signatures already, seems can enable caches for invalid signature, too.

Then when a peer join a new channel, he can disable part of (these belong to the org ca certs in that channel) or all of its invalid signature cache.;;;","25/Jan/19 6:22 PM;yacovm;in case you get a message from a peer you don't share a channel or an organization with, you don't verify any signature, because there is no MSP manager that can do that.
You literally iterate over all MSP managers you have and ask each if he knows MSP Foo, and they all say they don't. that's all.;;;","25/Jan/19 7:01 PM;baohua;LGTM and two suggestions:
 # Use map to improve the performance with lots of such cases;
 # Do not print stack msg with warning.;;;",,,,,,,,,,,,,,,,,
Add documentation for node.js chaincode transaction functions,FAB-11193,31964,,Documentation,In Progress,FAB,Fabric,software,denyeart,,,Medium,,EdProsser,EdProsser,EdProsser,17/Jul/18 10:34 PM,25/Jul/19 10:50 PM,28/Oct/23 3:03 AM,,,,,,,,,,v1.4.0,,,,,,,30/Jul/18 12:00 AM,0,Documentation,,,,,,"The node.js chaincode transaction functions enforce a standard routing procedure in the core node.js SDK which allows invocations to automatically select the correct chaincode function. 

This new functionality is additive, and doesn't overwrite use-cases where the routing is already specified in the chaincode.

The proposed documentation is to add information about this aspect of the node.js chaincode to the 'chaincode for developers/chaincode for operators' documents.

I'm creating a ""Developing Applications"" section for the docs at the moment, including both client application development, and chaincode development, which will flesh this topic out further.",,denyeart,EdProsser,isaacwch,mbwhite,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,FAB-11246,,,No,,,No,,,"1|hzziwf:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,denyeart,EdProsser,isaacwch,mbwhite,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Aug/18 9:17 PM;mbwhite;FYI, JSDoc based comments are going in with the node-sdk.;;;","30/Aug/18 12:30 AM;EdProsser;Here's the relevant CR: https://gerrit.hyperledger.org/r/c/25952/;;;","25/Jul/19 10:50 PM;denyeart;Abandoned CR per Matthew's suggestion.
Shall we close or is something else is needed now [~mbwhite] ?;;;",,,,,,,,,,,,,,,,,,,,,,,,
e2e_cli has failures when queried chaincode using idemix identity,FAB-11196,31968,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mdr,Ratnakar,Ratnakar,17/Jul/18 11:06 PM,24/Aug/18 9:23 PM,28/Oct/23 3:03 AM,24/Aug/18 9:23 PM,v1.3.0,,,,,,,,v1.3.0,,,fabric-crypto,fabric-samples,,,,0,quality,,,,,,"e2e_cli scripts ran with the following command
{code:java}
./network_setup.sh restart{code}
idemix identity failed to query chaincode. e2e_cli however doesn't catch it.
{code:java}
Error: error endorsing query: rpc error: code = Unknown desc = Failed evaluating policy on signed data during check policy on channel [mychannel] with policy [/Channel/Application/Writers]: [Failed to reach implicit threshold of 1 sub-policies, required 1 remaining] - proposal response: <nil>{code}

_Error logs_
{code:java}
Querying chaincode on peer1.org3...
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
CORE_PEER_LOCALMSPID=Org3MSP
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
CORE_PEER_LOCALMSPTYPE=idemix
CORE_PEER_TLS_ENABLED=true
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/idemix/idemix-config
CORE_PEER_ID=cli
CORE_LOGGING_LEVEL=DEBUG
CORE_PEER_ADDRESS=peer0.org1.example.com:7051
===================== Querying on peer1.org3 on channel 'mychannel'... =====================
Attempting to Query peer1.org3 ...3 secs

....

2018-07-17 12:59:45.486 UTC [bccsp] GetDefault -> WARN 02d Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
2018-07-17 12:59:45.486 UTC [msp] Sign -> DEBU 02e Idemix identity &{Org3MSP x: ""\271\224\317^\213\267|\334\202\274\374\265\3663'>+\260\307\314Z\257\004\233\324\376\016\350$\203\027\220""
y: ""a\233\307\277\254\001=\210u\312`\274J;\365\225\020B\366T`ws\276t\256\366\310\311\307\334\360""
} is signing
Error: error endorsing query: rpc error: code = Unknown desc = Failed evaluating policy on signed data during check policy on channel [mychannel] with policy [/Channel/Application/Writers]: [Failed to reach implicit threshold of 1 sub-policies, required 1 remaining] - proposal response: <nil>
===================== Query successful on peer1.org3 on channel 'mychannel' =====================

===================== All GOOD, End-2-End execution completed =====================
{code}
 ",,dubovitskaya,Ratnakar,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,No,,,"1|hzziwv:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,dubovitskaya,Ratnakar,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/18 12:03 AM;wlahti;The issue here is the policies for Org3MSP in the e2e_cli's configtx.yaml. 

When modified to include 'Org3MSP.member', the query executes successfully.
{code:java}
Policies:
Readers:
Type: Signature
Rule: ""OR('Org3MSP.admin', 'Org3MSP.peer', 'Org3MSP.client', 'Org3MSP.member')""
Writers:
Type: Signature
Rule: ""OR('Org3MSP.admin', 'Org3MSP.client', 'Org3MSP.member')""
Admins:
Type: Signature
Rule: ""OR('Org3MSP.admin')""
{code}
Looking for clarification from [~elli-androulaki] or [~ales] on what roles exist for idemix to be sure we have these policies defined correctly. With idemix, is there a concept of admin and client roles or just a member role?;;;","18/Jul/18 11:17 PM;wlahti;Chatted with Elli yesterday and she suggested [~dubovitskaya] should provide input as it appears the role logic for idemix may contain a bug which is causing this behavior. ;;;","24/Jul/18 12:15 AM;dubovitskaya;We identified the issue and provided a fix: [https://gerrit.hyperledger.org/r/#/c/24661/]

Could you please re-run the tests and let us know if this works?;;;","27/Jul/18 12:57 AM;wlahti;Looks good locally for me:
{code:java}
2018-07-26 15:55:09.053 UTC [msp] Sign -> DEBU 02e Idemix identity &{Org3MSP x: ""5\005\313\004\246\307RRJV\276@<\2315\3306\253.\354\362\2760<\306\013z\n\3613\337H""
y: ""\203!\231\007\254\260\266\337\027`q\031\247\321!n\360\333\240\032\312L\234\243u\262\314Ds\374\325\031""
} is signing
90
===================== Query successful on peer1.org3 on channel 'mychannel' =====================

===================== All GOOD, End-2-End execution completed ====================={code};;;",,,,,,,,,,,,,,,,,,,,,,,
Enhance protolator to understand KVRWSets and ChaincodeEvents,FAB-11198,31974,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Jul/18 11:56 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,19/Jul/18 5:33 AM,,,,,,,,,v1.3.0,,,fabric-tools,,,,,0,,,,,,,"Presently, configtxlator does not understand the opaque fields for chaincode events or for the RWsets.  It's very useful to be able to see these fields in debugging, so the tool should be enhanced.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,No,,,"1|hzzixr:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""basic-network"" example is failing to start peer node in Fabric 1.2",FAB-11199,31977,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,bdjukic,bdjukic,18/Jul/18 12:27 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,19/Jul/18 1:13 PM,v1.2.0,,,,,,,,,,,fabric-samples,,,,,0,,,,,,,"Repro steps:

 
 # Clone [https://github.com/hyperledger/fabric-samples]
 # Go to *basic-network* subfolder
 # Run *start.sh*
 # SSH to peer node: *docker exec -it peer0.org1.example.com bash*
 # Run *peer node start***

 

Expected: Peer node starts successfully 

Actual: Peer fails to start with stack trace: 

 

2018-07-17 15:12:47.229 UTC [ledgermgmt] initialize -> INFO 002 Initializing ledger mgmt

2018-07-17 15:12:47.229 UTC [kvledger] NewProvider -> INFO 003 Initializing ledger provider

*panic: Error while trying to open DB: resource temporarily unavailable*

 

goroutine 1 [running]:

github.com/hyperledger/fabric/common/ledger/util/leveldbhelper.(*DB).Open(0xc420083a40)

 /opt/gopath/src/github.com/hyperledger/fabric/common/ledger/util/leveldbhelper/leveldb_helper.go:88 +0x24d

github.com/hyperledger/fabric/core/ledger/kvledger.openIDStore(0xc42003fdb0, 0x4a, 0x1)

 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:250 +0x11d

github.com/hyperledger/fabric/core/ledger/kvledger.NewProvider(0xf1d0c0, 0x0, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:60 +0x8e

github.com/hyperledger/fabric/core/ledger/ledgermgmt.initialize(0xc4201c37d0, 0x0, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:65 +0x26f

github.com/hyperledger/fabric/core/ledger/ledgermgmt.Initialize.func1()

 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:52 +0x3b

sync.(*Once).Do(0x19a0ac0, 0xc4202ab5d0)

 /opt/go/src/sync/once.go:44 +0xbe

github.com/hyperledger/fabric/core/ledger/ledgermgmt.Initialize(0xc4201c37d0)

 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:51 +0x4d

github.com/hyperledger/fabric/peer/node.serve(0x19a09e8, 0x0, 0x0, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:148 +0x346

github.com/hyperledger/fabric/peer/node.glob..func1(0x1891cc0, 0x19a09e8, 0x0, 0x0, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:111 +0x9c

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0x1891cc0, 0x19a09e8, 0x0, 0x0, 0x1891cc0, 0x19a09e8)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:698 +0x46d

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x1892320, 0x197c7b0, 0xf, 0x2)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:783 +0x2e4

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x1892320, 0x2, 0xffffffffffffffff)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:736 +0x2b

main.main()",HyperLedger Fabric 1.2,bdjukic,ChanderGovindarajan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,No,,,"1|hzzixz:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,bdjukic,ChanderGovindarajan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jul/18 1:10 AM;bdjukic;There seems to be the same problem with *chaincode-docker-devmode* example as well. ;;;","18/Jul/18 2:49 PM;ChanderGovindarajan;[~bdjukic]
Why are you running the `peer node start` command manually?

Once you run `start.sh`, the peer is already started.

If you run the command again, the peer tries to open a ledger file that has already been created and opened, so the bug is expected behavior here.;;;","18/Jul/18 10:34 PM;bdjukic;Thanks for the quick reply. I've figured out what is the issue. The reason why I was trying to start it manually was because I was getting *failed with error: ""exec: not started""* when I tried to deploy my first chaincode on the peer. That is why I thought the peer itself was not running and I was trying to kick it off by myself. 

After some googling I figured out that this message comes out when I tried to deploy the chaincode directly onto the peer and not using peer CLI: [https://stackoverflow.com/questions/44576816/can-not-install-chaincode-via-cli.] A friendlier error message would have saved me some time :P

Cheers,

B.;;;","18/Jul/18 10:35 PM;bdjukic;You can close the issue.;;;",,,,,,,,,,,,,,,,,,,,,,,
"As a fabric developer, I need a shim package provider to support both chaincode install packages",FAB-11201,31979,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,18/Jul/18 1:02 AM,23/Aug/18 12:39 AM,28/Oct/23 3:03 AM,01/Aug/18 1:12 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"----FAB-10720---- introduces a way to persist the chaincode install packages. A new shim package provider should be defined that provides a way to retrieve ChaincodeInstallPackages in addition to the old ChaincodeDeploymentSpecs.

This new package provider should accept a chaincode name and version and first look for a matching ChaincodeInstallPackage before falling back to searching for the legacy ChaincodeDeploymentSpec package using the existing PackageProvider interface implemented by the ccprovider package.",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11210,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,FAB-11237,,,No,,,No,,,"1|hzziyf:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jul/18 2:07 AM;wlahti;https://gerrit.hyperledger.org/r/c/24585/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
another new bug for trying new process flows,FAB-11203,31981,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,scottz,scottz,18/Jul/18 2:46 AM,21/Jul/18 10:23 AM,28/Oct/23 3:03 AM,21/Jul/18 10:23 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,,No,,,"1|hzziyn:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vulnerability scanning of Ubuntu used in fabric base images,FAB-11209,31986,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,rhegde,rhegde,18/Jul/18 4:26 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,,,,,,0,stale-item,,,,,,"Fabric base os image is built using multiple packages out of which Ubuntu is one. There is no process within the FABRIC team which regularly checks for any security or vulnerability reporting for Ubuntu. This scan process needs to be integrated and repeatedly regularly (weekly)  to look for newly found security vulnerabilities in the image.  This should be conducted on older supported versions of Fabric as well as the current version.

Discussion with Clayton Sims mentions, this is only 1 item in pending and in progress state. Opening FAB for tracking.

Documentation mentions - Ubuntu ([https://github.com/hyperledger/fabric-baseimage)] ",,mastersingh24,rhegde,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11096,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzizj:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,mastersingh24,rhegde,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Aug/18 8:41 PM;mastersingh24;This is not a bug so move this to story;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"As a fabric developer, I need a common way to query chaincode packages, both in the legacy format and new.",FAB-11210,31987,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,jyellick,jyellick,18/Jul/18 4:30 AM,23/Aug/18 12:44 AM,28/Oct/23 3:03 AM,23/Aug/18 12:44 AM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"The new chaincode lifecycle brings with it a new packaging format.  The storage and retrieval of this format has been implemented in prior stories.

Now, it's necessary that both stores work, with the newer store taking preference.  There is an interface {{PackageProvider}} in the core/chaincode.  This would be a good place to start.  We need a shim which satisfies this interface and uses the chaincode stored in the newer store if it is present and in the older one if it is not.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11201,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,FAB-11237,,,No,,Unset,No,,,"1|hzzizr:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a fabric developer, I need the cclifecycle package to utilize both the old and new chaincode package formats.",FAB-11211,31988,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,jyellick,jyellick,18/Jul/18 4:33 AM,16/Aug/18 8:45 AM,28/Oct/23 3:03 AM,16/Aug/18 8:45 AM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"The cclifecycle package has an interface which enumerates installed chaincodes.  Presently, this depends on a concrete implementation which queries the filesystem directly.  Like with the core/chaincode package, we need a shim which will first query the new package repository, and the chaincode does not exist in the new repo, check the old.",,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,FAB-11237,,,No,,Unset,No,,,"1|hzzizz:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jul/18 5:04 AM;wlahti;https://gerrit.hyperledger.org/r/c/24957/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a fabric developer, I need a way to reserve portions of the state database as a namespace",FAB-11212,31990,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,jyellick,jyellick,jyellick,18/Jul/18 4:46 AM,07/Jan/19 1:23 PM,28/Oct/23 3:03 AM,07/Jan/19 1:23 PM,,,,,,,,,v2.0.0,,,fabric-peer,,,,,0,,,,,,,"Presently, Fabric reserves portions of the state db namespace through the LSCC table.  This assumes that all of the reserved namespaces are restricted to user chaincodes.  This is not the case generally, and will become even less so as Fabric gains more features.

Because of this, lifecycle should be built on a more basic principle that namespaces in the state database are reserved.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,FAB-11237,,,No,,Unset,No,,,"1|hzzj0f:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jan/19 1:23 PM;jyellick;This was more of a design principle, and has been incorporated into the DB layout of the new lifecycle.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
PTE testcase: bare bones performance test,FAB-11213,31993,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,18/Jul/18 4:58 AM,30/Jul/19 11:59 AM,28/Oct/23 3:03 AM,30/Jul/19 11:59 AM,,,,,,,,,,,,,,,,,0,,,,,,,"The bare bones performance test case:

network tbd",,dongming,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj13:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,dongming,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
remove dead reference to logger in protos/peer,FAB-11214,31998,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,sykesm,sykesm,sykesm,18/Jul/18 5:30 AM,09/Aug/18 4:32 AM,28/Oct/23 3:03 AM,09/Aug/18 4:32 AM,,,,,,,,,,,,,,,,,0,hygiene,,,,,,protos/peer/init.go exists only to acquire a logger that nobody uses.,,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj1j:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Aug/18 3:09 AM;sykesm;There's already a +2'd CR out there.

https://gerrit.hyperledger.org/r/c/25039/;;;","07/Aug/18 3:13 AM;wlahti;My bad. Searched the JIRA number but didn't find anything. Abandoned my CR.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Enable additional print functions in vet to catch bad logging formats,FAB-11215,32000,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,jyellick,sykesm,sykesm,18/Jul/18 6:17 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,19/Jul/18 5:32 AM,,,,,,,,,v1.3.0,,,,,,,,0,hygiene,,,,,,"{code}
scripts/golinter.sh:
```
$ git diff scripts/
diff --git a/scripts/golinter.sh b/scripts/golinter.sh
index 0c8fc3650..3be79a98b 100755
--- a/scripts/golinter.sh
+++ b/scripts/golinter.sh
@@ -33,7 +33,7 @@ if [ -n ""$OUTPUT"" ]; then
 fi
 
 echo ""Checking with go vet""
-OUTPUT=""$(go vet ./...)""
+OUTPUT=""$(go vet -printfuncs Critical,Criticalf,Debug,Debugf,Info,Infof,Notice,Noticef,Warning,Warningf ./...)""
 if [ -n ""$OUTPUT"" ]; then
     echo ""The following files contain go vet errors""
     echo $OUTPUT
{code}

Results in the following problems:
{code}
[sykesm@trapped] (master *)$ ./scripts/golinter.sh 
Checking with gofmt
Checking with goimports
Checking with go vet
# github.com/hyperledger/fabric/bccsp/pkcs11
bccsp/pkcs11/pkcs11.go:602: Warningf call has arguments but no formatting directives
# github.com/hyperledger/fabric/common/tools/configtxgen/localconfig
common/tools/configtxgen/localconfig/config.go:375: Infof format %s has arg genesisDefaults.Orderer.BatchSize.MaxMessageCount of wrong type uint32
common/tools/configtxgen/localconfig/config.go:378: Infof format %s has arg genesisDefaults.Orderer.BatchSize.AbsoluteMaxBytes of wrong type uint32
common/tools/configtxgen/localconfig/config.go:381: Infof format %s has arg genesisDefaults.Orderer.BatchSize.PreferredMaxBytes of wrong type uint32
# github.com/hyperledger/fabric/core/deliverservice/blocksprovider
core/deliverservice/blocksprovider/blocksprovider.go:198: Warningf call needs 1 arg but has 2 args
core/deliverservice/blocksprovider/blocksprovider.go:217: Debug call has possible formatting directive %s
# github.com/hyperledger/fabric/core/ledger/kvledger/history/historydb/historyleveldb
core/ledger/kvledger/history/historydb/historyleveldb/historyleveldb_query_executer.go:95: Debugf call has arguments but no formatting directives
# github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/validator/statebasedval
core/ledger/kvledger/txmgmt/validator/statebasedval/combined_iterator.go:137: Debugf format %s has arg vv of wrong type *github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb.VersionedValue
core/ledger/kvledger/txmgmt/validator/statebasedval/combined_iterator.go:142: Debugf format %s has arg vv of wrong type *github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb.VersionedValue
core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go:279: Debugf format %s has arg committedVersion of wrong type *github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/version.Height
# github.com/hyperledger/fabric/core/scc
core/scc/sysccapi.go:133: Infof format %s arg syscc.Name is a func value, not called
# github.com/hyperledger/fabric/gossip/comm
gossip/comm/comm_impl.go:460: Warning call has possible formatting directive %s
gossip/comm/conn.go:353: Debugf format %v reads arg #2, but call has only 1 arg
gossip/comm/conn.go:359: Warning call has possible formatting directive %v
# github.com/hyperledger/fabric/gossip/service
gossip/service/gossip_service.go:330: Debugf call has arguments but no formatting directives
# github.com/hyperledger/fabric/gossip/gossip
gossip/gossip/gossip_impl.go:414: Warningf call needs 1 arg but has 2 args
# github.com/hyperledger/fabric/orderer/common/localconfig
orderer/common/localconfig/config.go:265: Infof format %s has arg Defaults.General.ListenPort of wrong type uint16
# github.com/hyperledger/fabric/gossip/privdata
gossip/privdata/coordinator.go:310: Warningf format %s has arg missingPvtRWKey of wrong type privdata.rwSetKey
gossip/privdata/pull.go:505: Debug call has possible formatting directive %v
{code}

/cc [~jyellick]",,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj1z:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/18 11:00 PM;jyellick;In review via: https://gerrit.hyperledger.org/r/c/24515/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid OU member can invoke a chaincode,FAB-11216,32005,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Won't Do,,Rooney,Rooney,18/Jul/18 1:50 PM,12/Aug/18 8:58 PM,28/Oct/23 3:03 AM,12/Aug/18 8:58 PM,,,,,,,,,v1.2.0,,,fabric-peer,,,,,0,,,,,,," 

I made a channel has only one organization 'org1'

-- policies
Policies: &Org1Policies
  Readers:
    Type: Signature
    Rule: ""OR('ORG1.member')""
  Writers:
    Type: Signature
    Rule: ""OR('ORG1.member')""
  Admins:
    Type: Signature
    Rule: ""OR('ORG1.admin')""
 

And there are 2 members, (registered by fabric-ca-client)

member1 => id.type=client, id.affiliation=org1

member2 => id.type=client, id.affiliation=org2

(they have the ca-server admin's cert.pem in msp/admincerts)

 

Now there are 2 problems.

 

Problem 1)

First,

enroll member1 and invoke a chaincode of the channel with the its msp path => it's ok

And then,

enroll member2 and invoke a chaincode of the channel with the its msp path => it's also ok !!

Even member2 is not a member of the channel ! but invoking is not failed !

 

Problem 2)

First,

enroll member2 and invoke a chaincode of the channel with the its msp path => it's fail

(it's right cause member2 is not a member of the channel)

And then,

enroll member1 and invoke a chaincode of the channel with the its msp path => it's also fail !!

After that, every members of the channel can't invoke a chaincode !

For fixing it, enroll ca-admin and update admincerts, then, member1 can invoke it. 

 

in x509 cert. 'Issuer' has OU=org1  (I think it's not matter)

 ","development os: maxOS 10.13.6

chaincode: golang

build and test: docker, fabric images 1.2.0

peer container command: peer node start --peer-chaincodedev=true",mastersingh24,newthinker,Rooney,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj27:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,mastersingh24,newthinker,Rooney,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jul/18 1:57 PM;Rooney;'org1' 'ORG1', uppercase, lowercase is not matter. I actually use uppercase strings for MSPID and affiliations.;;;","18/Jul/18 2:56 PM;yacovm;Can you supply the x509 certificates for problem1 and attach them to the JIRA?;;;","18/Jul/18 3:06 PM;Rooney;I attached certificates (ca_admin, member1(ORG1), member2(org2));;;","18/Jul/18 3:11 PM;yacovm;Both members were issued by the same CA and are both in the same OU... I don't see the problem. Why do you think the second member shouldn't be allowed?;;;","18/Jul/18 3:35 PM;Rooney;same CA, but not same affiliation(OU).

 

member1's x509 Subject

Subject: ..., OU=client, OU=ORG1, CN=user1

member2's x509 Subject

Subject: ..., OU=client, OU=org2, CN=baduser

 

If just Issuer's OU is the matter and Subject's OU is ignored, why 'Problem 2' occurs ??

And how does 'Rules of Policies (""OR('ORG1.member')"")' work?

The difference between 'Problem 1' and 'Problem 2' is just who invokes first.

 ;;;","12/Aug/18 7:55 PM;mastersingh24;[~Rooney]  - Unless you use the [OU Identifier|http://hyperledger-fabric.readthedocs.io/en/release-1.2/msp.html#organizational-units]  feature when setting up your organization MSPs, trying to use OUs will not work .... both member1 and member2 are issued by the same root CA and therefore will both considered part of *org1* (or whichever org you mapped the root cert to);;;","12/Aug/18 8:58 PM;Rooney;Thx everyone answered to me.

I will check it more.;;;",,,,,,,,,,,,,,,,,,,,
Increase test coverage for signer.go,FAB-11217,32006,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,diizuka,diizuka,diizuka,18/Jul/18 3:12 PM,30/Jul/18 11:53 AM,28/Oct/23 3:03 AM,30/Jul/18 11:53 AM,v1.2.0,,,,,,,,v1.3.0,,,fabric-common,,,,,0,,,,,,,"Increase test coverage

  for fabric/cmd/common/signer/signer.go",,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj2f:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve Ledger serviceability - log errors with stacks when they first happened,FAB-11218,32010,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,wenjian,wenjian,18/Jul/18 8:32 PM,30/Apr/19 11:40 PM,28/Oct/23 3:03 AM,30/Apr/19 11:40 PM,,,,,,,,,,,,fabric-ledger,,,,,0,Ledger,,,,,,"To help debugging, log error stacks when the errors first happened.
 # When an error came from external source (e.g., go lib or vendor), wrap the error with stack and log it with logger.Errorf
 # When ledger creates a new error, creates the error with stack and log it with logger.Errorf

Custom errors defined in ledger will be handled separately in FAB-11105.",,sykesm,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11105,FAB-5766,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj2n:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,sykesm,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jul/18 10:27 PM;wenjian;To manage code merge conflicts and control CR size, split the changes into several independent CRs. Each CR can be merged independently.

part 1: https://gerrit.hyperledger.org/r/#/c/24517/

part 2: https://gerrit.hyperledger.org/r/#/c/24521/

part 3: [https://gerrit.hyperledger.org/r/#/c/24531/]

 ;;;","30/Apr/19 11:40 PM;sykesm;The referenced CRs have been abandoned;;;",,,,,,,,,,,,,,,,,,,,,,,,,
pvtdata integration tests failing after recent commits,FAB-11219,32013,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,18/Jul/18 9:37 PM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,18/Jul/18 11:20 PM,,,,,,,,,,,,,,,,,0,,,,,,,"pvtdata integrations tests are failing after a recent error handling CR (https://gerrit.hyperledger.org/r/c/23735/) due to the capitalization of the message changing:
{code:java}
19:00:35 Error: endorsement failure during query. response: status:500 message:""{\""Error\"":\""Failed to get private details for marble1: GET_STATE failed: transaction ID: 9666d8289d92d2df100f43d77082341092ad7f9300be33d561e82346706e2bba: private data matching public hash version is not available. Public hash version = &version.Height

{BlockNum:0x5, TxNum:0x0}

, Private data version = (*version.Height)(nil)\""}"" 
19:00:35 
19:00:35 Waiting for:
19:00:35 Private data matching public hash version is not available
19:00:35 
19:00:35 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:88
19:00:35 ------------------------------
19:00:35 
19:00:35 
19:00:35 Summarizing 2 Failures:
19:00:35 
19:00:35 [Fail] PrivateData-EndToEnd collection config is modified [BeforeEach] verifies access to private data after an org is added to collection config 
19:00:35 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:88
19:00:35 
19:00:35 [Fail] PrivateData-EndToEnd collection config is modified [BeforeEach] verifies access to private data after an org is removed from collection config and then added back 
19:00:35 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:88
19:00:35 
19:00:35 Ran 2 of 2 Specs in 353.245 seconds
19:00:35 FAIL! – 0 Passed | 2 Failed | 0 Pending | 0 Skipped{code}
 ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj33:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/18 9:56 PM;wlahti;https://gerrit.hyperledger.org/r/c/24513/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Remove usage of and reference to the EventHub from Balance-Transfer and Fabcar (fabric-samples),FAB-11220,32014,31801,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,18/Jul/18 9:49 PM,11/Aug/18 10:11 AM,28/Oct/23 3:03 AM,10/Aug/18 1:36 AM,,,,,,,,,v1.3.0,,,fabric-samples,,,,,0,,,,,,,,,ChanderGovindarajan,davidkhala,harrisob@us.ibm.com,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11124,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzj3b:",,,,,,,,,,,,,,,,,,,,,ChanderGovindarajan,davidkhala,harrisob@us.ibm.com,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jul/18 6:15 PM;davidkhala;https://gerrit.hyperledger.org/r/#/c/24583/
 master

[https://gerrit.hyperledger.org/r/#/c/24739/]

release-1.2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-sdk-java-maven-clm-master has failed.,FAB-11223,32021,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Environment Issue,,jtclark,jtclark,18/Jul/18 10:40 PM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,21/Jul/18 3:28 AM,v1.2.0,,,,,,,,,,,fabric-ci,,,,,0,ci-failure,,,,,,"*fabric-sdk-java-maven-clm-master* fails with the following error:
{code:java}
00:01:05.060 stdout: 
00:01:05.060 stderr: fatal: unable to connect to cloud.hyperledger.org:
00:01:05.060 cloud.hyperledger.org: Temporary failure in name resolution
00:01:05.060 
00:01:05.060 
00:01:05.060 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:2002)
00:01:05.060 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1721)
00:01:05.060 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:72)
00:01:05.060 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:405)
00:01:05.060 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$2.execute(CliGitAPIImpl.java:614)
00:01:05.060 	at org.jenkinsci.plugins.gitclient.RemoteGitImpl$CommandInvocationHandler$1.call(RemoteGitImpl.java:153)
00:01:05.060 	at org.jenkinsci.plugins.gitclient.RemoteGitImpl$CommandInvocationHandler$1.call(RemoteGitImpl.java:146)
00:01:05.060 	at hudson.remoting.UserRequest.perform(UserRequest.java:207)
00:01:05.060 	at hudson.remoting.UserRequest.perform(UserRequest.java:53)
00:01:05.060 	at hudson.remoting.Request$2.run(Request.java:358)
00:01:05.060 	at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:72)
00:01:05.060 	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
00:01:05.060 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
00:01:05.060 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
00:01:05.060 	at java.lang.Thread.run(Thread.java:748)
00:01:05.060 	Suppressed: hudson.remoting.Channel$CallSiteStackTrace: Remote call to prd-ubuntu1604-x86_64-4c-16g-1420
00:01:05.060 		at hudson.remoting.Channel.attachCallSiteStackTrace(Channel.java:1693)
00:01:05.060 		at hudson.remoting.UserResponse.retrieve(UserRequest.java:310)
00:01:05.060 		at hudson.remoting.Channel.call(Channel.java:908)
00:01:05.060 		at org.jenkinsci.plugins.gitclient.RemoteGitImpl$CommandInvocationHandler.execute(RemoteGitImpl.java:146)
00:01:05.060 		at sun.reflect.GeneratedMethodAccessor451.invoke(Unknown Source)
00:01:05.060 		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:01:05.060 		at java.lang.reflect.Method.invoke(Method.java:498)
00:01:05.060 		at org.jenkinsci.plugins.gitclient.RemoteGitImpl$CommandInvocationHandler.invoke(RemoteGitImpl.java:132)
00:01:05.060 		at com.sun.proxy.$Proxy109.execute(Unknown Source)
00:01:05.060 		at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1146)
00:01:05.060 		at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1186)
00:01:05.060 		at hudson.scm.SCM.checkout(SCM.java:495)
00:01:05.060 		at hudson.model.AbstractProject.checkout(AbstractProject.java:1202)
00:01:05.060 		at hudson.model.AbstractBuild$AbstractBuildExecution.defaultCheckout(AbstractBuild.java:574)
00:01:05.060 		at jenkins.scm.SCMCheckoutStrategy.checkout(SCMCheckoutStrategy.java:86)
00:01:05.060 		at hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:499)
00:01:05.060 		at hudson.model.Run.execute(Run.java:1724)
00:01:05.060 		at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)
00:01:05.061 		at hudson.model.ResourceController.execute(ResourceController.java:97)
00:01:05.061 		at hudson.model.Executor.run(Executor.java:429)
00:01:05.061 ERROR: Error cloning remote repo 'origin'

{code}
*COMMIT =========> N/A*

*Console output:* [https://jenkins.hyperledger.org/view/fabric-sdk-java/job/fabric-sdk-java-maven-clm-master/33/console]

*Build Logs:*

Current Log: N/A

Previous Log: [https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-sdk-java-maven-clm-master/32]",,jtclark,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj3z:",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,jtclark,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jul/18 11:05 PM;rameshthoomu;This build was failed on July 14th and the issue is resolved on the same day due to outage at thirdparty site.;;;","21/Jul/18 3:28 AM;scottz;Ramesh, when you return an issue, or mark it invalid, or fixed, it is good practice to either close it or reassign it to the originator so they can consider/agree/close it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test-svt-x86_64 has failed.,FAB-11228,32040,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,scottz,jtclark,jtclark,19/Jul/18 4:22 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,20/Jul/18 11:06 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-samples,,,,,0,ci-failure,,,,,,"*fabric-test-svt-x86_64* fails with the following error:

{code:java}

09:56:35.776 =================================== FAILURES ===================================
09:56:35.776 ____________ perf_goleveldb.test_FAB_3790_VaryNumParallelTxPerChain ____________
09:56:35.776 
09:56:35.783 self = <ledger_lte.perf_goleveldb testMethod=test_FAB_3790_VaryNumParallelTxPerChain>
09:56:35.783 
09:56:35.784     def test_FAB_3790_VaryNumParallelTxPerChain(self):
09:56:35.785         '''
09:56:35.785              In this Performance test, we observe the performance (time to
09:56:35.785              complete a set number of Ledger operations) of the Ledger component,
09:56:35.785              with goleveldb as the state database. We vary the number of parallel
09:56:35.785              transactions per chain and observe the performance.
09:56:35.785     
09:56:35.786              Passing criteria: Underlying LTE test completed successfully with
09:56:35.786              exit code 0
09:56:35.786             '''
09:56:35.786         logfile = open(""output_VaryNumParallelTxPerChain.log"", ""w"")
09:56:35.786         returncode = subprocess.call(
09:56:35.786                 ""./runbenchmarks.sh -f parameters_daily_CI.sh ""
09:56:35.786                 ""varyNumParallelTxPerChain"",
09:56:35.786                 shell=True, stderr=subprocess.STDOUT, stdout=logfile,
09:56:35.787                 cwd=tool_directory)
09:56:35.787         logfile.close()
09:56:35.787         self.assertEqual(returncode, 0, msg=""VaryNumParallelTxPerChain ""
09:56:35.787                 ""performance test failed. \nPlease check the logfile ""
09:56:35.787 >               +logfile.name+"" for more details."")
09:56:35.787 E       AssertionError: VaryNumParallelTxPerChain performance test failed. 
09:56:35.788 E       Please check the logfile output_VaryNumParallelTxPerChain.log for more details.
09:56:35.788 
09:56:35.788 ledger_lte.py:32: AssertionError
09:56:35.788 __________________ perf_goleveldb.test_FAB_3795_VaryNumChains __________________
09:56:35.788 
09:56:35.788 self = <ledger_lte.perf_goleveldb testMethod=test_FAB_3795_VaryNumChains>
09:56:35.788 
09:56:35.788     def test_FAB_3795_VaryNumChains(self):
09:56:35.789         '''
09:56:35.789              In this Performance test, we observe the performance (time to
09:56:35.789              complete a set number of Ledger operations) of the Ledger component,
09:56:35.789              with goleveldb as the state database. We vary the number of chains
09:56:35.789              (ledgers).
09:56:35.789     
09:56:35.789              Passing criteria: Underlying LTE test completed successfully with
09:56:35.790              exit code 0
09:56:35.790             '''
09:56:35.790         logfile = open(""output_VaryNumChains.log"", ""w"")
09:56:35.790         returncode = subprocess.call(
09:56:35.790                 ""./runbenchmarks.sh -f parameters_daily_CI.sh varyNumChains"",
09:56:35.790                 shell=True, stderr=subprocess.STDOUT, stdout=logfile,
09:56:35.790                 cwd=tool_directory)
09:56:35.790         logfile.close()
09:56:35.790         self.assertEqual(returncode, 0, msg=""VaryNumChains performance test""
09:56:35.791 >               "" failed. \nPlease check the logfile ""+logfile.name+"" for more ""
09:56:35.791                 ""details."")
09:56:35.791 E       AssertionError: VaryNumChains performance test failed. 
09:56:35.791 E       Please check the logfile output_VaryNumChains.log for more details.
09:56:35.791 
09:56:35.791 ledger_lte.py:51: AssertionError
09:56:35.791 ________ perf_goleveldb.test_FAB_3798_VaryNumParallelTxWithSingleChain _________
09:56:35.791 
09:56:35.791 self = <ledger_lte.perf_goleveldb testMethod=test_FAB_3798_VaryNumParallelTxWithSingleChain>
09:56:35.792 
09:56:35.792     def test_FAB_3798_VaryNumParallelTxWithSingleChain(self):
09:56:35.792         '''
09:56:35.792              In this Performance test, we observe the performance (time to
09:56:35.792              complete a set number of Ledger operations) of the Ledger component,
09:56:35.792              with goleveldb as the state database. We vary the number of parallel
09:56:35.792              transactions on a single chain.
09:56:35.792     
09:56:35.792              Passing criteria: Underlying LTE test completed successfully with
09:56:35.793              exit code 0
09:56:35.793             '''
09:56:35.793         logfile = open(""output_VaryNumParallelTxWithSingleChain.log"", ""w"")
09:56:35.793         returncode = subprocess.call(
09:56:35.793                 ""./runbenchmarks.sh -f parameters_daily_CI.sh ""
09:56:35.793                 ""varyNumParallelTxWithSingleChain"",
09:56:35.793                 shell=True, stderr=subprocess.STDOUT, stdout=logfile,
09:56:35.793                 cwd=tool_directory)
09:56:35.794         logfile.close()
09:56:35.794         self.assertEqual(returncode, 0, msg=""VaryNumParallelTxWithSingleChain ""
09:56:35.794                 ""performance test failed. \nPlease check the logfile ""
09:56:35.794 >               +logfile.name+"" for more details."")
09:56:35.794 E       AssertionError: VaryNumParallelTxWithSingleChain performance test failed. 
09:56:35.794 E       Please check the logfile output_VaryNumParallelTxWithSingleChain.log for more details.
09:56:35.794 
09:56:35.794 ledger_lte.py:73: AssertionError
09:56:35.794 _________ perf_goleveldb.test_FAB_3799_VaryNumChainsWithNoParallelism __________
09:56:35.794 
09:56:35.795 self = <ledger_lte.perf_goleveldb testMethod=test_FAB_3799_VaryNumChainsWithNoParallelism>
09:56:35.795 
09:56:35.795     def test_FAB_3799_VaryNumChainsWithNoParallelism(self):
09:56:35.795         '''
09:56:35.795              In this Performance test, we observe the performance (time to
09:56:35.795              complete a set number of Ledger operations) of the Ledger component,
09:56:35.795              with goleveldb as the state database. We vary the number of chains
09:56:35.795              without any parallelism within a single chain.
09:56:35.795     
09:56:35.796              Passing criteria: Underlying LTE test completed successfully with
09:56:35.796              exit code 0
09:56:35.796             '''
09:56:35.796         logfile = open(""output_VaryNumChainsWithNoParallelism.log"", ""w"")
09:56:35.796         returncode = subprocess.call(
09:56:35.796                 ""./runbenchmarks.sh -f parameters_daily_CI.sh ""
09:56:35.796                 ""varyNumChainsWithNoParallelism"",
09:56:35.797                 shell=True, stderr=subprocess.STDOUT, stdout=logfile,
09:56:35.797                 cwd=tool_directory)
09:56:35.797         logfile.close()
09:56:35.797         self.assertEqual(returncode, 0, msg=""varyNumChainsWithNoParallelism ""
09:56:35.797                 ""performance test failed. \nPlease check the logfile ""
09:56:35.797 >               +logfile.name+"" for more details."")
09:56:35.797 E       AssertionError: varyNumChainsWithNoParallelism performance test failed. 
09:56:35.797 E       Please check the logfile output_VaryNumChainsWithNoParallelism.log for more details.
09:56:35.798 
09:56:35.798 ledger_lte.py:94: AssertionError
09:56:35.798 _______________ perf_goleveldb.test_FAB_3800_VaryNumKeysInEachTx _______________
09:56:35.798 
09:56:35.798 self = <ledger_lte.perf_goleveldb testMethod=test_FAB_3800_VaryNumKeysInEachTx>
09:56:35.798 
09:56:35.798     def test_FAB_3800_VaryNumKeysInEachTx(self):
09:56:35.798         '''
09:56:35.798              In this Performance test, we observe the performance (time to
09:56:35.799              complete a set number of Ledger operations) of the Ledger component,
09:56:35.799              with goleveldb as the state database. We vary the number of keys in
09:56:35.799              each transaction.
09:56:35.799     
09:56:35.799              Passing criteria: Underlying LTE test completed successfully with
09:56:35.799              exit code 0
09:56:35.799             '''
09:56:35.799         logfile = open(""output_VaryNumKeysInEachTx.log"", ""w"")
09:56:35.800         returncode = subprocess.call(
09:56:35.800                 ""./runbenchmarks.sh -f parameters_daily_CI.sh ""
09:56:35.800                 ""varyNumKeysInEachTx"",
09:56:35.800                 shell=True, stderr=subprocess.STDOUT, stdout=logfile,
09:56:35.800                 cwd=tool_directory)
09:56:35.800         logfile.close()
09:56:35.800         self.assertEqual(returncode, 0, msg=""varyNumKeysInEachTx performance ""
09:56:35.800                 ""test failed. \nPlease check the logfile ""+logfile.name
09:56:35.800 >               +"" for more details."")
09:56:35.801 E       AssertionError: varyNumKeysInEachTx performance test failed. 
09:56:35.801 E       Please check the logfile output_VaryNumKeysInEachTx.log for more details.
09:56:35.801 
09:56:35.801 ledger_lte.py:154: AssertionError
09:56:35.801 ___________________ perf_goleveldb.test_FAB_3801_VaryKVSize ____________________
09:56:35.801 
09:56:35.801 self = <ledger_lte.perf_goleveldb testMethod=test_FAB_3801_VaryKVSize>
09:56:35.801 
09:56:35.801     def test_FAB_3801_VaryKVSize(self):
09:56:35.801         '''
09:56:35.801              In this Performance test, we observe the performance (time to
09:56:35.801              complete a set number of Ledger operations) of the Ledger component,
09:56:35.801              with goleveldb as the state database. We vary the size of key-value.
09:56:35.801     
09:56:35.801              Passing criteria: Underlying LTE test completed successfully with
09:56:35.801              exit code 0
09:56:35.801             '''
09:56:35.801         logfile = open(""output_VaryKVSize.log"", ""w"")
09:56:35.801         returncode = subprocess.call(
09:56:35.801                 ""./runbenchmarks.sh -f parameters_daily_CI.sh varyKVSize"",
09:56:35.801                 shell=True, stderr=subprocess.STDOUT, stdout=logfile,
09:56:35.801                 cwd=tool_directory)
09:56:35.801         logfile.close()
09:56:35.801         self.assertEqual(returncode, 0, msg=""varyKVSize performance test""
09:56:35.801 >               "" failed. \nPlease check the logfile ""+logfile.name+"" for more ""
09:56:35.801                 ""details."")
09:56:35.801 E       AssertionError: varyKVSize performance test failed. 
09:56:35.801 E       Please check the logfile output_VaryKVSize.log for more details.
09:56:35.801 
09:56:35.801 ledger_lte.py:112: AssertionError
09:56:35.801 __________________ perf_goleveldb.test_FAB_3802_VaryBatchSize __________________
09:56:35.801 
09:56:35.801 self = <ledger_lte.perf_goleveldb testMethod=test_FAB_3802_VaryBatchSize>
09:56:35.801 
09:56:35.801     def test_FAB_3802_VaryBatchSize(self):
09:56:35.801         '''
09:56:35.801              In this Performance test, we observe the performance (time to
09:56:35.801              complete a set number of Ledger operations) of the Ledger component,
09:56:35.801              with goleveldb as the state database. We vary the value of the batch
09:56:35.801              size
09:56:35.801     
09:56:35.801              Passing criteria: Underlying LTE test completed successfully with
09:56:35.801              exit code 0
09:56:35.801             '''
09:56:35.801         logfile = open(""output_VaryBatchSize.log"", ""w"")
09:56:35.801         returncode = subprocess.call(
09:56:35.801                 ""./runbenchmarks.sh -f parameters_daily_CI.sh varyBatchSize"",
09:56:35.801                 shell=True, stderr=subprocess.STDOUT, stdout=logfile,
09:56:35.801                 cwd=tool_directory)
09:56:35.801         logfile.close()
09:56:35.801         self.assertEqual(returncode, 0, msg=""varyBatchSize performance test""
09:56:35.801 >               "" failed. \nPlease check the logfile ""+logfile.name+"" for more ""
09:56:35.801                 ""details."")
09:56:35.801 E       AssertionError: varyBatchSize performance test failed. 
09:56:35.801 E       Please check the logfile output_VaryBatchSize.log for more details.
09:56:35.801 
09:56:35.801 ledger_lte.py:132: AssertionError
09:56:35.801 ___________________ perf_goleveldb.test_FAB_3803_VaryNumTxs ____________________
09:56:35.801 
09:56:35.801 self = <ledger_lte.perf_goleveldb testMethod=test_FAB_3803_VaryNumTxs>
09:56:35.801 
09:56:35.801     def test_FAB_3803_VaryNumTxs(self):
09:56:35.801         '''
09:56:35.801              In this Performance test, we observe the performance (time to
09:56:35.801              complete a set number of Ledger operations) of the Ledger component,
09:56:35.801              with goleveldb as the state database. We vary the number of
09:56:35.801              transactions carried out.
09:56:35.801     
09:56:35.801              Passing criteria: Underlying LTE test completed successfully with
09:56:35.801              exit code 0
09:56:35.801             '''
09:56:35.801         logfile = open(""output_VaryNumTxs.log"", ""w"")
09:56:35.801         returncode = subprocess.call(
09:56:35.801                 ""./runbenchmarks.sh -f parameters_daily_CI.sh varyNumTxs"",
09:56:35.801                 shell=True, stderr=subprocess.STDOUT, stdout=logfile,
09:56:35.801                 cwd=tool_directory)
09:56:35.801         logfile.close()
09:56:35.802         self.assertEqual(returncode, 0, msg=""varyNumTxs performance test""
09:56:35.802 >               "" failed. \nPlease check the logfile ""+logfile.name+"" for more ""
09:56:35.802                 ""details."")
09:56:35.802 E       AssertionError: varyNumTxs performance test failed. 
09:56:35.802 E       Please check the logfile output_VaryNumTxs.log for more details.
09:56:35.802 
09:56:35.802 ledger_lte.py:173: AssertionError
09:56:35.802 _____________ perf_couchdb.test_FAB_3870_VaryNumParallelTxPerChain _____________
09:56:35.802 
09:56:35.802 self = <ledger_lte.perf_couchdb testMethod=test_FAB_3870_VaryNumParallelTxPerChain>
09:56:35.802 
09:56:35.802     def test_FAB_3870_VaryNumParallelTxPerChain(self):
09:56:35.802         '''
09:56:35.802              In this Performance test, we observe the performance (time to
09:56:35.802              complete a set number of Ledger operations) of the Ledger component,
09:56:35.802              with couchdb as the state database. We vary the number of parallel
09:56:35.802              transactions per chain and observe the performance.
09:56:35.802     
09:56:35.802              Passing criteria: Underlying LTE test completed successfully with
09:56:35.802              exit code 0
09:56:35.802             '''
09:56:35.802         logfile = open(""output_VaryNumParallelTxPerChain_couchdb.log"", ""w"")
09:56:35.802         returncode = subprocess.call( ""./runbenchmarks.sh -f ""
09:56:35.802                 ""parameters_couchdb_daily_CI.sh varyNumParallelTxPerChain"",
09:56:35.802                 shell=True, stderr=subprocess.STDOUT, stdout=logfile,
09:56:35.802                 cwd=tool_directory)
09:56:35.802         logfile.close()
09:56:35.802         self.assertEqual(returncode, 0,
09:56:35.802                 msg=""VaryNumParallelTxPerChain for CouchDB performance test""
09:56:35.802 >               ""failed. \nPlease check the logfile "" +logfile.name+"" for more""
09:56:35.802                 "" details."")
09:56:35.802 E       AssertionError: VaryNumParallelTxPerChain for CouchDB performance testfailed. 
09:56:35.802 E       Please check the logfile output_VaryNumParallelTxPerChain_couchdb.log for more details.
09:56:35.802 
09:56:35.802 ledger_lte.py:196: AssertionError
09:56:35.802 ___________________ perf_couchdb.test_FAB_3871_VaryNumChain ____________________
09:56:35.802 
09:56:35.802 self = <ledger_lte.perf_couchdb testMethod=test_FAB_3871_VaryNumChain>
09:56:35.802 
09:56:35.802     def test_FAB_3871_VaryNumChain(self):
09:56:35.802         '''
09:56:35.802              In this Performance test, we observe the performance (time to
09:56:35.802              complete a set number of Ledger operations) of the Ledger component,
09:56:35.802              with couchdb as the state database. We vary the number of chains
09:56:35.802              (ledgers).
09:56:35.802     
09:56:35.802              Passing criteria: Underlying LTE test completed successfully with
09:56:35.802              exit code 0
09:56:35.802             '''
09:56:35.802         logfile = open(""output_VaryNumChains_couchdb.log"", ""w"")
09:56:35.802         returncode = subprocess.call(
09:56:35.802                 ""./runbenchmarks.sh -f parameters_couchdb_daily_CI.sh ""
09:56:35.802                 ""varyNumChains"",shell=True, stderr=subprocess.STDOUT,
09:56:35.802                 stdout=logfile, cwd=tool_directory)
09:56:35.802         logfile.close()
09:56:35.802         self.assertEqual(returncode, 0, msg=""VaryNumChains performance test""
09:56:35.802                 ""for CouchDB failed. \nPlease check the logfile ""+logfile.name+
09:56:35.802 >               "" for more "" ""details."")
09:56:35.802 E       AssertionError: VaryNumChains performance testfor CouchDB failed. 
09:56:35.802 E       Please check the logfile output_VaryNumChains_couchdb.log for more details.
09:56:35.802 
09:56:35.802 ledger_lte.py:218: AssertionError
09:56:35.802 _________ perf_couchdb.test_FAB_3872_VaryNumParallelTxWithSingleChain __________
09:56:35.802 
09:56:35.802 self = <ledger_lte.perf_couchdb testMethod=test_FAB_3872_VaryNumParallelTxWithSingleChain>
09:56:35.802 
09:56:35.802     def test_FAB_3872_VaryNumParallelTxWithSingleChain(self):
09:56:35.802         '''
09:56:35.802              In this Performance test, we observe the performance (time to
09:56:35.802              complete a set number of Ledger operations) of the Ledger component,
09:56:35.802              with couchdb as the state database. We vary the number of parallel
09:56:35.802              transactions on a single chain.
09:56:35.802     
09:56:35.802              Passing criteria: Underlying LTE test completed successfully with
09:56:35.802              exit code 0
09:56:35.802             '''
09:56:35.802         logfile = open(""output_VaryNumParallelTxWithSingleChain_couchdb.log"",
09:56:35.802                 ""w"")
09:56:35.802         returncode = subprocess.call(
09:56:35.802                 ""./runbenchmarks.sh -f parameters_couchdb_daily_CI.sh ""
09:56:35.802                 ""varyNumParallelTxWithSingleChain"", shell=True,
09:56:35.802                 stderr=subprocess.STDOUT, stdout=logfile, cwd=tool_directory)
09:56:35.802         logfile.close()
09:56:35.802         self.assertEqual(returncode, 0, msg=""VaryNumParallelTxWithSingleChain ""
09:56:35.802                 ""performance test for CouchDB failed. \nPlease check the logfile ""
09:56:35.802 >               +logfile.name+"" for more details."")
09:56:35.802 E       AssertionError: VaryNumParallelTxWithSingleChain performance test for CouchDB failed. 
09:56:35.803 E       Please check the logfile output_VaryNumParallelTxWithSingleChain_couchdb.log for more details.
09:56:35.803 
09:56:35.803 ledger_lte.py:239: AssertionError
09:56:35.803 ___________ perf_couchdb.test_FAB_3873_VaryNumChainWithNoParallelism ___________
09:56:35.803 
09:56:35.803 self = <ledger_lte.perf_couchdb testMethod=test_FAB_3873_VaryNumChainWithNoParallelism>
09:56:35.803 
09:56:35.803     def test_FAB_3873_VaryNumChainWithNoParallelism(self):
09:56:35.803         '''
09:56:35.803              In this Performance test, we observe the performance (time to
09:56:35.803              complete a set number of Ledger operations) of the Ledger component,
09:56:35.803              with couchdb as the state database. We vary the number of chains
09:56:35.803              without any parallelism within a single chain.
09:56:35.803     
09:56:35.803              Passing criteria: Underlying LTE test completed successfully with
09:56:35.803              exit code 0
09:56:35.803             '''
09:56:35.803         logfile = open(""output_VaryNumChainsWithNoParallelism_couchdb.log"", ""w"")
09:56:35.803         returncode = subprocess.call(
09:56:35.803                 ""./runbenchmarks.sh -f parameters_couchdb_daily_CI.sh ""
09:56:35.803                 ""varyNumChainsWithNoParallelism"", shell=True,
09:56:35.803                 stderr=subprocess.STDOUT, stdout=logfile, cwd=tool_directory)
09:56:35.803         logfile.close()
09:56:35.803         self.assertEqual(returncode, 0, msg=""varyNumChainsWithNoParallelism ""
09:56:35.803                 ""performance test for CouchDB failed. \nPlease check the logfile ""
09:56:35.803 >               +logfile.name+"" for more details."")
09:56:35.803 E       AssertionError: varyNumChainsWithNoParallelism performance test for CouchDB failed. 
09:56:35.803 E       Please check the logfile output_VaryNumChainsWithNoParallelism_couchdb.log for more details.
09:56:35.803 
09:56:35.803 ledger_lte.py:260: AssertionError
09:56:35.803 ____________________ perf_couchdb.test_FAB_3874_VaryKVSize _____________________
09:56:35.803 
09:56:35.803 self = <ledger_lte.perf_couchdb testMethod=test_FAB_3874_VaryKVSize>
09:56:35.803 
09:56:35.803     def test_FAB_3874_VaryKVSize(self):
09:56:35.803         '''
09:56:35.803              In this Performance test, we observe the performance (time to
09:56:35.803              complete a set number of Ledger operations) of the Ledger component,
09:56:35.803              with couchdb as the state database. We vary the size of key-value.
09:56:35.803     
09:56:35.803              Passing criteria: Underlying LTE test completed successfully with
09:56:35.803              exit code 0
09:56:35.803             '''
09:56:35.803         logfile = open(""output_VaryKVSize_couchdb.log"", ""w"")
09:56:35.803         returncode = subprocess.call(
09:56:35.803                 ""./runbenchmarks.sh -f parameters_couchdb_daily_CI.sh varyKVSize"",
09:56:35.803                 shell=True, stderr=subprocess.STDOUT, stdout=logfile,
09:56:35.803                 cwd=tool_directory)
09:56:35.803         logfile.close()
09:56:35.803         self.assertEqual(returncode, 0, msg=""varyKVSize for CouchDB performance""
09:56:35.803 >               "" test failed. \nPlease check the logfile ""+logfile.name+"" for ""
09:56:35.803                 ""more details."")
09:56:35.803 E       AssertionError: varyKVSize for CouchDB performance test failed. 
09:56:35.803 E       Please check the logfile output_VaryKVSize_couchdb.log for more details.
09:56:35.803 
09:56:35.803 ledger_lte.py:279: AssertionError
09:56:35.803 ___________________ perf_couchdb.test_FAB_3875_VaryBatchSize ___________________
09:56:35.803 
09:56:35.803 self = <ledger_lte.perf_couchdb testMethod=test_FAB_3875_VaryBatchSize>
09:56:35.803 
09:56:35.803     def test_FAB_3875_VaryBatchSize(self):
09:56:35.803         '''
09:56:35.803              In this Performance test, we observe the performance (time to
09:56:35.803              complete a set number of Ledger operations) of the Ledger component,
09:56:35.803              with couchdb as the state database. We vary the value of the batch
09:56:35.803              size
09:56:35.803     
09:56:35.803              Passing criteria: Underlying LTE test completed successfully with
09:56:35.803              exit code 0
09:56:35.803             '''
09:56:35.803         logfile = open(""output_VaryBatchSize_couchdb.log"", ""w"")
09:56:35.803         returncode = subprocess.call(
09:56:35.803                 ""./runbenchmarks.sh -f parameters_couchdb_daily_CI.sh ""
09:56:35.803                 ""varyBatchSize"", shell=True, stderr=subprocess.STDOUT,
09:56:35.803                 stdout=logfile, cwd=tool_directory)
09:56:35.803         logfile.close()
09:56:35.804         self.assertEqual(returncode, 0, msg=""varyBatchSize for CouchDB ""
09:56:35.804                 ""performance test failed. \nPlease check the logfile ""
09:56:35.804 >               +logfile.name+"" for more etails."")
09:56:35.804 E       AssertionError: varyBatchSize for CouchDB performance test failed. 
09:56:35.804 E       Please check the logfile output_VaryBatchSize_couchdb.log for more etails.
09:56:35.804 
09:56:35.804 ledger_lte.py:301: AssertionError
09:56:35.804 ________________ perf_couchdb.test_FAB_3876_VaryNumKeysInEachTX ________________
09:56:35.804 
09:56:35.804 self = <ledger_lte.perf_couchdb testMethod=test_FAB_3876_VaryNumKeysInEachTX>
09:56:35.804 
09:56:35.804     def test_FAB_3876_VaryNumKeysInEachTX(self):
09:56:35.804         '''
09:56:35.804              In this Performance test, we observe the performance (time to
09:56:35.804              complete a set number of Ledger operations) of the Ledger component,
09:56:35.804              with couchdb as the state database. We vary the number of keys in
09:56:35.804              each transaction.
09:56:35.804     
09:56:35.804              Passing criteria: Underlying LTE test completed successfully with
09:56:35.804              exit code 0
09:56:35.804             '''
09:56:35.804         logfile = open(""output_VaryNumKeysInEachTx_couchdb.log"", ""w"")
09:56:35.804         returncode = subprocess.call(
09:56:35.804                 ""./runbenchmarks.sh -f parameters_couchdb_daily_CI.sh ""
09:56:35.804                 ""varyNumKeysInEachTx"", shell=True, stderr=subprocess.STDOUT,
09:56:35.804                 stdout=logfile, cwd=tool_directory)
09:56:35.804         logfile.close()
09:56:35.804         self.assertEqual(returncode, 0, msg=""varyNumKeysInEachTx for CouchDB ""
09:56:35.804                 ""performance test failed. \nPlease check the logfile ""
09:56:35.804 >               +logfile.name +"" for more details."")
09:56:35.804 E       AssertionError: varyNumKeysInEachTx for CouchDB performance test failed. 
09:56:35.804 E       Please check the logfile output_VaryNumKeysInEachTx_couchdb.log for more details.
09:56:35.804 
09:56:35.804 ledger_lte.py:322: AssertionError
09:56:35.804 ____________________ perf_couchdb.test_FAB_3877_VaryNumTxs _____________________
09:56:35.804 
09:56:35.804 self = <ledger_lte.perf_couchdb testMethod=test_FAB_3877_VaryNumTxs>
09:56:35.804 
09:56:35.804     def test_FAB_3877_VaryNumTxs(self):
09:56:35.804         self.assertTrue(True)
09:56:35.804         '''
09:56:35.804              In this Performance test, we observe the performance (time to
09:56:35.804              complete a set number of Ledger operations) of the Ledger component,
09:56:35.804              with couchdb as the state database. We vary the number of
09:56:35.804              transactions carried out.
09:56:35.804     
09:56:35.804              Passing criteria: Underlying LTE test completed successfully with
09:56:35.804              exit code 0
09:56:35.804             '''
09:56:35.804         logfile = open(""output_VaryNumTxs_couchdb.log"", ""w"")
09:56:35.804         returncode = subprocess.call(
09:56:35.804                 ""./runbenchmarks.sh -f parameters_couchdb_daily_CI.sh varyNumTxs"",
09:56:35.804                 shell=True, stderr=subprocess.STDOUT, stdout=logfile,
09:56:35.804                 cwd=tool_directory)
09:56:35.804         logfile.close()
09:56:35.804         self.assertEqual(returncode, 0, msg=""varyNumTxs for CouchDB ""
09:56:35.804                 ""performance test failed. \nPlease check the logfile ""
09:56:35.804 >               +logfile.name+"" for more "" ""details."")
09:56:35.804 E       AssertionError: varyNumTxs for CouchDB performance test failed. 
09:56:35.804 E       Please check the logfile output_VaryNumTxs_couchdb.log for more details.
09:56:35.804 
09:56:35.804 ledger_lte.py:344: AssertionError
09:56:35.804 ========================== 16 failed in 94.77 seconds ==========================

{code}

*COMMIT =========> 8b246d7*

*Console output:* https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-svt-x86_64/83/console

*Build Logs:*

Current Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-svt-x86_64/83

Previous Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-svt-x86_64/82",,jtclark,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11158,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,No,(Please edit issue to document commit found in),Unset,No,,,"1|hzzj5j:",,,,Unset,Unset,,,(Please edit issue to document steps to reproduce),,Unset,,,,,(Please edit the issue to enter your test plan),,,,,,jtclark,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jul/18 3:13 AM;scottz;LTE tests passed yesterday in the daily test suite, after incorporating the solution for FAB-11158. This can be considered fixed/closed/done/resolved.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Timeout error causes consistent Integration test failures,FAB-11233,32059,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,latitiah,rameshthoomu,rameshthoomu,20/Jul/18 12:15 AM,25/Jul/18 3:22 AM,28/Oct/23 3:03 AM,25/Jul/18 3:22 AM,v1.2.1,v1.3.0,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,"Observed Integration Tests are failing consistently with timeout error. See the below patchset [https://gerrit.hyperledger.org/r/#/c/24455/] Integration Tests are failed almost 5 times with the same timeout error.

We are unable to publish dialy images as this is the must pass test in daily builds.

fabric # master branch

Commit# cae2ad4

https://jenkins.hyperledger.org/view/Daily/job/fabric-nightly-release-job-master-x86_64/33/consoleFull
{code:java}
00:15:05.420 ------------------------------
00:15:05.422 • Failure [11.005 seconds]
00:15:05.423 Network kafka network [It] deploys and executes chaincode (the hard way) 
00:15:05.423 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/nwo/network_test.go:128
00:15:05.423 
00:15:05.423   Timed out after 1.000s.
00:15:05.423   Expected
00:15:05.424       <<-chan struct {} | len:0, cap:0>: 0xc42033a660
00:15:05.424   to be closed
00:15:05.424 
00:15:05.424   /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/nwo/network_test.go:160
00:15:05.424 -----------------{code}",,latitiah,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx293:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),latitiah,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jul/18 2:38 AM;rameshthoomu;Another timeout error: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-nightly-release-job-master-x86_64/34/console.log.gz
{code:java}
00:26:20.979 ------------------------------
00:26:20.980 • Failure in Spec Setup (BeforeEach) [2.895 seconds]
00:26:20.981 EndToEndACL [BeforeEach] enforces access control list policies 
00:26:20.982 /w/workspace/fabric-nightly-release-job-master-x86_64/gopath/src/github.com/hyperledger/fabric/integration/e2e/acl_test.go:92
00:26:20.982 
00:26:20.983   Timed out after 1.000s.
00:26:20.984   Expected process to exit.  It did not.
00:26:20.984 
00:26:20.984   /w/workspace/fabric-nightly-release-job-master-x86_64/gopath/src/github.com/hyperledger/fabric/integration/nwo/network.go:482
00:26:20.985 ------------------------------{code};;;","20/Jul/18 6:27 AM;latitiah;These are 2 different timeouts. There was a CR merged (https://gerrit.hyperledger.org/r/#/c/24317/) recently that included refactoring the network.go file, such that the process exit wait has been increased from 1 second to 1 minute. As a result, I'm focusing on the process(channel) close timeout listed in the original issue.

For example, the following was also seen:
{code}
22:12:43 • Failure in Spec Setup (BeforeEach) [2.421 seconds]
22:12:43 Network solo network [BeforeEach] deploys and executes chaincode (simple) 
22:12:43 /w/workspace/fabric-nightly-release-job-master-x86_64/gopath/src/github.com/hyperledger/fabric/integration/nwo/network_test.go:77
22:12:43 
22:12:43   Timed out after 1.000s.
22:12:43   Expected
22:12:43       <<-chan struct {} | len:0, cap:0>: 0xc420357020
22:12:43   to be closed
22:12:43 
22:12:43   /w/workspace/fabric-nightly-release-job-master-x86_64/gopath/src/github.com/hyperledger/fabric/integration/nwo/network_test.go:67
{code};;;","20/Jul/18 6:38 AM;latitiah;https://gerrit.hyperledger.org/r/24597;;;",,,,,,,,,,,,,,,,,,,,,,,,
import etcd,FAB-11234,32064,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,20/Jul/18 12:54 AM,20/Jul/18 11:59 PM,28/Oct/23 3:03 AM,20/Jul/18 11:59 PM,,,,,,,,,,,,fabric-orderer,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj87:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update/Create a release process document,FAB-11235,32066,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,20/Jul/18 1:46 AM,23/Jan/19 1:43 PM,28/Oct/23 3:03 AM,23/Jan/19 1:43 PM,,,,,,,,,v1.4.0,,,fabric-build,,,,,0,,,,,,,"Existing Release process (release-1.1, release-1.0) steps are documented here [https://docs.google.com/document/d/12IpQnREUoJEUj2pF2z-0Up55geItFd94fcsbAkPacTg/edit|https://docs.google.com/document/d/12IpQnREUoJEUj2pF2z-0Up55geItFd94fcsbAkPacTg/edit.]

After the recent changes in 1.2 and master branch, add new steps or update the existing documentation for 1.2 and master branches.",,ChristopherFerris,denyeart,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj8n:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ChristopherFerris,denyeart,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/18 6:02 PM;rameshthoomu;The document has been updated with current release flow.. [https://docs.google.com/document/d/12IpQnREUoJEUj2pF2z-0Up55geItFd94fcsbAkPacTg/edit] this may change later based on the work being done in fabric, fabric-ca build process.;;;","23/Jan/19 1:43 PM;denyeart;Most important updates have been made. The google doc will be continuously improved, but I don't think there is a need to keep a task open. Closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Remove IS_RELEASE dependency from fabric-ca builds,FAB-11236,32067,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,rameshthoomu,rameshthoomu,20/Jul/18 1:51 AM,23/Jan/20 3:45 AM,28/Oct/23 3:03 AM,23/Jan/20 3:45 AM,v1.3.0,,,,,,,,Future,,,fabric-ca-build,,,,,0,,,,,,,"As part of the stable image build strategy, Chris worked on removing the IS_RELEASE dependency from fabric https://github.com/hyperledger/fabric/commit/25342999b62eb522e8bf303e18a54ec3013e58a7#diff-b67911656ef5d18c4ae36cb6741b7965

But the fabric-ca still has this dependency. It's better to remove IS_RELEASE condition to create seamless images or binaries",,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15130,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj8v:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/19 7:04 AM;denyeart;[~rameshthoomu] [~mastersingh24] I've moved to Future for now, but please indicate if you think we need to target v2.0 or another specific release.;;;","23/Jan/20 3:45 AM;rameshthoomu;This has been deleted with this commit https://github.com/hyperledger/fabric/commit/25342999b62eb522e8bf303e18a54ec3013e58a7#diff-b67911656ef5d18c4ae36cb6741b7965;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode lifecycle - 2.0 improvements,FAB-11237,28302,,Epic,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,ales,jyellick,jyellick,09/Mar/18 1:25 AM,29/Jul/21 9:22 PM,28/Oct/23 3:03 AM,11/Jan/21 2:32 PM,,,,,,,,,v2.0.0,,,fabric-peer,fabric-samples,fabric-sdk-node,,,4,external,sdk,sdk-triaged,,,,"The new v2.0 chaincode lifecycle introduces decentralized governance for chaincode, with a new process for installing a chaincode on your peers and starting it on a channel. The new Fabric chaincode lifecycle allows multiple organizations to come to agreement on the parameters of a chaincode, such as the chaincode endorsement policy, before it can be used to interact with the ledger.

Specifically, the new model offers several improvements over the previous lifecycle:
 * *Multiple organizations must agree to the parameters of a chaincode:* In the release 1.x versions of Fabric, one organization had the ability to set parameters of a chaincode (for instance the endorsement policy) for all other channel members. The new Fabric chaincode lifecycle is more flexible since it supports both centralized trust models (such as that of the previous lifecycle model) as well as decentralized models requiring a sufficient number of organizations to agree on an endorsement policy before it goes into effect.
 * *Safer chaincode upgrade process:* In the previous chaincode lifecycle, the upgrade transaction could be issued by a single organization, creating a risk for a channel member that had not yet installed the new chaincode. The new model allows for a chaincode to be upgraded only after a sufficient number of organizations have approved the upgrade.
 * *Easier endorsement policy updates:* Fabric lifecycle allows you to change an endorsement policy without having to repackage or reinstall the chaincode. Users can also take advantage of a new default policy that requires endorsement from a majority of members on the channel. This policy is updated automatically when organizations are added or removed from the channel.
 * *Inspectable chaincode packages:* The Fabric lifecycle packages chaincode in easily readable tar files. This makes it easier to inspect the chaincode package and coordinate installation across multiple organizations.
 * *Start multiple chaincodes on a channel using one package:* The previous lifecycle defined each chaincode on the channel using a name and version that was specified when the chaincode package was installed. You can now use a single chaincode package and deploy it multiple times with different names on the same or different channel.",,AshishkumarLakshmanan,baohua,C0rWin,cagdast,denyeart,fredbi,gotoxu,greg.haskins,gregnotso,guoger,iamksseo2,isaacwch,Jan_Rzepecki,Javi,jyellick,luomin,MariWade,MichaelWang,msteiner,muralisr,n-horiguchi,rickr,showjhappyb,SjirNijssen,ssaddem,StevenXu,suzetreacy,TiantianGao,wutongtree,xixuejia,yacovm,ymlbright,zRich,,,,,,,,,,FAB-9649,FAB-8863,FAB-10889,FAB-11169,,,,,FAB-8680,FAB-3299,FAB-8053,,,,,,,FAB-7518,FAB-15107,FAB-15108,FAB-11415,FAB-7518,FABG-892,,,"06/Apr/19 12:32 AM;latitiah;Lifecycle 2.0 Test Plan Notes.docx;https://jira.hyperledger.org/secure/attachment/17075/Lifecycle+2.0+Test+Plan+Notes.docx",,,,,,,,,,,,,Done,See original design proposal in FAB-8787.,Reviewed,,Done,,,Chaincode lifecycle - 2.0 improvements,,,,Done,,,,"1|hzyctb:",,,,Yes,Done,,,,,,,,,,See attached word doc,,,,,,AshishkumarLakshmanan,baohua,C0rWin,cagdast,denyeart,fredbi,gotoxu,greg.haskins,gregnotso,guoger,iamksseo2,isaacwch,Jan_Rzepecki,Javi,jyellick,luomin,MariWade,MichaelWang,msteiner,muralisr,n-horiguchi,rickr,showjhappyb,SjirNijssen,ssaddem,StevenXu,suzetreacy,TiantianGao,wutongtree,xixuejia,yacovm,ymlbright,zRich,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jul/18 3:59 AM;wlahti;[~suzetreacy] Why was this epic moved from Fabric to Fabric SDK Node?;;;","20/Jul/18 4:04 AM;suzetreacy;[~wlahti] - apologies, we have been migrating issues to new projects. Moved back.;;;","23/Aug/18 11:43 PM;denyeart;Defer to v2.0 to expose, although server-side foundation code is being merged in v1.3.0 and v1.4.0.;;;","24/Aug/18 2:14 AM;rickr;subtask exist for JSDK so does not need to be components.;;;",,,,,,,,,,,,,,,,,,,,,,,
Split admin tasks and client tasks in ATD for PTE,FAB-11238,32068,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,20/Jul/18 4:36 AM,25/Jul/18 12:25 PM,28/Oct/23 3:03 AM,25/Jul/18 12:25 PM,,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"Splitting the admin tasks (create channel, join peers to channel, install chaincode and instantiating the chaincode) and client tasks (invokes and queries) in ATD for PTE.",,AdnanChoudhury,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-10054,,,No,,Unset,No,,,"1|hzzj93:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),AdnanChoudhury,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,true,"25/Jul/18 3:37 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/24589/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add Prometheus support in Go SDK,FAB-11239,32071,30897,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,Baha-sk,Baha-sk,Baha-sk,20/Jul/18 5:25 AM,20/Jul/18 11:17 PM,28/Oct/23 3:03 AM,20/Jul/18 11:04 PM,,,,,,,,,,,,,,,,,0,,,,,,,,,Baha-sk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABG-686,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj9b:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Baha-sk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric network deployment guide,FAB-11240,32076,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Done,joe-alewine,joe-alewine,joe-alewine,20/Jul/18 6:46 AM,30/Jan/21 12:58 AM,28/Oct/23 3:03 AM,27/Jan/21 2:47 AM,,,,,,,,,v1.3.0,v2.x,,fabric-docs,,,,,1,Documentation,,,,,,"The goal here is to create a tutorial for how to deploy a production Fabric network on Kubernetes (as this is, as of recently, our preferred deployment method). To keep the tutorial to a reasonable scale, I think this should, in general, dictate a happy path for deployment, though we should take note of common use cases and the configuration options associated with them. After all, one of Fabric’s main selling points is its versatility. We need to highlight that while making sure not to drown our users in options (paralysis by analysis). We do have a plan to extend the current Operations Guide in the future (hopefully using the same process, if this goes well), so don't feel compelled to fit everything into this Deployment Guide.

I’m seeding this doc with (admittedly vague) descriptions of the big steps and would encourage everyone to extend/correct where they see fit. Where relevant, feel free to include code snippets, lists of configuration options, or anything else that will help users setup their networks. Let’s just get the material out there and then we can shape it (I suspect we might have to spread this material over several docs). Note that this flow presumes a “Network Initiator” type role where they’re setting up a lot of the structure themselves and then inviting others.

Here's the link to the google doc: [https://docs.google.com/document/d/1qtMsi8bK054VhDV-TzXXYF0v1Lfgy9Lu3zRAdJkWUfo/edit?usp=sharing]

The doc is open to be edited by anyone with the link, so send the link (or a link to this JIRA) to relevant SMEs as you see fit.",,bmos299,C0rWin,ChanderGovindarajan,chris.elder,ChristopherFerris,dbshah,denyeart,ibmmark,joe-alewine,jyellick,kchristidis,keithsmith,knagware9,manish-sethi,mastersingh24,mirioeggmann,mrshah,m-yacov-m,negupta,pandrejko,pauldeauna,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17271,,,,,,,,,FAB-11807,,,,,,,,,,,,,,,,,,Completed.CA/Peer/Orderer Deployment merged. ,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Fabric Deployment Guide,In Progress,No,,Unset,No,,,"1|i008rj:iwz9",,,,Unset,Unset,v2.0,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bmos299,C0rWin,ChanderGovindarajan,chris.elder,ChristopherFerris,dbshah,denyeart,ibmmark,joe-alewine,jyellick,kchristidis,keithsmith,knagware9,manish-sethi,mastersingh24,mirioeggmann,mrshah,m-yacov-m,negupta,pandrejko,pauldeauna,SjirNijssen,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Jul/18 4:28 PM;SjirNijssen;Joe,  May I suggest to replace the tittle of the first step as follows:
Start with the decision of the (non-empty) set of organizations (can be 1 or more) that will be using the Fabric network and which orgs use which channels.

I am confident you know how to abbreviate that. 

I prefer to go step by step with these suggestions.

I believe the consultation of orgs to work together in Fabric is directly coupled with the decision which orgs use which channel. Of course the initial configuration can ""elegantly"" updated later (in a later release of Fabric).;;;","31/Aug/18 12:51 AM;pandrejko;Here are my notes from the meeting with Gari and Chris:

Customers want to know how to deploy an e2e fabric solution, using the fabric CA client to generate their certs.

How to set things up?

How to modify the network?

Describe `here are the things you need to do...` -
 * What info do you need and how do you get it?
 * You need an ordering service then you Stand up peers that may or may not be connected. How to set it up incrementally?
 * Where is the ordering service, how do I set up the ordering service? How to bring it up?
 *  How do I create the genesis block?

 * When you setup a peer/here are things you need to know to setup a peer
 * Now that I have a remote peer, what can I do with it?
 * Where am I connecting it to - an anchor peer in another org? What info do you need to connect it. 
 * How do I setup an anchor peer
 * If you want to use TLS, what do you need to do? How to get the TLS cert?
 * How do you configure peers and get them to work together?
 * How do I create a channel?
 * What info do I need from the orgs (msps)
 * How to use Join channel api on the peer?
 * How to fetch the genesis block?
 * How to install & instantiate chaincode?
 * How to use the fabric-ca vs embed own cryptographic material externally
 * Guidance on setup for HA
 * What monitoring do I need to do?Here’s the processes you need to be monitoring. Here’s your log files…..
 * There’s a network running over here - how do I connect to that network?
 * We support Kafka - recommended config is: Min 4 Kafka brokers, replica config of 3. Get the Orderer config info from your kafka cluster
 * Message hub - Kafka as a service in blue mix - ibm event streams = message hub for icp - need to document - use this for 6 months and then switch over to RAFT;;;","04/Mar/20 2:35 PM;knagware9;[~pandrejko] well describer. All these points should be covered in the deployment guide. If we follow any fabric-samples those are neatly describer and works everytime. similar kind of fabric production deployment samples should be there for fabric user.;;;","04/Mar/20 10:06 PM;pandrejko;[~knagware9] You are exactly correct. 
The process overview has been published here: https://hyperledger-fabric.readthedocs.io/en/latest/deployment_guide_overview.html
We are in the process of writing following topics which address the deployment considerations and steps in more detail. 
In fact we've already started 2 of them here:
There is a new tutorial  on deploying smart contracts : https://github.com/hyperledger/fabric/pull/666
Deploying a CA: https://github.com/hyperledger/fabric/pull/764

Coming soon:
- Create a Channel
- Deploy a peer
- Deploy an ordering service

We welcome your feedback and suggestions!;;;","21/Oct/20 8:57 PM;pandrejko;TODO
 * Planning for an orderer
 * Settings checklist
 * Deployment tutorial(s)
 ** Tutorial I: Deploy a [3 or 5] node ordering service
 *** OSN1
 **** Generate certs and MSPs
 **** Generate system channel genesis block (configtxgen)
 **** Edit orderer.yaml
 **** Start orderer with genesis block
 *** Do we want to mention here – Create application channel ?
 *** OSN(n) (one node at a time!)
 **** Generate certs and MSPs
 **** Add new node to the Raft consenter set in configtx.yaml (system channel?)
 ***** Host: raft1.example.com Port: 7050
 ***** ClientTLSCert: path/to/ClientTLSCert1
 ***** ServerTLSCert: path/to/ServerTLSCert1
 **** Edit orderer.yaml
 **** Start orderer with genesis block
 *** Add new OSN to to existing application channel
 **** *Add the TLS certificates* of the new node to the application channel through a channel configuration update transaction. Note: the new node must be added to the system channel before being added to one or more application channels.
 **** *Fetch the latest config block* of the system channel from an orderer node that’s part of the system channel.
 **** *Ensure that the node that will be added is part of the system channel* by checking that the config block that was fetched includes the certificate of (soon to be) added node.
 **** *Start the new Raft node* with the path to the config block in the {{General.BootstrapFile}} configuration parameter.
 **** *Wait for the Raft node to replicate the blocks* from existing nodes for all channels its certificates have been added to. After this step has been completed, the node begins servicing the channel.
 **** *Add the endpoint* of the newly added Raft node to the channel configuration of all channels.
 ** Tutorial II (FUTURE) add a Raft ordering node from another organization;;;","28/Oct/20 4:55 PM;pauldeauna;up;;;","27/Jan/21 2:47 AM;pandrejko;Closing this as all work has been completed except for the Fabric Backup and Recovery strategy which is currently not in plan.;;;",,,,,,,,,,,,,,,,,,,,
Move the flag of initializeProfilingService external,FAB-11241,32078,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,baohua,baohua,20/Jul/18 10:07 AM,17/Apr/21 12:12 AM,28/Oct/23 3:03 AM,17/Apr/21 12:12 AM,,,,,,,,,,,,fabric-orderer,,,,,0,,,,,,,"Now the flag is inside the function, moving it into the main process will make the entire logic more explicit.",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj9z:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jul/18 10:17 AM;baohua;https://gerrit.hyperledger.org/r/24603;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add `build/` into gitignore,FAB-11242,32079,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,20/Jul/18 10:18 AM,25/Jul/18 6:17 AM,28/Oct/23 3:03 AM,25/Jul/18 6:17 AM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"Now when doing build, there will generate a build/ path.

This should not be included into git consideration.",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzja7:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jul/18 10:20 AM;baohua;https://gerrit.hyperledger.org/r/24605;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
[ERROR] Join-Channel - TypeError: client.getEventHubsForOrg is not a function,FAB-11243,32080,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,HLN,HLN,HLN,20/Jul/18 9:05 PM,25/Sep/18 12:40 PM,28/Oct/23 3:03 AM,11/Sep/18 8:47 PM,,,,,,,,,v1.3.0,,,,,,,,0,balance-transfer,fabric-samples,,,,,This error appears when *fabric-samples/balance-transfer/testAPIs.sh* is executed.,,bravobardo,ChristopherFerris,denyeart,HLN,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjaf:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bravobardo,ChristopherFerris,denyeart,HLN,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/18 5:06 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/24611/;;;","11/Sep/18 8:47 PM;denyeart;Event hub has been removed, cancelling...;;;","24/Sep/18 11:36 PM;bravobardo;Hi,

Was the code changed from 'client.getEventHubsForOrgs(org_name) to 'channel.getChannelEventHubsForOrg(org_name)'?

If so, is it already available?

Regards,

BB;;;","25/Sep/18 11:37 AM;denyeart;[~bravobardo] Yes the change has been made in master and will be released as v1.3 this week.;;;","25/Sep/18 12:40 PM;bravobardo;OK, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,
Nil pointer when passing empty string to getHistoryForKey(),FAB-11244,32081,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,denyeart,denyeart,20/Jul/18 9:08 PM,14/Aug/19 2:59 AM,28/Oct/23 3:03 AM,30/Sep/18 12:04 AM,,,,,,,,,v1.1.2,v1.2.1,v1.3.0,fabric-ledger,,,,,0,,,,,,,"From mailing list 7/19/2018:

Getting the following error when passing an empty string, “”, to ChaincodeStub.getHistoryForKey() in NodeJS chaincode (1.1) using levelDB (seems to be fine with CouchDB). Don’t have much of a use-case for passing an empty string, but thought I would bring this up since I observed that this error brings down the peer and thus also the chaincode containers:

2018-07-19 18:01:05.366 UTC [chaincode] processStream -> DEBU 209c [134e4e3f]Received message GET_HISTORY_FOR_KEY from shim

2018-07-19 18:01:05.366 UTC [chaincode] handleMessage -> DEBU 209d [134e4e3f]Fabric side Handling ChaincodeMessage of type: GET_HISTORY_FOR_KEY in state ready

2018-07-19 18:01:05.366 UTC [chaincode] afterGetHistoryForKey -> DEBU 209e Received GET_HISTORY_FOR_KEY, invoking get state from ledger

2018-07-19 18:01:05.366 UTC [chaincode] afterGetHistoryForKey -> DEBU 209f Exiting GET_HISTORY_FOR_KEY

2018-07-19 18:01:05.366 UTC [chaincode] filterError -> DEBU 20a0 Ignoring NoTransitionError: no transition

2018-07-19 18:01:05.366 UTC [leveldbhelper] GetIterator -> DEBU 20a1 Getting iterator for range [[]byte\{0x77, 0x65, 0x6c, 0x6c, 0x6c, 0x69, 0x6e, 0x63, 0x2d, 0x31, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x0, 0x77, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x0, 0x0}] - [[]byte\{0x77, 0x65, 0x6c, 0x6c, 0x6c, 0x69, 0x6e, 0x63, 0x2d, 0x31, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x0, 0x77, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x0, 0x0, 0xff}]

panic: runtime error: slice bounds out of range

        panic: runtime error: invalid memory address or nil pointer dereference

[signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0xbae1b0]

 

goroutine 1651 [running]:

github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetHistoryForKey.func1.1(0xc420347a80, 0xc424564b40, 0xc421a2fee8)

        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:1102 +0x60

panic(0xdc3e40, 0x1642100)

        /opt/go/src/runtime/panic.go:491 +0x283

github.com/hyperledger/fabric/common/ledger/util.DecodeOrderPreservingVarUint64(0xc4244a6482, 0xb5, 0xbe, 0xc42452d2d0, 0xd)

        /opt/gopath/src/github.com/hyperledger/fabric/common/ledger/util/util.go:59 +0xd9

github.com/hyperledger/fabric/core/ledger/kvledger/history/historydb/historyleveldb.(*historyScanner).Next(0xc424565f20, 0xc4245de450, 0xc42453f800, 0x24, 0xc4245a9408)

        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/history/historydb/historyleveldb/historyleveldb_query_executer.go:79 +0xe8

github.com/hyperledger/fabric/core/chaincode.getQueryResponse(0xc420347a80, 0xc424549da0, 0x165f0c0, 0xc424565f20, 0xc42453f800, 0x24, 0xc424565f20, 0x0, 0x0)

        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:770 +0x91

github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetHistoryForKey.func1(0xc420347a80, 0xc424564b40)

        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:1141 +0x69b

created by github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetHistoryForKey

        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:1089 +0x49",,denyeart,manish-sethi,sykesm,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Security issue,FAB-15490,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,manish-sethi,Senthil1,sykesm,wenjian,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwto7:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,manish-sethi,sykesm,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Sep/18 3:07 AM;manish-sethi;I checked locally at the ledger side and GetHistoryForKey works fine even with a key as an empty string. Further, what puzzles me is this statement in bug description - ""using levelDB (seems to be fine with CouchDB)"". The history db is largely unaffected by the choice of statedb.

Though, chaincode handler should simply be a pass through but in case there is some internal details that [~sykesm] wants to have a look.;;;","06/Sep/18 7:07 AM;sykesm;The chaincode message is simply unmarshaled [1] and passed along unmolested to the query executor [2].

As an aside, did you look at the log record that was created?

{code}
2018-07-19 18:01:05.366 UTC [leveldbhelper] GetIterator -> DEBU 20a1 Getting iterator for range [[]byte\{0x77, 0x65, 0x6c, 0x6c, 0x6c, 0x69, 0x6e, 0x63, 0x2d, 0x31, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x0, 0x77, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x0, 0x0}] - [[]byte\{0x77, 0x65, 0x6c, 0x6c, 0x6c, 0x69, 0x6e, 0x63, 0x2d, 0x31, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x0, 0x77, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x0, 0x0, 0xff}]
{code}

If I'm reading that correctly (may not be), there's a byte(0) embedded in the middle of the namespace.

{code}
[]byte{
    0x77, 0x65, 0x6c, 0x6c, 0x6c, 0x69, 0x6e, 0x63,
    0x2d, 0x31, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
    0x68, 0x6f, 0x73, 0x74, 0x0,  0x77, 0x6c, 0x63,
    0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, // namespace: welllinc-1singldhost\000wlchaincode
    0x0,  // post-ns separator
          // empty-key
    0x0,  // post-key separator
}
[]byte{
    0x77, 0x65, 0x6c, 0x6c, 0x6c, 0x69, 0x6e, 0x63,
    0x2d, 0x31, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
    0x68, 0x6f, 0x73, 0x74, 0x0,  0x77, 0x6c, 0x63,
    0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, // namespace: welllinc-1singldhost\000wlchaincode
    0x0,  // post-ns separator
          // empty-key
    0x0,  // post-key separator
    0xff, // end-key indiecator
}
{code}

If there's a 0 byte, I'm pretty sure that will completely hose the ledger code.

[1]: https://github.com/hyperledger/fabric/blob/9db3fbcf97df1655de828ec8be6e33db215ae795/core/chaincode/handler.go#L1119-L1124
[2]: https://github.com/hyperledger/fabric/blob/release-1.1/core/chaincode/handler.go#L1134;;;","06/Sep/18 10:57 PM;sykesm;The chaincode name gets extracted in an obtuse way in the chaincode handler from the registration message. (I continue to be amazed at how complicated we make things.) 

While there may be a bug there, it looks like we just decode what we receive from the chaincode register message. If the if the ChaincodeID.Name send by in the REGISTER message contained a nil byte, we would just carry it along. While this shouldn't happen, the protobuf encoding for a string is length delimited so decoding is unlikely to care.

So, at this point, I think {{historydb.ConstructPartialCompositeHistoryKey}} and/or {{LevelHistoryDBQueryExecutor.GetHistoryForKey}} need to validate that the namespace and key do not contain the delimiters used by the iterator.

The chaincode registration logs and code would be interesting to review relative to 0 bytes in the name; without that, it's hard to see if the handler received garbage or not.;;;","07/Sep/18 3:55 AM;manish-sethi;As per the log record, the key that gets stored contains a nil byte and I looked at the historydb code and found that it assumes somehow that the key does not contain a nil byte. There is no such assumption anywhere else as such - not sure why historydb code assumes this.;;;","07/Sep/18 7:57 AM;manish-sethi;Submitted a CR - [https://gerrit.hyperledger.org/r/#/c/26155/] with the fix however, I have -1ed for now or preventing an accidental merge. We need to decide on how should this be released as this requires rebuilding of historydb.

[~denyeart] - what is best way to release this in your opinion? Add the requirement of rebuilding historydb in the release notes or having this as a patch here for some time (till we go for 2.0)?;;;","08/Sep/18 7:07 AM;manish-sethi;Discussed with [~denyeart] and decided that it may not be better to force a rebuild of history db in an intermediate release. Perhaps release 2.0 may be right candidate for that. For now, submitted another fix (https://gerrit.hyperledger.org/r/#/c/26174/) which is a sub-optimal  solution but provides correctness of results and would work with existing historydb. Abandoned the earlier CR and will revive later for version 2.0;;;","15/Sep/18 2:10 PM;denyeart;Testing with the pre-fixed code, I see another manifestation of the problem when other keys with nil bytes are picked up within the history range query for a key:
{code:java}
2018-09-15 01:03:06.269 EDT [chaincode] HandleTransaction -> DEBU 342 [fd113ca5] handling GET_HISTORY_FOR_KEY from chaincode
2018-09-15 01:03:06.269 EDT [leveldbhelper] GetIterator -> DEBU 343 Getting iterator for range [[]byte{0x6d, 0x79, 0x63, 0x0, 0x6d, 0x61, 0x72, 0x62, 0x6c, 0x65, 0x73, 0x0, 0x6d, 0x61, 0x72, 0x62, 0x6c, 0x65, 0x36, 0x0}] - [[]byte{0x6d, 0x79, 0x63, 0x0, 0x6d, 0x61, 0x72, 0x62, 0x6c, 0x65, 0x73, 0x0, 0x6d, 0x61, 0x72, 0x62, 0x6c, 0x65, 0x36, 0x0, 0xff}]
2018-09-15 01:03:06.270 EDT [historyleveldb] Next -> DEBU 344 Found history record for namespace:marbles key:marble6 at blockNumTranNum 0:0
2018-09-15 01:03:06.270 EDT [fsblkstorage] retrieveTransactionByBlockNumTranNum -> DEBU 345 retrieveTransactionByBlockNumTranNum() - blockNum = [0], tranNum = [0]
2018-09-15 01:03:06.270 EDT [fsblkstorage] fetchTransactionEnvelope -> DEBU 346 Entering fetchTransactionEnvelope() fileSuffixNum=0, offset=38, bytesLength=14655
2018-09-15 01:03:06.270 EDT [historyleveldb] getKeyModificationFromTran -> DEBU 347 Entering getKeyModificationFromTran()
%!(EXTRA string=marbles, string=marble6)
2018-09-15 01:03:06.270 EDT [chaincode] BuildQueryResponse -> ERRO 348 Failed to get query result from iterator
2018-09-15 01:03:06.270 EDT [chaincode] HandleTransaction -> ERRO 349 [fd113ca5] Failed to handle GET_HISTORY_FOR_KEY. error: proto: can't skip unknown wire type 7
error unmarshaling ProposalResponsePayload
github.com/hyperledger/fabric/protos/utils.GetProposalResponsePayload
 /Users/denyeart/work/src/github.com/hyperledger/fabric/protos/utils/proputils.go:190
github.com/hyperledger/fabric/protos/utils.GetPayloads
 /Users/denyeart/work/src/github.com/hyperledger/fabric/protos/utils/txutils.go:36
github.com/hyperledger/fabric/core/ledger/kvledger/history/historydb/historyleveldb.getKeyModificationFromTran
 /Users/denyeart/work/src/github.com/hyperledger/fabric/core/ledger/kvledger/history/historydb/historyleveldb/historyleveldb_query_executer.go:108
github.com/hyperledger/fabric/core/ledger/kvledger/history/historydb/historyleveldb.(*historyScanner).Next
 /Users/denyeart/work/src/github.com/hyperledger/fabric/core/ledger/kvledger/history/historydb/historyleveldb/historyleveldb_query_executer.go:80
github.com/hyperledger/fabric/core/chaincode.(*QueryResponseGenerator).BuildQueryResponse
 /Users/denyeart/work/src/github.com/hyperledger/fabric/core/chaincode/query_response_generator.go:32
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetHistoryForKey
 /Users/denyeart/work/src/github.com/hyperledger/fabric/core/chaincode/handler.go:824
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetHistoryForKey-fm
 /Users/denyeart/work/src/github.com/hyperledger/fabric/core/chaincode/handler.go:214
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
 /Users/denyeart/work/src/github.com/hyperledger/fabric/core/chaincode/handler.go:257
runtime.goexit{code}
I've confirmed the fix fixes this problem as well.;;;","15/Sep/18 2:18 PM;denyeart;Also note the problem does NOT occur with normal composite keys.  These were a concern due to the nil byte separator in composite keys, but it turns out that these are not a problem, since composite keys end in a nil byte and the history keys also have nil byte separators.  This results in two nil bytes at the end of the history range query startkey and endkey, which ensures (as designed) that other composite keys in the same namespace with similar prefixes will NOT be picked up.

The problem will therefore only occur if applications create their own namespaces or keys with nil bytes.;;;","15/Sep/18 2:23 PM;denyeart;[https://gerrit.hyperledger.org/r/#/c/26174/] merged in master for v1.3.0.

I'm thinking this should be backported to release-1.2 and release-1.1 as well.  It will require manual, but simple, cherry pick.;;;",,,,,,,,,,,,,,,,,,
MSP definition does not allow for multiple Node OUs for peers/clients,FAB-11245,32086,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,varadatibm,varadatibm,20/Jul/18 10:37 PM,23/Jan/21 10:23 AM,28/Oct/23 3:03 AM,23/Jan/21 10:23 AM,,,,,,,,,,,,fabric-crypto,,,,,0,,,,,,,"Looking at the MSP config from the channel definition, the 

`client_ou_identifier` and `
peer_ou_identifier` under `fabric_node_ous` is not an array which prevent from setting up multiple client/peer ou identifiers.

This is a serious problem for any 'real' deployments which want their CA servers to be HA so have multiple intermediate CAs.",,angelo.decaro,denyeart,varadatibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17472,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrx3:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),angelo.decaro,denyeart,varadatibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","09/Oct/18 11:02 PM;denyeart;I've moved to v1.4.0, but let's get comments from [~elli-androulaki] and [~smithbk] on their view and plan.;;;","14/Jan/19 10:28 PM;angelo.decaro;[~smithbk], I remember we were discussing this some time ago. Shall we resume the discussion? 

How should we format the strings there?;;;","03/Dec/19 6:45 AM;denyeart;[~varadatibm] [~angelo.decaro] Is this still a valid requirement that should be prioritized?;;;","03/Dec/19 11:33 PM;varadatibm;[~denyeart] I believe this is still a valid requirement... without this I am not sure if there is a way to configure the OUs from multiple root/intermediate CAs...;;;","20/Jan/20 10:35 PM;angelo.decaro;we can definitely support this.;;;","23/Jan/21 10:21 AM;denyeart;Discussed in FAB-17472 and we ended up deciding not to make the nodeous an array as that would require a capability change.

Instead, the chosen workaround was to allow the node ou Certificate to be unset. This allows the node ou to be issued from any of the org's CAs.

This was documented with a sample at [https://hyperledger-fabric.readthedocs.io/en/latest/msp.html#identity-classification:]


{code:java}
Certificate: (Optional) Set this to the path of the CA or intermediate CA certificate under which client (peer, admin or orderer) identities should be validated. The field is relative to the MSP root folder. Only a single Certificate can be specified. If you do not set this field, then the identities are validated under any CA defined in the organization’s MSP configuration, which could be desirable in the future if you need to add other CA or intermediate certificates.{code};;;",,,,,,,,,,,,,,,,,,,,
Programming model - Transaction methods in chaincode,FAB-11246,31209,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Done,mbwhite,andrew-coleman,andrew-coleman,20/Jun/18 5:27 PM,03/Dec/19 2:59 AM,28/Oct/23 3:03 AM,07/Dec/18 12:15 AM,,,,,,,,,v1.4.0,,,,,,,,4,chaincode,,,,,,"A new theme ‘programming model enhancements’ aims to introduce a set of higher level abstractions to the Fabric SDKs and chaincode interface.  The aim of this is to simplify the development experience and reduce the amount of boilerplate code that the developer has to write for many of the common use-cases when creating applications that access a Fabric network.  Much of this is driven by feedback from users and from experience with the Hyperledger Composer project which adds business level abstractions on top of the existing Fabric APIs.  Initially, these enhancements will be delivered to the Node.js versions of the SDK and chaincode.

This epic adds the ability to define individual transaction processing functions as an alternative to a single ‘chaincode’ class with an Invoke() method.  The reduces the amount of boilerplate 'method dispatch' code that typically has to be written by the chaincode developer.  Defining a well known structure to a chaincode class will allow development tools (future epic) to introspect the transaction functions and enable features such as content assist when writing the client side code.

Functional delivery will include associated unit and e2e tests to support the feature.

Full details [here|https://docs.google.com/document/d/1_np3fnT_OludRGcF3PbubDooNsH8J-_G7UaWhk8a_cU/edit?usp=sharing]

 

+*EDIT*+ - information fed back from users is being held [here|https://docs.google.com/document/d/1adtrpG-IWlpOUWxDwFbiQq_trh_aleKnTyAR3I5rmm8/edit?usp=sharing] commentable in Google Docs
----
Checklist
 - Implementation, unit test, function and integration tests within the repo
 - Documentation
 - Updates to the main fabric docs (Ed P)
 - Updates to the repos readme for Node and GO
 - Sample using these features (node and go)
 - Current sample/tutorial available in [https://github.com/mbwhite/chaincode-commericalpaper]
 - Where should this move to
 - Tutorials
 - Check with Ed Prosser re where/if
 - Performance
 - Check with NickL if any performance issues or should be added to test
 - System Test
 - LatitiaH?
 - Typescrtip definitions",,alacambra,andrew-coleman,aviralwal,awjh-ibm,C0rWin,denyeart,EdProsser,gennadyl,guoger,isaacwch,jmason900,joe-alewine,jyellick,lesleyannj,mbwhite,muralisr,n-horiguchi,odowdaibm,silliman,SjirNijssen,sstone1,yacovm,yoheiueda,zRich,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-307,,,,,,,,,,,,,,,,,,Done,,Reviewed,,Required,,,Programming model - Transaction methods in chaincode,,,,Required,,,,"1|hzzfin:",,,,No,Required,,,,,,,,,,"[Andrew Coleman and Matthew White to add test plan details, including integration, interop, and system test plans.  Coordinate with Nick Lincoln as needed on system test plans.]

Systest Prime: Nick Lincoln",,,,,,alacambra,andrew-coleman,aviralwal,awjh-ibm,C0rWin,denyeart,EdProsser,gennadyl,guoger,isaacwch,jmason900,joe-alewine,jyellick,lesleyannj,mbwhite,muralisr,n-horiguchi,odowdaibm,silliman,SjirNijssen,sstone1,yacovm,yoheiueda,zRich,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/18 5:29 PM;odowdaibm;Hello [~SjirNijssen] - this is the second JIRA that we discussed - it adds more structure to chaincode, evolving them towards a more formal smart contract.  Feel free to comment here, and participate via Google doc too.  Thanks.;;;","20/Jun/18 5:47 PM;odowdaibm;Hello [~bobbiejc] - here's the JIRA and referenced Google doc for chaincode structure - moving Fabric closer to a formal smart contract definition;;;","20/Jun/18 10:02 PM;SjirNijssen;Congratulations with this step forward.

In the associated document I read: 
This also allows for future transaction level endorsement policies to be supported.

I want to repeat that not having available function based endorsement policies will be a showstopper in many business applications that have to do with government regulations. I hope the people that have the power to decide on 2.3 will remove that showstopper for Fabric.;;;","21/Jun/18 12:47 AM;SjirNijssen;Excuse me, 2.3 was a bad typo above; of course 1.3 is meant;;;","21/Jun/18 2:36 AM;yacovm;{quote} The transaction functions will be discoverable{quote}

how?;;;","27/Jun/18 8:19 PM;mbwhite;After some prototyping, I have updated the Google-doc linked above.

 

Also as example of what a SmartContract would look like please see [https://github.com/mbwhite/chaincode-examples/tree/europa|https://github.com/mbwhite/chaincode-examples/tree/europa];;;","06/Jul/18 7:10 PM;mbwhite;The GoogleDoc has been updated, as have the example repo mentioned above. 
Would encourage you to look at this repo - as tries to show in a real example how chaincode could be written. 

[~yacovm] I want to read up on the discovery features within 1.2, and see how these could be incorporated. ;;;","06/Jul/18 7:47 PM;yacovm;{quote}Yacov Manevich I want to read up on the discovery features within 1.2, and see how these could be incorporated.
{quote}
sure... you can read about it [here|https://hyperledger-fabric.readthedocs.io/en/latest/discovery-overview.html] and if we end up having state-based endorsement in v1.3 then we can add endorser queries per *namespace:key* and not only per namespace as it is now.

*However*:
{quote}Having functions as a first class entity could enable possible future enhancements such as permit per-function endorsement policies - e.g. each function would have rules defining who had to endorse transactions for that function, rather than a single policy at the chaincode level governing all functions. However we are not proposing to implement these enhancements at this point.
{quote}
(This is from the google document)


 Doing so would cripple Fabric's security:

Let's assume we have organizations *A, B, C* and a chaincode with 2 functions, *f* and *g* each with its own endorsement policy:
 * function *f*'s endorsement policy is *A* and *B*,
 * function *g*'s endorsement policy is (*A* and *C*) or (*B* and *C*).
 * *f* controls asset transfer, while *g* control asset creation.
 Since you execute transactions on only a subset of peers, if *A* and *C* collude, they can dishonestly transfer assets by crafting a transaction that claims to invoke *g*, but one that has an artificial read-write set that actually does something that *g* can't do (transfer an asset, something that only *f* can do) and signing it with a private key that corresponds to an identity from organization *A*, and a private key that corresponds to an identity from organization *C*.
 When the peers would validate this transaction, they'd use *g*'s endorsement policy and the business impact on the system would be that an asset was moved without consent from organization *B*, even though the endorsement policy of *f* should have prevented this from happening.

Clearly, this happens because since Fabric is an execute-order-validate blockchain - the transactions are executed on a subset of the peers, and if the endorsement policy is satisfied by the endorsements of the transaction - you have no real way of knowing whether the transaction was executed honestly or not since the peers are ignorant of how the transaction write set was created based on the read set and the chaincode proposal and thus can't distinguish between a maliciously crafted one from an honest one.;;;","06/Jul/18 10:33 PM;mbwhite;Thanks for the explanation; I'm still 'digesting' the details - together with the state-based endorsement - so I may edit this comment later..

Yes I can see how in the example you've cited how the data's integrity could be compromised. To summarise - as both functions have access to the same state namespace both create access and modify the state date (i.e. produce the same read/write sets) that would be endorsed.   By putting the endorsement policy at the namespace level forces that policy to apply to everything. 

How much is this though, a consequence of poor configuration, rather than a 'design' problem?  In the per fn case it is putting more responsibility on to the admin to get the policies correct - but they have to get the policy correct for other endorsement strategies as well. 

Will keep reviewing...

;;;","06/Jul/18 10:49 PM;yacovm;{quote}How much is this though, a consequence of poor configuration, rather than a 'design' problem? In the per fn case it is putting more responsibility on to the admin to get the policies correct - but they have to get the policy correct for other endorsement strategies as well.
{quote}
 

But if you assume:
 * more than 1 function in the chaincode,
 * a per-function endorsement policy model and endorsement policies for functions that are not the same

Then you are automatically and immediately open for the kind of abuse I have outlined.;;;","06/Jul/18 11:00 PM;sstone1;[~yacovm] putting functions to one side, I now have a bigger question based on your responses above. Is there anything in Fabric that ensures that the chaincode ever got executed as part of a valid transaction? It sounds like organisations can collude and craft their own artificial read write sets that do anything (even if the chaincode says otherwise), as long as enough organisations sign those read write sets to meet the endorsement policy. Is my understanding correct?;;;","06/Jul/18 11:16 PM;yacovm;{quote}It sounds like organisations can collude and craft their own artificial read write sets that do anything (even if the chaincode says otherwise), as long as enough organizations sign those read write sets to meet the endorsement policy. Is my understanding correct?
{quote}
 

Of course... that's exactly what the endorsement policy is for. To define the minimal set of organizations that the channel admins trust not to be hacked/collude altogether.;;;","06/Jul/18 11:58 PM;sstone1;[~yacovm] OK, so chaincode is nothing more than a simple way to generate read/write sets. If you want to have any trust that the business rules encoded in the chaincode are actually being enforced, then you must be specified as a mandatory endorser in the endorsement policy. I suspect if that was made clear to end users then I suspect all endorsement policies would read ""everybody must sign"" - but fine ;-)

Anyway, to combat the abuse you outline - could we not have a combination of chaincode level endorsement policies and function level endorsement policies? Why do we have to have one or the other?

The chaincode could have an endorsement policy that states that all transactions must be endorsed by a set of organisations S1. Function F could have an endorsement policy that states that a transaction for the function F must be signed by a set of organisations S2. In order for a transaction calling function F to be deemed valid, all organisations in both S1 and S2 must endorse the transaction.

This would allow the minimal set of organisations you mention above to be specified at the chaincode level - for example S1 might contain a highly trusted party such as the industry regulator - to ensure that the specified function has been executed. You could then enforce that a set of additional organisations in S2 must endorse the transaction at the function level. ;;;","07/Jul/18 12:53 AM;yacovm;{quote}I suspect if that was made clear to end users then I suspect all endorsement policies would read ""everybody must sign""
{quote}
No... of course not. If both Alice and Bob sign that Bob gave Alice money then Carol shouldn't sign that because she believes that if both Alice and Bob signed the transaction then it is OK.

Anyway, to combat the abuse you outline - could we not have a combination of chaincode level endorsement policies and function level endorsement policies? Why do we have to have one or the other?

 

But then the function would be the only function in the chaincode namespace. 
Please read [~mbwhite] 's comment - it explains the core issue pretty well:

 
{quote}Yes I can see how in the example you've cited how the data's integrity could be compromised. To summarise - as both functions have access to the same state namespace both create access and modify the state date (i.e. produce the same read/write sets) that would be endorsed. By putting the endorsement policy at the namespace level forces that policy to apply to everything.
{quote}
 

................

 
{quote}The chaincode could have an endorsement policy that states that all transactions must be endorsed by a set of organizations S1. Function F could have an endorsement policy that states that a transaction for the function F must be signed by a set of organizations S2. In order for a transaction calling function F to be deemed valid, all organizations in both S1 and S2 must endorse the transaction.
{quote}
But... how do you (a peer) *know* at commit time that the chaincode executed function F, without re-running function *F* itself at time of commit?;;;","07/Jul/18 4:19 AM;jyellick;Architecturally, per-function endorsement policies don't make any sense.  

As [~yacovm] points out above, endorsement policy is what gives the system assurances that the output of a transaction corresponds to the transaction's intent.  A chaincode with per-function endorsement policies will be as insecure as the most lenient endorsement policy.

Any endorsement based validation logic which inspects the proposal's intent (function and or parameters) is something that I strongly oppose.  IMO, the only way to sanely do intent based validation is to execute the entire transaction at commit time (in which case, executing before ordering makes no sense).  This is a model Fabric needs to support, and one it is planning to, but a hybrid model of pre-order execution for endorsement and post-order intent based validation gives the worst of both worlds and invites security problems.

Most likely, the goals of per-function endorsement can actually be achieved with the more conceptually sound 'state-based-endorsement', where different parts of the chaincode namespace have different endorsement policies.  If, by convention, a chaincode function only writes into a particular subset of the chaincode namespace, and that subset has been assigned an endorsement policy, then a very similar affect is achieved, but without any of the insecurity introduced by intent based validation.  The key difference here is that the validation logic is dictated by what the chaincode invocation does, and not what it claims to do.;;;","09/Jul/18 4:09 AM;sstone1;[~jyellick] [~yacovm] okay, understood. 

We need to keep the discussion on track to what we're planning on implementing under this JIRA, which is functions as a first class concept in Fabric, instead of Invoke() functions with boilerplate dispatch tables to improve the chaincode and application development experience.

I've updated the associated Google Docs to remove the reference to function level endorsement policies as something that _could_ be done as a future enhancement; as you've described above, this does not sound possible with the way Fabric works today.;;;","09/Jul/18 5:47 AM;yacovm;{quote}functions as a first class concept in Fabric, instead of Invoke() functions with boilerplate dispatch tables to improve the chaincode and application development experience.
{quote}
 

I have an additional question (if I may) but before let me make sure that I understood properly:
{quote}A class *must* extend  SmartContract as follows.

*class MySmartContract extends SmartContract \{*

 *constructor() \{*

    *    **super(<optional namespace string>)*

 *}*

 *async myTransaction1(api, arg_1, arg_2, arg_3) \{*

 *}*

 *async myTransaction2(api, arg_1, arg_2) \{*

 *}*

 *async myQuery1(api, arg1) \{*

    *    **return results;*

 *}*

*}*

 

The arguments are expanded from the requested, rather than be passed as a single array
{quote}
 

The above is from the google doc. 
 So, what I understood is that the chaincode shim would:
 # Take the Fabric *repeated bytes args* from the [chaincode input|https://github.com/hyperledger/fabric/blob/master/protos/peer/chaincode.proto#L54] protobuf message passed to the shim
 # Cast the first byte array of the *repeated bytes args* to a string and infer from it the function of the object to invoke
 # Shift the *repeated bytes args*
 # Treat the shifted *repeated bytes args* as parameters to the function inferred in step (2).

 

*1)* Is this correct? 
*2)* If so - then are the remaining arguments going to be just byte arrays ? 
*3)* If not - then how are they going to be represented? Surely they can't be represented by any specific type, since they can be encoded by any way the application developer wants (i.e - protobuf, XML, JSON, strings, ASN1, Thrift, etc. etc.)

 

 ;;;","09/Jul/18 5:49 PM;mbwhite;1) Almost... but following the model how the arguments are marshaled today. 
i.e. following the pattern of the getFunctionaAndParameters() in the stub. 

JavaScript being duck-typed gives freedom here. 

So the parameters will be received by the functions as they would be today if you called getFunctionAndParameters()


 
;;;","09/Jul/18 7:53 PM;yacovm;{quote}i.e. following the pattern of the getFunctionaAndParameters() in the stub.
{quote}
 

This just assumes these are UTF-8 encoded strings though, no?
What if the client application sends a sequence of bytes in the arguments that can't be encoded as a UTF-8 string, like a single byte that is equal to 255 (all bits are set), 2 bytes that are 255,255, etc. 
These (as far as I know) are not valid UTF-8 encoded strings and thus the encoding will fail, and the bytes that are going to be passed into the function implementation of the chaincode application writer would vanish.

A simple node.js example can demonstrate it:

 
{code}
var ByteBuffer = require('bytebuffer');
var buff = ByteBuffer.allocate(2);
buff.writeByte(255);
buff.writeByte(255);
console.log(buff.buffer.byteLength); // prints 2
var newBuff = ByteBuffer.fromUTF8(buff.toUTF8());
console.log(newBuff.buffer.byteLength); // prints 0
{code}
 

 

 ;;;","09/Jul/18 8:13 PM;mbwhite;That is true [~yacovm] in principle; hence the base64 encoding commonly used with strings. 

The fabric-node-sdk has within 'chaincodeInvokeRequest' this property

{{args	Array.<string>	An array of string arguments specific to the chaincode's 'Invoke' method}}
(ref: https://fabric-sdk-node.github.io/global.html#ChaincodeInvokeRequest)

So for bytes that couldn't be encoded, the contract between the application and sdk/chaincode interface would have been broken. 
The stub would also have issues with such data.;;;","27/Jul/18 12:07 PM;jmason900;The new programming model adds options easily without removing any capabilities – a clear win.
Fabric will offer a new, optional, easy application abstraction model that simplifies developing business blockchain applications.  It provides an easier starting point for many companies with simpler blockchain use cases and those new to blockchain. The expected impacts include: 

    • shorter learning curves 
    • lower development  costs
    • shorter time to value
    • exponential increase in Fabric adoption

The new application layer provides introspection services as well. This metadata opens opportunities for  build tools that can generate: 

    • new blockchain contracts from contract models and named network configuration objects
    • blockchain client applications for those contracts
    • REST api servers for those contracts
    • Simple front-end applications using the REST api servers 

Fabric has become the “go to” framework for robust, production-level blockchain solutions in much of the real world today. As the set of features, supported environments and performance continue to improve, Fabric expands the wide set of use cases it covers well. 

The key takeaways for the new optional Fabric easy application layer value adds include: 

    • it dramatically lowers the time and cost to create simple blockchain applications
    • it does not limit in any way the Fabric full application model available for rich, scalable blockchain solutions
    • It provides access to the full application model as needed through network objects and other properties 
    • It positions Fabric as a platform that is easy to start with and scales rapidly to any level to meet business requirements
    • It makes Fabric the smart investment as a blockchain platform
    • It dramatically increases platform adoption and growth

The initial application client for the new application easy layer is the Nodejs SDK.

As a design pattern, adding layers of abstraction normally adds business value in many domains since it addresses additional use cases. In database, I have a physical data model for an order header and a related order detail table. I use a logical view as needed to access orders. I also have access to the related physical tables and their metadata in the database catalog. There is a need for access at both levels and the relations are clear between physical and logical levels. We even add more data services layers as required.

That’s my 10 cents on where this fits..

Note on documentation and training: 

Our samples and documentation need to demonstrate 3 things clearly:
    • the easy layer application solution and life cycle 
    • the full layer application solution and life cycle ( our existing samples do that well ) 
    • the integration of the application easy layer to full layer wherever needed 
;;;","10/Aug/18 12:18 AM;SjirNijssen;Hi Matthew,

I am studying the tutorial. I keep a list of the typos. But I am more interested in the contents.

You state under the heading: 
""What needs to be stored in the ledger?
One of the most important questions to be handled. It is not appropriate to store all the data elements in the [Fabric blockchain] system - only the parts that are essential to maintain the single source of truth.""

When I see how much overhead is stored in a Fabric block, I would recommend in the name of keep it simple, not to have a parallel database with less important data. I believe it is not worth the hassle.

I look forward to your opinion on this view.
  ;;;","10/Aug/18 1:06 AM;SjirNijssen;Hi Matthew,

Let me first say that I like very much the approach that is now taken to simplify the user interface. A very good step forward.

When reading further in the tutorial I come across the following:

""A data model of what needs to be stored and how it will be persisted is important; this will [be] determine[d] by the requirements of the business and they also determine] (((delete: and be determined by end-of-delete))) the operations that are performed on this data.""

""Remember the [state] data [part] on the ledger can be thought of as a single 'state of key value pairs'. Operations are performed using this state (and supplied parameters), from which a set of changes to the state are produced [the write-set] - that are then applied to create a new state, [provided the endorsement and validation is positive.]""

I hope this format is ok with you.  ;;;","05/Sep/18 5:59 PM;sstone1;[~denyeart] just wanted to make a clear statement on where we are with this epic; transaction methods and the smart contract APIs will be delivered for Fabric v1.3, but only for Node.js and JavaScript/TypeScript. As discussed, we will look to deliver Golang and Java support in Fabric v1.4.;;;","11/Sep/18 10:59 PM;denyeart;Based on discussions with Anthony, moving to v1.4.0 as an early beta.;;;","01/Oct/18 8:04 PM;mbwhite;Updates as a result of feedback

- https://jira.hyperledger.org/browse/FABN-940

 ;;;","23/Jan/19 1:21 PM;denyeart;[~mbwhite] Please check children stories to make sure status and FixVersion are correct. I for one don't have a good idea of what remains for v2.0 versus what is intended to be deferred to Future.;;;"
Add configuration to create _global_changes db,FAB-11247,32092,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,firas.qutishat,firas.qutishat,firas.qutishat,21/Jul/18 2:07 AM,10/Aug/18 2:37 AM,28/Oct/23 3:03 AM,10/Aug/18 2:36 AM,,,,,,,,,v1.3.0,,,fabric-ledger,,,,,0,,,,,,,"Add feature to enable or disable create _global_changes db.

 

couchdb recommended to delete _global_changes db if you don't use it because this db will get bigger in short time and you don't want to waste system resources on compacting it regularly.

 

[ttp://docs.couchdb.org/en/latest/install/setup.html#single-node-setup|http://docs.couchdb.org/en/latest/install/setup.html#single-node-setup]

 ",,denyeart,firas.qutishat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjbb:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,firas.qutishat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Aug/18 2:37 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/24619/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Assist the Hyperledger Sawtooth team with migrating to the Fabric CI pipeline.,FAB-11249,32103,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jtclark,jtclark,21/Jul/18 4:33 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,,,,,,0,CI_Pipeline,sawtooth,stale-item,,,,"The Hyperledger Sawtooth team is looking to migrate their project(s) over to the Fabric CI pipeline for their Continuous Integration needs, as a means to transition Sawtooth builds to our HL infrastructure.  This work will include:

* Requirements Gathering
* The creation Jenkins jobs via the Fabric CI job creation process (i.e the addition of Jenkins Job Builder files and associated shell scripts, and etc.)
* Jenkins Sandbox testing

/cc [~rberg2], [~pankajgoyal]",,jtclark,rberg2,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjcf:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtclark,rberg2,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/18 3:26 AM;rberg2;I have the JJB files up for review here: [https://gerrit.hyperledger.org/r/#/c/24671/]

I was having trouble getting the uploads to nexus working but otherwise these are almost identical to the JJB files we are using.;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup existing missing data references,FAB-11252,32107,32194,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,nirro,manish-sethi,manish-sethi,21/Jul/18 6:22 AM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,26/Jul/18 11:19 PM,,,,,,,,,v1.3.0,,,fabric-gossip,,,,,0,,,,,,,"In the current code, while committing a block to the ledger, the gossip/coordinator passes the info about private data that could not be fetched. However, this info is limited to the collections that the peer is  eligible (as per the latest collection config) to receive but the gossip could not pull it from other peers - ([https://github.com/hyperledger/fabric/blob/release-1.2/gossip/privdata/coordinator.go#L226).] In the current implementation, this information passed on to ledger is not used in any manner by ledger. Though, it's mostly harmless to pass on this info from the gossip to the ledger, still it can cause confusion in the code - primarily because of the names of the structs that are used for this (namely - `MissingPrivateData`) https://github.com/hyperledger/fabric/blob/release-1.2/core/ledger/ledger_interface.go#L185

According to the new design, the ledger would maintain a bookkeeping about the missing data about the collections beyond the scope of the latest collection configurations because the peer can be added to the collection at some later point in time as well.

Keeping above in mind, it will be good to remove the above code and delete this struct (`MissingPrivateData`)  from ledge_interface.go",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfk:y",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jul/18 11:19 PM;manish-sethi;This information can be used as per the new design;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix RELEASE_COMMIT,FAB-11253,32108,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,rameshthoomu,rameshthoomu,21/Jul/18 8:00 AM,25/Apr/19 12:07 AM,28/Oct/23 3:03 AM,25/Apr/19 12:07 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx29b:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use CouchDB: Index definition for use with Fauxton interface,FAB-11254,32110,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,taoyouxian,taoyouxian,21/Jul/18 3:27 PM,23/Jan/20 7:29 AM,28/Oct/23 3:03 AM,23/Jan/20 7:29 AM,,,,,,,,,,,,,,,,,0,stale-item,,,,,,"1. *fabric: [https://github.com/hyperledger/fabric/blob/release-1.2/examples/chaincode/go/marbles02/marbles_chaincode.go]*

2. *fabric-samples: [https://github.com/hyperledger/fabric-samples/blob/release-1.1/chaincode/marbles02/go/marbles_chaincode.go]*

 

The information in the above link is not the same, ""fabric"" is correct.
 The second link provides the user with (Note that docType and owner fields must be prefixed with the ""data"" wrapper), and the operation in [using-couchdb|https://hyperledger-fabric.readthedocs.io/en/release-1.1/build_network.html#using-couchdb] teaches us to use couchdb, and I follow the sample-rule but failed. Now, I realize that creating marble index is not the same in the above link, so I make this request.

Solution: To delete ""Note that docType and owner fields must be prefixed with the ""data"" wrapper"" when creating marble index in *fabric-samples:* https://github.com/hyperledger/fabric-samples/blob/release-1.1/chaincode/marbles02/go/marbles_chaincode.go.

 ",,sykesm,taoyouxian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjdb:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,taoyouxian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:29 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
questions about instantiation policy in Hyperledger Fabric,FAB-11255,32111,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,Velen,Velen,21/Jul/18 7:35 PM,23/Jan/20 7:33 AM,28/Oct/23 3:03 AM,23/Jan/20 7:33 AM,v1.1.0,,,,,,,,,,,,,,,,1,stale-item,,,,,,"I've checked about the official doc about Chaincode. Now I have some questions about the instantiation policy:
 # Is the instantiation policy to be used for limiting who can install the chaincode?

 # Does the instantiation policy have any connection with the chaincode signature?

 # Now there're 3 Orgs in the network(Org1, Org2, Org3). If I want to make a limitation that the chaincode could only be installed just by Org1 and Org2. What should my instantiation policy be?",,sykesm,Velen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Required,ghx-label-6,,instantiation policy,To Do,No,,Unset,No,,,"1|hzzjdj:",,,,Unset,Required,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,Velen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:33 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Update packer image with 0.4.10 baseimage,FAB-11265,32122,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,sambhavdutt,rameshthoomu,rameshthoomu,23/Jul/18 4:44 PM,26/Jul/18 4:55 AM,28/Oct/23 3:03 AM,26/Jul/18 4:55 AM,,,,,,,,,,,,fabric-ci,,,,,0,,,,,,,"Latest thirdparty image 0.4.10 has been pushed to Docker Hub. Fabric and Fabric-ca repos are dependent on these images and it's taking time to pull these images for every patchset.

Cache 0.4.10 baseimage, couchdb, kafka and zookeeper images in x86_64 build nodes. This reduces the build time.",,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx29j:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/18 5:29 AM;sambhavdutt;A change is in progress to update packer. 
/packer/provision/docker.sh file will be deleted and the same details will be available in /packer/provision/local-docker.yaml

Comment added in Gerrit to request upgrade to 0.4.10, waiting for update.

https://gerrit.hyperledger.org/r/#/c/23427/15/packer/provision/local-docker.yaml;;;","26/Jul/18 4:54 AM;sambhavdutt;Packer script has been updated with 0.4.10 baseimage version.
https://gerrit.hyperledger.org/r/#/c/24763/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"As a fabric developer, I can explicitly enable token processing capabilities in the channel configuration",FAB-11266,32127,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,sykesm,sykesm,23/Jul/18 9:45 PM,03/Dec/19 3:04 AM,28/Oct/23 3:03 AM,08/Nov/18 1:07 AM,,,,,,,,,,,,,,,,,0,fabtoken,,,,,,"Capabilities are used to gate features and functions that impact a network of peers. We need to establish a capability name (and associated configuration support) to enable the token features of fabric.

Acceptance: I can define the new capability in an config update transaction, submit it, and observe the peer can support the new capability.

 

3 points",,sykesm,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12006,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-11144,,,No,,Unset,No,,,"1|hzzjqv:",,,,Unset,Unset,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Nov/18 1:07 AM;wenjian;This issue is a duplicate of FAB-12006. The token capability CR [https://gerrit.hyperledger.org/r/#/c/26762/] is already merged under FAB-12006.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure developer, I want to create a serialized protocol buffer message that provides the parameters for a FabToken system",FAB-11267,32128,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,sykesm,sykesm,23/Jul/18 9:52 PM,14/Jan/20 12:12 AM,28/Oct/23 3:03 AM,14/Jan/20 12:12 AM,,,,,,,,,,,,,,,,,0,fabtoken,stale-item,,,,,"Acceptance: I can create a serialized protocol buffer message from a human readable YAML document that provides the FabToken initialization parameters. Validation is expected on the input such that inconsistent data is flagged.

 ",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjr3:",,,,Unset,Unset,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure developer, I want the committing peers to setup a FabToken validation and transaction processor components using default, fixed set of parameters for a channel",FAB-11268,32129,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,sykesm,sykesm,23/Jul/18 9:55 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,,,,,,0,stale-item,,,,,,"Acceptance: Setup runs, and internal state of the peer indicate the FabToken initialization with the right parameters.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjrb:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Improve configtx.yaml description of batch size parameters.,FAB-11269,32131,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Jul/18 10:39 PM,08/Jan/19 6:53 PM,28/Oct/23 3:03 AM,24/Jul/18 1:09 AM,,,,,,,,,v1.3.0,,,fabric-tools,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjrj:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE adds channel event support in burst mode,FAB-11271,32134,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,24/Jul/18 12:01 AM,07/Aug/18 11:57 PM,28/Oct/23 3:03 AM,07/Aug/18 11:57 PM,,,,,,,,,,,,,,,,,0,,,,,,,"PTE supports channel event (channel and filteredBlock) and latencies (proposal, transaction ack, and event) in burst transaction modes traffic.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-2247,,,No,,Unset,No,,,"1|hzzjs7:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"03/Aug/18 11:26 PM;dongming;https://gerrit.hyperledger.org/r/#/c/25103/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Retire dormant maintainers,FAB-11272,32146,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,24/Jul/18 4:21 AM,25/Jul/18 5:25 AM,28/Oct/23 3:03 AM,25/Jul/18 5:25 AM,,,,,,,,,,,,fabric-docs,,,,,0,,,,,,,"Retire maintainers that have been dormant for the past 6+ months:

Jim Zhang

Yaoguo Jiang

 

Fabric policy:

Maintainers may be removed ""for prolonged inactivity (3 or more months)"".

""A maintainer removed for inactivity should be restored following a sustained resumption of contributions and reviews (a month or more) demonstrating a renewed commitment to the project.""",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwtmv:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Jul/18 4:25 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/24675/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Peer fails sending endorsement response to HFC even after chaincode execution completion,FAB-11273,32147,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,rhegde,rhegde,24/Jul/18 4:53 AM,05/Dec/18 6:21 AM,28/Oct/23 3:03 AM,05/Dec/18 6:21 AM,v1.0.6,,,,,,,,,,,fabric-peer,,,,,0,,,,,,,"*Fabric Release* - Fabric 1.0.6

*Description*

We encountered issue where multiple PEER failed to send the Endorsement Response and reported Execution Timeout.

Execution Flow
 * HFC sent endorsement request to the Peer
 * Peer received the request and sent the same to the chaincode for Endorsement Processing
 * Chaincode completed the execution by using the couch database as world state ledger  

{code:java}
ESC[36m2018-07-23 20:32:52.192 CEST [chaincode] processStream -> DEBU da6ESC[0m [a724cefa]Received message COMPLETED from shim

ESC[36m2018-07-23 20:32:52.192 CEST [chaincode] HandleMessage -> DEBU da7ESC[0m [a724cefa]Fabric side Handling ChaincodeMessage of type: COMPLETED in state ready

ESC[36m2018-07-23 20:32:52.192 CEST [chaincode] HandleMessage -> DEBU da8ESC[0m [a724cefaf6517cdf1858aef72dc0e486d25abebd00cfff04674b212d26de41aa]HandleMessage- COMPLETED. Notify

ESC[36m2018-07-23 20:32:52.192 CEST [chaincode] notify -> DEBU da9ESC[0m notifying Txid:a724cefaf6517cdf1858aef72dc0e486d25abebd00cfff04674b212d26de41aa
ESC[36m2018-07-23 20:32:52.192 CEST [chaincode] Execute -> DEBU daaESC[0m Exit
ESC[36m2018-07-23 20:32:52.192 CEST [endorser] callChaincode -> DEBU dabESC[0m Exit
ESC[36m2018-07-23 20:32:52.192 CEST [lockbasedtxmgr] GetTxSimulationResults -> DEBU dacESC[0m Simulation completed, getting simulation results
ESC[36m2018-07-23 20:32:52.192 CEST [lockbasedtxmgr] Done -> DEBU dadESC[0m Done with transaction simulation / query execution [a92a2043-a49e-4a66-9a91-ec04058820d5]
{code}
Communication between chaincode, peer and couch database is also good at this point of time looking at the logs.

Peer failed to send the response to the HFC and finally there was execute timeout reported in the Peer Logs after default ExecuteTimeout (30sec). 
{code:java}
ESC[36m2018-07-23 20:32:52.192 CEST [lockbasedtxmgr] Done -> DEBU dadESC[0m Done with transaction simulation / query execution [a92a2043-a49e-4a66-9a91-ec04058820d5]
....  30 seconds wait ...
ESC[36m2018-07-23 20:33:22.193 CEST [chaincode] Execute -> DEBU de1ESC[0m Exit
ESC[31m2018-07-23 20:33:22.193 CEST [chaincode] ExecuteChaincode -> ERRO de2ESC[0m Error executing chaincode: Failed to execute transaction (Timeout expired while executing transaction)
ESC[36m2018-07-23 20:33:22.193 CEST [endorser] callChaincode -> DEBU de3ESC[0m Exit
{code}
 

*Note:*
 # After restarting 1 of the peer from 3 affected, that peer was able to process Endorsement and send response to the HFC.

*Impact*

Any endorsement sent to the impacted peer always result in Execute Timeout thus result unavailability of Service.",,rhegde,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/18 7:53 AM;rhegde;upload1-7acf3a03f85a_peer02 .log;https://jira.hyperledger.org/secure/attachment/15362/upload1-7acf3a03f85a_peer02+.log",,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjuf:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rhegde,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/18 5:55 AM;sykesm;There's not really enough here to guess what might be going on. In addition to the 52 log entries that have been removed before the timeout, the front half of execute is missing.

Can you collect all of the logs and only obfuscate or redact information that can't be shared? Without the front half of the execution processing, it will be nearly impossible to diagnose.;;;","24/Jul/18 8:00 AM;rhegde;Hello Matt, I have uploaded the partial log, please check if it is helpful or else we can go over webex (CC: [~simsc] ). I have the setup also preserved and hope it is not disturbed by our tomorrow ET morning.;;;","25/Jul/18 3:07 AM;sykesm;There's not enough information in the partial log. All the log shows is that the handler attempts to send a transaction to escc and doesn't progress. There are two likely causes.

1. channel processing from the in-process stream that connects the chaincode handler to escc is hung up
2. a previous dispatch to escc has not completed and the handler is block on the ""serialLock"" in the handler

Since the entire log is not attached, neither can be discounted. I also don't know what logging is currently enabled. Some evidence of the first candidate would likely show up in the ""inproccontroller"" module and issues with the second would be observable with a dump of go routines and my be visible with escc logs and chaincode logging from previous transactions.;;;","25/Jul/18 6:22 AM;rhegde;Following log levels were enabled after discussing on Rocket Chat with [~denyeart].

 
{code:java}
peer logging setlevel chaincode DEBUG

peer logging setlevel endorser DEBUG

peer logging setlevel ledger DEBUG

peer logging setlevel state DEBUG

peer logging setlevel couchdb DEBUG

peer logging setlevel txmgr DEBUG
{code}
 

I cannot upload the complete log as it contains sensitive information and there are many items to obfuscate. I can have webex to go over it. At this point we have restarted the peers.;;;","05/Dec/18 6:21 AM;sykesm;None of the resolution options are a good fit but it seems like the original issue, while not understood, was resolved by restarting the peer processes.;;;",,,,,,,,,,,,,,,,,,,,,,
CI Failures: Daily test suite for v1.2,FAB-11274,32148,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,24/Jul/18 5:06 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,26/Jul/18 12:19 AM,,,,,,,,,,,,fabric-quality,,,,,0,ci-failure,,,,,,"There are a number of CI failures in the fabric-test repo that are caused by changing text and missing files.
{code:java}
18:38:20       Assertion Failed: Expected response was could not find chaincode with name 'myex02_b'; received Error occurred ['docker exec peer0.org1.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/0f24e9328ba411e8b1a3fa163e4bcec2/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query --name myex05 --ctor \'{\\""Args\\"": [\\""query\\"",\\""myex02_b\\"", \\""sum\\"", \\""\\""]}\' --channelID behavesystest ""']: 2018-07-19 22:38:18.519 UTC [viperutil] getKeysRecursively -> DEBU 001 Found map[string]interface{} value for peer.BCCSP{code}
The missing chaincode text now says
{code:java}
chaincode myex02_b not found{code}
These failures can be seen in the console:

[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-svt-x86_64/86/consoleFull]

This issue was found because the jenkins plugin was not able to read the output that was written to the test result xml files.",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjun:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,true,"24/Jul/18 6:37 AM;latitiah;https://gerrit.hyperledger.org/r/24681;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Security certificates - Describe purpose and way to generate/get certificate,FAB-11275,32149,,Documentation,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,pandrejko,nileshdeotale,nileshdeotale,24/Jul/18 6:28 AM,13/Jan/21 3:55 AM,28/Oct/23 3:03 AM,13/Jan/21 3:55 AM,v1.1.0,v1.2.0,,,,,,,,,,fabric-crypto,fabric-docs,,,,0,,,,,,,"Being new to hyperledger fabric, I've not been able to find clear description of various security certificates that are required for a say multi org blockchain service to work. 

For example - Describe the purpose of each certificate below -  how and why each of those certificates are generated? Provide example each for peer cli command, node sdk, go sdk, java sdk.. or any other option, if available.
{code:java}
peer0.org2.example.com
 ├── msp
 │ ├── admincerts
 │ │ └── Admin@org2.example.com-cert.pem
 │ ├── cacerts
 │ │ └── ca.org2.example.com-cert.pem
 │ ├── keystore
 │ │ └── 0d9f726081123237b570b6af6877666bc8f365746f9329d6dd8a5f54e53e2ab_sk
 │ ├── signcerts
 │ │ └── peer0.org2.example.com-cert.pem
 │ └── tlscacerts
 │   └── tlsca.org2.example.com-cert.pem
 └── tls
   ├── ca.crt
   ├── server.crt
   └── server.key
{code}
8 directories, 8 files",,elli-androulaki,nileshdeotale,pandrejko,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwth3:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,nileshdeotale,pandrejko,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/18 7:13 AM;pandrejko;[~joe-alewine] [~negupta] [~wjzheng] ^^^;;;","26/Jul/18 2:58 AM;pandrejko;[~bmos299] - Is there someone from your team that we could collaborate with on this topic - I'd really like to get this done.;;;","31/Jul/18 5:59 AM;pandrejko;Found this information in the docs: [https://hyperledger-fabric.readthedocs.io/en/release-1.2/msp.html#msp-setup-on-the-peer-orderer-side]

Still investigating;;;","02/Aug/18 6:36 AM;pandrejko;Here are my notes from what I've discovered so far:

*Admin cert* – This folder contains a list of identities allowed to administer (installing/instantiating chaincode, creating channels, etc).) the peer. Therefore, in order to be able to administer a peer, the entity administering the peer (such as a client application) must have their signcert (their public key identity) the peer's /admincerts folder. This folder contains a list of identities that define the actors who have the role of administrators for this entity.  Typically resides under /mnt/crypto/peer/peer/msp/admincerts

*CA Cert –* Each entity has its own CA. The CA represents the root cert. It is the top level certificate which represents the trusted authority for the network. The cert in the /cacert folder is the public CA identity. The CA is the _issuer_ for the signcert and admin certs. The *CACert* is a bundle of CA certificates that you use to verify that the server is really the correct site you're talking to (when it presents its certificate in the SSL handshake). Typically resides under: /mnt/crypto/peer/peer/msp/cacerts

*Intermediate certs* – Each entity has its own Intermediate CA which has their certificates issued by the root CA or another intermediate authority, allowing the establishment of a “chain of trust” for any certificate that is issued by any CA in the chain. This ability to track back to the Root CA allows the function of CAs to scale while still providing security. Typically resides under /mnt/crypto/peer/peer/msp/intermediatecerts

*Keystore = Private key* - Transactions are signed by private key and then verified by their public key which has been shared with other entities. Access to this folder must be limited only to the identities of users who have administrative responsibility on the peer. Reside in /mnt/crypto/peer/peer/msp/keystore.

*Signcert = Public key -* Signcerts are used for endorsing functions --  for example to sign a transaction proposal response, as part of the endorsement phase. /mnt/crypto/peer/peer/msp/signcerts

*TLS certs* – Use of TLS is strongly recommended to provide a secured connection; used to secure the +communication+ channel; Needs to be shared with every party that the entity will communicate with. Cert resides in  /mnt/msp/tls/cacert.pem and is typically passed on CLI commands. You need to get the TLS cert from the TLS CA.;;;","02/Aug/18 7:30 AM;yacovm;[~pandrejko] - 
{quote}*TLS certs* – Use of TLS is strongly recommended to provide a secured connection; used to secure the +communication+ channel; Needs to be shared with every party that the entity will communicate with. Cert resides in  /mnt/msp/tls/cacert.pem and is typically passed on CLI commands. You need to get the TLS cert from the TLS CA.
{quote}
These are TLS CA certificates that need to be shared among the parties... the actual TLS certificates are exchanged during the TLS handshake.

[~nileshdeotale] - 
{quote}Being new to hyperledger fabric, I've not been able to find clear description of various security certificates that are required for a say multi org blockchain service to work. {quote}

the [MSP section|https://hyperledger-fabric.readthedocs.io/en/latest/msp.html] is a very good source of information for this.;;;","12/Sep/18 6:42 PM;elli-androulaki;Hi, [~nileshdeotale] is this item still relevant?;;;","10/Jan/20 7:44 AM;pandrejko;[~nileshdeotale]I am in the process of adding a new key concept topic for MSP. See https://github.com/hyperledger/fabric/pull/307;;;","13/Jan/21 3:54 AM;pandrejko;This has been addressed for a while now in the MSP Key Concept topic that we created. https://hyperledger-fabric.readthedocs.io/en/latest/membership/membership.html#msp-structure

Closing.;;;","13/Jan/21 3:55 AM;pandrejko;Done - https://hyperledger-fabric.readthedocs.io/en/latest/membership/membership.html#msp-structure;;;",,,,,,,,,,,,,,,,,,
fabric-test verify job exceeds 2 hours and aborts,FAB-11276,32150,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,latitiah,scottz,scottz,24/Jul/18 6:32 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,03/Oct/18 4:35 AM,v1.3.0,,,,,,,,v1.4.0,,,fabric-ci,,,,,0,ci-failure,,,,,,"We should increase the 120-minute timeout, to avoid failures. But It takes too long, so we should find the causes and reduce the expected time too. One example is this patchset which was submitted after 2pm on Jul 23: https://jenkins.hyperledger.org/job/fabric-test-verify-x86_64/1579/consoleFull
 * I see 5 minutes to clone into the submodules. Then I see 10 minutes to clone fabric repo. Why so long?
 * Also the behave tests take an hour. Why so long? Let's look for efficiencies. And can we eliminate some scenarios, putting some into the daily test suite instead? (Refer to FAB-7918)

 
*18:15:30* Cloning into 'cello'...*18:16:00* Submodule path 'cello': checked out '6b238b4d655176ad3a07fe83851589fe2bdd2dbc'*18:16:00* Cloning into 'fabric'...*18:18:24* Submodule path 'fabric': checked out 'a6d1ec2feaf2bd6b6132118f629914a3df5a64be'*18:18:24* Cloning into 'fabric-ca'...*18:19:00* Submodule path 'fabric-ca': checked out '0334c90d57eb4f880a382382a9442546d2f04646'*18:19:00* Cloning into 'fabric-samples'...*18:19:07* Submodule path 'fabric-samples': checked out '1745c996b3e524efb06778336bba6e713082d022'*18:19:07* Cloning into 'fabric-sdk-node'...*18:19:27* Submodule path 'fabric-sdk-node': checked out '2b862d774a64efb027725d1d6d3cb8c79b67b6a8'
 

18:19:35 Clone FABRIC REPO
*18:19:35* Cloning into '/w/workspace/fabric-test-verify-x86_64/gopath/src/github.com/hyperledger/fabric'...
*18:28:10*

 

 ",,denyeart,latitiah,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjuv:",,,,Unset,Unset,,,Submit any patchset to fabric-test gerrit repository.,,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,latitiah,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"25/Jul/18 2:53 AM;latitiah;First in a series: https://gerrit.hyperledger.org/r/24711;;;","25/Jul/18 3:02 AM;latitiah;Noticed this in one of the builds: https://jenkins.hyperledger.org/job/fabric-test-verify-x86_64/1582/console
{code}
18:32:31     When an admin deploys chaincode at path ""../../fabric-test/chaincodes/shimApiDriver/node"" with args [""""] with name ""myShimAPI"" with language ""NODE"" # steps/endorser_impl.py:101
19:42:41 Build timed out (after 120 minutes). Marking the build as failed.
{code}

Notice the time jump where the system seemed to freeze for 50 minutes before it timed out.;;;","25/Jul/18 1:27 PM;scottz;So this may be a fabric bug. Feel free to create another bug for another component.;;;","21/Aug/18 9:24 PM;denyeart;[~scottz] [~latitiah] Is this reproducible? What are the next steps?;;;","31/Aug/18 11:34 PM;scottz;I thought we ([~latitiah]) merged some changes to partially address this, but I don't see a link to a changeset; plus, are there more changes in the works?;;;","06/Sep/18 9:15 PM;denyeart;[~latitiah] Can you provide an update?;;;","06/Sep/18 9:37 PM;latitiah;I have updated the Makefile to reduce the time that it takes to clone fabric and fabric-ca repos (by only cloning a specific branch instead of the entire repo).

We can reduce the cloning of the submodule time by using
{code}
git submodule add --depth 1 -- repository path
git submodule update --depth -- [<path>...] {code}

Addressing the bdd test scenarios, there are some tests that can be removed if there are duplicate system integration tests that exist in the fabric repo.

Though the timeouts do not happen as often as they were at one time with the first change, once these 2 additional things are complete, it addressed the specific points laid out in the issue description.;;;","03/Oct/18 4:35 AM;sambhavdutt;This has been fixed. The fabric-verify jobs are successful and they take around 50 minutes to complete.

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/1996/;;;",,,,,,,,,,,,,,,,,,,
Split ExtractCertificateHashFromContext to 2 methods,FAB-11277,32156,31897,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/Jul/18 8:16 PM,01/Aug/18 12:45 AM,28/Oct/23 3:03 AM,25/Jul/18 5:29 AM,,,,,,,,,,,,,,,,,0,raft,,,,,,"The raft orderer uses TLS pinning and compares TLS certificates extracted from the gRPC stream to the ones that are present in the config very frequently, and because of that - it's better to just compare the raw bytes than to make the certificate pass sha256 each time.

 

Therefore, to reuse ExtractCertificateHashFromContext - we need to split it into 2 methods, 1 that extracts the certificate, and ones that returns the hash of it and calls the first one.",,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjvj:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Aug/18 12:43 AM;kchristidis;https://gerrit.hyperledger.org/r/c/24697/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Address data races in gossip/comm,FAB-11278,32158,31531,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,inbarbadian,yacovm,yacovm,24/Jul/18 9:20 PM,03/Oct/18 9:55 PM,28/Oct/23 3:03 AM,30/Aug/18 12:09 AM,,,,,,,,,,,,,,,,,0,hygiene,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjvr:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Aug/18 8:33 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/24701/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update the weekly GoAST jobs to GoSEC according to the recent update.,FAB-11280,32160,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,rameshthoomu,rameshthoomu,24/Jul/18 11:29 PM,27/Jul/18 11:15 PM,28/Oct/23 3:03 AM,27/Jul/18 11:15 PM,,,,,,,,,,,,fabric-ci,,,,,0,,,,,,,"There have been recent changes and the GoAST has been changed to GoSEC. 

The location for this in fabric was *github.com/GoASTScanner/gas/cmd/gas/...* , 
Now it has been modified to *github.com/securego/gosec/cmd/gosec/...*

The jobs and code in fabric, fabric-ca have been updated accordingly for this and tested in sandbox.

*Build Logs*

https://logs.hyperledger.org/sandbox/vex-yul-hyp-jenkins-2/fabric-ca-gosec-weekly-x86_64/1/ 

https://logs.hyperledger.org/sandbox/vex-yul-hyp-jenkins-2/fabric-gosec-weekly-x86_64/1/
",,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjw7:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/18 12:53 AM;sambhavdutt;Change updated on Gerrit.

https://gerrit.hyperledger.org/r/#/c/24703/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Introduce Range Query Chaincode APIs for Partial and Full Composite Keys,FAB-11281,32162,,Story,Backlog,FAB,Fabric,software,denyeart,,,High,,,Senthil1,Senthil1,24/Jul/18 11:57 PM,11/Jan/21 3:53 PM,28/Oct/23 3:03 AM,,,,,,,,,,Future,,,fabric-ledger,,,,,0,stale-item,,,,,,"After creating a start and end composite key, user cannot use `_GetStateByRange()_` as we check whether the passed key is simple or composite key. If a composite key is passed to the range query, we would throw error. 

With `_GetStateByPartialCompositeKey(objectType, []keys)_`, user can get all entry for a given partial composite key only. However, user cannot perform a range query with a start and end key. 

We need provided the following two APIs to allow range query using composite keys. 
 # `GetStateByCompositeKeyRange(compositeStartKey, compositeEndKey)`
 # `GetStateByPartialCompositeKeyRange(partialCompositeStartKey, partialCompositeEndKey)`",,mbwhite,Senthil1,sykesm,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10797,FAB-8342,FAB-18355,,,,,,,FABCN-175,,,FAB-10520,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwtqs:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,Senthil1,sykesm,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
peer version cmd shouldn't set msp config,FAB-11282,32167,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,asaningmaxchain123,asaningmaxchain123,25/Jul/18 3:05 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,,,,,,0,stale-item,,,,,," 

as we know,when i want to use the *peer* cmd,we must set the environment variable,but for *peer version* cmd, i think it's unnecessary to set the env for msp config.",,asaningmaxchain123,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjxb:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),asaningmaxchain123,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/18 3:18 AM;denyeart;[~asaningmaxchain123] Please clarify the description... I think you mean you SHOULDN'T have to set the msp config?  Need more than one sentence in the description to describe the context, expected behavior, and current behavior please.;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Minor logging issues.,FAB-11283,32168,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,rickr,rickr,rickr,25/Jul/18 3:45 AM,25/Jul/18 7:13 PM,28/Oct/23 3:03 AM,25/Jul/18 7:13 PM,v1.2.0,,,,,,,,v1.2.0,,,fabric-sdk-java,,,,,0,,,,,,,Gerrit https://gerrit.hyperledger.org/r/#/c/24727/,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzjxj:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure developer, I want the committing peers to setup a Token-specific validation and transaction processor components using a fixed set of parameters for a channel",FAB-11285,32175,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,elli-androulaki,elli-androulaki,25/Jul/18 4:13 PM,12/Sep/18 6:50 PM,28/Oct/23 3:03 AM,12/Sep/18 6:50 PM,v1.2.0,,,,,,,,Future,,,fabric-crypto,fabric-peer,,,,0,,,,,,,"Transaction processing at committing peer side consists of validation (vscc) & commitment (performed by a transaction processor component). The token-related setup of the committing peer expands on both components.

*Acceptance*: I can setup the peer using a fixed set of fabtoken parameters, and monitor the internal state of the peer to ensure that FabToken initialisation took place with the right parameters.",,daijianw,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11144,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,,,No,,Unset,No,,,"1|hzzjyf:",,,,No,Unset,,,(Please add steps to reproduce),2.0,No,,,,,,Unset,,Unset,,(Please add usage information),daijianw,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token application developer, I want to initialise a simplified Token client library using sample FabToken parameters without signing abilities",FAB-11286,32176,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,KaoutarEL,elli-androulaki,elli-androulaki,25/Jul/18 4:32 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,12/Mar/19 5:53 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,"{color:#333333}Acceptance: I can setup the token client library using a fixed set of token parameters, and monitor the internal state of the created client to ensure that its initialization took place with the right parameters. The client library would not provide any further functionality at this point beyond setup.{color}",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11342,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,FAB-11153,,,No,,Unset,No,,,"1|hzwqfk:z",,,,No,Unset,To Do,,(Please add steps to reproduce),3.0,No,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (committing peer) developer, I can fully process an ""issue tokens""  transaction ",FAB-11287,32177,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mathiasb303,elli-androulaki,elli-androulaki,25/Jul/18 4:59 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,08/Nov/18 6:54 PM,,,,,,,,,Future,,,fabric-crypto,fabric-peer,,,,0,fabtoken,,,,,," 
*Acceptance*: A (simulated) client generates an ""issue tokens"" transaction that is submitted
to the system.  Upon receiving this transaction, a committing peer redirects its processing to its 
Token specific validation & commit components.  FabToken custom validation ensures that
the tokens requested to be issued are of the right form (e.g., of acceptable type), and custom 
commit ensures that the transaction creator is authorised to issue tokens.  Upon successful
transaction validation and commit, the ledger state is updated to reflect this. The ledger APIs 
can be used to retrieve the committed data. ",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11172,FAB-11175,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-11144,,,No,,Unset,No,,,"1|hzwqfl:",,,,No,Unset,To Do,,(Please add steps to reproduce),5.0,Yes,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (committing peer) developer, I can recognise and process a  “transfer tokens"" transaction without impacting the ledger state",FAB-11291,32182,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,angelo.decaro,elli-androulaki,elli-androulaki,25/Jul/18 5:38 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,27/Nov/18 5:29 PM,,,,,,,,,Future,,,fabric-crypto,fabric-peer,,,,0,fabtoken,,,,,,"*Acceptance*: A (simulated) client generates a “transfer tokens"" transaction. 
 Upon receiving this transaction, a committing peer redirects its processing to its 
 FabToken specific validation & commit components.  The transaction is to be
 marked as invalid in the end and will have no impact on the ledger state.

 

This one relates to the extension of proto messages to accommodate transfer 
transactions and of the corresponding test, testing that transfer token transactions 
go through the right path.

The first part was already completed (proto messages definition). The second is 
blocked by  FAB-11175.",,elli-androulaki,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11175,,,FAB-11292,,,,,FAB-11371,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,FAB-11144,,,No,,Unset,No,,,"1|hzwqfl:1",,,,No,Unset,To Do,,(Please add steps to reproduce),2.0,No,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Nov/18 5:28 PM;mathiasb303;This work item has been addressed by FAB-11371. The TMS component in the committing peer takes a Ledger as input, and it does not care if it is a fake ledger or a real ledger.;;;","27/Nov/18 5:29 PM;mathiasb303;The TMS component in the committing peer takes a Ledger as input, and it does not care if it is a fake ledger or a real ledger.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (committing peer) developer, I can fully process a “transfer tokens""  transaction ",FAB-11292,32183,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mathiasb303,elli-androulaki,elli-androulaki,25/Jul/18 5:42 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,04/Feb/19 9:54 PM,,,,,,,,,Future,,,fabric-crypto,fabric-peer,,,,0,fabtoken,,,,,,"Given FAB-11942, and FAB-11371 this item refers to the testing that the transfer transactions can be correctly processed by the existing tx processor and TMS implementation.",,elli-androulaki,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11291,FAB-11371,,,,,,,,,,,,,,,,,,,FAB-12688,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-11144,,,No,,Unset,No,,,"1|hzwqfl:2",,,,No,Unset,To Do,,(Please add steps to reproduce),2.0,Yes,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Nov/18 6:51 PM;mathiasb303;The requirements of this JIRA item (FAB-11292) are addressed by the token transfer end-to-end test in FAB-12688.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I want the peer to accommodate requests to compute an issue proof given specific parameters",FAB-11293,32184,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mathiasb303,elli-androulaki,elli-androulaki,25/Jul/18 5:52 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,04/Feb/19 10:44 PM,,,,,,,,,,,,fabric-crypto,fabric-peer,,,,0,fabtoken,,,,,,"*Acceptance*: A (simulated) client constructs a request to construct an issue proof by 
providing the type and quantity of assets to be introduced into the system, and invokes 
the peer API. The peer would need to construct the corresponding issue proof and return 
it to the (simulated) client. Acceptance would require that the constructed proof matches 
the input parameters of the request.",,elli-androulaki,Garrett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11296,,,,,FAB-11145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-11149,,,No,,Unset,No,,,"1|hzwqfl:3",,,,Unset,Unset,To Do,,(Please add steps to reproduce),3.0,Yes,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,Garrett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a  token infrastructure (peer) developer, I want to accommodate “list of my tokens” requests",FAB-11294,32185,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,elli-androulaki,elli-androulaki,25/Jul/18 5:56 PM,03/Dec/19 3:03 AM,28/Oct/23 3:03 AM,04/Feb/19 10:39 PM,,,,,,,,,,,,fabric-crypto,fabric-peer,,,,0,fabtoken,,,,,,"*Acceptance*: A fabric client can be built to submit a “list tokens” query to a peer.
Peer considers the current ledger state and returns the tokens owned by the 
creator of the query; if the creator of the query does not have permission to read
the channel’s data, the request is rejected; if the creator of the query does not own
any tokens the peer would return an empty list. The client can observe the correctness
of successive “list my tokens” queries in correlation with the content of the ledger.",,binhn,elli-androulaki,Hangyu_FJH,praveen.j,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-11149,,,No,,Unset,No,,,"1|hzzilr:",,,,Unset,Unset,,,(Please add steps to reproduce),2.0,Yes,,,,,,Unset,,Unset,,(Please add usage information),binhn,elli-androulaki,Hangyu_FJH,praveen.j,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Aug/18 2:11 AM;praveen.j;Will this list all the tokens of all types that a user owns? I am assuming it will be possible to setup and issue multiple token types in a single channel.;;;","09/Aug/18 3:02 AM;wenjian;CR for task FAB-11358: https://gerrit.hyperledger.org/r/#/c/25287/;;;","09/Aug/18 3:03 AM;wenjian;[~praveen.j] Yes, this will list all the tokens of all types that a user owns.

 ;;;","14/Aug/18 2:57 AM;wenjian;To align with token issue and transfer, abandoned the above CR 25287 and created a new CR https://gerrit.hyperledger.org/r/#/c/25393/.;;;","07/Sep/18 2:29 PM;wenjian;New CR is https://gerrit.hyperledger.org/r/#/c/26052/;;;",,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I can respond to requests for computing transfer proofs given specific parameters",FAB-11295,32186,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mathiasb303,elli-androulaki,elli-androulaki,25/Jul/18 5:59 PM,04/Feb/19 10:43 PM,28/Oct/23 3:03 AM,04/Feb/19 10:43 PM,,,,,,,,,Future,,,fabric-crypto,fabric-peer,,,,0,fabtoken,,,,,,"*Acceptance*: A (simulated) client submits a query providing the transfer request’s details
(i.e., identifiers of tokens to be issued, and expected recipients). The peer is to consult the 
current state of the ledger to retrieve the details of the tokens that are to be transferred, and 
assess if they exist, have not been spent, and  if the inputs match the quantity of the intended 
outputs, i.e., suffice for accommodating the full set of tokens transferred to all the specified 
recipients. If any of these conditions is not met, the peer rejects; otherwise it returns to the 
client a transfer proof.  The peer responds with a transfer proof 
that matches the requester’s parameters. ",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11298,,,,,FAB-11145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-11149,,,No,,Unset,No,,,"1|hzza3r:",,,,Unset,Unset,Next Items- Ledger,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token-based system client developer, I can request from a peer to compute an issue proof matching my issue needs ",FAB-11296,32188,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,KaoutarEL,elli-androulaki,elli-androulaki,25/Jul/18 6:33 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,04/Feb/19 10:05 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,"{color:#333333}{color:#333333}Acceptance: A client function (cwLib) takes as arguments the type and quantity of assets to be introduced into the system via a token issue process. As a result the function would request from a peer to construct the corresponding issue proof. {color}{color}
{color:#333333} {color:#333333}The issue proof is returned to the client and the function will return successfully only if the returned issue proof is correctly computed.{color}{color}",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-11153,,,No,,Unset,No,,,"1|hzwqfl:4",,,,Unset,Unset,To Do,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token-based application/client developer, I can query  the ledger through a peer I trust to list my tokens into the system ",FAB-11297,32189,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,elli-androulaki,elli-androulaki,25/Jul/18 6:40 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,17/Jan/19 7:34 AM,,,,,,,,,,,,fabric-crypto,,,,,0,fabtoken,,,,,,*Acceptance*: Client wallet library for token operations in Fabric is enhanced with a function that takes as arguments the long term identity of an end-user and queries a peer on the set of tokens that this end-user owns. The peer receives the request and acts according to the specification of previous story.,,elli-androulaki,PaulStuart,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-11153,,,No,,Unset,No,,,"1|hzwqfl:5",,,,Unset,Unset,To Do,,(Please add steps to reproduce),2.0,Yes,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,PaulStuart,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Aug/18 12:41 PM;wenjian;CR:  [https://gerrit.hyperledger.org/r/#/c/26290/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token system client developer, I can request from a peer to compute a transfer proof matching my transfer token needs",FAB-11298,32190,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,KaoutarEL,elli-androulaki,elli-androulaki,25/Jul/18 6:41 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,12/Mar/19 6:02 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,"{color:#333333}Acceptance: A client function (cwLib) takes as arguments the identifiers of the tokens {color}{color:#333333}to be transferred and the expected recipients. As a result the function would request from a peer to construct the corresponding transfer proof. The transfer proof is returned to the client and the function will return successfully only if the returned transfer proof is correctly computed.{color}
{color:#333333} {color}",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11295,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-11153,,,No,,Unset,No,,,"1|hzwqfl:6",,,,Unset,Unset,To Do,,(Please add steps to reproduce),2.0,Yes,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token-based application/client developer, I can create and submit a transaction to request the  transfer of my tokens",FAB-11299,32191,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,elli-androulaki,elli-androulaki,25/Jul/18 6:44 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,27/Nov/18 12:50 AM,,,,,,,,,,,,fabric-crypto,,,,,0,fabtoken,,,,,,Here the client token library leverages the responses from the prover peer to create a token transaction for transfer that is submitted to the ordering service.,,elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-11153,,,No,,Unset,No,,,"1|hzwqfl:7",,,,Unset,Unset,To Do,,(Please add steps to reproduce),2.0,Yes,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Oct/18 12:56 AM;elli-androulaki;Covered by this CR: https://jira.hyperledger.org/browse/FAB-12574;;;","26/Nov/18 10:42 PM;wenjian;Above Jira issue was wrong. This issue is covered by https://jira.hyperledger.org/browse/FAB-11300. CR is https://gerrit.hyperledger.org/r/#/c/26461/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"As a token-based application/client developer, I can submit a transaction for  issuing new tokens into the system",FAB-11300,32192,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,elli-androulaki,elli-androulaki,25/Jul/18 6:46 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,27/Nov/18 12:51 AM,,,,,,,,,,,,fabric-crypto,,,,,0,fabtoken,,,,,,Here the client token library leverages the responses from the prover peer to create a token transaction for issue that is submitted to the ordering service.,,elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-14106,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-11153,,,No,,Unset,No,,,"1|hzwqfl:8",,,,Unset,Unset,To Do,,(Please add steps to reproduce),5.0,Yes,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Sep/18 1:30 AM;wenjian;CR: https://gerrit.hyperledger.org/r/#/c/26461/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
reconcile missing private data on peers that are authorized to have it - gossip side,FAB-11301,32193,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,nirro,nirro,25/Jul/18 8:41 PM,14/May/19 1:46 AM,28/Oct/23 3:03 AM,06/Sep/18 3:25 PM,,,,,,,,,v1.3.0,,,fabric-gossip,,,,,0,,,,,,,"reconcile missing private data on peers that are authorized to have it - gossip side:
gossip should get from ledger the list of missing private data blocks, and the option to retrieve collection config history. 

for each missing private data block, the peer should be able to filter out from the alive peers the list of peers which possibly have the missing block. the peer will select randomly a peer from the above list and will try to fetch the missing block.

in a successful scenario the peer will commit private data to the ledger, on failure it will retry to fetch it from a different peer, up to a configurable max amount of retries.",,nirro,ScottAllan,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5093,,,FAB-11324,FAB-11598,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-5108,,,No,,Unset,No,,,"1|hzzjzz:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nirro,ScottAllan,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Aug/18 4:42 PM;nirro;WIP - https://gerrit.hyperledger.org/r/#/c/25263/;;;","14/May/19 1:46 AM;ScottAllan;to be clear will  this allow for reconciliation of private data that was committed for any version of the ledger where private data was supported.  That is if I committed private data with v1.2 after upgrade to v1.3 I will be able to reconcile the historic data?;;;",,,,,,,,,,,,,,,,,,,,,,,,,
reconcile missing private data on peers that are authorized to have it - ledger side,FAB-11302,32194,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,nirro,nirro,25/Jul/18 8:42 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,08/Jan/20 1:35 PM,,,,,,,,,v1.4.0,,,fabric-ledger,,,,,0,,,,,,,,,nirro,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5093,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-5108,,,No,,Unset,No,,,"1|hzwqfl:9",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nirro,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable v1.3 MSP type via capability,FAB-11305,32200,,Documentation,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,jyellick,jyellick,26/Jul/18 1:10 AM,11/Sep/18 2:01 AM,28/Oct/23 3:03 AM,11/Sep/18 2:01 AM,,,,,,,,,v1.3.0,,,fabric-docs,,,,,0,idemix,,,,,,"The idemix code with its new identity types etc. is hidden behind the v1.3 capability.  However, one is not defined yet.  This is simply a boilerplate task to create the capability so that it may be used.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-10120,,,No,,Unset,No,,,"1|hzwten:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Sep/18 2:01 AM;jyellick;This was merged quite a while ago. Marking done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Make proto changes to add query metadata and query response metadata,FAB-11306,32201,33216,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,Senthil1,Senthil1,26/Jul/18 1:33 AM,09/Sep/18 4:18 AM,28/Oct/23 3:03 AM,09/Sep/18 4:18 AM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"For pagination, chaincode would pass a query metadata with range/rich queries. The query metadata would contain a page size and a bookmark. 

As a result of a range/rich query with pagination, the peer should return a query response metadata which would contain a fetched records count and a bookmark. 

Hence, we need to define two new messages (1) QueryMetadata, (2) QueryResponseMetadata in the protos_/peer/chaincode_shim.proto_ ",,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk13:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Aug/18 5:18 AM;Senthil1;https://gerrit.hyperledger.org/r/c/24753/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Define new chaincode APIs for range/rich queries to support pagination,FAB-11307,32202,33216,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,Senthil1,Senthil1,26/Jul/18 1:57 AM,09/Sep/18 4:24 AM,28/Oct/23 3:03 AM,09/Sep/18 4:24 AM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"For pagination, chaincode needs to pass a page size and a bookmark when performing a range/rich query. As changing existing range/rich query would break the backward compatibility of existing chaincodes/prod-system, we need to introduce new chaincode APIs. ",,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk1b:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Aug/18 5:19 AM;Senthil1;https://gerrit.hyperledger.org/r/c/24755/5;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Enable the use of '+' as a prefix character for reserved fabric namespace in the DB,FAB-11308,32203,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,jyellick,jyellick,26/Jul/18 2:17 AM,03/Aug/18 2:23 AM,28/Oct/23 3:03 AM,03/Aug/18 2:23 AM,,,,,,,,,v1.3.0,,,fabric-ledger,,,,,0,,,,,,,"The new chaincode lifecycle and impending fabtoken work will both require new reserved namespaces in the statedb.  Presently, we have a few reserved names like 'lscc', but which collide with user specifiable names.

In order to reduce confusion, and to be able to safely add new namespaces, we need a new prefix.  Based on discussions with [~manish-sethi] and [~mastersingh24] it seems like the best character available is {{+}}.

The expectation is that the new lifecycle will reserve the {{+lifecycle}} namespace, and the pending fabtoken work will get the {{+tokens}} namespace.",,chris.elder,denyeart,jyellick,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-11237,,,No,,Unset,No,,,"1|hzzk1j:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),chris.elder,denyeart,jyellick,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Jul/18 5:38 AM;manish-sethi;As I am looking into this, there seems to be some issues in supporting the + char in the couchdb. In the current implementation, the + does not get encoded and in the final URL, it gets replaced by a space char. I tried with manually encoding + as %2B but still couchdb returns an error for this being an invalid name.

[~chris.elder] is looking into this to get more details.

 ;;;","31/Jul/18 12:39 AM;chris.elder;I have a solution for the  + char in the database name.;;;","31/Jul/18 12:43 AM;manish-sethi;Thanks [~chris.elder] for taking this up.;;;","02/Aug/18 3:13 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/24945/;;;",,,,,,,,,,,,,,,,,,,,,,,
PTE: FAB-3832-4i CC Install failed due to ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14094418:SSL routines:ssl3_read_bytes:tlsv1 alert unknown ca.,FAB-11309,32204,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,dongming,nileshdeotale,nileshdeotale,26/Jul/18 2:34 AM,27/Jul/18 11:39 PM,28/Oct/23 3:03 AM,27/Jul/18 11:39 PM,v1.1.0,,,,,,,,,,,fabric-quality,,,,,0,,,,,,,"./pte_driver.sh inFile= CITest/FAB-3832-4i/preconfig/samplecc/runCases-samplecc-install-TLS.txt 



[hfrd-starter-test]  	4.a)Connection Profile retrieved. Network ID = n073ffa959cda4806bc3847fd733374a4
 ____    _____   _____           _____ _    ____       _____  ___ _________
|  _ \  |_   _| | ____|         |  ___/ \  | __ )     |___ / ( _ )___ /___ \
| |_) |   | |   |  _|    _____  | |_ / _ \ |  _ \ _____ |_ \ / _ \ |_ \ __) |
|  __/    | |   | |___  |_____| |  _/ ___ \| |_) |_____|__) | (_) |__) / __/
|_|       |_|   |_____|         |_|/_/   \_\____/     |____/ \___/____/_____|
[PTE-FAB-3832]  Enrolling admin user for org1.
2018/07/12 15:16:24 [INFO] Created a default configuration file at /home/testuser/creds/org1admin/fabric-ca-client-config.yaml
2018/07/12 15:16:24 [INFO] TLS Enabled
2018/07/12 15:16:24 [INFO] generating key: &\{A:ecdsa S:256}
2018/07/12 15:16:24 [INFO] encoded CSR
2018/07/12 15:16:28 [INFO] Stored client certificate at /home/testuser/creds/org1admin/msp/signcerts/cert.pem
2018/07/12 15:16:28 [INFO] Stored root CA certificate at /home/testuser/creds/org1admin/msp/cacerts/n073ffa959cda4806bc3847fd733374a4-org1-ca-stage-blockchain-ibm-com-31011.pem
2018/07/12 15:16:28 [INFO] Stored intermediate CA certificates at /home/testuser/creds/org1admin/msp/intermediatecerts/n073ffa959cda4806bc3847fd733374a4-org1-ca-stage-blockchain-ibm-com-31011.pem
[PTE-FAB-3832]  Uploading admin certificate for org 1.
\{""message"":""ok""}[PTE-FAB-3832]  Enrolling admin user for org2.
2018/07/12 15:16:30 [INFO] Created a default configuration file at /home/testuser/creds/org2admin/fabric-ca-client-config.yaml
2018/07/12 15:16:30 [INFO] TLS Enabled
2018/07/12 15:16:30 [INFO] generating key: &\{A:ecdsa S:256}
2018/07/12 15:16:30 [INFO] encoded CSR
2018/07/12 15:16:34 [INFO] Stored client certificate at /home/testuser/creds/org2admin/msp/signcerts/cert.pem
2018/07/12 15:16:34 [INFO] Stored root CA certificate at /home/testuser/creds/org2admin/msp/cacerts/n073ffa959cda4806bc3847fd733374a4-org2-ca-stage-blockchain-ibm-com-31011.pem
2018/07/12 15:16:34 [INFO] Stored intermediate CA certificates at /home/testuser/creds/org2admin/msp/intermediatecerts/n073ffa959cda4806bc3847fd733374a4-org2-ca-stage-blockchain-ibm-com-31011.pem
[PTE-FAB-3832]  Uploading admin certificate for org 2.
\{""message"":""ok""}[PTE-FAB-3832]  Stoping org1-peer1
\{""message"":""ok""}[PTE-FAB-3832]  Waiting for org1-peer1 to stop...
[PTE-FAB-3832]  exited
[PTE-FAB-3832]  Starting org1-peer1
\{""message"":""ok""}[PTE-FAB-3832]  Waiting for org1-peer1 to start...
[PTE-FAB-3832]  running
[PTE-FAB-3832]  Stoping org2-peer1
\{""message"":""ok""}[PTE-FAB-3832]  Waiting for org2-peer1 to stop...
[PTE-FAB-3832]  exited
[PTE-FAB-3832]  Starting org2-peer1
\{""message"":""ok""}[PTE-FAB-3832]  Waiting for org2-peer1 to start...
[PTE-FAB-3832]  running
[PTE-FAB-3832]  Syncing the channel.
\{""message"":""ok""}[PTE-FAB-3832]  Generating PTE SCFile and userInputs.
[PTE-FAB-3832]  ---------------------------------
[PTE-FAB-3832]  ---------------------------------
[PTE-FAB-3832]  Installing PTE Chaincode.
[PTE-FAB-3832]  ---------------------------------
[PTE-FAB-3832]  ---------------------------------
./pte_driver.sh inFile= CITest/FAB-3832-4i/preconfig/samplecc/runCases-samplecc-install-TLS.txt, tStart=0 iPTE=0 
sdk type supported: sdk=node
sdk type supported: sdk=node
Node Array: CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-install1-TLS.json CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-install2-TLS.json
executing 2 node requests
iPTE: 0, nInstances: 2, tStart: 1531408659551
execution: CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-install1-TLS.json
execution: CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-install2-TLS.json
no python requests
no java requests
[32minfo[39m: [PTE 0 main]: input parameters: Nid=1, uiFile=CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-install2-TLS.json, tStart=1531408659551 PTEid=0
[32minfo[39m: [PTE 0 util]: [setTLS] TLSin: ENABLED, TLS: 1
[32minfo[39m: [PTE 0 main]: [Nid=1 pte-main] TLS= 1
[32minfo[39m: [PTE 0 main]: channelName: defaultchannel
[32minfo[39m: [PTE 0 main]: channelOrgName.length: 1, channelOrgName: org2
[32minfo[39m: [PTE 0 main]: svcFile;  CITest/CISCFiles/config-chan1-TLS.json
[32minfo[39m: [PTE 0 main]: GOPATH:  
[32minfo[39m: [PTE 0 main]: main - cfgTimeout: 200000
[32minfo[39m: [PTE 0 main]: [performance_main] org= org2, org Name= org2
[32minfo[39m: [PTE 0 main]: chaincode language: golang, path: github.com/hyperledger/fabric-test/chaincodes/samplecc/go
[32minfo[39m: [PTE 0 main]: [performance_main] Deploy: user= admin, secret= 06684bd0d4
[32minfo[39m: [PTE 0 util]:  >>>> getting the org admin
[32minfo[39m: [PTE 0 util]:  org2 admin_cert defined
[32minfo[39m: [PTE 0 main]: input parameters: Nid=0, uiFile=CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-install1-TLS.json, tStart=1531408659551 PTEid=0
[32minfo[39m: [PTE 0 util]: [setTLS] TLSin: ENABLED, TLS: 1
[32minfo[39m: [PTE 0 main]: [Nid=0 pte-main] TLS= 1
[32minfo[39m: [PTE 0 main]: channelName: defaultchannel
[32minfo[39m: [PTE 0 main]: channelOrgName.length: 1, channelOrgName: org1
[32minfo[39m: [PTE 0 main]: svcFile;  CITest/CISCFiles/config-chan1-TLS.json
[32minfo[39m: [PTE 0 main]: GOPATH:  
[32minfo[39m: [PTE 0 main]: main - cfgTimeout: 200000
[32minfo[39m: [PTE 0 main]: [performance_main] org= org1, org Name= org1
[32minfo[39m: [PTE 0 main]: chaincode language: golang, path: github.com/hyperledger/fabric-test/chaincodes/samplecc/go
[32minfo[39m: [PTE 0 main]: [performance_main] Deploy: user= admin, secret= 752b37a3a2
[32minfo[39m: [PTE 0 util]:  >>>> getting the org admin
[32minfo[39m: [PTE 0 util]:  org1 admin_cert defined
[32minfo[39m: [PTE 0 main]: [performance_main:Nid=0] Successfully enrolled user 'admin'
[32minfo[39m: [PTE 0 main]: [performance_main:Nid=1] Successfully enrolled user 'admin'
[32minfo[39m: [PTE 0 main]: [chaincodeInstall] org: org1, org Name: org1, channel name: defaultchannel
[32minfo[39m: [PTE 0 main]: [chaincodeInstall] org: org2, org Name: org2, channel name: defaultchannel
[32minfo[39m: [PTE 0 main]: [chainAddOrderer] channel name:  defaultchannel
[32minfo[39m: [PTE 0 util]: [getTLSCert] key: orderer, subkey: orderer0
[32minfo[39m: [PTE 0 main]: [chainAddOrderer] channel name:  defaultchannel
[32minfo[39m: [PTE 0 util]: [getTLSCert] key: orderer, subkey: orderer0
[32minfo[39m: [PTE 0 main]: [channelAddPeer] channel name:  defaultchannel
[32minfo[39m: [PTE 0 util]: [getTLSCert] key: org2, subkey: org2-peer1
[32minfo[39m: [PTE 0 main]: [getCCID] Nid: 1, chaincode_id: sample_cc_ch1, chaincode_ver: v0
[32minfo[39m: [PTE 0 main]: [channelAddPeer] channel name:  defaultchannel
[32minfo[39m: [PTE 0 util]: [getTLSCert] key: org1, subkey: org1-peer1
[32minfo[39m: [PTE 0 main]: [getCCID] Nid: 0, chaincode_id: sample_cc_ch1, chaincode_ver: v0
E0712 15:17:23.448205370     345 ssl_transport_security.cc:188] ssl_info_callback: error occured.

E0712 15:17:23.448359038     345 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14094418:SSL routines:ssl3_read_bytes:tlsv1 alert unknown ca.
E0712 15:17:24.482267013     345 ssl_transport_security.cc:188] ssl_info_callback: error occured.

E0712 15:17:24.482678578     345 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14094418:SSL routines:ssl3_read_bytes:tlsv1 alert unknown ca.
[31merror[39m: [Remote.js]: Error: Failed to connect before the deadline
[31merror[39m: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Failed to connect before the deadline
    at checkState (/home/testuser/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:838:16)
[31merror[39m: [PTE 0 main]: [chaincodeInstall] org(org1): install proposal was bad
[31merror[39m: [PTE 0 main]: [chaincodeInstall] Failed to send install Proposal in (defaultchannel:org1) or receive valid response. Response null or status is not 200. exiting...
[31merror[39m: [Remote.js]: Error: Failed to connect before the deadline
[31merror[39m: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Failed to connect before the deadline
    at checkState (/home/testuser/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:838:16)
[31merror[39m: [PTE 0 main]: [chaincodeInstall] org(org2): install proposal was bad
[31merror[39m: [PTE 0 main]: [chaincodeInstall] Failed to send install Proposal in (defaultchannel:org2) or receive valid response. Response null or status is not 200. exiting...
0 --- Install Done
[PTE-FAB-3832]  ---------------------------------
[PTE-FAB-3832]  ---------------------------------
[PTE-FAB-3832]  Instantiating PTE Chaincode.
[PTE-FAB-3832]  ---------------------------------
[PTE-FAB-3832]  ---------------------------------
./pte_driver.sh inFile= CITest/FAB-3832-4i/preconfig/samplecc/runCases-samplecc-instantiate-TLS.txt, tStart=0 iPTE=0 
sdk type supported: sdk=node
Node Array: CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-instantiate-TLS.json
executing 1 node requests
iPTE: 0, nInstances: 1, tStart: 1531408665155
execution: CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-instantiate-TLS.json
no python requests
no java requests
[32minfo[39m: [PTE 0 main]: input parameters: Nid=0, uiFile=CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-instantiate-TLS.json, tStart=1531408665155 PTEid=0
[32minfo[39m: [PTE 0 util]: [setTLS] TLSin: ENABLED, TLS: 1
[32minfo[39m: [PTE 0 main]: [Nid=0 pte-main] TLS= 1
[32minfo[39m: [PTE 0 main]: channelName: defaultchannel
[32minfo[39m: [PTE 0 main]: channelOrgName.length: 1, channelOrgName: org1
[32minfo[39m: [PTE 0 main]: svcFile;  CITest/CISCFiles/config-chan1-TLS.json
[32minfo[39m: [PTE 0 main]: GOPATH:  
[32minfo[39m: [PTE 0 main]: main - cfgTimeout: 200000
[32minfo[39m: [PTE 0 main]: [performance_main] org= org1, org Name= org1
[32minfo[39m: [PTE 0 main]: chaincode language: golang, path: github.com/hyperledger/fabric-test/chaincodes/samplecc/go
[32minfo[39m: [PTE 0 main]: [performance_main] instantiate: user= admin, secret= 752b37a3a2
[32minfo[39m: [PTE 0 util]:  >>>> getting the org admin
[32minfo[39m: [PTE 0 util]:  org1 admin_cert defined
[32minfo[39m: [PTE 0 main]: [performance_main:Nid=0] Successfully enrolled user 'admin'
[32minfo[39m: [PTE 0 main]: [chaincodeInstantiate] org= org1, org name=undefined, channel name=defaultchannel
[32minfo[39m: [PTE 0 main]: [chainAddOrderer] channel name:  defaultchannel
[32minfo[39m: [PTE 0 util]: [getTLSCert] key: orderer, subkey: orderer0
[32minfo[39m: [PTE 0 main]: [channelAddPeer1] channel name: defaultchannel, org: org1
[32minfo[39m: [PTE 0 util]: [getTLSCert] key: org1, subkey: org1-peer1
[32minfo[39m: [PTE 0 main]: [chaincodeInstantiate:Nid=0] ready to initialize channel[defaultchannel]
E0712 15:17:32.952969886     395 ssl_transport_security.cc:188] ssl_info_callback: error occured.

E0712 15:17:32.953045169     395 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14094418:SSL routines:ssl3_read_bytes:tlsv1 alert unknown ca.
E0712 15:17:33.956643661     395 ssl_transport_security.cc:188] ssl_info_callback: error occured.

E0712 15:17:33.956692485     395 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14094418:SSL routines:ssl3_read_bytes:tlsv1 alert unknown ca.
[31merror[39m: [Remote.js]: Error: Failed to connect before the deadline
[31merror[39m: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Failed to connect before the deadline
    at checkState (/home/testuser/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:838:16)
[31merror[39m: [Channel.js]: getChannelConfig - Failed getting channel config. Error: Error: Failed to connect before the deadline
    at checkState (/home/testuser/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:838:16)
[31merror[39m: [Channel.js]: Error: Failed to connect before the deadline
    at checkState (/home/testuser/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/grpc/src/client.js:838:16)
[31merror[39m: [PTE 0 main]: [chaincodeInstantiate:Nid=0] Failed to initialize channel[defaultchannel] due to error:  Error: Error: Failed to connect before the deadline
    at getChannelConfig.then.catch (/home/testuser/go/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/fabric-client/lib/Channel.js:356:27)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
0 --- Instantiation Done",,nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-2247,,,No,,Unset,No,,,"1|hzzk1r:",,,,Unset,Unset,,,Just Follow PTE readme and run test FAB-3832-4i on a IBP starter network.,,Unset,,,,,,Unset,,Unset,,(Please add usage information),nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/18 11:36 PM;nileshdeotale;``` 4.a)Connection Profile retrieved. Network ID = n13bad0c2943e49c38cf637733c4831ef
=============================================================
 E X E C U T E H E L I O A P I S
=============================================================
[hfrd-starter-test] Enrolling admin user for org1.
2018/07/27 14:16:04 [INFO] Created a default configuration file at /home/testuser/creds/org1admin/fabric-ca-client-config.yaml
2018/07/27 14:16:04 [INFO] TLS Enabled
2018/07/27 14:16:04 [INFO] generating key: &\{A:ecdsa S:256}
2018/07/27 14:16:04 [INFO] encoded CSR
2018/07/27 14:16:08 [INFO] Stored client certificate at /home/testuser/creds/org1admin/msp/signcerts/cert.pem
2018/07/27 14:16:08 [INFO] Stored root CA certificate at /home/testuser/creds/org1admin/msp/cacerts/n13bad0c2943e49c38cf637733c4831ef-org1-ca-stage-blockchain-ibm-com-31011.pem
2018/07/27 14:16:08 [INFO] Stored intermediate CA certificates at /home/testuser/creds/org1admin/msp/intermediatecerts/n13bad0c2943e49c38cf637733c4831ef-org1-ca-stage-blockchain-ibm-com-31011.pem
[hfrd-starter-test] Uploading admin certificate for org 1.
{""message"":""ok""}[hfrd-starter-test] Enrolling admin user for org2.
2018/07/27 14:16:11 [INFO] Created a default configuration file at /home/testuser/creds/org2admin/fabric-ca-client-config.yaml
2018/07/27 14:16:11 [INFO] TLS Enabled
2018/07/27 14:16:11 [INFO] generating key: &\{A:ecdsa S:256}
2018/07/27 14:16:11 [INFO] encoded CSR
2018/07/27 14:16:14 [INFO] Stored client certificate at /home/testuser/creds/org2admin/msp/signcerts/cert.pem
2018/07/27 14:16:14 [INFO] Stored root CA certificate at /home/testuser/creds/org2admin/msp/cacerts/n13bad0c2943e49c38cf637733c4831ef-org2-ca-stage-blockchain-ibm-com-31011.pem
2018/07/27 14:16:14 [INFO] Stored intermediate CA certificates at /home/testuser/creds/org2admin/msp/intermediatecerts/n13bad0c2943e49c38cf637733c4831ef-org2-ca-stage-blockchain-ibm-com-31011.pem
[hfrd-starter-test] Uploading admin certificate for org 2.
{""message"":""ok""}[hfrd-starter-test] Stoping org1-peer1
{""message"":""ok""}[hfrd-starter-test] Waiting for org1-peer1 to stop...
[hfrd-starter-test] exited
[hfrd-starter-test] Starting org1-peer1
{""message"":""ok""}[hfrd-starter-test] Waiting for org1-peer1 to start...
[hfrd-starter-test] running
[hfrd-starter-test] Stoping org2-peer1
{""message"":""ok""}[hfrd-starter-test] Waiting for org2-peer1 to stop...
[hfrd-starter-test] exited
[hfrd-starter-test] Starting org2-peer1
{""message"":""ok""}[hfrd-starter-test] Waiting for org2-peer1 to start...
[hfrd-starter-test] running
[hfrd-starter-test] Syncing the channel.
{""message"":""ok""} ____ _____ _____ _____ _ ____ _____ ___ _________
| _ \ |_ _| | ____| | ___/ \ | __ ) |___ / ( _ )___ /___ \
| |_) | | | | _| _____ | |_ / _ \ | _ \ _____ |_ \ / _ \ |_ \ __) |
| __/ | | | |___ |_____| | _/ ___ \| |_) |_____|__) | (_) |__) / __/
|_| |_| |_____| |_|/_/ \_\____/ |____/ \___/____/_____|
[PTE-FAB-3832] Generating PTE SCFile and userInputs.
[PTE-FAB-3832] ---------------------------------
[PTE-FAB-3832] ---------------------------------
[PTE-FAB-3832] Installing PTE Chaincode.
[PTE-FAB-3832] ---------------------------------
[PTE-FAB-3832] ---------------------------------
./pte_driver.sh inFile= CITest/FAB-3832-4i/preconfig/samplecc/runCases-samplecc-install-TLS.txt, tStart=0 iPTE=0 
sdk type supported: sdk=node
sdk type supported: sdk=node
Node Array: CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-install1-TLS.json CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-install2-TLS.json
executing 2 node requests
iPTE: 0, nInstances: 2, tStart: 1532701041627
execution: CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-install1-TLS.json
execution: CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-install2-TLS.json
no python requests
no java requests
info: [PTE 0 main]: input parameters: Nid=1, uiFile=CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-install2-TLS.json, tStart=1532701041627 PTEid=0
info: [PTE 0 main]: TLS: ENABLED
info: [PTE 0 main]: channelName: defaultchannel
info: [PTE 0 main]: channelOrgName.length: 1, channelOrgName: org2
info: [PTE 0 main]: svcFile; CITest/CISCFiles/config-chan1-TLS.json
info: [PTE 0 main]: GOPATH: 
info: [PTE 0 main]: main - cfgTimeout: 200000
info: [PTE 0 main]: [performance_main] org= org2, org Name= org2
info: [PTE 0 main]: chaincode language: golang, path: github.com/hyperledger/fabric-test/chaincodes/samplecc/go
info: [PTE 0 main]: [performance_main] Deploy: user= admin, secret= 91a74ca150
info: [PTE 0 util]: >>>> getting the org admin
info: [PTE 0 util]: org2 admin_cert defined
info: [PTE 0 main]: input parameters: Nid=0, uiFile=CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-install1-TLS.json, tStart=1532701041627 PTEid=0
info: [PTE 0 main]: TLS: ENABLED
info: [PTE 0 main]: channelName: defaultchannel
info: [PTE 0 main]: channelOrgName.length: 1, channelOrgName: org1
info: [PTE 0 main]: svcFile; CITest/CISCFiles/config-chan1-TLS.json
info: [PTE 0 main]: GOPATH: 
info: [PTE 0 main]: main - cfgTimeout: 200000
info: [PTE 0 main]: [performance_main] org= org1, org Name= org1
info: [PTE 0 main]: chaincode language: golang, path: github.com/hyperledger/fabric-test/chaincodes/samplecc/go
info: [PTE 0 main]: [performance_main] Deploy: user= admin, secret= 2c31194f4c
info: [PTE 0 util]: >>>> getting the org admin
info: [PTE 0 util]: org1 admin_cert defined
info: [PTE 0 main]: [performance_main:Nid=1] Successfully enrolled user 'admin'
info: [PTE 0 main]: [chaincodeInstall] org: org2, org Name: org2, channel name: defaultchannel
info: [PTE 0 main]: [chainAddOrderer] channel name: defaultchannel
info: [PTE 0 main]: [performance_main:Nid=0] Successfully enrolled user 'admin'
info: [PTE 0 util]: [getTLSCert] key: orderer, subkey: orderer0
info: [PTE 0 main]: [chaincodeInstall] org: org1, org Name: org1, channel name: defaultchannel
info: [PTE 0 main]: [chainAddOrderer] channel name: defaultchannel
info: [PTE 0 util]: [getTLSCert] key: orderer, subkey: orderer0
info: [PTE 0 main]: [chainAddOrderer] channel orderers: clientCert=null, grpc.max_receive_message_length=-1, grpc.max_send_message_length=-1, grpc.primary_user_agent=grpc-node/1.10.1, _url=grpcs://n13bad0c2943e49c38cf637733c4831ef-orderer.stage.blockchain.ibm.com:31001, , addr=n13bad0c2943e49c38cf637733c4831ef-orderer.stage.blockchain.ibm.com:31001, _request_timeout=200000, 
info: [PTE 0 main]: [channelAddPeer] channel name: defaultchannel
info: [PTE 0 util]: [getTLSCert] key: org1, subkey: org1-peer1
info: [PTE 0 main]: [chainAddOrderer] channel orderers: clientCert=null, grpc.max_receive_message_length=-1, grpc.max_send_message_length=-1, grpc.primary_user_agent=grpc-node/1.10.1, _url=grpcs://n13bad0c2943e49c38cf637733c4831ef-orderer.stage.blockchain.ibm.com:31001, , addr=n13bad0c2943e49c38cf637733c4831ef-orderer.stage.blockchain.ibm.com:31001, _request_timeout=200000, 
info: [PTE 0 main]: [channelAddPeer] channel name: defaultchannel
info: [PTE 0 util]: [getTLSCert] key: org2, subkey: org2-peer1
info: [PTE 0 main]: [channelAddPeer] channel peers: clientCert=null, grpc.max_receive_message_length=-1, grpc.max_send_message_length=-1, grpc.primary_user_agent=grpc-node/1.10.1, _url=grpcs://n13bad0c2943e49c38cf637733c4831ef-org1-peer1.stage.blockchain.ibm.com:31002, , addr=n13bad0c2943e49c38cf637733c4831ef-org1-peer1.stage.blockchain.ibm.com:31002, _request_timeout=200000, , 
info: [PTE 0 main]: [getCCID] Nid: 0, chaincode_id: sample_cc_ch1, chaincode_ver: v0
info: [PTE 0 main]: request_install: \{""targets"":[{""clientCert"":null,""_options"":{""grpc.max_receive_message_length"":-1,""grpc.max_send_message_length"":-1,""grpc.primary_user_agent"":""grpc-node/1.10.1""},""_url"":""grpcs://n13bad0c2943e49c38cf637733c4831ef-org1-peer1.stage.blockchain.ibm.com:31002"",""_endpoint"":\{""creds"":{},""addr"":""n13bad0c2943e49c38cf637733c4831ef-org1-peer1.stage.blockchain.ibm.com:31002""},""_request_timeout"":200000,""_endorserClient"":\{""$channel"":{}},""_roles"":{}}],""chaincodePath"":""github.com/hyperledger/fabric-test/chaincodes/samplecc/go"",""chaincodeId"":""sample_cc_ch1"",""chaincodeType"":""golang"",""chaincodeVersion"":""v0""}
info: [PTE 0 main]: [channelAddPeer] channel peers: clientCert=null, grpc.max_receive_message_length=-1, grpc.max_send_message_length=-1, grpc.primary_user_agent=grpc-node/1.10.1, _url=grpcs://n13bad0c2943e49c38cf637733c4831ef-org2-peer1.stage.blockchain.ibm.com:31002, , addr=n13bad0c2943e49c38cf637733c4831ef-org2-peer1.stage.blockchain.ibm.com:31002, _request_timeout=200000, , 
info: [PTE 0 main]: [getCCID] Nid: 1, chaincode_id: sample_cc_ch1, chaincode_ver: v0
info: [packager/Golang.js]: packaging GOLANG from github.com/hyperledger/fabric-test/chaincodes/samplecc/go
info: [PTE 0 main]: request_install: \{""targets"":[{""clientCert"":null,""_options"":{""grpc.max_receive_message_length"":-1,""grpc.max_send_message_length"":-1,""grpc.primary_user_agent"":""grpc-node/1.10.1""},""_url"":""grpcs://n13bad0c2943e49c38cf637733c4831ef-org2-peer1.stage.blockchain.ibm.com:31002"",""_endpoint"":\{""creds"":{},""addr"":""n13bad0c2943e49c38cf637733c4831ef-org2-peer1.stage.blockchain.ibm.com:31002""},""_request_timeout"":200000,""_endorserClient"":\{""$channel"":{}},""_roles"":{}}],""chaincodePath"":""github.com/hyperledger/fabric-test/chaincodes/samplecc/go"",""chaincodeId"":""sample_cc_ch1"",""chaincodeType"":""golang"",""chaincodeVersion"":""v0""}
info: [packager/Golang.js]: packaging GOLANG from github.com/hyperledger/fabric-test/chaincodes/samplecc/go
info: [PTE 0 main]: [chaincodeInstall] org(org1): install proposal was good
info: [PTE 0 main]: [chaincodeInstall] Successfully sent install Proposal to peers in (defaultchannel:org1) and received ProposalResponse: Status - 200
info: [PTE 0 main]: [chaincodeInstall] org(org2): install proposal was good
info: [PTE 0 main]: [chaincodeInstall] Successfully sent install Proposal to peers in (defaultchannel:org2) and received ProposalResponse: Status - 200
0 --- Install Done
[PTE-FAB-3832] ---------------------------------
[PTE-FAB-3832] ---------------------------------
[PTE-FAB-3832] Instantiating PTE Chaincode.
[PTE-FAB-3832] ---------------------------------
[PTE-FAB-3832] ---------------------------------
./pte_driver.sh inFile= CITest/FAB-3832-4i/preconfig/samplecc/runCases-samplecc-instantiate-TLS.txt, tStart=0 iPTE=0 
sdk type supported: sdk=node
Node Array: CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-instantiate-TLS.json
executing 1 node requests
iPTE: 0, nInstances: 1, tStart: 1532701044392
execution: CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-instantiate-TLS.json
no python requests
no java requests
info: [PTE 0 main]: input parameters: Nid=0, uiFile=CITest/FAB-3832-4i/preconfig/samplecc/samplecc-chan1-instantiate-TLS.json, tStart=1532701044392 PTEid=0
info: [PTE 0 main]: TLS: ENABLED
info: [PTE 0 main]: channelName: defaultchannel
info: [PTE 0 main]: channelOrgName.length: 1, channelOrgName: org1
info: [PTE 0 main]: svcFile; CITest/CISCFiles/config-chan1-TLS.json
info: [PTE 0 main]: GOPATH: 
info: [PTE 0 main]: main - cfgTimeout: 200000
info: [PTE 0 main]: [performance_main] org= org1, org Name= org1
info: [PTE 0 main]: chaincode language: golang, path: github.com/hyperledger/fabric-test/chaincodes/samplecc/go
info: [PTE 0 main]: [performance_main] instantiate: user= admin, secret= 2c31194f4c
info: [PTE 0 util]: >>>> getting the org admin
info: [PTE 0 util]: org1 admin_cert defined
info: [PTE 0 main]: [performance_main:Nid=0] Successfully enrolled user 'admin'
info: [PTE 0 main]: [chaincodeInstantiate] org= org1, org name=undefined, channel name=defaultchannel
info: [PTE 0 main]: [chainAddOrderer] channel name: defaultchannel
info: [PTE 0 util]: [getTLSCert] key: orderer, subkey: orderer0
info: [PTE 0 main]: [chainAddOrderer] channel orderers: clientCert=null, grpc.max_receive_message_length=-1, grpc.max_send_message_length=-1, grpc.primary_user_agent=grpc-node/1.10.1, _url=grpcs://n13bad0c2943e49c38cf637733c4831ef-orderer.stage.blockchain.ibm.com:31001, , addr=n13bad0c2943e49c38cf637733c4831ef-orderer.stage.blockchain.ibm.com:31001, _request_timeout=200000, 
info: [PTE 0 main]: [channelAddPeer1] channel name: defaultchannel, org: org1
info: [PTE 0 util]: [getTLSCert] key: org1, subkey: org1-peer1
info: [PTE 0 main]: [channelAddEvent] channel name: defaultchannel
info: [PTE 0 util]: [getTLSCert] key: org1, subkey: org1-peer1
info: [PTE 0 main]: [channelAddEvent] requests: grpcs://n13bad0c2943e49c38cf637733c4831ef-org1-peer1.stage.blockchain.ibm.com:31002, events: grpcs://n13bad0c2943e49c38cf637733c4831ef-org1-peer1.stage.blockchain.ibm.com:31003 
info: [PTE 0 main]: [chaincodeInstantiate:Nid=0] Successfully initialize channel[defaultchannel]
info: [PTE 0 main]: [getCCID] Nid: 0, chaincode_id: sample_cc_ch1, chaincode_ver: v0
info: [PTE 0 main]: [chaincodeInstantiate] channelName(defaultchannel) chaincode instantiation was good
info: [PTE 0 main]: [chaincodeInstantiate] Successfully sent chaincode instantiation Proposal and received ProposalResponse: Status - 200
info: [PTE 0 main]: [chaincodeInstantiate] Promise.all tCurr=1532701070731
info: [PTE 0 main]: [chaincodeInstantiate] The chaincode instantiate transaction was valid.
info: [PTE 0 main]: [chaincodeInstantiate] Event promise all complete and testing complete
info: [PTE 0 main]: [chaincodeInstantiate(Nid=0)] Successfully instantiate transaction on defaultchannel. 
info: [PTE 0 main]: Disconnecting the event hub: n13bad0c2943e49c38cf637733c4831ef-org1-peer1.stage.blockchain.ibm.com:31003
0 --- Instantiation Done
 ```info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:1 getMoveRequest] request_invoke: chaincodeId=sample_cc_ch1, fcn=invoke, args=[put, key_defaultchannel_org1_0_1_500, be1c49b7070318d291c748fec5c86214ed5120822091db6f803511cce2aefbb10612ea7adfb42d13eb396833ff08980292531ec79ca1223a6d4b532d0860768ccc356e95df1780a6a0ffc44835432783b2612a6212a1d92988ce1f86243003894caa3a18b85b438984d3b370dc97b1449fb9330d71311da105ce9c909e3809943faf4e6d7b9bb2141dd4eb0709e336d9c9f40b9518f2c8c8e550e47d4c349915333ed15532c4b4b283489ec2482e8c3208d297478e4aecb1d32b3b858555c4b95be452666566e803186613fc9e6d12fde948694b11b698c00512cdadef2f5cc105df4afd8d098738079e964eecb7756c900bc1c422b34150731e49bef19cb3fabb86659e131cb49de74213605224b13e222d3b7e97edce1f7972632e434cbd509f617c909de5c3b7a1bea22149bdb8e5bf56f3f67ace93f687048415750b786076c8a6bfc09d7635f570dce8468e86e93e9fc752d5c852033ec7f8a028f2c6835a3926f5c6318aeb284301701a9f18c81f6803c166e9bede8b017db2ca2201fac76aebfc80ba17204abe43273318422403171a9cf5d5ae54736654a8f3a1fc4a792572b09eba8423d66cbec34400f53a5f8a53da334c3cacf02754e6c10ee325ea105520a559dcf1c693b45fd2262ca499b14f04f738301ac8f309a3e77cd73ea7c3337239356bbc771583d9d3de76d115dfa33223cded724519fb85d56027f4], 0=76, 1=230, 2=18, 3=90, 4=208, 5=153, 6=142, 7=43, 8=10, 9=210, 10=34, 11=220, 12=217, 13=67, 14=239, 15=230, 16=216, 17=153, 18=58, 19=157, 20=203, 21=235, 22=194, 23=75, _transaction_id=476cc6a5a950464f352007c87821332edaef5fa2150a96bc5836b82885938d0e, _admin=false
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:1 isExecDone] invokes(Move) sent: number=500, evtTimeoutCnt=0, elapsed time= 106661
info: [PTE 0 main]: stdout: [Nid:chan:org:id=0:defaultchannel:org1:1 isExecDone] setup Timeout: 480000 ms, curr time: 1532701227663
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:1 invoke_move_const_evtBlock] completed 500, evtTimoutCnt 0, unceived events NaN, INVOKE(MOVE) in 106662 ms, timestamp: start 1532701121001 end 1532701227663
info: [PTE 0 main]: stdout: [Nid:chan:org:id=0:defaultchannel:org1:1 invoke_move_const_evtBlock] unreceived events(1), txidList [ '476cc6a5a950464f352007c87821332edaef5fa2150a96bc5836b82885938d0e': 1532701227468 ]
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:1 eventRegisterFilteredBlock] pte-exec:completed Rcvd(sent)=500(500) INVOKE(MOVE) in 107295 ms, timestamp: start 1532701121001 end 1532701228296, #event timeout: 0, #event unreceived: 0, Throughput=4.66 TPS
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: Disconnecting the event hub: 0
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:1 latency_output] pte-exec:completed peer latency stats: tx num= 500, total time: 51962 ms, min= 86 ms, max= 237 ms, avg= 103.92 ms
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:1 latency_output] pte-exec:completed orderer latency stats: tx num= 500, total time: 53875 ms, min= 83 ms, max= 967 ms, avg= 107.75 ms
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:1 latency_output] pte-exec:completed event latency stats: tx num= 500, total time: 377587 ms, min= 156 ms, max= 4699 ms, avg= 755.17 ms
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:1 latency_output] calling cleanup() to cleanup txidList memory
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:1 cleanup] cleanup ...
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:1 cleanup] cleanup ... done
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:1 isExecDone] invokes(Query) sent: number=500, elapsed time= 107392
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:1 invoke_query_simple] query result[0]: be1c49b7070318d291c748fec5c86214ed5120822091db6f803511cce2aefbb10612ea7adfb42d13eb396833ff08980292531ec79ca1223a6d4b532d0860768ccc356e95df1780a6a0ffc44835432783b2612a6212a1d92988ce1f86243003894caa3a18b85b438984d3b370dc97b1449fb9330d71311da105ce9c909e3809943faf4e6d7b9bb2141dd4eb0709e336d9c9f40b9518f2c8c8e550e47d4c349915333ed15532c4b4b283489ec2482e8c3208d297478e4aecb1d32b3b858555c4b95be452666566e803186613fc9e6d12fde948694b11b698c00512cdadef2f5cc105df4afd8d098738079e964eecb7756c900bc1c422b34150731e49bef19cb3fabb86659e131cb49de74213605224b13e222d3b7e97edce1f7972632e434cbd509f617c909de5c3b7a1bea22149bdb8e5bf56f3f67ace93f687048415750b786076c8a6bfc09d7635f570dce8468e86e93e9fc752d5c852033ec7f8a028f2c6835a3926f5c6318aeb284301701a9f18c81f6803c166e9bede8b017db2ca2201fac76aebfc80ba17204abe43273318422403171a9cf5d5ae54736654a8f3a1fc4a792572b09eba8423d66cbec34400f53a5f8a53da334c3cacf02754e6c10ee325ea105520a559dcf1c693b45fd2262ca499b14f04f738301ac8f309a3e77cd73ea7c3337239356bbc771583d9d3de76d115dfa33223cded724519fb85d56027f4
info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:1 invoke_query_simple] pte-exec:completed 500 transaction: INVOKE(MOVE) in 107392 ms, timestamp: start 1532701121001 end 1532701228393,Throughput=4.66 TPS
info: [PTE 0 main]: Child proc exited, procId=1 ,exit code=0
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:0 getMoveRequest] request_invoke: chaincodeId=sample_cc_ch1, fcn=invoke, args=[put, key_defaultchannel_org1_0_0_500, 04d7412188acefb805c24f6906c174ae50677a122472ece5bc2ba11dd57b0164bb187b54ecb079139c9daeefa46b2a2899293bebe5bc9bdd4b67030a8cff5870a0d2b8e66918eddd8334cbf9fb157b494d42039f771ba94bd613107a98e46022c6a04a5220a3a1ac32f3baa43133ece5bd5b69d8dd35d743ce1f9fcd2e5d3e86a5900a92d26844c21d6870164f280b8886e70f1192eb0c0eeaaedaaa092a242009cad9ce6c3e17a86c1bfc6c8f6446e18e05ebf61faf18fff15490351dce011c9e8a026dcc7880b140963c005c67f31f49de66b39776598ced78eebb22499d99133b2aafd3b66389f374245359be0ccd67dc88ae0fd82d5f0c35c311a35d0550f77b162ff7ed12ba3b903e5ad3dc1e47821be7c0724a5d76c6fbd80beec1957416dd6ca47ba280da916bb0fecccf2008bddaa7c3036c41a6fbd952e7b9c34583d4f54ae0aba553504c75f7eaa953b0329dfab107ac08c759231b89ab282c27424dba3721b40083312a22f335cbc336b95399353410d08d9285747cdcc3e10acdc41a211c70518efca730e8683b2075414e2cde930becb81a959ac550d25db3b5ad72e01f202efd057c1efe06b0f089f17c1248d330bf9b127aab8472c2b5376c3510aacc74c42b8fb35d3f8a30742979d4567acace9f17964e288f9724c671bc5aa2aaf8bcf7e00064b031f7416fede75690db29d5e17b26f77e7ea078c4e96f], 0=106, 1=105, 2=57, 3=136, 4=99, 5=98, 6=236, 7=180, 8=193, 9=28, 10=254, 11=56, 12=129, 13=111, 14=10, 15=11, 16=62, 17=239, 18=190, 19=201, 20=184, 21=185, 22=1, 23=78, _transaction_id=d6b12ecfa4d8b318b627f164b65b8c1fa0d513ef05db6a56add0a999a3e53e01, _admin=false
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:0 isExecDone] invokes(Move) sent: number=500, evtTimeoutCnt=0, elapsed time= 108493
info: [PTE 0 main]: stdout: [Nid:chan:org:id=0:defaultchannel:org1:0 isExecDone] setup Timeout: 480000 ms, curr time: 1532701229517
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:0 invoke_move_const_evtBlock] completed 500, evtTimoutCnt 0, unceived events NaN, INVOKE(MOVE) in 108494 ms, timestamp: start 1532701121024 end 1532701229518
info: [PTE 0 main]: stdout: [Nid:chan:org:id=0:defaultchannel:org1:0 invoke_move_const_evtBlock] unreceived events(4), txidList [ '28353bf3bc5f4edc83ad7441b5d45adaac1b8364189138b63b8287589c7de14b': 1532701228892,
 '8fd7274cfe64f344054712f9cff3d2391153b4fbbdf167a79a243a87c46499d8': 1532701229075,
 '284588fc96a6e7725188c4be45c6c7666147998690ee91c5bbee8cdb7a150cab': 1532701229254,
 d6b12ecfa4d8b318b627f164b65b8c1fa0d513ef05db6a56add0a999a3e53e01: 1532701229437 ]
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:0 eventRegisterFilteredBlock] pte-exec:completed Rcvd(sent)=500(500) INVOKE(MOVE) in 109393 ms, timestamp: start 1532701121024 end 1532701230417, #event timeout: 0, #event unreceived: 0, Throughput=4.57 TPS
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: Disconnecting the event hub: 0
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:0 latency_output] pte-exec:completed peer latency stats: tx num= 500, total time: 54736 ms, min= 89 ms, max= 257 ms, avg= 109.47 ms
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:0 latency_output] pte-exec:completed orderer latency stats: tx num= 500, total time: 52942 ms, min= 78 ms, max= 960 ms, avg= 105.88 ms
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:0 latency_output] pte-exec:completed event latency stats: tx num= 500, total time: 372481 ms, min= 150 ms, max= 4944 ms, avg= 744.96 ms
info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:0 latency_output] calling cleanup() to cleanup txidList memory
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:0 cleanup] cleanup ...
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:0 cleanup] cleanup ... done
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:0 isExecDone] invokes(Query) sent: number=500, elapsed time= 109496
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:0 invoke_query_simple] query result[0]: 04d7412188acefb805c24f6906c174ae50677a122472ece5bc2ba11dd57b0164bb187b54ecb079139c9daeefa46b2a2899293bebe5bc9bdd4b67030a8cff5870a0d2b8e66918eddd8334cbf9fb157b494d42039f771ba94bd613107a98e46022c6a04a5220a3a1ac32f3baa43133ece5bd5b69d8dd35d743ce1f9fcd2e5d3e86a5900a92d26844c21d6870164f280b8886e70f1192eb0c0eeaaedaaa092a242009cad9ce6c3e17a86c1bfc6c8f6446e18e05ebf61faf18fff15490351dce011c9e8a026dcc7880b140963c005c67f31f49de66b39776598ced78eebb22499d99133b2aafd3b66389f374245359be0ccd67dc88ae0fd82d5f0c35c311a35d0550f77b162ff7ed12ba3b903e5ad3dc1e47821be7c0724a5d76c6fbd80beec1957416dd6ca47ba280da916bb0fecccf2008bddaa7c3036c41a6fbd952e7b9c34583d4f54ae0aba553504c75f7eaa953b0329dfab107ac08c759231b89ab282c27424dba3721b40083312a22f335cbc336b95399353410d08d9285747cdcc3e10acdc41a211c70518efca730e8683b2075414e2cde930becb81a959ac550d25db3b5ad72e01f202efd057c1efe06b0f089f17c1248d330bf9b127aab8472c2b5376c3510aacc74c42b8fb35d3f8a30742979d4567acace9f17964e288f9724c671bc5aa2aaf8bcf7e00064b031f7416fede75690db29d5e17b26f77e7ea078c4e96f
info: [PTE 0 exec]: [Nid:chan:org:id=0:defaultchannel:org1:0 invoke_query_simple] pte-exec:completed 500 transaction: INVOKE(MOVE) in 109496 ms, timestamp: start 1532701121024 end 1532701230520,Throughput=4.57 TPS
info: [PTE 0 main]: Child proc exited, procId=2 ,exit code=0
info: [PTE 0 main]: Test Summary[0]: [Nid:chan:org:id=0:defaultchannel:org1:1 eventRegisterFilteredBlock] pte-exec:completed Rcvd(sent)=500(500) INVOKE(MOVE) in 107295 ms, timestamp: start 1532701121001 end 1532701228296, #event timeout: 0, #event unreceived: 0, Throughput=4.66 TPS
info: [PTE 0 main]: Test Summary[1]: [Nid:chan:org:id=0:defaultchannel:org1:1 latency_output] pte-exec:completed peer latency stats: tx num= 500, total time: 51962 ms, min= 86 ms, max= 237 ms, avg= 103.92 ms
info: [PTE 0 main]: Test Summary (sample_cc_ch1): latency_peer 0=500, 1=51962, 2=86, 3=237
info: [PTE 0 main]: Test Summary[2]: [Nid:chan:org:id=0:defaultchannel:org1:1 latency_output] pte-exec:completed orderer latency stats: tx num= 500, total time: 53875 ms, min= 83 ms, max= 967 ms, avg= 107.75 ms
info: [PTE 0 main]: Test Summary[3]: [Nid:chan:org:id=0:defaultchannel:org1:1 latency_output] pte-exec:completed event latency stats: tx num= 500, total time: 377587 ms, min= 156 ms, max= 4699 ms, avg= 755.17 ms
info: [PTE 0 main]: Test Summary[4]: [Nid:chan:org:id=0:defaultchannel:org1:1 invoke_query_simple] pte-exec:completed 500 transaction: INVOKE(MOVE) in 107392 ms, timestamp: start 1532701121001 end 1532701228393,Throughput=4.66 TPS
info: [PTE 0 main]: Test Summary[5]: [Nid:chan:org:id=0:defaultchannel:org1:0 eventRegisterFilteredBlock] pte-exec:completed Rcvd(sent)=500(500) INVOKE(MOVE) in 109393 ms, timestamp: start 1532701121024 end 1532701230417, #event timeout: 0, #event unreceived: 0, Throughput=4.57 TPS
info: [PTE 0 main]: Test Summary[6]: [Nid:chan:org:id=0:defaultchannel:org1:0 latency_output] pte-exec:completed peer latency stats: tx num= 500, total time: 54736 ms, min= 89 ms, max= 257 ms, avg= 109.47 ms
info: [PTE 0 main]: Test Summary (sample_cc_ch1): latency_peer 0=1000, 1=106698, 2=86, 3=257
info: [PTE 0 main]: Test Summary[7]: [Nid:chan:org:id=0:defaultchannel:org1:0 latency_output] pte-exec:completed orderer latency stats: tx num= 500, total time: 52942 ms, min= 78 ms, max= 960 ms, avg= 105.88...;;;","27/Jul/18 11:37 PM;nileshdeotale;See logs in previous comment. This is working fine with PTE release-1.1 and Fabric 1.1.2. This ticket can be closed.;;;","27/Jul/18 11:39 PM;nileshdeotale;Works with PTE release-1.1 and Fabric 1.1.2.  Need correct version for PTE to work with Fabric 1.1.2.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Implement new chaincode APIs for range/rich queries with pagination,FAB-11310,32205,33216,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,Senthil1,Senthil1,26/Jul/18 4:19 AM,23/Jan/19 3:41 PM,28/Oct/23 3:03 AM,09/Sep/18 4:27 AM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,,,Senthil1,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-175,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk1z:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Senthil1,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Aug/18 5:19 AM;Senthil1;https://gerrit.hyperledger.org/r/c/24769/3;;;","09/Aug/18 10:49 PM;sstone1;[~Senthil1] are you also planning on updating the Node.js chaincode APIs for this epic? I only see changes to the Go chaincode APIs in the linked CR.

[~andrew-coleman] FYI;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric image version in fabric-samples master branch,FAB-11311,32208,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,26/Jul/18 4:35 AM,27/Jul/18 11:21 PM,28/Oct/23 3:03 AM,27/Jul/18 11:21 PM,v1.3.0,,,,,,,,v1.3.0,,,fabric-samples,,,,,0,,,,,,,Update fabric image version to 1.3.0-stable in fabric-sample master branch,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11312,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzww3j:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLONE - Update fabric image version in fabric-samples release-1.2 branch,FAB-11312,32209,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,26/Jul/18 4:42 AM,27/Jul/18 11:22 PM,28/Oct/23 3:03 AM,27/Jul/18 11:22 PM,v1.3.0,,,,,,,,v1.3.0,,,fabric-samples,,,,,0,,,,,,,Update fabric image version to 1.2.1-stable in fabric-sample release1.2 branch,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11311,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk27:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reword anchor peer section in glossary ,FAB-11313,32210,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,26/Jul/18 5:08 AM,27/Jul/18 8:43 PM,28/Oct/23 3:03 AM,26/Jul/18 11:19 PM,v1.2.0,,,,,,,,v1.3.0,,,fabric-docs,,,,,0,,,,,,,"The glossary section that deals with anchor peers is misleading, and makes people think that peers communicate through anchor peers, which is not true.",,SjirNijssen,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk2f:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),SjirNijssen,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/18 12:43 PM;SjirNijssen;I believe a solid anatomy of the anchor confusion syndrome could provide valuable lessons for improving the documentation process. ;;;","26/Jul/18 3:22 PM;SjirNijssen;Yacov,

As you are the first maintainer that made the statement that the concept definition for anchor peer in the v1.2 Glossary is misleading, I hope we agree that this needs to be corrected as soon as practicable. Please bring in your proposed concept definition, and I promise you that several members of the Doc WG will help in getting this in the right shape, if additional work is necessary, so that we have it corrected tomorrow. PLEASE and thanks in advance.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Fix link to Kafka design document,FAB-11314,32211,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Low,Done,kchristidis,kchristidis,kchristidis,26/Jul/18 5:16 AM,26/Jul/18 12:55 PM,28/Oct/23 3:03 AM,26/Jul/18 12:55 PM,v1.1.0,v1.2.0,,,,,,,v1.1.1,v1.2.1,v1.3.0,fabric-orderer,,,,,0,,,,,,,"The original document used to reside in a Google Drive account that is no longer active. As a result, the link to the doc is now broken.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";26/Jul/18 5:27 AM;kchristidis;600",,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk2n:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/18 5:27 AM;kchristidis;master: https://gerrit.hyperledger.org/r/c/24773/
release-1.2: https://gerrit.hyperledger.org/r/c/24779/
release-1.1: https://gerrit.hyperledger.org/r/c/24777/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test-pte CI job fails as fabric-sdk-node submodule fails to update due to Authentication error.,FAB-11315,32212,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,latitiah,sambhavdutt,sambhavdutt,26/Jul/18 5:25 AM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,26/Jul/18 6:11 AM,v1.3.0,,,,,,,,v1.3.0,,,fabric-quality,,,,,0,ci-failure,,,,,,"The command +git submodule foreach git pull origin master+(make git-latest) is not updating the fabric-sdk-node submodule in the *fabric-test* repository from two builds due to Jenkins Authentication error. This is failing the *fabric-test-pte-x86_64* job from 2 builds.

*fabric-test Commit: c430183*

{code:java}
19:07:15 Entering 'fabric-sdk-node'
19:07:16 From https://gerrit.hyperledger.org/r/fabric-sdk-node
19:07:16  * branch            master     -> FETCH_HEAD
19:07:16 
19:07:16 *** Please tell me who you are.

19:07:16 make[1]: *** [git-latest] Error 1
19:07:16 make[1]: Leaving directory '/w/workspace/fabric-test-pte-x86_64/gopath/src/github.com/hyperledger/fabric-test'
19:07:16 Makefile:99: recipe for target 'pull-images' failed
19:07:16 make: *** [pull-images] Error 2
{code}

*Build Logs*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-pte-x86_64/49/

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-pte-x86_64/49/consoleFull

",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk2v:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"26/Jul/18 6:00 AM;sambhavdutt;This is being taken care of

https://gerrit.hyperledger.org/r/#/c/24781/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add discover binary to the docker tools image,FAB-11316,32213,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,yacovm,yacovm,26/Jul/18 5:49 AM,26/Jul/18 10:55 PM,28/Oct/23 3:03 AM,26/Jul/18 10:55 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"Seems like the discover binary isn't in the fabric-tools, and some users rely on the fabric-tools container for their production needs because they have strict firewall policies.

 

the below code shows that both discover and idemixgen aren't in the fabric-tools container.
{code:java}
yacovm@yacoVM ~/OBC/shared/gopath/src/github.com/hyperledger/fabric (FAB-11313) $ docker run -it hyperledger/fabric-tools /bin/bash
root@b87366e0449a:/# for binary in configtxgen peer cryptogen idemixgen discover; do echo $binary; which $binary; done
configtxgen
/usr/local/bin/configtxgen
peer
/usr/local/bin/peer
cryptogen
/usr/local/bin/cryptogen
idemixgen
discover
{code}",,bourbonkidQ,ChristopherFerris,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk33:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bourbonkidQ,ChristopherFerris,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/18 6:20 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/24783;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Improve Pvtdatastore APIs for taking info about missing pvt data,FAB-11317,32215,32194,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,manish-sethi,manish-sethi,26/Jul/18 12:14 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,23/Aug/18 3:15 AM,,,,,,,,,v1.3.0,,,fabric-ledger,,,,,0,,,,,,,"* Enhance the function `Prepare()` in private data store ([https://github.com/hyperledger/fabric/blob/release-1.2/core/ledger/pvtdatastorage/store.go#L51]) to take additional argument say `MissingPvtDataInfo` that includes (a) Missing private data for eligible collections and (b) Missing data for ineligible collections
 * Computation of (a) is already supplied to block commit function by gossip ([https://github.com/hyperledger/fabric/blob/release-1.2/core/ledger/ledger_interface.go#L194)] and computation of (b) needs to be performed by fetching the remaining collections present in the block (potentially here - ([https://github.com/hyperledger/fabric/blob/release-1.2/core/ledger/ledgerstorage/store.go#L118)
]",,manish-sethi,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11318,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:a",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Aug/18 12:47 AM;Senthil1;https://gerrit.hyperledger.org/r/c/25341/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Store and retrieve missing data info in pvtdatastore,FAB-11318,32216,32194,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,manish-sethi,manish-sethi,26/Jul/18 12:23 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,29/Aug/18 12:29 AM,,,,,,,,,v1.3.0,,,fabric-ledger,,,,,0,,,,,,," Construct key-val entries for encoding missing data info in pvtdatastore
 * For the eligible collections, create an entry of type `<eligible_prefix><uint64-blockNum><chaincode><collection>:<bitmap>`
 * For ineligible collections, create an entry of type `<non_eligible_prefix><chaincode><collection><uint64-blockNum>:<bitmap>`

The i-th bit in the bitmap indicates the missing data for the i-th transaction in the block.

Implement missing data tracker that is intended to be used by gossip for retrieving the details of the missing pvt data periodically. Given the above storage scheme, this will involve a range query over the missing data info.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11317,FAB-11653,,FAB-11388,FAB-11755,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:b",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update pullDockerImages.sh script,FAB-11319,32217,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,26/Jul/18 12:38 PM,30/Jul/18 7:36 PM,28/Oct/23 3:03 AM,30/Jul/18 7:36 PM,,,,,,,,,v1.3.0,,,fabric-quality,,,,,0,,,,,,,Update pullDockerImages.sh script to fetch the images and binaries from nexus. The existing RELEASE_COMMIT value is not valid to fetch the binaries. Update the script to trim the RELEASE_COMMIT value to 7 chars.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk3r:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add capability for v1.3 application validation and lifecycle,FAB-11320,32218,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,26/Jul/18 1:34 PM,30/Jul/18 11:51 AM,28/Oct/23 3:03 AM,30/Jul/18 11:51 AM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-11237,,,No,,Unset,No,,,"1|hzzk3z:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Alleviating lock contention of MSP cache to improve performance (v1.3),FAB-11321,32223,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yoheiueda,yoheiueda,yoheiueda,26/Jul/18 4:57 PM,07/Mar/19 12:48 AM,28/Oct/23 3:03 AM,01/Sep/18 9:11 PM,,,,,,,,,v1.3.0,,,fabric-peer,,,,,0,improvement,performance,,,,," I analyzed bottlenecks in Fabric peer code, and identified that the mutex locks in MSP cache cause heavy lock contention when TPS is very high.

[https://github.com/hyperledger/fabric/blob/v1.2.0/msp/cache/cache.go#L41-L59]

In the current implementation of MSP cache, mutex locks are used to guard LRU lists that hold entries of MSP cache. Every get operation of a LRU list always updates the order of the list, so we need a mutex lock instead of a RW lock to guard the LRU list.

Some approximate LRU algorithms such as second-chance algorithm are known to work with reader-writer locks instead of RW locks. I have a work-in-progress code, and obtained 50% TPS improvement for some workloads. Please see the attached PDF file for more details.

Later, I will post my work-in-progress code to show how it works.

 

 ",,ales,angelo.decaro,denyeart,inatatsu,moriohara,sykesm,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6421,,,,,,,,,,,,,,,,,,,,,,"26/Jul/18 4:54 PM;yoheiueda;MSPcacheOpt.pdf;https://jira.hyperledger.org/secure/attachment/15384/MSPcacheOpt.pdf",,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk4v:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ales,angelo.decaro,denyeart,inatatsu,moriohara,sykesm,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/18 5:23 PM;yoheiueda;This is my WIP code.  It is based on v1.2 rc1 code.  I will rebase and complete it if this proposal is accepted.

[https://gerrit.hyperledger.org/r/#/c/24797/];;;","26/Jul/18 8:00 PM;angelo.decaro;Wow, the numbers looks very interesting. But, isn't this an improvement more than a bug?;;;","26/Jul/18 11:03 PM;sykesm;[~angelo.decaro] [~yoheiueda] Yes. All of these should be changed to improvements.;;;","25/Aug/18 2:51 AM;denyeart;[~yoheiueda] Please see the review comments in https://gerrit.hyperledger.org/r/#/c/24797/ ;;;","29/Aug/18 3:56 PM;yoheiueda;I rebased and updated the code based on the comments.;;;","03/Sep/18 7:11 PM;yoheiueda;Thank you very much for reviewing this Jira issue.

Based on a review comment in [https://gerrit.hyperledger.org/r/c/24797/4/msp/mgmt/mgmt.go]

I raised a new Jira issue FAB-11843 for the reaming part of the original patch.;;;",,,,,,,,,,,,,,,,,,,,,
"Reducing peer-chaincode communication with PutState calls in ""write back""",FAB-11322,32225,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,yoheiueda,yoheiueda,26/Jul/18 5:53 PM,29/Aug/18 4:08 PM,28/Oct/23 3:03 AM,21/Aug/18 9:34 PM,,,,,,,,,,,,fabric-peer,,,,,0,,,,,,,"I analyzed bottlenecks in Fabric peer and chaincode execution, and one of bottlenecks is frequent communication between peer and chanincode containers. The GRPC stream between peer and chaincode is guarded by a mutex lock, and it causes heavy lock contention when TPS is very high.

In the current implementation, every time PutState is called from chaincode, the chaincode container communicates with the peer. In other words, PutState are processed in 'write-through' mode.  However, data set by PutState calls are not actually stored into StateDB until transaction commitment. So communication for PutState calls can be delayed until the transaction simulation finishes.  We can piggyback multiple PutState calls in a ChaincodeMessage_COMPLETED message. In other words, PutState calls can be processed in ""write-back"" mode.

Only noticeable differences by this change is the how errors of PutState calls are notified. Most of PutState calls do not cause errors, but in some cases, PutState causes error. So timing of such error notification will be different between write-through and write-back modes.  If this difference is acceptable, we can silently implement write-back mode without changing the shim APIs.  If this difference is not acceptable, we need to add a new API such as stub.SetUpdateMode(mode) to choose write-through and write-back modes.


Later, I will post my work-in-progress code to show how it works.",,denyeart,manish-sethi,moriohara,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9970,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk5b:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,manish-sethi,moriohara,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jul/18 6:32 PM;yoheiueda;[https://gerrit.hyperledger.org/r/#/c/24801/]

This is my WIP code.  It is based on v1.2 rc1 code.  I will rebase and complete it if this proposal is accepted.;;;","26/Jul/18 11:05 PM;sykesm;[~yoheiueda] This is more of an improvement than a bug.;;;","27/Jul/18 1:07 AM;sykesm;The proposed change has implications beyond what's in the core fabric repo. While there's benefit to transactions that perform multiple updates, it impacts the API. If this approach is adopted, it requires updates to node (and java) chaincode shim implementations as well as documentation.

/cc [~manish-sethi], [~denyeart], [~mastersingh24] for your input and awareness;;;","30/Jul/18 11:13 AM;manish-sethi;There was an exact same discussion on a separate Jira. So, comments in that jira are relevant for this as well (https://jira.hyperledger.org/browse/FAB-9970).;;;","21/Aug/18 9:34 PM;denyeart;Let's track this one in FAB-9970.  [~yoheiueda] feel free to add your comments to FAB-9970.;;;","29/Aug/18 4:08 PM;yoheiueda;I see. I will comment to FAB-9970. Thank you very much!.;;;",,,,,,,,,,,,,,,,,,,,,
create MembershipInfoProvier interface - in order to decide whether a peer is a member of a collection or not,FAB-11323,32227,32193,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,nirro,nirro,26/Jul/18 6:36 PM,25/Aug/18 9:37 PM,28/Oct/23 3:03 AM,10/Aug/18 11:18 PM,,,,,,,,,v1.3.0,,,fabric-gossip,,,,,0,,,,,,,"need to add the following interface:
type MembershipInfoProvider interface {
    AmMemberOf(collectionPolicyConfig *common.CollectionPolicyConfig) (bool, error) 
}

a struct that implements this interface will be passed as and argument on startup to the ledger and to gossip puller.

will be used as part of bookeeping of missing private data blocks that need to be reconciled.",,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5093,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk67:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jul/18 9:42 PM;nirro;WIP - https://gerrit.hyperledger.org/r/#/c/24909/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
change existing implementation of private data to full access (with history),FAB-11324,32228,32193,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,nirro,nirro,nirro,26/Jul/18 6:38 PM,25/Aug/18 9:35 PM,28/Oct/23 3:03 AM,15/Aug/18 10:15 PM,,,,,,,,,v1.3.0,,,fabric-gossip,,,,,0,,,,,,,"in the existing implementation, when adding an org to a collection, the peers on that org will start getting private data only from that moment on.

this will be changed to ""full-access"", such that, when adding an org to a collection, the org will automatically receive the prior private data for the collection, so that it can query and endorse future transactions.",,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5093,FAB-11301,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk6f:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Aug/18 10:15 PM;nirro;don't need to implement anything except for reconciliation.
the implemtation in FAB-11301 will take care for this case as well.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add VerifyPeerCertificate option to SecureOptions,FAB-11325,32232,31897,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,26/Jul/18 10:24 PM,01/Aug/18 12:42 AM,28/Oct/23 3:03 AM,31/Jul/18 9:13 PM,,,,,,,,,v1.3.0,,,fabric-common,,,,,0,gRPC,raft,tls,,,,"The Raft RPC method - Step() sends blocks to remote nodes.

In order to ensure the remote node is who we want it to be via TLS pinning, we need to either extract the TLS certificate from the gRPC context, or enforce the authentication in the TLS connection itself.

 

Extracting the TLS certificate from the context isn't possible, because the Step() is an RPC, thus the gRPC context isn't populated prior to the invocation of the method itself (and then it's too late because data might have been sent to the wrong node).

 

Therefore we need to enforce TLS pinning via passing a function to the TLS config at the creation of the connection, which would iterate over the TLS server of the remote node (for all channels) and compare the certificate the remote node sent us (the client) to one of the certificates we have in the config.",,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk73:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/18 11:55 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/24813/;;;","01/Aug/18 12:42 AM;kchristidis;This is great — I wasn't aware of the {{VerifyPeerCertificate}} function in the {{tls}} package.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Service discovery add chaincode to chaincode and collections,FAB-11326,32233,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,rickr,rickr,26/Jul/18 10:52 PM,27/Jul/18 11:22 PM,28/Oct/23 3:03 AM,27/Jul/18 11:22 PM,v1.2.0,,,,,,,,,,,fabric-sdk-java,,,,,0,,,,,,,"This does not inpsect the read write set for chaincode to chancode calls. That will be a follow on 

Gerrit https://gerrit.hyperledger.org/r/#/c/24809/",,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk7b:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent failures in PrivateData-EndToEnd integration test,FAB-11327,32234,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,sykesm,sykesm,26/Jul/18 10:53 PM,19/Mar/19 7:57 PM,28/Oct/23 3:03 AM,08/Aug/18 4:13 AM,,,,,,,,,,,,,,,,,0,ci-flake,,,,,,"Observed the following test failure in CI:

{code}
00:27:07.167 [e][peer-0] 2018-07-26 08:15:40.361 UTC [chaincode] HandleTransaction -> ERRO 395 [2859d3f9] Failed to handle GET_STATE. error: private data matching public hash version is not available. Public hash version = &version.Height{BlockNum:0x4, TxNum:0x0}, Private data version = (*version.Height)(nil)
00:27:07.168 [e][peer-0] github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetState
00:27:07.168 [e][peer-0] 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:543
00:27:07.169 [e][peer-0] github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetState-fm
00:27:07.169 [e][peer-0] 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:196
00:27:07.170 [e][peer-0] github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
00:27:07.170 [e][peer-0] 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:241
00:27:07.171 [e][peer-0] runtime.goexit
00:27:07.171 [e][peer-0] 	/opt/go/go1.10.linux.amd64/src/runtime/asm_amd64.s:2361
00:27:07.172 [e][peer-0] GET_STATE failed: transaction ID: 2859d3f9df6c9d2a5b6aca00f10675ea40c9b60484c83160661cdd177217f76e
00:27:07.172 [e][peer-0] github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
00:27:07.173 [e][peer-0] 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:245
00:27:07.173 [e][peer-0] runtime.goexit
00:27:07.174 [e][peer-0] 	/opt/go/go1.10.linux.amd64/src/runtime/asm_amd64.s:2361
00:27:07.174 [e][peer-0] 2018-07-26 08:15:40.362 UTC [endorser] ProcessProposal -> ERRO 396 [testchannel][2859d3f9] simulateProposal() resulted in chaincode name:""marblesp""  response status 500 for txid: 2859d3f9df6c9d2a5b6aca00f10675ea40c9b60484c83160661cdd177217f76e
00:27:07.175 [e][query] Error: endorsement failure during query. response: status:500 message:""{\""Error\"":\""Failed to get private details for marble1: GET_STATE failed: transaction ID: 2859d3f9df6c9d2a5b6aca00f10675ea40c9b60484c83160661cdd177217f76e: private data matching public hash version is not available. Public hash version = &version.Height{BlockNum:0x4, TxNum:0x0}, Private data version = (*version.Height)(nil)\""}"" 
00:27:07.176 • Failure [102.176 seconds]
00:27:07.176 PrivateData-EndToEnd network partition with respect of private data [It] verifies private data not distributed when there is network partition 
00:27:07.177 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:407
00:27:07.177 
00:27:07.177   Timed out after 60.043s.
00:27:07.177   Got stuck at:
00:27:07.177       2018-07-26 08:15:40.328 UTC [viperutil] getKeysRecursively -> DEBU 001 Found map[string]interface{} value for peer.BCCSP
{code}

Logs: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-verify-integration-tests-x86_64/923

 ",,C0rWin,nirro,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11385,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk7j:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),C0rWin,nirro,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/18 11:57 PM;C0rWin;https://gerrit.hyperledger.org/r/24817

https://gerrit.hyperledger.org/r/24815;;;","07/Aug/18 10:22 PM;nirro;https://gerrit.hyperledger.org/r/#/c/25199/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Do bulk load of existing keys and state-based metadata prior to block validation,FAB-11328,32235,33223,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,manish-sethi,denyeart,denyeart,26/Jul/18 11:09 PM,23/Jan/20 7:31 AM,28/Oct/23 3:03 AM,23/Jan/20 7:31 AM,,,,,,,,,v1.4.0,,,fabric-ledger,,,,,0,stale-item,,,,,,"See TODO at [https://gerrit.hyperledger.org/r/#/c/21775/9/core/ledger/kvledger/txmgmt/validator/valinternal/tx_ops_preparation.go]

Combine with existing bulk load that is used for readset validation on CouchDB.",,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11699,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk7r:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:31 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent test failures in PrivateData end to end tests - ,FAB-11329,32236,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,sykesm,sykesm,26/Jul/18 11:18 PM,19/Mar/19 7:57 PM,28/Oct/23 3:03 AM,03/Dec/18 10:22 PM,,,,,,,,,v1.4.0,,,fabric-gossip,,,,,0,ci-flake,,,,,,"{code}
00:17:43.513 [e][peer-0] 2018-07-26 14:04:14.743 UTC [gossip/gossip] Stop -> INFO 03b Stopping gossip
00:17:43.514 [e][peer-0] 2018-07-26 14:04:14.744 UTC [blocksProvider] DeliverBlocks -> WARN 03d [testchannel] Receive error: client is closing
00:17:43.514 • Failure [44.132 seconds]
00:17:43.515 PrivateData-EndToEnd collection config BlockToLive is respected [It] verifies private data is purged after BTL has passed and new peer doesn't pull private data that was purged 
00:17:43.515 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:284
00:17:43.515 
00:17:43.516   Expected an error to have occurred.  Got:
00:17:43.516       <nil>: nil
00:17:43.516 
00:17:43.516   /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:506
00:17:43.516 ------------------------------
00:18:30.986 •
00:18:30.986 
00:18:30.987 Summarizing 2 Failures:
00:18:30.987 
00:18:30.989 [Fail] PrivateData-EndToEnd collection config is modified [It] verifies access to private data after an org is removed from collection config and then added back 
00:18:30.990 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/helpers/utils.go:23
00:18:30.990 
00:18:30.991 [Fail] PrivateData-EndToEnd collection config BlockToLive is respected [It] verifies private data is purged after BTL has passed and new peer doesn't pull private data that was purged 
00:18:30.992 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:506
00:18:30.992 
00:18:30.993 Ran 4 of 4 Specs in 402.058 seconds
00:18:30.998 FAIL! -- 2 Passed | 2 Failed | 0 Pending | 0 Skipped
00:18:30.998 --- FAIL: TestEndToEnd (402.06s)
00:18:30.998 FAIL
{code}

Logs: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-verify-integration-tests-x86_64/927",,C0rWin,denyeart,nirro,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11385,FAB-12181,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk7z:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),C0rWin,denyeart,nirro,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/18 11:57 PM;C0rWin;https://gerrit.hyperledger.org/r/24815;;;","26/Jul/18 11:57 PM;C0rWin;https://gerrit.hyperledger.org/r/24817;;;","27/Jul/18 12:10 AM;wlahti;From a current CR of mine: 
{code:java}
15:05:00 Summarizing 3 Failures:
15:05:00 
15:05:00 [Fail] PrivateData-EndToEnd collection config is modified [BeforeEach] verifies access to private data after an org is added to collection config 
15:05:00 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:82
15:05:00 
15:05:00 [Fail] PrivateData-EndToEnd collection config is modified [It] verifies access to private data after an org is removed from collection config and then added back 
15:05:00 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/helpers/utils.go:23
15:05:00 
15:05:00 [Fail] PrivateData-EndToEnd collection config BlockToLive is respected [It] verifies private data is purged after BTL has passed and new peer doesn't pull private data that was purged 
15:05:00 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:289
15:05:00 
15:05:00 Ran 4 of 4 Specs in 428.119 seconds
15:05:00 FAIL! -- 1 Passed | 3 Failed | 0 Pending | 0 Skipped{code}
Logs here: https://jenkins.hyperledger.org/job/fabric-verify-integration-tests-x86_64/932/;;;","07/Aug/18 10:11 PM;nirro;https://gerrit.hyperledger.org/r/#/c/25197/;;;","10/Aug/18 11:14 PM;wlahti;Still seeing flakiness in this test:
{code:java}
13:30:17 • Failure [51.342 seconds]
13:30:17 PrivateData-EndToEnd collection config BlockToLive is respected [It] verifies private data is purged after BTL has passed and new peer doesn't pull private data that was purged 
13:30:17 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:284
13:30:17 
13:30:17   Timed out after 1.009s.{code}
It's failed two times in a row in [https://gerrit.hyperledger.org/r/c/25313/] and I've seen it fail in a few other recent CRs.;;;","15/Aug/18 8:24 PM;wlahti;Another failure:
{code:java}
21:33:18 • Failure in Spec Setup (BeforeEach) [38.236 seconds]
21:33:18 PrivateData-EndToEnd collection config is modified [BeforeEach] verifies access to private data after an org is removed from collection config and then added back 
21:33:18 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:158
21:33:18 
21:33:18   Expected error:
21:33:18       <*errors.errorString | 0xc4204c04d0>: {s: ""exit status 1""}
21:33:18       exit status 1
21:33:18   not to have occurred
21:33:18 
21:33:18   /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:82{code}
See full log here: [https://jenkins.hyperledger.org/job/fabric-verify-integration-tests-x86_64/1278/console];;;","15/Aug/18 10:48 PM;wlahti;And this test is still failing intermittently as well:
{code:java}
21:25:27 • Failure [44.915 seconds]
21:25:27 PrivateData-EndToEnd collection config BlockToLive is respected [It] verifies private data is purged after BTL has passed and new peer doesn't pull private data that was purged 
21:25:27 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:284
21:25:27 
21:25:27   Expected an error to have occurred.  Got:
21:25:27       <nil>: nil
21:25:27 
21:25:27   /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:522 {code}
See full log here: https://jenkins.hyperledger.org/job/fabric-verify-integration-tests-x86_64/1277/console;;;","15/Aug/18 11:00 PM;wlahti;[~nirro] Any chance you can look into these failures soon? This is really slowing down our velocity for the new lifecycle work (FAB-11237). ;;;","15/Aug/18 11:18 PM;nirro;Hi [~wlahti] ,
I managed to reproduce the issue in my vm and pushed a change that I thought would fix the problem but it didn't.
I disabled for now these e2e tests - https://gerrit.hyperledger.org/r/#/c/25569/ - waiting for +2 from maintainers.
I will continue the investigation and solve the issues in a few days (currently working on a higher priority task);;;","20/Sep/18 5:41 AM;denyeart;[~nirro] I see [https://gerrit.hyperledger.org/r/#/c/25683/] still failing. Any update? ;;;","20/Sep/18 3:42 PM;nirro;[~denyeart] yes, the above CR will be abandoned as I'm working on re-writing these e2e tests using the new test framework.
as part of re-writing the tests I'll fix the flakes as well.;;;","27/Sep/18 12:32 AM;nirro;will be fixed as part of https://jira.hyperledger.org/browse/FAB-12181;;;","27/Sep/18 12:36 AM;nirro;https://gerrit.hyperledger.org/r/26604;;;","29/Nov/18 8:46 AM;denyeart;[~nirro] What is the plan for this one?;;;","29/Nov/18 5:24 PM;nirro;[~denyeart]
as written in previous comments, this is fixed as part of the task to rewrite private data e2e tests (the ones that are not reconciliation related).
I plan to finish fixing comments and push the above CR today, and once the CR is merged this issue will be closed as well.;;;","02/Dec/18 9:34 PM;C0rWin;[~nirro] does FAB-12181 takes care of this one as well?;;;","02/Dec/18 9:45 PM;nirro;yes, once the CR is merged we can close both;;;","02/Dec/18 9:59 PM;C0rWin;Once CR for FAB-12181 merged, we can close this one as well.;;;",,,,,,,,,
"balance-transfer app in release-1.2 references ""unstable"" versions of SDK",FAB-11330,32238,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,jimthematrix,jimthematrix,jimthematrix,26/Jul/18 11:59 PM,12/Aug/18 7:48 PM,28/Oct/23 3:03 AM,12/Aug/18 7:48 PM,,,,,,,,,v1.2.1,,,fabric-samples,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11515,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk8n:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix copyright year in docs,FAB-11331,32243,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,kchristidis,kchristidis,kchristidis,27/Jul/18 1:58 AM,27/Jul/18 2:08 PM,28/Oct/23 3:03 AM,27/Jul/18 2:08 PM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";27/Jul/18 2:00 AM;kchristidis;60",,0,60,,,0,60,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk8v:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jul/18 2:00 AM;kchristidis;https://gerrit.hyperledger.org/r/c/24827/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update to dep 0.5,FAB-11332,32244,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,27/Jul/18 2:55 AM,09/Aug/18 4:32 AM,28/Oct/23 3:03 AM,09/Aug/18 4:32 AM,,,,,,,,,,,,,,,,,0,hygiene,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk93:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jul/18 10:31 PM;sykesm;https://gerrit.hyperledger.org/r/24859;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Remove references to event hub from docs,FAB-11333,32245,31801,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,denyeart,denyeart,27/Jul/18 4:04 AM,25/Sep/18 3:36 AM,28/Oct/23 3:03 AM,25/Sep/18 3:36 AM,,,,,,,,,v1.3.0,,,fabric-docs,,,,,0,,,,,,,"I did a quick check, the only remaining reference I see is in the fabcar doc, this needs to be cleaned up for the new channel event service:

https://github.com/hyperledger/fabric/blob/master/docs/source/understand_fabcar_network.rst

""Finally the application uses two event handler APIs: {{eh.setPeerAddr}} to connect to the peer’s event listener port and {{eh.registerTxEvent}} to register for events associated with a specific transaction ID. The {{eh.registerTxEvent}} API allows the application to be notified about the fate of a transaction (i.e. valid or invalid).""",,denyeart,joe-alewine,pandrejko,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzk9b:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,joe-alewine,pandrejko,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Sep/18 5:03 AM;denyeart;[~harrisob@us.ibm.com] [~joe-alewine] Can you take a look?;;;","25/Sep/18 1:06 AM;joe-alewine;https://gerrit.hyperledger.org/r/c/26512/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"As a peer operator, I want my peer to leave (unjoin) a channel",FAB-11334,32248,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jkneubuhl,Mihir2.0,Mihir2.0,27/Jul/18 4:52 AM,25/Oct/21 12:05 AM,28/Oct/23 3:03 AM,25/Oct/21 12:05 AM,,,,,,,,,v2.4.0,,,fabric-ledger,fabric-peer,fabric-tools,,,7,Channels,Peers,,,,,"Implement a new peer command (peer node unjoin) to unjoin the peer from the channel. The command takes a -channel parameter and will delete all the channel-specific data stored on the ledger. The channel-specific data includes blocks and data entries in stateleveldb, statecouchdb (drop databases), confighistorydb, bookkeepingdb, historydb, blockindex, ledger idStore.

 

More background in FAB-16035 description and comments.

Note, much of the channel deletion work has been done already in FAB-17787 and its subtasks.",,denniskuhnert,denyeart,eujungkim,felixrowe,iwinoto,jagadeesh.blockchain,manish-sethi,markparz,MichaelWang,Mihir2.0,rhegde,rolivieri,SMiskey,toddinpal,vampire203,wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17801,,,,,,,,,,,,FAB-5191,FAB-4481,FAB-17801,FAB-16035,FAB-17787,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxoa",,,,Yes,Unset,v2.x,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denniskuhnert,denyeart,eujungkim,felixrowe,iwinoto,jagadeesh.blockchain,manish-sethi,markparz,MichaelWang,Mihir2.0,rhegde,rolivieri,SMiskey,toddinpal,vampire203,wuqiaomin,,,,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Dec/18 9:45 PM;rhegde;Impact:

In CLSNet, we are already in a production where a channels is created between every participants. There is a case where participant may decide not to interact with the some  or may opt out completely and as a result there is a need to provision channel deletion.

It would be good to have at least a support to un-join peer for the channel and eventually process to delete the channel from the system.

Can we have a fix version for this implementation.

[~rsherwood], [~Clayton Sims] [~mastersingh24]

I assume there is no manual process to do the same.;;;","29/Apr/19 10:22 PM;markparz;[~Anzal] & Sandeep Gupta has also been requesting this feature.;;;","14/Apr/21 10:28 AM;wuqiaomin;This issue was put forward on July 27th 2018. From my perspective, What this feature needs to do is to remove channel config on peer and delete all specific channel data on the ledger. With all peers exiting the channel, this channel will be deleted from blockchain system finally. It seems to have no problem causing blocking. So I wanna ask the progress until now. [~rhegde][~markparz];;;","14/Apr/21 10:40 AM;denyeart;[~wuqiaomin] This issue is currently being scoped out.  [~manish-sethi] could you clarify the Description field with current design thoughts?;;;","13/May/21 11:48 AM;wuqiaomin;I have some propose to complete this demand issue if there is still no idea. 
For deleting channel config information, we need to remove channel config from peer so that the channel would not be initialized after restart the peer.
if there exist anchor peer, a transaction which update channel config should be invoked to remove content about this peer in channel config. And then remove the ""bootstrap"" in ""core.yaml"".
Nextly, we need to remove channel data in unjoined peer ledger. Thus, the database should be refactored to specify to the directory corresponding to each channel for opertating all data related to specified chanel.
[~denyeart]  [~manish-sethi];;;","22/Jun/21 9:06 AM;manish-sethi;For enabling a peer to unjoin a channel, we would need to make a trade off between simplicity of code v/s flexibility of operation. If we make it a prerequisite that peer should not be running, the primary task would be just to delete the data related to the channel. However, if we want to enable this operation while the peer is up, we would need to take care of additional tasks that include
 # Clear all in-memory caches for the channel
 # Stop all background goroutines that are launched in the context of the channel
 # Close all golang channels
 # Interrupt ongoing client operations for the channel

*Changes required in the running peer*
 Upon initial investigation of the code, following is a high-level summary of these additional tasks that are required if we allow this operation without requiring peer shutdown. As we start working, we will need to look at the related code and make sure no additional channel specific leakage is escaped and setting an object to nil does not cause a nil pointer panic in any background or client query related operation.

1) [Stop|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/gossip/gossip/channel/channel.go#L314] channel specific gossip operations so block pulling and committing is stopped. Also, [stop|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/gossip/service/gossip_service.go#L155] private data related background operations such as reconciler.

2) clear cached data in [newLifecycle cache|https://github.com/hyperledger/fabric/blob/16259ed70a4cd57513be40a0678213d9274a9ae8/core/chaincode/lifecycle/cache.go#L68] and [legacy chaincode MetadataManager|https://github.com/hyperledger/fabric/blob/16259ed70a4cd57513be40a0678213d9274a9ae8/core/cclifecycle/lifecycle.go#L22]. This can be achieved by enhancing the interface [ledger.StateListener|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/core/ledger/ledger_interface.go#L509] by adding a new function, say _DeletingLedger_(ledgerID string). Ledger can call back this function to give a hint that the above two components can delete the channel specific cache, as these two are registered as a ledger state update listeners.

Enhance stop/close of ledger sub-components to include the following items (3-8)

3) Clear cached data in [couchdb peer cache|https://github.com/manish-sethi/fabric/blob/04796e6f00aab5b4ff53dfe31469a682cf472ea3/core/ledger/kvledger/txmgmt/statedb/statecouchdb/cache.go#L17]. Perhaps we will need to reset the entire cache, as the library we use does not provide an option for finding the keys specific to a channelID

4) Enhance pvtdatastore code so as to stop or wait for the background goroutines to finish for tasks [purging expired entries|https://github.com/hyperledger/fabric/blob/04796e6f00aab5b4ff53dfe31469a682cf472ea3/core/ledger/pvtdatastorage/store.go#L604] and [detecting and updating the collection membership change info|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/core/ledger/pvtdatastorage/store.go#L684].

 5) Enhance kvledger code for keeping track of [BlocksIterators|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/core/ledger/kvledger/kv_ledger.go#L533] issued and close the open iterators, as some of the iterators may be waiting for next block to commit. This intern should cause terminating the grpc stream in [deliver service|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/common/deliver/deliver.go#L316] causing returning [Service_Unavailable|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/common/ledger/blockledger/fileledger/impl.go#L48] status to deliver clients. The deliver service for block with private data should [return an error|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/core/peer/deliverevents.go#L155] if it has already received the block but receives an error while retrieving pvtdata, because the private data store would be closed.

6) Ensure that the opened TxSimulators starts returning errors, either explicitly or because of the closing the underlying data stores

7) Some mechanism may be needed stop the ongoing [snapshot generation|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/core/ledger/kvledger/snapshot.go#L94] for the channel. This may be tricky as the data exporting cycle from a db may take long. This may require enhancement in the snapshot generation code to check for a stop flag periodically. Also, enhance [snapshotMgr.shutdown|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/core/ledger/kvledger/snapshot_mgmt.go#L255] function to stop/wait for background goroutine ([here|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/core/ledger/kvledger/snapshot_mgmt.go#L137] and [here|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/core/ledger/kvledger/snapshot_mgmt.go#L197]) that generates a snapshot.

8) Close [commit notification channel|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/core/ledger/kvledger/kv_ledger.go#L898]

9) Remove the channel object from the list of channels

*Persistent Data deletion*
 As far as deletion of persistent data is concerned, there is already a [low level api|https://github.com/hyperledger/fabric/blob/b5a4fe942ea819011e403aeb843ad6f62564ffd4/core/ledger/kvledger/kv_ledger_provider.go#L466] for deleting the data from various stores. We already leverage this function for cleaning up the partial data left behind when a failure occur during bootstrapping a channel using a snapshot. Following are the further changes that are required in this context.

1) Include the deletion of data for the channel from transient store
 2) Introduce a [new status|https://github.com/hyperledger/fabric/blob/16259ed70a4cd57513be40a0678213d9274a9ae8/core/ledger/kvledger/msgs/ledger_metadata.pb.go#L26] ""UNDER_DELETION"" for the channel. [Set the status in the idStore|https://github.com/hyperledger/fabric/blob/16259ed70a4cd57513be40a0678213d9274a9ae8/core/ledger/kvledger/kv_ledger_provider.go#L629] and start deleting the ledger content. Finally, delete the ledger entry from the idStore. At the start of peer, like a ledger with this status should be deleted (as it would indicate a failure from previous delete, leaving behind the partial content. This is same as [we do|https://github.com/hyperledger/fabric/blob/16259ed70a4cd57513be40a0678213d9274a9ae8/core/ledger/kvledger/kv_ledger_provider.go#L122] with a ledger with status ""UNDER_CONSTRUCTION"".

*End user command*
 This would be similar to existing commands for [pause channel|https://github.com/hyperledger/fabric/blob/16259ed70a4cd57513be40a0678213d9274a9ae8/internal/peer/node/pause.go#L16];;;","29/Jun/21 12:07 PM;manish-sethi;As this is an infrequent operation, based on the discussions, keeping the scope limited in the first cut by requiring the peer to be shutdown.;;;","01/Jul/21 4:30 AM;jagadeesh.blockchain;+1

we have been looking for the same option from couple of years now. 

We have the below scenario:

One of the main peer joined in multiple channels, now one of the channel had reached 1 billion transactions, we want to remove the peer from that channel as we don't require to receive data any more and want to save the disk space and costing. 

One option is to shutdown the existing peer, create a new peer and join into existing channels, but the problem is: existing channels have around 50 to 60 million transactions which would take around a week time to sync the new peer. 

 

 

 ;;;",,,,,,,,,,,,,,,,,,,
bootstrap.sh fails to properly parse arguments,FAB-11335,32250,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,27/Jul/18 6:47 AM,04/Aug/18 12:45 AM,28/Oct/23 3:03 AM,04/Aug/18 12:45 AM,v1.2.0,,,,,,,,v1.3.0,,,fabric-tools,,,,,0,,,,,,,"The option for help is interpreted as the version number:
{code:java}
$ ./scripts/bootstrap.sh -h

Installing hyperledger/fabric-samples repo

===> Checking out v-h branch of hyperledger/fabric-samples
error: pathspec 'v-h' did not match any file(s) known to git.

Installing Hyperledger Fabric binaries
...
{code}
And the option not to download the binaries is ignored:

 
{code:java}
$ ./scripts/bootstrap.sh 1.2.0 -b

Installing hyperledger/fabric-samples repo

===> Checking out v1.2.0 branch of hyperledger/fabric-samples
Previous HEAD position was 1252c7a... [FAB-8920] Pin fabric-samples to node.js ""~1.1.0""
HEAD is now at ed81d7b... [FAB-10811] fabric-ca sample is broken on v1.2

Installing Hyperledger Fabric binaries

===> Downloading version 1.2.0 platform specific fabric binaries
===> Downloading:  https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/darwin-amd64-1.2.0/hyperledger-fabric-darwin-amd64-1.2.0.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 29.7M  100 29.7M    0     0  4543k      0  0:00:06  0:00:06 --:--:-- 5516k
==> Done.
===> Downloading version -b platform specific fabric-ca-client binary
===> Downloading:  https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric-ca/hyperledger-fabric-ca/darwin-amd64--b/hyperledger-fabric-ca-darwin-amd64--b.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current

{code}
 

 ",,denyeart,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzka7:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Aug/18 12:45 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/24839/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add UT for txmgmt/validator,FAB-11336,32300,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,diizuka,diizuka,diizuka,27/Jul/18 9:21 AM,19/Jun/19 12:29 AM,28/Oct/23 3:03 AM,19/Jun/19 12:29 AM,v1.1.0,v1.2.0,,,,,,,Future,,,fabric-ledger,,,,,0,,,,,,,"Increase test coverage

  for core/ledger/kvledger/txmgmt/validator/valimpl/helper.go",,diizuka,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkaf:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unit Test,,(Please add usage information),diizuka,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jun/19 12:29 AM;sykesm;https://gerrit.hyperledger.org/r/c/fabric/+/25183;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Update go version in fabric-baseimage jobs,FAB-11337,32301,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,27/Jul/18 4:02 PM,21/Sep/18 2:45 AM,28/Oct/23 3:03 AM,21/Sep/18 2:45 AM,,,,,,,,,,,,fabric-ci,,,,,0,,,,,,,The existing go version is set to go1.9.2 but this should point to go1.10.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkan:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2 Small Issues in Using Dev Mode,FAB-11338,32304,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,hajimuz,hajimuz,hajimuz,27/Jul/18 6:09 PM,27/Jul/18 10:26 PM,28/Oct/23 3:03 AM,27/Jul/18 10:25 PM,v1.1.0,,,,,,,,,,,fabric-docs,,,,,0,documentation,,,,,," Two issues in [Create channels ch1 and ch2|https://hyperledger-fabric.readthedocs.io/en/latest/peer-chaincode-devmode.html#create-channels-ch1-and-ch2] section of _Using Dev Mode_.

 

# The command for _Create channels ch1 and ch2_ is not formatted as code block due to missing blank line after {{::}} mark.
# The channel name {{cha1}} in the last sentence of this section should be {{ch1}}

 ",,denyeart,hajimuz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkbb:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,hajimuz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jul/18 10:26 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/24853/
https://gerrit.hyperledger.org/r/#/c/24855/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
As a token application developer I want to come up description of the configuration parameters for client setup,FAB-11339,32310,32176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,KaoutarEL,elli-androulaki,elli-androulaki,27/Jul/18 9:04 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,04/Feb/19 11:28 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,"To setup a Fabric client that leverages Fabric token management without privacy the following information need to be specified:
 - channel id where the fabtoken system resides
 - prover peer endpoint information
 - long term client identity in Fabric

 

This task relates to the incorporation of this information into a protocol message that would be provided at the client at its setup time.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:c",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/18 11:53 PM;elli-androulaki;https://gerrit.hyperledger.org/r/#/c/25267/;;;","22/Aug/18 3:18 PM;elli-androulaki;This CR was decided to be dropped, as there is no need for proto messages.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
As a token application developer I want to leverage the client configuration information to setup a mockup client,FAB-11340,32311,32176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,KaoutarEL,elli-androulaki,elli-androulaki,27/Jul/18 9:10 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,10/Dec/18 11:14 PM,,,,,,,,,,,,,,,,,0,fabtoken,,,,,,"In this case, a token client setup function is implemented where

 - a (serialised) token client configuration protocol message is passed to the setup function
 - the client setup function deserialises the proto message and ensures the information included in it is valid
 - the client setup function caches a fixed ""issuing policy"" to use throughout its transactions

 

No connection to the prover peer GRPC connection is attempted at this point.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:d",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a token application developer I want the client (static) setup operation to validate the prover peer endpoints,FAB-11341,32312,32176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,KaoutarEL,elli-androulaki,elli-androulaki,27/Jul/18 9:12 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,04/Feb/19 11:28 PM,,,,,,,,,,,,,,,,,0,fabtoken,,,,,,This refers to the client at setup time establishing a GRPC connection with the remote prover peer to validate the prover peer part of its configuration.,,elli-androulaki,KaoutarEL,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:e",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,KaoutarEL,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Dec/18 7:35 PM;KaoutarEL;https://gerrit.hyperledger.org/r/#/c/26138/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token application/client developer, I want to enhance the token client with interfaces that describe token issuing abilities",FAB-11342,32313,32188,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,KaoutarEL,elli-androulaki,elli-androulaki,27/Jul/18 9:19 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,04/Feb/19 10:05 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,An interface describing the client-side issuing operations is defined and a mockup extension of the client implementation considered at FAB-11286 is provided to accommodate client issuer abilities.,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11286,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:f",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a token client developer. I want to allow that invocation of issue/transfer/redeem request on the client side to leverage a real GRPC connection to the prover peer,FAB-11343,32314,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,elli-androulaki,elli-androulaki,27/Jul/18 9:22 PM,26/Oct/20 3:19 PM,28/Oct/23 3:03 AM,06/Feb/19 11:47 PM,,,,,,,,,,,,fabric-token,,,,,0,fabtoken,,,,,,Client local interface for grpc connection with the peer is implemented. In this way the implementation of issue/redemption/transfer operations is enhanced with the ability to submit the related request to a grpc connection to the prover service.,,elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11524,,,,,,,,FAB-11676,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-11153,,,No,,Unset,No,,,"1|hzwqfl:g",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Aug/18 3:09 PM;wonderfan;@[~elli-androulaki]  Do you start to work on this task? If not , i can take this task.;;;","16/Aug/18 11:49 PM;elli-androulaki;Hi [~wonderfan], thanks for your offer! [~KaoutarEL] (who is handling the parent story) is already working on it.  ;;;","27/Nov/18 1:13 AM;wenjian;This issue only handles redeem. CR is [https://gerrit.hyperledger.org/r/#/c/27385/]

Issue and Transfer CR: https://gerrit.hyperledger.org/r/#/c/28093/;;;",,,,,,,,,,,,,,,,,,,,,,,,
As a token client developer I want to allow that invocation of issue request on the client side results into an authenticated grpc request being submitted to the prover peer,FAB-11344,32315,32188,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,elli-androulaki,elli-androulaki,27/Jul/18 9:24 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,28/Aug/18 2:32 AM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,Here the client leverages its signing identity to create and submit a signed command to the prover peer grpc service.,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11675,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:h",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As token application developer I want the token client to send request to prover using real grpc client and signing identity,FAB-11345,32316,33095,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,elli-androulaki,elli-androulaki,27/Jul/18 9:26 PM,16/Jan/19 4:26 AM,28/Oct/23 3:03 AM,05/Jan/19 2:04 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkcv:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/18 9:46 PM;wenjian;CR: [https://gerrit.hyperledger.org/r/#/c/28093/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token application developer, I want to enhance the token client interface functions that describe token listing abilities",FAB-11346,32318,32189,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,elli-androulaki,elli-androulaki,27/Jul/18 9:34 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,17/Jan/19 7:30 AM,,,,,,,,,v2.0.0,,,fabric-token,,,,,0,fabtoken,,,,,,An interface describing the client-side listing tokens operations is defined and a mockup extension of the client implementation considered at FAB-11286 is provided to accommodate token listing abilities.,,elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:i",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Sep/18 2:35 AM;wenjian;CR: https://gerrit.hyperledger.org/r/#/c/26290/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
As a token client developer I want to allow that invocation of list tokens request on the client side results into a communication with the prover peer	,FAB-11347,32319,32189,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,elli-androulaki,elli-androulaki,27/Jul/18 9:35 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,17/Jan/19 7:32 AM,,,,,,,,,v2.0.0,,,,,,,,0,fabtoken,,,,,,Client implementation of list operation is enhanced with the ability to construct a grpc request to the prover grpc service for _listing tokens_ without requiring any fabric-layer signature based authentication.,,elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:j",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Nov/18 10:27 PM;wenjian;CR: https://gerrit.hyperledger.org/r/#/c/26290/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
As a token client developer I want to allow that invocation of list tokens request on the client side results into an authenticated grpc request being submitted to the prover peer,FAB-11348,32320,32189,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,elli-androulaki,elli-androulaki,27/Jul/18 9:36 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,28/Aug/18 2:37 AM,,,,,,,,,Future,,,fabric-crypto,,,,,0,,,,,,,Here the client constructs as signed (authenticated) grpc request for listing its tokens that is submitted to the prover peer grpc service.,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11675,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:k",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I want to define the part of the prover peer GRPC service interface that accommodates issue requests",FAB-11349,32321,32692,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,27/Jul/18 9:41 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,27/Aug/18 11:17 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,,,,,,,"Definition of peer interface for accommodating _issue requests_ (i.e., computation of issue proofs) on GRPC side and mockup implementation of a prover peer's issue proof computation interface.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11499,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:l",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Aug/18 8:53 PM;elli-androulaki;https://gerrit.hyperledger.org/r/#/c/25193/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I want to define a Token Management System (TMS ) issuer interface",FAB-11350,32322,32184,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,mathiasb303,elli-androulaki,elli-androulaki,27/Jul/18 9:44 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,04/Feb/19 10:44 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,"A Token Management System is an abstraction that aims to generalise the set of operations associated to the issuing, transfer and listing of tokens at a relatively lower level. It is essentially a library that can be used by FabToken entities (client, prover peer) to construct the FabToken issue and transfer transactions, to list the tokens owned by a specific user, etc, and to validate/commit FabToken transactions (committing peer side).

In this task we aim to design an interface for a _TMS issuer_ that would compute token issue proofs (low level) and of a _TMS Verifier_ interface that would verify token issue _TMS Issuer_ generated proofs. The task should also provide a mockup implementation of these interfaces.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11525,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:m",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I would like to implement the processing of (unauthenticated) issue requests with a local mockup for computing proofs",FAB-11351,32325,32692,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,27/Jul/18 10:02 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,08/Nov/18 6:19 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,Prover peer implementation of issue proof computation flow is provided considering a mockup implementation of local interfaces presumed to compute issue proofs.,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:n",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Aug/18 12:03 AM;elli-androulaki;[https://gerrit.hyperledger.org/r/#/c/25273/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,
v1.3.0 Commencement,FAB-11352,32326,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,rickr,rickr,27/Jul/18 10:05 PM,30/Jul/18 10:21 PM,28/Oct/23 3:03 AM,30/Jul/18 10:21 PM,v1.3.0,,,,,,,,v1.3.0,,,fabric-sdk-java,,,,,0,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkf3:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Jenkinsfile configuration to capture build artifacts,FAB-11353,32161,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,24/Jul/18 11:52 PM,27/Jul/18 10:09 PM,28/Oct/23 3:03 AM,27/Jul/18 10:08 PM,,,,,,,,,v1.3.0,,,fabric-samples,,,,,0,,,,,,,"Update Jenkinsfile configuration to capture build artifacts (.log) files.
{code:java}
      stage(""Archive Build artifacts"") {
          archiveArtifacts artifacts: '**/*.log'
      }{code}",,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx29r:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jul/18 10:09 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/23805/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I would like to implement the processing of (unauthenticated) issue requests with a fully implemented TMS Issuer",FAB-11354,32327,32184,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,elli-androulaki,elli-androulaki,27/Jul/18 10:09 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,31/Oct/18 2:25 AM,,,,,,,,,,,,,,,,,0,,,,,,,"*Acceptance*: A (simulated) client constructs a request to construct an issue proof by 
providing the type and quantity of assets to be introduced into the system, and invokes 
the peer API. The peer would need to construct the corresponding issue proof and return 
it to the (simulated) client. Acceptance would require that the constructed proof matches 
the input parameters of the request.

 

Prover peer component is here linked to a fully implemented TMS Issuer that is leveraged for proof computation. This is done by implementing the local interfaces specified in FAB-11351 with code that leverages the TMS component defined in FAB-11293. Client requests may still be unauthenticated (not carry any real signature).",,elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:o",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Sep/18 11:29 AM;wenjian;CR: https://gerrit.hyperledger.org/r/#/c/26243/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I would like to implement the processing of TLS-authenticated client requests ",FAB-11355,32328,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,elli-androulaki,elli-androulaki,27/Jul/18 10:13 PM,04/Feb/19 10:59 PM,28/Oct/23 3:03 AM,04/Feb/19 10:59 PM,,,,,,,,,,,,fabric-crypto,,,,,0,,,,,,,Prover peer grpc service is now ready to fully process TLS-authenticated client requests to for proof computation. At the end of this item acceptance criteria of the parent item should be fulfilled.,,angelo.decaro,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-11149,,,No,,Unset,No,,,"1|hzwryn:",,,,Unset,Unset,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),angelo.decaro,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Oct/18 6:01 PM;elli-androulaki;I am not sure that for token related requests to prover peer, the *client* side authentication is needed. Prover peer side TLS  connection should suffice... 
 [~angelo.decaro], [~KaoutarEL], [~wenjian], [~mathiasb303] what do you guys think?

Another question we should ask, is ""do we care that the prover peer request (SignedCommand) is transferrable, i.e., can be relayed by a malicious /compromised prover peer to another peer who is not compromised""? The honest peer in this case would take for granted that the sender of the request is the actual client since the only way to authenticate the request would be the signature in the relayed signedCommand. Therefore the honest peer would respond (with a TokenTransaction in the case of issue/transfer/redeem or a list of client tokens in the case of list tokens). 

That said, one of the core assumptions in the system is that the client *trusts* the prover peer. Therefore, protecting against such attack (assuming the client may accidentally connect to the wrong peer) could be less of a priority. 

If we decide this is not needed, we should close this Jira or move it to another epic, related to future work on tokens.;;;","25/Oct/18 6:10 PM;angelo.decaro;There exists already code in Fabric that binds the request to the TLS Unique field. Look at what happens for the Events. We can just simply reuse that code. My suggestion, would be to give this less priority but to have it in at some point anyway.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I want to define the part of the prover peer GRPC service interface that accommodates list tokens requests",FAB-11356,32329,32185,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,elli-androulaki,elli-androulaki,27/Jul/18 10:26 PM,13/Nov/18 12:35 PM,28/Oct/23 3:03 AM,13/Nov/18 12:35 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,,,,,,,"Definition of peer interface for accommodating _list tokens requests_ (i.e., computation of list of tokens owned by the request originator) on GRPC side and mockup implementation of a prover peer's _listing tokens_ interface.",,elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkfj:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Sep/18 12:29 AM;wenjian;CR: https://gerrit.hyperledger.org/r/#/c/26052/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I want to define a Token Management System (TMS ) transactor interface that lists transactor's tokens",FAB-11357,32330,32185,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,mathiasb303,elli-androulaki,elli-androulaki,27/Jul/18 10:30 PM,04/Feb/19 10:38 PM,28/Oct/23 3:03 AM,04/Feb/19 10:38 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,"A Token Management System is an abstraction that aims to generalise the set of operations associated to the issuing, transfer and listing of tokens at a relatively lower level. It is essentially a library that can be used by FabToken entities (client, prover peer) to construct the FabToken issue and transfer transactions, to list the tokens owned by a specific user, etc, and to validate/commit FabToken transactions (committing peer side).

In this task we aim to design an interface for a _TMS Transactor_ that would list the tokens of a transactor (low level). The task should also provide a mockup implementation of this interface.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkfr:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I would like to implement the processing of (unauthenticated) list tokens requests with a mockup TMS",FAB-11358,32331,32185,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,elli-androulaki,elli-androulaki,27/Jul/18 10:31 PM,13/Nov/18 12:33 PM,28/Oct/23 3:03 AM,13/Nov/18 12:32 PM,,,,,,,,,v2.0.0,,,fabric-crypto,,,,,0,,,,,,,Prover peer implementation of _list tokens_ flow is provided considering the mockup TMS produced by FAB-11357.,,elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkfz:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Aug/18 3:04 AM;wenjian;CR: [-https://gerrit.hyperledger.org/r/#/c/25287/-]

New CR: https://gerrit.hyperledger.org/r/#/c/26052/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
As a token infrastructure (peer) developer I would like to implement the Token Management System Transactor interface for listing tokens,FAB-11359,32332,32185,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,KaoutarEL,elli-androulaki,elli-androulaki,27/Jul/18 10:35 PM,26/Nov/18 4:38 PM,28/Oct/23 3:03 AM,10/Nov/18 12:16 AM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,"*Acceptance*: A simulated client submits to the prover peer a request to list its tokens. Peer responds with the list of tokens that the requestor owns as indicated by the TMS pool state. If this is a memory-based pool, then we expect that the response depends on the content of the pool. If this is a ledger based pool, then the peer is expected to respond with the list of tokens owned by the requestor as shown in ledger state. 

 

We aim to offer a  TMS system list tokens owned by a specific user considering a mockup ledger. ",,angelo.decaro,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkg7:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),angelo.decaro,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Nov/18 4:38 PM;angelo.decaro;https://gerrit.hyperledger.org/r/#/c/26349/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I would like to implement the processing of (unauthenticated) list tokens requests with a fully implemented TMS Transactor with listing tokens capabilities",FAB-11360,32333,32185,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,KaoutarEL,elli-androulaki,elli-androulaki,27/Jul/18 10:38 PM,12/Nov/18 11:25 PM,28/Oct/23 3:03 AM,10/Nov/18 12:16 AM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,Prover peer component is here linked to a fully implemented TMS Transactor that support listing tokens abilities. TMS Transactor needs to be adjusted to a real ledger interface (compared to FAB-11359). Client requests may still be unauthenticated (not carry any real signature).,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkgf:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Sep/18 9:42 PM;elli-androulaki;https://gerrit.hyperledger.org/r/#/c/26451/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I would like to implement the processing of authenticated list tokens  requests",FAB-11361,32334,32185,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,elli-androulaki,elli-androulaki,27/Jul/18 10:39 PM,26/Nov/18 10:39 PM,28/Oct/23 3:03 AM,26/Nov/18 10:39 PM,,,,,,,,,,,,,,,,,0,,,,,,,"Prover peer grpc service is now ready to fully process authenticated client requests to for listing a client's tokens. At the end of this item acceptance criteria of the parent item should be fulfilled for listing tokens should be fulfilled.

In fact, this work refers to extending the work done here [https://gerrit.hyperledger.org/r/#/c/26493/] to allow the peer to check access rights to submitters of listTokens requests, prior to serving the actual request.",,elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkgn:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Nov/18 12:38 PM;wenjian;This subtask is already covered by FAB-12013. CR is https://gerrit.hyperledger.org/r/#/c/26493/.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Link to Kafka config sample,FAB-11363,32336,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,kchristidis,kchristidis,kchristidis,27/Jul/18 10:55 PM,01/Aug/18 3:36 AM,28/Oct/23 3:03 AM,01/Aug/18 3:36 AM,,,,,,,,,v1.3.0,,,fabric-orderer,,,,,0,kafka,,,,,,Removing the bddtests folder meant we also remove the sample configuration file for the Kafka-based ordering service. We need to add a link to it in the ordering service FAQ as our users in #fabric-orderer have questions that can be addressed by it.,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";27/Jul/18 11:06 PM;kchristidis;360",,0,360,,,0,360,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkgv:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jul/18 11:08 PM;kchristidis;https://gerrit.hyperledger.org/r/c/24863/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token application/client developer, I want to enhance the token client with interfaces that describe token transfer abilities",FAB-11364,32337,32190,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,KaoutarEL,elli-androulaki,elli-androulaki,27/Jul/18 11:06 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,14/Jan/20 12:12 AM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,stale-item,,,,,An interface describing the client-side token transfer operations is defined and a mockup extension of the client implementation considered at FAB-11286 is provided to accommodate client transactor (for transfer tokens) abilities.,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:p",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a token client developer I want to allow that invocation of transfer request on the client side results into a communication with the prover peer,FAB-11365,32338,32190,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,elli-androulaki,elli-androulaki,27/Jul/18 11:07 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,12/Mar/19 5:54 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,,,,,,,Client implementation of transfer tokens operation is enhanced with the ability to construct a grpc request to the prover grpc service for requesting a transfer proof without requiring any fabric-layer signature based authentication.,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:q",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a token client developer I want to allow that invocation of transfer request on the client side results into an authenticated grpc request being submitted to the prover peer for computation of transfer proof,FAB-11366,32339,32190,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,elli-androulaki,elli-androulaki,27/Jul/18 11:08 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,28/Aug/18 2:39 AM,,,,,,,,,Future,,,fabric-crypto,,,,,0,,,,,,,Here the client constructs as signed (authenticated) grpc request that is submitted to the prover peer grpc service for computing the respective transfer proof.,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11675,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:r",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integration tests fail in multiple builds as peer was unable to fetch private data.,FAB-11367,32340,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,sambhavdutt,sambhavdutt,27/Jul/18 11:11 PM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,29/Jul/18 9:39 PM,v1.3.0,,,,,,,,v1.3.0,,,fabric-ledger,,,,,0,ci-failure,,,,,,"The fabric-verify-integration-tests-x86_64 fails several times with similar error in different patchsets,  because the peer could not retrieve private data that was purged. There is also Endorsement fail during query with this error.

*fabric Commit: f660b87*

{code:java}
01:21:48       Error: endorsement failure during query. response: status:500 message:""{\""Error\"":\""Failed to get private details for marble1: GET_STATE failed: transaction ID: 88a5a9cd1e7ddd0e29bd4f97890b9042978817d63228313f4c462397b7db4106: private data matching public hash version is not available. Public hash version = &version.Height{BlockNum:0x4, TxNum:0x0}, Private data version = (*version.Height)(nil)\""}"" 

01:21:48 [Fail] PrivateData-EndToEnd collection config BlockToLive is respected [It] verifies private data is purged after BTL has passed and new peer doesn't pull private data that was purged 
01:21:48 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/helpers/utils.go:23
01:21:48 
01:21:48 [Fail] PrivateData-EndToEnd network partition with respect of private data [It] verifies private data not distributed when there is network partition 
01:21:48 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:446
01:22:46 There were failures detected in the following suites:
01:22:46 	pvtdata ./integration/pvtdata
.
.
.
========================================================================================
08:49:29 [o][query] {""docType"":""marblePrivateDetails"",""name"":""marble1"",""price"":99}
08:49:29 • Failure [46.147 seconds]
08:49:29 PrivateData-EndToEnd collection config BlockToLive is respected [It] verifies private data is purged after BTL has passed and new peer doesn't pull private data that was purged 
08:49:29 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:284
08:49:29 
08:49:29   Expected an error to have occurred.  Got:
08:49:29       <nil>: nil
08:49:29 
08:49:29   /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/pvtdata/e2e_test.go:506
08:49:29 ------------------------------
{code}

*Build Logs*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-verify-integration-tests-x86_64/958/

https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-integration-tests-x86_64/958/consoleFull",,denyeart,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11385,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkhr:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jul/18 9:38 PM;denyeart;Fixed in FAB-11385.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I want to define the part of the prover peer GRPC service interface that accommodates transfer requests",FAB-11368,32341,32697,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,angelo.decaro,elli-androulaki,elli-androulaki,27/Jul/18 11:12 PM,26/Nov/18 10:27 PM,28/Oct/23 3:03 AM,26/Nov/18 10:27 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,"Definition of peer interface for accommodating _transfer requests_ (i.e., computation of transfer proofs) on GRPC side and mockup implementation of a prover peer's issue proof computation interface.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12013,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkhz:",,,,Unset,Unset,Next Items- Ledger,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Aug/18 12:18 AM;elli-androulaki;This was part of  [https://gerrit.hyperledger.org/r/#/c/25193/|https://gerrit.hyperledger.org/r/#/c/25519/] but is now going to be part of another CR. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I want to define a Token Management System (TMS ) transactor interface with transfer abilities",FAB-11369,32342,32186,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,mathiasb303,elli-androulaki,elli-androulaki,27/Jul/18 11:13 PM,04/Feb/19 10:41 PM,28/Oct/23 3:03 AM,04/Feb/19 10:41 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,"A Token Management System is an abstraction that aims to generalise the set of operations associated to the issuing, transfer and listing of tokens at a relatively lower level. It is essentially a library that can be used by FabToken entities (client, prover peer) to construct the FabToken issue and transfer transactions, to list the tokens owned by a specific user, etc, and to validate/commit FabToken transactions (committing peer side).

In this task we aim to design an interface for a _TMS Transactor_ that would compute token transfer proofs (low level) and of a _TMS Verifier_ interface that would verify token transfer _TMS Transactor_ generated proofs. The task should also provide a mockup implementation of these interfaces.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzki7:",,,,Unset,Unset,Next Items- Ledger,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I would like to implement the processing of (unauthenticated) transfer requests with a mockup local interface for computing transfer proofs",FAB-11370,32343,32697,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,27/Jul/18 11:14 PM,26/Nov/18 4:41 PM,28/Oct/23 3:03 AM,26/Nov/18 4:41 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,Prover peer implementation of transfer proof computation flow is provided considering a mockup local interface for computing transfer proofs. ,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkif:",,,,Unset,Unset,Next Items- Ledger,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Aug/18 12:19 AM;elli-androulaki;https://gerrit.hyperledger.org/r/#/c/25948/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
As a token infrastructure (peer) developer I would like to implement the Token Management System Transactor interface for transferring tokens and be able to verify its outputs,FAB-11371,32344,32186,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mathiasb303,elli-androulaki,elli-androulaki,27/Jul/18 11:20 PM,27/Nov/18 5:29 PM,28/Oct/23 3:03 AM,12/Nov/18 9:21 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,"A Token Management System is an abstraction that aims to generalise the set of operations associated to the issuing, transfer and listing of tokens at a relatively lower level. It is essentially a library that can be used by FabToken entities (client, prover peer) to construct the FabToken issue and transfer transactions, to list the tokens owned by a specific user, etc, and to validate/commit FabToken transactions (committing peer side).

 

At the completion of this work a Token Management System (TMS) is implemented as follows: 
 * the Token Management System accommodates requests to construct _transfer proofs_
 * the TMS accommodates requests to verify _transfer_ requests __ assuming a mockup of ledger (KVS) as follows:
 ** *malformed* _transfer_ _requests_ or_requests_ that do *not* conform with the TMS rules (e.g., correctness of the tokens created, double-spending attacks spending attacks) are *rejected* and have *no* impact to the mockup ledger
 ** *wellformed* _transfer_ _requests_ or _requests_ that conform with the TMS rules (e.g., correctness of the tokens created w.r.t. the ones consumed) are *accepted* and modify the state of mockup ledger ",,elli-androulaki,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11292,,,,,,,,FAB-11291,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkin:",,,,Unset,Unset,Next Items- Ledger,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Aug/18 4:26 PM;mathiasb303;https://gerrit.hyperledger.org/r/#/c/25775/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I would like to implement the processing of (unauthenticated) transfer requests with a fully implemented TMS Transactor with transfer tokens abilities",FAB-11372,32345,32186,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,KaoutarEL,elli-androulaki,elli-androulaki,27/Jul/18 11:22 PM,26/Nov/18 4:37 PM,28/Oct/23 3:03 AM,12/Nov/18 10:06 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,Prover peer component is here linked to a fully implemented TMS Transactor that support transfer tokens abilities. This requires the implementation of local interfaces defined in FAB-11370 with the actual TMS Transactor implementation provided by FAB-11371. ,,angelo.decaro,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkiv:",,,,Unset,Unset,Next Items- Ledger,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),angelo.decaro,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Nov/18 4:37 PM;angelo.decaro;https://gerrit.hyperledger.org/r/#/c/26876/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a token infrastructure (peer) developer, I would like to implement the processing of authenticated transfer requests",FAB-11373,32346,32697,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,elli-androulaki,elli-androulaki,27/Jul/18 11:24 PM,26/Nov/18 10:29 PM,28/Oct/23 3:03 AM,26/Nov/18 10:29 PM,,,,,,,,,Future,,,fabric-crypto,,,,,0,fabtoken,,,,,,Prover peer grpc service is now ready to fully process authenticated client requests to for transfer proof computation. At the end of this item acceptance criteria of the parent item should be fulfilled.,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11675,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkj3:",,,,Unset,Unset,Next Items- Ledger,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service Discovery - Remaining items,FAB-11374,32349,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,denyeart,denyeart,28/Jul/18 1:23 AM,23/Jan/20 7:33 AM,28/Oct/23 3:03 AM,23/Jan/20 7:33 AM,,,,,,,,,v2.1.0,,,,,,,,0,stale-item,,,,,,"Add SDK Service Discovery support for chaincode to chaincode scenarios.
Add SDK Service Discovery support for private data collection scenarios.

Add Service Discovery peer and SDK support for the new v1.3 state-based endorsement feature.",,denyeart,harrisob@us.ibm.com,n-horiguchi,sykesm,TiantianGao,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8779,,,,,,,,,,,,,,,,,,,,,Minimal SDK improvements only for v1.3. Defer the more advanced cc2cc and state-based endorsement support.,(Please add high level design or a link to the design),Required,Unset,Not Required,ghx-label-1,,Service Discovery - Remaining items,To Do,No,,Required,No,,,"1|hzzkjj:",,,,Yes,Unset,,,(Please add steps to reproduce),,Unset,,,,,"[see https://fabric-sdk-node.github.io/tutorial-discovery.html on how to use the new feature added to NodeSDK using discovery for chaincode to chaincode and collections endorsements, basically it has the application call for an endorsement with one new added parameter that tells the NodeSDK that it should make a discovery call with a hint on how discovery should calculate the endorsement plan
The NodeSDK functional testing included installing two chaincodes, having one call the other. Using two peers and sending a request to discovery to provide an endorsement plan based on the two chaincode names. Then endorse using the provided plan.

Integration testing should include a collection and design the endorsement and collection policies to not include the same peers.

] 

and 

[Rajesh Lalgowdar for the collections changes that impact sidedb tests.]

Systest Prime: Dongming Hwang",Unset,,Unset,,(Please add usage information),denyeart,harrisob@us.ibm.com,n-horiguchi,sykesm,TiantianGao,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Aug/18 11:22 PM;yacovm;[~harrisob@us.ibm.com] [~rickr] even though we decided to postpone the cc2cc and collection support from v1.3, we still have items that can be done if time permits, so I think that all items but:
FABN-842 FABJ-336 FABN-843 FABJ-337 are fair game, though it makes sense for Java SDK to focus on Idemix for v1.3 over service discovery :) 

[~denyeart] ;;;","17/Aug/18 3:11 AM;denyeart;[~harrisob@us.ibm.com] Please highlight which items will be done for v1.3 in node sdk.  Edit test plan field (collaborate with [~dongming] on system test plan).;;;","17/Aug/18 4:04 AM;harrisob@us.ibm.com;I plan to complete the following discovery items
FABN-842 - Chaincode to chaincode
 FABN-843 - collections;;;","15/Sep/18 9:01 PM;denyeart;[~harrisob@us.ibm.com] please add some information in the test plan field above, e.g. a high level description of how FAB-842 and FAB-843 were integration tested (just mention that test scenarios were added in node.js integration test suite), and what scenarios you think should be added to system tests (although they are likely low priority for running before v1.3 release candidate).;;;","15/Jan/19 4:44 AM;harrisob@us.ibm.com;I should not be the overall owner of this item;;;","23/Jan/20 7:33 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,
Update anchor peers definition in gossip doc,FAB-11376,32353,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,28/Jul/18 4:07 AM,28/Jul/18 9:02 PM,28/Oct/23 3:03 AM,28/Jul/18 9:02 PM,,,,,,,,,v1.3.0,,,fabric-docs,,,,,0,,,,,,,The section on anchor peers in the gossip doc should be updated to reflect the refactoring done in the glossary.,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkjz:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
make docker-clean failed when there are no expected docker images,FAB-11377,32368,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,zjubfd,zjubfd,zjubfd,28/Jul/18 5:20 PM,01/Aug/18 6:56 AM,28/Oct/23 3:03 AM,31/Jul/18 4:58 AM,,,,,,,,,,,,,,,,,0,,,,,,,"Execute ""make docker-clean"" failed when there are no images related with fabric. Error message is:

""docker rmi"" requires at 1 one argument.

Use ""xargs -r docker rmi -f"" instead of ""xargs docker rmi -f"" to fix this. ",,denyeart,sykesm,zjubfd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11414,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkmv:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,sykesm,zjubfd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jul/18 1:48 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/24887/;;;","01/Aug/18 2:57 AM;sykesm;This breaks builds on BSD based tool chains (MacOS).

{code}
$ make clean-all
docker images --quiet --filter=reference='hyperledger/fabric-peer:amd64-1.3.0-snapshot-*' | xargs -r docker rmi -f
xargs: illegal option -- r
usage: xargs [-0opt] [-E eofstr] [-I replstr [-R replacements]] [-J replstr]
             [-L number] [-n number [-x]] [-P maxprocs] [-s size]
             [utility [argument ...]]
make: [peer-docker-clean] Error 1 (ignored)
docker images --quiet --filter=reference='hyperledger/fabric-orderer:amd64-1.3.0-snapshot-*' | xargs -r docker rmi -f
xargs: illegal option -- r
usage: xargs [-0opt] [-E eofstr] [-I replstr [-R replacements]] [-J replstr]
             [-L number] [-n number [-x]] [-P maxprocs] [-s size]
             [utility [argument ...]]
make: [orderer-docker-clean] Error 1 (ignored)
docker images --quiet --filter=reference='hyperledger/fabric-ccenv:amd64-1.3.0-snapshot-*' | xargs -r docker rmi -f
xargs: illegal option -- r
usage: xargs [-0opt] [-E eofstr] [-I replstr [-R replacements]] [-J replstr]
             [-L number] [-n number [-x]] [-P maxprocs] [-s size]
             [utility [argument ...]]
make: [ccenv-docker-clean] Error 1 (ignored)
docker images --quiet --filter=reference='hyperledger/fabric-buildenv:amd64-1.3.0-snapshot-*' | xargs -r docker rmi -f
xargs: illegal option -- r
usage: xargs [-0opt] [-E eofstr] [-I replstr [-R replacements]] [-J replstr]
             [-L number] [-n number [-x]] [-P maxprocs] [-s size]
             [utility [argument ...]]
make: [buildenv-docker-clean] Error 1 (ignored)
docker images --quiet --filter=reference='hyperledger/fabric-testenv:amd64-1.3.0-snapshot-*' | xargs -r docker rmi -f
xargs: illegal option -- r
usage: xargs [-0opt] [-E eofstr] [-I replstr [-R replacements]] [-J replstr]
             [-L number] [-n number [-x]] [-P maxprocs] [-s size]
             [utility [argument ...]]
make: [testenv-docker-clean] Error 1 (ignored)
docker images --quiet --filter=reference='hyperledger/fabric-tools:amd64-1.3.0-snapshot-*' | xargs -r docker rmi -f
xargs: illegal option -- r
usage: xargs [-0opt] [-E eofstr] [-I replstr [-R replacements]] [-J replstr]
             [-L number] [-n number [-x]] [-P maxprocs] [-s size]
             [utility [argument ...]]
make: [tools-docker-clean] Error 1 (ignored)
{code};;;","01/Aug/18 3:10 AM;sykesm;The command has a hyphen in front of it so this should not have caused the build to ""fail"". The error would be reported and continue on.

Now that a flag that is not supported on BSD is used, it breaks the clean targets when building on MacOS as the images aren't removed.

I believe the original issue of noise would be preferred to a broken target.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Add extraction of endorsement policy for key level endorsement to core/cclifecycle,FAB-11378,32369,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,yacovm,yacovm,yacovm,28/Jul/18 7:18 PM,11/Feb/19 5:21 PM,28/Oct/23 3:03 AM,11/Feb/19 5:21 PM,,,,,,,,,Future,,,fabric-peer,,,,,0,,,,,,,"The cclifecycle has a method which returns chaincode metadata based on the chaincode name and the channel name.

 

An additional method should be introduced which returns back endorsement policies based on  keys of a specific chaincode in a given channel.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-11374,,,No,,Unset,No,,,"1|hzzkn3:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add state based endorsement support to the discovery protobuf ,FAB-11380,32371,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,yacovm,yacovm,yacovm,28/Jul/18 8:08 PM,11/May/19 10:38 PM,28/Oct/23 3:03 AM,11/May/19 10:38 PM,,,,,,,,,Future,,,,,,,,0,,,,,,,"The discovery protobuf has a message which defines a chaincode call inside a chaincode invocation chain:


{code:java}
// ChaincodeCall defines a call to a chaincode.
// It may have collections that are related to the chaincode
 
message ChaincodeCall {

string name = 1;

repeated string collection_names = 2;
 
} 
{code}

We should add to it a sequence of keys to specify the keys being used in the chaincode invocation.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11381,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-11374,,,No,,Unset,No,,,"1|hzzknb:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jul/18 11:51 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/24915/;;;","03/Aug/18 2:57 AM;yacovm;Reverting this due to the decision in the last maintainer call to not implement this in v1.3;;;","03/Aug/18 2:59 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/25069/;;;",,,,,,,,,,,,,,,,,,,,,,,,
Implement state based endorsement support in discovery service,FAB-11381,32372,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,yacovm,yacovm,yacovm,28/Jul/18 8:15 PM,11/May/19 10:37 PM,28/Oct/23 3:03 AM,11/May/19 10:37 PM,,,,,,,,,Future,,,fabric-peer,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11380,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-11374,,,No,,Unset,No,,,"1|hzzknj:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
State based endorsements operations flow,FAB-11382,32373,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,yacovm,yacovm,28/Jul/18 9:59 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,Future,,,,,,,,0,stale-item,,,,,,"I think that ideally - the user should be oblivious of the fact that a chaincode has state based endorsement or not, and the discovery service can hint to the SDK in the endorsement descriptor given by the query response - whether the chaincode has state based endorsements or not.

That's because, since the discovery query (to obtain the set of endorsers for the chaincode) happens before the actual chaincode execution - the discovery service can't foresee the keys the chaincode execution would update (without executing the chaincode itself ;) )

Therefore, if the SDK sees a hint in the endorsement descriptor returned by the peer - it would know that it would need to send to the peer a subsequent query after the endorsement of the proposal, in which it would specify the keys in the write-set that are changed, in order for the discovery service to compute a new endorsement descriptor that satisfies the combination of the endorsement policies of these keys.

The discovery service would extract the endorsement policies for the keys, convert them to the discovery representation of endorsement policies, and then combine them all to a policy that satisfies each policy in the combination.
 The endorsement descriptor returned from that 2nd discovery query would be derived from that combined policy.

This would mean that state-based endorsements transactions (that are sent to ordering) would require a discovery query beforehand, but I think that's a necessary evil considering the fact that in state based endorsements - anyone can change the owners of the key without the SDK to know, and thus - the peer set derived from the endorsement policy the SDK uses can be stale.

A way to make this more efficient, is for the SDK to cache endorsement descriptors per key, and optimistically reuse these descriptors and hope the key ownership hasn't changed.

Given that in some use cases - only filtered events are returned to the SDK, I don't think that parsing events and figuring out which key metadata has changed and invalid the cached per-key descriptors is the way to go.

 

Now, in any case - the SDK would need to pass the keys from the RWSet in order for endorsement descriptor to be calculated according to the following logic (taken from the playback):

!Capture.PNG!

 

This means, that if a key doesn't have an attached EP, or doesn't exist - the EP for that key to be taken into the computation of the combination of the EPs would be the chaincode's own EP.

 

Opinions?

[~ales]  [~mne] [~denyeart] [~mastersingh24] [~jyellick] [~C0rWin] [~rickr] [~harrisob@us.ibm.com]",,ales,ChanderGovindarajan,isaacwch,rickr,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/18 10:08 PM;yacovm;Capture.PNG;https://jira.hyperledger.org/secure/attachment/15406/Capture.PNG",,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-11374,,,No,,Unset,No,,,"1|hzzknr:",,,,Yes,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ales,ChanderGovindarajan,isaacwch,rickr,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/18 10:29 PM;ales;[~yacovm], it makes sense to me. I'm only not sure about the caching part: under which conditions will the SDK evict stale cache entries?;;;","30/Jul/18 10:35 PM;yacovm;{quote}under which conditions will the SDK evict stale cache entries?
{quote}
The SDK should register to the events, and whenever the chaincode is upgraded - an event is put by LSCC, so it should then re-query the keys.;;;","30/Jul/18 10:47 PM;ales;Thing is, you don't need a chaincode upgrade to change a state-level endorsement policy - it can be done via chaincode.;;;","30/Jul/18 10:50 PM;yacovm;So maybe we can emit an event whenever the metadata is updated, or worst case we can fall back to a retry in case the transaction doesn't pass validation because of endorsement policy?;;;","30/Jul/18 10:54 PM;ales;It's certainly possible to track state-level EP changes since they generate a special rwset message. Could this be used to generate events or should the standard chaincode event infrastructure be used? Retry after cache entry flush is certainly an option otherwise.;;;","30/Jul/18 11:16 PM;yacovm;We have a problem in case of filtered events, that's why I proposed the events... would like other opinions if possible;;;","01/Aug/18 2:23 AM;rickr;How likely is it that when all said and done it would not be better to just get all endorsements possibly needed ? I understand that we would in some cases be getting more endorsemetns than needed. Could the chaincode writer not provide meta data that his chaincode will need to satisfy a set of endorsement policies (including the keys) and chaincodes that it will call. Discovery would inspect this and come up with the endorsements ?  Not understanding the use cases here maybe not possible but just wanted to float this by you;;;","01/Aug/18 2:24 AM;rickr;I guess the short way of putting that is just do the *_SHOT GUN _*approach! :)
;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,
"As a Fabric CLI user, I expect all commands to print their status on screen",FAB-11383,32378,,Story,Backlog,FAB,Fabric,software,denyeart,,,Lowest,,TopJohn,kchristidis,kchristidis,28/Jul/18 10:51 PM,15/Oct/19 12:24 PM,28/Oct/23 3:03 AM,,v1.2.0,,,,,,,,,,,fabric-peer,,,,,0,help-wanted,,,,,,"h2. What?

Perhaps this will be a non-issue when the CLI is eventually redesigned, but as things stand, there are certain operations that leave the user hanging as to whether their invocation was successful or not.

As an example, at the INFO log level, this is the only output a Fabric CLI user sees when they instantiate a chaincode:
{noformat}
2018-07-28 13:43:44.929 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc
2018-07-28 13:43:44.929 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc
{noformat}
Or consider the case where they wish to sign a transaction (using peer channl signconfigtx):
{noformat}
2018-07-28 14:06:22.880 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
{noformat}
There is no information in either of these cases to let the users know whether the operation succeeded or not.
h2. How to fix this?

Add a log level message (INFO for success, ERROR for error) that prints the status of the operation.",,kchristidis,shitaibin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,FAB-10734,,,No,,Unset,No,,,"1|hzzkov:",,,,No,Unset,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),kchristidis,shitaibin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Aug/19 8:35 PM;shitaibin;Hi, [~denyeart] and [~kchristidis], is the  expected log should like of installing a chaincode.

 

 
{code:java}
2019-07-17 06:34:51.542 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc
 2019-07-17 06:34:51.542 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc
 2019-07-17 06:34:51.817 UTC [chaincodeCmd] install -> INFO 003 Installed remotely response:<status:200 payload:""OK"" >{code}
 

 

If that so, i want to fix this issue.;;;","13/Aug/19 6:23 PM;shitaibin;Instantiate chaincode needs a transaction. It would not slove the problem if just adding log message in `instantiate` or it's caller.

 

After adding log messages for proposal response and broadcasting transaction, users can know its successes and errors, but not whether the deployment succeeded or failed.

 

The CLI user should use another command to know the result:
{code:java}
root@7c6f4929058c:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode list --instantiated -C mychannel
 use default log.
 Get instantiated chaincodes on channel mychannel:
 Name: mycc, Version: 1.0, Path: github.com/chaincode/chaincode_example02/go/, Escc: escc, Vscc: vscc
{code}
 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
CI incorrectly passes when build fails,FAB-11384,32379,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,rameshthoomu,ryjones,ryjones,29/Jul/18 12:06 AM,02/Dec/18 10:42 AM,28/Oct/23 3:03 AM,02/Dec/18 10:42 AM,,,,,,,,,v1.4.0,,,fabric-ci,,,,,0,ci,,,,,,"see logs here: [https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-verify-build-checks-x86_64/3435/console.log.gz]

 

[INFO] Uploading: https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric-build/linux-amd64-d59a736/hyperledger-fabric-build-linux-amd64-d59a736.pom
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 6.944 s
[INFO] Finished at: 2018-07-28T15:02:57+00:00
[INFO] Final Memory: 12M/290M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy-file (default-cli) on project standalone-pom: Failed to deploy artifacts: Could not transfer artifact org.hyperledger.fabric:hyperledger-fabric-build:tar.gz:linux-amd64-d59a736 from/to hyperledger-releases (https://nexus.hyperledger.org/content/repositories/releases/): Failed to transfer file: https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric-build/linux-amd64-d59a736/hyperledger-fabric-build-linux-amd64-d59a736.tar.gz. Return code is: 400, ReasonPhrase: Bad Request. -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
+ echo '-------> DONE <----------'
-------> DONE <----------
+ vote -m '""Succeeded, Run SmokeTest""' -l F1-VerifyBuild=+1 -l F2-DocBuild=+1
+ ssh -p 29418 hyperledger-jobbuilder@gerrit.hyperledger.org gerrit review 24839,1 --notify '""NONE""' -m '""Succeeded, Run SmokeTest""' -l F1-VerifyBuild=+1 -l F2-DocBuild=+1",,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkp3:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Sep/18 5:43 AM;denyeart;[~rameshthoomu] [~ryjones] Is this still an issue, or can it be closed?;;;","20/Sep/18 5:59 AM;ryjones;it would be pretty easy to test. Ramesh, write a shell script that fails and try it out. If it works correctly I'm fine with you closing this.;;;","02/Dec/18 10:42 AM;rameshthoomu;This change will remove code to publish images and binaries from verify build checks job. [https://gerrit.hyperledger.org/r/#/c/27851/]

Closing this issue as the code is no more there on the verify job.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Disable private data integration tests,FAB-11385,32380,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,C0rWin,C0rWin,C0rWin,29/Jul/18 2:24 AM,29/Jul/18 9:39 PM,28/Oct/23 3:03 AM,29/Jul/18 6:01 PM,,,,,,,,,,,,,,,,,0,,,,,,,"Currently private data integration tests are intermittently fails preventing CRs to pass CI verification. See:  FAB-11327 and FAB-11329. 

Need to disable those tests to stop CI failures and both of FAB-11327 and FAB-11329 will be addressed.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,FAB-11367,,,,,,,,,FAB-11327,FAB-11329,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,6e17b237216b3b99bffdcadb6774c16e766565d8,Unset,No,,,"1|hzzkpb:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jul/18 2:28 AM;C0rWin;https://gerrit.hyperledger.org/r/24891;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Sync protobuf with proto 1.1,FAB-11386,32383,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,29/Jul/18 11:48 PM,30/Jul/18 11:44 AM,28/Oct/23 3:03 AM,30/Jul/18 11:44 AM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkpz:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jul/18 11:50 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/24917/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix num of params boundary check for cauthdsl,FAB-11387,32384,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,diizuka,diizuka,diizuka,30/Jul/18 11:27 AM,28/Nov/18 12:08 AM,28/Oct/23 3:03 AM,28/Nov/18 12:08 AM,v1.0.0,v1.1.0,v1.2.0,,,,,,v1.4.0,,,fabric-common,,,,,0,,,,,,," Assume N is a integer number.
 SignaturePolicy DSL string ""OutOf(N, sig1, ...)"" means that it is required for N signatures evaluate true.
 # Phenomenon
 On common/cauthdsl/policyparser.go, calling FromString() with SignaturePolicy DSL string:
   ""OutOf(0, 'A.member', 'B.member'"") is no error (wrong) - case A
   ""OutOf(1, 'A.member', 'B.member'"") is no error (correct)
   ""OutOf(2, 'A.member', 'B.member'"") is no error (correct)
   ""OutOf(3, 'A.member', 'B.member'"") is no error (wrong) - case B
   ""OutOf(4, 'A.member', 'B.member'"") is error (correct).
 # Cause
 Parameter boundary check on secoundPass() is wrong.
 ## In case A:
 Does not check lower boundary.
 ## In case B:
 At firstPass(), ""OutOf("" is transformed to ""OutOf(ID,"", so number of parameter increases by 1 on calling secondPass(). Boundary check on second pass does not consider it.
 # Fix
 ## To fix case A:
 Boundary check is not only for upper, but also for lower.
 Current: if t > n \{ return nil, ... }
 Fix: if t > n || t < 1 \{ return nil, ...}
 ## To fix case B:
 Fix num of parameter calculation considering ""ID""
 Current: var n int = len(args) - 1
 Fix: var n int = len(args) - 2",,denyeart,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11046,,,FAB-11404,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkq7:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Sep/18 1:24 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/25047/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
ledgerStore: Construct valid/invalid data set from the received pvt data of old blocks,FAB-11388,32386,32194,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,manish-sethi,manish-sethi,30/Jul/18 11:57 AM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,15/Nov/18 9:52 PM,,,,,,,,,v1.4.0,,,fabric-ledger,,,,,0,,,,,,,"In the current implementation, ledger API for block commit accepts a block and associated private data. A new API to be added that would accept the pvt data only.

In the implementation
 - Check that the pvt data belongs to a block that is already committed
 - Check the hash of the pvt data write-set against the hash present in the corresponding block
 - Retrieve the hashed read set",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11318,,,FAB-11765,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:s",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add java chaincode support to fabric-samples,FAB-11397,32408,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,gennadyl,gennadyl,30/Jul/18 9:57 PM,09/Sep/18 1:28 PM,28/Oct/23 3:03 AM,09/Sep/18 1:28 PM,v1.3.0,,,,,,,,v1.3.0,,,fabric-samples,,,,,0,,,,,,,Add java chaincode example02 to chaincodes folder in fabric-samples and update first-network scripts to support -l java switch,,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FABCJ-7,,,No,,Unset,No,,,"1|hzzku7:",,,,No,Unset,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Instructions on fabric, fabric-ca docker images reference/usage in Dockerhub",FAB-11398,32409,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,rameshthoomu,rameshthoomu,30/Jul/18 11:09 PM,10/Jun/20 12:36 PM,28/Oct/23 3:03 AM,10/Jun/20 12:36 PM,v1.3.0,,,,,,,,Future,,,fabric-build,fabric-ci,fabric-docs,,,0,,,,,,,"Create a documentation on fabric, fabric-ca docker image reference/usage and keep this documenation in Hyperledger Fabric Docker Hub.

The existing documenation in DockerHub for each image is not providing any information like what is this image and how to use.. See the sample documenation on mongodb https://hub.docker.com/_/mongo/",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Apr/19 10:42 PM;rameshthoomu;Screen Shot 2019-04-24 at 9.41.18 AM.png;https://jira.hyperledger.org/secure/attachment/17152/Screen+Shot+2019-04-24+at+9.41.18+AM.png",,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkuf:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove duplicate targets when sending transaction proposal,FAB-11399,32410,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,emir.heidinger,emir.heidinger,emir.heidinger,31/Jul/18 12:35 AM,08/Aug/18 2:02 AM,28/Oct/23 3:03 AM,08/Aug/18 2:02 AM,,,,,,,,,,,,fabric-sdk-go,,,,,0,,,,,,,Sending the same transaction proposal to duplicate targets (same peer) will cause one of the requests to fail with TxId already exists error,,emir.heidinger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkun:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),emir.heidinger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need new Project type for ci-management repository in JIRA,FAB-11400,32411,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rameshthoomu,rameshthoomu,31/Jul/18 1:06 AM,25/Apr/19 12:08 AM,28/Oct/23 3:03 AM,25/Apr/19 12:07 AM,,,,,,,,,,,,fabric-ci,,,,,0,,,,,,,We have a hyperledger/ci-managment repository but when we create tasks/bugs we always use FAB (Fabric). Is it possible to create a new Project (FABCI) in Jira for hyperledger/ci-managmentrepository.,,ChristopherFerris,denyeart,jtclark,rameshthoomu,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkuv:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ChristopherFerris,denyeart,jtclark,rameshthoomu,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jul/18 3:42 AM;denyeart;[~jwagantall] [~ry.jones] I believe only linux foundation administrators can create new Jira projects... would you be able to create a Fabric CI (FABCI) project in Jira?;;;","31/Jul/18 3:49 AM;ryjones;[~denyeart] please file a Helpdesk ticket: helpdesk@hyperledger.org

 ;;;","25/Apr/19 12:08 AM;rameshthoomu;New project has been created for CI related tasks or bugs.  https://jira.hyperledger.org/projects/FABCI;;;",,,,,,,,,,,,,,,,,,,,,,,,
Fix  WARNING: undefined label: createanindex ,FAB-11401,32416,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,pandrejko,pandrejko,31/Jul/18 2:38 AM,31/Jul/18 5:36 AM,28/Oct/23 3:03 AM,31/Jul/18 5:36 AM,v1.2.0,v1.3.0,,,,,,,v1.2.0,v1.3.0,,fabric-docs,,,,,0,Documentation,,,,,,"{color:#008080}16{color}{color:#333333}:{color}{color:#008080}26{color}{color:#333333}:{color}{color:#008080}31{color}{color:#333333} /w/workspace/fabric-docs-build-x86_64/gopath/src/github.com/hyperledger/fabric/docs/source/couchdb_tutorial{color}{color:#333333}.rst{color}{color:#333333}:{color}{color:#008080}483{color}{color:#333333}: WARNING: undefined {color}{color:#333333}label{color}{color:#333333}: createanindex ({color}{color:#333333}if{color}{color:#333333} the link has no {color}{color:#333333}caption{color}{color:#333333} the {color}{color:#333333}label{color}{color:#333333} must precede {color}{color:#333333}a{color} {color:#333333}section{color}{color:#333333} header) {color}{color:#008080}16{color}{color:#333333}:{color}{color:#008080}26{color}{color:#333333}:{color}{color:#008080}31{color}{color:#333333} build finished with problems, {color}{color:#008080}18{color}{color:#333333} warnings. {color}{color:#008080}16{color}{color:#333333}:{color}{color:#008080}26{color}{color:#333333}:{color}{color:#008080}31{color}{color:#333333} ERROR: InvocationError:{color}",,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwtiv:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jul/18 4:00 AM;pandrejko;Problem was introduced when I updated the anchors for each step of the tutorial to create the TOC.  Fixed the broken link.;;;","31/Jul/18 4:34 AM;pandrejko;[https://gerrit.hyperledger.org/r/#/c/24949/]

and

https://gerrit.hyperledger.org/r/#/c/24953/;;;","31/Jul/18 4:35 AM;pandrejko;[~jtclark];;;",,,,,,,,,,,,,,,,,,,,,,,,
PTE creates half of specified payload size with samplecc FIXED type,FAB-11402,32417,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,31/Jul/18 2:49 AM,02/Aug/18 10:15 PM,28/Oct/23 3:03 AM,02/Aug/18 10:15 PM,,,,,,,,,,,,,,,,,0,,,,,,,PTE only creates half of specified payload size with samplecc payload type fixed.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-2247,,,No,,Unset,No,,,"1|hzzkvj:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"01/Aug/18 1:54 AM;dongming;https://gerrit.hyperledger.org/r/#/c/24723/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
There is a typo in the document.,FAB-11403,32426,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,Specia1,Specia1,Specia1,31/Jul/18 2:24 PM,02/Aug/18 12:26 AM,28/Oct/23 3:03 AM,02/Aug/18 12:25 AM,v1.2.0,,,,,,,,v1.2.1,v1.3.0,,,,,,,0,,,,,,,"h2. Identity

 

[http://hyperledger-fabric.readthedocs.io/en/release-1.2/identity/identity.html]

There is a typo in the first paragraph.

 

*digitial -> digital*
{quote}The different actors in a blockchain network include peers, orderers, client applications, administrators and more. Each of these actors — active elements inside or outside a network able to consume services — has a *digitial* identity encapsulated in an X.509 digital certificate. 
{quote}
->
{quote}The different actors in a blockchain network include peers, orderers, client applications, administrators and more. Each of these actors — active elements inside or outside a network able to consume services — has a *digital* identity encapsulated in an X.509 digital certificate. 
{quote}
 
h2. Upgrading Your Network Components

[http://hyperledger-fabric.readthedocs.io/en/release-1.2/upgrading_your_network_tutorial.html]

There is a typo in Overview.

 

*necesary* ->  *necessary*

 
{quote}The process for upgrading these components — if *necesary* — will be covered in a section following the tutorial.
{quote}
->
{quote}The process for upgrading these components — if *necessary* — will be covered in a section following the tutorial.
{quote}
 

 

This is my first issue.

If this issue is correct, when do I modify and commit it?

So, If I have a similar issue, can I give it another issue?",,denyeart,Specia1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkwv:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,Specia1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Aug/18 12:25 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/24975/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix panic on passing number string to FromString,FAB-11404,32427,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,diizuka,diizuka,diizuka,31/Jul/18 2:36 PM,24/Aug/18 7:16 PM,28/Oct/23 3:03 AM,24/Aug/18 7:16 PM,v1.0.0,v1.1.0,v1.2.0,,,,,,v1.3.0,,,fabric-common,,,,,0,,,,,,,"# How to Reproduce
On testing common/cauthdsl/policyparser.go:
{code:go}
s1:= ""1"" // string of number
s2 := ""'1'"" // nested string of number 
s3 := `'\'1'\''` // double nested string of number
p, err := FromString(s1) // or s2 or s3
{code}
This causes panic, e.g.:
{noformat}
 panic: interface conversion: interface {} is float64, not *common.SignaturePolicy [recovered]
{noformat}
# Cause
Let me explain s3 case.
Codes derived from common/cauthdsl/policyparser.go:
{code:go}
exp, err = govaluate.NewEvaluableExpressionWithFunctions(res.(string), ... secondPass}) // A
res, err = exp.Evaluate(...) // B
p := &common.SignaturePolicyEnvelope{ ...
Rule: res.(*common.SignaturePolicy), // C
}
{code}
Suppose passing s3 := `'\1'\''` to FromString().
At A, res is string of ""1"".
At B, res is float64 type of 1, not *common.SignaturePolicy type.
Then, at C it causes type cast error and panic.

Similally, in case of s1 or s2, exp.Evaluate() return float64 type of 1,
try to cast it as string type. Then type cast error has occurred and panic.

# # # Fix plan
Check the type of res is *common.SignaturePoilcy(case s3) or string(case s1, s2).
If not, return an error.",,diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11046,FAB-11387,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkx3:",,,,Unset,Unset,,,See Description,,Unset,,,,,,Unset,,Unset,,(Please add usage information),diizuka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
fileBasedKeyStore is never in open state,FAB-11405,32429,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,zjubfd,zjubfd,zjubfd,31/Jul/18 4:43 PM,02/Aug/18 12:22 AM,28/Oct/23 3:03 AM,02/Aug/18 12:22 AM,,,,,,,,,v1.3.0,,,fabric-crypto,,,,,0,,,,,,,"After a *fileBasedKeyStore* invoke *Init* function, the key-store still in close state. And reinvoke Init function case no error, while error(""KeyStore already initilized"") is expectd.",,zjubfd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkxj:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),zjubfd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jul/18 9:37 PM;zjubfd;https://gerrit.hyperledger.org/r/#/c/24977/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
use named result parameters but useless in function body  ,FAB-11406,32431,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,zjubfd,zjubfd,zjubfd,31/Jul/18 5:19 PM,31/Jul/18 9:24 PM,28/Oct/23 3:03 AM,31/Jul/18 9:24 PM,,,,,,,,,v1.3.0,,,fabric-common,,,,,0,,,,,,,"Under package bccsp, there are a lot of functions defined with named result parameters, but find no usage in function body.

Refer to [https://golang.org/doc/effective_go.html#named-results,]  find no benefits except doc.

Better to unname them.",,zjubfd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkxz:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),zjubfd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Get the installed chaincode source code from the peer,FAB-11407,32434,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,kamisdy,kamisdy,kamisdy,31/Jul/18 7:22 PM,07/Aug/19 3:12 AM,28/Oct/23 3:03 AM,07/Aug/19 3:12 AM,,,,,,,,,v2.0.0,,,,,,,,0,,,,,,,"Now, if a chaincode installs on a target peer, we just can get the installed chaincode info with name, path, ver, escc, vscc, etc. Not including the source code, like something in the ChaincodeDeploymentSpec.

I found it has a function, named ""GetChaincodeFromLocalStorage"", which can get the target chaincode's ccpack. So, why the lscc doesn't provide a method like ""getLocalCCData"" to return the chaincode data? ",,kamisdy,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15976,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|hzzky7:",,,,Unset,Unset,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),kamisdy,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/18 5:32 AM;wlahti;The new lifecycle work (FAB-11237) has this exact requirement in mind. This feature should be available in v1.3 if all goes according to plan.;;;","07/Aug/19 3:12 AM;wlahti;The combination of the newly merged code for FAB-15976 and the fact that the lifecycle v2.0 chaincode package is an easily readable .tar.gz file satisfies the request in this JIRA.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
memberOnlyRead - config option for implicit collection ACL checks for reads based on membership,FAB-11409,32437,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,denyeart,denyeart,31/Jul/18 8:28 PM,10/Sep/19 5:10 PM,28/Oct/23 3:03 AM,08/Dec/18 12:13 PM,,,,,,,,,v1.4.0,,,fabric-ledger,,,,,1,,,,,,,"Private data collections specify which orgs peers are authorized to retrieve and persist private data.

If a client from a non-collection member does a chaincode query against an authorized peer with the private data, the client can get the private data back. Need chaincode APIs to enable access control within the chaincode such that non-member clients can be restricted from querying private data that they do not have access to. Previously the chaincode author had to manually construct such access control logic.

The access control for collection can be done in two ways:
 # implicit ACL – at the peer;
 # explicit ACL – at the chaincode;

+*Implicit ACL*+
 In the implicit ACL approach, by default, the peer would ensure that only collection's members can access the private data. Though such ACL can be implemented at the chaincode (using new APIs such as IsAMemberOfCollection(Coll, MSP)), it would be better to implement at the peer so that not every applications need to rewrite the same ACL logic at chaincode.
 * *Pros*: Chaincode does not need to do anything special. No need to upgrade the existing
 chaincodes. No need to introduce new chaincode APIs.
 * *Cons*: Rigid. Only collection's members can access the private data (not a non-member even if
 such feature is required for a short time).

+*Explicit ACL*+
 In the explicit ACL approach, the chaincode needs to take care of controlling the access to collection's private data. If the application has dynamic ACL requirements in which non-members may get access to particular private data for a short period of time, implicit approach may not work. In such scenarios, the chaincode should implement the ACL logic to dynamically decide the list of members who can access the
 collection's private data. Especially when we do asset transfer between collections, the non-member may like to read the private data before finalising the transaction. 
 * *Pros*: Flexible. The access list can be controlled dynamically. Even a non-member can be allowed
 to access the private data for a short time if required.
 * *Cons*: Needs to introduce new chaincode APIs. The chaincode logic would become little
 complex as compared to implicit ACL approach.",,C0rWin,denniskuhnert,denyeart,muralisr,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1096,FAB-13581,FABJ-481,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-5108,,,No,,Unset,No,,,"1|hzwzyn:","In release note, we need to mention that if you update your collection config to memberOnlyRead:true, that any prior release peers will still not honor it, you must upgrade all peers.",Yes,,No,Unset,Next Items- Ledger,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),C0rWin,denniskuhnert,denyeart,muralisr,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Aug/18 7:20 AM;C0rWin;I think that instead of adding an API to the chaincode shim, we need to add a functionality to the handler, which will check the client identity and results in error (of course if we would like to preserve current behavior we can have collection config option to state whenever to allow any clients or follow collection policy).

Adding such functionality to the chaincode shim API most likely will result in everyone who writes chaincode to repeat same piece of code to restrict undesired clients over and over again.;;;","01/Nov/18 11:49 PM;denyeart;I agree with [~C0rWin].  It makes sense for peer to automatically handle the private data access control based on client identity membership in collection, and add a collection config option memberOnlyRead that specifies whether peer enforces the check.

[~Senthil1] [~manish-sethi] Do you see any drawbacks with that approach?;;;","02/Nov/18 12:59 AM;Senthil1;Looks good to me Dave. This is same as the implicit ACL approach mentioned in the above description. 

Most solutions would choose the ""restrict the access"" option by default. Only a few might wants to show the private data to non-members (requirement might change dynamically as well). 

I think, client can toggle access method by issuing an collection-upgrade-TX and change between full access & restricted access as needed. 

Only minor drawback would be that even if a particular pvt data needs to be shown to a non-member, we need to enable the full access and anyone can read during that time. ;;;",,,,,,,,,,,,,,,,,,,,,,,,
Add paging for transaction simulation,FAB-11410,32439,33216,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,31/Jul/18 10:27 PM,09/Sep/18 4:09 AM,28/Oct/23 3:03 AM,09/Sep/18 4:09 AM,,,,,,,,,v1.3.0,,,,,,,,0,,,,,,,"Add paging for CouchDB and goleveldb in transaction simulation.

Implementation should extend the implementation from the state level methods.",,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkyv:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric protobuf sync,FAB-11411,32440,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,rickr,rickr,31/Jul/18 10:34 PM,04/Aug/18 2:47 AM,28/Oct/23 3:03 AM,04/Aug/18 2:47 AM,v1.3.0,,,,,,,,v1.3.0,,,fabric-sdk-java,,,,,0,,,,,,,gerrit https://gerrit.hyperledger.org/r/#/c/24985/,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkz3:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define consensus agnostic consenter protobuf schema,FAB-11412,32441,31897,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,31/Jul/18 10:51 PM,01/Aug/18 11:39 PM,28/Oct/23 3:03 AM,01/Aug/18 11:39 PM,,,,,,,,,,,,,,,,,0,raft,,,,,,"In order to save development time in the long term, and to have consolidation of code - it is preferable that we have a single communication layer which can fit all ordering service nodes regardless of their actual consensus algorithm, be it CFT or BFT.

Therefore, we need to define a protobuf schema that is oblivious of consensus algorithm implementation.",,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkzb:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Aug/18 3:19 AM;kchristidis;https://gerrit.hyperledger.org/r/c/24989/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"On a memory constrained machine, I want to prevent to peer from being overwhelmed.",FAB-11413,32445,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,sanchezl,sanchezl,01/Aug/18 2:46 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,v1.1.0,v1.2.0,,,,,,,,,,fabric-peer,,,,,0,stale-item,,,,,,"There appears to be no way to control the amount of work that a peer has to handle. This presents a problem when the peer is running on a machine with a fixed amount of memory.

Some examples:
 * No limit on number of simultaneous event service connections.
 * No limit on number of simultaneous proposal endorsement requests.
 * No limit on size of proposals.

Abusing any of the above limits can result in out of memory related panics on machines without infinite memory.",,sanchezl,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzkzz:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sanchezl,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/18 3:01 AM;sanchezl;Something similar to this, but on the golang grpc.io bindings might be useful.;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
make clean-all fails on MacOS,FAB-11414,32446,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,sykesm,sykesm,sykesm,01/Aug/18 2:58 AM,01/Aug/18 6:56 AM,28/Oct/23 3:03 AM,01/Aug/18 6:56 AM,,,,,,,,,,,,,,,,,0,,,,,,,"{code}
$ make clean-all
docker images --quiet --filter=reference='hyperledger/fabric-peer:amd64-1.3.0-snapshot-*' | xargs -r docker rmi -f
xargs: illegal option -- r
usage: xargs [-0opt] [-E eofstr] [-I replstr [-R replacements]] [-J replstr]
             [-L number] [-n number [-x]] [-P maxprocs] [-s size]
             [utility [argument ...]]
make: [peer-docker-clean] Error 1 (ignored)
docker images --quiet --filter=reference='hyperledger/fabric-orderer:amd64-1.3.0-snapshot-*' | xargs -r docker rmi -f
xargs: illegal option -- r
usage: xargs [-0opt] [-E eofstr] [-I replstr [-R replacements]] [-J replstr]
             [-L number] [-n number [-x]] [-P maxprocs] [-s size]
             [utility [argument ...]]
make: [orderer-docker-clean] Error 1 (ignored)
docker images --quiet --filter=reference='hyperledger/fabric-ccenv:amd64-1.3.0-snapshot-*' | xargs -r docker rmi -f
xargs: illegal option -- r
usage: xargs [-0opt] [-E eofstr] [-I replstr [-R replacements]] [-J replstr]
             [-L number] [-n number [-x]] [-P maxprocs] [-s size]
             [utility [argument ...]]
make: [ccenv-docker-clean] Error 1 (ignored)
docker images --quiet --filter=reference='hyperledger/fabric-buildenv:amd64-1.3.0-snapshot-*' | xargs -r docker rmi -f
xargs: illegal option -- r
usage: xargs [-0opt] [-E eofstr] [-I replstr [-R replacements]] [-J replstr]
             [-L number] [-n number [-x]] [-P maxprocs] [-s size]
             [utility [argument ...]]
make: [buildenv-docker-clean] Error 1 (ignored)
docker images --quiet --filter=reference='hyperledger/fabric-testenv:amd64-1.3.0-snapshot-*' | xargs -r docker rmi -f
xargs: illegal option -- r
usage: xargs [-0opt] [-E eofstr] [-I replstr [-R replacements]] [-J replstr]
             [-L number] [-n number [-x]] [-P maxprocs] [-s size]
             [utility [argument ...]]
make: [testenv-docker-clean] Error 1 (ignored)
docker images --quiet --filter=reference='hyperledger/fabric-tools:amd64-1.3.0-snapshot-*' | xargs -r docker rmi -f
xargs: illegal option -- r
usage: xargs [-0opt] [-E eofstr] [-I replstr [-R replacements]] [-J replstr]
             [-L number] [-n number [-x]] [-P maxprocs] [-s size]
             [utility [argument ...]]
make: [tools-docker-clean] Error 1 (ignored)
{code}

This change was introduced in FAB-11377",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11377,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl07:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve chaincode distribution and installation approach,FAB-11415,32448,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jyellick,jyellick,01/Aug/18 3:26 AM,23/Jan/20 7:33 AM,28/Oct/23 3:03 AM,23/Jan/20 7:33 AM,,,,,,,,,Future,,,fabric-peer,,,,,3,stale-item,,,,,,"Today, chaincode install is done on a per peer basis via an install operation performed by the peer's admins.  Per feedback from the Chaincode lifecycle improvements discussion, this becomes challenging to maintain in networks for more peers, and is generally a sub-optimal approach for managing chaincode bytes.

There are multiple possible ways to address this problem.
# Chaincode images could be built and distributed externally, through a mechanism like signed docker images.
# Chaincode could be pushed onto the blockchain.
# Chaincode could be pushed into the private data with hashes on the blockchain.
# Chaincode could be pulled via standard URLs with checksums.
# Something else?

This epic is being created to track this deficiency and to invite design and discussion.",,aatkddny,G-DazWilkin,Javi,jyellick,MichaelWang,sykesm,TiantianGao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11237,,,,,,,,,,,,,,,,,,,,,Under design,Design is pending.,Required,Unset,Required,ghx-label-5,,Improve chaincode distribution,To Do,No,,Required,No,,,"1|hzzl0n:",,,,Yes,Required,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,Usage is pending.,aatkddny,G-DazWilkin,Javi,jyellick,MichaelWang,sykesm,TiantianGao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:33 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add ExecuteOperation to Go chaincode shim,FAB-11416,32449,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,sheehan,sheehan,sheehan,01/Aug/18 3:51 AM,25/Nov/20 12:33 AM,28/Oct/23 3:03 AM,25/Nov/20 12:33 AM,,,,,,,,,v2.1.0,,,fabric-peer,,,,,0,,,,,,,"The ExecuteOperation function needs to be added to the Go chaincode shim so that chaincode developers can execute update operations.

Function signature

ExecuteOperation(operation Operation) error

 

See design doc in Epic for more details.",,manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-61,,,,,,,,,,,,,,,,,FABCJ-67,FABCN-61,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-10711,,,No,,Unset,No,,,"1|i01fvb:zw",,,,No,Unset,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Nov/20 12:33 AM;manish-sethi;Closing individual tasks of the epic ""Enhanced Concurrency Control"". See epic closure comments;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add ExecuteAssert to Go chaincode shim,FAB-11417,32450,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,sheehan,sheehan,sheehan,01/Aug/18 3:56 AM,27/Feb/19 4:26 AM,28/Oct/23 3:03 AM,27/Feb/19 4:26 AM,,,,,,,,,v2.1.0,,,,,,,,0,,,,,,,"The ExecuteAssert function needs to be added to the Go chaincode shim so that chaincode developers can execute update operations.

Function signature

ExecuteAssert(operation string, args OperationArguments) error

 

See design doc in Epic for more details.",,sheehan,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-14,,,,,,,,,,,,,,,,,FABCJ-55,FABCN-14,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|hzzl13:",,,,No,Unset,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),sheehan,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement PutStateInt64 helper in Go chaincode,FAB-11418,32451,38317,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,EvansChang,sheehan,sheehan,01/Aug/18 4:06 AM,23/Jan/20 7:31 AM,28/Oct/23 3:03 AM,23/Jan/20 7:31 AM,,,,,,,,,v2.1.0,,,fabric-peer,,,,,0,stale-item,,,,,,"Implement a utility function in the Go chaincode so that there is a common way to serialize an int64. Operations and chaincode both need to understand how an int64 is represented in byte format.

Method signature:

PutStateInt64(key string, value int64) error

 

This should be implemented as a library, similar to the 'entities' library in /core/chaincode/shim/ext/

 

See the epic design doc for more information.",,grapebaba,mastersingh24,sheehan,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|hzzl1b:",,,,No,Unset,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),grapebaba,mastersingh24,sheehan,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/18 1:08 PM;grapebaba;[~sheehan]:)we would like to pick this task;;;","23/Aug/18 5:15 PM;grapebaba;[~EvansChang] will help this task;;;","31/Aug/18 6:20 PM;mastersingh24;I think we need to come up with a better packaging strategy for these types of functions;;;","31/Aug/18 6:46 PM;grapebaba;[~mastersingh24] what do you mean? Can you input more detail?;;;","31/Aug/18 11:21 PM;sheehan;[~mastersingh24] - There's also /core/chaincode/lib/cid. I don't know the reason/history of why cid is in 'lib' and entities is in 'ext'. Are you suggesting a new packaging strategy for cid, entities, and the functions we're proposing here?;;;","09/Mar/19 6:49 AM;sheehan;Moved to a sub-task as we've decided to try using pure protos in the chaincode API to 

1) Make implementation easier across different chaincode language implementations.

2) Address ensuring the byte serialization is the same on the endorsing peer.

See comments in FAB-14555 for tasks and thoughts on handling serialization;;;","23/Jan/20 7:31 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,
Implement GetStateInt64 helper in Go chaincode,FAB-11419,32452,38317,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,zhangtailin,sheehan,sheehan,01/Aug/18 4:08 AM,23/Jan/20 7:31 AM,28/Oct/23 3:03 AM,23/Jan/20 7:31 AM,,,,,,,,,v2.1.0,,,fabric-peer,,,,,0,stale-item,,,,,,"Implement a utility function in the Go chaincode so that there is a common way to serialize an int64. Operations and chaincode both need to understand how an int64 is represented in byte format.

Method signature:

GetStateInt64(key string) int64, error

 

This should be implemented as a library, similar to the 'entities' library in /core/chaincode/shim/ext/

 

See the epic design doc for more information.",,grapebaba,sheehan,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|hzzl1j:",,,,No,Unset,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),grapebaba,sheehan,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/18 12:00 PM;grapebaba;[~sheehan] [~zhangtailin]will help this task;;;","09/Mar/19 6:50 AM;sheehan;See comments in FAB-11418;;;","23/Jan/20 7:31 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,
Build OperationHandler interface,FAB-11420,32453,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,sheehan,sheehan,sheehan,01/Aug/18 4:11 AM,25/Nov/20 12:30 AM,28/Oct/23 3:03 AM,25/Nov/20 12:30 AM,,,,,,,,,,,,fabric-peer,,,,,0,,,,,,,"The operation handler interface to handle both built in and custom operations must be created.

See Epic design doc for more details.
{code:java}
type OperationHandler interface {  

// Handle performs the required operation given the supplied instructions 
// over the supplied TxSimulator. This function returns InvalidTxError  
// if the supplied instructions lead to marking the transaction as invalid // or any other error to signal that processing could not be completed Handle(operation, instructions string, txsim TxSimulator) error
  
// ValidateInstructions inspects the supplied arguments and performs a   
// sanity check of the syntax. It returns nil if no error was found or  
// an error in case of a faulty syntax  
ValidateInstructions(operation, instructions string) error
  
// HintKeysReadWrite inspects the supplied arguments and gives a hint what keys  
// this plugin definitely reads/ writes from/ to state. This information is just to be used for  
// performance optimization during commit time. For instance, the KeyReadHint can be  
// used for loading all the keys from couchdb using bulkload for the plugins that are going  
// to be executed in the given block. Similarly, if the handlers are simple enough   
// (e.g. increment) and they write to different keys, they can be invoked in parallel  
HintKeysReadWrite(“operation string, instructions string”) *KVReadWriteHint}

// KeyHint is used to communicate by a plugin to fabric what keys it reads/writes
// IsComplete is true if the plugin is capable of knowing in advance about the completeness
// of the hint (e.g. a simple increment/decrement plugin knows that it reads exactly one key and
// modifies the same key. 
Type KeyHint struct {   Keys []string   IsComplete bool}

// KVReadWriteHint is returned by the function `HintKeysReadWrite()` in the `Handler`Type 
KVReadWriteHint struct {     Reads, Writes *KeyHint}
{code}",,ales,manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-10711,,,No,,Unset,No,,,"1|i01fv8:",,,,No,Unset,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),ales,manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Sep/18 12:33 AM;ales;https://gerrit.hyperledger.org/r/#/c/26228/;;;","25/Nov/20 12:30 AM;manish-sethi;Closing individual tasks of the epic ""Enhanced Concurrency Control"". See epic closure comments;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Add registry for pluggable operation handlers,FAB-11421,32454,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,aambati,sheehan,sheehan,01/Aug/18 4:17 AM,25/Nov/20 12:30 AM,28/Oct/23 3:03 AM,25/Nov/20 12:30 AM,,,,,,,,,v2.1.0,,,fabric-peer,,,,,0,,,,,,,"There must be a registry of pluggable operation handlers so that both built in and user provided operation handlers can be added to the peer. 

 

Operation names without a namespace are reserved for build in operations.

Third party operations must include a namespace.

 

See epic design doc for more details.",,manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-10711,,,No,,Unset,No,,,"1|i01fva:",,,,No,Unset,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Nov/20 12:30 AM;manish-sethi;Closing individual tasks of the epic ""Enhanced Concurrency Control"". See epic closure comments;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Add plug points in ledger/committer to invoke operation handlers,FAB-11422,32455,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,aambati,sheehan,sheehan,01/Aug/18 4:18 AM,25/Nov/20 12:31 AM,28/Oct/23 3:03 AM,25/Nov/20 12:31 AM,,,,,,,,,v2.1.0,,,fabric-ledger,,,,,0,,,,,,,"The ledger/committer must be able to invoke operation handlers so that operations can be executed at commit time. This includes validation and possible hints needed for performance improvements.

 

See epic design doc for more details.",,Hangyu_FJH,manish-sethi,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,FAB-10711,,,No,,Unset,No,,,"1|i01fvb:",,,,No,Unset,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),Hangyu_FJH,manish-sethi,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Nov/20 12:31 AM;manish-sethi;Closing individual tasks of the epic ""Enhanced Concurrency Control"". See epic closure comments;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Implement ‘add’ operation handler,FAB-11423,32456,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,sheehan,sheehan,sheehan,01/Aug/18 4:22 AM,25/Nov/20 12:31 AM,28/Oct/23 3:03 AM,25/Nov/20 12:31 AM,,,,,,,,,v2.1.0,,,fabric-peer,,,,,0,,,,,,,"The 'add' operation should be implemented as a built in plugin so that chaincode developers can use the 'add' operation to help track balances in their chaincode.

 

 

See epic design doc for more details.",,manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-10711,,,No,,Unset,No,,,"1|i01fvb:i",,,,No,Unset,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Nov/20 12:31 AM;manish-sethi;Closing individual tasks of the epic ""Enhanced Concurrency Control"". See epic closure comments;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Implement ‘subtract’ operation handler,FAB-11424,32458,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,sheehan,sheehan,sheehan,01/Aug/18 4:27 AM,25/Nov/20 12:31 AM,28/Oct/23 3:03 AM,25/Nov/20 12:31 AM,,,,,,,,,v2.1.0,,,fabric-peer,,,,,0,,,,,,,"The 'subtract' operation should be implemented as a built in plugin so that chaincode developers can use the 'subtract' operation to help track balances in their chaincode.

 

See epic design doc for more details.",,manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-10711,,,No,,Unset,No,,,"1|i01fvb:r",,,,No,Unset,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Nov/20 12:31 AM;manish-sethi;Closing individual tasks of the epic ""Enhanced Concurrency Control"". See epic closure comments;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Implement ‘assert greater than’ operation handler,FAB-11425,32459,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,sheehan,sheehan,sheehan,01/Aug/18 4:29 AM,25/Nov/20 12:32 AM,28/Oct/23 3:03 AM,25/Nov/20 12:32 AM,,,,,,,,,v2.1.0,,,fabric-peer,,,,,0,,,,,,,"The 'assert greater than' operation should be implemented as a built in plugin so that chaincode developers can use the 'range' operation to assert that values are within a specific range.

 

See epic design doc for more details.",,manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-14361,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-10711,,,No,,Unset,No,,,"1|i01fvb:w",,,,No,Unset,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Nov/20 12:32 AM;manish-sethi;Closing individual tasks of the epic ""Enhanced Concurrency Control"". See epic closure comments;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Enhanced concurrency control integration tests,FAB-11426,32460,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,sheehan,sheehan,01/Aug/18 4:31 AM,27/Feb/19 4:32 AM,28/Oct/23 3:03 AM,27/Feb/19 4:32 AM,,,,,,,,,v2.1.0,,,fabric-peer,,,,,0,,,,,,,Integration tests are needed to ensure that a chaincode which includes both ExecuteUpdate and ExecuteAssert calls using the built in operations function correctly.,,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,,,No,,Unset,No,,,"1|hzzl3b:",,,,No,Unset,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhanced concurrency control documentation,FAB-11427,32461,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,sheehan,sheehan,01/Aug/18 4:33 AM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,v2.1.0,,,fabric-docs,,,,,0,stale-item,,,,,,Documentation needs to be updated with enhanced concurrency control information so that chaincode developers can understand how to utilize built in operations and create their own operations if needed.,,sheehan,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11442,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-10711,,,No,,Unset,No,,,"1|hzws0n:",,,,No,Unset,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),sheehan,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Channel config should ensure same set of operations are used across the channel,FAB-11428,32462,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,aambati,sheehan,sheehan,01/Aug/18 4:53 AM,25/Nov/20 12:32 AM,28/Oct/23 3:03 AM,25/Nov/20 12:32 AM,,,,,,,,,v2.1.0,,,fabric-peer,,,,,0,,,,,,,"Fabric should ensure that all peers in a channel
 * Run the same set of plugins
 * Run the same version of each plugin

 

Use the channel config to ensure that the same set of plugins (with the same version/hash) is used",,manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,FAB-10711,,,No,,Unset,No,,,"1|i01fvb:y",,,,No,Unset,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,sheehan,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Nov/20 12:32 AM;manish-sethi;Closing individual tasks of the epic ""Enhanced Concurrency Control"". See epic closure comments;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance RWSet to include operations so that it becomes RWOSet,FAB-11431,32465,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,sheehan,sheehan,sheehan,01/Aug/18 6:45 AM,25/Nov/20 12:33 AM,28/Oct/23 3:03 AM,25/Nov/20 12:33 AM,,,,,,,,,v2.1.0,,,fabric-peer,,,,,0,,,,,,,"Enhance the read write set (RWSet) to include operations so that it becomes the read write operation set (RWOSet). At endorse time, the sequence of operations will need to be captured so that they can be executed at commit time.

 

There are a few open questions.
 # Can a single transaction include both a read/write set and an operation set? If so
 ## what is the order of execution?
 ## what are the semantics of read your own writes?",,manish-sethi,sheehan,troyronda,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-10711,,,No,,Unset,No,,,"1|i01fvb:zi",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,sheehan,troyronda,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Nov/20 12:33 AM;manish-sethi;Closing individual tasks of the epic ""Enhanced Concurrency Control"". See epic closure comments;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Provide documentation of definitive ""environment"" for peer commands",FAB-11434,32469,,Documentation,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,G-DazWilkin,G-DazWilkin,01/Aug/18 7:33 AM,03/Dec/19 6:47 AM,28/Oct/23 3:03 AM,,,,,,,,,,,,,fabric-ca,fabric-orderer,fabric-peer,,,0,,,,,,,"One (of several) aspects of Hyperledger Fabric that I find very 'opaque' (and thus confusing) is uncovering the definitive ""environment"" necessary for peer commands.


The documentation enumerates *only* flags for e.g. peer commands but IIUC flags are one dimension, extensive (undocumented?) sets of (mandatory|optional) environment variables are expected; and in some cases there's an expectation of a configuration file.

[https://hyperledger-fabric.readthedocs.io/en/release-1.1/commands/peercommand.html]

E.g. per documentation:

{{CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer0.org1.example.com:7051 CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crtexport CHANNEL_NAME=mychannel}}{{peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem}}

 

 I've been unable to find documentation for each of the commands that explains|enumerates the complete environment. My approach has been to start with known-working fabric samples e.g. first-network and attempt to evolve these.

This approach is challenging and results in a hope (!) that the result is correct rather than an assurance.

Recommend:

Provide definitive documentation of the environment (mandatory and optional) including explanations for the configuration not just enumerations (please).

 ",,G-DazWilkin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl53:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),G-DazWilkin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The bash URL for curl -sSL mentioned in the doc ""Install Samples, Binaries and Docker Images"" is incorrect.",FAB-11435,32471,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,GingerMoon,GingerMoon,GingerMoon,01/Aug/18 12:24 PM,08/Nov/18 3:30 PM,28/Oct/23 3:03 AM,08/Nov/18 3:30 PM,,,,,,,,,,,,,,,,,0,,,,,,,"My environment is win10 home and the latest curl version.
  
 $ curl -sSL [http://bit.ly/2ysbOFE] | bash -s 1.2.0
 curl: (56) Recv failure: Connection was reset
  
  
 After did some search, I found  that the command should be:
 curl -sSL [https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap.sh] | bash -s 1.1.0
 So this URL should be mentioned instead of [https://github.com/hyperledger/fabric/blob/master/scripts/bootstrap.sh]"".",,GingerMoon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl5b:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),GingerMoon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Nov/18 3:29 PM;GingerMoon;The issue has been fixed.

[https://hyperledger-fabric.readthedocs.io/en/latest/install.html]

""Alternately, you can substitute the un-shortened URL:[https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap.sh]"";;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance ledger to take external dependencies,FAB-11436,32472,32194,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,01/Aug/18 12:29 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,29/Aug/18 2:59 AM,,,,,,,,,v1.3.0,,,fabric-ledger,,,,,0,,,,,,,"Ledger needs to take external dependency from Gossip/Coordinator. This external dependency will be used when a change in collection membership takes place.

This dependency will provide one function `AmMemberOf(channelName string, collectionPolicyConfig *common.CollectionPolicyConfig) (bool, error)`. This function return true if the peer (on which this code is executed) is a member of the collection as per the collection config.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:t",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handle collection eligibilty change event,FAB-11437,32473,32194,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,01/Aug/18 12:43 PM,12/Jun/20 12:30 AM,28/Oct/23 3:03 AM,03/Oct/18 7:52 AM,,,,,,,,,v1.3.0,,,fabric-ledger,,,,,0,,,,,,,"When the peer is made eligible to receive private data of an existing collection (via collection config changes) -

change all entries in the missing data tracker that are of type `<non_eligible_prefix><chaincode><collection><uint64-blockNum>:<bitmap>` to `<eligible_prefix><uint64-blockNum><chaincode><collection>:<bitmap>` where
 * <chaincode>/ <collection> is the chaincode/collection for which the collection config has been updated and
 * blockNum in <uint64-blockNum> is less than the block number in which the collection config has changed",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqfl:u",,,,Unset,Unset,To Do,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Aug/18 12:15 AM;manish-sethi;https://gerrit.hyperledger.org/r/25982;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Hi i create the first test network with help of the hyperledger fabric document i want to create the project  structure using go language any terminal commends are available on here please share me,FAB-11438,32474,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,devguilherme,Balas,Balas,01/Aug/18 1:33 PM,25/Jun/19 11:16 PM,28/Oct/23 3:03 AM,,,,,,,,,,,,,,,,,,0,,,,,,,,,Balas,divina10,mahmanik,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl5z:",,,,Unset,Unset,Week ending 2019-Feb-01,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Balas,divina10,mahmanik,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Feb/19 9:24 PM;mahmanik;You can get idea about the project structure from here: [https://github.com/hyperledger/fabric-samples/tree/master/basic-network]. It contains the sample chaincode (both in Go and Node), client application written in JS, scripts for generating crypto materials, network configurations and more. Balance-transfer or basic-network is a good place to start with. Both of them a script files (runApp.sh or start.sh) to make the application running.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric ./byfn.sh up returns error “…container_linux.go:348…” [win10 home edition],FAB-11439,32476,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,smfaizalkhan,GingerMoon,GingerMoon,01/Aug/18 3:57 PM,23/Jan/20 7:34 AM,28/Oct/23 3:03 AM,23/Jan/20 7:34 AM,,,,,,,,,,,,fabric-samples,,,,,1,stale-item,,,,,," 
I am trying to start an fabric network according to the doc ""[Building Your First Network|https://hyperledger-fabric.readthedocs.io/en/release-1.2/build_network.html]"" and the prerequisite docs. However, when I execute the command ./byfn.sh up, it returns the error below: OCI runtime exec failed: exec failed: container_linux.go:348: starting container process caused ""no such file or directory"": unknown ERROR !!!! Test failed

I have already tried to search for this error but with no luck. I would appreciate if anyone can help me ...

System information:

$ docker version
Client:
 Version: 18.03.0-ce
 API version: 1.37
 Go version: go1.9.4
 Git commit: 0520e24302
 Built: Fri Mar 23 08:31:36 2018
 OS/Arch: windows/amd64
 Experimental: false
 Orchestrator: swarm

Server:
 Engine:
 Version: 18.06.0-ce
 API version: 1.38 (minimum version 1.12)
 Go version: go1.10.3
 Git commit: 0ffa825
 Built: Wed Jul 18 19:13:39 2018
 OS/Arch: linux/amd64
 Experimental: false

37675@DESKTOP-JU1BJMT MINGW64 /c/Users/fabric-samples_120/first-network ((v1.2.0 ))
$ go version
go version go1.10.1 windows/amd64",,davidkhala,denyeart,GingerMoon,manish1635,shakti.pallai,smfaizalkhan,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Oct/18 11:49 PM;smfaizalkhan;image-2018-10-18-16-49-34-463.png;https://jira.hyperledger.org/secure/attachment/16149/image-2018-10-18-16-49-34-463.png","18/Oct/18 11:50 PM;smfaizalkhan;image-2018-10-18-16-50-43-969.png;https://jira.hyperledger.org/secure/attachment/16150/image-2018-10-18-16-50-43-969.png","19/Oct/18 3:38 AM;smfaizalkhan;image-2018-10-18-20-38-31-363.png;https://jira.hyperledger.org/secure/attachment/16152/image-2018-10-18-20-38-31-363.png",,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl67:",,,,Unset,Unset,,,"cd /c/Users/
curl -sSL http://bit.ly/2ysbOFE | bash -s 1.2.0
export PATH=/c/Users/fabric-samples/bin/:$PATH
cd /c/Users/fabric-samples/first-network/
./byfn.sh generate
Y
./byfn.sh up

37675@DESKTOP-JU1BJMT MINGW64 /c/Users/fabric-samples/first-network ((v1.2.0))
$ ./byfn.sh up
Starting for channel 'mychannel' with CLI timeout of '10' seconds and CLI delay of '3' seconds
Continue? [Y/n] y
proceeding ...
LOCAL_VERSION=1.2.0
DOCKER_IMAGE_VERSION=1.2.0
Starting orderer.example.com    ... done
Starting peer1.org2.example.com ... done
Starting peer0.org2.example.com ... done
Starting peer1.org1.example.com ... done
Starting peer0.org1.example.com ... done
Starting cli                    ... done
OCI runtime exec failed: exec failed: container_linux.go:348: starting container process caused ""no such file or directory"": unknown
ERROR !!!! Test failed",,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,denyeart,GingerMoon,manish1635,shakti.pallai,smfaizalkhan,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Aug/18 11:10 AM;davidkhala;I see similar error during build fabric by
 
`make dist-clean all`
 
Creating couchdb ... done
Creating unit-test_unit-tests_1 ... error

ERROR: for unit-test_unit-tests_1 Cannot start service unit-tests: b'OCI runtime create failed: container_linux.go:348: starting container process caused ""exec: \\""./unit-test/run.sh\\"": stat ./unit-test/run.sh: no such file or directory"": unknown'

ERROR: for unit-tests Cannot start service unit-tests: b'OCI runtime create failed: container_linux.go:348: starting container process caused ""exec: \\""./unit-test/run.sh\\"": stat ./unit-test/run.sh: no such file or directory"": unknown'
ERROR: Encountered errors while bringing up the project.
Makefile:186: recipe for target 'unit-test' failed
make: *** [unit-test] Error 1;;;","22/Aug/18 1:49 AM;denyeart;Maybe this would help?  https://stackoverflow.com/questions/47508528/bin-bash-scripts-script-sh-no-such-file-or-directory-when-running-byfn-sh;;;","11/Sep/18 9:13 PM;denyeart;Are you still having this problem?;;;","18/Oct/18 11:50 PM;smfaizalkhan;[~denyeart]  

I get the same issue using v1.3.0
r
!image-2018-10-18-16-49-34-463.png!;;;","18/Oct/18 11:51 PM;smfaizalkhan;My docker version
!image-2018-10-18-16-50-51-484.png!

 

But when i run the baisc-network i dont face the issue;;;","19/Oct/18 3:39 AM;smfaizalkhan;Please change the docker exec command to below

 docker exec cli *//bin//bash* scripts/script.sh $CHANNEL_NAME $CLI_DELAY $LANGUAGE $CLI_TIMEOUT $VERBOSE

Add //bin//bash to the command so it points to the bash part of the container

Later in case if it happends to throw EOL exception .because shell doesn't understand DOS/Windows-like line endings
 Edit in notepad ++ Edit > EOL Conversion > select Unix/OSX
 Then it woks out

!image-2018-10-18-20-38-31-363.png!;;;","01/Dec/18 8:25 PM;denyeart;[~smfaizalkhan] Are you recommending a change to the samples?;;;","06/Jan/19 12:07 AM;smfaizalkhan;Yes,This issue dosent occur in Unix ,when running the fabric and scripts in windows we have to change the script to point it to bash

Again today i face the issue ,this time i added winpty as below and EOL of all the shell script to Unix OS as by default it will windows as it is the host machine

 winpty docker exec -it cli bash scripts/script.sh $CHANNEL_NAME $CLI_DELAY $LANGUAGE $CLI_TIMEOUT $VERBOSE

So when running in windows we will have to do it;;;","29/Jan/19 10:19 PM;manish1635;Due to old unused volumes, this issue comes.

So, you can do,

[docker volume prune|https://docs.docker.com/engine/reference/commandline/volume_prune/]

 And then,  ""./byfn.sh –m up"" will solve your problem.

 You can apply this solution on windows environment as well.;;;","24/Mar/19 3:53 AM;shakti.pallai;I copied the fabric samples files to c:/users/username/... then ran the byfn commands , it started correctly;;;","23/Jan/20 7:34 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,
Hyperledger Fabric on azure and Hyperledger Composer,FAB-11440,32477,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Samurai123,Samurai123,01/Aug/18 4:47 PM,23/Jan/20 7:32 AM,28/Oct/23 3:03 AM,23/Jan/20 7:32 AM,,,,,,,,,,,,,,,,,0,stale-item,,,,,,I have Hyperledger Fabric setup on on azure with the 4 nodes and have also downloaded hyperledger composer. May i know how i am able to deploy my smart contract on the Fabric network?,,Samurai123,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl6f:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Samurai123,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"FAILURE: escc, vscc doc link error on fabric-docs-build-x86_64 ",FAB-11441,32480,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,jtclark,jtclark,01/Aug/18 9:07 PM,19/Mar/19 8:12 PM,28/Oct/23 3:03 AM,07/Sep/18 5:47 AM,,,,,,,,,v1.2.1,v1.3.0,,fabric-docs,,,,,0,ci-failure,,,,,,"On the Jenkins Sandbox host, we are testing [FAB-11180|https://jira.hyperledger.org/browse/FAB-11180]. The fabric-docs-build-x86_64 job generates the following error:

{code:java}
16:26:31 /w/workspace/fabric-docs-build-x86_64/gopath/src/github.com/hyperledger/fabric/docs/source/couchdb_tutorial.rst:483: WARNING: undefined label: createanindex (if the link has no caption the label must precede a section header)
16:26:31 build finished with problems, 18 warnings.
16:26:31 ERROR: InvocationError: '/w/workspace/fabric-docs-build-x86_64/gopath/src/github.com/hyperledger/fabric/.tox/docs-linkcheck/bin/sphinx-build -b linkcheck -d /w/workspace/fabric-docs-build-x86_64/gopath/src/github.com/hyperledger/fabric/.tox/docs-linkcheck/tmp/doctrees ./docs/source /w/workspace/fabric-docs-build-x86_64/gopath/src/github.com/hyperledger/fabric/docs/_build/linkcheck'
16:26:31 ___________________________________ summary ____________________________________
16:26:31 ERROR:   docs-linkcheck: commands failed
{code}

Until this issue is fixed, FAB-11180 is BLOCKED and the patch sets cannot be MERGED.

Jenkins Sandbox Console output:
https://jenkins.hyperledger.org/sandbox/job/fabric-docs-build-x86_64/1/console

Current Build Log: https://logs.hyperledger.org/sandbox/vex-yul-hyp-jenkins-2/fabric-docs-build-x86_64/2

Previous Build Log: https://logs.hyperledger.org/sandbox/vex-yul-hyp-jenkins-2/fabric-docs-build-x86_64/1
",,denyeart,joe-alewine,jtclark,pandrejko,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzl6v:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,joe-alewine,jtclark,pandrejko,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Aug/18 11:28 PM;pandrejko;[~jtclark]
Hi Jason, 

I addressed this error in [https://gerrit.hyperledger.org/r/#/c/24953/] and [https://gerrit.hyperledger.org/r/#/c/24949/] In FAB-11401.

and it was merged.

Have you pulled the latest code?;;;","03/Aug/18 11:39 PM;jtclark;[~pandrejko] I will check on this today. Thanks.;;;","04/Aug/18 2:54 AM;jtclark;[~pandrejko] Re-running the test now. I will let you know the results.;;;","04/Aug/18 4:58 AM;jtclark;[~pandrejko] Can you check the output here and determine if this is accurate: https://jenkins.hyperledger.org/sandbox/job/fabric-docs-build-x86_64/5/ ?;;;","04/Aug/18 6:07 AM;pandrejko;I examined the console output and found that the broken links detected by this tooling are valid. This tool works! We need to be able to run this on a regular basis and report these failures.;;;","04/Aug/18 6:23 AM;pandrejko;[~joe-alewine] IF you have any extra time next week, could you take a look at [https://jenkins.hyperledger.org/sandbox/job/fabric-docs-build-x86_64/5/] ?

Click on *Console Output* in the left nav.

Search for the word 'broken', there's a bunch of gerrit links which are not relevant and we need those filtered out.

But there are a few others in our docs that we should investigate, for example:
*18:15:32* writing output... [ 36%] couchdb_as_state_database*18:15:32* *18:15:32* (line  155) broken    
[http://docs.couchdb.org/en/2.1.1/config/intro.html#configuration-files]
 - Anchor 'configuration-files' not found**
*18:15:32* (line   66) broken    
[http://docs.couchdb.org/en/2.1.1/api/database/find.html#db-index]
 - Anchor 'db-index' not found*18:15:32* (line   78) ok        
[

+We should try to fix the true positives here and see if we can get this to run cleanly. THEN we can turn it on and consider failing the doc builds when bad links are added. 

(Overall, it does not look like many broken links to me.)+|https://github.com/hyperledger/fabric-samples/blob/master/chaincode/marbles02/go/META-INF/statedb/couchdb/indexes/indexOwner.json];;;","10/Aug/18 4:26 AM;rameshthoomu;Out of 17 broken links (Warnings), below two are valid to me. Reamining links are false positives.. When I manually access these broken links, it's directing to a valid link. It's not a documentation broken link error/warning.. it's unable to access the external link.
{code:java}
00:01:38.905 (line 393) broken https://github.com/hyperledger/fabric/tree/master/core/scc/escc - 404 Client Error: Not Found for url: https://github.com/hyperledger/fabric/tree/master/core/scc/escc
00:01:38.975 (line 396) broken https://github.com/hyperledger/fabric/tree/master/core/scc/vscc - 404 Client Error: Not Found for url: https://github.com/hyperledger/fabric/tree/master/core/scc/vscc{code}
I think we can ignore these warnings from the build as these are not errors.;;;","13/Aug/18 4:11 AM;pandrejko;[~rameshthoomu] - From where in the docs are these links surfacing?

 ;;;","13/Aug/18 11:49 PM;joe-alewine;What branch of the docs are we testing this against? release-1.2, or also master and the other branches? I'd like for us to test them all. If we're going to preserve earlier versions, all the more reason to check to see if anything has broken (I suspect we'll find several broken links in them).

I would prefer not to have an automatic link checker that would prevent a CR from being merged. Because gerrit is difficult, there are times where it's helpful to check in a link that's currently broken but won't when a version is cut (as I did with the ACL doc — it linked to a version of configtx.yaml that didn't exist when it was merged).;;;","06/Sep/18 8:01 PM;denyeart;[~pandrejko] [~joe-alewine] Can you provide an update here.  I assume it can be lowered from Highest priority.;;;","06/Sep/18 9:26 PM;pandrejko;[~denyeart] I believe this broken link has been addressed already. Let me confirm and we can close this one.;;;","06/Sep/18 9:37 PM;pandrejko;[~joe-alewine] This problem has also surfaced in FAB-11667. Can you use this issue to address this problem as we discussed?;;;","03/Oct/18 1:24 PM;jtclark;[~pandrejko] - I see that this ticket was CLOSED a few weeks ago. What was the outcome from this issue?;;;","03/Oct/18 8:52 PM;pandrejko;[~jtclark] I met with Ramesh yesterday. He is using FAB-11667 to address the links which are erroneously flagged as broken in the report.

[~joe-alewine] is addressing the true positive broken links identified in that issue. 

 ;;;",,,,,,,,,,,,,
Document concurrency,FAB-11442,32483,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,pandrejko,pandrejko,01/Aug/18 10:19 PM,27/Feb/19 4:25 AM,28/Oct/23 3:03 AM,01/Aug/18 10:24 PM,,,,,,,,,v2.1.0,,,fabric-docs,,,,,0,,,,,,,,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11427,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwti7:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Daily PTE tests fail as one of the fabric-ca-client module was not found during test.,FAB-11443,32484,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,sambhavdutt,sambhavdutt,01/Aug/18 11:46 PM,19/Mar/19 8:13 PM,28/Oct/23 3:03 AM,03/Aug/18 2:35 AM,v1.3.0,,,,,,,,v1.3.0,,,fabric-quality,,,,,0,ci-failure,,,,,,"The fabric-test-pte-x86_64 has been failing as the following error was observed in the build

{code:java}
module.js:540
23:24:10     throw err;
23:24:10     ^
23:24:10 
23:24:10 Error: Cannot find module 'fabric-ca-client/lib/FabricCAClientImpl.js'
23:24:10     at Function.Module._resolveFilename (module.js:538:15)
23:24:10     at Function.Module._load (module.js:468:25)
23:24:10     at Module.require (module.js:587:17)
23:24:10     at require (internal/module.js:11:18)
23:24:10     at Object.<anonymous> (/w/workspace/fabric-test-pte-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/PTE/pte-util.js:29:18)
23:24:10     at Module._compile (module.js:643:30)
23:24:10     at Object.Module._extensions..js (module.js:654:10)
23:24:10     at Module.load (module.js:556:32)
23:24:10     at tryModuleLoad (module.js:499:12)
23:24:10     at Function.Module._load (module.js:491:3)
23:24:10 module.js:540
23:24:10     throw err;
23:24:10     ^
23:24:10 
23:24:10 Error: Cannot find module 'fabric-ca-client/lib/FabricCAClientImpl.js'
{code}

*Build Logs*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-pte-x86_64/56/

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-pte-x86_64/56/consoleFull
",,dongming,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11516,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-2247,,,No,abdcc05a310d6603529a4502dc9475026487c11f,Unset,No,,,"1|hzzl73:",,,,Unset,Unset,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,true,"03/Aug/18 12:11 AM;dongming;The failure is caused by the sdk node renames the `FabricClientCAImpl` to match the export name `FabricClientServices` in fabric-sdk-node commit `b7e528d23ffc0e58cf356068808aadd4911bac44`;;;","03/Aug/18 12:16 AM;dongming;https://gerrit.hyperledger.org/r/#/c/25061/;;;",,,,,,,,,,,,,,,,,,,,,,,,,
