Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocks),Outward issue link (Blocks),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Git Code Review),Outward issue link (Git Code Review),Outward issue link (Git Code Review),Inward issue link (Issue split),Outward issue link (Issue split),Inward issue link (Relates),Inward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Business Value),Custom field (Commit Levels),Custom field (Current Status),Custom field (Design),Custom field (Design Status),Custom field (Documentation Impact),Custom field (Documentation Status),Custom field (Epic Color),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (Executed),Custom field (Found in Commit),Custom field (Function Test Status),Custom field (Must Fix),Custom field (Original story points),Custom field (Parent Link),Custom field (Rank),Custom field (Release Note),Custom field (Release Note Required),Custom field (Root Cause Analysis),Custom field (SDK Impact),Custom field (Sample/Tutorial),Sprint,Custom field (Steps to Reproduce),Custom field (Story Points),Custom field (System Test Impact),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Team),Custom field (Test Plan),Custom field (Test Result),Custom field (Test Result Details),Custom field (Test Type),Custom field (Triaged),Custom field (Usage),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Workaround),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitCommitsReferenced),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
"Join channel POST should be directed at /channels url, not channels/my-channel",FAB-18051,45565,40568,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,07/Jul/20 7:33 PM,14/Jul/20 1:59 AM,28/Oct/23 3:09 AM,14/Jul/20 1:59 AM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,,,,,,"Currently the `Join channel` command does `POST /channels/my-channel`. Since the channel is created, the right thing to do is to `POST /channels`, while extracting the channel name from the block channel header.",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ed7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove ACL policies for non-existent functions from configtx.yaml,FAB-18052,45568,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,tatsu-sato,tatsu-sato,tatsu-sato,08/Jul/20 2:12 AM,08/Jul/20 4:54 AM,28/Oct/23 3:09 AM,,v2.1.1,,,,,,,,,,,fabric-peer,,,,0,,,,,,"*SimulateConfigTreeUpdate()* and *GetConfigTree()* in *cscc* have been removed after FAB-15348 was merged.
 On the other hand, ACL policies to manage the removed functions still remains in some configtx.yaml.
 I can find the unnecessary policies in the following files:
 - sampleconfig/configtx.yaml
 - orderer/common/server/testdata/configtx.yaml
 - orderer/common/onboarding/testdata/configtx.yaml

They may confuse Fabric users, admins and contributors.

So, the unnecessary policies should be removed.",,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01edv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tatsu-sato,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make default values for ACL policies in source code and in sample/test configurations consistent,FAB-18053,45569,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tatsu-sato,tatsu-sato,tatsu-sato,08/Jul/20 2:14 AM,19/Jul/20 1:18 PM,28/Oct/23 3:09 AM,19/Jul/20 1:18 PM,v2.1.1,,,,,,,,,,,fabric-peer,,,,0,,,,,,"Some values for ACL polices in a sample configuration (sampleconfig/configtx.yaml), some test configuration and documents are different from default values in source code (core/aclmgmt/defaultaclprovider.go).

For example, the following gaps from source code can be found in sampleconfig/configtx.yaml:
 - _lifecycle/QueryChaincodeDefinition: /Channel/Application/Readers
 - _lifecycle/QueryChaincodeDefinitions: /Channel/Application/Readers
 - peer/ChaincodeToChaincode: /Channel/Application/Readers

In core/aclmgmt/defaultaclprovider.go, they are set to /Channel/Application/Writers as the default values.

Although the values in the sample configuration may be just examples,  Fabric users may expect them as default values as there is no documentation on ACL default values.

To prevent misunderstandings, if there is no specific intention, I think that it is desirable to have consistent default values.",,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ee3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tatsu-sato,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer.Addresses gets set even if user doesn't set it,FAB-18054,45570,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,caod,denyeart,denyeart,08/Jul/20 4:23 AM,08/Jul/20 8:23 PM,28/Oct/23 3:09 AM,08/Jul/20 8:23 PM,,,,,,,v2.2.0,v2.3.0,,,,fabric-tools,,,,0,ipm,,,,,"Channel config Orderer.Addresses is deprecated, we advise users to set OrdererEndpoints at the org level instead. Users are starting to do this, however the Orderer.Addresses still gets populated even if they don't set it.

It looks like a default value in configtxgen is to blame:
{code:java}
[common.tools.configtxgen.localconfig] completeInitialization -> INFO 002 Orderer.Addresses unset, setting to [127.0.0.1:7050]{code}
[https://github.com/hyperledger/fabric/blob/master/internal/configtxgen/genesisconfig/config.go#L305-L307]

 ",,caod,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15662,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzo2",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caod,denyeart,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Jul/20 4:40 AM;caod;[https://github.com/hyperledger/fabric/pull/1550];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Investigate whether peer chaincode actually needs to parse the config for orderer addresses or tls certs,FAB-18055,45572,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,caod,caod,08/Jul/20 6:23 AM,12/Oct/20 11:18 PM,28/Oct/23 3:09 AM,,,,,,,,v3.0.0,,,,,,,,,0,ipm,,,,,The peer chaincode and peer lifecycle chaincode commands call out to [https://github.com/hyperledger/fabric/blob/4fdb366bb399bc5329cdeb3ccd9d793ae888332e/internal/peer/common/common.go#L175] if the orderer address is not passed. This function is currently broken as it only parses the config for the top level orderer addresses instead of checking org level when they exist and the capability is set. The same logic applies for tls certs as well. Given that this code path is likely broken anyways it may be better to enforce the cli properly passes these values instead of trying to parse them from the config and just remove these functions.,,caod,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18056,,,,,,,FAB-15662,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-15574,,,No,,Unset,No,,,"1|i00n2e:8zs02",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caod,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jul/20 11:20 AM;denyeart;I agree the automatic pulling of orderer endpoints is overkill and can likely be removed from peer CLI instead of investing in the org OrdererEndpoint support, but we may want to wait for v3.0 to make such breaking changes. Note that the automatic pulling of Orderer.Addresses does indeed work in peer CLI as of July 2020.;;;","08/Jul/20 11:35 AM;caod;If these code paths are actually used then maybe we should look into just fixing the logic to fetch the org level orderer endpoints for now and then entirely remove it as part of 3.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer CLI auto detects orderer address using deprecated Orderer.Addresses config,FAB-18056,45573,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,denyeart,denyeart,08/Jul/20 9:19 AM,08/Jul/20 11:17 AM,28/Oct/23 3:09 AM,08/Jul/20 11:17 AM,,,,,,,,,,,,,,,,0,,,,,,"Channel config Orderer.Addresses is deprecated, we advise users to set OrdererEndpoints at the org level instead.

However it looks like peer CLI still tries to get Orderer.Addresses only from config block, if an orderer address flag is not passed:

[https://github.com/hyperledger/fabric/blob/master/internal/peer/common/common.go#L226]

If we want to keep the auto-orderer address detection functionality in peer CLI, we should add a check for org level OrdererEndpoints.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18055,,,,,,FAB-15662,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01eej:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Allow the orderer to Update a join to a channel, or ""ReJoin""",FAB-18057,45578,,Story,Backlog,FAB,Fabric,software,denyeart,,,Lowest,,,tock,tock,10/Jul/20 12:52 AM,17/Apr/21 4:11 AM,28/Oct/23 3:09 AM,,,,,,,,v2.x,,,,,fabric-orderer,,,,0,,,,,,"An orderer node that is a member or a follower of a channel may go down for a long time. When it wake up, in most cases it will be able to pull the blocks its missed and catch up with the cluster. However, in rare cases, the config of the channel  may have changed so much such that the restored node no longer has the ability to pull.

The simple, but possibly costly solution, is to remove the channel and join from scratch with a recent config block.

However, a better solution is to supply the orderer with a more recent config block to the channel in order to allow it to catch-up. This would probably have to be implemented with another REST verb like a {{`PUT`}} (vs `POST` for Join) to perform an {{`Update`}}.  That is:

PUT /channels/channel-name 

with body carrying a join-block.

If the join-block.number is smaller or equal than the ledger height, the request is rejected.

If it is higher, it is placed in the joinblock file repo, the current chain or follower are stopped, and a new follower is started.

 ",,jyellick,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i01eff:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Apr/21 4:11 AM;jyellick;This can be worked around be unjoining and rejoining, and it unlikely for real production setups.  Lowering priority.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update references to Go SDK when it is GA,FAB-18058,45579,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,pandrejko,pandrejko,10/Jul/20 4:16 AM,26/Feb/21 8:12 AM,28/Oct/23 3:09 AM,26/Feb/21 8:12 AM,,,,,,,,,,,,fabric-docs,,,,0,,,,,,"* contributing.rst
 * devenv.rst
 * fabric-sdks.rst
 * getting-started.rst
 * glossary.rst",,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhl:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/21 4:31 AM;pandrejko;CR: https://github.com/hyperledger/fabric/pull/2377;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a testEnv to  confighistory mgr_test.go,FAB-18059,45584,44915,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,wenjian,wenjian,11/Jul/20 12:30 AM,05/Oct/20 11:40 PM,28/Oct/23 3:09 AM,05/Oct/20 11:40 PM,,,,,,,,,,,,,,,,0,,,,,,There is repetitive test setup code in multiple tests. Add a testEnv to avoid repetitions.,,manish-sethi,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01efv:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Oct/20 11:40 PM;manish-sethi;Already fixed as part of some other PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ccenv:latest removal from docker hub caused problem for chaincode instantiation,FAB-18060,45585,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid: Works as Expected,,tongliofcary,tongliofcary,11/Jul/20 12:31 AM,14/Jul/20 6:50 PM,28/Oct/23 3:09 AM,14/Jul/20 6:50 PM,v1.4.1,v1.4.2,v1.4.3,v1.4.4,v1.4.5,v1.4.6,,,,,,fabric-peer,,,,0,build-system,,,,,"for fabric 1.4.1 and 1.4.2, when chaincode gets instantiated, peer will ask for container image hyperledger/fabric-ccenv:latest, when this image gets removed from docker hub, chaincode instantiation will fail because there is no such image available for pulling.",,btl5037,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01eg3:",,,,Unset,Unset,,"setup fabric 1.4.1 or 1.4.2 in a fresh environment without hyperledger fabric container images.
install any chaincode,
instantiate the chaincode, then the error will show.
```
or: could not assemble transaction, err proposal response was not successful, error code 500, msg error starting container: error starting container: Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:latest: API error (404): manifest for hyperledger/fabric-ccenv:latest not found: manifest unknown: manifest unknown

```",,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/20 4:41 AM;btl5037;We announced this deprecation last year some time. Users should be setting the `chaincode.builder` and `chaincode.<language>.runtime` settings in core.yaml or via environment variables.;;;","14/Jul/20 6:47 PM;tongliofcary;[~btl5037]Thanks for your comment. I will close this then.;;;","14/Jul/20 6:50 PM;tongliofcary;This behavior was due to a design choice and there is a work around of this problem.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor couchDBDatabase.getDatabaseInfo() and do not return error for 404 status code,FAB-18061,45587,,Task,To Do,FAB,Fabric,software,denyeart,,,Medium,,,wenjian,wenjian,11/Jul/20 2:23 AM,09/Nov/20 11:56 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-ledger,,,,0,,,,,,Also rename createCouchDatabase to getOrCreateCouchDatabase,,manish-sethi,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0lr",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Aug/20 12:46 PM;manish-sethi;https://github.com/hyperledger/fabric/pull/1547#discussion_r451141611;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support individual Orderer value updates,FAB-18062,45588,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,caod,caod,11/Jul/20 5:56 AM,24/Jul/20 11:18 PM,28/Oct/23 3:09 AM,24/Jul/20 3:23 AM,,,,,,,,,,,,,,,,1,ipm,,,,,"As a consumer of the fabric-config library, I would like to update individual fields in my orderer configuration without having to go through the existing process of cloning the orderer configuration via `GetConfiguration()` and then modifying the specific fields I want to update. Currently if you wanted to update just the `MaxMessageCount` of an orderer's batchSize config, you would do something like:
{code:java}
o := c.Orderer()
ordererConfig := o.GetConfiguration()
ordererConfig.BatchSize.MaxMessageCount = 100 // new value
o.SetConfiguration(ordererConfig){code}
While the existing `GetConfiguration` -> `SetConfiguration` model has it's own use cases, the above could have simply been supported as

 
{code:java}
o := c.Orderer()
o.SetMaxMessageCount(100){code}
which is both more in line with how the rest of the API operates and less confusing for having to follow a different process than for say `o.AddCapability`.

 

 

For now, lets keep the existence of `SetConfiguration` and `GetConfiguration` and just add the other functions to support a separate path for making individual field updates.

 

*Acceptance*

There are new api functions for `OrdererGroup` that implement each of the supported values we add via `setOrdererValues`: [https://github.com/hyperledger/fabric-config/blob/7beda2c830d8d474eda0b187ef9cd8ecb3195724/configtx/orderer.go#L585]
 * SetMaxMessageCount (persist existing values for other BatchSize values)
 * SetAbsoluteMaxBytes (persist existing values for other BatchSize values)
 * SetPreferredMaxBytes (persist existing values for other BatchSize values)
 * SetBatchTimeout
 * SetMaxChannels
 * AddCapability (already supported)
 * SetConsensusType
 * Up to implementer whether there should be a SetKafkaBrokers/SetEtcdRaftMetadata that also sets the corresponding ConsensusType automatically
 * Additional support for modifying individual EtcdRaftMetadata values/options (ie similar to what was added for AddConsenter/RemoveConsenter)
 * SetConsensusState (persists existing consensus type values)

The examples are also updated to either show both methods of updating an orderer configuration.

 ",,caod,rolivieri,tsharris,,,,,,,,,,,,,,,,,,,,,,,FAB-18092,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17628,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzoh9",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caod,rolivieri,tsharris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jul/20 3:11 AM;tsharris;[~caod] Should we implement the SetKafkaBrokers() as a legacy option or exclude entirely?;;;","15/Jul/20 3:33 AM;caod;Let's exclude it, just like how top level orderer addresses are deprecated and we don't support setting/updating but rather just removing.;;;","15/Jul/20 3:55 AM;tsharris;[https://github.com/stephyee/fabric-config/tree/fab-18062] has my current work but needs to be polished.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support individual MSP value updates,FAB-18063,45589,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,caod,caod,11/Jul/20 6:28 AM,29/Jul/20 6:29 AM,28/Oct/23 3:09 AM,29/Jul/20 6:29 AM,,,,,,,,,,,,,,,,1,ipm,,,,,"As a consumer of the fabric-config library, I would like to update individual fields in and organizations MSP configuration without having to go through the existing process of cloning the MSP configuration via `GetMSP()` and then modifying the specific fields I want to update. Currently if you wanted to add a single admin cert  to  an orderer org's MSP config, you would do something like:
{code:java}
ordererOrg := c.Orderer().Organization(""ordererorg"")
mspConfig := ordererOrg.GetMSP()
mspConfig.AdminCerts = append(mspConfig.AdminCerts, newCert)
ordererOrg.SetMSP(mspConfig){code}
While the existing `GetMSP` -> `SetMSP` model has it's own use cases, the above could have simply been supported as 
{code:java}
ordererOrg := c.Orderer().Organization(""ordererorg"")
ordererOrg.AddAdminCert(newCert){code}
which is both more in line with how the rest of the API operates and less confusing for having to follow a different process than for say `ordererOrg.AddOrdererEndpoint`.

 

For now, lets keep the existence of `SetMSP` and `GetMSP` and just add the other functions to support a separate path for making individual field updates.

 

*Acceptance*

There are new api functions for `OrdererOrgGroup`, `ApplicationOrgGroup`, and `ConsortiumOrgGroup` that implement each of the supported values we add via `SetMSP`: [https://github.com/hyperledger/fabric-config/blob/7beda2c830d8d474eda0b187ef9cd8ecb3195724/configtx/orderer.go#L471]
 * Perform any certificate validation if necessary
 * AddRootCert/RemoveRootCert
 * AddIntermediateCert/RemoveIntermediateCert
 * AddAdminCert/RemoveAdminCert
 * AddCRL/RemoveCRL (using or replacing the already supported CreateMSPCRL, this function never actually modified the ConfigGroup type it was associated with and was instead used in conjunction with the SetMSP flow)
 * AddOUIdentifier/RemoveOUIdentifier
 * SetCryptoConfig
 * AddTLSRootCert/RemoveTLSRootCert
 * AddTLSIntermediateCert/RemoveTLSIntermediateCert
 * SetClientOUIdentifier/SetPeerOUIdentifier/SetAdminOUIdentifier/SetOrdererOUIdentifier
 * EnableNodeOUs/DisableNodeOUs

The examples are also updated to either show both methods of updating an MSP.

 ",,caod,rolivieri,tatsu-sato,tsharris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17628,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohc",,,,Unset,Unset,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),caod,rolivieri,tatsu-sato,tsharris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/20 6:32 AM;caod;Consider adding a new intermediary level for org MSPs ie:

 
{code:java}
ordererOrgMSP := c.Orderer().Organization(""ordererorg"").MSP()
ordererOrgMSP.AddAdminCert(newCert)
...
{code}
 It may end up encapsulating the same  ConfigGroup as the parent org but should help for namespacing where the functions show up:

 
{code:java}
type OrdererOrgMSP {
  configGroup *cb.ConfigGroup // same config group as the OrdererOrg
}

func (m *OrdererOrgMSP) AddAdminCert(cert *x509.Certificate) {}
{code}
`GetMSP` and `SetMSP` could then move under here as well as `GetConfiguration` and `SetConfiguration` essentially treating the MSP as an abstract layer instead of directly attached to the organization config group.

 ;;;","29/Jul/20 4:00 AM;tsharris;[https://github.com/hyperledger/fabric-config/pull/35];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode instantiation fails for latest cc-env docker image,FAB-18064,45591,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid: Works as Expected,,salmandabbakuti,salmandabbakuti,12/Jul/20 3:04 PM,19/Jul/20 1:46 PM,28/Oct/23 3:09 AM,15/Jul/20 1:46 AM,,,,,,,,,,,,,,,,1,chaincode,docker-image,instantiation,,,"After, recent tag specification fix when choosing docker images, it is noticed that, 'latest' tag has been removed instead we should specify image version right? so instantiation command fails because it is choosing 'latest' cc-env image as it is depreciated. please look into the issue.  !Screenshot (136).png!",,ahkhystrix,btl5037,salmandabbakuti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/20 3:04 PM;salmandabbakuti;Screenshot (136).png;https://jira.hyperledger.org/secure/attachment/18419/Screenshot+%28136%29.png",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01egr:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ahkhystrix,btl5037,salmandabbakuti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/20 4:28 AM;btl5037;This is the correct behavior. You should be specifying your chaincode builder and runtimes in `core.yaml`;;;","14/Jul/20 4:38 AM;btl5037;Your `chaincode.builder` should be set to `hyperledger/fabric-ccenv:1.4`;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move follower to orderer/common,FAB-18065,45595,40570,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,13/Jul/20 5:09 PM,19/Jul/20 2:51 PM,28/Oct/23 3:09 AM,19/Jul/20 2:51 PM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,,,,,,"Following code review, it was decided to move the ""follower"" package from orderer/consensus/follower to orderer/common/follower.

The follower.Chain no longer implements consenus.Chain and is not treated as a consensus plug-in.

Instead of a consensus.Consenter implemeting `JoinChain`, the registrar creates a follower.Chain and saves it in a separate map from consensus.Chain
 implementations. Since the follower is not in the chains map of the registrar, it is not found by broadcast requests until it turns into an etcdraft.Chain.

Interface consensus.Consenter now defines a new interface `IsChannelMember` that allows the registrar to detect whether a join-block implies the orderer
 is a member or follower of the channel.",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ehf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Require orderer file ledger location to be set,FAB-18066,45599,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,14/Jul/20 4:06 AM,29/Jul/20 9:42 PM,28/Oct/23 3:09 AM,22/Jul/20 7:18 AM,v2.2.0,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,,,,,,"The orderer currently allows starting with a configuration that does not specify the Orderer.FileLedger.Location. When this occurs, the orderer uses the Orderer.FileLedger.Prefix and creates a temporary directory using this prefix. In order to handle crash fault tolerance, the orderer needs a configured directory and should not generate a temporary directory. The orderer should panic if a location is not provided.",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18101,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|i01ei3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Jul/20 5:35 AM;wlahti;https://github.com/hyperledger/fabric/pull/1598;;;","21/Jul/20 9:50 PM;wlahti;Leaving this open until I'm sure the docs/release notes are correctly updated to reflect this change.;;;","22/Jul/20 7:18 AM;wlahti;Release notes updated and merged. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service Discovery support for Implicit Collections,FAB-18067,45618,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,andrew-coleman,caveman7,caveman7,16/Jul/20 5:11 PM,28/Jul/21 10:43 PM,28/Oct/23 3:09 AM,,v2.2.0,,,,,,,,,,,fabric-gossip,,,,0,ipm2,,,,,"Discovery for implicit collection doesn't seem to work. Using the following command from `discover` cli:

```
discover endorsers --chaincode=asset_transfer \
 --channel=channel1 \
 --collection=asset_transfer:_implicit_org_Org1MSP \
 --server=peer0.org1.example.com:7051 \
 --peerTLSCA=/var/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt \
 --userKey=/var/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/key.pem \
 --userCert=/var/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/Admin@org1.example.com-cert.pem \
 --MSP=Org1MSP
 ```

I see the following in the peer logs:

```
{{2020-07-16 08:03:29.631 UTC [discovery.endorsement] loadMetadataAndFilters -> WARN 08c Failed computing collection principal sets for chaincode asset_transfer due to collection _implicit_org_Org1MSP doesn't exist in collection config for chaincode asset_transfer channel=channel1}}

{{2020-07-16 08:03:29.632 UTC [discovery] chaincodeQuery -> ERRO 08d Failed constructing descriptor for chaincode chaincodes:<name:""asset_transfer"" collection_names:""_implicit_org_Org1MSP"" > ,: collection _implicit_org_Org1MSP doesn't exist in collection config for chaincode asset_transfer}}
 ```

I am sure that the collection exists in the my CouchDB world state",,caveman7,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0ip9",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caveman7,denyeart,yacovm,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jul/20 5:21 PM;yacovm;[~denyeart] - we need to add support to the lifecycle side [in the peer. |https://github.com/hyperledger/fabric/blob/master/core/chaincode/lifecycle/metadata_provider.go];;;","16/Jul/20 9:31 PM;yacovm;I think that maybe the only thing that needs to be added is simply to create a dynamic application policy for all collections that are implicit: 

{code}
	for _, col := range collections {
		if strings.Index(col, ""_implicit_org_"") != 0 {
			// Not an implicit collection
			continue
		}


		// Implicit collection exists

		// Initialize definition of collections if it's missing
		if ccInfo.Definition.Collections == nil {
			ccInfo.Definition.Collections = &peer.CollectionConfigPackage{}
		}

		// Get the name of the member
		mspID := strings.Replace(col, ""_implicit_org_"", """", 1)
		// Build SignaturePolicyEnvelope that matches the MSP ID
		spe := policydsl.SignedByMspPeer(mspID)
		// Build ApplicationPolicy out of SignaturePolicyEnvelope
		ap := &peer.ApplicationPolicy{
			Type: &peer.ApplicationPolicy_SignaturePolicy{
				SignaturePolicy: spe,
			},
		}

		ccInfo.Definition.Collections.Config = append(ccInfo.Definition.Collections.Config, &peer.CollectionConfig{
			Payload: &peer.CollectionConfig_StaticCollectionConfig{
				StaticCollectionConfig: &peer.StaticCollectionConfig{
					Name: col,
					EndorsementPolicy: ap,
				},
			},
		})
	}

{code}

and plant it [right before|https://github.com/hyperledger/fabric/blob/master/core/chaincode/lifecycle/metadata_provider.go#L132] the collections of the metadata are evaluated.

However this explicitly assumes that we have Node OU roles (peer node OU) in use, I guess it's fine.;;;","15/Jul/21 10:45 PM;denyeart;[~andrew-coleman] Here is the story we talked about.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation for prereqs mentions wrong version of go,FAB-18068,45619,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,sathyakplm,sathyakplm,16/Jul/20 7:48 PM,19/Jul/20 1:17 PM,28/Oct/23 3:09 AM,19/Jul/20 1:17 PM,,,,,,,,,,,,fabric-docs,,,,0,Documentation,Needs-Review,,,,"[https://hyperledger-fabric.readthedocs.io/en/release-2.0/dev-setup/devenv.html]

The above page contains the instructions for setting up the developer environment. On the same page, there is a link to the [prerequisites page|[https://hyperledger-fabric.readthedocs.io/en/release-2.0/prereqs.html]]. 

On the prerequisites page, it is recommended to install go 1.13.x. But, the current master can be built with go 1.14.4. The build fails with the go version mentioned in the prerequisite page.",,btl5037,sathyakplm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01elf:",,,,Unset,Unset,,Please install go 1.13.x in the developer box and build the project.,,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,sathyakplm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jul/20 1:17 PM;btl5037;You are looking at the documentation for the `v2.0.0` and `release-2.0` branch, note the `release-2.0` name in the URL. If you checkout the release-2.0 branch these directions are correct.

Here is the doc for the `master` branch: [https://hyperledger-fabric.readthedocs.io/en/master/dev-setup/devenv.html] which correctly states the use of Go 1.14.x;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Separate internal & external Halt on etcdraft.Chain,FAB-18069,45620,40571,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,tock,tock,16/Jul/20 9:45 PM,13/Aug/20 1:43 AM,28/Oct/23 3:09 AM,06/Aug/20 4:11 AM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,,,,,,"currently, when the etcdraft.Chain halts, either internally or externally, it calls an ""haltCallback"" that generates a new chain. This is useful for internal halt, when the chain discovers it is no longer a member of the channel and needs to transfer responsibility to either a follower or an inactive chain. In order to remove a chain, we need to close it by calling Halt with an external thread. However, currently this will cause a call to haltCalback...

The task here is to separate internal halt (called by the internal go-routine) from external Halt, that should stop the chain and indicate that haltCallback should NOT be called upon termination.",,tock,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18152,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01eln:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jul/20 6:52 AM;wlahti;https://github.com/hyperledger/fabric/pull/1628;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Refactor follower to get rid of the ""support"" pattern",FAB-18070,45621,40570,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,16/Jul/20 10:45 PM,21/Jul/20 1:54 AM,28/Oct/23 3:09 AM,21/Jul/20 1:54 AM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,,,,,,"Avoid using the ""support"" pattern with the follower. That is, do not pass a monolithic structure that embeds all the dependencies of the follower. Instead, pass dependencies as concrete types that implement interfaces that the follower needs.

 

Some methods that are needed by both the follower and consensus.Chains are promoted from `ChainSupport` to `ledgerResources` along with respective tests.",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01elv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test-network should support deployCC with collection from a file,FAB-18071,45622,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,negupta,sijo.c,sijo.c,17/Jul/20 4:56 AM,19/Jul/20 3:43 AM,28/Oct/23 3:09 AM,19/Jul/20 3:43 AM,v2.2.0,,,,,,,,,,,fabric-samples,,,,0,,,,,,"* Updated  test-network  supports  asset-transfer-private-data , which needs collections-config during CC deploy, but is not supported yet
 * Desired support for: 
{noformat}
--collections-config asset-transfer-private-data/chaincode-go/collections_config.json{noformat}

 ",,sijo.c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01em3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sijo.c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/20 4:58 AM;sijo.c;cc [~harrisob@us.ibm.com];;;","17/Jul/20 9:21 PM;sijo.c;[https://github.com/hyperledger/fabric-samples/pull/247|https://github.com/hyperledger/fabric-samples/pull/247/files];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Could not be completed unit-test about PCKS11 on Mac,FAB-18072,45635,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,Specia1,Specia1,20/Jul/20 9:40 AM,19/Aug/20 11:06 PM,28/Oct/23 3:09 AM,19/Aug/20 9:25 PM,,,,,,,,,,,,,,,,0,,,,,,"On the Mac, I know that unlike Ubuntu or Debian, there is no PKCS11 related library.
Therefore, the tests should be ignored on Mac or replaced in some other way.

h3. Reference: 

* https://github.com/hyperledger/fabric/blob/master/bccsp/pkcs11/impl.go#L238",,btl5037,mastersingh24,Specia1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jul/20 9:41 AM;Specia1;unit-test-result.log;https://jira.hyperledger.org/secure/attachment/18430/unit-test-result.log",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01eo3:",,,,Unset,Unset,,"on mac
make unit-test",,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,mastersingh24,Specia1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jul/20 3:42 AM;btl5037;{code:java}
brew install softhsm
{code}
You can find the full instructions for configuring it on your mac here: [https://hyperledger-fabric.readthedocs.io/en/release-2.0/dev-setup/build.html#running-the-unit-tests]

We don't ignore the tests on Mac because they can be tested using the `softhsm` library. What we do however is push the PKCS11 tests into their own test bucket so if they fail they fail late and you can still test the rest of your code.;;;","22/Jul/20 3:44 AM;btl5037;We don't include a default location (unlike ubuntu and debian) because Brew puts the library in a versioned directory, so there is now way for us to know what version you are using and thus a default location. So we are dependent on the developer having.

We also don't support running the Peer in production on Mac so having Mac specific code in the production code doesn't make sense.;;;","19/Aug/20 9:24 PM;mastersingh24;As [~btl5037] mentions, you can install SoftHSM on macOS.
{code:java}
brew install softhsm
PKCS11_LIB=
/usr/local/Cellar/softhsm/2.6.1/lib/softhsm/libsofthsm2.so make unit-test
{code}
 ;;;","19/Aug/20 11:06 PM;Specia1;[~btl5037] [~mastersingh24]

I understand this issue.

I was able to complete it thanks to you.

Thank you so much.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DevMode - Add integration/functional tests for DevMode in 1.4,FAB-18073,45636,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,dereckluo,dereckluo,20/Jul/20 12:15 PM,18/Sep/20 8:27 PM,28/Oct/23 3:09 AM,02/Sep/20 1:00 AM,,,,,,,v1.4.9,,,,,,,,,0,ipm,operator,,,,"Currently we don't have any integration or functional tests coverage for dev mode using legacy lifecycle (lscc).
In order to support the continued maintenance of devmode, and integration test should be added to verify the functionality remains working

Acceptance:
Have an integration test or functional test that demonstrate the following.
Client should be able to start the chaincode by itself, have it connect to the peer, and have the peer route invocations to it.
Client should be able to kill that process, swap in another, and have it work.",,dereckluo,tsharris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18074,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohf",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dereckluo,tsharris,,,,,,,,,,,,,,,release-1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Aug/20 4:53 AM;tsharris;https://github.com/hyperledger/fabric/pull/1684;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add DevMode support for new lifecycle,FAB-18074,45637,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dereckluo,dereckluo,dereckluo,20/Jul/20 12:16 PM,14/Aug/20 8:44 PM,28/Oct/23 3:09 AM,29/Jul/20 3:08 AM,,,,,,,,,,,,,,,,1,ipm,operator,,,,"Chaincode DevMode no longer works for 2.x, it mainly due to the devmode is not supported for the new lifecycle. ",,acloudfan,dereckluo,Matrixik,robmurgai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18111,FAB-17584,FAB-18073,FAB-18098,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohg",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),acloudfan,dereckluo,Matrixik,robmurgai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jul/20 3:08 AM;dereckluo;With future investigation, we find there is a path that DevMode work with the new lifecycle. A list of detail steps similar to [DevMode Doc|https://hyperledger-fabric.readthedocs.io/en/release-1.4/peer-chaincode-devmode.html#using-dev-mode] are listed below.

The following commands are performed under fabric directory

1. Generate genesisblock
{code:java}
cd $FABRIC_CFG_PATH; configtxgen -profile SampleDevModeSolo -channelID syschannel -outputBlock genesisblock{code}
2. Start up orderer
{code:java}
ORDERER_GENERAL_GENESISPROFILE=SampleDevModeSolo orderer{code}
3. Start up peer with DevMode turned on
{code:java}
CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052 peer node start --peer-chaincodedev=true{code}
4. Create test channel, and join peer to test channel
{code:java}
configtxgen -channelID testchannel -outputCreateChannelTx testchannel.tx -profile SampleSingleMSPChannel;
peer channel create -o 127.0.0.1:7050 -c testchannel -f testchannel.tx;
peer channel join -b testchannel.blocpeer channel join -b testchannel.block;
{code}
5. Package Chaincode (we are using asset-transfer-basic/chaincode-go as example here)
{code:java}
peer lifecycle chaincode package assetTransfer.tar.gz --path $GOPATH/src/github.com/hyperledger/fabric-samples/asset-transfer-basic/chaincode-go --lang golang --label myccv1{code}
6. Install chaincode
{code:java}
peer lifecycle chaincode install assetTransfer.tar.gz --peerAddresses 192.168.0.7:7051{code}
7. Query installed chaincode and obtain PACKAGE_ID
{code:java}
peer lifecycle chaincode queryinstalled --peerAddresses 192.168.0.7:7051{code}
8. Start Chaincode
{code:java}
CORE_CHAINCODE_LOGLEVEL=debug CORE_PEER_ADDRESS=127.0.0.1:7052 CORE_PEER_TLS_ENABLED=false CORE_CHAINCODE_ID_NAME={PACKAGE_ID} ./assetTransfer -peer.address 127.0.0.1:7052{code}
9. Approve chaincode for my org
{code:java}
peer lifecycle chaincode approveformyorg  -o 127.0.0.1:7050 --channelID testchannel --name myccv1 --version 1.0 --sequence 1 --signature-policy ""AND ('Org1MSP.peer','Org2MSP.peer')"" --package-id {PACKAGE_ID}{code}
10. Commit chaincode
{code:java}
peer lifecycle chaincode checkcommitreadiness -o 127.0.0.1:7050 --channelID testchannel --name myccv1 --version 1.0 --sequence 1 --signature-policy ""AND ('Org1MSP.peer','Org2MSP.peer')""{code}
 ;;;","14/Aug/20 8:40 PM;robmurgai;Dev Mode Review for new lifecycle highlighted the need for updated documentation and creation of Integration tests to ensure future maintainability and consumption.  Link the associated Jira(s) to this Jira for completeness.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add TLS support for DevMode,FAB-18075,45638,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,dereckluo,dereckluo,20/Jul/20 12:19 PM,27/Jul/20 11:17 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,1,ipm,,,,,"Currently DevMdoe does not support TLS, and this leads to some of the client code has to use self-signed certs to sign the proposals. ",,dereckluo,Matrixik,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8zs00i",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dereckluo,Matrixik,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jul/20 3:44 PM;yacovm;How is proposal signing related to TLS between peer and the chaincode shim?

 

Dev mode never worked with TLS in all versions of 1.x so why the sudden requirement now?;;;","22/Jul/20 12:38 AM;dereckluo;TLS support for Dev mode was brought up by the Hursley team as a useful feature to have. Not running with TLS isn't realistic, therefore their team is trying to use it as much as possible.

Currently more investigations still need to go into this, and this Jira description will be updated accordingly. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer initializes & starts follower chains upon restart,FAB-18076,45639,40570,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,20/Jul/20 8:50 PM,01/Sep/20 5:03 PM,28/Oct/23 3:09 AM,01/Sep/20 4:59 PM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,,,,,,"Rewrite the Registrar.Initialize() flow:
- Discover and load join-blocks. If there is a join-block, there must be a ledger; if there is none, create it.
- Discover all ledgers. This should already include all channels with join blocks as well.
- Scan for and initialize the system channel, if it exists.
- Make sure there are no empty ledgers without a corresponding join-block. Note that there may be channels with empty ledgers, but always with a join block.
- Initialize application channels, by creating either a consensus.Chain or a follower.Chain.
- Start all channels. ",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18198,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01eoz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Determine how to handle snapshot generation error,FAB-18077,45641,44705,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,wenjian,wenjian,21/Jul/20 2:48 AM,05/Oct/20 11:35 PM,28/Oct/23 3:09 AM,05/Oct/20 11:35 PM,,,,,,,,,,,,,,,,0,,,,,,"There are 3 code paths that may generate a snapshot.
 # after a block is committed
 # when a snapshot request is submitted
 # at peer startup to recover a missed snapshot generation (e.g., due to peer crash)

Currently, a go-routine is created to generate snapshot in each of the above cases. Any error from snapshot generation is simply logged as an error message. Need to revisit and decide what is the best way to handle this kind of error and how to let the administrator know a peer fails to generate a snapshot.

 ",,manish-sethi,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01epf:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Oct/20 11:35 PM;manish-sethi;Leaving this as a error log as there is no better way of reporting a failure of an async background operation in the peer.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTEv2 supports invoke and query,FAB-18078,45657,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,21/Jul/20 11:09 PM,11/Jan/21 2:50 AM,28/Oct/23 3:09 AM,11/Jan/21 2:50 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,PTEv2 executes invokes and queries using high level SDK-node,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17973,,,No,,Unset,No,,,"1|i00uze:rzczqzxyzzx8zwz2j",,,,Unset,Unset,In Progress,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTEv2 supports service discovery,FAB-18079,45658,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,21/Jul/20 11:11 PM,11/Jan/21 2:50 AM,28/Oct/23 3:09 AM,11/Jan/21 2:50 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,PTEv2 supports service discovery with collection,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17973,,,No,,Unset,No,,,"1|i00uze:rzczqzxyzzx8zwz2ji",,,,Unset,Unset,In Progress,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTEv2 supports filtered block event,FAB-18080,45659,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,21/Jul/20 11:12 PM,11/Jan/21 2:50 AM,28/Oct/23 3:09 AM,11/Jan/21 2:50 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,PTEv2 supports filtered block event,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17973,,,No,,Unset,No,,,"1|i00uze:rzczqzxyzzx8zwz2jr",,,,Unset,Unset,In Progress,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTEv2 supports constant mode transaction,FAB-18081,45660,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,21/Jul/20 11:14 PM,11/Jan/21 2:49 AM,28/Oct/23 3:09 AM,11/Jan/21 2:49 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,PTEv2 supports constant mode transaction with user specified frequency and deviation frequency,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17973,,,No,,Unset,No,,,"1|i00uze:rzczqzxyzzx8zwz2jw",,,,Unset,Unset,In Progress,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make RemoveChannel crash fault tolerant,FAB-18082,45661,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,wlahti,wlahti,21/Jul/20 11:17 PM,21/Oct/20 9:37 PM,28/Oct/23 3:09 AM,21/Oct/20 9:32 PM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"We need to make the {{Remove}} operation crash fault tolerant. The {{blkstorageProvider.Drop(channelID)}} may take a while, removing the index and then the folder, and if in that time there is a crash there is no recovery from {{blkstorageProvider}}. We need to mark the channel for removal with the file-repo at the start of this method, and unmark at the end. If we restart and find a channel marked for removal, we deed to retry the {{Drop()}}.",,tock,tsharris,wlahti,,,,,,,,,,,,,,,,,,,,,,FAB-15712,FAB-18280,FAB-18008,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx",,,,Unset,Unset,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,tsharris,wlahti,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Oct/20 10:02 PM;tsharris;https://github.com/hyperledger/fabric/pull/1952;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTEv2 supports user specified target peers,FAB-18083,45663,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,21/Jul/20 11:24 PM,11/Jan/21 2:49 AM,28/Oct/23 3:09 AM,11/Jan/21 2:49 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,"PTEv2 sets target peers if not service discovery based on user specification.

The supported target peers are: 

ORGANCHOR: the anchor peer (the first peer listed in the org)

ALLANCHORS: all anchor peers of all orgs

ORGPEERS: all peers in the same org

ALLPEERS: all peers listed in the connection profile

LIST: specific peers in the list

DISCOVERY: service discovery, no target peer is set",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17973,,,No,,Unset,No,,,"1|i00uze:rzczqzxyzzx8zwz2jy",,,,Unset,Unset,In Progress,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTEv2 supports general chaincode args,FAB-18084,45664,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,21/Jul/20 11:32 PM,11/Jan/21 2:49 AM,28/Oct/23 3:09 AM,11/Jan/21 2:49 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,"In order to have a unique key for each transaction, PTEv2 supports general chaincode args ",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17973,,,No,,Unset,No,,,"1|i00uze:rzczqzxyzzx8zwz2jz",,,,Unset,Unset,In Progress,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTEv2 support invoke check,FAB-18085,45668,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,22/Jul/20 4:26 AM,11/Jan/21 2:49 AM,28/Oct/23 3:09 AM,11/Jan/21 2:49 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,"PTEv2 supports invoke check

After invokes execution, PTEv2 can perform queries for invoke validation.  User can specify the number of query, such as all invoke transactions or last n transactions and the peers that the queries to be sent.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17973,,,No,,Unset,No,,,"1|i00uze:rzczqzxyzzx8zwz2jzi",,,,Unset,Unset,In Progress,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Wiring between multichannel.Registrar, follower.Chain & BlockPuller",FAB-18086,45672,40570,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,22/Jul/20 9:22 PM,18/Aug/20 4:39 AM,28/Oct/23 3:09 AM,18/Aug/20 4:39 AM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,,,,,,"Currently several opaque function pointers are used to decouple the multichannel.Registrar and the follower.Chain.

Convert opaque function pointers to well defined interfaces that are easy to follow and mock for tests.

The BlockPuller creation mechanisms should be converted to a factory struct that receives all the prerequisites except the config-block / join-block, and exposes a method that builds a new BlockPuller given a config block. This allows us to use the same mechanisms for on-boarding, until the join block, and for following past the join-block.

In the block puller, implement a mechanism that updates the block verification policy with every incoming config block. Implement a separate mechanism for updating the endpoints used by the block puller (possibly by creating a new instance). 

The follower's function pointer that is used to create a consensus.Chain is replaced by an interface that defines this method. This interface is implemented by the registrar and and is set into the new follower instance at construction time.

 ",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ev7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Metrics for channel participation relation and status,FAB-18087,45673,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,tock,tock,23/Jul/20 12:48 AM,11/Nov/20 10:35 PM,28/Oct/23 3:09 AM,10/Nov/20 2:00 AM,,,,,,,v2.3.0,,,,,,,,,0,ipm,,,,,"Created:
 * gauge for the node's relation (label for channel): none, consenter, follower, config-tracker
 * gauge for the node's status (label for channel): inactive, active, onboarding

Notes:
 * -gauge for the committed block number- (already tracked via existing metrics)",,tock,tsharris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx6d",,,,Unset,Unset,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,tsharris,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Nov/20 10:35 PM;tsharris;https://github.com/hyperledger/fabric/pull/2025;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTEv2 supports peer failover,FAB-18088,45684,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,24/Jul/20 12:00 AM,11/Jan/21 2:49 AM,28/Oct/23 3:09 AM,11/Jan/21 2:49 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,PTEv2 supports peer failover,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17973,,,No,,Unset,No,,,"1|i00uze:rzczqzxyzzx8zwz2jzr",,,,Unset,Unset,In Progress,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Start orderers with Raft WAL reset,FAB-18089,45685,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,24/Jul/20 4:33 AM,21/Apr/21 4:43 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-orderer,,,,0,ipm,operator,,,,"In some scenarios the Raft WAL data for the ordering service may need to be re-initialized:
 * The WAL data may have become corrupt.
 * In a disaster scenario you may need to restore ordering service from an existing block store that gets copied into ordering service node(s).

In order to re-initialize the Raft WAL, we need the last block in each channel to signal to the orderers that this is a WAL reset block. This could be implemented in various ways:

* We could append a new dummy block to every chain, which contains an empty meaningless transaction, and zero out the metadata in this block (CURRENT PREFERRED APPROACH)
* We could open the blockstore, and modify the last block in the chain to zero out the block metadata.  This would invalidate the block signature, so we would need to have access to the orderer's certificate/key to make this change.
* We could extend the metadata encoding for the field to allow additional unsigned data that the orderer would prefer, if it were present. Or, we could add a new metadata slot in the metadata slice, which would be for such overrides.  

In any case, when the orderer starts up, it will find no consensus metadata and conclude that we are on the migration path of switching consensus types, and will initialize the WAL.

All OSNs will need to be at exactly the same block height for this to work. In some disaster recover scenarios, this may imply copying block stores from one orderer to the others, or even copying the block stores from a trusted peer to all the orderers. In the latter case the blocks will have transaction validation statuses already written, and while not expected, this is not technically an issue since orderers will ignore the validation status metadata, and peers will also ignore it as they always perform full validation and overwrite the validation status metadata if it happens to already be there. Upon startup, orderer will automatically create its required ledger index directory from the ledger block store, if it is missing.

 ",,denyeart,nao,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17283,FAB-17520,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxqo1",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,nao,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Aug/20 3:43 AM;wlahti;I did a proof of concept for this to prove it works. I was able to delete the ledger blockstore and raft WAL/snapshot directories for all orderers, copy the ledger blockstore from a peer, and then provide a flag at orderer startup to have each orderer append a dummy block with empty consensus metadata and an empty transaction. The orderers rebuilt the WAL/snapshot directories and were fully functional, as hoped/expected. 

Returning this task to TODO until it is prioritized. I have some rough code that will require cleanup that can be used as a starting point for the production code change. The integration test code should be good to go.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Validations for State Based Endorsements,FAB-18090,45700,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,gauravgiri,gauravgiri,24/Jul/20 7:55 PM,11/Jan/21 3:35 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-ledger,,,,0,quality,,,,,"*Test Environment*: Fabric 1.4.x.

*Observation*: It is possible to set State Based Endorsements for invalid Key (assetId) OR invalid org MSPID policy.

*Description:* Setting the StateBased Endorsement , doesn’t validate or return error, but succeeds (for both state and private state API’s) with invalid key or policy based on invalid MSPID's. 

setStateValidationParameter(key: string, ep: Buffer)

setPrivateDataValidationParameter(collection: string, key: string, ep: Buffer)

 

Is this the expected behaviour? 

 ",,denyeart,gauravgiri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zyw2i",,,,Unset,Unset,,"For a network/channel with org membership / MSPID's: org1msp & org2msp, it is perfectly valid to execute below (org3msp is nonexistent MSPID in network):
`let ep = new KeyEndorsementPolicy();
ep.addOrgs(“MEMBER”, “org3msp”]);
 await ctx.stub.setStateValidationParameter(assetId, ep.getPolicy());`
Similarly, the key(assetId), can also be provided invalid which neither exists nor is created as part of current transaction.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,gauravgiri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/20 8:59 PM;denyeart;These validations _could_ be added on the peer side in the chaincode handler HandlePutStateMetadata(). However, the feature was designed generically so that the validation parameter could be anything, not just a MSPID policy, so it's not as simple as just adding the validations. We'll need to consider whether to extend the shim API to indicate that the validation parameter is based on MSPID policy, or perhaps give the shim access to things like channel members so that the shim could add such validations.

Since this would be new functionality, changing from Bug to Story.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTEv2 supports grpc timeout and request timeout,FAB-18091,45701,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,24/Jul/20 9:45 PM,11/Jan/21 2:49 AM,28/Oct/23 3:09 AM,11/Jan/21 2:49 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,PTEv2 sets grpc timeout and request timeout when connecting to gateway.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17973,,,No,,Unset,No,,,"1|i00uze:rzczqzxyzzx8zwz2jzw",,,,Unset,Unset,In Progress,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add example for individual Orderer value updates,FAB-18092,45702,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,tsharris,tsharris,24/Jul/20 11:18 PM,11/Aug/20 10:03 PM,28/Oct/23 3:09 AM,11/Aug/20 10:03 PM,,,,,,,,,,,,,,,,0,ipm,,,,,"Add an example to show migrating to etcdraft using the individual orderer update functions.

 ",,caod,rolivieri,tsharris,,,,,,,,,,,,,,,,,,,,,,,FAB-18099,FAB-18062,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17628,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfr",,,,Unset,Unset,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),caod,rolivieri,tsharris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/20 12:23 AM;tsharris;[https://github.com/hyperledger/fabric-config/pull/36];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integration test for RemoveChannel,FAB-18093,45703,45221,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,25/Jul/20 4:45 AM,18/Aug/20 4:31 AM,28/Oct/23 3:09 AM,18/Aug/20 4:31 AM,,,,,,,,,,,,,,,,0,,,,,,"Remove an OSN from the consenter set for the channel, then remove the channel. Ensure channel is still functional for the other OSNs. ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01exn:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Aug/20 10:03 PM;wlahti;[https://github.com/hyperledger/fabric/pull/1637];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Fabric CLI to latest SDK,FAB-18094,45704,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,25/Jul/20 4:56 AM,27/Jul/20 11:07 PM,28/Oct/23 3:09 AM,27/Jul/20 11:07 PM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01exv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
operator sends incorrect tStart to PTE,FAB-18095,45707,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,dongming,dongming,28/Jul/20 5:36 AM,11/Jan/21 2:49 AM,28/Oct/23 3:09 AM,11/Jan/21 2:49 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,"The tStart sent by operator to PTE is: 

2020-07-27 15:33:09.090907379 -0500 CDT m=+0.013819285

PTE expects the value is of epoch in ms, such as  1595881311850",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01eyj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
operator needs to provide both move and query args and fcn,FAB-18096,45708,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,dongming,dongming,28/Jul/20 5:43 AM,11/Jan/21 2:49 AM,28/Oct/23 3:09 AM,11/Jan/21 2:49 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,"n the case of invokeCheck is set, PTE needs to know the query fcn and args in order to perform the query validation.  However, operator only provide either move or query args and fcn based on the action of move or query.

Below is an example provided by operator:

{\{ ""logLevel"": ""ERROR"", ""chaincodeID"": ""mapcc"", ""invokeCheck"": ""TRUE"", ""transMode"": ""constant"", ""transType"": ""Invoke"", ""invokeType"": ""Move"", ""targetPeers"": ""OrgAnchor"", ""TLS"": ""clientauth"", ""nProcPerOrg"": ""2"", ""nRequest"": ""10"", ""runDur"": ""0"", ""channelOpt"": { ""name"": ""testorgschannel0"", ""orgName"": [""org1""] }, ""burstOpt"": {}, ""mixOpt"": {}, ""constantOpt"": \{ ""recHist"": ""HIST"", ""constFreq"": ""0"", ""devFreq"": ""0"" }, ""eventOpt"": \{ ""type"": ""FilteredBlock"", ""listener"": ""Block"", ""timeout"": ""240000"" }, ""discoveryOpt"": {}, ""ccType"": ""ccchecker"", ""ccOpt"": \{ ""keyIdx"": [1], ""keyPayLoad"": [2], ""keyStart"": ""0"", ""payLoadMin"": ""8"", ""payLoadMax"": ""8"" }, ""invoke"": \{ ""move"": { ""args"": [""getPut"", ""a1"", ""1""] }, ""query"": \{ ""args"": [""getPut"", ""a1"", ""1""] } }, ""ConnProfilePath"": ""./connection-profile"", ""timeoutOpt"": {}, ""failoverOpt"": {}, ""ordererOpt"": {}}

 

In this example, both invoke.move and invoke.query have the same args.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01eyr:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement a function in KVLedgerProvider for creating a new ledger from a snapshot,FAB-18097,45709,44706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,29/Jul/20 12:19 AM,31/Jul/20 11:51 PM,28/Oct/23 3:09 AM,31/Jul/20 11:51 PM,,,,,,,,,,,,,,,,0,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01eyz:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jul/20 12:26 AM;manish-sethi;https://github.com/hyperledger/fabric/pull/1651;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DevMode Documentation Update for 1.4,FAB-18098,45710,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dereckluo,dereckluo,dereckluo,29/Jul/20 4:29 AM,07/Oct/20 2:30 AM,28/Oct/23 3:09 AM,07/Oct/20 2:30 AM,,,,,,,v1.4.10,,,,,,,,,0,Documentation,ipm,,,,"The work flow described in docs for DevMode in 1.4 ([link|https://hyperledger-fabric.readthedocs.io/en/release-1.4/peer-chaincode-devmode.html?highlight=dev%20mode]) does not run smoothly. An update on the docs and workable steps is needed.

related Jira: https://jira.hyperledger.org/browse/FAB-15715",,dereckluo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18074,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfi",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dereckluo,,,,,,,,,,,,,,,,release-1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Aug/20 11:04 PM;dereckluo;[https://github.com/hyperledger/fabric/pull/1664];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Validate TLS intermediate certs against the TLS root certs,FAB-18099,45711,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,tsharris,tsharris,29/Jul/20 5:40 AM,02/Dec/20 6:30 AM,28/Oct/23 3:09 AM,02/Dec/20 6:30 AM,,,,,,,,,,,,,,,,0,ipm,,,,,"Created based on [this discussion in github|https://github.com/hyperledger/fabric-config/pull/35#discussion_r460927399].

The validateCACerts code [here|https://github.com/hyperledger/fabric-config/blob/a97807f0619130c8aa7fe1ce33b19109168ca55a/configtx/msp.go#L893-L905] should be refactored/reused to validate that the signature for each of the TLS intermediate CA certs has a valid signature from one of the TLS root CA certs.

Note: if you really feel like getting extra credit, you can see if we can incorporate the TODO to use cert.Verify() to provide a more complete verification but simply using tlsIntermediateCert.CheckSignatureFrom(tlsRootCert) is sufficient for now. ",,caod,rolivieri,tsharris,,,,,,,,,,,,,,,,,,,,,,,,FAB-18092,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17628,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxgk",,,,Unset,Unset,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),caod,rolivieri,tsharris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/20 6:30 AM;tsharris;https://github.com/hyperledger/fabric-config/pull/44;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode should be able to emit an event when it's invoked by other chaincode,FAB-18100,45716,,Story,Backlog,FAB,Fabric,software,denyeart,,,High,,,Diegoescalonaro,Diegoescalonaro,29/Jul/20 6:24 PM,29/Jul/20 6:28 PM,28/Oct/23 3:09 AM,,v2.0.0,v2.0.1,v2.1.0,,,,,,,,,fabric-common,fabric-peer,fabric-sdk-node,,5,,,,,,"The current behaviour regarding chaincode events is as follows:

""Only the chaincode invoked by the client can emit events""

So that means it's not possible to implement a proxy chaincode that invokes another chaincode (child chaincode) because all the events related to this last one will be lost.

This doesn't make sense and becomes a limitation. Events should be thrown in a basic delegate call implementation.

 ",,carlosalca94,Diegoescalonaro,longdoan7421,mtng,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jul/20 5:56 PM;Diegoescalonaro;chaincode_event.jpg;https://jira.hyperledger.org/secure/attachment/18501/chaincode_event.jpg",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ezv:",,,,No,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),carlosalca94,Diegoescalonaro,longdoan7421,mtng,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removing Orderer.FileLedger.Location from orderer config breaks users with existing orderer.yaml files,FAB-18101,45717,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,29/Jul/20 9:42 PM,30/Jul/20 7:43 PM,28/Oct/23 3:09 AM,30/Jul/20 7:43 PM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"As [~btl5037] recently pointed out in the PR for FAB-18066:
""Because our existing configs had the Prefix property in them, the strong marshaling of the Orderer config prevents the orderer.yaml from being marshaled while containing this key. The fix was to mount all of our volumes in kubernetes to secondary pods and remove the key. This is kind of breaking backwards compatibility, and would be a pain for anyone with a large deployment.""

The setting should be left in the orderer config struct to avoid this issue. ",,btl5037,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18066,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohf9",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jul/20 9:55 PM;btl5037;Out of curiosity, as I admit, I didn't really look at the code path: What happens if someone was actually using the prefix property, and moves to 2.3 where it would be parsed but no longer used?;;;","29/Jul/20 9:59 PM;wlahti;PR: https://github.com/hyperledger/fabric/pull/1654;;;","29/Jul/20 10:02 PM;wlahti;Here's where it was used: https://github.com/wlahti/fabric/commit/cda4be64413b0c2844e949cf69683f6f2a0d404d#diff-7ce851405f99f8bc66233ebdaf47b1b0L23;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Run dead link checker against Fabric docs,FAB-18102,45725,,Bug,In Progress,FAB,Fabric,software,denyeart,,,Medium,,btl5037,denyeart,denyeart,30/Jul/20 7:59 PM,26/Feb/21 11:17 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-docs,,,,0,,,,,,"Fix dead links in documentation reported at:

[https://lists.hyperledger.org/g/fabric/message/8758]

 

Also, investigate job for checking dead links automatically or at least regularly.

 ",,cmgabriel,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17945,,,,,,,,,,,,,"31/Jul/20 5:25 AM;cmgabriel;FabricBrokenLinks_07-30-2020.xlsx;https://jira.hyperledger.org/secure/attachment/18504/FabricBrokenLinks_07-30-2020.xlsx",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhk:i",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),cmgabriel,denyeart,pandrejko,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jul/20 5:19 AM;cmgabriel;The first link mentioned in [https://lists.hyperledger.org/g/fabric/message/8758] is a link from the v1.3 version of the docs.  When sanity checking broken links, 7 links that are broken are related to versions 1.3 and earlier.  On the readthedocs.io site, we should consider removing the links in the lower left nav that link to these earlier versions if 1.4 is the first LTS.  

 ;;;","31/Jul/20 5:28 AM;cmgabriel;I've attached a spreadsheet of the broken links.  The doc group can start fixing all related to Fabric 1.4 and later. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
After following every step still getting this error,FAB-18103,45726,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Test Error,,riteek21,riteek21,30/Jul/20 10:13 PM,03/Aug/20 8:25 PM,28/Oct/23 3:09 AM,03/Aug/20 8:25 PM,,,,,,,,,,,,,,,,0,,,,,,"riteek@riteek-VirtualBox:~/fabric-samples/test-network$ peer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name marbles --version 1.0 --sequence 1 --signature-policy ""OR('Org1MSP.member','Org2MSP.member')"" --init-required --tls --cafile $ORDERER_CA --peerAddresses localhost:7051 --tlsRootCertFiles $ORG1_CA --peerAddresses localhost:9051 --tlsRootCertFiles $ORG2_CA
Error: proposal failed with status: 500 - failed to invoke backing implementation of 'CommitChaincodeDefinition': chaincode definition not agreed to by this org (Org1MSP)
",,denyeart,riteek21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01f1v:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,riteek21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Aug/20 8:25 PM;denyeart;You need to perform the 'approveformyorg' step for Org1.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve robustness of cluster.BlockPuller,FAB-18104,45727,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,tock,tock,30/Jul/20 10:27 PM,30/Jul/20 10:41 PM,28/Oct/23 3:09 AM,,,,,,,,v2.x,,,,,fabric-orderer,,,,0,,,,,,"The BlockPuller from the cluster package fetches a batch of blocks from another orderer, and then uses the following function to verify the batch.

[https://github.com/hyperledger/fabric/blob/84396aaa4164a0d992b3b3e61e55b6ad7a9878c8/orderer/common/cluster/util.go#L202]

However, that function does not verify all the signatures of the blocks, only config blocks and the last block.

In addition, it verifies the hash chain only within the batch, disregarding the block just previous to the batch. 

[https://github.com/hyperledger/fabric/blob/84396aaa4164a0d992b3b3e61e55b6ad7a9878c8/orderer/common/cluster/util.go#L210]

As a result, code that uses the BlockPuller is forced to verify the hash chain itself, and worse, there is a danger of accepting blocks with corrupt signatures.

 

In this task the block verification BlockPuller should be augmented and made to resemble what the peer does: check every signature and verify the hash chain completely, skipping no blocks.

 

When this task is done, it will be possible to remove the redundant hash chain checks from code that uses the BlockPuller.",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17914,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i01f23:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add protobuf msgs and rpc service for snapshot (fabric-protos)	,FAB-18105,45728,44707,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,wenjian,wenjian,wenjian,30/Jul/20 10:43 PM,15/Aug/20 12:34 AM,28/Oct/23 3:09 AM,05/Aug/20 9:21 PM,,,,,,,,,,,,,,,,0,,,,,,,,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17690,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01f2b:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,,,,,,,dependabot/bundler/docs/nokogiri-1.14.3,0.2.x,dependabot/bundler/docs/activesupport-6.0.6.1,dependabot/go_modules/bindings/go-apiv1/golang.org/x/text-0.3.8,0.1.x,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/text-0.3.8,dependabot/go_modules/bindings/go-apiv1/golang.org/x/net-0.7.0,dependabot/bundler/docs/commonmarker-0.23.9,dependabot/go_modules/bindings/go-apiv2/golang.org/x/net-0.7.0,release-2.3,release-2.2,dependabot/go_modules/bindings/go-apiv2/golang.org/x/text-0.3.8,release-2.5,release-2.4,github-settings,dependabot/go_modules/bindings/go-apiv2/golang.org/x/sys-0.1.0,dependabot/go_modules/golang.org/x/sys-0.1.0,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,dependabot/go_modules/bindings/go-apiv1/golang.org/x/sys-0.1.0,,,,,,,,,,,,,,,,,,,,,,,true,"03/Aug/20 10:24 PM;wenjian;PRs: 

[https://github.com/hyperledger/fabric-protos/pull/40]

[https://github.com/hyperledger/fabric/pull/1680];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer - chain life cycle on fatal errors (instead of orderer panic),FAB-18106,45729,,Story,Backlog,FAB,Fabric,software,denyeart,,,Low,,,tock,tock,30/Jul/20 10:59 PM,17/Apr/21 4:06 AM,28/Oct/23 3:09 AM,,v2.x,,,,,,,,,,,fabric-orderer,,,,0,ipm,,,,,"Currently, when a chain (follower/etcdraft) encounters an error  it cannot recover from, it panics, bringing the entire server down. This may cause other channels, which may be completely fine, to stop working, or to have reduced fault tolerance. 

With the channel participation API, channels are effectively independent, yet multi-tenant on the same orderer. Therefore we want to move to a model in which when a chain (follower/etcdraft) encounters an error it cannot recover from, it will report it in the log, and exit leaving the chain with status = types.StatusError. 

The new ""List"" API may be used by the admin to discover such events, and allow him to possibly handle the issue without interrupting other channels.

 

One may also consider to include the number of channels with status = types.StatusError in the metrics of the Registrar. This will allow the metrics reporting system to detect such failures and alert an operator.

 ",,tock,tsharris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00wur:0idqxqo9",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,tsharris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/20 10:16 PM;tsharris;[~tock] -Is this a duplicate of- -https://jira.hyperledger.org/browse/FAB-18315?- Actually it only covers the metrics. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTEv2 supports transientMap,FAB-18107,45733,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,31/Jul/20 4:17 AM,11/Jan/21 2:49 AM,28/Oct/23 3:09 AM,11/Jan/21 2:49 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,"PTEv2 supports transientMap.  The format of transientMap will be similar to the one listed below:

{

    ""marble"": {

        ""name"":""marble"",

        ""color"":""blue"",

        ""size"":35,

        ""owner"":""tom"",

        ""price"":99

    }

}

PTEv2 will need to re-assign certain keys in the Map in order to have unique asset for each transaction.

 ",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17973,,,No,,Unset,No,,,"1|i00uze:rzczqzxyzzx8zwz2jzy",,,,Unset,Unset,In Progress,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve follower.Chain flow control,FAB-18108,45736,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,03/Aug/20 5:59 PM,21/Oct/20 3:19 PM,28/Oct/23 3:09 AM,21/Oct/20 3:19 PM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,ipm,,,,,"Address remaining review comments [from this PR|[https://github.com/hyperledger/fabric/pull/1624]], especially those around the consolidation of the pullUntilJoin and pullAfterJoin methods. ",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprz",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
How to use peer chaincode invoke to specify which contract in the chaincode,FAB-18109,45742,,Documentation,In CR Review,FAB,Fabric,software,denyeart,,,Medium,,pandrejko,sebastian.t.f,sebastian.t.f,03/Aug/20 9:38 PM,19/Aug/20 4:51 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"If multiple smart contracts are defined in the same chaincode, how can I use the `{{peer chaincode invoke}}` command to specify which contract we want to invoke from the chaincode?

This is a pretty confusing thing for many. This might be easy while using the Node SDK for the client applications to select a specific contract inside a chaincode while using the getContract() API.
 
But the docs don't specify much about how to do the same with the `{{peer chaincode invoke}}` command
 
Some googling does bring up something about using namespaces like {{AssetContract:MyTransaction}}, but isn't clear.
 
Clarifying this would be really helpful for many and it needs to be added in to the docs.",,lesleyannj,pandrejko,sebastian.t.f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01f4z:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,pandrejko,sebastian.t.f,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Aug/20 1:43 AM;sebastian.t.f;[~jrasm91]'s response on the Rocket Chat: [https://chat.hyperledger.org/channel/fabric-chaincode-dev?msg=o3io7tQoWtmGJfopN]

{quote}_If you are using the contract-api ( [https://www.npmjs.com/package/fabric-contract-api] ) the name you pass to `super(""MyContract"")` can be used as a prefix._
{code:sh}
peer chaincode invoke -C $CHANNEL_NAME -n $CHAINCODE_NAME -c '{ ""Args"": [""MyContract:methodName"", ""{}""] }'

peer chaincode invoke -C $CHANNEL_NAME -n $CHAINCODE_NAME -c '{ ""Args"": [""MyOtherContract:methodName"", ""{}""] }'
{code}
{quote}
 ;;;","13/Aug/20 12:49 AM;lesleyannj;[~pandrejko] following up with your request for how to specify which contract to invoke when chaincode contains multiple contracts using the Node SDK.

Its just a call to network.getContract() 
- see docs  https://hyperledger.github.io/fabric-sdk-node/release-2.2/module-fabric-network.Network.html#getContract

The (optional) name parameter is the contract name where the chaincode contains multiple contracts.

e.g.  const contract = await network.getContract('papercontract');

Here is some relevant doc example : https://hyperledger-fabric.readthedocs.io/en/latest/developapps/application.html#construct-request
;;;","14/Aug/20 2:04 AM;pandrejko;Places to update:

Peer chaincode invoke example: [https://hyperledger-fabric.readthedocs.io/en/latest/commands/peerchaincode.html#peer-chaincode-invoke-example|https://hyperledger-fabric.readthedocs.io/en/latest/commands/peerchaincode.html#peer-chaincode-invoke]

 

Writing your first application tutorial (add a tip when pkg includes > 1 smart contract): [https://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html#third-the-sample-application-prepares-a-connection-to-the-channel-and-smart-contract]

 
Content is already addressed in:
Developing Applications construct request (add a tip when pkg includes > 1 smart contract): [https://hyperledger-fabric.readthedocs.io/en/latest/developapps/application.html#construct-request]

 ;;;","14/Aug/20 3:51 AM;pandrejko;PR: https://github.com/hyperledger/fabric/pull/1722;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Install of chaincode fails when executing ./network.sh deployCC,FAB-18110,45743,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,hsilva,hsilva,03/Aug/20 11:39 PM,15/Feb/21 4:35 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,1,,,,,,"I was following this guide: [https://hyperledger-fabric.readthedocs.io/en/release-2.0/test_network.html] and everythign was working ultil I tried to execute `./network.sh deployCC` 

I tried finding a solution and ran into this other issue which is closed so I assume it's fixed and my problem is different. Issue
{code:java}
Installing chaincode on peer0.org1...
Using organization 1
++ peer lifecycle chaincode install basic.tar.gz
++ res=1
++ set +x
Error: chaincode install failed with status: 500 - failed to invoke backing implementation of 'InstallChaincode': could not build chaincode: docker build failed: docker image build failed: docker build failed: Error returned from build: 1 ""go: inconsistent vendoring in /chaincode/input/src:
    github.com/golang/protobuf@v1.3.2: is explicitly required in go.mod, but not marked as explicit in vendor/modules.txt
    github.com/hyperledger/fabric-chaincode-go@v0.0.0-20200424173110-d7076418f212: is explicitly required in go.mod, but not marked as explicit in vendor/modules.txt
    github.com/hyperledger/fabric-contract-api-go@v1.1.0: is explicitly required in go.mod, but not marked as explicit in vendor/modules.txt 
    github.com/hyperledger/fabric-protos-go@v0.0.0-20200424173316-dd554ba3746e: is explicitly required in go.mod, but not marked as explicit in vendor/modules.txt 
    github.com/stretchr/testify@v1.5.1: is explicitly required in go.mod, but not marked as explicit in vendor/modules.txt

run 'go mod vendor' to sync, or use -mod=mod or -mod=readonly to ignore the vendor directory""

!!!!!!!!!!!!!!! Chaincode installation on peer0.org1 has failed !!!!!!!!!!!!!!!!

ERROR !!! Deploying chaincode failed{code}",,conanoc,frank0817pp,hsilva,k.s.558,mambo,shahabsyeds,zuguang,,,,,,,,,,,,,,,,,,FAB-17725,,,,FAB-18134,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01f57:",,,,Unset,Unset,,Create a fresh ubuntu 20.04 VM and follow these docs: https://hyperledger-fabric.readthedocs.io/en/release-2.0/test_network.html,,Unset,,,,,,Unset,,Unset,,(Please add usage information),conanoc,frank0817pp,hsilva,k.s.558,mambo,shahabsyeds,zuguang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/20 8:16 AM;mambo;Hi Hugo Silva,

Have you by any chance got a work around on this? I have just experienced the same challenge. Seems to be the ""go: inconsistent vendoring in /chaincode/input/src:"";;;","18/Sep/20 11:38 PM;zuguang;Hi Hugo,

When running ./network.sh deployCC, I have the same question as you. And I have spent much time solving  it. you can update go 1.15. when running in go 1.13, I failed. However I run in go 1.15 successfully.;;;","30/Dec/20 12:57 AM;k.s.558;Hi Hugo and 一明 李,

were you able to solve the problem?

Am also facing the same problem, so would be nice if you could share your solution.;;;","15/Feb/21 4:35 PM;conanoc;Local go version should be higher than v1.14

Peer node v2.x uses go v1.14 which is not compatible with the vendor/modules.txt generated by go v1.13 or lower.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DevMode Documentation Update for new lifecycle,FAB-18111,45744,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dereckluo,dereckluo,dereckluo,04/Aug/20 2:06 AM,07/Oct/20 1:52 AM,28/Oct/23 3:09 AM,07/Oct/20 1:52 AM,,,,,,,v2.2.1,v2.3.0,,,,,,,,0,documentation,ipm,,,,"A new workflow is required for dev mode to work with new lifecycle. Therefore, a new documentation that describes the steps for dev mode with new lifecycle is needed.

 

related jira: https://jira.hyperledger.org/browse/FAB-18074 ",,dereckluo,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18074,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohf4",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dereckluo,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Aug/20 2:40 AM;wlahti;[https://github.com/hyperledger/fabric/pull/1704];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove TLSRootCAs from warning log,FAB-18112,45745,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,04/Aug/20 8:26 AM,05/Aug/20 1:49 AM,28/Oct/23 3:09 AM,05/Aug/20 1:49 AM,,,,,,,,,,,,,,,,0,,,,,,"When it's warn level, no need to output detailed TLSRootCAs content.",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01f5f:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),baohua,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Aug/20 9:12 AM;baohua;[https://github.com/hyperledger/fabric/pull/1677];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rebuild ledger state databases in parallel,FAB-18113,45747,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,05/Aug/20 6:56 AM,05/Aug/20 7:47 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-ledger,,,,0,,,,,,"When state database is dropped, peer rebuilds state database upon the next start.

If there are multiple channels, the channel ledgers are opened and their respective state databases are rebuilt one after another.

From a performance perspective, it would be faster to open all the channel ledgers in parallel so that their state databases could be rebuilt in parallel.

Here are the log statements for state db rebuild showing the serial execution...

 
{code:java}
2020-08-04 17:46:55.162 EDT [ledgermgmt] OpenLedger -> INFO 016 Opening ledger with id = mychannel
2020-08-04 17:46:55.193 EDT [kvledger] recommitLostBlocks -> INFO 017 Recommitting lost blocks - firstBlockNum=0, lastBlockNum=21
2020-08-04 17:46:55.194 EDT [lockbasedtxmgr] CommitLostBlock -> INFO 018 Recommitting block [0] to state database
2020-08-04 17:46:55.641 EDT [kvledger] recommitLostBlocks -> INFO 01d Recommitted lost blocks - firstBlockNum=0, lastBlockNum=21
2020-08-04 17:46:55.651 EDT [ledgermgmt] OpenLedger -> INFO 01e Opened ledger with id = mychannel


2020-08-04 17:46:55.654 EDT [ledgermgmt] OpenLedger -> INFO 025 Opening ledger with id = mychannel2
2020-08-04 17:46:55.665 EDT [kvledger] recommitLostBlocks -> INFO 026 Recommitting lost blocks - firstBlockNum=0, lastBlockNum=0
2020-08-04 17:46:55.665 EDT [lockbasedtxmgr] CommitLostBlock -> INFO 027 Recommitting block [0] to state database
2020-08-04 17:46:55.678 EDT [kvledger] recommitLostBlocks -> INFO 028 Recommitted lost blocks - firstBlockNum=0, lastBlockNum=0
2020-08-04 17:46:55.689 EDT [ledgermgmt] OpenLedger -> INFO 029 Opened ledger with id = mychannel2
{code}
 ",,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01f5v:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Aug/20 7:47 AM;manish-sethi;{quote}From a performance perspective, it would be faster to open all the channel ledgers in parallel so that their state databases could be rebuilt in parallel
{quote} 
The rebuild is highly I/O intensive so it's not straightforward to conclude that doing this in parallel will result in a performance gain. So, this demands for an experiment to evaluate.

 Some additional points that we should consider:

 - We need to figure out that in how many situations only statedb rebuild had been helpful. Data format change is one (as we needed in upgrade from 1.4 to 2.0) but other than that, typically, unknown bugs in validation and commit path requires effectively rejoining/resetting the channels.

 - In addition, going forward with the snapshot feature, we would allow deleting the data for a channel so problems with one channel would not need dropping the statedb.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bootstrap.sh does not download binaries.,FAB-18114,45748,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,Rooney,Rooney,05/Aug/20 11:31 AM,05/Aug/20 11:31 AM,28/Oct/23 3:09 AM,,v1.4.6,v1.4.7,v1.4.8,,,,,,,,,,,,,0,,,,,,"'nexus.hyperledger.org/...' doesn't have binaries.

 ",,Rooney,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01f63:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Rooney,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve Fabric Samples,FAB-18115,45755,,Epic,In Progress,FAB,Fabric,software,denyeart,,,High,,,denyeart,denyeart,05/Aug/20 8:49 PM,20/Jan/21 11:06 AM,28/Oct/23 3:09 AM,,,,,,,,v2.x,,,,,,,,,0,,,,,,"Improve Fabric samples, including a new samples series based on asset transfer scenario to teach core Fabric concepts.

For the latest objectives and progress, see the google slides:

https://drive.google.com/file/d/1UxK2HH8SrQyZU58MnuDb9hr1nmekst8b/view?usp=sharing",,denyeart,MichaelWang,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13844,,,,,,,,,,,,,"20/Jan/21 11:01 AM;MichaelWang;image-2021-01-20-10-01-48-335.png;https://jira.hyperledger.org/secure/attachment/18884/image-2021-01-20-10-01-48-335.png",,,,,,,,,,,,,,,,,,,,,"Asset transfer and token sample chaincode, application, and tutorials done.",https://drive.google.com/file/d/1UxK2HH8SrQyZU58MnuDb9hr1nmekst8b/view?usp=sharing,Unset,Unset,Unset,ghx-label-1,,Improve Fabric Samples,To Do,No,,Unset,No,,,"1|i01f7f:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,MichaelWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jan/21 11:06 AM;MichaelWang;As I found this issue has been completed that you can find in the fabric-samples repos. I have the screen shot below. Please confirm this so that we can close this. [~denyeart]
!image-2021-01-20-10-01-48-335.png!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance/Add commands to accomodate channels created from snapshot,FAB-18116,45756,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,manish-sethi,manish-sethi,05/Aug/20 9:43 PM,29/Oct/20 1:58 PM,28/Oct/23 3:09 AM,29/Oct/20 1:58 PM,,,,,,,v2.3.0,,,,,,,,,0,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-106,,,No,,Unset,No,,,"1|i01f7n:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement snapshot grpc service,FAB-18117,45759,44707,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,wenjian,wenjian,06/Aug/20 3:45 AM,17/Sep/20 11:26 PM,28/Oct/23 3:09 AM,17/Sep/20 11:26 PM,,,,,,,,,,,,,,,,0,,,,,,"# add grpc services
 # add local org admin security check in snapshot grpc APIs",,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01f8b:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,,,,,,,dependabot/bundler/docs/nokogiri-1.14.3,0.2.x,dependabot/bundler/docs/activesupport-6.0.6.1,dependabot/go_modules/bindings/go-apiv1/golang.org/x/text-0.3.8,0.1.x,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/text-0.3.8,dependabot/go_modules/bindings/go-apiv1/golang.org/x/net-0.7.0,dependabot/bundler/docs/commonmarker-0.23.9,dependabot/go_modules/bindings/go-apiv2/golang.org/x/net-0.7.0,release-2.3,release-2.2,dependabot/go_modules/bindings/go-apiv2/golang.org/x/text-0.3.8,release-2.5,release-2.4,github-settings,dependabot/go_modules/bindings/go-apiv2/golang.org/x/sys-0.1.0,dependabot/go_modules/golang.org/x/sys-0.1.0,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,dependabot/go_modules/bindings/go-apiv1/golang.org/x/sys-0.1.0,,,,,,,,,,,,,,,,,,,,,,,true,"19/Aug/20 10:41 AM;wenjian;PRs: 
 # add grpc service (no policy) [https://github.com/hyperledger/fabric/pull/1683]
 # pull in snapshot.proto changes [https://github.com/hyperledger/fabric/pull/1782]
 # update snapshot CLI cmds to add SignatureHeader [https://github.com/hyperledger/fabric/pull/1790]
 # add policy resources and update snapshot service to call ACLProvider.CheckACL [https://github.com/hyperledger/fabric/pull/1791];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing dbname assign value in couchdb redolog struct,FAB-18118,45760,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,grapebaba,grapebaba,06/Aug/20 12:29 PM,17/Nov/20 12:19 AM,28/Oct/23 3:09 AM,17/Nov/20 12:19 AM,v2.0.0,v2.0.1,v2.1.0,,,,v2.x,,,,,fabric-ledger,,,,0,,,,,,"{code:java}
func (p *redoLoggerProvider) newRedoLogger(dbName string) *redoLogger {
   return &redoLogger{
      dbHandle: p.leveldbProvider.GetDBHandle(dbName),
   }
}
{code}",,grapebaba,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01f8j:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),grapebaba,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/20 12:19 AM;manish-sethi;https://github.com/hyperledger/fabric/pull/1686;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
operator supports PTEv2,FAB-18119,45761,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,07/Aug/20 12:09 AM,11/Jan/21 2:49 AM,28/Oct/23 3:09 AM,11/Jan/21 2:49 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,PTEv2 (FAB-17973) supports invoke and query using high level SDK and will be available soon.  Operator will need to use PTEv2 rather PTE for invoke and query.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00uze:rzczqzxyzzx8zwz2jzz",,,,Unset,Unset,In Progress,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DevMode - Add integration test for DevMode using new lifecycle,FAB-18120,45762,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dereckluo,dereckluo,dereckluo,07/Aug/20 11:49 AM,09/Sep/20 10:31 PM,28/Oct/23 3:09 AM,29/Aug/20 12:42 AM,,,,,,,v2.2.1,v2.3.0,,,,,,,,0,ipm,operator,,,,"Currently we don't have any integration or functional tests coverage for dev mode using new lifecycle.
In order to support the continued maintenance of devmode, and integration test should be added to verify the functionality remains working

Acceptance:
Have an integration test or functional test that demonstrate the following.
Client should be able to start the chaincode by itself, have it connect to the peer, and have the peer route invocations to it.
Client should be able to kill that process, swap in another, and have it work.",,dereckluo,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18169,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohd",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dereckluo,wlahti,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Aug/20 11:55 AM;dereckluo;[https://github.com/hyperledger/fabric/pull/1688]

 ;;;","28/Aug/20 2:31 AM;wlahti;Merged into master. Determining if we should backport this to release-2.2 before closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Optimize BlockPuller UpdateEndpoint,FAB-18121,45764,,Task,To Do,FAB,Fabric,software,denyeart,,,Lowest,,,tock,tock,09/Aug/20 5:06 PM,17/Apr/21 4:09 AM,28/Oct/23 3:09 AM,,,,,,,,v2.x,,,,,fabric-orderer,,,,0,ipm,,,,,Currently the `BlockPuller.UpdateEndpoints()` disconnects from the currently connected endpoint when the endpoints are updated. This is safe but not optimal. An optimization would be to disconnect only if the currently connected endpoint has changes in its TLSRootCAs.,,jyellick,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00wur:0idqxqp",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Apr/21 4:09 AM;jyellick;We don't generally see networks that reconfigure their endpoints frequently, this would be nice, but not by any means critical.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BlockPuller goes into an endless loop without a way to stop,FAB-18122,45765,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,09/Aug/20 8:31 PM,10/Aug/20 11:18 PM,28/Oct/23 3:09 AM,10/Aug/20 11:18 PM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,,,,,,"If the `cluster.BlockPuller` receives a set of endpoint to which it cannot connect (ever), and then `PullBlock()` is called, the calling thread will go into an endless loop. The `tryFetchBlock` will try to connect to some endpoint and will fail every time, sleep, and try again without limit.

[see here |https://github.com/hyperledger/fabric/blob/cb1a062f9a37310c967b70528c718d25c6b95881/orderer/common/cluster/deliver.go#L117] for the loop. 

This prevents the follower chain from implementing an exponential backoff and listening to the stop signal. This means that this chain cannot be `Halt()` in order to remove the follower.Chain when necessary, or stop it in tests.

It is better to return nil after a present number of retries rather than get stuck in that loop for ever.

 

[https://dev.azure.com/Hyperledger/0227bd2c-c4f6-478f-be00-ee519f115180/_apis/build/builds/19160/logs/66]

 

 ",,tock,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i01f97:",,,,Unset,Unset,,create a block puller with a set of endpoints that the puller connot connect to. Call PullBlock().,,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,yacovm,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Aug/20 7:29 AM;yacovm;Just want to say that this is by design, because the block puller was supposed to be constructed from the latest config block when onboarding, so it shouldn't be possible that the endpoints would be wrong.

 

For Raft, if a node drifted too far away from a cluster you could have removed it and then force it to replicate blocks again;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Augment BlockPuller with a method to update the endpoints,FAB-18123,45766,40570,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,10/Aug/20 2:47 AM,10/Aug/20 11:17 PM,28/Oct/23 3:09 AM,10/Aug/20 11:17 PM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,,,,,,"As the follower pulls blocks beyond the join-block, it needs to continuously apply the channel config from each config block to the BlockPuller. One aspect of the channel config are the endpoints.

It is possible to simply recreate the block puller on every config block. However this is inefficient because it drops the internal buffer that is full of fetched and validated blocks. In order to avoid this we add a method that updates the endpoints, disconnects from  the current connection, but does not drop the internal buffer. 

The next invocations of PullBlock will first re-connect, and then pop blocks from the buffer until it is empty.

 ",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01f9f:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error packaging chaincode on peer for Fabric on ARM64 architecture,FAB-18124,45772,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid: Not Supported,,chinyati,chinyati,10/Aug/20 7:15 PM,12/Aug/20 1:10 AM,28/Oct/23 3:09 AM,11/Aug/20 1:11 PM,v2.0.0,,,,,,,,,,,,,,,1,arm64,pi,,,,"I am deploying Hyperledger Fabric on Raspberry Pi (ARM64) architecture running Raspbian OS the 64 bit version. Have managed to create all the needed images as well as run successfully the test-network as indicated in the documentation.

When i then try to run the fabcar example using the /startFabric script I keep receiving this error. Can someone assist me in dealing with this.
{code:java}
===================== Chaincode is packaged on peer0.org1 =====================
Installing chaincode on peer0.org1...
Using organization 1
++ peer lifecycle chaincode install fabcar.tar.gz
++ res=1
++ set +x
Error: failed to endorse chaincode install: rpc error: code = Unavailable desc = transport is closing
!!!!!!!!!!!!!!! Chaincode installation on peer0.org1 has failed !!!!!!!!!!!!!!!!
ERROR !!! Deploying chaincode failed
{code}",,btl5037,chinyati,RafaelAPB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fab:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,chinyati,RafaelAPB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Aug/20 12:25 AM;RafaelAPB;I am also having this problem. I think it might be associated with proxies configuration;;;","11/Aug/20 3:59 AM;chinyati;Have you had any work around for it?;;;","11/Aug/20 1:11 PM;btl5037;Unfortunately we don't support ARM. Questions like these should be directed to Rocket Chat/Stack Overflow/Mailing list.

That being said, providing the logs of peer0.org1 (in Debug mode) would go a long way to helping solve this problem. The snippet you've given provides no concrete information to go on.;;;","12/Aug/20 1:04 AM;chinyati;Hi [~btl5037] thanks for the response.

How do I go into debug mode so as to generate these logs?;;;","12/Aug/20 1:10 AM;btl5037;edit the docker-compose files in the docker directory to include a new environment variable (or update it if it already exists) on the peer

 

FABRIC_LOGGING_SPEC=debug;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Abandon the removeStorage flag,FAB-18125,45774,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,tock,tock,10/Aug/20 9:15 PM,01/Sep/20 11:19 PM,28/Oct/23 3:09 AM,01/Sep/20 10:08 PM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"Currently, this API has a boolean parameter ""removeStorage"":
 If it is true, the ledger storage is deleted.
 If it is false, the ledger storage is moved to an archival location, to be permanently deleted by the system admin.

The removeStorage flag is to be removed. We always delete the ledger storage.

Remove it from the Registrar.RemoveChannel(...)",,tock,tsharris,,,,,,,,,,,,,,,,,,,,,,,FAB-15712,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfp",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,tsharris,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Aug/20 11:19 PM;tsharris;[https://github.com/hyperledger/fabric/pull/1780];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integration test join channel with join-block as member,FAB-18126,45775,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,tock,tock,10/Aug/20 9:28 PM,10/Sep/20 9:02 PM,28/Oct/23 3:09 AM,10/Sep/20 9:02 PM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,ipm,,,,,"Join application channel with join-block as member.

Define a 3 node raft cluster without a system channel. Start only 2 of these nodes. Submit a few transactions for the  ledger height to be >>1. Submit a config TX (change something other than consensus related stuff) so that the last config will be number > 0.

Start the 3rd node w/o channels. Get the last config block  from one of the 2 active cluster nodes and join the channel on the 3rd node.

Check that the 3rd node pulls all the blocks.

Check the cluster-relation (=member) and status for the transition (onboarding->active).

Submit some transactions to the 3rd node to verify it mutated into an etcdraft.Chain.",,tock,tsharris,,,,,,,,,,,,,,,,,,,,,,,FAB-17966,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfpi",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,tsharris,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Sep/20 5:37 AM;tsharris;https://github.com/hyperledger/fabric/pull/1843;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Integration tests join channel with join-block as follower, then add to consenters set",FAB-18127,45776,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,tock,tock,10/Aug/20 9:44 PM,02/Oct/20 9:50 PM,28/Oct/23 3:09 AM,02/Oct/20 9:50 PM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"Join application channel with join-block as follower.

Define a 3 node raft cluster without a system channel. Join 2 of these to the channel. Submit a few transactions for the  ledger height to be >>1. Submit a config TX (change something other than consensus related stuff) so that the last config will be number > 0.

Start the 3rd node w/o channels. Get the last config block  from one of the 2 active cluster nodes and join the channel on the 3rd node.

Check that the 3rd node pulls all the blocks.

Check the cluster-relation (=follower) and status for the transition (onboarding->active).

Submit some transactions to verify the 3rd pulls blocks.

Submit a config TX that adds the 3rd node to the consenters set.

Submit a few TXs to the 4th to verify it mutated into an etcdraft.Chain. ",,tock,tsharris,wlahti,,,,,,,,,,,,,,,,,,,,,,FAB-17966,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprri",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,tsharris,wlahti,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Aug/20 4:39 AM;wlahti;This scenario is nearly identical to https://jira.hyperledger.org/browse/FAB-18031 with the only difference being that we join the 3rd node with an updated config block and not the genesis block for the channel.;;;","09/Sep/20 9:30 PM;tsharris;https://github.com/hyperledger/fabric/pull/1861;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test the ""negatives"" of join",FAB-18128,45779,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,tock,tock,10/Aug/20 10:38 PM,29/Sep/20 1:59 AM,28/Oct/23 3:09 AM,29/Sep/20 1:59 AM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"Cannot join with a bad block

Cannot join an existing channel

Cannot join with a system channel when app channels exist",,tock,wlahti,,,,,,,,,,,,,,,,,,,,,,,FAB-17966,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx6",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Sep/20 7:35 AM;wlahti;https://github.com/hyperledger/fabric/pull/1917;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test etcdraft.Chain eviction mutates to follower,FAB-18129,45780,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,tock,tock,10/Aug/20 10:42 PM,13/Oct/20 3:57 PM,28/Oct/23 3:09 AM,13/Oct/20 3:57 PM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"Start a 4 node raft cluster

Evict one of the node - i.e. configure to remove 4th node from consenters set

Check 4th node turns into a follower

push a few TXs, check 4th node pulls them",,tock,wlahti,,,,,,,,,,,,,,,,,,,,,,,FAB-17966,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx6i",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Oct/20 12:13 AM;wlahti;https://github.com/hyperledger/fabric/pull/1961;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test create system channel with genesis block on empty network, continue to create channels the old way.",FAB-18130,45781,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,tock,tock,10/Aug/20 10:48 PM,28/Oct/20 2:44 AM,28/Oct/23 3:09 AM,28/Oct/20 2:44 AM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,," # Creating the system channel with a genesis block, so no onboarding is needed.

 * Define a 3 node raft network. Generate the genesis block of the system channel.
 * Start 3 empty OSNs.
 * Join 3 OSNs with a genesis block. 
 * Check that the servers have a state that signals restart is needed (List API), and that they do not accept TXs on system channel, nor API Join commands
 * Restart said servers
 * create a channel the ""old"" way
 * verify correct behavior by transacting on all channels.


 

 ",,tock,tsharris,,,,,,,,,,,,,,,,,,,,,,,FAB-17966,FAB-18273,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx7",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,tsharris,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Oct/20 9:29 PM;tsharris;https://github.com/hyperledger/fabric/pull/2014;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test removal of system channel on a network with channels, continue to manage with channel participation API",FAB-18131,45782,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,tock,tock,10/Aug/20 10:50 PM,14/Sep/20 10:22 PM,28/Oct/23 3:09 AM,14/Sep/20 10:22 PM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"Start a raft network with a system channel and some app channels.

Apply the procedure to remove the system channel.

Test channel participation api works - join a channel, remove a channel.",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17965,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfor",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove ledger resources asynchronously,FAB-18132,45783,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,tock,tock,10/Aug/20 11:26 PM,09/Nov/20 9:39 PM,28/Oct/23 3:09 AM,09/Nov/20 9:39 PM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"In this task FAB-17964 the ledger resources are removed in a synchronous way. This may create problems when the channel's ledger is big. Here we improve upon that by removing the ledger in an asynch fashion. (see review comments [here|https://github.com/hyperledger/fabric/pull/1637#discussion_r462343435]  and [here|https://github.com/hyperledger/fabric/pull/1637#discussion_r465503129] ).

 

The `r.ledgerFactory.Remove(channelID)` operation may take a long time. This operation is performed under the global registrar lock. If this takes even more then a fraction of a second, it will impact the performance of the server on all other channels. This method

// GetChain retrieves the chain support for a chain if it exists.

func (r *Registrar) GetChain(chainID string) *ChainSupport 

\{

r.lock.RLock()

defer r.lock.RUnlock()

return r.chains[chainID]

\}

is called by every client request, through BroadcastChannelSupport  so we can't really hold that lock for too long (for write - exclusive).

What is propose is asynch deletion:
 * introduce a {{*pendingRemove* map (e.g. map[string]bool }}) that holds channels that are being removed.
 * After stopping the channel move the *{{channelID}}* to that map,
 * and only then delete the ledger, but make the delete async with a different go-routine.
 * release the lock.
 * when the delete go-routine finishes, it removes the *{{channelID}}* from the *{{pendingRemove}}*
 * if the go-routine fails to remove the channel, it sets *{{pendingRemove[channelID]=false}}*
 * any attempt to `Join` or `Remove` should also check the *{{pendingRemove}}*",,tock,tsharris,,,,,,,,,,,,,,,,,,,,,,,FAB-15712,,,,,,FAB-18315,FAB-18319,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx6c",,,,Unset,Unset,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,tsharris,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Oct/20 9:55 PM;tsharris;https://github.com/hyperledger/fabric/pull/2027;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use channel participation in samples test-network,FAB-18133,45784,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,wlahti,wlahti,11/Aug/20 12:35 AM,01/Sep/20 5:21 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,Placeholder... we'll likely need CLI functionality for this?,,wlahti,,,,,,,,,,,,,,,,,,,,,,,FAB-18196,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i01fcz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode deployment fails when executing ./network.sh deployCC in Hyperledger Fabric V 2.2,FAB-18134,45785,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,shahabsyeds,shahabsyeds,11/Aug/20 2:23 AM,16/Nov/21 11:40 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"While following the guide to build fresh Hyperledger Fabric 2.2 system, error occurred at the chaincode deployment step. Unable to proceed to next step.

Golang Version: go 1.13

LOCAL_VERSION=2.2.0
DOCKER_IMAGE_VERSION=2.2.0

Distributor ID: Ubuntu
Description: Ubuntu 20.04.1 LTS
Release: 20.04
Codename: focal


Below is the error message:

root@ubuntu64bitsrv1:~/fabric-samples/test-network# ./network.sh deployCC
deploying chaincode on channel 'mychannel'

--- executing with the following
- CHANNEL_NAME:mychannel
- CC_NAME:basic
- CC_SRC_PATH:NA
- CC_SRC_LANGUAGE:go
- CC_VERSION:1.0
- CC_SEQUENCE:1
- CC_END_POLICY:NA
- CC_COLL_CONFIG:NA
- CC_INIT_FCN:NA
- DELAY:3
- MAX_RETRY:5
- VERBOSE:false
Determining the path to the chaincode
asset-transfer-basic chaincode
Vendoring Go dependencies at ../asset-transfer-basic/chaincode-go/
~/fabric-samples/asset-transfer-basic/chaincode-go ~/fabric-samples/test-network
~/fabric-samples/test-network
Finished vendoring Go dependencies
Using organization 1
++ peer lifecycle chaincode package basic.tar.gz --path ../asset-transfer-basic/chaincode-go/ --lang golang --label basic_1.0
++ res=0
++ set +x
===================== Chaincode is packaged on peer0.org1 =====================

Installing chaincode on peer0.org1...
Using organization 1
++ peer lifecycle chaincode install basic.tar.gz
++ res=1
++ set +x
Error: chaincode install failed with status: 500 - failed to invoke backing implementation of 'InstallChaincode': could not build chaincode: docker build failed: docker image build failed: docker build failed: Error returned from build: 1 ""go: inconsistent vendoring in /chaincode/input/src:
 github.com/golang/protobuf@v1.3.2: is explicitly required in go.mod, but not marked as explicit in vendor/modules.txt
 github.com/hyperledger/fabric-chaincode-go@v0.0.0-20200424173110-d7076418f212: is explicitly required in go.mod, but not marked as explicit in vendor/modules.txt
 github.com/hyperledger/fabric-contract-api-go@v1.1.0: is explicitly required in go.mod, but not marked as explicit in vendor/modules.txt
 github.com/hyperledger/fabric-protos-go@v0.0.0-20200424173316-dd554ba3746e: is explicitly required in go.mod, but not marked as explicit in vendor/modules.txt
 github.com/stretchr/testify@v1.5.1: is explicitly required in go.mod, but not marked as explicit in vendor/modules.txt

run 'go mod vendor' to sync, or use -mod=mod or -mod=readonly to ignore the vendor directory
""
!!!!!!!!!!!!!!! Chaincode installation on peer0.org1 has failed !!!!!!!!!!!!!!!!

 ",,abhaypsoni,alerner,Amir-Teshome,denyeart,fahaad.majeed,fnparr,militia,negupta,neil97,pavithra8895,shahabsyeds,smyyihvn,soen,sudeepjc,,,,,,,,,,,,,,FAB-18110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fd7:",,,,Unset,Unset,,Create a fresh ubuntu 20.04 VM and follow these docs: https://hyperledger-fabric.readthedocs.io/en/release-2.2/test_network.html,,Unset,,,,,,Unset,,Unset,,(Please add usage information),abhaypsoni,alerner,Amir-Teshome,denyeart,fahaad.majeed,fnparr,militia,negupta,neil97,pavithra8895,shahabsyeds,smyyihvn,soen,sudeepjc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Aug/20 1:35 AM;abhaypsoni;I am also facing same issue. Waiting for solution;;;","14/Aug/20 3:05 AM;neil97;I have the same issue. I need a solution. :c;;;","03/Sep/20 10:58 PM;alerner;I have the same issue, and I am using Ubuntu subsystem on Windows 10.  So is this a VM problem?;;;","10/Sep/20 11:32 PM;negupta;When running an ubuntu vm on windows, i need to re-initialize the go module in order to deploy the chaincode. Steps to resolve:
rm -rf go.mod go.sum vendor
go mod init (module name)
go test

Then the chaincode will deploy;;;","17/Sep/20 10:59 PM;shahabsyeds;In my case, the above workaround of re-initializing go also did not worked.

Anyone here tried any other options ?

 ;;;","04/Oct/20 4:17 AM;fnparr;I have this problem running  MacOS Catalina  10.15.6  docker version 19.0.3

Not fixed by deleting mod.init  as suggested above;   

I have not seen workaround at this point.

Have not been able to find peer install chain code  cmd source with this message 

Does anyone know where to look ?

 

My error message is from same command, same error step but has some differences: 

Error: chaincode install failed with status: 500 - failed to invoke backing implementation of 'InstallChaincode': could not build chaincode: docker build failed: docker image inspection failed: Get ""http://unix.sock/images/dev-peer0.org1.example.com-basic_1.0-4ec191e793b27e953ff2ede5a8bcc63152cecb1e4c3f301a26e22692c61967ad-42f57faac8360472e47cbbbf3940e81bba83439702d085878d148089a1b213ca/json"": dial unix /host/var/run/docker.sock: connect: no such file or directory

Chaincode installation on peer0.org1 has failed

Deploying chaincode failed

 

 

{color:#FF0000}I have found FIX for this problem. – for Mac users{color}

[https://github.com/docker/for-mac/issues/4955]. suggests opening docker desktop and unselecting 'use gRPC FUSE' box . Then restart docker; clear all old docker state.

After that my install chain code operation works without error.

 

This should be noted in the tutorial documentation as a warning for Mac users.  the gRPC fuse option is probably the default setting in recent versions. HLF 2.2 is not able to handle this setting.  ;;;","12/Oct/20 11:20 AM;denyeart;Troubleshooting was added to tutorial for the Docker gRPC fuse issue - [https://github.com/hyperledger/fabric/pull/1993.]

 ;;;","14/Oct/20 12:18 PM;militia;Hi. did you solve this problem?

Update your *Golang* from 1.13.x to *1.15.x*. then, it will be clear.

 

In my case, i use [go1.15.2.linux-amd64.tar.gz|https://golang.org/dl/go1.15.2.linux-amd64.tar.gz] and deployCC is work.;;;","15/Oct/20 5:31 PM;Amir-Teshome;Hello,

 I'm having the same issue with go version 1.15.2 on Debian 10. did you find a solution ? 

Thanks;;;","06/Nov/20 6:14 AM;sudeepjc;Hi All,

I was seeing the same issue with my system on windows and it was running a previous version of go 1.13.x. When I installed the version of go to 1.14.10 and retried the deployment it worked perfectly.

 ;;;","06/Nov/20 10:42 PM;fahaad.majeed;I was having same issue and after updating golang version to 1.15.4, issue is fixed now. ;;;","03/Aug/21 2:28 PM;pavithra8895;I am getting this error on windows 10 and the command I am using is 
 ""./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-javascript/ -ccl javascript""
 and the error I am getting is :

*Error: chaincode install failed with status: 500 - failed to invoke backing implementation of 'InstallChaincode': could not build chaincode: docker build failed: docker image inspection failed: cannot connect to Docker endpoint*
 *Chaincode installation on peer0.org1 has failed*
 *Deploying chaincode failed*

Pls anyone have an idea on this.;;;","06/Sep/21 5:29 PM;smyyihvn;[~pavithra8895]  I had same issue on windows 10 and 1.15.6 go , I changed **
CORE_VM_ENDPOINT=unix:///var/run/docker.sock at docker-compose-test-net also for both peer and also changed docker.sock volumes 
- //var/run/docker.sock:/var/run/docker.sock. It is working now.;;;","16/Nov/21 12:09 AM;soen;I also encountered the same problem. In centos7, my fabric version is 2.3.0, go version is 1.16.1, and ca certificate is 1.5.2.

When I try to use the second virtual machine to install the chaincode in cli1, an error is reported

bash-5.0# peer lifecycle chaincode install mycc.tar.gz
Error: chaincode install failed with status: 500 - failed to invoke backing implementation of 'InstallChaincode': could not parse as a chaincode install package: could not read code.tar.gz from tar: unexpected EOF

 

According to this, I did not find a solution;;;","16/Nov/21 11:40 AM;soen;我的问题解决了，我设置了用户环境变量和系统环境变量

export GOROOT=/usr/local/go
export PATH=$PATH:$GOROOT/bin
export GOPATH=$HOME/go
export PATH=$PATH:/home/yujialing/go/src/github.com/hyperledger/fabric-samples/bin
export FABRIC_CFG_PATH=/home/yujialing/go/src/github.com/hyperledger/fabric-samples/multiple-deployment


Later I also noticed that I used go version to check the version under the bash command line after entering cli1, which was 1.14.1. But I don't know how to update. Try to restart the channel and repeat the operation, lifecycle chaincode install runs successfully. Although I don't know the mechanism, it is always good for it to run successfully.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement chaincode lifecycle commands,FAB-18135,45786,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,bstasyszyn,bstasyszyn,11/Aug/20 5:16 AM,06/Oct/20 4:13 AM,28/Oct/23 3:09 AM,06/Oct/20 4:13 AM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,"Implement the following chaincode lifecycle commands:
 * package
 * install
 * query install package
 * query installed
 * approve
 * query approved
 * check commit readiness
 * commit
 * query committed

 ",,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fdf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Package command,FAB-18136,45787,45786,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,11/Aug/20 5:17 AM,11/Aug/20 5:55 AM,28/Oct/23 3:09 AM,11/Aug/20 5:55 AM,,,,,,,,,,,,,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fdn:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Install command,FAB-18137,45788,45786,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,11/Aug/20 5:17 AM,11/Aug/20 6:13 AM,28/Oct/23 3:09 AM,11/Aug/20 6:13 AM,,,,,,,,,,,,,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fdv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Get installed package command,FAB-18138,45789,45786,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,11/Aug/20 5:17 AM,06/Oct/20 4:13 AM,28/Oct/23 3:09 AM,06/Oct/20 4:13 AM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fe3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query installed command,FAB-18139,45790,45786,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,11/Aug/20 5:18 AM,02/Oct/20 5:07 AM,28/Oct/23 3:09 AM,02/Oct/20 5:07 AM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01feb:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Approve command,FAB-18140,45791,45786,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,11/Aug/20 5:18 AM,11/Aug/20 10:00 PM,28/Oct/23 3:09 AM,11/Aug/20 10:00 PM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fej:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query approved command,FAB-18141,45792,45786,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,11/Aug/20 5:18 AM,06/Oct/20 12:33 AM,28/Oct/23 3:09 AM,03/Oct/20 4:03 AM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fer:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Check commit readiness command,FAB-18142,45793,45786,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,11/Aug/20 5:19 AM,06/Oct/20 12:33 AM,28/Oct/23 3:09 AM,03/Oct/20 7:32 AM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fez:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Commit command,FAB-18143,45794,45786,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,11/Aug/20 5:19 AM,11/Aug/20 10:58 PM,28/Oct/23 3:09 AM,11/Aug/20 10:58 PM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ff7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query committed command,FAB-18144,45795,45786,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,11/Aug/20 5:19 AM,06/Oct/20 12:33 AM,28/Oct/23 3:09 AM,06/Oct/20 12:32 AM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fff:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement peer snapshot CLI commands for snapshot requests and management,FAB-18145,45797,44707,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,wenjian,wenjian,11/Aug/20 11:10 AM,17/Sep/20 11:26 PM,28/Oct/23 3:09 AM,17/Sep/20 11:26 PM,,,,,,,,,,,,,,,,0,,,,,,"# CLI commands for snapshot requests: submitrequest, cancelrequest, listpending
 # CLI commands for snapshots: listcompleted,  delete",,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ffv:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Aug/20 9:24 PM;wenjian;PR: [https://github.com/hyperledger/fabric/pull/1708];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTEv2 README,FAB-18146,45800,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,12/Aug/20 3:39 AM,11/Jan/21 2:49 AM,28/Oct/23 3:09 AM,11/Jan/21 2:49 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,Add PTEv2 README,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17973,,,No,,Unset,No,,,"1|i00uze:rzczqzxyzzx8zwz2jzzi",,,,Unset,Unset,In Progress,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor multichannel.ChainSupport and its constituents,FAB-18147,45801,,Task,Backlog,FAB,Fabric,software,denyeart,,,Low,,,tock,tock,12/Aug/20 4:06 PM,17/Apr/21 4:10 AM,28/Oct/23 3:09 AM,,,,,,,,v2.x,,,,,fabric-orderer,,,,0,ipm,,,,,"Following the discussion in this [pull request|https://github.com/hyperledger/fabric/pull/1693], this task is dedicated to the refactoring of the multichannel.ChainSupport and its constituents, especially the embedded components that provide functionality around channel-config and ledger access.

See these comments for more details:
https://github.com/hyperledger/fabric/pull/1693#issuecomment-671987198
https://github.com/hyperledger/fabric/pull/1693#issuecomment-672050466
https://github.com/hyperledger/fabric/pull/1693#issuecomment-672640721
https://github.com/hyperledger/fabric/pull/1693#issuecomment-672649655

The goal is to allow the follower, the chain, and possibly cluster to have access to objects that provide the functionality of channel-config & ledger access trough a well defined set of independent objects, rather than the monolith ""ChainSupport"". 

As a first step, we'll expose and isolate some of the constituents of ""ChainSupport"", but keep the functionality of ""ChainSupport"" itself as is. This is mainly to avoid too many changes at the same time, particularly at the  etcdraft.Chain that uses it. 

In a second step we'll look at improving the way the  follower.Chain makes use of the individual components the emerged out of ""ChainSupport"", especially the channel-config.

In a third step we'll look at improving the way the  etcdraft.Chain makes use of the individual components of ""ChainSupport"".
",,harrymknight,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00wur:0idqxqq",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrymknight,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test crash fault tolerance: on-boarding,FAB-18148,45803,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,tock,tock,12/Aug/20 6:50 PM,17/Nov/20 12:22 PM,28/Oct/23 3:09 AM,17/Nov/20 12:22 PM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"create a network with 3 OSNs,
Start 2 and create a channel, push a few normal transactions, do a config change as well to make the last config block.number>0.
Start the 3rd OSN (to create the filerepo). Shut it down.

Emulating a failure in the 3rd OSN Join sequence:

Scenario 1: failure after the join block is is written to the filerepo but before block pulling starts. Put the the last config block taken from OSN1 in the filerepo/joinblock folder of OSN3. Restart OSN3 and check onboarding proceeds as expected.

Scenario 2: failure after the join block is is written to the filerepo, ledger folder created, but before block pulling starts. Put the the last config block taken from OSN1 in the filerepo/joinblock folder of OSN3. Create the channel folder in the ledger. Restart OSN3 and check onboarding proceeds as expected.

Scenario 3: failure after the block puling starts, but before reaching the join-block. Put the the last config block taken from OSN1 in the filerepo/joinblock folder of OSN3. Create the ledger and place the genesis block in it. Restart OSN3 and check onboarding proceeds as expected. 

",,tock,,,,,,,,,,,,,,,,,,,,,,,,FAB-17966,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxd",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test crash fault tolerance: following,FAB-18149,45804,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,tock,tock,12/Aug/20 6:50 PM,17/Nov/20 12:22 PM,28/Oct/23 3:09 AM,17/Nov/20 12:22 PM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,when the orderer crashes after the follower reaches the join-block (i.e. it was already deleted form the file repo),,tock,,,,,,,,,,,,,,,,,,,,,,,,FAB-17966,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxe",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow modifying orderer Tick Time setting without requiring a manual restart of orderers,FAB-18150,45805,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,ptippett,ptippett,12/Aug/20 10:14 PM,17/Apr/21 4:29 AM,28/Oct/23 3:09 AM,,v1.4.6,v2.0.1,,,,,,,,,,fabric-orderer,,,,0,,,,,,"Today in Fabric, the default tick time setting for channels, which is the basis for controlling how often the orderers heartbeat on a channel and how long before they evict nodes, is defaulted to 500ms.

 

We've found that with multiple distributed orderers and many channels, this setting is way too low.  This is because RAFT treats each channel independently, so for example if you had 5 orderers and 200 channels, that would be 1000 heartbeats being sent every 500ms.  On slower or widely distributed networks, this can quickly overwhelm the network, which causes heartbeats to be missed, nodes to get evicted, causing more traffic, causing more evictions, etc.

 

To modify this, the user can modify tick time.  However, this isn't as straight forward as it should be.  To modify tick time, each orderer needs to tear down etcd.  Right now in fabric, the only way to do this is to restart the orderer.  So again in a cluster of 5 orderers for example, the user would have to modify tick time on a channel, wait for the transaction to be recorded on all 5 orderers, then manually restart each orderer so that it picks up the change.  This is problematic because you don't want the orderers to be using different tick time settings as this could make the problem I listed above worse. 

So the request here is to better automate the setting of tick time on a channel.  One way to do this would be for each orderer to be able to tear down and restart etcd with the new tick time setting as soon as it gets the transaction vs relying on the customer to manually handle restarts.",,jyellick,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fgr:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Aug/20 10:17 PM;jyellick;We originally didn't support this, because etcd does not support this, and practically, Fabric did not support stopping and restarting consensus (for instance, leaving and rejoining a channel was not initially possible).  I do think that this is doable now and fits nicely with the channel participation API work.;;;","17/Apr/21 4:29 AM;jyellick;This pairs well with FAB-18152 and FAB-18147.  It _should_ be really easy to reinitialize the Raft state machine, after all, a node can 'leave' and then 'rejoin' a consenter set and this all works.  But, because of the way things are wired it's challenging.  When these other two are tackled, this issue should be taken into consideration.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Panic in lifecycle install when chaincode already installed,FAB-18151,45807,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,12/Aug/20 11:29 PM,13/Aug/20 5:36 AM,28/Oct/23 3:09 AM,13/Aug/20 5:36 AM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,"When a chaincode has already been installed on all peers and 'lifecycle install' is invoked again for the same label/package, then the CLI panics when printing out the package ID.",,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fh7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor start/halt flow between registrar and consenter,FAB-18152,45808,,Task,To Do,FAB,Fabric,software,denyeart,,,Low,,,wlahti,wlahti,13/Aug/20 1:43 AM,17/Apr/21 4:08 AM,28/Oct/23 3:09 AM,,,,,,,,v2.x,,,,,fabric-orderer,,,,0,ipm,,,,,"From a [review|https://github.com/hyperledger/fabric/pull/1628] by [~jyellick] :

""I'd like to note for the record, that this control flow still seems very awkward to me. The registrar is calling into the consenter, which as it halts is calling back into the registrar. Any time we have bidirectional binding like this is a red flag in my opinion.

I'd much rather see this implemented in one of two ways:
1. Leave the internal run state management to the consenter plugins as is done today, and expose a channel or similar mechanism to allow the the registrar to detect when the consenter has exited.
2. Remove the 'start' / 'halt' bits of the consenter API, and instead require that the caller inject a go routine, and simply have control flow return once the consenter exits, indicating that a shutdown occurred.

I think (2) is probably easier to read and more natural, while (1) is less of an API change and less code. In either case, I think both are better options than an opaque ""I'm stopping"" callback.""",,jyellick,nao,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18069,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00wur:0idqxqoi",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,nao,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Apr/21 4:08 AM;jyellick;This should still be done as a refactor at some point.  Basically, we should strive not to create go routines that are managed internally within a structure.  Rather, we should spawn the go routine externally, and when it returns (for instance because the node is no longer in the consenter set, or some other error occurs), then we have this context in the thing that spawned it (in this case, the multichannel package).  In this way, the control flow becomes much more clear.

1. Configure consensus plugin
2. Send go routine with launching context in
3. Go routine returns with some error
4. Launching context is free to do whatever maintenance is required (such as restarting it, changing it from active to inactive, etc.).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode args are not properly encoded,FAB-18153,45809,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,13/Aug/20 5:29 AM,13/Aug/20 9:40 PM,28/Oct/23 3:09 AM,13/Aug/20 9:40 PM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,"Both 'chaincode invoke' and 'chaincode query' do not pass the arguments properly. Currently, the string array from the command-line is marshalled into a byte array and that byte array is passed in as the first argument of 'Args'. Instead, each string in the string array should be converted to a byte array and added to 'Args'.",,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fhn:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable passing on pvtdata hashes to pvtdata purge manager,FAB-18154,45810,44706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,13/Aug/20 12:24 PM,19/Aug/20 3:30 AM,28/Oct/23 3:09 AM,19/Aug/20 3:30 AM,,,,,,,,,,,,fabric-ledger,,,,0,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fhv:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Aug/20 2:10 AM;manish-sethi;https://github.com/hyperledger/fabric/pull/1720;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test transitioning from member to follower,FAB-18155,45817,45221,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,wlahti,wlahti,13/Aug/20 9:24 PM,21/Sep/20 10:22 PM,28/Oct/23 3:09 AM,21/Sep/20 10:22 PM,,,,,,,,,,,,,,,,0,,,,,,Remove OSN from consenter set. List channel details and ensure the orderer is now a follower. ,,tock,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fiz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Sep/20 11:21 PM;tock;This is a duplicate of https://jira.hyperledger.org/browse/FAB-18129, IMO;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bump etcd/raft to a normal version,FAB-18156,45818,,Task,In Progress,FAB,Fabric,software,denyeart,,,Low,,guoger,guoger,guoger,13/Aug/20 10:51 PM,11/May/21 11:19 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"it's currently pinned to a commit hash due to FAB-14004 because we need a specific fix in the lib, which was not released at the time of writing Raft chain.

Now, it's included in the latest etcd/raft (v3.4.9) and we should remove this weird commit pinning",,felixrowe,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-14004,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fj7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),felixrowe,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When instantiating chaincode with indices, peer should log if they already exist.",FAB-18157,45820,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,ptippett,ptippett,14/Aug/20 3:17 AM,03/Nov/20 12:00 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-ledger,,,,0,operator,,,,,"Currently if a user instantiates a chaincode that specifies couch indices, the peer logs the following message:

```

2020-08-13T13:34:15.582571949Z [34m2020-08-13 13:34:15.582 UTC [couchdb] CreateIndex -> INFO f69d1[0m Created CouchDB index [indexOwner] in state database [dummy_marbles] using design document [_design/indexOwnerDoc]
 ```

 

However, if upgrading or instantiating new chaincode that uses the same index/indices, nothing is logged.  This has caused confusion as to whether the index already existed or there was some issue and it didn't get created at all.

 

The request is for a similar log message saying something like ""index [IndexOwner] in state database [dummy_marbles] already exists.""  I suppose in the case where it already exists but has been modified, a similar ""modifying"" message would be nice.

 

Not high priority, but I think it would help.  I didn't turn on debug logs, so maybe this does get logged at other logging levels?  If so, it's infrequent enough that I think moving it to info would be OK.

 ",,denyeart,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0ipo",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Sep/20 5:54 AM;denyeart;It didn't make it in yet, but I'll look into it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create couchdb indexes for the installed chaincodes,FAB-18158,45822,44706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,14/Aug/20 11:00 PM,08/Oct/20 10:26 PM,28/Oct/23 3:09 AM,08/Oct/20 10:26 PM,,,,,,,,,,,,fabric-ledger,,,,0,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fjv:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Sep/20 7:45 AM;manish-sethi;[https://github.com/hyperledger/fabric/pull/1864] - For chaincodes defined using new lifecycle

[https://github.com/hyperledger/fabric/pull/1967] - For chaincodes defined using legacy lifecycle

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Plug 1.4 into 2.x HSM Test,FAB-18160,45824,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,btl5037,btl5037,btl5037,14/Aug/20 11:31 PM,11/Jan/21 1:32 AM,28/Oct/23 3:09 AM,11/Jan/21 1:32 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,"To investigate a potential breaking change, plug the 1.4 stream of fabric into the 2.x stream HSM test in fabric-test and test the 1.4.6 branch vs the 1.4.7 branch to see if functionality works as expected.",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00uze:rzczqzxyzzx8zwai",,,,Unset,Unset,In Progress,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add peer signature to snapshot additional metadata JSON file,FAB-18161,45825,44707,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,manish-sethi,manish-sethi,14/Aug/20 11:35 PM,27/Oct/20 2:42 AM,28/Oct/23 3:09 AM,27/Oct/20 2:41 AM,,,,,,,,,,,,,,,,0,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fkb:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Oct/20 2:39 AM;manish-sethi;As we are leaving the coordination of snapshots sharing outside the fabric code, it's not very clear on the benefits of signing the snapshot by the peer signatures. For now, we leave this to admins to take a call on their trust factor and if they need signatures, the admins can sign the singable_metadata file. We can revisit this, if we hear some feedback on this once people start using snapshot feature.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add joinbysnapshot to bootstrap a peer (CLI and peer side),FAB-18162,45826,44707,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,manish-sethi,manish-sethi,14/Aug/20 11:40 PM,17/Sep/20 11:27 PM,28/Oct/23 3:09 AM,17/Sep/20 11:27 PM,,,,,,,,,,,,,,,,0,,,,,,,,manish-sethi,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fkj:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,wenjian,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Aug/20 4:44 AM;wenjian;PRs: 

[https://github.com/hyperledger/fabric/pull/1733]

[https://github.com/hyperledger/fabric/pull/1760];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Certificate expiration - Allow TLSHandshakeTimeShift to be specified for common orderer server port.,FAB-18163,45828,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,jyellick,jyellick,14/Aug/20 11:50 PM,09/Sep/20 10:31 PM,28/Oct/23 3:09 AM,25/Aug/20 1:24 AM,,,,,,,v1.4.9,v2.1.2,v2.2.1,v2.3.0,,fabric-orderer,,,,0,operator,,,,,"Today, you may specify 'TLSHandshakeTimeShift' in the cluster configuration of the orderer to work around expired TLS certificates to allow the orderer to restart with quorum even when TLS certificates have expired.

However, this config variable only applies when there is a separate cluster port listener involved.  When the cluster port is shared with the standard orderer port, this option is ignored.

This story is to expose a similar config option for the general TLS options of the orderer, to be applied to the standard orderer TLS listener.  In the event that a separate cluster port is utilized, then the setting in the cluster settings should take precedence.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15700,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzogi",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.2,release-2.5,release-2.4,release-2.1,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change CreateLedgerFromSnapshot to async and do not allow to create another ledger in parallel,FAB-18164,45829,44707,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,wenjian,wenjian,15/Aug/20 12:33 AM,27/Oct/20 2:45 AM,28/Oct/23 3:09 AM,23/Sep/20 2:07 AM,,,,,,,,,,,,,,,,0,,,,,,"Because creating a ledger from a snapshot may take a long time, it causes CSCC timeout. We are going to change CreateLedgerFromSnapshot to async mode. In addition, when CreateLedgerFromSnapshot is in progress, we do not allow to create another ledger.",,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fkz:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Sep/20 11:12 PM;wenjian;PR: https://github.com/hyperledger/fabric/pull/1889;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode devmode future,FAB-18165,45830,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,wlahti,wlahti,15/Aug/20 4:43 AM,18/Aug/20 4:22 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,ipm,,,,,"Placeholder... to be updated:

Quick summary is that we need a long-term plan for devmode. Do we continue supporting the current (hacky) flow or should it be redesigned/replaced and the old flow deprecated/removed?",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8zs006",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing golang dependencies when using peer chaincode package,FAB-18166,45831,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,caveman7,caveman7,15/Aug/20 9:07 AM,11/Jan/21 1:32 AM,28/Oct/23 3:09 AM,11/Jan/21 1:32 AM,v1.4.8,v2.2.0,,,,,,,,,,fabric-peer,fabric-quality,,,0,,,,,,"`peer chaincode package` misses some dependencies in the `vendor` folder. In my simple chaincode project: [https://github.com/aldredb/chaincode1-with-shim]
 I simply did:
 - go mod init
 - add ""require github.com/hyperledge/fabric v1.4.8"" in the go.mod file
 - go mod tidy
 - go mod vendor

Examining the vendor folder, I have
$ ls -al vendor/github.com
total 0
drwxr-xr-x  26 aldred  staff  832 14 Aug 19:36 .
drwxr-xr-x   8 aldred  staff  256 14 Aug 19:36 ..
drwxr-xr-x   3 aldred  staff   96 14 Aug 19:36 Azure
drwxr-xr-x   4 aldred  staff  128 14 Aug 19:36 Microsoft
drwxr-xr-x   4 aldred  staff  128 14 Aug 19:36 containerd
drwxr-xr-x   6 aldred  staff  192 14 Aug 19:36 docker
drwxr-xr-x   3 aldred  staff   96 14 Aug 19:36 fsnotify
drwxr-xr-x   3 aldred  staff   96 14 Aug 19:36 fsouza
...
then i did a {{peer chaincode package -n chaincode1 -v v1 -p chaincode1-with-shim chaincode1@v1.cds}}

i extracted the cds file using {{cdstool}}  and examine the contents of the vendor folder inside the cds package
ls -al src/chaincode1-with-shim/vendor/github.com
total 0
drwxr-xr-x  22 aldred  staff  704 Aug 14 19:37 .
drwxr-xr-x   7 aldred  staff  224 Aug 14 19:37 ..
drwxr-xr-x   3 aldred  staff   96 Aug 14 19:37 containerd
drwxr-xr-x   6 aldred  staff  192 Aug 14 19:37 docker
drwxr-xr-x   3 aldred  staff   96 Aug 14 19:37 fsnotify
drwxr-xr-x   3 aldred  staff   96 Aug 14 19:37 fsouza
...
as seen above, some dependency folders are missing, which results in failure in chaincode instantiation
Error: could not assemble transaction, err Proposal response was not successful, error code 500, msg failed to execute transaction fd549e47b4d3a1bfb1615d9028c30aae79437c9b4cd25e18d7cdc04f678a3447: error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 ""chaincode/input/src/chaincode1-with-shim/vendor/github.com/docker/docker/pkg/archive/archive_linux.go:12:2: cannot find package ""github.com/containerd/continuity/fs"" in any of:
	/chaincode/input/src/chaincode1-with-shim/vendor/github.com/containerd/continuity/fs (vendor tree)
	/opt/go/src/github.com/containerd/continuity/fs (from $GOROOT)
	/chaincode/input/src/github.com/containerd/continuity/fs (from $GOPATH)
	/opt/gopath/src/github.com/containerd/continuity/fs
 
I also see a difference between {{peer chaincode package}} using 2.2.0 binary and 1.4.8 binary.Using 1.4.8 binary:
ls -al src/chaincode1-with-shim/vendor/github.com/containerd
total 0
drwxr-xr-x   3 aldred  staff   96 Aug 14 19:57 .
drwxr-xr-x  22 aldred  staff  704 Aug 14 19:57 ..
drwxr-xr-x   3 aldred  staff   96 Aug 14 19:57 containerd
Using 2.2.0 binary:
ls -al src/chaincode1-with-shim/vendor/github.com/containerd
total 0
drwxr-xr-x   4 aldred  staff  128 Jan  1  1970 .
drwxr-xr-x  22 aldred  staff  704 Jan  1  1970 ..
drwxr-xr-x   3 aldred  staff   96 Jan  1  1970 containerd
drwxr-xr-x   5 aldred  staff  160 Jan  1  1970 continuity


Using the 2.2.0 binary, the missing dependency that caused instantiation error was included:
{{[github.com/containerd/continuity/fs|http://github.com/containerd/continuity/fs]}} so the instantiation works ok

 

This issue *does not occur* if i package the chaincode using IBP VSCode extension",,caveman7,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Aug/20 2:45 AM;sykesm;FAB-18166.tgz;https://jira.hyperledger.org/secure/attachment/18528/FAB-18166.tgz",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0ip94",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caveman7,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Aug/20 3:50 AM;sykesm;I'm unable to recreate with v2 in module mode (the current recommended configuration).

[^FAB-18166.tgz] contains a trivial chaincode implementation as a module that uses the 1.4.8 shim.
{noformat}
module shim-goo

go 1.14

require (
	github.com/Knetic/govaluate v3.0.0+incompatible // indirect
	github.com/Shopify/sarama v1.27.0 // indirect
	github.com/fsouza/go-dockerclient v1.6.5 // indirect
	github.com/golang/protobuf v1.4.2 // indirect
	github.com/grpc-ecosystem/go-grpc-middleware v1.2.1 // indirect
	github.com/hashicorp/go-version v1.2.1 // indirect
	github.com/hyperledger/fabric v1.4.8
	github.com/hyperledger/fabric-amcl v0.0.0-20200424173818-327c9e2cf77a // indirect
	github.com/miekg/pkcs11 v1.0.3 // indirect
	github.com/op/go-logging v0.0.0-20160315200505-970db520ece7 // indirect
	github.com/pkg/errors v0.9.1 // indirect
	github.com/spf13/viper v1.7.1 // indirect
	github.com/sykesm/zap-logfmt v0.0.3 // indirect
	go.uber.org/zap v1.15.0 // indirect
	golang.org/x/crypto v0.0.0-20200728195943-123391ffb6de // indirect
	golang.org/x/net v0.0.0-20200813134508-3edf25e44fcc // indirect
	google.golang.org/grpc v1.31.0 // indirect
	gopkg.in/yaml.v2 v2.3.0 // indirect
)
{noformat}
The script vendors the code and packages it. Following the packaging, it compares the contents of the package with the files in the source tree. No differences are highlighted.
{noformat}
# vendor dependencies
pushd shim-goo
go mod tidy
go mod vendor
popd

# package for legacy
FABRIC_LOGGING_SPEC=debug ~/workspace/fabric/src/github.com/hyperledger/fabric/build/bin/peer chaincode package -n shim-goo -v v1 -p shim-goo shim-goo@v1.cds

# dump the output
go run github.com/btl5037/cdstool -input shim-goo@v1.cds -output /dev/stdout | tail -n +2 | tar ztvf -

# compare the file set after appending trailing slash to directories and
# rewriting shim-goo to src
diff -u \
  <(go run github.com/btl5037/cdstool -input shim-goo@v1.cds -output /dev/stdout | tail -n +2 | tar ztf - | sort) \
  <((find shim-goo -type d | sed -e 's,$,/,g' && find shim-goo -type f) | sort | sed -e 's,shim-goo,src,g')
{noformat}
The (trimmed) output follows:
{noformat}
$ ./package-diff.sh
+ export FABRIC_TREE=/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric
+ FABRIC_TREE=/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric
+ export SAMPLE_CFG_PATH=/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/sampleconfig
+ SAMPLE_CFG_PATH=/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/sampleconfig
+ export FABRIC_CFG_PATH=/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/sampleconfig
+ FABRIC_CFG_PATH=/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/sampleconfig
+ pushd shim-goo
~/tmp/FAB-18166/shim-goo ~/tmp/FAB-18166
+ go mod tidy
+ go mod vendor
+ popd
~/tmp/FAB-18166
+ FABRIC_LOGGING_SPEC=debug
+ /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/build/bin/peer chaincode package -n shim-goo -v v1 -p shim-goo shim-goo@v1.cds
...
2020-08-17 13:43:46.033 EDT [chaincodeCmd] packageCC -> DEBU 6cb Packaged chaincode into deployment spec of size 3363824, output file shim-goo@v1.cds
+ go run github.com/btl5037/cdstool -input shim-goo@v1.cds -output /dev/stdout
+ tail -n +2
+ tar ztvf -
drwxr-xr-x 500/500           0 1969-12-31 19:00 src/
...
+ diff -u /dev/fd/63 /dev/fd/62
++ go run github.com/btl5037/cdstool -input shim-goo@v1.cds -output /dev/stdout
++ tail -n +2
++ sort
++ tar ztf -
++ find shim-goo -type d
++ sed -e s,shim-goo,src,g
++ sort
++ sed -e 's,$,/,g'
++ find shim-goo -type f
{noformat}
If you attempt to use the 1.4 tooling to create a package, then many files are missing because the tool is packaging for the native operating system and architecture instead of the target when in GOPATH mode (the only mode the 1.4 tooling supports).

If you prepend your package command with {{GOOS=linux GOARCH=amd64}} it will pick up the dependencies required for linux/amd64. Alternatively, you can package on the same platform you deploy on. Ultimately, I'd recommend that you simply use the v2 tooling instead.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Raft active nodes flakey when switching follower to member ,FAB-18167,45832,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Test Error,wlahti,wlahti,wlahti,16/Aug/20 4:17 AM,18/Aug/20 2:02 AM,28/Oct/23 3:09 AM,18/Aug/20 2:02 AM,,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"At times, the active nodes reported by Raft are temporarily unstable. I've noticed this while working on an integration test where I add an OSN as a follower, wait for it to catch up, and then add it to the consenters set. 

When the active nodes are incorrectly reported, I see the following (note the Check logs - one halfway down and one at the end): 
{code:java}
STEP: ensuring orderer3 transitions from follower to member
[e][OrdererOrg.orderer1] 2020-08-15 14:01:09.596 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 073 Sending msg of 28 bytes to 2 on channel participation-trophy took 11.708µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:09.596 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 074 Sending msg of 28 bytes to 3 on channel participation-trophy took 8.215µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:09.596 EDT [orderer.consensus.etcdraft] logSendFailure -> ERRO 075 Failed to send StepRequest to 3, because: aborted channel=participation-trophy node=1
[e][OrdererOrg.orderer1] 2020-08-15 14:01:09.596 EDT [orderer.consensus.etcdraft] stepLeader -> DEBU 076 1 failed to send message to 3 because it is unreachable [next = 8, match = 0, state = ProgressStateProbe, waiting = false, pendingSnapshot = 0] channel=participation-trophy node=1
[e][OrdererOrg.orderer2] 2020-08-15 14:01:09.597 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 053 Sending msg of 28 bytes to 1 on channel participation-trophy took 9.881µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:10.098 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 077 Sending msg of 28 bytes to 2 on channel participation-trophy took 15.206µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:10.098 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 078 Sending msg of 28 bytes to 3 on channel participation-trophy took 63.591µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:10.098 EDT [orderer.consensus.etcdraft] send -> INFO 079 Successfully sent StepRequest to 3 after failed attempt(s) channel=participation-trophy node=1
[e][OrdererOrg.orderer2] 2020-08-15 14:01:10.098 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 054 Sending msg of 28 bytes to 1 on channel participation-trophy took 9.88µs
[e][OrdererOrg.orderer3] 2020-08-15 14:01:10.098 EDT [comm.grpc.server] 1 -> INFO 039 streaming call completed grpc.service=orderer.Cluster grpc.method=Step grpc.peer_address=127.0.0.1:59031 grpc.peer_subject=""CN=orderer1.example.com,L=San Francisco,ST=California,C=US"" error=""channel participation-trophy doesn't exist"" grpc.code=Unknown grpc.call_duration=159.114µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:10.599 EDT [orderer.consensus.etcdraft] Check -> DEBU 07a Current active nodes in cluster are: [1 2 3] channel=participation-trophy node=1
[e][OrdererOrg.orderer1] 2020-08-15 14:01:10.599 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 07b Sending msg of 28 bytes to 2 on channel participation-trophy took 10.953µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:10.599 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 07c Sending msg of 28 bytes to 3 on channel participation-trophy took 8.432µs
[e][OrdererOrg.orderer2] 2020-08-15 14:01:10.599 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 055 Sending msg of 28 bytes to 1 on channel participation-trophy took 5.733µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:11.100 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 07d Sending msg of 28 bytes to 2 on channel participation-trophy took 10.589µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:11.100 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 07e Sending msg of 28 bytes to 3 on channel participation-trophy took 7.993µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:11.100 EDT [orderer.consensus.etcdraft] logSendFailure -> ERRO 07f Failed to send StepRequest to 3, because: aborted channel=participation-trophy node=1
[e][OrdererOrg.orderer1] 2020-08-15 14:01:11.100 EDT [orderer.consensus.etcdraft] stepLeader -> DEBU 080 1 failed to send message to 3 because it is unreachable [next = 8, match = 0, state = ProgressStateProbe, waiting = false, pendingSnapshot = 0] channel=participation-trophy node=1
[e][OrdererOrg.orderer2] 2020-08-15 14:01:11.101 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 056 Sending msg of 28 bytes to 1 on channel participation-trophy took 6.485µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:11.600 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 081 Sending msg of 28 bytes to 2 on channel participation-trophy took 8.306µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:11.600 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 082 Sending msg of 28 bytes to 3 on channel participation-trophy took 72.071µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:11.600 EDT [orderer.consensus.etcdraft] send -> INFO 083 Successfully sent StepRequest to 3 after failed attempt(s) channel=participation-trophy node=1
[e][OrdererOrg.orderer2] 2020-08-15 14:01:11.600 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 057 Sending msg of 28 bytes to 1 on channel participation-trophy took 8.624µs
[e][OrdererOrg.orderer3] 2020-08-15 14:01:11.601 EDT [comm.grpc.server] 1 -> INFO 03a streaming call completed grpc.service=orderer.Cluster grpc.method=Step grpc.peer_address=127.0.0.1:59031 grpc.peer_subject=""CN=orderer1.example.com,L=San Francisco,ST=California,C=US"" error=""channel participation-trophy doesn't exist"" grpc.code=Unknown grpc.call_duration=113.964µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:12.097 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 084 Sending msg of 28 bytes to 2 on channel participation-trophy took 9.963µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:12.098 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 085 Sending msg of 28 bytes to 3 on channel participation-trophy took 88.04µs
[e][OrdererOrg.orderer2] 2020-08-15 14:01:12.098 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 058 Sending msg of 28 bytes to 1 on channel participation-trophy took 8.869µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:12.602 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 086 Sending msg of 28 bytes to 2 on channel participation-trophy took 25.483µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:12.602 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 087 Sending msg of 28 bytes to 3 on channel participation-trophy took 22.558µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:12.602 EDT [orderer.consensus.etcdraft] logSendFailure -> ERRO 088 Failed to send StepRequest to 3, because: aborted channel=participation-trophy node=1
[e][OrdererOrg.orderer1] 2020-08-15 14:01:12.602 EDT [orderer.consensus.etcdraft] stepLeader -> DEBU 089 1 failed to send message to 3 because it is unreachable [next = 8, match = 0, state = ProgressStateProbe, waiting = false, pendingSnapshot = 0] channel=participation-trophy node=1
[e][OrdererOrg.orderer2] 2020-08-15 14:01:12.602 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 059 Sending msg of 28 bytes to 1 on channel participation-trophy took 13.823µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:13.100 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 08a Sending msg of 28 bytes to 3 on channel participation-trophy took 107.128µs
[e][OrdererOrg.orderer1] 2020-08-15 14:01:13.100 EDT [orderer.consensus.etcdraft] send -> INFO 08b Successfully sent StepRequest to 3 after failed attempt(s) channel=participation-trophy node=1
[e][OrdererOrg.orderer1] 2020-08-15 14:01:13.100 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 08c Sending msg of 28 bytes to 2 on channel participation-trophy took 7.153µs
[e][OrdererOrg.orderer3] 2020-08-15 14:01:13.100 EDT [comm.grpc.server] 1 -> INFO 03b streaming call completed grpc.service=orderer.Cluster grpc.method=Step grpc.peer_address=127.0.0.1:59031 grpc.peer_subject=""CN=orderer1.example.com,L=San Francisco,ST=California,C=US"" error=""channel participation-trophy doesn't exist"" grpc.code=Unknown grpc.call_duration=166.345µs
[e][OrdererOrg.orderer2] 2020-08-15 14:01:13.100 EDT [orderer.consensus.etcdraft] consensusSent -> DEBU 05a Sending msg of 28 bytes to 1 on channel participation-trophy took 19.855µs
[e][OrdererOrg.orderer3] 2020-08-15 14:01:13.578 EDT [orderer.common.cluster.puller] fetchLastBlockSeq -> INFO 03c 127.0.0.1:26000 is at block sequence of 3 channel=participation-trophy
[e][OrdererOrg.orderer1] 2020-08-15 14:01:13.578 EDT [comm.grpc.server] 1 -> INFO 08d streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Deliver grpc.peer_address=127.0.0.1:59324 grpc.peer_subject=""CN=orderer3.example.com,L=San Francisco,ST=California,C=US"" error=""context finished before block retrieved: context canceled"" grpc.code=Unknown grpc.call_duration=1.097729ms
[e][OrdererOrg.orderer2] 2020-08-15 14:01:13.579 EDT [comm.grpc.server] 1 -> INFO 05b streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Deliver grpc.peer_address=127.0.0.1:59323 grpc.peer_subject=""CN=orderer3.example.com,L=San Francisco,ST=California,C=US"" error=""context finished before block retrieved: context canceled"" grpc.code=Unknown grpc.call_duration=1.108355ms
[e][OrdererOrg.orderer3] 2020-08-15 14:01:13.579 EDT [orderer.common.cluster.puller] fetchLastBlockSeq -> INFO 03d 127.0.0.1:26004 is at block sequence of 3 channel=participation-trophy
[e][OrdererOrg.orderer3] 2020-08-15 14:01:13.579 EDT [orderer.common.cluster.puller] connectToSomeEndpoint -> INFO 03e Connected to 127.0.0.1:26004 with last block seq of 3 channel=participation-trophy
[e][OrdererOrg.orderer3] 2020-08-15 14:01:13.579 EDT [orderer.common.cluster.puller] obtainStream -> INFO 03f Sending request for block [3] to 127.0.0.1:26004 channel=participation-trophy
[e][OrdererOrg.orderer3] 2020-08-15 14:01:13.580 EDT [orderer.common.cluster.puller] pullBlocks -> INFO 040 Got block [3] of size 23 KB from 127.0.0.1:26004 channel=participation-trophy
[e][OrdererOrg.orderer1] 2020-08-15 14:01:13.597 EDT [orderer.consensus.etcdraft] Check -> DEBU 08e Current active nodes in cluster are: [1 2] channel=participation-trophy node=1 {code}
You can see the leader initially reports the active nodes as [1 2 3] and then follows it up by reporting the active nodes of [1 2]. 

 

This causes problems when attempting to determine when a newly added consenter is truly active. Subsequent attempts to, for example, remove a consenter result in an incorrect failure:
{code:java}
[e][OrdererOrg.orderer2] 2020-08-15 15:15:10.135 EDT [orderer.common.broadcast] ProcessMessage -> WARN 066 [channel: participation-trophy] Rejecting broadcast of config message from 127.0.0.1:63134 because of error: error applying config update to existing channel 'participation-trophy': consensus metadata update for channel config update is invalid: 2 out of 3 nodes are alive, configuration will result in quorum loss {code}",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,FAB-18031,,,,,,,,,,FAB-14799,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fln:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/20 6:13 AM;wlahti;[https://github.com/hyperledger/fabric/pull/1734];;;","18/Aug/20 2:02 AM;wlahti;Abandoning in favor of a higher level approach to determine when the node is active.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer does not honor environment overrides with CORE_PEER_BCCSP_*,FAB-18168,45835,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,sykesm,sykesm,18/Aug/20 1:55 AM,12/Oct/20 11:16 AM,28/Oct/23 3:09 AM,12/Oct/20 11:16 AM,v1.4.8,v2.2.0,,,,,,,,,,fabric-common,fabric-peer,,,0,,,,,,"After configuring the default provider to PKCS11 in {{core.yaml}}, setting {{CORE_PEER_BCCSP_DEFAULT=SW}} is not honored. This is yet another one of those side-effects of the interplay between configuration documents, mapstructure, and viper.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17969,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fmb:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DevMode - Modify chaincode endorsement to support DevMode,FAB-18169,45836,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dereckluo,dereckluo,dereckluo,18/Aug/20 5:25 AM,09/Sep/20 10:32 PM,28/Oct/23 3:09 AM,29/Aug/20 12:42 AM,,,,,,,v2.2.1,v2.3.0,,,,,,,,0,ipm,operator,,,,"In order to support DevMode with new lifecycle, chaincode endorsement info need to be slightly modified. 

As when developer running the DevMode, chaincode will be launched by developer, and it will not be installed and launched by peer. When `CachedChaincodeInfo`, `InstallInfo` will be missing when DevMode is enabled, and this behavior need to be handled and returned correctly. 

 

Acceptance:
 * Have correct behavior for `CachedChaincodeInfo` and `ChaincodeEndorsementInfo` when DevMode is enabled.
 * Have unit test coverage to test behavior of `ChaincodeEndorsementInfoSource` when DevMode is enabled.",,dereckluo,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18120,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohe",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dereckluo,wlahti,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Aug/20 5:42 AM;dereckluo;[https://github.com/hyperledger/fabric/pull/1688];;;","28/Aug/20 2:37 AM;wlahti;Merged into master. Determining if we should backport this along with the devmode integration test to release-2.2 before closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Endorsement policy page discusses NodeSDK,FAB-18170,45837,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,harrisob@us.ibm.com,harrisob@us.ibm.com,18/Aug/20 7:45 AM,13/Jan/21 10:27 PM,28/Oct/23 3:09 AM,13/Jan/21 10:27 PM,v2.1.0,,,,,,,,,,,fabric-docs,,,,0,,,,,,"[https://hyperledger-fabric.readthedocs.io/en/release-2.2/endorsement-policies.html]

The following from the ""Setting chaincode-level endorsement policies"" is not currently valid
{quote}You can specify an endorsement policy for a chaincode using the Fabric SDKs. For an example, visit the [How to install and start your chaincode|https://hyperledger.github.io/fabric-sdk-node/master/tutorial-chaincode-lifecycle.html] in the Node.js SDK documentation.
{quote}
 

also locate ""or the SDK,"" to be removed

 

This support might be someday, there is talk of adding a ""fabric-admin""",,harrisob@us.ibm.com,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fmj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,pandrejko,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.3,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Jan/21 6:17 AM;pandrejko;PR: https://github.com/hyperledger/fabric/pull/2268;;;","13/Jan/21 10:27 PM;pandrejko;Merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Certificate expiration - Allow looser matching on orderer TLS consenter certs,FAB-18171,45841,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,jyellick,jyellick,18/Aug/20 11:14 PM,22/Feb/22 12:40 PM,28/Oct/23 3:09 AM,25/Aug/20 10:32 PM,,,,,,,v1.4.9,v2.2.1,v2.3.0,,,fabric-orderer,,,,0,ipm,operator,,,,"排序者的群集服务通过 X.509 TLS 证书标识群集中的其他许可者。它执行一个字节，用于将提供给 TLS 连接的证书与从通道配置中知道的 TLS 证书进行比较。

不幸的是，这使得轮换证书变得非常具有挑战性，尤其是在处理良性过期而不是密钥泄露时。由于订购者可能是许多通道的成员，因此为了轮换排序者的TLS证书，通常必须停止，更改TLS证书，更改所有通道以识别新的TLS证书，然后重新启动。对于数十个或数百个通道的成员的订购者，通道配置更新可能需要相当长的时间，并且执行起来非常复杂（需要从多方收集签名等）。

如果 TLS 证书的私钥仍然安全，但只有颁发的证书即将过期，则应可以基于相同的公钥/私钥对颁发新的 TLS 证书，但具有新的有效到期日期。在这种情况下，我们可以通过放宽连接验证来避免通道配置更新和相关的复杂性，以仅检查证书的公钥，而不是整个证书字节集。这应该仍然是安全的，因为只有身份的所有者才能创建（和使用）具有相应公钥字节的新证书，并且它将允许排序器简单地使用新证书重新启动，而不是要求跨所有通道进行通道配置更新。

验收标准：我们应该能够启动基于 Raft 的网络（只有系统通道才可以），停止一个节点，使用相同的私钥续订其证书，然后重新启动该节点。节点应作为许可方集的一部分恢复同意，而无需重新配置通道。",,jyellick,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18172,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fn7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,yacovm,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Aug/20 6:16 PM;yacovm;https://github.com/hyperledger/fabric/pull/1771;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow looser matching on orderer TLS consenter certs,FAB-18172,45842,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,jyellick,jyellick,18/Aug/20 11:15 PM,18/Aug/20 11:26 PM,28/Oct/23 3:09 AM,18/Aug/20 11:26 PM,,,,,,,v2.2.1,v3.0.0,,,,fabric-orderer,,,,0,ipm,,,,,"The orderer's cluster service identifies other consenters in the cluster by X.509 TLS certificate.  It performs a byte for byte comparison of the certificate presented to the TLS connection compared to the TLS certificate it is aware of from the channel configuration.

Unfortunately, this makes rotating certificates quite challenging, especially when dealing with benign expiration, rather than key compromise. Because an orderer may be a member of many channels, in order to rotate an orderer's TLS certificate, it must usually be stopped, have the TLS certificate changed, change all channels to recognize the new TLS certificate, and then be restarted. For an orderer which is a member of dozens or hundreds of channels, the channel config updates could take quite a while, and be quite complex to perform (requiring gathering signatures from multiple parties etc.).

In the case where the private key of the TLS certificate is still secure, but only the issued certificate is expiring, it should be possible to issue a new TLS certificate based on the same public/private keypair, but with a new valid expiration date. In this case, we can avoid the channel configuration updates and associated complexity by relaxing the connection validation to inspect only the public key of the certificate, and not the entire set of certificate bytes. This should still be safe as only the owner of the identity can create (and use) a new certificate with the corresponding public key bytes, and it will allow the orderer to simply be restarted with the new certificate, rather than requiring channel config updates across all channels.

Acceptance criteria: We should be able to start a Raft based network (system channel only is fine), stop one node, renew its certificate with the same private key, and restart that node. The node should resume consenting as part of the consenter set without channel reconfiguration.",,jyellick,mplisov,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18171,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fnf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,mplisov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Data privacy within a peer which has different users,FAB-18174,45904,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Won't Do,,Vgkmanju,Vgkmanju,19/Aug/20 8:07 PM,19/Aug/20 10:23 PM,28/Oct/23 3:09 AM,19/Aug/20 10:23 PM,,,,,,,,,,,,,,,,0,,,,,,"In hyperledger fabric, consider peer0.org1 contains 5 users. How can we maintain data privacy among these users?

Example: peer0.org1 has user1,  user2, user3, user4 and user5. All the users don't want to share their the data with others. If one of the user, took ledger backup of the peer, then that user will get all the data present in the ledger. In this case, how to maintain data privacy?

 ",,btl5037,Vgkmanju,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fpn:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,Vgkmanju,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Aug/20 10:23 PM;btl5037;This question is better suited for RocketChat (chat.hyperledger.org) or the Mailing List (fabric@lists.hyperledger.org). Jira is used for raising bugs, not general knowledge questions.

Thank you
 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Certificate expiration - Permit peer CLI to use expired certificates,FAB-18175,45908,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,sstone1,sstone1,20/Aug/20 12:37 AM,14/Sep/20 11:28 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-cli,,,,0,ipm,operator,,,,"If your admin certificate expires, and you are not using NodeOU support, then you must submit a config update transaction using the old admin certificate to add the new admin certificate to your MSP definition on the channel. 

There is a setting on the orderer that stops the orderer from rejecting expired admin certificates, but the peer CLI rejects the use of expired admin certificates to submit the transaction. Some of the SDKs, for example the Node.js SDK, do not perform expiry checking and can be used to submit the transaction - however the SDKs cannot be used everywhere, unlike the CLI.

Can we get a flag/environment variable/etc on the peer CLI so it does not perform the expiry checks when submitting transactions?",,denyeart,sstone1,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18205,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fvc:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,sstone1,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/20 10:32 PM;wlahti;Note to implementer: we should also consider adding this to the configtx library.;;;","10/Sep/20 1:38 AM;denyeart;Due to the complex initialization path, having a config option to disable the peer CLI cert expiration check is not viable in the short term. Removing from v2.2.1.
Note that complete removal of cert expiration checks (without a config option) is fairly trivial, if somebody needs to build their own peer CLI binary in the short term.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide PKCS11 on docker images,FAB-18176,45909,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,vieiramanoel,vieiramanoel,20/Aug/20 2:01 AM,20/Aug/20 12:34 PM,28/Oct/23 3:09 AM,,v1.4.6,v2.0.1,v2.1.0,,,,,,,,,,,,,1,,,,,,"Hello, I've been around a couple of years by now and there's one discussion I didn't understand until now:
For an enterprise environment, pkcs11 is highly necessary, yet we need to keep a fork in order to modify images and make sure compiled peer/orderer has been built with properly tags (as you can install lib on a start script the presence of the lib in the image is not in my concern here). 
Why can't we provide images built with pkcs11 in the fabric's registry? ",,btl5037,msarres,vieiramanoel,,,,,,,,,,,,,,,,,,,,,,FAB-6161,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fqr:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,msarres,vieiramanoel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Aug/20 12:34 PM;btl5037;I think the part that often goes missing is that the fabric registry is not a location for retrieving production ready images. The images in our registry are only meant to support the Fabric-Samples (https://github.com/hyperledger/fabric-samples) repo, and thus they only contain the necessary components for running these samples.

We document on the fabric-peer Dockerhub page that users should maintain their own images for production use cases or use cases outside the scope of Fabric-Samples. Invariably the question is why?

We do our best, but provide no guarantee that security patches will be applied to our open source images. With every release we update our images to the latest available software versions, but we provide no mitigations for unpatched security flaws. True production use cases are far more sensitive to timely security patches, and the only way to make sure the images are patched to an appropriate level for every use case, is for individual organizations to maintain their images themselves. If a critical CVE is published for something as simple as node.js, could your organization really wait a few weeks to a few months for open source to deliver you new images. For our images, we may not be sensitive to the CVE, because the images are for sample uses only, not production use cases.

 Hope this helps explain the reasoning behind why we don't publish additional images.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flake in registrar_test.go reveals bug in block_puller.go,FAB-18177,45911,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,20/Aug/20 5:08 PM,23/Aug/20 11:44 PM,28/Oct/23 3:09 AM,23/Aug/20 11:44 PM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,,,,,,"Both the registrar_test.go and the block_puller.go factory do not assign value to 

```go
cluster.BlockPuller{
   MaxPullBlockRetries
   ...
}
```

which may cause an endless loop [here|https://github.com/hyperledger/fabric/blob/3b62ca4080703c63e04c8d20b2c8ffe8fc79add3/orderer/common/cluster/deliver.go#L143]

Solution is to initialize a non zero value.
In addition, when a follower is started in registrar_test.go, it must be stopped, otherwise the go-routine will run until  the process exits.",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i01fr7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation for Channel Participation API,FAB-18178,45916,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,pandrejko,pandrejko,21/Aug/20 9:23 PM,04/Dec/20 4:39 AM,28/Oct/23 3:09 AM,04/Dec/20 4:39 AM,v2.3.0,,,,,,,,,,,fabric-docs,,,,0,,,,,,"In addition to documenting this new feature, we need to decide what to do about the all the existing documentation around the requirement for a system channel:

Key concepts:
 *  Capabilities capabilities_concept.md

 - Membership membership/membership.md
 - Blockchain network network/network.html
 - Policies policies/policies.md

Arch ref:
 - Defining capability requirements capability_requirements.rst

Command ref:
 - Configtxgen commands/configtxgen.md

Tutorials
 - Updating a channel configuration config_update.md
 - Creating a channel create_channel..md
 - Using configtx.yaml to build a channel configuration create_channel_config.md
 - Using the Fabric test network test_network.md
 -

Operations Guides
 - Channel configuration (configtx) configtx.rst
 - Migrating from Kafka to Raft kafka_raft_migration.md
 - Membership service providers msp.rst
 - Setting up an ordering node orderer_deploy.md
 - Configuring and operating a Raft ordering service raft_configuration.md
 -

Upgrading to the latest release
 - Upgrading to the latest release upgrade.rst
 - Enabling the new chaincode lifecycle enable_cc_lifecycle.md
 - Updating the capability level of a channel updating_capabilities.md
 - Considerations for getting to v2.x upgrade_to_newest_version.md

 

FAQ
 - Fabric-FAQ.html

 

------------------------------------

*Fabric v2.3 MVP doc*

*Concept*: TBD best effort

*Task*: Tutorials
 - New: Creating a channel create_channel..md
 - Potentially update: Using configtx.yaml to build a channel configuration create_channel_config.md

*Reference*: New CLI doc in the Command reference section (auto generated using similar pattern as peer chaincode CLI)

 ",,pandrejko,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00wur:0iqs",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),pandrejko,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Sep/20 6:43 PM;tock;Here us a link to the REST API design document: 

https://docs.google.com/document/d/1kYoicS_Z59gNvmuuB7VFZ6WsOL31C34dWMeOFQiIygA/edit?usp=sharing;;;","24/Sep/20 4:10 AM;pandrejko;From Will: {color:#1d1c1d}The peers will still join channels using the peer CLI. The orderers will create channels using the new API instead of the old way, which relied on {color}{{peer channel create}}{color:#1d1c1d} to trigger the channel creation using the system channel and then return the join block to the peer.{color};;;","14/Oct/20 4:48 AM;pandrejko;Google doc for proposed strategy:
https://docs.google.com/document/d/1OGDb43CNkBzHWVonPI5kphATWb_iOFV5Hc7rkDXsyX4/edit?usp=sharing;;;","09/Nov/20 10:06 PM;pandrejko;CR started here: https://github.com/hyperledger/fabric/pull/2081;;;","16/Nov/20 9:50 PM;pandrejko;There were issues with squashing the commits so a new PR was created with a single commit [https://github.com/hyperledger/fabric/pull/2127]
and merged.;;;","04/Dec/20 4:39 AM;pandrejko;{quote}
h1. Closing this issue as Remove references to system channel work is being covered by this Jira https://jira.hyperledger.org/browse/FAB-18342
{quote};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Ledger Snapshot,FAB-18179,45917,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,pandrejko,pandrejko,21/Aug/20 9:43 PM,16/Nov/20 12:57 PM,28/Oct/23 3:09 AM,16/Nov/20 12:57 PM,v2.3.0,,,,,,v2.x,,,,,fabric-docs,,,,0,,,,,,,,manish-sethi,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-106,,,No,,Unset,No,,,"1|i00wur:0idqxy",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,pandrejko,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Oct/20 3:09 AM;pandrejko;Source content RFC: https://github.com/hyperledger/fabric-rfcs/pull/27/files

Demo from Contributors call: [https://wiki.hyperledger.org/download/attachments/31196145/20200819_contributors_meeting.mp4?api=v2]

 

Doc updates:
1. Command reference - Wenjian to submit updates for the new peer command [https://hyperledger-fabric.readthedocs.io/en/latest/command_ref.html]

2. Operations Guide

3. Identify other docs that are impacted. For example, peer key concept where it talks about how a peer joins a channel.;;;","08/Oct/20 6:27 AM;pandrejko;Google doc started here: https://docs.google.com/document/d/1FHogrxNgKQH8QDdXg9ICXdKlYvLUprqQLiOxf_w9QDU/edit?usp=sharing;;;","09/Nov/20 1:26 PM;manish-sethi;PR for snapshot operations guide - https://github.com/hyperledger/fabric/pull/2043
PR for snapshot commands reference doc - https://github.com/hyperledger/fabric/pull/2004;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
snapshot test,FAB-18180,45918,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,dongming,dongming,21/Aug/20 11:32 PM,11/Jan/21 1:31 AM,28/Oct/23 3:09 AM,11/Jan/21 1:31 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,Snapshot is a new fabric feature to solve the time and resource inefficiencies in transferring and processing the blocks for bootstrapping a new peer node. ,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-2,,snapshot-test,To Do,No,,Unset,No,,,"1|i01fsj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
snapshot test: snapshot generation,FAB-18181,45919,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,dongming,dongming,21/Aug/20 11:34 PM,11/Jan/21 1:31 AM,28/Oct/23 3:09 AM,11/Jan/21 1:31 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,"The purpose of this test is to verify all peers generate the same snapshots atomically.

Test steps:
 * Create a network and submit transactions that include private data
 * Invoke {{SubmitSnapshotRequest}} API on multiple peers
 * Verify that the snapshot generated across peers is exactly same
 * Verify that the snapshot is generated atomically",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-18180,,,No,,Unset,No,,,"1|i01fsr:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
snapshot test: join an existing peer to the channel,FAB-18182,45920,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,dongming,dongming,21/Aug/20 11:38 PM,11/Jan/21 1:31 AM,28/Oct/23 3:09 AM,11/Jan/21 1:31 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,"This task is to join an existing peer to the channel with snapshot 
 * Create a network with two orgs, Org1 and Org2 and two channels, channel-1, and channel-2
 * Org1.Peer1 joins only in channel-1, Org1.Peer2 joins both in channel-1 and channel-2
 * Commit some transactions to channel-2, including private data
 * Generate a snapshot for the channel-2 on Org1.Peer2
 * Join Org1.Peer1 to channel-2 using the previously generated snapshot
 * Verify the behavior as mentioned in the test 2 above",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-18180,,,No,,Unset,No,,,"1|i01fsz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bump sphinx in requirements.txt to v1.8.5,FAB-18183,45923,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tatsu-sato,tatsu-sato,tatsu-sato,22/Aug/20 10:30 AM,27/Aug/20 12:22 AM,28/Oct/23 3:09 AM,24/Aug/20 11:15 AM,,,,,,,v2.3.0,,,,,fabric-docs,,,,0,,,,,,"Currently, the sphinx version are not consistent between `docs/requirements.txt` and `docs/Pipfile`
 *  requirements.txt
 ** sphinx version: v1.7.2
 ** This file is supposed to be used to build the docs on ReadTheDocs
 * Pipfile
 ** sphinx version: v1.8.5
 ** This file is referred to by `docs/source/docs_guide.md` to build the docs locally.

 

I think the versions for local and ReadTheDocs build should be unified to avoid problems due to version differences.",,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ftn:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tatsu-sato,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting an endorsement policy generates errors in the autodiscovery service,FAB-18184,45924,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Environment Issue,,afrancoc2000,afrancoc2000,24/Aug/20 11:29 AM,28/Aug/20 2:39 AM,28/Oct/23 3:09 AM,28/Aug/20 2:32 AM,,,,,,,,,,,,,,,,0,,,,,,"I have an app in node.js with Hyperledger Fabric V1.4.4 with 2 organizations. Everything works well with the autodiscovery and with my contracts queries and invokes if I don't define an endorsement policy, butm when I do change my endorsement policy to enforce both organizations to endorse the contracts, the autodiscovery service doing a query generates an error, it returns the result but with an error at the beggining. and the invoke method fails with an endorsement error.",,afrancoc2000,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/20 10:37 PM;afrancoc2000;config-modified.json;https://jira.hyperledger.org/secure/attachment/18614/config-modified.json","26/Aug/20 9:23 AM;afrancoc2000;discovery-results.tst.txt;https://jira.hyperledger.org/secure/attachment/18609/discovery-results.tst.txt","26/Aug/20 9:39 AM;afrancoc2000;discovery-with-endorsement.json;https://jira.hyperledger.org/secure/attachment/18611/discovery-with-endorsement.json","26/Aug/20 9:39 AM;afrancoc2000;discovery-without-endorsement.json;https://jira.hyperledger.org/secure/attachment/18610/discovery-without-endorsement.json","27/Aug/20 1:32 AM;afrancoc2000;peer1-logs.txt;https://jira.hyperledger.org/secure/attachment/18613/peer1-logs.txt","26/Aug/20 11:45 PM;afrancoc2000;printenv.txt;https://jira.hyperledger.org/secure/attachment/18612/printenv.txt","26/Aug/20 2:31 AM;afrancoc2000;query-logs.txt;https://jira.hyperledger.org/secure/attachment/18607/query-logs.txt",,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ftv:",,,,Unset,Unset,,"I created a blockchain using the [azure hyperledger fabric template |https://docs.microsoft.com/en-us/azure/blockchain/templates/hyperledger-fabric-consortium-azure-kubernetes-service] with 3 clusters one for an orderer and 2 for 2 organizations.

Using the scripts provided by azure I installed my chaincode in both organizations and instantiate it [scripts|https://github.com/Azure/Hyperledger-Fabric-on-Azure-Kubernetes-Service/tree/master/application]

At this point everything is working ok.

Created a copy of the instantiate.js program and adapted it as an upgrade function instead of a instantiate one, and upgraded my contracts.

Still everything ok.

I attach how discovery results look like in: discovery-without-endoresement.json 

Weird thing its that my chaincode its installed in all the contracts but still they work.

Updated the function by adding an endorsement policy to the function this way: 

       var policy = {
            identities: [
              { role: { name: ""member"", mspId: ""org1"" }},
              { role: { name: ""member"", mspId: ""org2"" }},
            ],
            policy: {
              ""2-of"": [{ ""signed-by"": 0 }, { ""signed-by"": 1 }]
            }
        }

        // send proposal to endorser
        var request = {
            targets : peers,
            chaincodeId: ccName,
            chaincodeType: ccType,
            chaincodeVersion: ccVersion,
            fcn: ccFunc,
            args: ccArgs,
            txId: tx_id,
            'endorsement-policy': policy
        };
        let upgradeResponse = await channel.sendUpgradeProposal(request, 300000);
   ....

leaving the rest as the original, the upgrade response its successful but then when I do a query I get this error:

error: [Channel.js]: Channel:mychannel received discovery error:failed constructing descriptor for chaincodes:<name:""contract1"" >

Even that way I get an answer to the query, but doing an invoke fails with an endorsement policy error

error: [Channel.js]: Channel:mychannel received discovery error:failed constructing descriptor for chaincodes:<name:""mycontract"" >
error: [DiscoveryEndorsementHandler]: endorse - no endorsement plan found for {""chaincodes"":[{""name"":""contract1""}]}
    Failed to invoke chaincode due to error:  Error: No endorsement plan available for {""chaincodes"":[{""name"":""contract1""}]}
        at DiscoveryEndorsementHandler.endorse (D:\path-to-my-project\azure-cli\app\node_modules\fabric-client\lib\impl\DiscoveryEndorsementHandler.js:123:10) ? Error: No endorsement plan available for {""chaincodes"":[{""name"":""contract1""}]}

I attach how discovery results look like in: discovery-with-endoresement.json 

",,Unset,,,,,,Unset,,Unset,,(Please add usage information),afrancoc2000,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/20 8:34 PM;yacovm;Looks like peers across different organizations do not see each other.
 # Do you have anchor peers [defined in the chan|https://hyperledger-fabric.readthedocs.io/en/latest/gossip.html#anchor-peers]nel configuration?
# Do the peers have their [external endpoints|https://hyperledger-fabric.readthedocs.io/en/latest/gossip.html#external-and-internal-endpoints] configured? ;;;","25/Aug/20 1:03 AM;afrancoc2000;Yes I have anchor peers defined by name like this: peer1.org1 for org1 and peer1.org2 for peer 2. Do I need to define them by url like ""peer1.yyyyyyyyyyyyyyyy.eastus.aksapp.io:443""? or by name its ok? this is the way they are defined in their ccp files.

I also have the environment variable CORE_PEER_GOSSIP_EXTERNALENDPOINT defined like this: peer1.yyyyyyyyyyyyyyyy.eastus.aksapp.io:443.

 ;;;","25/Aug/20 4:45 AM;yacovm;{quote}Do I need to define them by url like ""peer1.yyyyyyyyyyyyyyyy.eastus.aksapp.io:443""? or by name its ok?
{quote}
by url, like the external endpoints;;;","25/Aug/20 12:31 PM;afrancoc2000;??by url, like the external endpoints??

Changed them but I'm still getting the same error. Setting the endorsement policy to both org1 and org2 results in a discovery error and the endorsement policy for the contract gets lost.;;;","25/Aug/20 5:20 PM;yacovm;OK when you get the error can you please use the [discovery CLI |https://hyperledger-fabric.readthedocs.io/en/latest/discovery-cli.html]and do a [membership query|https://hyperledger-fabric.readthedocs.io/en/latest/discovery-cli.html#peer-membership-query] on the peer you are using for discovery (which per is it?) and post the output here?;;;","26/Aug/20 2:30 AM;afrancoc2000;??OK when you get the error can you please use the [discovery CLI |https://hyperledger-fabric.readthedocs.io/en/latest/discovery-cli.html]and do a [membership query|https://hyperledger-fabric.readthedocs.io/en/latest/discovery-cli.html#peer-membership-query] on the peer you are using for discovery (which per is it?) and post the output here???

Thank you Yacov, I went inside the peer and tried the discover function but I'm getting a ""discover: command not found"" error, I don't see in the documentation a way to install it, is it in a specific folder? I am attaching the peer logs as query-logs.txt when I do a query, I can execute other commands like ""peer chaincode list"" but not the discover one.

 ;;;","26/Aug/20 4:22 AM;yacovm;download the [amd64 tar.gz|https://github.com/hyperledger/fabric/releases/tag/v1.4.8] according to the platform you're using, then go to the *bin* folder and you'll see a *discover* binary.;;;","26/Aug/20 9:24 AM;afrancoc2000;Thanks, It worked, this is the result: [^discovery-results.tst.txt];;;","26/Aug/20 9:28 AM;afrancoc2000;Also tried this one:
 discover -configFile conf.yaml endorsers channel mychannel  --server peer1.yyyyyyyyyy.eastus.aksapp.io:443 -chaincode contract1
  
 And I get this error: 
 server returned: failed constructing descriptor for chaincodes:<name:""contract1"" >;;;","26/Aug/20 9:34 AM;afrancoc2000;There is something weird in the discovery results I get using the nodejs channel.getDiscoveryResults() function, I can see org1 duplicated, once like org1 and a second one capitalized like this ORG1, all the same information, can that be the problem? I updated the files to reflect that;;;","26/Aug/20 6:22 PM;yacovm;OK so the problem is certainly that the peer does not see peers in other organizations. If it was seeing other peers you'd have them in the discovery results.

You need to check if you have anchor peers defined properly and if you have external endpoints defined for the peers.
 - For anchor peers - can you upload here the latest configuration block of the channel? ([peer channel fetch config|https://hyperledger-fabric.readthedocs.io/en/release-1.4/commands/peerchannel.html#peer-channel-fetch] command). Note - the configuration block contains x509 certificates which carry identifying information about your deployment so if you don't want it be uploaded to the internet you can use [configtxlator proto_decode|https://hyperledger-fabric.readthedocs.io/en/release-1.4/commands/configtxlator.html#configtxlator-proto-decode] to turn it into a JSON and then censor the sensitive information before you upload here the JSON file.

 - For external endpoints - in case you use docker or Kubernetes you can upload here the environment variables that the peers have when you they run, specifically the ones that have *GOSSIP_EXTERNALENDPOINT* in them.;;;","26/Aug/20 11:45 PM;afrancoc2000;Hi, I tried the *peer channel fetch* *config* from inside the pod and I'm getting this error:

2020-08-26 12:35:27.547 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
 2020-08-26 12:35:27.549 UTC [cli.common] readBlock -> INFO 002 Got status: &\{NOT_FOUND}
 Error: can't read the block: &\{NOT_FOUND}

I don't understand how my blockchain worked with this error, but I'm searching the web to see what it is.

this is the log when I ask for the *GOSSIP_EXTERNALENDPOINT* 

echo $CORE_PEER_GOSSIP_EXTERNALENDPOINT
 peer1.yyyyyyyyyyyyyy.eastus.aksapp.io:443

Here is a list of all the environment variables from inside the pod using printenv: [^printenv.txt]

 

 ;;;","27/Aug/20 12:23 AM;yacovm;what do the logs of the peer show when you get this NOT_FOUND error? And what is the exact command you used?;;;","27/Aug/20 12:30 AM;yacovm;Also if you can put all logs on debug [and upload them her|https://hyperledger-fabric.readthedocs.io/en/release-2.0/logging-control.html]e it can help.;;;","27/Aug/20 1:36 AM;afrancoc2000;I was looking on the web and found that some people recreate the channel, I can't do that because this I already have data there and its in use, so looking for a solution I updated the docker image to peer:1.4.8 and tried again with *peer channel fetch* *config* the error was the same and this are the logs I got: [^peer1-logs.txt] 

Looking at the logs I think the discovery service its trying to reach to the anchor peers and it can't find them because the address its wrong, I'm going to change them directly from the peer without using the function provided by azure.;;;","27/Aug/20 1:44 AM;yacovm;Yeah these errors indeed look like it can't reach them due to some reason.

 
{quote}
Looking at the logs I think the discovery service its trying to reach to the anchor peers and it can't find them because the address its wrong, I'm going to change them directly from the peer without using the function provided by azure.{quote}

To change the anchor peer you need to make a configuration update which changes anchor peers. 
Look [here|https://github.com/hyperledger/fabric-samples/blob/be3ce853dc6366deaac278323ce8429bfdde713f/test-network/scripts/createChannel.sh#L34-L49] and [here|https://github.com/hyperledger/fabric-samples/blob/release-1.4/first-network/scripts/utils.sh#L71-L91] for hints how to do it. ;;;","27/Aug/20 10:37 PM;afrancoc2000;Hi Yacob, after struggling for a while I managed to extract the config from my blockchain adding some variables to the peer channel fetch config like this: 
{code:java}
peer channel fetch config config_block.pb -o ${ORDERER_ADDRESS} -c $CHANNEL --tls --cafile ${ORDERER_TLS_CA} --clientauth --certfile $ADMIN_TLS_CERTFILE --keyfile $ADMIN_TLS_KEYFILE &> $LOG_FILE{code}
I think the anchor peers look fine, here is the config.json file: [^config-modified.json] do you see something wrong? thanks;;;","27/Aug/20 10:46 PM;afrancoc2000;The weird thing I keep seeing its the capitalized org1 I'm going to try to remove it from the channel;;;","27/Aug/20 11:23 PM;afrancoc2000;That and that the config its really nested, is it supposed to look like that?;;;","27/Aug/20 11:51 PM;yacovm;The config is always nested, it's supposed to represent a tree.

[~afrancoc2000] can you put all logs to debug and upload them here after censoring them? ;;;","28/Aug/20 2:18 AM;afrancoc2000;Hi Yacob, I changed the contract back to no endorsement policy, where I don't get a discovery error, added the endorsement policies again, killed the pod to change the environment variable to debug, started a new one and then everything, the discovery and the endorsement policy for 2 orgs started working :D

I think that when I changed the anchor peers to the host:port form the configuration was corrected but I needed to recreate the pod and/or restablish normal discovery behavior for it to reset.

Thank you very much for your help, I was really lost with this issue and I learned a lot with your guidance.

;;;","28/Aug/20 2:31 AM;yacovm;{quote}I think that when I changed the anchor peers to the host:port form the configuration was corrected but I needed to recreate the pod and/or restablish normal discovery behavior for it to reset.
{quote}
No, when you do anchor peer updates they take effect immediately without a restart. 

{quote}
Thank you very much for your help, I was really lost with this issue and I learned a lot with your guidance.{quote}

Sure, but we still don't know what was going on, and you didn't need to kill the pod to change the debug level, [you can do it dynamically with an HTTP call|https://hyperledger-fabric.readthedocs.io/en/release-1.4/operations_service.html#log-level-management]. I forgot to mention it and pointed you to the [logging control|https://hyperledger-fabric.readthedocs.io/en/release-2.0/logging-control.html] page which I thought mentioned this, but since I don't read the Fabric documentation myself I was wrong... 

Either way, I am closing this issue, please re-open it, or open a new one if the problem comes back. ;;;","28/Aug/20 2:39 AM;afrancoc2000;I've created an issue in the azure template for this to get corrected, [Azure Template|https://github.com/Azure/Hyperledger-Fabric-on-Azure-Kubernetes-Service/issues/15]. Thanks again.;;;",,,,,,,,,,,,,,,,,,,
Call ACLProvider.CheckACLNoChannel directly when there is no channel,FAB-18185,45928,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,wenjian,wenjian,25/Aug/20 11:31 AM,25/Aug/20 11:32 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"This is a follow up to the PR review discussion:  [https://github.com/hyperledger/fabric/pull/1791#discussion_r475417325]

In the referred PR, we added a CheckACLNoChannel func to ACLProvider interface. With this interface update, it may cause confusion due to inconsistent calling pattern:
 * if you work with SignedProposal and have no channel , existing code calls the CheckACL with channelID as an empty string
 * if you work with SignedData and have no channel, new code calls CheckACLNoChannel 

We should update the existing code to explicitly call CheckACLNoChannel when there is no channel.

 ",,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fur:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Include peer rebuild status into health check endpoint,FAB-18186,45932,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,varadatibm,varadatibm,26/Aug/20 12:10 AM,11/Jan/21 3:31 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-peer,,,,0,ipm,operator,,,,"We should include some of the status information into the health check endpoint. It would be helpful to know why the peer isn't responding. For example, when the peer is rebuilding, it would be good to know when querying the health check endpoint with `rebuilding` or some response. ",,denyeart,manish-sethi,varadatibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxqs",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,manish-sethi,varadatibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Nov/20 10:58 PM;manish-sethi;[~varadatibm]- if by rebuilding, you refer to reset/rollback, then we plan to deprecate these operations. Instead, we plan to introduce an option to unjoin the channel and then joining is a regular way - FAB-17801.;;;","10/Dec/20 5:21 AM;denyeart;Manish is correct that the strategic way will be to snapshot a good peer's channel and then re-join the channel from the good snapshot, as opposed to resetting all the bad peer's channels. However it will take some time for users to shift over to snapshot approach. Also in some situations there may be no 'good' snapshot to use as the basis.

 ;;;","10/Dec/20 5:22 AM;denyeart;[~sykesm]  the main question is whether we can include a JSON response in the 200/OK health check as well as in the 503, since the 503 would have other implications to the liveness check.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Back-porting Go Modules to 1.x,FAB-18187,45933,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,k93uwmrkxc3j5fr78wy7myj8k76p9c,k93uwmrkxc3j5fr78wy7myj8k76p9c,26/Aug/20 1:22 AM,27/Aug/20 8:19 AM,28/Oct/23 3:09 AM,27/Aug/20 8:19 AM,v1.x,,,,,,v1.4.9,,,,,fabric-build,fabric-release,fabric-sdk-go,,0,,,,,,"Is there any chance that the migration to go modules could be back-ported for the latest 1.x release (1.4.8 at the time of this writing)?

I want to write a chain code with the latest 1.x version, but really dislike the legacy package management of go and the need to manage $GOPATH and other env vars (personal preference).

If I understand it correctly all it would take is a single commit that adds a go.mod file on the 1.x branch and then a release of a minor version that gets tagged so go can pick it up as a version. Also happy to send a PR with this if people support the idea. Please advise.",,btl5037,k93uwmrkxc3j5fr78wy7myj8k76p9c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,,,No,,Unset,No,,,"1|i01fvf:",,,,Yes,Unset,,(Please add steps to reproduce),3.0,No,,,,,,Unset,,Unset,,(Please add usage information),btl5037,k93uwmrkxc3j5fr78wy7myj8k76p9c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/20 7:57 AM;btl5037;You can use modules in 1.4, you just have to end the process by vendoring, so it looks like this
{code:java}
export GO111MODULE=on
#This will pin on the latest 1.4 commit
go get github.com/hyperledger/fabric@f208ffeb4dfda3f520ae5e481ebe0b58230addab 
go mod tidy
go mod vendor
{code}
This will use modules to version and manage your dependencies, but provide them in the traditional vendor folder. The only difference between this and 2.0 Fabric is in 2.0 you don't have to explicitly have the vendor directory, as we will use modules to pull that in. So you get all the benefits of modules, minus the disk overhead of the vendor directory on your local machine.;;;","27/Aug/20 8:01 AM;btl5037;The commit you chose would only enable using Go Mod to version the shim and protos in your Chaincode, which would still need to be vendored anyway, as we don't provide support for module based chaincode in 1.4. Essentially you picked the wrong commit to backport, you wanted one from sometime last year which has a much smaller surface area and enhances the chaincode launch process to use Go Modules, not Fabric itself.

That being said, this isn't something we would target for backporting. We don't backport features, only bug fixes and security fixes, especially into an LTS branch where we guarantee backwards compatibily and stability. There is too much danger in backporting unnecessary changes that would be applied against running production networks. This isn't something we would consider for backport even with the right commits chosen.

While we understand the desire for it, it's just out of place for backport, especially with approximately 6 months until 1.4 is end of life.;;;","27/Aug/20 8:17 AM;k93uwmrkxc3j5fr78wy7myj8k76p9c;Thank you very much for the detailed explanation and the guide as well [~btl5037] I understand completely.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Certificate expiration - Log orderer and peer cert expiration date upon startup,FAB-18188,45935,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,26/Aug/20 7:20 AM,09/Sep/20 11:27 PM,28/Oct/23 3:09 AM,27/Aug/20 1:46 AM,,,,,,,v1.4.9,v2.0.2,v2.1.2,v2.2.1,v2.3.0,fabric-orderer,fabric-peer,,,0,operator,,,,,"FAB-17000 added a warning if expiration is within a week.

This story will additionally info log the future enrollment, tls server, and tls client cert expiration dates upon startup, regardless of whether it will expire within a week or not.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17000,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fvn:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.2,release-2.5,release-2.4,release-2.1,main,release-2.0,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Aug/20 11:41 AM;denyeart;https://github.com/hyperledger/fabric/pull/1804;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric-cli to SDK v1.0.0-beta3,FAB-18189,45938,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,26/Aug/20 10:37 PM,26/Aug/20 10:50 PM,28/Oct/23 3:09 AM,26/Aug/20 10:50 PM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fwb:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HLF on kubernetes with default levelDB,FAB-18190,45939,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid: Environment Issue,,brunop,brunop,27/Aug/20 12:08 AM,12/Oct/20 11:14 AM,28/Oct/23 3:09 AM,12/Oct/20 11:14 AM,,,,,,,,,,,,,,,,0,,,,,,"Hi 

I have 4 organizations with 2 peer for each organizations after 37 days I got error on some peer, the peer go down and cannot go Running. This is the error:

2020-08-26 14:38:44.137 UTC [nodeCmd] serve -> INFO 001 Starting peer:
 Version: 1.4.7
 Commit SHA: e0afaa741
 Go version: go1.13.8
 OS/Arch: linux/amd64
 Chaincode:
 Base Image Version: 0.4.20
 Base Docker Namespace: hyperledger
 Base Docker Label: org.hyperledger.fabric
 Docker Namespace: hyperledger
2020-08-26 14:38:44.138 UTC [ledgermgmt] initialize -> INFO 002 Initializing ledger mgmt
2020-08-26 14:38:44.138 UTC [kvledger] NewProvider -> INFO 003 Initializing ledger provider
2020-08-26 14:38:53.207 UTC [kvledger] NewProvider -> INFO 004 ledger provider Initialized
*{color:#FF0000}panic: Error opening leveldb: remove /var/hyperledger/production/ledgersData/chains/index/105161.ldb: no such file or directory{color}*

goroutine 1 [running]:
github.com/hyperledger/fabric/common/ledger/util/leveldbhelper.(*DB).Open(0xc00013a5c0)
 /opt/gopath/src/github.com/hyperledger/fabric/common/ledger/util/leveldbhelper/leveldb_helper.go:80 +0x287
github.com/hyperledger/fabric/common/ledger/util/leveldbhelper.NewProvider(0xc000125340, 0xc000125340)
 /opt/gopath/src/github.com/hyperledger/fabric/common/ledger/util/leveldbhelper/leveldb_provider.go:40 +0xda
github.com/hyperledger/fabric/common/ledger/blkstorage/fsblkstorage.NewProvider(0xc000122960, 0xc000122140, 0x1a5e1e0, 0x25eb200, 0x20, 0xc00013a580)
 /opt/gopath/src/github.com/hyperledger/fabric/common/ledger/blkstorage/fsblkstorage/fs_blockstore_provider.go:36 +0xc9
github.com/hyperledger/fabric/core/ledger/ledgerstorage.NewProvider(0x1a5e1e0, 0x25eb200, 0x2)
 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgerstorage/store.go:54 +0xe5
github.com/hyperledger/fabric/core/ledger/kvledger.(*Provider).Initialize(0xc00010c1b0, 0xc0001ca360, 0x0, 0x0)
 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:91 +0x1e0
github.com/hyperledger/fabric/core/ledger/ledgermgmt.initialize(0xc0001499e0)
 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:73 +0x4a4
github.com/hyperledger/fabric/core/ledger/ledgermgmt.Initialize.func1()
 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:53 +0x2a
sync.(*Once).doSlow(0x25eb2f0, 0xc0001493f8)
 /opt/go/src/sync/once.go:66 +0xe3
sync.(*Once).Do(...)
 /opt/go/src/sync/once.go:57
github.com/hyperledger/fabric/core/ledger/ledgermgmt.Initialize(0xc0001499e0)
 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:52 +0x69
github.com/hyperledger/fabric/peer/node.serve(0x25eb200, 0x0, 0x0, 0x0, 0x0)
 /opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:183 +0x530
github.com/hyperledger/fabric/peer/node.glob..func3(0x24cba20, 0x25eb200, 0x0, 0x0, 0x0, 0x0)
 /opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:126 +0x9c
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0x24cba20, 0x25eb200, 0x0, 0x0, 0x24cba20, 0x25eb200)
 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:762 +0x460
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x24cc140, 0xc000149f28, 0x1, 0x1)
 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:852 +0x2ea
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(...)
 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:800
main.main()
 /opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:53 +0x418

 

Can you help me ?

Thanks in advance

Paolo Bruno",,brunop,btl5037,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fwj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),brunop,btl5037,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/20 8:11 AM;btl5037;How are you running the peer, in Docker, in Kube. Either way, did you mount persistent storage to these locations. It looks like the peer restarted and there was no persistent storage (thus data loss) and the file is missing.

That being said, you will get much more support using either RocketChat (chat.hyperledger.org) or the mailing list as Jira is for bug tracking, not support requests. You will get thousands of users to help you rather than the very small subset of us who monitor Jira.;;;","12/Oct/20 11:14 AM;denyeart;Closing due to lack of response. I encourage you to use RocketChat or mailing list to troubleshoot, but feel free to re-open if you think there is a Fabric bug.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade - peer node upgrade-dbs command fails if entire database directory cannot be deleted,FAB-18191,45941,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,wenjian,dbshah,dbshah,27/Aug/20 6:08 AM,30/Sep/20 1:59 AM,28/Oct/23 3:09 AM,03/Sep/20 1:39 AM,v2.1.1,,,,,,v2.2.1,v2.3.0,,,,fabric-ledger,fabric-peer,,,0,operator,,,,,"When running upgrade-dbs command on peer, the command seems to be trying to delete the directory */data/peer/ledgersData/stateLeveldb*. When running in production loads for a leveldb peer, the stateleveldb directory would probably be a mounted directory, which means that the directory cannot be deleted but the contents of the directory can be. Can the code be changed to accomodate the mounted directory scenario?

 

Example error from a run:
{noformat}
...
2020-08-26 20:07:57.958 UTC [msp] setupSigningIdentity -> DEBU 019 Signing identity expires at 2030-08-24 19:57:00 +0000 UTC
2020-08-26 20:07:57.976 UTC [kvledger.util] CreateDirIfMissing -> DEBU 01a CreateDirIfMissing [/data/peer/ledgersData/fileLock/]
2020-08-26 20:07:57.976 UTC [kvledger.util] logDirStatus -> DEBU 01b Before creating dir - [/data/peer/ledgersData/fileLock/] exists
2020-08-26 20:07:57.976 UTC [kvledger.util] logDirStatus -> DEBU 01c After creating dir - [/data/peer/ledgersData/fileLock/] exists
2020-08-26 20:07:58.111 UTC [kvledger] UpgradeDBs -> INFO 01d Ledger data folder from config = [/data/peer/ledgersData]
2020-08-26 20:07:58.111 UTC [kvledger] UpgradeIDStoreFormat -> DEBU 01e Attempting to upgrade idStore data format to current format 2.0
2020-08-26 20:07:58.111 UTC [kvledger.util] CreateDirIfMissing -> DEBU 01f CreateDirIfMissing [/data/peer/ledgersData/ledgerProvider/]
2020-08-26 20:07:58.111 UTC [kvledger.util] logDirStatus -> DEBU 020 Before creating dir - [/data/peer/ledgersData/ledgerProvider/] exists
2020-08-26 20:07:58.111 UTC [kvledger.util] logDirStatus -> DEBU 021 After creating dir - [/data/peer/ledgersData/ledgerProvider/] exists
2020-08-26 20:07:58.265 UTC [kvledger] upgradeFormat -> DEBU 022 Format is current, nothing to do
2020-08-26 20:07:58.265 UTC [kvledger] dropStateLevelDB -> INFO 023 Dropping StateLevelDB at location [/data/peer/ledgersData/stateLeveldb] ...if present
Error: unlinkat /data/peer/ledgersData/stateLeveldb: device or resource busy
Usage:
peer node upgrade-dbs [flags]
 
Flags:
-h, --help help for upgrade-dbs{noformat}
 

Example docker run to explain the problem:
{noformat}
$ docker run -it -v ${PWD}/data:/data/peer/ledgersData/stateLeveldb -e CORE_PEER_FILESYSTEMPATH=/data/peer hyperledger/fabric-peer:2.1.1 sh
/ # peer node start
2020-08-26 21:06:15.141 UTC [nodeCmd] serve -> INFO 001 Starting peer:
 Version: 2.1.1
 Commit SHA: 6393adb
 Go version: go1.14.1
 OS/Arch: linux/amd64
 Chaincode:
  Base Docker Label: org.hyperledger.fabric
  Docker Namespace: hyperledger
2020-08-26 21:06:15.141 UTC [peer] getLocalAddress -> INFO 002 Auto-detected peer address: 172.17.0.3:7051
2020-08-26 21:06:15.141 UTC [peer] getLocalAddress -> INFO 003 Host is 0.0.0.0 , falling back to auto-detected address: 172.17.0.3:7051
2020-08-26 21:06:15.152 UTC [nodeCmd] initGrpcSemaphores -> INFO 004 concurrency limit for endorser service is 2500
2020-08-26 21:06:15.152 UTC [nodeCmd] initGrpcSemaphores -> INFO 005 concurrency limit for deliver service is 2500
2020-08-26 21:06:15.166 UTC [ledgermgmt] NewLedgerMgr -> INFO 006 Initializing LedgerMgr
2020-08-26 21:06:15.183 UTC [leveldbhelper] openDBAndCheckFormat -> INFO 007 DB is empty Setting db format as 2.0
2020-08-26 21:06:15.184 UTC [fsblkstorage] NewProvider -> INFO 008 Creating new file ledger directory at /data/peer/ledgersData/chains/chains
2020-08-26 21:06:15.194 UTC [leveldbhelper] openDBAndCheckFormat -> INFO 009 DB is empty Setting db format as 2.0
2020-08-26 21:06:15.225 UTC [leveldbhelper] openDBAndCheckFormat -> INFO 00a DB is empty Setting db format as 2.0
2020-08-26 21:06:15.225 UTC [ledgermgmt] NewLedgerMgr -> INFO 00b Initialized LedgerMgr
2020-08-26 21:06:15.236 UTC [gossip.service] New -> INFO 00c Initialize gossip with endpoint 172.17.0.3:7051
2020-08-26 21:06:15.239 UTC [gossip.gossip] New -> INFO 00d Creating gossip service with self membership of Endpoint: , InternalEndpoint: 172.17.0.3:7051, PKI-ID: 0d46737a45894d123895671221dbaddf8480fb0364f404be3aed491df442945f, Metadata: 
2020-08-26 21:06:15.239 UTC [gossip.gossip] New -> WARN 00e External endpoint is empty, peer will not be accessible outside of its organization
2020-08-26 21:06:15.240 UTC [gossip.gossip] start -> INFO 00f Gossip instance 172.17.0.3:7051 started
2020-08-26 21:06:15.240 UTC [lifecycle] InitializeLocalChaincodes -> INFO 010 Initialized lifecycle cache with 0 already installed chaincodes
2020-08-26 21:06:15.240 UTC [nodeCmd] computeChaincodeEndpoint -> INFO 011 Entering computeChaincodeEndpoint with peerHostname: 172.17.0.3
2020-08-26 21:06:15.241 UTC [nodeCmd] computeChaincodeEndpoint -> INFO 012 Exit with ccEndpoint: 172.17.0.3:7052
2020-08-26 21:06:15.241 UTC [nodeCmd] createChaincodeServer -> WARN 013 peer.chaincodeListenAddress is not set, using 172.17.0.3:7052
2020-08-26 21:06:15.247 UTC [sccapi] DeploySysCC -> INFO 014 deploying system chaincode 'lscc'
2020-08-26 21:06:15.247 UTC [sccapi] DeploySysCC -> INFO 015 deploying system chaincode 'cscc'
2020-08-26 21:06:15.247 UTC [sccapi] DeploySysCC -> INFO 016 deploying system chaincode 'qscc'
2020-08-26 21:06:15.247 UTC [sccapi] DeploySysCC -> INFO 017 deploying system chaincode '_lifecycle'
2020-08-26 21:06:15.248 UTC [nodeCmd] serve -> INFO 018 Deployed system chaincodes
2020-08-26 21:06:15.248 UTC [discovery] NewService -> INFO 019 Created with config TLS: false, authCacheMaxSize: 1000, authCachePurgeRatio: 0.750000
2020-08-26 21:06:15.248 UTC [nodeCmd] registerDiscoveryService -> INFO 01a Discovery service activated
2020-08-26 21:06:15.248 UTC [nodeCmd] serve -> INFO 01b Starting peer with ID=[jdoe], network ID=[dev], address=[172.17.0.3:7051]
2020-08-26 21:06:15.248 UTC [nodeCmd] serve -> INFO 01c Started peer with ID=[jdoe], network ID=[dev], address=[172.17.0.3:7051]
2020-08-26 21:06:15.248 UTC [kvledger] LoadPreResetHeight -> INFO 01d Loading prereset height from path [/data/peer/ledgersData/chains]
2020-08-26 21:06:15.248 UTC [fsblkstorage] preResetHtFiles -> INFO 01e No active channels passed
^C2020-08-26 21:06:17.563 UTC [nodeCmd] func1 -> INFO 01f Received signal: 2 (interrupt)
2020-08-26 21:06:17.563 UTC [gossip.gossip] Stop -> INFO 020 Stopping gossip
2020-08-26 21:06:17.563 UTC [gossip.discovery] Stop -> INFO 021 Stopping
2020-08-26 21:06:17.563 UTC [gossip.discovery] Stop -> INFO 022 Stopped
2020-08-26 21:06:17.563 UTC [gossip.comm] Stop -> INFO 023 Stopping
2020-08-26 21:06:17.564 UTC [gossip.comm] Stop -> INFO 024 Stopped
/ # rm -rf /data/peer/ledgersData/
bookkeeper/      configHistory/   historyLeveldb/  pvtdataStore/
chains/          fileLock/        ledgerProvider/  stateLeveldb/
/ # rm -rf /data/peer/ledgersData/stateLeveldb
rm: can't remove '/data/peer/ledgersData/stateLeveldb': Resource busy
/ # 
/ # rm -rf /data/peer/ledgersData/stateLeveldb/* {noformat}",,btl5037,dbshah,denyeart,manish-sethi,robmurgai,Senthil1,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fwz:",,,,Unset,Unset,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,dbshah,denyeart,manish-sethi,robmurgai,Senthil1,wenjian,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Aug/20 8:09 AM;btl5037;Essentially the ask is, can we delete the contents of the directories, rather than the directories themselves, as these are canonically the mount points for implementations such as Kubernetes. While the deletion is simple, does the recreation depend on the directories not existing. Looking at some comments, I see that it may be the case that the ledger management system may use the existence of the directory to decide whether it needs to reinitialize, so the existence of the directory(even an empty one) may look like the db already exists.;;;","27/Aug/20 9:27 AM;manish-sethi;[~btl5037] - this should be a fairly simple fix and empty directory should not be a problem.;;;","27/Aug/20 12:38 PM;Senthil1;How is it a bug?

As per the spec, the user/admin is supposed to pass only the parent filesystem directory to the peer. The folders for databases such as pvtdatastore, confighistory, purgemgr, snapshot bookkeeper, and stateleveldb are created and managed by the peer internally. Even the relative pathname is the logic of the peer ([https://github.com/hyperledger/fabric/blob/42166984577a5577adaeedb1052bbe5a71a643fe/core/ledger/kvledger/ledger_filepath.go#L1)] and never exposed to the user/admin.

While this can be fixed simply, going forward, the suggestion would be not to use anything that is not exposed via core.yaml or not present in the deployment recommendation (such as using separate volume for the CouchDB). Otherwise, it might pop up so many unnecessary problems like this one.

If there is a need for providing a separate mount point for each internal database, the correct way to doing this is by exposing all folder paths via core.yaml.;;;","27/Aug/20 1:11 PM;btl5037;Our official backup doc actually states you can consider backing up only a subset of the directories specified in core.yaml rootfilesystem for the purposes of reducing the overall size of the backup. In particular it actually calls out all of the directories mentioned in your link as directories, you may or may not want to backup. I would consider the implementation of mounting a volume at the location of the subset of data you want to backup to be canonical for both kubernetes and docker deployments.;;;","27/Aug/20 2:10 PM;Senthil1;The current assumption is that the peer will create and delete directories (https://github.com/hyperledger/fabric/blob/42166984577a5577adaeedb1052bbe5a71a643fe/core/ledger/kvledger/drop_dbs.go#L15) in a given filesystem path to store/remove data whenever needed. Admin is allowed to copy all or part of data for various purposes (similar to what one can do to directories created and managed by PostgreSQL - https://www.postgresql.org/docs/12/storage-file-layout.html).
 # Why can't we mount a persisted volume to the parent filesystem path alone which holds all directories?
 # Are we creating a persisted volume for each directory in the ledgerData separately? If we are not creating a separate one for each directory, why some directories use a common persisted volume?

If it is a must to mount each directory in a separate persisted volume, as I said earlier, exposing all store path via core.yaml seems the correct way so that the peer would know that it is not allowed to create/delete the directory (but needs to do it carefully as it would affect existing deployment) – I wouldn't prefer this unless there is a strong reason/requirement.;;;","27/Aug/20 2:34 PM;btl5037;The user is only backing up their `stateleveldb` directory. Just like they only back up their `/opt/couchdb/data` directory in couchdb. They are simply trying to backup their database data in both instances. What we are telling them is they need to pay for additional storage (which is a very large portion of the cost of running a fabric network) to back up all of these additional things they don't care about losing, and that they can't backup just their database on its own. 

I'm looking at our production test network which has only a few 100,000 blocks and the size of those directories is not insignificant (100's GB per peer). And that is with one channel with very small data sizes, for a network with many channels and hundreds of peers, this could very easily grow to 100's of TB across the network of data that doesn't need to be backed up. That's millions of dollars a year in unnecessary cost at the current block storage rates.

So, to your point that postgres expects you to backup the root data directory, all the user is asking is to be able to backup their root data directory for leveldb as well. An apples to apple comparison would be couchdb telling its users to backup `/opt/couchdb` (which is their equivalent of our rootFSPath) which they dont do. So perhaps we do need to expose the statedb's directory in core.yaml and handle it accordingly.;;;","27/Aug/20 3:13 PM;Senthil1;What is the use of only backing up stateLevelDB data? For the proper recovery, we need either only blockstore data or the whole ledgerData directory.
 # With a block store, we can reconstruct all other data directory.
 # With only a block store and stateLevelDB, the peer would be started with an inconsistent/incorrect state, i.e., purge manager and collection config history DB would be empty and will not be synced to the current block store height (as per the current peer recovery mechanism).

We need to update this [https://hyperledger-fabric.readthedocs.io/en/release-2.2/upgrading_your_components.html#ledger-backup-and-restore] to be very explicit on what must be backed up.

For us, the whole _ledgerData_ directory is the same as the PostgreSQL _PGDATA_ directory. The blockstore is similar to the pg_wal directory in the PostgreSQL. Similar to how one can backup only pg_wal ([https://www.postgresql.org/docs/13/continuous-archiving.html),] we can also backup only blockstore and still recover a peer.

On the storage problem, most of the storage is occupied by the blockstore. Each certificate storage takes around 1KB. Most endorsement certificates, client certificates, orderer certificates per transaction would be duplicate with the old transaction. We can save a significant amount of storage using some deduplication technique if we need to address this problem in a correct/long term view.;;;","01/Sep/20 10:54 PM;wenjian;PR: [https://github.com/hyperledger/fabric/pull/1828];;;","03/Sep/20 3:31 AM;wenjian;PR backported to release-2.2: [https://github.com/hyperledger/fabric/pull/1833];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consenter cert validation fails when MSP is not part of existing configuration,FAB-18192,45943,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kopaygorodsky,kopaygorodsky,kopaygorodsky,27/Aug/20 4:32 PM,12/Nov/20 4:31 AM,28/Oct/23 3:09 AM,12/Nov/20 4:31 AM,v2.1.1,v2.2.0,,,,,v2.2.2,v2.3.0,,,,fabric-orderer,,,,0,operator,,,,,"

Validation fails when you add a MSP along with consenters in a single config update. I receive 
{code}
consensus metadata update for channel config update is invalid: verifying tls client cert with serial number 202563322038103064295345433482878287045550471240: x509: certificate signed by unknown authority
{code}. This certificate is singed by msp that is being added in this transaction. 
The right way would be to compute a simulated configuration and take the root CAs from it.",,braduf,kopaygorodsky,tatsu-sato,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,FAB-17998,,,FAB-18257,,,,FAB-17733,,FAB-18269,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprw9",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),braduf,kopaygorodsky,tatsu-sato,wlahti,yacovm,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Sep/20 9:45 AM;kopaygorodsky;[~yacovm] I checked what's need to be done in order to fix this issue. need to change `MetadataValidator.ValidateConsensusMetadata` method definition, in order to create cert pool from simulated configuration we need to pass it as a param. The method requires old and new metadata, but I'm thinking to change it to old and new channel bundle. Do you think this is ok? ;;;","11/Sep/20 6:22 PM;yacovm;I think both are fine, channel bundle just parses the config for you, or you can just build it yourself from the config.

 

Are you going to push a PR to Fabric?;;;","14/Sep/20 10:53 PM;kopaygorodsky;I'm almost done with it, just need to fix a few tests of validator.;;;","17/Sep/20 10:01 AM;kopaygorodsky;https://github.com/hyperledger/fabric/pull/1888;;;","07/Oct/20 1:11 AM;wlahti;Thanks, [~kopaygorodsky]! I requested for Jason to attempt the automated backport to release-2.2 in the PR (assuming this code can be auto-backported). I'll close this task after we have a PR for release-2.2.;;;","07/Oct/20 3:12 AM;wlahti;Ah, unfortunate. Looks like there are merge conflicts that will need to be resolved manually for the release-2.2 backport. Want to handle that [~kopaygorodsky]? Otherwise, I'm more than willing to  cherry-pick your commit and resolve the conflicts. ;;;","07/Oct/20 3:16 AM;kopaygorodsky;Yes, I can handle that. This branch https://github.com/hyperledger/fabric/tree/mergify/bp/release-2.2/pr-1888, right? ;;;","07/Oct/20 3:37 AM;wlahti;I'm not sure there's anything we can do with those mergify branches. I always fetch the latest for the release branch I'm backporting to, create a branch from that, and then cherry-pick the commit (and resolve conflicts). ;;;","08/Oct/20 9:12 PM;wlahti;Quick update: I've been busy with a few other tasks but plan to get back to handling this backport to release-2.2 as soon as possible, hopefully by the end of this week.;;;","10/Oct/20 5:53 AM;wlahti;With the major refactoring / new code in etcdraft/consenter.go in master compared to release-2.2, I decided to take a step back and first ensure we have an integration test to confirm the updated behavior from this fix in master.  https://github.com/hyperledger/fabric/pull/1997

Otherwise, I wasn't sure if I could be convinced I had the cherry-picked and adjusted the commit accurately for release-2.2. I'll use this new test to help verify things in release-2.2.;;;","14/Oct/20 11:35 PM;wlahti;[https://github.com/hyperledger/fabric/pull/2005] contains the backport of the fix as well as a new integration test and a fix for a bug I discovered while expanding the unit tests for the original fix. The PR was merged into release-2.2 today. ;;;","26/Oct/20 8:52 PM;kopaygorodsky;I've built an image from master branch and this fix works. On the other hand, I've tried hyperledger-fabric.jfrog.io/fabric-orderer:amd64-2.2-stable and see this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhancement to configtxgen options restoring orthogonality with cryptogen,FAB-18193,45946,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,emm,emm,28/Aug/20 11:48 AM,28/Aug/20 11:48 AM,28/Oct/23 3:09 AM,,v2.1.0,,,,,,Future,,,,,,,,,0,,,,,,"cryptogen will let me use --config (input) and --output so I can do something more meaningful than call all the different tooling input files yamls. We end up with many yamls everywhere which is hard enough to track.

To avoid this I can currently do the following

$ cryptogen generate --config cryptogen.in --output cryptogen.outd

 

this means when I see a file under the /cryptogen.outd/ directory i know immediately

it was automatically generated from the cryptogen.in source from the (yep you guessed correctly) cryptogen tool.

 

I would really like to see the --config changed to --input or --input added as an alias

to preserve compatibility – which neither appears to be a priority for some strange

reason.

 

Furthermore, one would expect the same command option orthogonality to be preserved across the toolset allowing me to do 

 

$configtxgen --input configtxgen.in (etc...)

 

instead configtxgen appears to have filename.yaml hardcoded into the Go sources.

 

I prefer my suggested style since calling something a yaml file is a bit too ""meta"" and presents a barrier to the self-documentation process.Ex I know by looking at my filespec that anything under /cryptogen.outd/ was automatically generated by cryptogen tool that was sourced from my cryptogen.in file. A *lot* more intuitive than what is currently happening. I'm dissapointed at the lack of thought that has gone into some of this.

By Comparison we dont call microsoft doc files ""RTFs"" same goes for old-school ""SGML"" files they were simply called ""docs"".

Likewise we dont talk about DWG files we talk about Autocad files – the tool being Autocad.  ",,emm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-13437,,,No,,Unset,No,,,"1|i01fxv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),emm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service discovery - endorsement service error after peers/orderers restarted,FAB-18194,45948,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,Ratnakar,Ratnakar,29/Aug/20 2:29 AM,12/Oct/20 11:26 AM,28/Oct/23 3:09 AM,04/Sep/20 9:08 PM,v2.2.0,,,,,,v2.1.2,v2.2.1,v2.3.0,,,fabric-peer,,,,0,operator,,,,,"I have a network setup with the following topology
 * 3 CAs (one for ordering service and the other two CAs for two different peer orgs)
 * A 5 node raft cluster
 * org1 with a single peer *peer1* (Anchor peer)
 * org2 with a single peer *peer2* (Anchor peer) 

Created a channel *mychannel*, installed chaincode fabcar from [here|https://github.com/hyperledger/fabric-samples/tree/release-1.4/chaincode/fabcar/javascript] 

Sent transactions (~4K) to each peer from two different identities.

*Up on restarting peers and orderers transactions started failing with this error*



{code:bash}
2020-08-28 15:50:58.800 UTC [comm.grpc.server] 1 -> INFO 041 unary call completed grpc.service=discovery.Discovery grpc.method=Discover grpc.peer_address=172.30.166.5:55204 grpc.code=OK grpc.call_duration=1.835501ms
2020-08-28 15:50:58.844 UTC [discovery] chaincodeQuery -> ERRO 042 Failed constructing descriptor for chaincode chaincodes:<name:""fabcar"" > ,: required chaincodes are not installed on sufficient peers
{code}



error on sdk client 
{code:bash}
2020-08-28T17:21:19.783Z - error: [Channel.js]: Channel:mychannel received discovery error:failed constructing descriptor for chaincodes:<name:""fabcar"" >
2020-08-28T17:21:19.784Z - error: [DiscoveryEndorsementHandler]: endorse - no endorsement plan found for {""chaincodes"":[{""name"":""fabcar""}]}
Failed to submit transaction: Error: No endorsement plan available for {""chaincodes"":[{""name"":""fabcar""}]}
{code}

logs for the peer are enclosed
",,btl5037,denyeart,jyellick,Ratnakar,robmurgai,yacovm,,,,,,,,,,,,,,,,,,,,,,FAB-18026,,,,,,,,,,,,,"29/Aug/20 2:27 AM;Ratnakar;peer1-logs.txt;https://jira.hyperledger.org/secure/attachment/18615/peer1-logs.txt",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fyb:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,denyeart,jyellick,Ratnakar,robmurgai,yacovm,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,release-2.1,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Aug/20 3:53 AM;denyeart;I'm able to reproduce. It looks like when using old lifecycle, that the chaincode cache is not initialized correctly upon peer restart, from the logs:
{code:java}
[34m2020-08-28 17:16:06.688 UTC [lifecycle] InitializeLocalChaincodes -> INFO 0a2[0m Initialized lifecycle cache with 0 already installed chaincodes{code}

Service discovery therefore doesn't know about the installed chaincode and reports:
""required chaincodes are not installed on sufficient peers"";;;","29/Aug/20 4:37 AM;denyeart;[~jyellick] If I'm reading this correctly, the chaincode cache initialization was only designed for the new lifecycle?

https://github.com/hyperledger/fabric/blob/master/core/chaincode/lifecycle/cache.go#L142
;;;","31/Aug/20 11:53 PM;jyellick;Correct, the chaincode cache contains only information related to the new lifecycle.  It should not be populated with any information about legacy chaincodes.  If service discovery is not falling back to the legacy path if the chaincode is not in the new lifecycle, then this is a bug.;;;","01/Sep/20 3:43 AM;robmurgai;[~btl5037] Could you add this to the System Test - Functional Test Scenarios, please.;;;","01/Sep/20 4:00 AM;yacovm;shouldn't this belong to integration tests? ;;;","01/Sep/20 11:03 AM;btl5037;Agreed, the migration of 1.4 to 2.0 capabilities and lifecycle functionality should be covered by integration tests. While the failure was induced using the SDK, the underlying functionality that failed was part of Fabric lifecycle itself. Though I do see the potential for other functional tests in this space.;;;","04/Sep/20 5:10 AM;denyeart;https://github.com/hyperledger/fabric/pull/1844;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance Operator to Support the Generation of the MSP for Additional Peers,FAB-18195,45957,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,btl5037,btl5037,31/Aug/20 10:33 PM,06/Nov/20 2:53 AM,28/Oct/23 3:09 AM,06/Nov/20 2:53 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"In its current state the Operator tool creates static networks, i.e., you cannot use the Operator to extend a network and add additional components in an automated way, you must generate the MSP and launch the components yourself out of band.

To support additional test scenarios the Operator tool should be extended to include an additional commands to automate the addition of new peers as defined in an additional config section such as:

 
{code:java}
addPeer:
- name: org2
  mspID: Org2ExampleCom
  numPeers: 1
- name: org3
  mspID: Org3ExampleCom
  numPeers: 2{code}
 

If the `addPeers` section exists when a user calls `operator -i <input file> -a addPeer`, the Operator would first validate that org2 and org3 exist (let's assume each had 1 peer already in the network and remembering that the peers start their numbering at 0), the Operator would then generate the MSP for `peer1-org2`, `peer1-org3` and `peer2-org3`.",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g0b:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create osnadmin CLI for channel participation API,FAB-18196,45959,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,01/Sep/20 5:21 AM,12/Nov/20 6:31 AM,28/Oct/23 3:09 AM,03/Nov/20 6:45 AM,,,,,,,v2.3.0,,,,,,,,,0,ipm,,,,,"JoinChannel

RemoveChannel

List (all channels + single channel)",,tsharris,wlahti,,,,,,,,,,,,,,,,,,,,,,,FAB-18133,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx6f",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tsharris,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Sep/20 3:36 AM;tsharris;https://github.com/hyperledger/fabric/pull/1907;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Restructure Registrar.Initialize for clarity and future maintenance ,FAB-18198,45963,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,01/Sep/20 5:03 PM,18/Oct/20 3:03 PM,28/Oct/23 3:09 AM,18/Oct/20 3:03 PM,v2.0.1,,,,,,,,,,,fabric-orderer,,,,0,ipm,,,,,"The Registrar now operates either with or without a system channel. This creates two distinct (but slightly overlapping) initialization flows. Here we restructure the Registrar initialization such that it is clear which methods are common to both flows, and which methods belong to the flow with or without the system channel.
    
    For example, the current `initAppChannels` is split in two:
    - initAppChannelsWithSystemChannel(), which assume the system channel exists, and
    - initAppChannels(), which assumes the system channel does not exist.
    
This simplifies the code and makes it more readable, and tries to be considerate of the fact that hopefully we'll be able to remove the system channel related code (after the system channel functionality is deprecated) so isolating it helps us later down the line.


See https://github.com/hyperledger/fabric/pull/1746#issuecomment-679456473",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18076,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfpry",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Creating new channel with the same channelID of system channel is not forbidden,FAB-18200,45967,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid: Works as Expected,zerppen,zerppen,zerppen,02/Sep/20 11:05 AM,02/Sep/20 9:10 PM,28/Oct/23 3:09 AM,02/Sep/20 9:10 PM,v2.0.1,,,,,,,,,,,fabric-ledger,,,,0,quality,,,,,"case: if I created a system channel and channelID is _testnam_e.Then someone wants to create his user channel and channelID is _testname,_ he can create the new channel of couse,but what can be happen if he wants to install his chaincode?

 

_Solution: when Creating channel should check if the channelID exists._",,zerppen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g1n:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),zerppen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Sep/20 4:42 PM;zerppen;This was a mistake.

Please close it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric Google OAuth Client PSIRT,FAB-18202,45972,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,ryjones,dhuseby,04/Sep/20 1:34 AM,26/Oct/21 2:34 AM,28/Oct/23 3:09 AM,24/Oct/21 11:41 PM,,,,,,,,,,,,,,,,0,,,,,,"We were alerted to a PSIRT  for our solution built on top of Fabric, based on [https://nvd.nist.gov/vuln/detail/CVE-2020-7692] [,|https://nvd.nist.gov/vuln/detail/CVE-2020-7692,] for vulnerable versions of the google-oauth-client (any before 1.31) It took us a while to figure out where Fabric had a copy, it is at least contained in the hyperledger/fabric-javaenv:2.2.0 Docker image, though it may be in other places.
  
 Run the following command to see the dependency in the image:
{code:java}
docker run -it hyperledger/fabric-javaenv:2.2.0 bash -c 'find / -name ""*google*""'{code}
These dependencies should be updated to versions not affected by this PSIRT.",,benjsmi,btl5037,calanais,denyeart,dhuseby,lesleyannj,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,benjsmi,btl5037,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g2j:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),benjsmi,btl5037,calanais,denyeart,dhuseby,lesleyannj,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Sep/20 11:46 PM;calanais;Installing the latest version of gradle I've found that by default it comes with this google-oauth-client:1.25.0.  
Have raised a question on the gradle forum to ask if there's any knowledge about updating this within  gradle.

 ;;;","08/Sep/20 10:43 AM;btl5037;I also sent an email to their security mailbox per the instructions on the Security tab on GitHub. I tried to dig through what was pulling in the plugin (something with Kotlin/Android) but couldn't actually find the source as it was a never ending tree of deps to figure out what actually made the dep part of the standard plugin library.;;;","10/Sep/20 5:08 PM;calanais;To summarise why Gradle is included within the javaenv docker image.

When Chaincode is used, it the package that contains the code will either have the original Java source code, or a prebuilt JAR file.
With the source option it needs compiling - if the user has also included the gradlew wrapper in the package, that will be used. 

If that isn't then the inbuilt gradle in the JavaEnv image would be used; hence why this is included. If this needs to be resolved then save for an update Gradle version - we would need to remove this last option. ;;;","11/Sep/20 6:49 AM;btl5037;I spoke with the security team at Gradle, this is in no way going to be a straightforward fix. They tried to remove the plugin after installation but they confirmed Gradle fails to build projects as their dependency injection expects the default set of plugins to be present, regardless of whether they are being used or not.

They said the plugin that uses the JAR is a very little used feature that allows users to specify an endpoint to Google Cloud Storage and an OAuth token to pull Gradle deps directly from Google Cloud Storage. So while we aren't using the plugin, it's not entirely impossible to think a user might make use of it to pull chaincode deps.

The Gradle project lead said while they are aware of the issue, since its such a little used feature its not at the top of their list, and not likely to be before the end of the year. He is going to send us some guidance on where to start if we want to contribute a fix ourselves, but the update also isn't going to be super straightforward due to some changes in the oauth library.

I'll chat with Ben and Pat and see what they think about this, but I suspect since it's possible a user could use it, and the fact it is being flagged it in their scans, not remediating it till next year may not be acceptable.;;;","11/Sep/20 4:34 PM;calanais;Thanks for following this up [~btl5037]  -I would suspect that we're heading towards removing the inbuilt gradle option.- 

 

A suggestion from @sstone1 might have offered a solution... being tested currently. See https://github.com/hyperledger/fabric-chaincode-java/pull/134;;;","12/Sep/20 2:09 AM;btl5037;I tested this image (the one from Simons suggestion) in our system test suite and it works. It also prevents the plugin from ever being installed in its entirety, so we never see it at all even in the final chaincode image after installation and invoke;;;","22/Sep/20 10:33 PM;btl5037;Patched in release-2.x with:

[https://github.com/hyperledger/fabric-chaincode-java/pull/134|https://github.com/hyperledger/fabric-chaincode-java/pull/134/files]

master in:

[https://github.com/hyperledger/fabric-chaincode-java/pull/135|https://github.com/hyperledger/fabric-chaincode-java/pull/135/files];;;","01/Oct/21 2:15 AM;benjsmi;So to summarize, the team fixed this/addressed it by removing Gradle (and Maven, which had a related CVE in it) by removing them from distribution of the actual image and instead included the _Wrapper_ versions of these products, which are just scripts that help the developer of chaincode download Maven and Gradle themselves upon starting the image or building from it.

 

This helps a lot because it's likely to help developers of chaincode stay on par with the changes that are always happening in Maven and Gradle, which regularly get hit with new CVEs and reported vulnerabilities.  Thank you very much for addressing this one folks!;;;","01/Oct/21 2:29 AM;ryjones;[~benjsmi] so I can close this issue?;;;","01/Oct/21 4:07 AM;benjsmi;Check with [~calanais] and [~btl5037], but from my POV it's resolved.;;;","24/Oct/21 11:41 PM;denyeart;This is resolved, we can close it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prometheus metrics not showing on prometheus server,FAB-18203,45973,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,denyeart,freesam02,freesam02,04/Sep/20 1:58 PM,01/Dec/20 5:33 AM,28/Oct/23 3:09 AM,,v1.4.1,,,,,,,,,,,fabric-peer,,,,0,help-wanted,,,,,"Hi 

For monitoring hyperedger fabric, we use prometheus metrics

and successfully we make montoring system by grafana and prometheus

 

but we want to query and show about endorsing metrics, but we can't find metrics data on grafana and prometheus query..

 

how can i find a endorsed~~~ metrics(Ex endorsed proposal received) ??

Did i need to revise peer metrics?

 

thanks

 ",,freesam02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-3388,,,No,,Unset,No,,,"1|i01g2r:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),freesam02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Convert function pointers to interface in etcdraft.Cosenter,FAB-18204,45974,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,04/Sep/20 6:49 PM,13/Sep/20 4:31 PM,28/Oct/23 3:09 AM,13/Sep/20 4:31 PM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,ipm,,,,,"The coupling between the multichannel.Registrar and the etcdraft.Consenter is currently established using function pointers. Convert that pattern to an interface that captures the functions the etcdraft.Consenter needs from the Registrar.

This will enhance readability, ease maintenance, and allow the use of mocks for testing.

Moreover, the etcdraft package imports the multichannel package.  This prevents the multichannel package from using the onboarding  and cluster packages, which depend on etcdraft. Decoupling that dependency is one of the benefits of this refactoring.
",,tock,,,,,,,,,,,,,,,,,,,,,,,,FAB-17911,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfpri",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Certificate expiration - Permit peer CLI to communicate with orderers with expired TLS certificates,FAB-18205,45975,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,wlahti,sstone1,sstone1,04/Sep/20 10:10 PM,06/Jan/21 10:59 PM,28/Oct/23 3:09 AM,18/Sep/20 10:49 AM,,,,,,,v1.4.9,v2.2.1,v2.3.0,,,fabric-cli,,,,0,ipm,operator,,,,"The peer CLI refuses to communicate with an ordering service node that has an expired TLS certificate; you get the following error message:
{code:java}
Error: failed to create deliver client for orderer: orderer client failed to connect to n23023e-orderingservicenode1-orderer.mycluster-lon02-b3c4x16-9b9c45345f2a063a838d056f9926539a-0000.eu-gb.containers.appdomain.cloud:443: failed to create new connection: context deadline exceeded
{code}
This means that it is extremely difficult to submit a config update that updates the consenter sets with the new TLS certificates in order to resolve the problem.

There is a timeshift option in the ordering service that allows the ordering service nodes to communicate with each other, but that does not resolve this problem.",,adarshaJha,denyeart,jyellick,sstone1,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18175,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfpr9",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),adarshaJha,denyeart,jyellick,sstone1,wlahti,yacovm,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-1.4,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Sep/20 10:54 PM;jyellick;Perhaps even a more general ""ignore TLS errors"" flag would be nice? Easily abused though;;;","05/Sep/20 6:35 AM;yacovm; 
{quote}This means that it is extremely difficult to submit a config update that updates the consenter sets with the new TLS certificates in order to resolve the problem.
{quote}
 

 We don't need to do this anymore, we can just replace the certificate.

 
 # You are supposed to submit the config update to the *other* orderer(s) whose certificate has *not* expired.
 # How would it help submitting it to an orderer that can't communicate with the cluster anyway?

{quote}There is a timeshift option in the ordering service that allows the ordering service nodes to communicate with each other, but that does not resolve this problem.
{quote}
Why would it effect the validation on the client side?
{quote}Perhaps even a more general ""ignore TLS errors"" flag would be nice? Easily abused though
{quote}
Why do we want to do such a thing? If the client can't validate the certificate, nor can the peers and the other orderers. 
 Besides, such things show up in [security scans|https://github.com/securego/gosec/blob/d8f249a0792bc3b1098b6958f99552e440f520c7/rules/tls.go#L67-L74].

Lastly, with TLS validation disabled, how do we know that no one intercepted our message and is now re-transmitting it to a real orderer in order to extract information?;;;","07/Sep/20 6:22 PM;sstone1;{quote}You are supposed to submit the config update to the *other* orderer(s) whose certificate has *not* expired.
{quote}
That would be great, if people weren't standing up ordering services where all of the nodes are issued certificates at roughly the same time, and all of those certificates have now expired. 
{quote}Why would it effect the validation on the client side?
{quote}
Did I say it would?
{quote}Why do we want to do such a thing? If the client can't validate the certificate, nor can the peers and the other orderers.
Besides, such things show up in [security scans|https://github.com/securego/gosec/blob/d8f249a0792bc3b1098b6958f99552e440f520c7/rules/tls.go#L67-L74].

Lastly, with TLS validation disabled, how do we know that no one intercepted our message and is now re-transmitting it to a real orderer in order to extract information?
{quote}
Pretty much every client CLI program out there has an option to disable TLS validation, don't they? At least curl and kubectl do. They're all labeled ""insecure"" and are opt-in. Why are we so special that we can't let the user take the risk, even if they know what they are letting themselves in for?
{quote}We don't need to do this anymore, we can just replace the certificate.
{quote}
I'm aware of the fix you delivered, it's great, but it only recently got merged into GitHub, and I've been told that it may not be ready in the time required due to the testing required (hence the resulting discussion with [~jyellick] and [~robmurgai] around this patch).;;;","07/Sep/20 7:00 PM;yacovm;{quote}That would be great, if people weren't standing up ordering services where all of the nodes are issued certificates at roughly the same time, and all of those certificates have now expired. 
{quote}
 

If this is an acute problem then we should at least document it.

 
{quote}Pretty much every client CLI program out there has an option to disable TLS validation, don't they? At least curl and kubectl do. They're all labeled ""insecure"" and are opt-in. Why are we so special that we can't let the user take the risk, even if they know what they are letting themselves in for?
{quote}
 

Well, the description of the Jira did not say anything about adding a flag, I see that Jason mentioned it, but, ""ignore TLS errors"" seems to me like something a user would want to opt-in if something doesn't work ;)

 
{quote} 

I'm aware of the fix you delivered, it's great, but it only recently got merged into GitHub, and I've been told that it may not be ready in the time required due to the testing required (hence the resulting discussion with [~jyellick] and [~robmurgai] around this patch).
{quote}
I'm not sure what ""it may not be ready in the time required"" means (not be ready for... what?), but, *to me*, the schedule and time-frame of business related events of one organization or another, should be a function of the Fabric code base, *not the other way around*.

 We need to ask ourselves: Given the fact that we no longer need to issue configuration updates upon consenter certificate expiration, would this new flag be in use? If so, then when? If not, then it makes no sense to implement it now.;;;","09/Sep/20 5:18 AM;jyellick;{quote}
 We don't need to do this anymore, we can just replace the certificate.
{quote}

This is true only if we can re-issue the certificate with the same public/private keypair.  Hopefully generally we can, but, due to infrastructure deficiencies, this might not be true.  By a similar argument, why bother allowing orderer time shift around TLS validation? It is just another tool which may be less work to utilize.

{quote}
Why do we want to do such a thing? If the client can't validate the certificate, nor can the peers and the other orderers.
{quote}

The assumption in this particular case is that the OSNs are timeshifted, and therefore are not rejecting eachother's connections.

{quote}
Besides, such things show up in security scans.

Lastly, with TLS validation disabled, how do we know that no one intercepted our message and is now re-transmitting it to a real orderer in order to extract information?
{quote}

Yes, these are good arguments for limiting the change to only allowing a TLS timeshift at the client, and not a general disabling of TLS validation.

I do think that generally disabling TLS validation could still be done in a relatively safe way -- if the user is executing the command on the same host, or other private infrastructure MiTM style attacks usually require sufficient compromise that a TLS interception is the least of your concerns.

Of course, on the other hand, allowing general disabling of TLS validation could encourage users to disable validation in scenarios which are not as safe.

It sounds to me [~yacovm] like you would be more in favor of a plain, TLS timeshift option for the CLI, which is fine, I just thought the more general option was worth investigating. ;;;","09/Sep/20 5:42 AM;yacovm;{quote}By a similar argument, why bother allowing orderer time shift around TLS validation? It is just another tool which may be less work to utilize.
{quote}
 

We don't need time shift now when we have this. But time shift was implemented long before. We can remove it if you want, I don't mind.
{quote} 

Yes, these are good arguments for limiting the change to only allowing a TLS timeshift at the client, and not a general disabling of TLS validation.
{quote}
I am in favor of a timeshift in the client side, good idea.

TLS validity is heuristic anyway, and a day or two more or less never killed anyone (famous last words?)

 

 

 
{quote}I do think that generally disabling TLS validation could still be done in a relatively safe way – if the user is executing the command on the same host, or other private infrastructure MiTM style attacks usually require sufficient compromise that a TLS interception is the least of your concerns.
{quote}
 

Yes, on the same host with loopback address will work, I am unsure about the private infrastructure though, because usually you use DNS names, and plain DNS is not a very authenticated protocol.

 

 
{quote} 

It sounds to me [~yacovm] like you would be more in favor of a plain, TLS timeshift option for the CLI, which is fine, I just thought the more general option was worth investigating.
{quote}
 

Yes, it would eliminate the security scan problem of using *InsecureSkipVerify*, and will give us good control over the possible attack vectors.;;;","09/Sep/20 4:19 PM;denyeart;It sounds like a client timeshift is the right compromise, I'm fine going with that.;;;","10/Sep/20 3:46 AM;wlahti;PR on master: https://github.com/hyperledger/fabric/pull/1863;;;","17/Sep/20 12:09 AM;wlahti;PR on release-2.2: https://github.com/hyperledger/fabric/pull/1878

PR merged on master. Need to generate docs for master -and release-2.2-. Docs added to release-2.2 PR.

release-1.4 backport PR coming soonish.;;;","17/Sep/20 6:36 AM;wlahti;PR on release-1.4 with docs regenerated: https://github.com/hyperledger/fabric/pull/1887;;;","06/Jan/21 10:59 PM;adarshaJha;I enabled timeshift and my orderers with expired certs went up and achieved raft consensus but when i generated new tls certs for my peers they went up but could not connect with orderers . I am getting this error :- 


{code:java}
2021-01-06 13:50:02.859 UTC [deliveryClient] connect -> ERRO 0d5 Failed obtaining connection: could not connect to any of the endpoints: [{orderer1.biltilink.com:7050 [OrdererMSP]} {orderer3.biltilink.com:9050 [OrdererMSP]} {orderer6.biltilink.com:7050 [OrdererMSP]} {orderer5.biltilink.com:7050 [OrdererMSP]} {orderer2.biltilink.com:8050 [OrdererMSP]} {orderer4.biltilink.com:7050 [OrdererMSP]}]
{code}

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HSM performance - Cache object handles for PKCS#11 enabled BCCSP implementation,FAB-18206,45978,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,denyeart,denyeart,05/Sep/20 4:09 AM,09/Sep/20 10:32 PM,28/Oct/23 3:09 AM,08/Sep/20 9:39 AM,,,,,,,v1.4.9,v2.2.1,v2.3.0,,,fabric-crypto,,,,0,operator,,,,,Cache object handles for PKCS#11 enabled BCCSP implementation,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g3n:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Sep/20 4:12 AM;denyeart;[~mastersingh24] I opened this item for your PRs so that we'd have visibility in the patch release jira queries...

https://github.com/hyperledger/fabric/pull/1767 master
https://github.com/hyperledger/fabric/pull/1778 v2.2
https://github.com/hyperledger/fabric/pull/1848 v1.4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTEv2 supports block height query,FAB-18207,45979,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,05/Sep/20 5:05 AM,11/Jan/21 1:31 AM,28/Oct/23 3:09 AM,11/Jan/21 1:31 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,PTEv2 supports block height query,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17973,,,No,,Unset,No,,,"1|i01g3v:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HSM Performance - Gossip should not sign alive and state messages if there are no intended recipients,FAB-18208,45980,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,denyeart,denyeart,05/Sep/20 6:05 AM,24/Sep/20 1:04 AM,28/Oct/23 3:09 AM,11/Sep/20 8:27 AM,,,,,,,v1.4.9,v2.2.1,v2.3.0,,,fabric-gossip,,,,0,operator,,,,,"Make gossip discovery and channel modules only sign (and gossip)
alive messages and state info messages if the membership is non empty.

This will help to avoid unnecessary and expensive signings, especially when using HSM.",,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g43:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,yacovm,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Sep/20 6:06 AM;denyeart;[~yacovm] I've created this issue for https://github.com/hyperledger/fabric/pull/1681 so that we have visibility in Jira queries.;;;","11/Sep/20 6:26 AM;yacovm;[release-1.4|https://github.com/hyperledger/fabric/pull/1681]

[release-2.2|https://github.com/hyperledger/fabric/pull/1873]

[master|https://github.com/hyperledger/fabric/pull/1872]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wrong raftid when remove one orderer,FAB-18209,45988,,Bug,Unverified,FAB,Fabric,software,denyeart,,,High,,,yibochen1230,yibochen1230,08/Sep/20 7:46 PM,17/Apr/21 4:30 AM,28/Oct/23 3:09 AM,,v2.1.0,,,,,,,,,,,fabric-orderer,,,,0,help-wanted,,,,,"When we want to remove one orderer from the config block, we need to assure that enough orderers are active. So we delete the nodeID of this order from the activeMap, and compare it with the quorum number. In the current version, we get the nodeID from a dummyOldBlockMetadata, which regenerates all of the nodeIDs instead of the real ones. Then wrong result appear.

I fixed this bug in the function ComputeMembershipChanges like this. This raftInfo is from the chain struct.
!1.png!
 ",,yacovm,yibochen1230,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Sep/20 7:33 PM;yibochen1230;1.png;https://jira.hyperledger.org/secure/attachment/18627/1.png",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g5v:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yacovm,yibochen1230,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Sep/20 9:07 PM;yacovm;[~jyellick];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Don't call the haltCallback in etcdraft.Chain when the chain was previously Halt,FAB-18210,45989,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,08/Sep/20 9:46 PM,16/Sep/20 6:17 PM,28/Oct/23 3:09 AM,16/Sep/20 6:17 PM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,,,,,,"After Halt() was called, e.g. from RemoveChannel, it might happen that the internal halt() is still called by one of the chain's go-routine. In this case, halt() should not call the haltCallback.",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i01g63:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance PTE to Allow Snapshot Generation,FAB-18212,45991,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,btl5037,btl5037,09/Sep/20 11:13 AM,13/Oct/20 10:05 PM,28/Oct/23 3:09 AM,13/Oct/20 10:05 PM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"In order to support snapshot generation we need to enhance PTE to allow the support the querying of the block height in conjunction with sending transactions. After discussing several options we settled on this implementation:

PTE will spawn two processes, one that sends transactions, and a second that manages the snapshot generations. The first process is blind to the existence of the second. The second process will periodically poll the blockheight of the ledger, and once it reaches a predetermined height (supplied by the operator) it send a notification to the first process to clean up and stop sending transactions. The second process will then initiate the snapshot generation process.

Acceptance Criteria: I can generate a snapshot at a predetermined height using PTE",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zyl",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance PTE Snapshot Generation to Calculate Snapshot Generation Time,FAB-18213,45992,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,btl5037,btl5037,09/Sep/20 11:17 AM,13/Oct/20 10:05 PM,28/Oct/23 3:09 AM,13/Oct/20 10:05 PM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"One of the metrics we want to poll from the snapshot generation is how long it took to generate the snapshot. The output of the snapshot generation will be a success response and the time to generate.

PTE should use the Docker/Kubernetes SDK to pull the logs and monitor both the start and end times of the transaction in the logs. Once both are available and the snapshot was successful, PTE will exit with a success or failure, and if the exit was a success will report the snapshot generation time.

Acceptance Criteria: PTE reports the time to generate a snapshot when the snapshot generation was successful.",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zyo",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Join Peer By Snapshot Times Out,FAB-18214,45993,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,btl5037,btl5037,09/Sep/20 11:22 AM,03/Nov/20 12:08 AM,28/Oct/23 3:09 AM,03/Nov/20 12:08 AM,,,,,,,,,,,,fabric-ledger,fabric-quality,,,0,snapshot,,,,,"When using the `peer channel joinbysnapshot` command for any sufficiently large channel ledger that needs to be bootstrapped, the operation times out on the CLI while joining. After discussion it was determined that the operation was unexpectedly a synchronous operation (all channel joins are).

Ideally once the join proposal is accepted the CLI would report success and the channel bootstrapping would occur in the background rather than the synchronous nature that exists today.",,btl5037,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqwb",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Nov/20 12:08 AM;denyeart;Join by snapshot is now async.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Perform Ledger Checkpointing Tests,FAB-18215,45994,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,btl5037,btl5037,09/Sep/20 11:26 AM,11/Jan/21 1:31 AM,28/Oct/23 3:09 AM,11/Jan/21 1:31 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"As part of creating the ledger checkpointing API the System Test team is tasked with performing tests around the snapshot generation and snapshot channel join API, both for functionality and performance. This story will capture the sub-tasks of these tests. As part of these stories the following payload sizes are defined:
 * Small - 8 bytes
 * Medium - 1 kilobyte
 * Large - 8 kilobytes",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zyw",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kubernetes - Perform Snapshot Generation With Small Payload Using LevelDB,FAB-18216,45995,45994,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,btl5037,btl5037,09/Sep/20 11:33 AM,11/Jan/21 1:30 AM,28/Oct/23 3:09 AM,11/Jan/21 1:30 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"Using an 8 byte load and one transaction per block send 1 million transactions to the network. Submit snapshot requests for every 200,000 blocks.

After the 5th snapshot has been taken, record the time to generate and snapshot sizes in a spreadsheet and attach to this Jira.",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18222,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g6j:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kubernetes - Perform Snapshot Generation With Medium Payload Using LevelDB,FAB-18217,45996,45994,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,btl5037,btl5037,09/Sep/20 11:34 AM,11/Jan/21 1:30 AM,28/Oct/23 3:09 AM,11/Jan/21 1:30 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"Using a 1 kb load and one transaction per block send 1 million transactions to the network. Submit snapshot requests for every 200,000 blocks.

After the 5th snapshot has been taken, record the time to generate and snapshot sizes in a spreadsheet and attach to this Jira.",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18224,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g6r:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kubernetes - Perform Snapshot Generation With Large Payload Using LevelDB,FAB-18218,45997,45994,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,btl5037,btl5037,09/Sep/20 11:34 AM,11/Jan/21 1:30 AM,28/Oct/23 3:09 AM,11/Jan/21 1:30 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"Using an 8 kb load and one transaction per block send 1 million transactions to the network. Submit snapshot requests for every 200,000 blocks.

After the 5th snapshot has been taken, record the time to generate and snapshot sizes in a spreadsheet and attach to this Jira.",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18226,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g6z:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kubernetes - Perform Join By Snapshot With Small Payload Using LevelDB,FAB-18219,45998,45994,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,btl5037,btl5037,09/Sep/20 11:37 AM,11/Jan/21 1:30 AM,28/Oct/23 3:09 AM,11/Jan/21 1:30 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"Using the snapshot files generated in the previous task, bootstrap a new peer using `peer channel joinbysnapshot` command.

Record the time for each snapshot to join and graph it as a function block height and attach it to this Jira.

Acceptance Criteria: A graph of the time to join as a function of blockheight is available for review",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18223,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g77:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kubernetes - Perform Join By Snapshot With Medium Payload Using LevelDB,FAB-18220,45999,45994,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,btl5037,btl5037,btl5037,09/Sep/20 11:37 AM,11/Jan/21 1:30 AM,28/Oct/23 3:09 AM,11/Jan/21 1:30 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"Using the snapshot files generated in the previous task, bootstrap a new peer using `peer channel joinbysnapshot` command.

Record the time for each snapshot to join and graph it as a function block height and attach it to this Jira.

Acceptance Criteria: A graph of the time to join as a function of blockheight is available for review",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18225,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g7f:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kubernetes - Perform Join By Snapshot With Large Payload Using LevelDB,FAB-18221,46000,45994,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,btl5037,btl5037,btl5037,09/Sep/20 11:37 AM,11/Jan/21 1:30 AM,28/Oct/23 3:09 AM,11/Jan/21 1:30 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"Using the snapshot files generated in the previous task, bootstrap a new peer using `peer channel joinbysnapshot` command.

Record the time for each snapshot to join and graph it as a function block height and attach it to this Jira.

Acceptance Criteria: A graph of the time to join as a function of blockheight is available for review",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18227,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g7n:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kubernetes - Perform Snapshot Generation With Small Payload Using CouchDB,FAB-18222,46001,45994,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,btl5037,btl5037,09/Sep/20 11:45 AM,11/Jan/21 1:30 AM,28/Oct/23 3:09 AM,11/Jan/21 1:30 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"Using an 8 byte load and one transaction per block send 1 million transactions to the network. Submit snapshot requests for every 200,000 blocks.

After the 5th snapshot has been taken, record the time to generate and snapshot sizes in a spreadsheet and attach to this Jira.",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18216,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g7v:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kubernetes - Perform Join By Snapshot With Small Payload Using CouchDB,FAB-18223,46002,45994,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,btl5037,btl5037,09/Sep/20 11:45 AM,11/Jan/21 1:29 AM,28/Oct/23 3:09 AM,11/Jan/21 1:29 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"Using the snapshot files generated in the previous task, bootstrap a new peer using `peer channel joinbysnapshot` command.

Record the time for each snapshot to join and graph it as a function block height and attach it to this Jira.

Acceptance Criteria: A graph of the time to join as a function of blockheight is available for review",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18219,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g83:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kubernetes - Perform Snapshot Generation With Medium Payload Using CouchDB,FAB-18224,46003,45994,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,btl5037,btl5037,09/Sep/20 11:46 AM,11/Jan/21 1:29 AM,28/Oct/23 3:09 AM,11/Jan/21 1:29 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"Using a 1 kb load and one transaction per block send 1 million transactions to the network. Submit snapshot requests for every 200,000 blocks.

After the 5th snapshot has been taken, record the time to generate and snapshot sizes in a spreadsheet and attach to this Jira.",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18217,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g8b:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kubernetes - Perform Join By Snapshot With Medium Payload Using CouchDB,FAB-18225,46004,45994,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,btl5037,btl5037,09/Sep/20 11:46 AM,11/Jan/21 1:29 AM,28/Oct/23 3:09 AM,11/Jan/21 1:29 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"Using the snapshot files generated in the previous task, bootstrap a new peer using `peer channel joinbysnapshot` command.

Record the time for each snapshot to join and graph it as a function block height and attach it to this Jira.

Acceptance Criteria: A graph of the time to join as a function of blockheight is available for review",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18220,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g8j:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kubernetes - Perform Snapshot Generation With Large Payload Using CouchDB,FAB-18226,46005,45994,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,btl5037,btl5037,btl5037,09/Sep/20 11:46 AM,11/Jan/21 1:29 AM,28/Oct/23 3:09 AM,11/Jan/21 1:29 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"Using an 8 kb load and one transaction per block send 1 million transactions to the network. Submit snapshot requests for every 200,000 blocks.

After the 5th snapshot has been taken, record the time to generate and snapshot sizes in a spreadsheet and attach to this Jira.",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18218,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g8r:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kubernetes - Perform Join By Snapshot With Large Payload Using CouchDB,FAB-18227,46006,45994,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,btl5037,btl5037,btl5037,09/Sep/20 11:47 AM,11/Jan/21 1:29 AM,28/Oct/23 3:09 AM,11/Jan/21 1:29 AM,,,,,,,,,,,,fabric-quality,,,,0,snapshot,,,,,"Using the snapshot files generated in the previous task, bootstrap a new peer using `peer channel joinbysnapshot` command.

Record the time for each snapshot to join and graph it as a function block height and attach it to this Jira.

Acceptance Criteria: A graph of the time to join as a function of blockheight is available for review",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18221,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g8z:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[fabric-samples] Add ERC20 fungible token sample,FAB-18228,46013,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yuki-kon,yuki-kon,yuki-kon,10/Sep/20 12:00 PM,29/Oct/20 9:38 AM,28/Oct/23 3:09 AM,29/Oct/20 9:38 AM,,,,,,,,,,,,fabric-samples,,,,0,,,,,,"Add a sample of how to use a fungible token in Chaincode.
This Chaincode is a sample implementation of [ERC20](https://eips.ethereum.org/EIPS/eip-20),
which is a standard interface of tokens in Ethereum.

ERC20 provides basic functionality to transfer tokens, as well as allow tokens
to be approved so they can be spent by another on-chain third party.
Most of major tokens on the Ethereum are ERC20 compliant.

The functionality defined by ERC20 is also useful for Chaincode in Hyperledger
Fabric. Since ERC20 is a specification of token interfaces, it can be implemented
by any blockchain software. Thie sample shows the ERC20 for Hyperledger Fabric
so that we can use the major token protocol.",,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Sep/20 1:25 PM;yuki-kon;fabric-samples-ERC20.pptx;https://jira.hyperledger.org/secure/attachment/18801/fabric-samples-ERC20.pptx",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gab:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yuki-kon,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Sep/20 9:08 AM;yuki-kon;PR is here. https://github.com/hyperledger/fabric-samples/pull/327;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Audit and update usage of pkg/errors in channel participation codebase,FAB-18229,46015,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jcastrence,wlahti,wlahti,10/Sep/20 11:38 PM,08/Oct/20 6:32 AM,28/Oct/23 3:09 AM,08/Oct/20 6:32 AM,,,,,,,,,,,,,,,,0,ipm,,,,,"Use errors.Wrap() for errors that were generated by an external (vendored) package (to ensure we generate a stack). 

Use errors.WithMessage() for errors that were generated by fabric (to ensure we don't generate another stack).

Use errors.Errorf() for errors that are currently coded to use fmt.Errorf()

 

Includes (but not limited to):
 * orderer/common/multichannel/registrar.go ✅
 * orderer/common/multichannel/chainsupport.go ✅
 * orderer/common/multichannel/ledger_resources.go ✅
 * orderer/common/channelparticipation ✅
 * orderer/common/follower ✅
 * orderer/common/filerepo ✅
 * orderer/common/onboarding ✅",,robmurgai,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxi",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),robmurgai,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Investigate (and clean up/refactor, if necessary) orderer start sequence after removing system channel",FAB-18230,46016,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,11/Sep/20 1:14 AM,28/Oct/20 4:46 AM,28/Oct/23 3:09 AM,28/Oct/20 4:46 AM,,,,,,,,,,,,,,,,0,ipm,,,,,"Investigate the orderer start sequence considering the scenario where the system channel has been removed from an existing network.
 * Do we have to set bootstrap method to none in the orderer config for these existing networks? (The obvious thing is that it will log at the info level 
[""Not bootstrapping the system channel because of existing channels""|https://github.com/hyperledger/fabric/blob/master/orderer/common/server/main.go#L128] ).
* Does the bootstrap block need to be set to """" for this scenario?
* Consider doc update related to bootstrap method and bootstrap block config options after removing system channel.",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17965,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxbi",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Oct/20 5:25 AM;wlahti;Opened an initial PR that refactors startup a little for clarity and changes one log statement to debug instead of info: [https://github.com/hyperledger/fabric/pull/2040]

Still doing a little investigation into one remaining log message that prints at startup that doesn't seem accurate since migration is not happening in the scenario:
{noformat}
[e][OrdererOrg.orderer1] 2020-10-22 16:13:47.983 EDT [orderer.consensus.etcdraft] Start -> INFO 085 Consensus-type migration detected, starting new raft node on an existing channel; height=4 channel=testchannel node=1
{noformat};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getting an error while deploy chaincode ,FAB-18231,46106,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,huytn.it,huytn.it,14/Sep/20 7:03 PM,15/Sep/20 10:18 PM,28/Oct/23 3:09 AM,15/Sep/20 10:18 PM,,,,,,,,,,,,,,,,0,,,,,,"Hi,

I got error message: Error: proposal failed with status: 500 - failed to invoke backing implementation of 'ApproveChaincodeDefinitionForMyOrg': could not fetch uncommitted definition: could not query metadata for namespace namespaces/mychaincode#1: GET_STATE failed: transaction ID: 7a7e278d77a527c946cb4dfd7bfe4b90f03cb7f6790cef27e5780fa2898d2b10: error handling CouchDB request. Error:not_found, Status Code:404, Reason:Database does not exist.

I deployed hf-v2.2.0 test-network on two hosts:
 * host1: ca-orderer, ca-org1, orderer, peer0.org1, couchdb
 * host2: ca-org2, peer0.org2, couchdb

Here is logs:
{code:java}
2020-09-14 08:54:20.696 UTC [dockercontroller] buildImage -> DEBU e56c81 Created image: dev-peer0.org1.example.com-mychaincode_1-db86121c572e1fb07f27281fe56bcc5f1356661d46d6fa044602842312d1ed3c-4dca42a28922a40fe4217468d257da7925f8789c49717a2d88d7d8445a3e323e
2020-09-14 08:54:20.698 UTC [lifecycle] ProcessInstallEvent -> DEBU e56c82 ProcessInstallEvent() - localChaincode = &{mychaincode_1:db86121c572e1fb07f27281fe56bcc5f1356661d46d6fa044602842312d1ed3c golang wisekeycerts mychaincode_1}
2020-09-14 08:54:20.699 UTC [lifecycle] Work -> DEBU e56c83 skipping build of chaincode 'mychaincode_1:db86121c572e1fb07f27281fe56bcc5f1356661d46d6fa044602842312d1ed3c' as it is already in progress
2020-09-14 08:54:20.833 UTC [ccprovider] MetadataAsTarEntries -> DEBU e56c84 Created metadata tar
2020-09-14 08:54:20.833 UTC [lifecycle] InstallChaincode -> INFO e56c85 Successfully installed chaincode with package ID 'mychaincode_1:db86121c572e1fb07f27281fe56bcc5f1356661d46d6fa044602842312d1ed3c'
2020-09-14 08:54:20.833 UTC [chaincode] handleMessage -> DEBU e56c86 [e511072a] Fabric side handling ChaincodeMessage of type: COMPLETED in state ready
2020-09-14 08:54:20.834 UTC [chaincode] Notify -> DEBU e56c87 [e511072a] notifying Txid:e511072aa75b4d588c32a98956ec6d59e8b0d56d13ed25907eb7778b3dd6402c, channelID:
2020-09-14 08:54:20.834 UTC [chaincode] Execute -> DEBU e56c88 Exit
2020-09-14 08:54:20.834 UTC [endorser] callChaincode -> INFO e56c89 finished chaincode: _lifecycle duration: 23556ms channel= txID=e511072a
2020-09-14 08:54:20.834 UTC [comm.grpc.server] 1 -> INFO e56c8a unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=172.18.0.1:47662 grpc.code=OK grpc.call_duration=23.578819518s
2020-09-14 08:54:20.890 UTC [grpc] infof -> DEBU e56c8b transport: loopyWriter.run returning. connection error: desc = ""transport is closing""
2020-09-14 08:54:20.894 UTC [grpc] infof -> DEBU e56c8c transport: loopyWriter.run returning. connection error: desc = ""transport is closing""
......
2020-09-14 08:54:43.649 UTC [statecouchdb] GetState -> DEBU e57141 GetState(). ns=_lifecycle, key=namespaces/metadata/mychaincode
2020-09-14 08:54:43.650 UTC [couchdb] readDoc -> DEBU e57142 [mychannel__lifecycle] Entering ReadDoc()  id=[namespaces/metadata/mychaincode]
2020-09-14 08:54:43.650 UTC [couchdb] handleRequest -> DEBU e57143 Entering handleRequest()  method=GET  url=http://couchdb1:5984  dbName=mychannel__lifecycle
2020-09-14 08:54:43.651 UTC [couchdb] handleRequest -> DEBU e57144 Request URL: http://couchdb1:5984/mychannel__lifecycle/namespaces%2Fmetadata%2Fmychaincode?attachments=true
2020-09-14 08:54:43.660 UTC [couchdb] handleRequest -> DEBU e57145 Error handling CouchDB request. Error:not_found,  Status Code:404,  Reason:Database does not exist.
2020-09-14 08:54:43.663 UTC [couchdb] readDoc -> DEBU e57146 [mychannel__lifecycle] Document not found (404), returning nil value instead of 404 error
2020-09-14 08:54:43.664 UTC [statecouchdb] GetState -> DEBU e57147 GetState(). ns=lscc, key=mychaincode
2020-09-14 08:54:43.664 UTC [couchdb] createDatabaseIfNotExist -> DEBU e57148 [mychannel_lscc] Entering CreateDatabaseIfNotExist()
2020-09-14 08:54:43.664 UTC [couchdb] handleRequest -> DEBU e57149 Entering handleRequest()  method=GET  url=http://couchdb1:5984  dbName=mychannel_lscc
2020-09-14 08:54:43.664 UTC [couchdb] handleRequest -> DEBU e5714a Request URL: http://couchdb1:5984/mychannel_lscc
2020-09-14 08:54:43.667 UTC [couchdb] handleRequest -> DEBU e5714b Error handling CouchDB request. Error:not_found,  Status Code:404,  Reason:Database does not exist.
2020-09-14 08:54:43.667 UTC [couchdb] createDatabaseIfNotExist -> DEBU e5714c [mychannel_lscc] Database does not exist.
2020-09-14 08:54:43.667 UTC [couchdb] handleRequest -> DEBU e5714d Entering handleRequest()  method=PUT  url=http://couchdb1:5984  dbName=mychannel_lscc
2020-09-14 08:54:43.667 UTC [couchdb] handleRequest -> DEBU e5714e Request URL: http://couchdb1:5984/mychannel_lscc
2020-09-14 08:54:43.718 UTC [gossip.gossip] handleMessage -> DEBU e5714f Entering, 10.0.1.134:34862 43c2d606b286c081fb27ef65ddf7a04ec195eb66a2c0e3cc69ecf07a9d13bc13 sent us GossipMessage: Channel: , nonce: 0, tag: CHAN_OR_ORG state_info_pull_req: Channel MAC:36531ebb9d59de386d5ec3d779852120c966d93da8bc7fc335bb0df5e83a0ed0, Envelope: 39 bytes, Signature: 0 bytes
2020-09-14 08:54:43.718 UTC [msp] DeserializeIdentity -> DEBU e57150 Obtaining identity
2020-09-14 08:54:43.718 UTC [msp] DeserializeIdentity -> DEBU e57151 Obtaining identity
2020-09-14 08:54:43.719 UTC [gossip.gossip] handleMessage -> DEBU e57152 Exiting
2020-09-14 08:54:43.752 UTC [couchdb] handleRequest -> DEBU e57153 Exiting handleRequest()
2020-09-14 08:54:43.753 UTC [couchdb] createDatabaseIfNotExist -> INFO e57154 Created state database mychannel_lscc
2020-09-14 08:54:43.753 UTC [couchdb] applyDatabaseSecurity -> DEBU e57155 [mychannel_lscc] Entering ApplyDatabaseSecurity()
2020-09-14 08:54:43.753 UTC [couchdb] applyDatabaseSecurity -> DEBU e57156 [mychannel_lscc] Applying security to database: {""admins"":{""names"":[""admin""],""roles"":[]},""members"":{""names"":[""admin""],""roles"":[]}}
2020-09-14 08:54:43.753 UTC [couchdb] handleRequest -> DEBU e57157 Entering handleRequest()  method=PUT  url=http://couchdb1:5984  dbName=mychannel_lscc
2020-09-14 08:54:43.753 UTC [couchdb] handleRequest -> DEBU e57158 Request URL: http://couchdb1:5984/mychannel_lscc/_security
2020-09-14 08:54:43.795 UTC [couchdb] handleRequest -> DEBU e57159 Exiting handleRequest()
2020-09-14 08:54:43.796 UTC [couchdb] applyDatabaseSecurity -> DEBU e5715a [mychannel_lscc] Exiting ApplyDatabaseSecurity()
2020-09-14 08:54:43.796 UTC [couchdb] createDatabaseIfNotExist -> DEBU e5715b [mychannel_lscc] Exiting CreateDatabaseIfNotExist()
2020-09-14 08:54:43.796 UTC [couchdb] readDoc -> DEBU e5715c [mychannel_lscc] Entering ReadDoc()  id=[mychaincode]
2020-09-14 08:54:43.796 UTC [couchdb] handleRequest -> DEBU e5715d Entering handleRequest()  method=GET  url=http://couchdb1:5984  dbName=mychannel_lscc
2020-09-14 08:54:43.796 UTC [couchdb] handleRequest -> DEBU e5715e Request URL: http://couchdb1:5984/mychannel_lscc/mychaincode?attachments=true
2020-09-14 08:54:43.798 UTC [couchdb] handleRequest -> DEBU e5715f Error handling CouchDB request. Error:not_found,  Status Code:404,  Reason:missing
2020-09-14 08:54:43.798 UTC [couchdb] readDoc -> DEBU e57160 [mychannel_lscc] Document not found (404), returning nil value instead of 404 error
2020-09-14 08:54:43.804 UTC [lifecycle] ApproveChaincodeDefinitionForMyOrg -> DEBU e57161 received invocation of ApproveChaincodeDefinitionForMyOrg on channel 'mychannel' for definition 'sequence: 1, endorsement info: (version: '1', plugin: '', init required: true), validation info: (plugin: '', policy: ''), collections: ()'
2020-09-14 08:54:43.805 UTC [chaincode] handleMessage -> DEBU e57162 [7a7e278d] Fabric side handling ChaincodeMessage of type: GET_STATE in state ready
2020-09-14 08:54:43.805 UTC [chaincode] HandleTransaction -> DEBU e57163 [7a7e278d] handling GET_STATE from chaincode
2020-09-14 08:54:43.805 UTC [chaincode] HandleGetState -> DEBU e57164 [7a7e278d] getting state for chaincode _lifecycle, key namespaces/fields/mychaincode/Sequence, channel mychannel
2020-09-14 08:54:43.805 UTC [statecouchdb] GetState -> DEBU e57165 GetState(). ns=_lifecycle, key=namespaces/fields/mychaincode/Sequence
2020-09-14 08:54:43.805 UTC [couchdb] readDoc -> DEBU e57166 [mychannel__lifecycle] Entering ReadDoc()  id=[namespaces/fields/mychaincode/Sequence]
2020-09-14 08:54:43.806 UTC [couchdb] handleRequest -> DEBU e57167 Entering handleRequest()  method=GET  url=http://couchdb1:5984  dbName=mychannel__lifecycle
2020-09-14 08:54:43.806 UTC [couchdb] handleRequest -> DEBU e57168 Request URL: http://couchdb1:5984/mychannel__lifecycle/namespaces%2Ffields%2Fmychaincode%2FSequence?attachments=true
2020-09-14 08:54:43.807 UTC [couchdb] handleRequest -> DEBU e57169 Error handling CouchDB request. Error:not_found,  Status Code:404,  Reason:Database does not exist.
2020-09-14 08:54:43.808 UTC [couchdb] readDoc -> DEBU e5716a [mychannel__lifecycle] Document not found (404), returning nil value instead of 404 error
2020-09-14 08:54:43.808 UTC [chaincode] HandleGetState -> DEBU e5716b [7a7e278d] No state associated with key: namespaces/fields/mychaincode/Sequence. Sending RESPONSE with an empty payload
2020-09-14 08:54:43.808 UTC [chaincode] HandleTransaction -> DEBU e5716c [7a7e278d] Completed GET_STATE. Sending RESPONSE
2020-09-14 08:54:43.808 UTC [chaincode] handleMessage -> DEBU e5716d [7a7e278d] Fabric side handling ChaincodeMessage of type: GET_STATE in state ready
2020-09-14 08:54:43.809 UTC [chaincode] HandleTransaction -> DEBU e5716e [7a7e278d] handling GET_STATE from chaincode
2020-09-14 08:54:43.809 UTC [chaincode] HandleGetState -> DEBU e5716f [7a7e278d] getting state for chaincode _lifecycle, key namespaces/metadata/mychaincode#1, channel mychannel
2020-09-14 08:54:43.810 UTC [msp] GetManagerForChain -> DEBU e57170 Returning existing manager for channel 'mychannel'
2020-09-14 08:54:43.811 UTC [lockbasedtxmgr] retrieveCollConfigFromStateDB -> DEBU e57171 retrieveCollConfigFromStateDB() begin - ns=[_lifecycle]
2020-09-14 08:54:43.814 UTC [lockbasedtxmgr] retrieveCollConfigFromStateDB -> DEBU e57172 retrieveCollConfigFromStateDB() successfully retrieved - ns=[_lifecycle], confPkg=[config:<static_collection_config:<name:""_implicit_org_Org2MSP"" member_orgs_policy:<signature_policy:<rule:<n_out_of:<n:1 rules:<signed_by:0 > > > identities:<principal:""\n\007Org2MSP"" > > > > > config:<static_collection_config:<name:""_implicit_org_Org1MSP"" member_orgs_policy:<signature_policy:<rule:<n_out_of:<n:1 rules:<signed_by:0 > > > identities:<principal:""\n\007Org1MSP"" > > > maximum_peer_count:1 > > ]
2020-09-14 08:54:43.815 UTC [statecouchdb] GetState -> DEBU e57173 GetState(). ns=_lifecycle$$p_implicit_org_Org1MSP, key=namespaces/metadata/mychaincode#1
2020-09-14 08:54:43.815 UTC [statecouchdb] getNamespaceDBHandle -> DEBU e57174 [mychannel] add namespaceDBInfo for namespace _lifecycle$$p_implicit_org_Org1MSP
2020-09-14 08:54:43.815 UTC [couchdb] saveDoc -> DEBU e57175 [mychannel_] Entering SaveDoc() id=[channel_metadata]
2020-09-14 08:54:43.816 UTC [couchdb] readDoc -> DEBU e57176 [mychannel_] Entering ReadDoc()  id=[channel_metadata]
2020-09-14 08:54:43.816 UTC [couchdb] handleRequest -> DEBU e57177 Entering handleRequest()  method=GET  url=http://couchdb1:5984  dbName=mychannel_
2020-09-14 08:54:43.816 UTC [couchdb] handleRequest -> DEBU e57178 Request URL: http://couchdb1:5984/mychannel_/channel_metadata?attachments=true
2020-09-14 08:54:43.817 UTC [couchdb] handleRequest -> DEBU e57179 Error handling CouchDB request. Error:not_found,  Status Code:404,  Reason:Database does not exist.
2020-09-14 08:54:43.817 UTC [couchdb] readDoc -> DEBU e5717a [mychannel_] Document not found (404), returning nil value instead of 404 error
2020-09-14 08:54:43.817 UTC [couchdb] handleRequest -> DEBU e5717b Entering handleRequest()  method=PUT  url=http://couchdb1:5984  dbName=mychannel_
2020-09-14 08:54:43.818 UTC [couchdb] handleRequest -> DEBU e5717c Request URL: http://couchdb1:5984/mychannel_/channel_metadata
2020-09-14 08:54:43.819 UTC [couchdb] handleRequest -> DEBU e5717d Error handling CouchDB request. Error:not_found,  Status Code:404,  Reason:Database does not exist.
2020-09-14 08:54:43.820 UTC [chaincode] HandleTransaction -> ERRO e5717e [7a7e278d] Failed to handle GET_STATE. error: error handling CouchDB request. Error:not_found,  Status Code:404,  Reason:Database does not exist.
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb.(*couchInstance).handleRequest
	/go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb/couchdb.go:1812
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb.(*couchDatabase).handleRequestWithRevisionRetry
	/go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb/couchdb.go:1596
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb.(*couchDatabase).saveDoc
	/go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb/couchdb.go:579
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb.(*VersionedDB).writeChannelMetadata
	/go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go:831
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb.(*VersionedDB).getNamespaceDBHandle
	/go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go:252
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb.(*VersionedDB).readFromDB
	/go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go:439
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb.(*VersionedDB).GetState
	/go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go:419
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/privacyenabledstate.(*DB).GetPrivateData
	/go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/privacyenabledstate/db.go:186
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr.(*queryExecutor).GetPrivateData
	/go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/query_executor.go:205
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetState
	/go/src/github.com/hyperledger/fabric/core/chaincode/handler.go:613
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
	/go/src/github.com/hyperledger/fabric/core/chaincode/handler.go:244
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1373
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetState
	/go/src/github.com/hyperledger/fabric/core/chaincode/handler.go:618
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
	/go/src/github.com/hyperledger/fabric/core/chaincode/handler.go:244
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1373
GET_STATE failed: transaction ID: 7a7e278d77a527c946cb4dfd7bfe4b90f03cb7f6790cef27e5780fa2898d2b10
github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction
	/go/src/github.com/hyperledger/fabric/core/chaincode/handler.go:248
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1373
2020-09-14 08:54:43.820 UTC [chaincode] HandleTransaction -> DEBU e5717f [7a7e278d] Completed GET_STATE. Sending ERROR
2020-09-14 08:54:43.820 UTC [chaincode] handleMessage -> DEBU e57180 [7a7e278d] Fabric side handling ChaincodeMessage of type: COMPLETED in state ready
2020-09-14 08:54:43.820 UTC [chaincode] Notify -> DEBU e57181 [7a7e278d] notifying Txid:7a7e278d77a527c946cb4dfd7bfe4b90f03cb7f6790cef27e5780fa2898d2b10, channelID:mychannel
2020-09-14 08:54:43.820 UTC [chaincode] Execute -> DEBU e57182 Exit
2020-09-14 08:54:43.821 UTC [endorser] callChaincode -> INFO e57183 finished chaincode: _lifecycle duration: 175ms channel=mychannel txID=7a7e278d
{code}
 
What i did wrong?",,btl5037,huytn.it,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gbn:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,huytn.it,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/20 10:18 PM;btl5037;Jira isn't really the appropriate place for asking support questions, it is a place for raising bug and feature requests. You can ask the same question on chat.hyperledger.org or through our mailing list at: [fabric@lists.hyperledger.org|mailto:fabric@lists.hyperledger.org]

That being said, when you ask on RocketChat or our mailing list, please include the entire log from your peer so we can see why the database failed to be created.

Thank you;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Successful Transaction on the Peer throwing error in the orderer.,FAB-18232,46116,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,robmurgai,robmurgai,15/Sep/20 6:31 AM,17/Apr/21 12:45 AM,28/Oct/23 3:09 AM,17/Apr/21 12:45 AM,,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"When executing ""peer lifecycle chaincode approveformyorg"" CLI command, you could get a success response from the Peer:
{quote}2020-09-13 02:13:07.929 EDT [chaincodeCmd] ClientWait -> INFO 001 txid [4b41a1d68e1bf5ba5e7feea0a962bacd4b7613f84e00cb6eb3617180a91c053f] committed with status (VALID) at
{quote}
and an error from the Orderer:
{quote}2020-09-13 02:13:07.932 EDT [orderer.common.broadcast] Handle -> WARN 012 Error reading from 127.0.0.1:52219: rpc error: code = Canceled desc = context canceled
2020-09-13 02:13:07.935 EDT [comm.grpc.server] 1 -> INFO 013 streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Broadcast grpc.peer_address=127.0.0.1:52219 error=""rpc error: code = Canceled desc = context canceled"" grpc.code=Canceled grpc.call_duration=2.107339932s
{quote}
 

 

 ",,robmurgai,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gdn:",,,,Unset,Unset,,"From Testing with Binaries (https://wiki.hyperledger.org/display/fabric/Testing+with+Fabric+binaries)

Add fabric /build/bin to your PATH so that you can easily execute the binaries.
Set FABRIC_CFG_PATH to fabric /sampleconfig directory, which contains sample orderer.yaml, peer.yaml, configtx.yaml, and msp for a SampleOrg.

Open three terminal windows, one each for orderer, peer, and CLI. cd to /fabric directory in each terminal.


[Build fabric in either terminal]
$ make orderer peer configtxgen
$ make docker-clean docker


[orderer terminal]
$ configtxgen -profile SampleSingleMSPSolo -channelID test-system-channel-name -outputBlock sampleconfig/genesisblock
$ orderer


[peer terminal]

$ FABRIC_LOGGING_SPEC=debug:cauthdsl,policies,msp,grpc,peer.gossip.mcs,gossip,leveldbhelper=info peer node start


[CLI terminal]

$ configtxgen -channelID mychannel -outputCreateChannelTx mychannel.tx -profile SampleSingleMSPChannel
$ peer channel create -c mychannel -o 127.0.0.1:7050 -f mychannel.tx
$ peer channel join -b mychannel.block
$ peer lifecycle chaincode package marbles.tar.gz --path peer lifecycle chaincode package marbles.tar.gz --path github.com/hyperledger/fabric/integration/chaincode/marbles/cmd --lang golang --label marbles_1
$ peer lifecycle chaincode install marbles.tar.gz
CC_PACKAGE_ID=marbles_1:<value returned by install step>
$ peer lifecycle chaincode approveformyorg -o 127.0.0.1:7050 --channelID mychannel --name marbles --version 1 --package-id $CC_PACKAGE_ID --sequence 1
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),robmurgai,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/20 8:35 AM;yacovm;This is just a warning that means that the client closed the stream in an abrupt way.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
follower.BlockPullerCreator VerifyBlockSequence skip genesis block,FAB-18233,46121,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,16/Sep/20 10:33 PM,17/Sep/20 1:35 AM,28/Oct/23 3:09 AM,17/Sep/20 1:35 AM,v2.x,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"returns an error if the block slice contains only one block (number 0)

 
{quote}2020-09-16 08:24:05.797 EDT [orderer.commmon.multichannel] JoinChannel -> INFO 01e Joining channel:
Unknown macro: \{participation-trophy follower onboarding 0}
2020-09-16 08:24:05.807 EDT [orderer.common.cluster.puller] fetchLastBlockSeq -> INFO 01f 127.0.0.1:26500 is at block sequence of 0 channel=participation-trophy
 2020-09-16 08:24:05.807 EDT [orderer.common.cluster.puller] connectToSomeEndpoint -> INFO 020 Connected to 127.0.0.1:26500 with last block seq of 0 channel=participation-trophy
 2020-09-16 08:24:05.808 EDT [orderer.common.cluster.puller] obtainStream -> INFO 021 Sending request for block [0] to 127.0.0.1:26500 channel=participation-trophy
 2020-09-16 08:24:05.809 EDT [orderer.common.cluster.puller] pullBlocks -> INFO 022 Got block [0] of size 11 KB from 127.0.0.1:26500 channel=participation-trophy
 2020-09-16 08:24:05.811 EDT [orderer.common.cluster.puller] tryFetchBlock -> ERRO 023 Failed verifying received blocks: buffer is empty channel=participation-trophy
{quote}",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i01gej:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add joinbysnapshotstatus CLI command,FAB-18234,46125,44707,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,wenjian,wenjian,17/Sep/20 11:27 PM,27/Oct/20 2:44 AM,28/Oct/23 3:09 AM,05/Oct/20 11:33 PM,,,,,,,,,,,,,,,,0,,,,,,,,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ger:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Sep/20 2:06 AM;wenjian;PRs: 

[https://github.com/hyperledger/fabric-protos/pull/44]

[https://github.com/hyperledger/fabric/pull/1910];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add NextCommit seek position and fix a corner case when bootstrapping a ledger from snapshot ,FAB-18235,46126,44707,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,wenjian,wenjian,17/Sep/20 11:38 PM,27/Oct/20 2:44 AM,28/Oct/23 3:09 AM,05/Oct/20 11:33 PM,,,,,,,,,,,,,,,,0,,,,,,,,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gez:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,,,,,,,dependabot/bundler/docs/nokogiri-1.14.3,0.2.x,dependabot/bundler/docs/activesupport-6.0.6.1,dependabot/go_modules/bindings/go-apiv1/golang.org/x/text-0.3.8,0.1.x,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/text-0.3.8,dependabot/go_modules/bindings/go-apiv1/golang.org/x/net-0.7.0,dependabot/bundler/docs/commonmarker-0.23.9,dependabot/go_modules/bindings/go-apiv2/golang.org/x/net-0.7.0,release-2.3,release-2.2,dependabot/go_modules/bindings/go-apiv2/golang.org/x/text-0.3.8,release-2.5,release-2.4,github-settings,dependabot/go_modules/bindings/go-apiv2/golang.org/x/sys-0.1.0,dependabot/go_modules/golang.org/x/sys-0.1.0,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,dependabot/go_modules/bindings/go-apiv1/golang.org/x/sys-0.1.0,,,,,,,,,,,,,,,,,,,,,,,true,"17/Sep/20 11:48 PM;wenjian;PRs: 

https://github.com/hyperledger/fabric-protos/pull/42;;;","01/Oct/20 11:06 AM;wenjian;https://github.com/hyperledger/fabric/pull/1936;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 The description of the error is incorrect.,FAB-18236,46134,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kgeonw,kgeonw,kgeonw,22/Sep/20 5:09 PM,23/Sep/20 9:07 AM,28/Oct/23 3:09 AM,23/Sep/20 9:07 AM,,,,,,,,,,,,,,,,0,,,,,,The description of the error is incorrect. An error must be issued according to the transaction type.,,kgeonw,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ghf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),kgeonw,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service discovery fails to return endorsers for chaincodes in 1 org 1 peer networks,FAB-18237,46141,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,sstone1,sstone1,23/Sep/20 8:19 PM,24/Sep/20 1:05 AM,28/Oct/23 3:09 AM,24/Sep/20 1:05 AM,,,,,,,v1.4.9,v2.2.1,v2.3.0,,,fabric-gossip,,,,0,operator,,,,,"This is a regression introduced by the changes in FAB-18208 - with a 1 org 1 peer network, service discovery no longer returns information on any chaincodes that are installed on that peer. This means that the SDKs cannot submit transactions with discovery enabled (the default) as the following error message is returned:
{noformat}
server returned: failed constructing descriptor for chaincodes:<name:""fabcar"" >{noformat}",,denyeart,sstone1,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01giz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,sstone1,yacovm,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Sep/20 10:20 PM;denyeart;https://github.com/hyperledger/fabric/pull/1912 (master)
Also needed in v2.2.1 and v1.4.9.
No release note needed since the fix goes along with another change that is release noted (not a problem in existing releases).;;;","23/Sep/20 10:32 PM;yacovm;Nice catch, though, I never imagined people would use discovery with no gossip.

[ master|https://github.com/hyperledger/fabric/pull/1912]
[release-2.2|https://github.com/hyperledger/fabric/pull/1913]
[release-1.4|https://github.com/hyperledger/fabric/pull/1915]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent failure in raft/cft_test,FAB-18238,46144,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,24/Sep/20 12:37 AM,25/Sep/20 3:30 AM,28/Oct/23 3:09 AM,25/Sep/20 12:29 AM,,,,,,,v2.2.1,v2.3.0,,,,,,,,0,ci-flake,ipm,,,,"• Failure [15.266 seconds] 
EndToEnd Crash Fault Tolerance when orderer TLS certificates expire [It] is still possible to recover  
/home/vsts/work/1/fabric/integration/raft/cft_test.go:353 
 
 No future change is possible. Bailing out early after 0.062s. 
 Expected 
 <int>: 1 
 to match exit code: 
 <int>: 0 
 
 /home/vsts/work/1/fabric/integration/raft/cft_test.go:984 
 ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/20 12:37 AM;wlahti;raft-cft-flake.log;https://jira.hyperledger.org/secure/attachment/18809/raft-cft-flake.log",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx2",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Sep/20 2:20 AM;wlahti;I think this should do the trick: [https://github.com/hyperledger/fabric/pull/1916];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
asset transfer basic application-go throw an error,FAB-18239,46145,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Highest,,atiaking,kgeonw,kgeonw,24/Sep/20 6:45 AM,05/Nov/21 5:57 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-sdk-go,,,,0,,,,,,"It throw Error When I perform fabric-samples/asset-transfer-basic/application-go

!image-2020-09-24-06-51-56-422.png!

and Orderer output Error TLS handshake failed

!image-2020-09-24-06-52-03-149.png!

I guess there is a problem with the certificate so wait 1 second after gw.GetNetwork.
 Because It seemed that the discovery service would need some time to retrieve the certificate.
 And I solved that but I still don't know the exact reason.",,kgeonw,Kharvok,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/20 6:51 AM;kgeonw;image-2020-09-24-06-51-56-422.png;https://jira.hyperledger.org/secure/attachment/18810/image-2020-09-24-06-51-56-422.png","24/Sep/20 6:52 AM;kgeonw;image-2020-09-24-06-52-03-149.png;https://jira.hyperledger.org/secure/attachment/18811/image-2020-09-24-06-52-03-149.png",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gjn:",,,,Unset,Unset,,"1.- bring up the test network with CA 
  [./ network.sh up createChannel -ca -c mychannel]
2.- deploy cc 
  [./network.sh deployCC -ccn basic]
3.- use asset transfer basic application-go 
  [./go run assetTransfer.go]
4.- Error occurred Orderer TLS handshake failed
5.- add time.Sleep 1 second after GetNetwork
6.- solved that ",,Unset,,,,,,Unset,,Unset,,(Please add usage information),kgeonw,Kharvok,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Sep/20 9:45 PM;rany;Have you solved it? I got the same problem...;;;","06/Oct/20 9:58 AM;kgeonw;No, Just wait 1 second after gw.GetNetwork

so you can see it worked but it is not good solution;;;","06/Oct/20 10:33 AM;rany; 

I found a solution on stackoverflow, it worked. [link here|https://stackoverflow.com/q/62927393/14361586];;;","07/Oct/20 3:27 PM;kgeonw;I guess that the discovery service would need some time to retrieve the certificate.

So your link worked cacerts direct load, it doesn't use discovery service.

 I still don't know the exact reason that need time get nework.;;;","10/Sep/21 12:47 AM;Kharvok;[~kgeonw] where do you add the add.time sleep 1?;;;","10/Sep/21 2:30 PM;kgeonw;after gw.GetNetwork. 
for example >
network, err := gw.GetNetwork(""mychannel"")
_time_._Sleep_(_time_._Second_ * 1);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-samples's application-go failed within the latest version,FAB-18240,46146,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,Frankonly,Frankonly,24/Sep/20 12:56 PM,12/Oct/20 4:57 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"2020/09/24 11:53:21 ============ application-golang starts ============
2020/09/24 11:53:21 ============ Populating wallet ============
 [fabsdk/core] 2020/09/24 03:53:21 UTC - cryptosuite.GetDefault -> INFO No default cryptosuite found, using default SW implementation
2020/09/24 11:53:21 --> Submit Transaction: InitLedger, function creates the initial set of assets on the ledger
2020/09/24 11:53:21 Failed to Submit transaction: Failed to submit: CreateAndSendTransaction failed: SendTransaction failed: calling orderer 'localhost:7050' failed: Orderer Client Status Code: (2) CONNECTION_FAILED. Description: dialing connection on target [localhost:7050]: connection is in TRANSIENT_FAILURE
exit status 1",,Frankonly,rany,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i0c",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Frankonly,rany,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Sep/20 9:41 PM;rany;Have you solved it? I got the same problem...;;;","12/Oct/20 3:42 PM;Frankonly;[~rany] Not now;;;","12/Oct/20 4:57 PM;rany;it's a bug from skd-go, here is a [solution|https://stackoverflow.com/q/62927393/14361586];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fails to read from private data collections although specific organisation is passed.,FAB-18241,46147,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,mukesh.thakur,mukesh.thakur,24/Sep/20 7:36 PM,24/Sep/20 7:37 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"Fails to read from private data collections although specific organisation is passed.


txn, err:= contract.CreateTransaction(
""HelloWorld"",
gateway.WithEndorsingPeers(""localhost:7051""),
)

result, err := txn.Evaluate(""assetID"")

The evaluate seems to ignore - WithEndorsingPeers(""localhost:7051"")

This causes the result to fail to evaluate the transaction, as it might use other peers which does not have right to read the private data of other organisation.

PS: I am unsure if it is bug/feature/task !",,mukesh.thakur,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zym",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mukesh.thakur,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove GetSession Info call before pulling session from pool during HSM signing operation,FAB-18242,46148,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,btl5037,ptippett,ptippett,24/Sep/20 11:24 PM,29/Sep/20 9:23 AM,28/Oct/23 3:09 AM,26/Sep/20 9:41 AM,v1.4.9,,,,,,v1.4.9,v2.2.1,v2.3.0,,,fabric-peer,,,,0,operator,,,,,"A getSessionInfo call was added recently in Fabric to verify each HSM session when it is taken from the pool but before it is used.  This was done given the issues with the HSM proxy which is being removed.

 

The issue with this call is in our performance test environment, this call is taking .7 seconds.  Since it is done on each signing operation, that's causing pretty bad performance for HSM enabled components.

 

There was discussion around moving the check and making it asynchronous which may help.  A better option was to look closely at the error that was returned when a signing operation failed and if it failed due to a bad session, use that failure to remove that session from the tool vs a separate remote grpc call that is expensive.  However, given the urgency, removing the check would be fine for now.",,btl5037,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17722,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gjv:",,,,Unset,Unset,,"Enable HSM for Fabric components.
Turn on pkcs11 debug logs in peer.
Before each HSM signing operation, you'll see a GetSessionInfo call.  Remove that.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,ptippett,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-1.4,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Sep/20 4:50 AM;btl5037;Master: [https://github.com/hyperledger/fabric/pull/1921]

2.2: [https://github.com/hyperledger/fabric/pull/1924]

1.4: [https://github.com/hyperledger/fabric/pull/1923];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide metrics around HSM operations.,FAB-18243,46149,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,ptippett,ptippett,25/Sep/20 12:27 AM,03/Nov/20 12:01 AM,28/Oct/23 3:09 AM,,v1.4.6,v2.1.0,,,,,,,,,,fabric-ca,fabric-orderer,fabric-peer,,2,operator,,,,,"We are doing HSM performance testing and decided it would be valuable to add metrics around PKCS11 calls so we can easily see how many calls are being made and, more importantly, how long the calls are taking.

 

This would help users be able to quickly spot HSM related issues vs issues in fabric itself.

 

Some possible metrics, although this is off the top of my head, so please provide what you think makes sense:

 
 * Time each call takes
 * Number of calls
 * Session Pool size?
 * Metrics on sessions that are removed from the pool because they are invalid?",,nkl199,ptippett,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idz",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,ptippett,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prevent intermittent WAL snapshot corruption preventing an orderer from starting.,FAB-18244,46150,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,guoger,ptippett,ptippett,25/Sep/20 12:39 AM,12/Nov/20 12:17 AM,28/Oct/23 3:09 AM,12/Nov/20 12:17 AM,v1.4.9,v2.1.0,,,,,v1.4.10,v2.2.2,v2.3.0,,,fabric-orderer,,,,0,operator,,,,,"We had a user  with a single node ordering service and the orderer crashed and would not come back up.  After debugging the issue, Yellick root caused to:
{color:#172b4d}
{color}The issue is, I think, that the the commit process looks like this:

1. Raft tells us ""this is the set of stuff that's been consented on""
2. We persist that stuff to disk
3. If our WAL is getting too big, we also persist a snapshot to disk
4. We apply the stuff to our blockchain.

What is happening is that we are thrashing between 3 and 4, and, then at startup, we read ""there's a snapshot for block n+1"", but our blockchain is only at n! Let's go replicate before we try to start consenting.  But, we actually already have that entry, we just haven't committed it to the blockchain yet.

This Jira is to correct this problem by, we believe, flipping 3 and 4 in the process above.",,denyeart,guoger,jyellick,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18254,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gkb:",,,,Unset,Unset,,"Given my understanding of the problem, the only way to reproduce is to get into a state where the WAL file is large and being persisted to disk and keep bouncing the orderer until you hit this case.

Yellick may have better steps though.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,guoger,jyellick,ptippett,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Sep/20 1:43 AM;jyellick;After some further analysis with [~guoger], I think the resolution is not to flip 3 and 4, since in general we do not want to force WriteBlock to be synchronous for the consensus plugin.  Rather, the important piece is already in place that the entries are persisted to the WAL before the snapshot is

The real problem is that, at startup, we try to state transfer to the latest snapshot before applying everything that is unapplied in the WAL.  If we can apply what's committed to the WAL and catch up to the snapshot, then when we apply the snapshot it will be a no-op.  This is better behavior generally (why replicate over the network what you already have on disk) and should fix this particular crash scenario where the snapshot gets persisted to disk before the blocks are persisted to the blockchain.;;;","03/Oct/20 3:39 PM;guoger;https://github.com/hyperledger/fabric/pull/1964;;;","03/Oct/20 3:39 PM;guoger;from commit message:
{quote}
Support.WriteBlock commits block to ledger asynchronously and can have
up to one block in-flight. And there's possibility a node crashes before
such block is persisted successfully. Normally when node restarts, Raft
loads entries from WAL and attempts to re-apply them. However, when a
snapshot is taken at this block, only entries after (if any) the
snapshot are loaded, and we end up hanging here forever waiting for
missing blocks to be pulled from nowhere in single node situation.

A straightforward solution would be to peek into ledger tip first, and
decide whether to load some ""old"" entries from WAL, instead of blindly
load data after latest snapshot. Although it's trickier than it sounds:

today, we don't strictly respect the contract between Raft and state
machine, where applied data should not be lossy and it's safe to prune
data in WAL after snapshots. For example, in extreme case, if we lose
the entire ledger, we should not expect it to be recoverable from WAL

etcd/raft persistence library does not provide friendly interfaces
to control what data to load in fine-grained manner. For example,
snap.Load() simply looks for latest snapshot available, and loads
entries after that. If we'd like to, for example, load older data prior
to that snapshot, we'll need to come up with our own utilities

This commit aims to provide a quick fix for bug described in FAB-18244,
leveraging the fact that we can have only one async block in-flight, and
leave the ""correct"" solution to future work.
{quote};;;","12/Oct/20 11:10 AM;denyeart;[~guoger] [~jyellick]  Is there intent to backport for 2.2.2 and 1.4.10?  If so, please update Fix Versions. If not, please close.;;;","12/Oct/20 12:29 PM;guoger;[~denyeart] I'll do cherrypicks for both;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB cache - Large values are not added to peer's CouchDB cache,FAB-18245,46151,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,przemyslaw.wasala,denyeart,denyeart,25/Sep/20 5:55 AM,25/Sep/20 5:56 AM,28/Oct/23 3:09 AM,25/Sep/20 5:55 AM,v2.2.0,,,,,,v2.2.1,v2.3.0,,,,fabric-ledger,,,,0,,,,,,"Description

Saving big payloads (bigger than 64kb are not saved in cache)

Additional details

When saving big payloads more than 64kb, changes are updated/saved in CouchDB, but aren't
visible in cache (nothing changed). Then when we execute stub.getState(""someID"") nothing has been returned
or old revision (smaller than 64kb) will be returned.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gkj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Sep/20 5:56 AM;denyeart;https://github.com/hyperledger/fabric/pull/1909
https://github.com/hyperledger/fabric/pull/1925;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expose an Admin endpoint for the channel participation API,FAB-18246,46152,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,wlahti,tock,tock,25/Sep/20 2:29 PM,26/Oct/20 10:21 PM,28/Oct/23 3:09 AM,26/Oct/20 10:21 PM,,,,,,,,,,,,,,,,0,ipm,,,,,"The channel participation API endpoint should adopts the style of the
 [""Operations"" API](([https://hyperledger-fabric.readthedocs.io/en/release-2.0/operations_service.html#operations-security]))
 in the orderer.

 

We intend to provide an additional HTTP server that is hosted only the orderer, and expose the endpoint
 `/participation/v1`, which has a single resource `/channels`. the orderer configuration, as 
 expressed in the `orderer.yaml` file, will identify endpoint configuration parameters that are unique to the channel 
 participation API. The _local orderer channel participation admin_ is not identified by the MSP, but rather through mutual TLS.
 Like in the operations API that handles log-spec,

 

1. Add to the config of `ChannelParticipation:` in `orderer.yaml` the following parameters:
  
{code:yaml}
  # host and port for the operations server
   ListenAddress: 127.0.0.1:8443

  # TLS configuration for the operations endpoint
   TLS:    # TLS enabled
     Enabled: false

  # Certificate is the location of the PEM encoded TLS certificate
     Certificate: 
  # PrivateKey points to the location of the PEM-encoded key
     PrivateKey: 
  # ClientAuthRequired requires client certificate authentication
  # at the TLS layer to access all resources.
     ClientAuthRequired: false

  # Paths to PEM encoded ca certificates to trust for client authentication
     ClientRootCAs: []
{code}
2. Define a separate (new) HTTP server in `server/main.go` and register the channel participation HTTP handler to it, rather than to the operations API.",,tock,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx69",,,,Unset,Unset,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Sep/20 5:43 AM;wlahti;https://github.com/hyperledger/fabric/pull/1939;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
snapshot is generated but still listed in pending list,FAB-18247,46154,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Test Error,,dongming,dongming,25/Sep/20 11:42 PM,17/Nov/20 12:18 AM,28/Oct/23 3:09 AM,17/Nov/20 12:18 AM,,,,,,,,,,,,fabric-ledger,,,,0,snapshot,,,,,"Fabric peer Commit SHA: 2b27d51

issue:

the block number is listed in the snapshot pending list after snapshot is generated

The list pending command:

Successfully got pending snapshot requests: [274000 290000 291000 292000 293000 294000 295000 296000 297000 298000 299000 300000 310000 320000 330000 340000 350000 400000 600000 800000 1000000]

 

block 274000 is in the pending list, though the peer snapshot directory shows that snapshot for block 274000 is generated
/var/hyperledger/production/ledgersData/snapshots/completed/testorgschannel0 # ls
200000  228000  241000  244000  247000  250000  253000  256000  259000  262000  265000  268000  274000  277000  280000
226000  229000  242000  245000  248000  251000  254000  257000  260000  263000  266000  269000  275000  278000
227000  240000  243000  246000  249000  252000  255000  258000  261000  264000  267000  270000  276000  279000


 

Also the peer log shows that the snapshot is generated:

(state_validation=4ms block_and_pvtdata_commit=17ms state_commit=8ms) commitHash=[44674555037478fbfd7ddae94bb8f2469dcbe74cdf665ea64d56b40deef02443]

^[[34m2020-09-24 17:06:15.954 UTC [gossip.privdata] StoreBlock -> INFO ee3e8^[[0m [testorgschannel0] Received block [274000] from buffer

^[[34m2020-09-24 17:06:15.980 UTC [committer.txvalidator] Validate -> INFO ee3e9^[[0m [testorgschannel0] Validated block [274000] in 25ms

^[[34m2020-09-24 17:06:16.034 UTC [kvledger] commit -> INFO ee3ea^[[0m [testorgschannel0] Committed block [274000] with 100 transaction(s) in 49ms (state_validation=14ms block_and_pvtdata_commit=18ms state_commit=8ms) commitHash=[59440a536a95d9cab00c4e887adb4f0544c19f0a893e0fd87ebdc1fb1e8fb433]

^[[34m2020-09-24 17:06:16.036 UTC [kvledger] func1 -> INFO ee3eb^[[0m Generating snapshot channelID=testorgschannel0 lastCommittedBlockNumber=274000

^[[34m2020-09-24 17:06:16.096 UTC [gossip.privdata] StoreBlock -> INFO ee3ec^[[0m [testorgschannel0] Received block [274001] from buffer

^[[34m2020-09-24 17:06:16.106 UTC [committer.txvalidator] Validate -> INFO ee3ed^[[0m [testorgschannel0] Validated block [274001] in 10ms

^[[34m2020-09-24 17:06:16.110 UTC [kvledger] processSnapshotMgmtEvents -> INFO ee3ee^[[0m commit waiting on snapshot to be generated channelID=testorgschannel0 lastCommittedBlockNumber=274000

^[[34m2020-09-24 17:09:08.033 UTC [kvledger] func1 -> INFO ee3ef^[[0m Generated snapshot channelID=testorgschannel0 lastCommittedBlockNumber=274000

 ",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqw4",,,,Unset,Unset,v2.x,"1. deploy a network with 1 org, 1 peer, 1 orderer with levelDB
2. create/join 1 channel and install/instantiate 1 chaincode
3. submit many snapshot submitrequest
4. execute transactions to generate snapshots
5. the issue occurs after about 40 snapshot generation",,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Sep/20 3:32 AM;dongming;The peer log is in [https://drive.google.com/drive/folders/196OB571ZGWfZMv2Sd1J8iSQ68TtiigT8];;;","17/Nov/20 12:18 AM;dongming;cannot recreate this bug with many attempts;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer does not generate snapshot,FAB-18248,46155,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,dongming,dongming,25/Sep/20 11:47 PM,03/Nov/20 12:07 AM,28/Oct/23 3:09 AM,03/Nov/20 12:07 AM,,,,,,,,,,,,fabric-ledger,,,,0,snapshot,,,,,"peer Commit SHA: 2b27d51

blocks 290000, 291000, 292000 are listed in the list pending:

Successfully got pending snapshot requests: [274000 290000 291000 292000 293000 294000 295000 296000 297000 298000 299000 300000 310000 320000 330000 340000 350000 400000 600000 800000 1000000]

The current block height is 292460

(state_validation=5ms block_and_pvtdata_commit=18ms state_commit=8ms) commitHash=[ce9ddc312f6d9f3112a97b831d3ca13314d3906e4e5d5310fdb7354b801e7da9]

^[[34m2020-09-24 20:57:39.615 UTC [gossip.privdata] StoreBlock -> INFO fbc54^[[0m [testorgschannel0] Received block [292458] from buffer

^[[34m2020-09-24 20:57:39.626 UTC [committer.txvalidator] Validate -> INFO fbc55^[[0m [testorgschannel0] Validated block [292458] in 11ms

^[[34m2020-09-24 20:57:39.670 UTC [kvledger] commit -> INFO fbc56^[[0m [testorgschannel0] Committed block [292458] with 100 transaction(s) in 41ms (state_validation=6ms block_and_pvtdata_commit=18ms state_commit=8ms) commitHash=[bbed7224caa46386815190c3c59efba66a50d730b2dd5dbebe93c910cbd3fc13]

^[[34m2020-09-24 20:57:41.625 UTC [gossip.privdata] StoreBlock -> INFO fbc57^[[0m [testorgschannel0] Received block [292459] from buffer

^[[34m2020-09-24 20:57:41.634 UTC [committer.txvalidator] Validate -> INFO fbc58^[[0m [testorgschannel0] Validated block [292459] in 9ms

^[[34m2020-09-24 20:57:41.677 UTC [kvledger] commit -> INFO fbc59^[[0m [testorgschannel0] Committed block [292459] with 71 transaction(s) in 40ms (state_validation=5ms block_and_pvtdata_commit=17ms state_commit=8ms) commitHash=[d6c805d3ab33e82485073363d5d848e6a35915d5425b387cb21a6eda6712fb72]

 

But peer does NOT generate the above 3 snapshots and list them as pending:

/var/hyperledger/production/ledgersData/snapshots/completed/testorgschannel0 # ls

200000  228000  241000  244000  247000  250000  253000  256000  259000  262000  265000  268000  274000  277000  280000

226000  229000  242000  245000  248000  251000  254000  257000  260000  263000  266000  269000  275000  278000

227000  240000  243000  246000  249000  252000  255000  258000  261000  264000  267000  270000  276000  279000

 ",,denyeart,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqwa",,,,Unset,Unset,v2.x,"1. deploy a network with 1 org, 1 peer, 1 orderer with levelDB
2. create/join 1 channel and install/instantiate 1 chaincode
3. submit many snapshot submitrequest
4. execute transactions to generate snapshots
5. the issue occurs after about 40 snapshot generation",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Sep/20 3:33 AM;dongming;The peer log is in [https://drive.google.com/drive/folders/196OB571ZGWfZMv2Sd1J8iSQ68TtiigT8];;;","03/Nov/20 12:07 AM;denyeart;Can not reproduce.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix empty address in peer CLI ClientWait log message,FAB-18249,46156,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,26/Sep/20 3:57 AM,26/Sep/20 9:35 AM,28/Oct/23 3:09 AM,26/Sep/20 5:17 AM,v2.2.0,,,,,,v2.2.1,v2.3.0,,,,,,,,0,,,,,,"When the --peerAddresses flag is not used, the ClientWait log will log an empty string for the address:
{code:java}
[e][peer-lifecycle-chaincode-approveformyorg] 2020-09-25 14:59:21.988 EDT [chaincodeCmd] ClientWait -> INFO 001 txid [12d84adca31ebb573983ec6b60a0701201739ec430ce713193b0370cee593970] committed with status (VALID) at  {code}
The value of CORE_PEER_ADDRESS should be logged when this is the case. ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01glf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Sep/20 4:17 AM;wlahti;PR master branch: [https://github.com/hyperledger/fabric/pull/1929];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Method For Evicting Invalid PKCS11 Sessions,FAB-18250,46159,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,btl5037,btl5037,btl5037,28/Sep/20 10:07 AM,30/Sep/20 3:57 PM,28/Oct/23 3:09 AM,29/Sep/20 9:55 PM,v1.4.9,v2.2.1,v2.3.0,,,,v1.4.9,v2.2.1,v2.3.0,,,fabric-peer,,,,0,operator,,,,,"There exists no method for checking if a PKCS11 session is invalid and thus no deterministic logic for evicting invalid sessions from the PKCS11 Session Pool.

Introduce a method for evaluating and evicting invalid session",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gln:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Sep/20 12:44 PM;btl5037;[https://github.com/hyperledger/fabric/pull/1935];;;","29/Sep/20 3:49 AM;btl5037;[https://github.com/hyperledger/fabric/pull/19357|https://github.com/hyperledger/fabric/pull/1935];;;","29/Sep/20 3:49 AM;btl5037;[https://github.com/hyperledger/fabric/pull/19358|https://github.com/hyperledger/fabric/pull/1935];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent failure UT: orderer/common/multichannel TestRegistrar_RemoveChannel,FAB-18251,46167,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,29/Sep/20 11:39 PM,30/Sep/20 6:45 AM,28/Oct/23 3:09 AM,30/Sep/20 6:45 AM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ci-flake,,,,,"Tests timeout when removing channel due to the cluster ReplicationMaxRetries set to 0 (aka never stop trying). 
{code:java}
020-09-23T17:26:45.8669349Z [34m2020-09-23 17:06:50.950 UTC [orderer.commmon.follower] halt -> INFO 124[0m Stopped channel=my-follower-raft-channel
2020-09-23T17:26:45.8670969Z [33m2020-09-23 17:06:50.950 UTC [orderer.common.cluster.puller] probeEndpoint -> WARN 125[0m Failed connecting to {""CAs"":[{""Expired"":false,""Issuer"":""CN=Org2,O=Org2,L=San Francisco,ST=California,C=US"",""Subject"":""CN=Org2-child1,O=Org2-child1,L=San Francisco,ST=California,C=US""},{""Expired"":false,""Issuer"":""self"",""Subject"":""CN=Org2,O=Org2,L=San Francisco,ST=California,C=US""}],""Endpoint"":""127.0.0.1:7050""}: failed to create new connection: context deadline exceeded channel=my-follower-raft-channel
2020-09-23T17:26:45.8672555Z [33m2020-09-23 17:06:50.953 UTC [orderer.common.cluster.puller] func1 -> WARN 126[0m Received error of type 'failed to create new connection: context deadline exceeded' from 127.0.0.1:7050 channel=my-follower-raft-channel
2020-09-23T17:26:45.8674311Z [33m2020-09-23 17:06:50.954 UTC [orderer.common.cluster.puller] connectToSomeEndpoint -> WARN 127[0m Could not connect to any endpoint of [{""CAs"":[{""Expired"":false,""Issuer"":""CN=Org2,O=Org2,L=San Francisco,ST=California,C=US"",""Subject"":""CN=Org2-child1,O=Org2-child1,L=San Francisco,ST=California,C=US""},{""Expired"":false,""Issuer"":""self"",""Subject"":""CN=Org2,O=Org2,L=San Francisco,ST=California,C=US""}],""Endpoint"":""127.0.0.1:7050""}] channel=my-follower-raft-channel
2020-09-23T17:26:45.8676533Z [33m2020-09-23 17:06:50.956 UTC [orderer.common.cluster.puller] probeEndpoint -> WARN 128[0m Failed connecting to {""CAs"":[{""Expired"":false,""Issuer"":""CN=Org2,O=Org2,L=San Francisco,ST=California,C=US"",""Subject"":""CN=Org2-child1,O=Org2-child1,L=San Francisco,ST=California,C=US""},{""Expired"":false,""Issuer"":""self"",""Subject"":""CN=Org2,O=Org2,L=San Francisco,ST=California,C=US""}],""Endpoint"":""127.0.0.1:7050""}: failed to create new connection: context deadline exceeded channel=my-follower-raft-channel
2020-09-23T17:26:45.8678344Z [33m2020-09-23 17:06:50.956 UTC [orderer.common.cluster.puller] func1 -> WARN 129[0m Received error of type 'failed to create new connection: context deadline exceeded' from 127.0.0.1:7050 channel=my-follower-raft-channel {code}",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gn7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Sep/20 11:48 PM;wlahti;https://github.com/hyperledger/fabric/pull/1941;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation should reference Java chaincode support,FAB-18252,46170,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,mcoblenz,mcoblenz,30/Sep/20 11:57 PM,13/Jan/21 6:24 AM,28/Oct/23 3:09 AM,13/Jan/21 6:05 AM,,,,,,,,,,,,fabric-docs,,,,0,,,,,,"Support for Java chaincode was removed in 1.0.0 (d6c20715bd4a6d35163cbb7cdcb3150da2f16f64), but it appears to me that it is now supported via [https://github.com/hyperledger/fabric-chaincode-java/.|https://github.com/hyperledger/fabric-chaincode-java/] The documentation should be updated to indicate that Java chaincode is supported (if indeed that is the case!).",,btl5037,mcoblenz,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5185,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhl:w",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,mcoblenz,pandrejko,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.3,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Oct/20 2:00 AM;btl5037;Can you point us to where in the doc you are expecting this to be referenced? Existing doc has many references to Java chaincode, in particular here where it calls out supported chaincodes: [https://hyperledger-fabric.readthedocs.io/en/release-2.2/chaincode4ade.html?highlight=java%20chaincode#what-is-chaincode];;;","02/Oct/20 2:25 AM;mcoblenz;The specific page I was looking at was [https://hyperledger-fabric.readthedocs.io/en/release-2.2/blockchain.html.] That page says ""Chaincode can be implemented in several programming languages. Currently, Go and Node are supported."";;;","13/Jan/21 3:12 AM;pandrejko;https://github.com/hyperledger/fabric/pull/2264;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intelligently load entries from WAL based on ledger state,FAB-18254,46181,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,guoger,guoger,03/Oct/20 3:41 PM,26/Apr/21 9:07 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"leftover task from FAB-18244:
{quote}
A straightforward solution would be to peek into ledger tip first, and
decide whether to load some ""old"" entries from WAL, instead of blindly
load data after latest snapshot.
{quote}",,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18244,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01goz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Crash Fault Tolerance of Create Snapshot,FAB-18255,46183,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,dongming,btl5037,btl5037,05/Oct/20 11:07 PM,06/Oct/20 11:56 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,snapshot,,,,,While generating a snapshot kill the peer and ensure the snapshot generation process continues automatically after the peer restarts. Test that this is the case.,,btl5037,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zylc",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Oct/20 11:44 PM;dongming;steps to test:
1. set the peer to generate snapshot at block=20,000

2. send sufficient transactions to add 20,000 blocks to peer ledger

3. kill the peer when the peer is generating the snapshot at block 20,000

4. check the peer log ensure that the snapshot generation has started, but not yet completed

5 wait for 10 min

6. restart the peer, then check the peer log to ensure that the snapshot is automatically generated


Below is the peer log show that the snapshot generation starts but not completed before the restart, and is generated automatically after restart.

 
^[[34m2020-10-05 17:55:27.873 UTC [kvledger] func1 -> INFO 9825^[[0m Generating snapshot channelID=testorgschannel0 lastCommittedBlockNumber=20000
^[[34m2020-10-05 17:55:27.933 UTC [gossip.privdata] StoreBlock -> INFO 9826^[[0m [testorgschannel0] Received block [20001] from buffer
^[[34m2020-10-05 17:55:27.946 UTC [committer.txvalidator] Validate -> INFO 9827^[[0m [testorgschannel0] Validated block [20001] in 13ms
^[[34m2020-10-05 17:55:27.950 UTC [kvledger] processSnapshotMgmtEvents -> INFO 9828^[[0m commit waiting on snapshot to be generated channelID=testorgschannel0 lastCommittedBlockNumber=20000
^[[34m2020-10-05 18:07:09.498 UTC [nodeCmd] serve -> INFO 001^[[0m Starting peer:
 Version: 2.3.0
 Commit SHA: 20eb852
 Go version: go1.14.4
 OS/Arch: linux/amd64
 Chaincode:
...
^[[34m2020-10-05 18:07:09.954 UTC [deliveryClient] StartDeliverForChannel -> INFO 01e^[[0m This peer will retrieve blocks from ordering service and disseminate to other peers in the organization for channel testorgschannel0
^[[34m2020-10-05 18:07:09.955 UTC [discovery] NewService -> INFO 01f^[[0m Created with config TLS: true, authCacheMaxSize: 1000, authCachePurgeRatio: 0.750000
^[[34m2020-10-05 18:07:09.955 UTC [nodeCmd] registerDiscoveryService -> INFO 020^[[0m Discovery service activated
^[[34m2020-10-05 18:07:09.955 UTC [nodeCmd] serve -> INFO 021^[[0m Starting peer with ID=[peer0-org1], network ID=[dev], address=[peer0-org1:31000]
^[[34m2020-10-05 18:07:09.955 UTC [nodeCmd] serve -> INFO 022^[[0m Started peer with ID=[peer0-org1], network ID=[dev], address=[peer0-org1:31000]
^[[34m2020-10-05 18:07:09.956 UTC [kvledger] LoadPreResetHeight -> INFO 023^[[0m Loading prereset height from path [/var/hyperledger/production/ledgersData/chains]
^[[34m2020-10-05 18:07:10.003 UTC [gossip.privdata] StoreBlock -> INFO 024^[[0m [testorgschannel0] Received block [20001] from buffer
^[[34m2020-10-05 18:07:10.019 UTC [committer.txvalidator] Validate -> INFO 025^[[0m [testorgschannel0] Validated block [20001] in 15ms
^[[34m2020-10-05 18:07:10.027 UTC [kvledger] processSnapshotMgmtEvents -> INFO 026^[[0m commit waiting on snapshot to be generated channelID=testorgschannel0 lastCommittedBlockNumber=20000
^[[34m2020-10-05 18:07:17.044 UTC [kvledger] func1 -> INFO 027^[[0m Generated snapshot channelID=testorgschannel0 lastCommittedBlockNumber=20000
^[[34m2020-10-05 18:07:17.101 UTC [kvledger] commit -> INFO 028^[[0m [testorgschannel0] Committed block [20001] with 100 transaction(s) in 48ms (state_validation=14ms block_and_pvtdata_commit=17ms state_commit=8ms) commitHash=[cd113019333ada8e3f0272a8ea9e1da7dcd625e3883e087b11816498553b7d8f]
^[[34m2020-10-05 18:07:17.103 UTC [gossip.privdata] StoreBlock -> INFO 029^[[0m [testorgschannel0] Received block [20002] from buffer;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test State of Peer After Crash of Join By Snapshot,FAB-18256,46184,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,dongming,btl5037,btl5037,05/Oct/20 11:10 PM,06/Oct/20 11:56 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,snapshot,,,,,"When a peer is joining a channel by snapshot if the peer crashes the peer should restart in a state as if the joinbysnapshot command was never issued. Test that this is the case.

Afterwards issuing the `joinbysnapshot` command manually after the restart should work with no issues.",,btl5037,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zylo",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Oct/20 11:55 PM;dongming;steps to test:
 # generate a snapshot at block=10,000
 # issue bootbysnapshot on a new peer from the snapshot above
 # kill the new peer once the bootbysnapshot process begins on the new peer
 # wait for 3 min, restart the new peer
 # check the new peer log to ensure that it does not boot from snapshot
 # then issue bootbysnapshot again on the new new and the peer is booted successfully from the snapshot

The peer log below shows that the bootbysnapshot begins and the peer is kiiled, then restart and the bootbysnapshot does not occur automatically

 

^[[34m2020-10-05 16:48:54.932 UTC [blkstorage] preResetHtFiles -> INFO 01f^[[0m No active channels passed
 ^[[34m2020-10-05 18:14:22.068 UTC [ledgermgmt] createFromSnapshot -> INFO 020^[[0m Creating ledger from snapshot at /var/hyperledger/production/ledgersData/snapshots/completed/testorgschannel0/10000
 ^[[34m2020-10-05 18:17:50.795 UTC [nodeCmd] serve -> INFO 001^[[0m Starting peer:
 Version: 2.3.0
 Commit SHA: 20eb852
 Go version: go1.14.4
 OS/Arch: linux/amd64
 Chaincode:
 Base Docker Label: org.hyperledger.fabric
 Docker Namespace: hyperledger
 ...
 ^[[34m2020-10-05 18:17:50.825 UTC [ledgermgmt] NewLedgerMgr -> INFO 009^[[0m Initializing LedgerMgr
 ^[[34m2020-10-05 18:17:51.145 UTC [kvledger] deleteUnderConstructionLedgers -> INFO 00a^[[0m An under-construction ledger found at start. This indicates a peer stop/crash during creation of a ledger. Going to delete the partially created ledger ledgerID=testorgschannel0
 ^[[34m2020-10-05 18:17:51.145 UTC [kvledger] Drop -> INFO 00b^[[0m Dropping ledger data channel=testorgschannel0
 ^[[34m2020-10-05 18:17:51.178 UTC [leveldbhelper] deleteAll -> INFO 00c^[[0m Have removed 11114 entries for channel testorgschannel0 in leveldb /var/hyperledger/production/ledgersData/chains/index
 ^[[34m2020-10-05 18:17:51.194 UTC [leveldbhelper] deleteAll -> INFO 00d^[[0m Have removed 22226 entries for channel testorgschannel0 in leveldb /var/hyperledger/production/ledgersData/chains/index
 ^[[34m2020-10-05 18:17:51.210 UTC [leveldbhelper] deleteAll -> INFO 00e^[[0m Have removed 33338 entries for channel testorgschannel0 in leveldb /var/hyperledger/production/ledgersData/chains/index
 ...
 ^[[34m2020-10-05 18:17:52.320 UTC [leveldbhelper] deleteAll -> INFO 030^[[0m Have removed 407351 entries for channel testorgschannel0 in leveldb /var/hyperledger/production/ledgersData/chains/index
 ^[[34m2020-10-05 18:17:52.339 UTC [leveldbhelper] deleteAll -> INFO 031^[[0m Have removed 418341 entries for channel testorgschannel0 in leveldb /var/hyperledger/production/ledgersData/chains/index
 ^[[34m2020-10-05 18:17:52.380 UTC [ledgermgmt] NewLedgerMgr -> INFO 032^[[0m Initialized LedgerMgr
 ^[[34m2020-10-05 18:17:52.384 UTC [gossip.service] New -> INFO 033^[[0m Initialize gossip with endpoint peer1-org1:31001
 ^[[34m2020-10-05 18:17:52.387 UTC [gossip.gossip] New -> INFO 034^[[0m Creating gossip service with self membership of Endpoint: peer1-org1:31001, InternalEndpoint: peer1-org1:31001, PKI-ID: 5116d8d63da490edd2666181c8458c9652952ee3aa9af352190275aef278ef20, Metadata:
 ^[[34m2020-10-05 18:17:52.388 UTC [lifecycle] InitializeLocalChaincodes -> INFO 035^[[0m Initialized lifecycle cache with 0 already installed chaincodes
 ^[[34m2020-10-05 18:17:52.388 UTC [gossip.gossip] start -> INFO 036^[[0m Gossip instance peer1-org1:31001 started
 ^[[34m2020-10-05 18:17:52.389 UTC [nodeCmd] computeChaincodeEndpoint -> INFO 037^[[0m Entering computeChaincodeEndpoint with peerHostname: peer1-org1
 ^[[34m2020-10-05 18:17:52.389 UTC [nodeCmd] computeChaincodeEndpoint -> INFO 038^[[0m Exit with ccEndpoint: peer1-org1:7052
 ^[[34m2020-10-05 18:17:52.392 UTC [sccapi] DeploySysCC -> INFO 039^[[0m deploying system chaincode 'lscc'
 ^[[34m2020-10-05 18:17:52.393 UTC [sccapi] DeploySysCC -> INFO 03a^[[0m deploying system chaincode 'cscc'
 ^[[34m2020-10-05 18:17:52.393 UTC [sccapi] DeploySysCC -> INFO 03b^[[0m deploying system chaincode 'qscc'
 ^[[34m2020-10-05 18:17:52.394 UTC [sccapi] DeploySysCC -> INFO 03c^[[0m deploying system chaincode '_lifecycle'
 ^[[34m2020-10-05 18:17:52.394 UTC [nodeCmd] serve -> INFO 03d^[[0m Deployed system chaincodes
 ^[[34m2020-10-05 18:17:52.394 UTC [discovery] NewService -> INFO 03e^[[0m Created with config TLS: true, authCacheMaxSize: 1000, authCachePurgeRatio: 0.750000
 ^[[34m2020-10-05 18:17:52.394 UTC [nodeCmd] registerDiscoveryService -> INFO 03f^[[0m Discovery service activated
 ^[[34m2020-10-05 18:17:52.395 UTC [nodeCmd] serve -> INFO 040^[[0m Starting peer with ID=[peer1-org1], network ID=[dev], address=[peer1-org1:31001]
 ^[[34m2020-10-05 18:17:52.395 UTC [nodeCmd] serve -> INFO 041^[[0m Started peer with ID=[peer1-org1], network ID=[dev], address=[peer1-org1:31001]
 ^[[34m2020-10-05 18:17:52.395 UTC [kvledger] LoadPreResetHeight -> INFO 042^[[0m Loading prereset height from path [/var/hyperledger/production/ledgersData/chains]
 ^[[34m2020-10-05 18:17:52.395 UTC [blkstorage] preResetHtFiles -> INFO 043^[[0m No active channels passed

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove fixture dependency from etcdraft test (after moving to Go v1.15),FAB-18257,46188,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kopaygorodsky,jyellick,jyellick,07/Oct/20 12:43 AM,09/Feb/21 4:59 AM,28/Oct/23 3:09 AM,09/Feb/21 12:21 AM,,,,,,,,,,,,fabric-orderer,,,,0,ipm,,,,,"PR https://github.com/hyperledger/fabric/pull/1888 introduced a number of new test fixtures because the tlsgen package was not producing certificates with a valid SKI.  It has been verified that with golang v1.15 this generation no longer exhibits the problem.  See the comments in the test to convert this task back to generated certificates, rather than fixtures.",,jyellick,kopaygorodsky,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxqi",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,kopaygorodsky,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Oct/20 2:38 AM;kopaygorodsky;feel free to ping me if I miss 1.15 integration, I'll fix those tests. ;;;","09/Feb/21 12:22 AM;sykesm;https://github.com/hyperledger/fabric/pull/2370;;;","09/Feb/21 4:59 AM;kopaygorodsky;heh, I did have ready PR in my local branch for that :( ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
missing command in step1org3.sh,FAB-18258,46189,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,nasermirzaei89,huytn.it,huytn.it,07/Oct/20 7:49 PM,07/Oct/20 7:51 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"I found the function createUpdateConfig in https://github.com/hyperledger/fabric-samples/blob/master/test-network/scripts/org3-scripts/step1org3.sh misses the command:

jq -s '.[0] * {""channel_group"":{""groups"":{""Application"":{""groups"": {""Org3MSP"":.[1]}}}}}' config.json ./organizations/peerOrganizations/org3.example.com/org3.json > modified_config.json
",,huytn.it,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gq3:",,,,Unset,Unset,,"1. Brought up test-network on two hosts
    - Host1: orderer, ca-orderer, ca-org1, peer0.org1, couchdb1
    - Host2: ca-org2, peer0.org2, couchdb2
2. Add org3 on host3 => error applying config update to existing channel ‘mychannel’: error authorizing update: error validating DeltaSet: policy for [Value] /Channel/Application/Org3MSP/MSP not satisfied: signature set did not satisfy policy",,Unset,,,,,,Unset,,Unset,,(Please add usage information),huytn.it,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Always Finalize FindObject Operations in PKCS11,FAB-18259,46190,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,btl5037,btl5037,btl5037,07/Oct/20 10:49 PM,02/Apr/21 7:52 PM,28/Oct/23 3:09 AM,08/Oct/20 10:55 PM,,,,,,,v1.4.10,v2.2.2,v2.3.0,,,,,,,0,operator,,,,,"There are 6 pkcs11 operations that require the session handle to be finalized before a session can be reused. These operations are: Encrypt, Decrypt, Sign, Verify, Find, and Digest. The bccsp/pkcs11 package makes use of three of these operations: sign, verify, and find. Each of these operations has an init function, i.e., SignInit, VerifyInit and FindObjectInit, each are part of the cryptoki implementation. If the Init functions fail, the session handle is never initialized and the finalize function do not need to be called.

For SignInit and VerifyInit, the next operation we call are the Sign or Verify functions, which also atomically finalized the session. For the FindObjectInit operation however, we must explicitly call the FindObjectFinal function to release the lock on the session handle.

The current implementation makes a call to FindObject in between FindObjectInit and FindObjectFinal which has an error path. In the current implementation FindObjectFinal is not called on the error path, leaving the session in a state that it can't be used again.

We should always finalize regardless of the happy path or error path",,btl5037,wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zyu",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Oct/20 10:50 PM;btl5037;Master: [https://github.com/hyperledger/fabric/pull/1976];;;","07/Oct/20 10:50 PM;btl5037;Release-2.2: [https://github.com/hyperledger/fabric/pull/1979|https://github.com/hyperledger/fabric/pull/1976]

 ;;;","07/Oct/20 10:51 PM;btl5037;Release-1.4: [https://github.com/hyperledger/fabric/pull/1978];;;","02/Apr/21 7:52 PM;wuqiaomin;It seem like a cryptography problem. Is there any obvious phenomenon if the session is not reusable?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
After updating Orderer TLS unable to get blocks from Orderer (for a single node raft),FAB-18260,46191,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,varadatibm,varadatibm,08/Oct/20 1:06 AM,17/Apr/21 4:18 AM,28/Oct/23 3:09 AM,17/Apr/21 4:18 AM,,,,,,,,,,,,fabric-orderer,,,,0,ipm,operator,,,,"On a single node raft orderer, updated the TLS cert.

Now I get a 503 when trying to get the block from orderer.

attaching logs.",,jyellick,tatsu-sato,varadatibm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Oct/20 1:04 AM;varadatibm;varadord1node1-5b9cf756b-4zkcs-orderer.log;https://jira.hyperledger.org/secure/attachment/18827/varadord1node1-5b9cf756b-4zkcs-orderer.log",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8zs001",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,tatsu-sato,varadatibm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Oct/20 3:31 AM;wlahti;Just to clarify, the request here is to allow rotating the orderer TLS certificate with the following flow:
 # update the orderer TLS certificate and key (aka Orderer.General.TLS.Certificate and Orderer.General.TLS.PrivateKey) and restart the orderer (for the new config to take effect)
 # update the consenters set in the channel config for each channel the orderer is a member of

fabric currently only works with the inverse of that flow.;;;","17/Apr/21 4:18 AM;jyellick;Rotating certificates in a single node system may be done by using the same TLS key with a renewed cert in the fashion you described.

If you need to change the key, the update must be submitted before restarting the node.

In general, a single node is not supported for production.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to remove system channel and application channel when using Channel Participation API,FAB-18261,46192,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,suryalnvs,suryalnvs,08/Oct/20 2:54 AM,13/Oct/20 2:09 AM,28/Oct/23 3:09 AM,13/Oct/20 12:24 AM,v2.3.0,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,participation,,,,"*Description*: As part of channel participation api testing, it is failing to delete system channel and application channel in the fabric network when launched in kubernetes using data persistence.
{code:java}
curl -X DELETE http://xx.xx.xxx.xx:32500/participation/v1/channels/orderersystemchannel
{""error"":""cannot remove: error removing ledger for system channel orderersystemchannel""}

curl -X DELETE http://xxx.xx.xxx.xx:32500/participation/v1/channels/orderersystemchannel
curl: (52) Empty reply from server

curl -X DELETE http://xxx.xx.xxx.xx:32500/participation/v1/channels/testorgschannel0
{""error"":""cannot remove: system channel exists""}{code}
 

Orderer has the following logs after the second attempt of deleting system channel:
{code:java}
2020-10-07 15:20:01.571835 I | http: panic serving 10.177.88.40:63270: runtime error: invalid memory address or nil pointer dereference
goroutine 2291695 [running]:
net/http.(*conn).serve.func1(0xc0043172c0)
	/usr/local/go/src/net/http/server.go:1772 +0x139
panic(0xf0cbe0, 0x19612e0)
	/usr/local/go/src/runtime/panic.go:975 +0x3e3
github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Consenter).RemoveInactiveChainRegistry(0xc000237400)
	/go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/consenter.go:286 +0x2a
github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).removeSystemChannel(0xc00014ea00, 0xc000746440, 0x14)
	/go/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:955 +0x201
github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).RemoveChannel(0xc00014ea00, 0xc001909b62, 0x14, 0x0, 0x0)
	/go/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:849 +0x101
github.com/hyperledger/fabric/orderer/common/channelparticipation.(*HTTPHandler).serveRemove(0xc00038eed0, 0x1223f60, 0xc0002089a0, 0xc0035e3000)
	/go/src/github.com/hyperledger/fabric/orderer/common/channelparticipation/restapi.go:278 +0xcf
net/http.HandlerFunc.ServeHTTP(0xc000be2fe0, 0x1223f60, 0xc0002089a0, 0xc0035e3000)
	/usr/local/go/src/net/http/server.go:2012 +0x44
github.com/gorilla/mux.(*Router).ServeHTTP(0xc0002149c0, 0x1223f60, 0xc0002089a0, 0xc0035e2e00)
	/go/src/github.com/hyperledger/fabric/vendor/github.com/gorilla/mux/mux.go:212 +0xe2
github.com/hyperledger/fabric/orderer/common/channelparticipation.(*HTTPHandler).ServeHTTP(0xc00038eed0, 0x1223f60, 0xc0002089a0, 0xc0035e2e00)
	/go/src/github.com/hyperledger/fabric/orderer/common/channelparticipation/restapi.go:98 +0xff
github.com/hyperledger/fabric/core/middleware.(*requestID).ServeHTTP(0xc00023e080, 0x1223f60, 0xc0002089a0, 0xc0035e2d00)
	/go/src/github.com/hyperledger/fabric/core/middleware/request_id.go:50 +0x297
net/http.(*ServeMux).ServeHTTP(0xc000152640, 0x1223f60, 0xc0002089a0, 0xc0035e2d00)
	/usr/local/go/src/net/http/server.go:2387 +0x1a5
net/http.serverHandler.ServeHTTP(0xc000208620, 0x1223f60, 0xc0002089a0, 0xc0035e2d00)
	/usr/local/go/src/net/http/server.go:2807 +0xa3
net/http.(*conn).serve(0xc0043172c0, 0x1227fa0, 0xc0018d9940)
	/usr/local/go/src/net/http/server.go:1895 +0x86c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:2933 +0x35c
{code}
*Fabric image tag:* amd64-2.3-stable

*Network Configuration:* Launched network using fabric-test/regression/testdata/k8s-run-network-spec.yml, 5 orderers with etcdraft, 2 organizations with 2 peers each.

*NOTE*: The above test is failing when data persistence is enabled using NFS. When launched network without using data persistence, able to remove system channel and application channel without any issues.

 Steps Followed:

1. launched the network using genesisFile
 2. created the channel - testorgschannel0
 3. joined peers to channel
 4. update anchor peers on channel
 5. installed cc
 6. instantiated cc
 7. start sending invokes using one terminal
 8. in another terminal ran {{curl}}  command to delete ",,suryalnvs,wlahti,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Oct/20 2:54 AM;suryalnvs;orderer.yaml;https://jira.hyperledger.org/secure/attachment/18828/orderer.yaml",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,20eb852,Unset,No,,,"1|i00n2e:8znqzzzzzohfprw6",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),suryalnvs,wlahti,ymlbright,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Oct/20 9:00 PM;wlahti;One initial bug fix related to the panic on retrying system channel removal: [https://github.com/hyperledger/fabric/pull/1986] It also will provide more information into the underlying error that's occurring when the system channel ledger removal fails.;;;","09/Oct/20 2:47 AM;suryalnvs;Retested with [https://github.com/hyperledger/fabric/pull/1986] and it gives the error as follows:
{code:java}
curl -X DELETE http://xxx.xx.xx.xx:32500/participation/v1/channels/orderersystemchannel
{""error"":""cannot remove: error removing ledger for system channel orderersystemchannel: unlinkat /shared/data/chains/orderersystemchannel: directory not empty""}
{code};;;","09/Oct/20 2:58 AM;suryalnvs;Second attempt to delete the same system channel is throwing the following error and don't see the panic in orderer logs: 
{code:java}
curl -X DELETE http://xxx.xx.xx.xx:32500/participation/v1/channels/orderersystemchannel
{""error"":""cannot remove: error removing ledger for system channel orderersystemchannel: unlinkat /shared/data/chains/orderersystemchannel/.nfs000000000000786000000514: device or resource busy""}
{code};;;","12/Oct/20 11:42 PM;wlahti;Another fix was merged into master on Friday. We believe this resolves the issue here. 

[https://github.com/hyperledger/fabric/pull/1992];;;","13/Oct/20 2:09 AM;suryalnvs;Able to verify the fix by removing the orderer system channel using the above PR.

Commit: 02ff2a3

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix wrong comments on OrdererType options,FAB-18262,46193,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tatsu-sato,tatsu-sato,tatsu-sato,08/Oct/20 9:25 AM,09/Oct/20 4:59 AM,28/Oct/23 3:09 AM,09/Oct/20 4:59 AM,,,,,,,,,,,,fabric-common,,,,0,,,,,,"Currently, the OrdererType options are described in the comments in `configtx/orderer.go` as follows:
{code:go}
type Orderer struct {
    // OrdererType is the type of orderer
    // Options: `Solo`, `Kafka` or `Raft`
    OrdererType string
{code}
([https://godoc.org/github.com/hyperledger/fabric-config/configtx#Orderer])

 

These `Solo`, `Kafka` or `Raft` don’t seem to be the correct strings to give to OrdererType.
 In fact, configtx lib raises an error like the one below when the above strings are given.
{code:java}
2020-10-07 23:46:58.731 UTC [fabric-configtx-cli.ops] SetOrderer -> INFO 002 Set orderer
2020-10-07 23:46:58.732 UTC [fabric-configtx-cli.cmd] func1 -> ERRO 003 unknown orderer type 'Raft'

2020-10-07 23:44:45.455 UTC [fabric-configtx-cli.ops] SetOrderer -> INFO 002 Set orderer
2020-10-07 23:44:45.456 UTC [fabric-configtx-cli.cmd] func1 -> ERRO 003 unknown orderer type 'Kafka'
{code}
 

I think these options in the comments should be replaced with the correct constants ConsensusTypeSolo, ConsensusTypeKafka and ConsensusTypeEtcdRaft to avoid misunderstanding by users.
 ([https://godoc.org/github.com/hyperledger/fabric-config/configtx/orderer#pkg-constants])",,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17628,,,No,,Unset,No,,,"1|i01gqj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Investigate and Remediate Breaking BCCSP FileKeyStore Change Between 1.4.6 and 1.4.7,FAB-18263,46196,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Duplicate,btl5037,btl5037,btl5037,08/Oct/20 10:57 PM,12/Oct/20 11:57 PM,28/Oct/23 3:09 AM,12/Oct/20 11:30 AM,,,,,,,,,,,,,,,,0,,,,,,"1.4.7 introduced a breaking change in Fabric around the BCCSP FileKeyStore option, investigate what caused this issue and remediate it for a new release and update this Jira with the details once we have an understanding of the cause.",,btl5037,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18265,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gr7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/20 11:30 AM;btl5037;S;;;","12/Oct/20 11:57 PM;denyeart;Removing label and FixVersion so that this Duplicate doesn't appear in queries.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow cb.Config with no ACLs to be loaded without error,FAB-18264,46197,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tatsu-sato,tatsu-sato,tatsu-sato,09/Oct/20 3:32 AM,09/Oct/20 4:59 AM,28/Oct/23 3:09 AM,09/Oct/20 4:59 AM,,,,,,,,,,,,fabric-common,,,,0,,,,,,"Currently, ConfigTx Library gives errors when reading `cb.Config` which does not contain values for ACLs.

*Examples:*
 *Code:*
{code:go}
c := configtx.New(baseConfig)
a := c.Application()
acls, err := a.ACLs()
if err != nil {
                fmt.Println(err)
}
config, err := a.Configuration()
if err != nil {
                fmt.Println(err)
}
{code}
 

*Output (Error messages):*
{code:sh}
config does not contain value for ACLs
retrieving application acls: config does not contain value for ACLs
{code}
 

On the other hand, In the actual Fabric channel settings, ACLs may not be set.
 This is because the default value is used if it is not set.
 - e.g., fabric-samples/test-network does not set ACLs (refer to configtx.yaml).
 - ConfigTx Library seems to be able to create ConfigTX with empty ACLs.

In summary, ConfigTX Library should be able to load cb.Config which does not contain values for ACLs.",,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17628,,,No,,Unset,No,,,"1|i01grf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Always Use DummyKeyStore In PKCS11 BCCSP,FAB-18265,46198,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,btl5037,btl5037,btl5037,09/Oct/20 9:57 AM,12/Oct/20 11:30 AM,28/Oct/23 3:09 AM,12/Oct/20 11:30 AM,,,,,,,v1.4.10,,,,,,,,,0,operator,,,,,"1.4.7 Fabric introduced a breaking change in BCCSP when using persistent write protected storage on Kubernetes. Prior to 1.4.7 if the user set `core.peer.bccsp.pkcs11.filekeystore` the directory was never created. In 1.4.7, a small refactoring forced the directory to start being created, despite the fact it wasn't needed. For users who use kubernetes and init containers to create the directories, this change prevents the peer startup sequence from happening due to these volumes being write protected.

A PKCS11 BCCSP provider does not require a keystore. We should remove the path that initializes a keystore and always use a dummy keystore instead.",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18263,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zyl6",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,release-1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Oct/20 10:19 AM;btl5037;https://github.com/hyperledger/fabric/pull/1991;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent UT failure in consensus/etcdraft: Chain 3-node Raft cluster when reconfiguring raft cluster reconfiguration when Follower is disconnected while leader cert is being rotated [It] still configures communication and transfer leader,FAB-18267,46200,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,10/Oct/20 11:33 PM,14/Oct/20 11:20 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-orderer,,,,0,ci-flake,,,,,"

{code:java}
[Fail] Chain 3-node Raft cluster when reconfiguring raft cluster reconfiguration when Follower is disconnected while leader cert is being rotated [It] still configures communication and transfer leader 
/home/vsts/work/1/fabric/orderer/consensus/etcdraft/chain_test.go:1923

Ran 108 of 108 Specs in 30.770 seconds
FAIL! -- 107 Passed | 1 Failed | 0 Pending | 0 Skipped
--- FAIL: TestEtcdraft (30.77s)

FAIL	github.com/hyperledger/fabric/orderer/consensus/etcdraft	40.222s
{code}
",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/20 11:33 PM;denyeart;65.log;https://jira.hyperledger.org/secure/attachment/18829/65.log",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01grv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add SetPolicies() to easily replace multiple policies in an existing configuration in bulk,FAB-18268,46201,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tatsu-sato,tatsu-sato,tatsu-sato,13/Oct/20 3:53 AM,15/Oct/20 2:04 AM,28/Oct/23 3:09 AM,14/Oct/20 12:32 AM,,,,,,,,,,,,fabric-common,,,,0,,,,,,"As a user of Fabric Config Library, I would like to replace policies in bulk like *(*ApplicationGroup)SetACLs()*.

 

*Motivation:*
 In the current Fabric Config Library replacing multiple policies in an existing configuration could be a bit tedious.
 For example, the following methods could be considered to achieve this at present:
 - Method 1: Repeat *SetPolicy()* and *RemovePolicy()* for the group to be replaced.
 - Method 2: Use *Configuration()* to get the config struct for the group -> replace the policy fields in that config struct -> then use *SetXXX()* to reconfigure
 ** NOTE: some groups does not seem to support this way (e.g., *ordererGroup.SetConfiguration()* is skips updating policies)

By providing functions to replace multiple policies in bulk, users can change multiple policies with a single function call, so users should not need a tedious method like the above two.

 

*Example for usage of the proposed function:*
{code:go}
a := c.Application()
a.SetPolices(newPolicies) // replace the all existing policies in the configuration with newPolicies in bulk
{code}
 

*Targets to add the new functions:*
 - ApplicationGroup
 - ApplicationOrg
 - ChannelGroup
 - ConsortiumOrg
 - OrdererGroup
 - OrdererOrg",,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18271,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17628,,,No,,Unset,No,,,"1|i01gs3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
validateConsenterTlsCerts does not verify server cert,FAB-18269,46202,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,13/Oct/20 6:08 AM,15/Nov/20 3:10 AM,28/Oct/23 3:09 AM,13/Oct/20 9:32 PM,v2.2.2,v2.3.0,,,,,v2.2.2,v2.3.0,,,,,,,,0,,,,,,"This looks like an accidental bug when refactoring the code. 
{code:java}
var verify = func(certType string, cert *x509.Certificate, opts x509.VerifyOptions) error {
		if _, err := clientCert.Verify(opts); err != nil {
			if validationRes, ok := err.(x509.CertificateInvalidError); !ok || (!ignoreExpiration || validationRes.Reason != x509.Expired) {
				return errors.Errorf(""verifying tls %s cert with serial number %d: %v"", certType, clientCert.SerialNumber, err)
			}
		}
		return nil
	} {code}
It calls Verify() on the clientCert instead of the passed in cert.",,denyeart,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18192,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gsb:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,wlahti,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Oct/20 6:31 AM;wlahti;master: [https://github.com/hyperledger/fabric/pull/2006]

release-2.2: incorporated into the backport of FAB-18192 - [https://github.com/hyperledger/fabric/pull/2005];;;","15/Nov/20 3:10 AM;denyeart;Note - the regression that this fixes was added during v2.3.0 and v2.2.2 development, therefore the issue was never seen in released versions of Fabric.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Snapshot Generation Crashes Docker Daemon due to CouchDB excessive debug logging,FAB-18270,46206,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,btl5037,btl5037,14/Oct/20 10:42 AM,15/Oct/20 1:58 AM,28/Oct/23 3:09 AM,15/Oct/20 1:58 AM,v2.3.0,,,,,,v1.4.10,v2.2.2,v2.3.0,,,fabric-ledger,,,,0,ledger,snapshot,,,,"When generating a snapshot where the peer is in Debug mode, any payload of non-trivial size will crash the Docker daemon due to the log driver being overwhelmed as the debug logs dump the entire value of the block into the log with a disk of non-sufficient IOPS.

I've been able to introduce this on very-high IOPS performance storage using a payload of 10KB and standard bronze file storage using a 1KB payload, where the disk is of moderate size and thus IOPS are also moderate.

Looks like a call to `readDocRange` on snapshot generation is causing this to be logged on the couchdb logger. Log uploaded showing this.",,btl5037,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/20 11:15 AM;btl5037;trimmed_log.out;https://jira.hyperledger.org/secure/attachment/18830/trimmed_log.out",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zyl9",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,denyeart,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Oct/20 1:11 PM;denyeart;[https://github.com/hyperledger/fabric/pull/2011]

Disable debug of CouchDB response body

The CouchDB query response body should not be added to debug log.
 This change reduces the debug to the HTTP headers only, so that
 the peer debug log can still be associated with the CouchDB logs, without
 logging the full response content.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add example for SetPolicies(),FAB-18271,46207,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tatsu-sato,tatsu-sato,tatsu-sato,15/Oct/20 2:04 AM,15/Oct/20 3:51 AM,28/Oct/23 3:09 AM,15/Oct/20 3:51 AM,,,,,,,,,,,,fabric-common,,,,0,,,,,,Add an example to show the bulk replacement of multiple policies by using SetPolicies().,,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18268,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17628,,,No,,Unset,No,,,"1|i01gsr:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to onboard orderer to system channel with config (non-genesis) block,FAB-18272,46208,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,15/Oct/20 2:06 AM,20/Oct/20 3:08 AM,28/Oct/23 3:09 AM,20/Oct/20 3:08 AM,,,,,,,,,,,,,,,,0,ipm,,,,,,,tock,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,FAB-18273,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx7i",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Oct/20 5:46 AM;wlahti;Not having much luck figuring this one out. The best I've been able to do is exclude the orderer's own endpoint from the block puller endpoints (using the Orderer.General.ListenAddress and Orderer.General.ListenPort). That avoids the underlying issue with the GRPCClient's NewConnection() call hanging the second time it tries to connect to itself (the first being the time it times out and the context is successfully closed).

Not sure if we really want the cluster BlockPuller to attempt to pull the block from its own endpoint or not though... It seems like we don't for the case of onboarding the system channel with a non-genesis block but I have no idea how things interact elsewhere.;;;","17/Oct/20 6:28 AM;yacovm;If the dialer used by the orderer block replication gets stuck in connecting and never to times out, then as you have probably noticed, it will make the entire wait group wait indefinitely. 

While I think that ideally we'd want to add the endpoint to the onboarding orderer only after it onboarded, there might be a much more severe problem here - as we know, Raft uses the same mechanism to catch up with the cluster when the node is too far behind. If a single unavailable node can make every node block replication forever, we have a bigger problem and this needs to be addressed. ;;;","18/Oct/20 6:12 PM;tock;[~wlahti] In the meantime we can split FAB-18273 to joining the system channel with a genesis vs non genesis. With genesis we're fine.;;;","19/Oct/20 5:07 PM;tock;[~wlahti] After a discussion with [~yacovm], he brought to my attention this test:

https://github.com/hyperledger/fabric/blob/69bc7319115545e8bae67877dcd8d4de5c87bda4/integration/raft/config_test.go#L733

which onboards a 4th node to a 3 node cluster by using a bootstrap block with block.number > 0. The difference is that the respective bootstrap block does not have the endpoint of the 4th node. The bootstrap block only has the 4th node in the consenters set, not the endpoints. 

In order to verify the source of the problem we could add the endpoint of the 4th node as well in that test, and see what happens.
This will simulate / replicate the situation we have in the failed test. 
Then, we have a prescription for the user on how to onboard a new node with a system channel - basically - add the onboarding node's endpoint after it had finished on boarding. This is indicated by the orderer emitting the ""Beginning to serve requests"" message to the log...;;;","19/Oct/20 7:58 PM;yacovm;There is also [this|https://github.com/hyperledger/fabric/blob/69bc7319115545e8bae67877dcd8d4de5c87bda4/integration/raft/config_test.go#L298] which is simpler;;;","19/Oct/20 8:09 PM;yacovm;Also, you may want to disable this [indicator of successfully starting the process|https://github.com/hyperledger/fabric/blob/69bc7319115545e8bae67877dcd8d4de5c87bda4/integration/nwo/network.go#L1236], as the test would fail before you realize why it failed.;;;","20/Oct/20 1:24 AM;wlahti;I locally updated the test mentioned by Yacov [here|https://github.com/hyperledger/fabric/blob/69bc7319115545e8bae67877dcd8d4de5c87bda4/integration/raft/config_test.go#L298] to include the orderer2 endpoint. I see the same failure with that existing flow as we do with the channel participation API. ;;;","20/Oct/20 3:07 AM;wlahti;[~yacovm] got to the bottom of this. It turns out that the ginkgomon.Runner's StartCheckTimeout  is the cause of the grpc connection hang. When the onboarding orderer node is included in the endpoints, the orderer takes longer to complete its startup. After 15 seconds (the default StartCheckTimeout we use in fabric IT), it kills the onboarding orderer process. 

Bumping the StartCheckTimeout to 30 seconds does resolve the issue, but Yacov and I agree that including the onboarding orderer in the endpoints is not the best practice here and the tests should simply not include the orderer as an endpoint until it has completed onboarding.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test create system channel with config block on empty network, continue to create channels the old way.",FAB-18273,46210,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,16/Oct/20 12:15 AM,12/Nov/20 1:40 AM,28/Oct/23 3:09 AM,12/Nov/20 1:40 AM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"# Creating the system channel with config block with number >0, such that on boarding is needed only on system channel (no additional channels).
 
 * Define a 3 node raft network. Generate the genesis block of the system channel.
 * Start 3 empty OSNs.
 * Join 2 OSNs with a genesis block. 
 * Check that the servers have a state that signals restart is needed (List API), and that they do not accept TXs on system channel, nor API Join commands
 * Restart said servers
 * configure the system channel - but not channel creation. (to make the height > 1)
 * get last config block a join the 3rd OSN with it. 
 * create a few channels the ""old"" way. make the 3rd OSN a member of some, and not a member in others.
 * verify correct behavior by transacting on all channels.
 

 

 ",,tock,tsharris,wlahti,,,,,,,,,,,,,,,,,,,,,FAB-18272,,,FAB-18130,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxc",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,tsharris,wlahti,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Nov/20 12:52 AM;wlahti;Scenario 1: https://github.com/hyperledger/fabric/pull/2082
;;;","12/Nov/20 1:40 AM;wlahti;Split the other scenario into FAB-18337.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Integration test for orderer with system channel, orderer is config-tracker",FAB-18274,46211,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,16/Oct/20 1:44 AM,29/Oct/20 5:46 PM,28/Oct/23 3:09 AM,29/Oct/20 5:46 PM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"Add to an existing integration test for an orderer with a system channel where the orderer is not a member of the consenters set for a specific application channel. List the channel details and ensure the cluster relation is ""config-tracker"" and the status is ""inactive"". ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,FAB-18283,,,,,,,,,,,FAB-17966,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxb",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extend account-based token Go chaincode sample for full ERC-20 support,FAB-18275,46214,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jcastrence,denyeart,denyeart,17/Oct/20 2:02 AM,02/Dec/20 10:28 PM,28/Oct/23 3:09 AM,02/Dec/20 10:28 PM,,,,,,,,,,,,fabric-samples,,,,0,,,,,,"[https://github.com/hyperledger/fabric-samples/tree/master/token-account-based]

introduced an account-based token sample.

This token sample should be extended to include full ERC-20 support:

[https://eips.ethereum.org/EIPS/eip-20]

The existing sample has BalanceOf() and Transfer() support.

I'd suggest a series of 4 PRs:

1st PR
 * TotalSupply()

2nd PR
 * Approve()
 * Allowance()
 * TransferFrom()

3rd PR
 * Transfer chaincode event
 * Approve chaincode event

4th PR
 * Move from directory token-account-based/chaincode-go to token-erc20/chaincode-go, and update root fabric-samples readme to match.

5th PR
* Add Burn() function.  (Similar to Mint function, Burn is not in the ERC20 spec but is often implemented). 

For a similar sample in node.js chaincode, see [https://github.com/hyperledger/fabric-samples/pull/327]. We should get to functional parity between these samples.

 ",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gtf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
orderer/common/server extractSystemChannel() panics when it hits an empty ledger,FAB-18276,46216,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,tock,tock,tock,19/Oct/20 10:46 PM,08/Jun/21 5:34 AM,28/Oct/23 3:09 AM,20/Oct/20 2:50 PM,,,,,,,,,,,,fabric-orderer,,,,0,ipm,,,,,"orderer/common/server/main.go extractSystemChannel() panics when it hits an empty ledger
In addition this method is not covered with unit tests at all.",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx8",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CouchDB Reports 200 on Aborted Query, consider using buffer_response=true",FAB-18277,46217,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,wenjian,btl5037,btl5037,19/Oct/20 10:57 PM,11/Jan/21 3:21 PM,28/Oct/23 3:09 AM,,v2.2.2,v2.3.0,,,,,,,,,,fabric-ledger,,,,0,ledger,snapshot,,,,"While testing ledger snapshotting functionality we encountered a bug within CouchDB. While performing a large range query on CouchDB, Couch encountered a flake and the query was aborted. Couch however reported a 200 response code. Because Couch reported 200 OK, the query was not retried, the response body was read, and the snapshot failed because reading the response resulted in an `EOF` read.

This issue is not reproducible, but we note that the disk was not under pressure, and CPU and RAM utilization were sub-50% according to SysDig.

A bug was already open for this on the Couch repo and we added our information to it as well: [https://github.com/apache/couchdb/issues/3059]

We are opening this Jira as a means of reminding us to track this GitHub issue.",,brett.t.logan,btl5037,denyeart,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-106,,,No,,Unset,No,,,"1|i00wur:0idqx9",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),brett.t.logan,btl5037,denyeart,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Oct/20 1:30 AM;denyeart;After a discussion on CouchDB slack, it appears that there is a new api option {{?buffer_response=true}} on view queries in v3.1.1 that ensures that the response is complete before returning back a 200. If not set the default is for the response to be streaming in which case a 200 is returned even while the response is streaming back (and may eventually abort).

So I think we have two options:

1) Fabric could update to v3.1.1 and add `buffer_response=true` to queries, to ensure that we get back accurate error codes (I think we need to do this anyways for validation path - batchRetrieveDocumentMetadata)

2) Fabric could take advantage of the streaming response and start processing the response before it is done. This would speed up snapshot generation when using CouchDB, but the Fabric logic would have to handle eventual 200 errors. And we wouldn't want the streaming behavior in others paths like validation.

[~manish-sethi] what do you think?;;;","20/Oct/20 2:27 AM;brett.t.logan;What is the impact to memory usage with this? The release note only mentions "" increases memory usage on the nodes but simplifies error
handling for the client"" without any additional details. Will it hold the entire response in memory until it's received, or some other subset?

For non-trivial payloads this could be quite large. We've seen production chaincodes with 10's MB value payloads. For a the snapshot page size of 1000 records this could be many GB of memory if the entire response is held.;;;","20/Oct/20 3:05 AM;denyeart;I expect when using buffered response, the entire response would be in memory (I believe it is anyways since we don't currently process streaming responses).

Note that the page size is already configurable using internalQueryLimit:

[https://github.com/hyperledger/fabric/blob/master/sampleconfig/core.yaml#L640-L644]

I agree we should call this out in docs and recommend consumers reduce it if they have large states.

And I agree that large payloads adds motivation to shift to streaming processing, at least for snapshot generation.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Service Discovery to get config from state instead of config block,FAB-18278,46218,45756,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,denyeart,denyeart,20/Oct/20 2:42 AM,22/Oct/20 1:51 PM,28/Oct/23 3:09 AM,22/Oct/20 1:51 PM,v2.3.0,,,,,,v2.3.0,,,,,fabric-ledger,,,,0,,,,,,"Service Discovery config query (e.g. for retrieving orderer endpoints) doesn't work against peers bootstrapped from a snapshot when there are no config blocks after the snapshot:
{code:java}
$ discover --configFile conf.yaml config --channel mychannel --server 127.0.0.1:7057
failed fetching config for channel mychannel{code}
 

CSCC and Service Discovery both get the config block.

For peers joined from snapshot, there may not be a latest config block. Therefore, consumers should get the latest config from state, instead of from the latest config block.

The consumers are CSCC and Service Discovery, based on grep results:
{code:java}
core/scc/cscc/configure.go:294: block, err := peer.ConfigBlockFromLedger(channel.Ledger())
internal/peer/node/start.go:963: block, err := peer.ConfigBlockFromLedger(channel.Ledger()){code}
 

Since CSCC GetConfigBlock() is an external API, this one can't be changed and consumers will have to deal with the error ""failed fetching config"".

That leaves Service Discovery. It should be updated to get latest config from state.",,denyeart,manish-sethi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gub:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,manish-sethi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Oct/20 3:01 AM;yacovm;Should be pretty easy, all that is needed is to inject a different [CurrentConfigBlockGetter|https://github.com/hyperledger/fabric/blob/master/discovery/support/config/support.go#L27-L30].;;;","22/Oct/20 11:23 AM;manish-sethi;https://github.com/hyperledger/fabric/pull/2037;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tools support Hyperledger Fabric,FAB-18279,46219,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,hoa,hoa,20/Oct/20 4:33 PM,22/Oct/20 11:27 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"As you know, Hyperledger Fabric is a popular framework. Why doesn't Hyperledger Fabric have many tools support?",,brett.t.logan,hoa,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01guj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),brett.t.logan,hoa,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Oct/20 11:27 PM;brett.t.logan;Are there particular tools you have in mind?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename filerepo directory used for channel participation CFT,FAB-18280,46224,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jcastrence,tsharris,tsharris,21/Oct/20 9:37 PM,28/Oct/20 4:45 AM,28/Oct/23 3:09 AM,28/Oct/20 4:45 AM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,help-wanted,ipm,,,,"The channel participation codebase has two places where the common FileRepo code is used to create a directory to store the resources needed for crash-fault tolerance of the join and remove operations.
* https://github.com/hyperledger/fabric/blob/master/orderer/common/multichannel/registrar.go#L121
* https://github.com/hyperledger/fabric/blob/master/common/ledger/blockledger/fileledger/factory.go#L113

This task was spawned out of this review comment: https://github.com/hyperledger/fabric/pull/1952#discussion_r508964286


{noformat}
""filerepo"" seems almost uselessly vague. Something like ""pendingops"" or something more descriptive could be nice. 
{noformat}


This rename applies to the above locations in the production code as well as the tests that will fail once these are renamed (since they also set / expect the directory to be named ""filerepo"").
",,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18082,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx6f9",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create example for NewApplicationChannelGenesisBlock,FAB-18281,46225,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tatsu-sato,wlahti,wlahti,21/Oct/20 11:44 PM,28/Oct/20 9:57 PM,28/Oct/23 3:09 AM,28/Oct/20 9:57 PM,,,,,,,,,,,,,,,,0,ipm,,,,,"It should be very similar to the existing genesis block example for the system channel [here|https://github.com/hyperledger/fabric-config/blob/master/configtx/example_test.go#L455] but instead of including the Consortiums and Orderer sections it should include the Orderer (which can be copied from the system channel example) and Application sections. 

A current usage of this function can be found [here|https://github.com/hyperledger/fabric/blob/master/integration/raft/channel_participation_test.go#L681] (more specifically, the Application section begins [here|https://github.com/hyperledger/fabric/blob/master/integration/raft/channel_participation_test.go#L726])",,tatsu-sato,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17628,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxbr",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tatsu-sato,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Oct/20 1:24 AM;tatsu-sato;https://github.com/hyperledger/fabric-config/pull/42;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Shift default snapshots directory to <fileSystemPath>,FAB-18282,46226,44705,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,denyeart,denyeart,22/Oct/20 2:35 AM,23/Oct/20 4:30 AM,28/Oct/23 3:09 AM,23/Oct/20 4:30 AM,,,,,,,v2.3.0,,,,,fabric-ledger,,,,0,,,,,,"Shift from

{color:#1d1c1d}<fileSystemPath>/ledgersData{color}

{color:#1d1c1d}to{color}

{color:#1d1c1d}<fileSystemPath>{color}

{color:#1d1c1d}as the default location for snapshots.{color}",,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01guz:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Oct/20 12:24 AM;manish-sethi;https://github.com/hyperledger/fabric/pull/2038;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channel participation does not correctly report cluster status/relation after removing consenter (when system channel exists),FAB-18283,46227,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,wlahti,wlahti,22/Oct/20 4:39 AM,27/Oct/20 11:57 PM,28/Oct/23 3:09 AM,27/Oct/20 11:57 PM,,,,,,,,,,,,,,,,0,ipm,,,,,"When the channel participation API is used to list the details for an application channel where the orderer has been removed from the consenters set when the system channel exists, an incorrect cluster status/relation of active/member is returned by the API. It should return inactive/config-tracker at this point.",,tock,wlahti,,,,,,,,,,,,,,,,,,,,,,,FAB-18274,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx6g",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Oct/20 6:09 PM;tock;This happens because when an etcdraft.Chain is evicted (and system channel exists), it calls the halt() which calls haltCallback(), which registers the channel on to the InactiveChainRegistry. However, the chain remains in the Registrar's chains map as stopped, forever, or until the orderer is re-added to the consenters set. The inactive.Chain is only set into the Registrar's chains map at restart, but not on eviction.

The solution: to change the ClusterRelation & Status reported by an etcdraft.Chain after it is stopped.
- at creation, set ClusterRelation=""member"" & Status=""active""
- after stop(), set  & Status=""inactive""
- after the haltCallback() is invoked, set ClusterRelation=""config-tracker"".
Note that if the haltCallback() is replacing the etcdraft.Chain with a follower.Chain (no system channel), then the new follower will report correct StatusReport, and the replaced chain is GC.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The new peer node would not update ledger if the channel committed a chaincode with 'init-required=false' flag,FAB-18285,46230,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid: Environment Issue,denyeart,sennri,sennri,22/Oct/20 5:41 PM,22/Nov/20 4:40 PM,28/Oct/23 3:09 AM,21/Nov/20 9:34 PM,v2.2.0,,,,,,,,,,,fabric-peer,,,,0,gossip,,,,,"h2. Description

I found a bug while employing a chaincode with 'init-required=false' flag on the peer node. 
 When this bug happens, the new joining node can't get any ledger through gossip protocol.
 I have no idea which parts of code work wrong, but i spend some time to ensure how to reproduce the bug using fewest steps. 
 i think it only happens when you join a new peer (like peer1) of an existing org (peer0 has joined) of the channel.
h2. Condition

Fabric-network: 1 consortium with 3 orgs, each org has two peers, named after peer0 and peer1. （maybe not necessary，but mention it in case）
 configuration:
 - CORE_PEER_GOSSIP_USELEADERELECTION=true
 - CORE_PEER_GOSSIP_ORGLEADER=false

h2. Workaround

i found a workaround to solve this problem.
 you can stop the peer0 docker，wait for a minute，then restart it.
 now you will see the peer1 start to fetch ledger and work well.
 i guess its because peer1 becomes the leader peer of this org when the peer0 down.
 but I cannot analyze it from the code level
 i also try to restart peer1 only, well, it just dosent work.",,denyeart,manish-sethi,sennri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Nov/20 10:26 PM;sennri;peer1.log;https://jira.hyperledger.org/secure/attachment/18847/peer1.log",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gvn:",,,,Unset,Unset,,"Step1：
use ""init-required=false"" flag to approve the chaincode definition on peer0 node of  each org, then commit it.
Step2：
Enter the peer1 container (of any org), fetch the zero block and join the target channel.
Step3:
Then this bug will have a great possibility to happend. When you use 'peer channel getinfo -c mychannel' command to check the block status,
you would find that the blockchain height stay at 1 and never change.
Sometimes——i would rather say——seldom，it may not happen，but when you try some more times，it would bother you too.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,manish-sethi,sennri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/20 3:53 AM;manish-sethi;[~denyeart] - can you triage this?;;;","17/Nov/20 10:34 AM;sennri;addition：

peer0、peer1 container are on the same virtual machine.

org1、org2、org3 are on the different VMs.

maybe its not the factor that cause this problem

mention it in case.;;;","20/Nov/20 9:03 AM;denyeart;[~sennri] What error do you receive? Please post peer log showing the issue.
Note that joining a channel should not have anything to do with chaincode definition (init-required), so I'm not seeing the connection. Please explain why you think the join issue is related to init-required.

I've returned the bug for more information. After you provide more information, please click the ""Information Provided"" button.;;;","20/Nov/20 10:48 PM;sennri;-What error do you receive?  Please post peer log showing the issue

No error, so i adjust the log level to debug to show more information.

i hope that it would help you.

-Please explain why you think the join issue is related to init-required.

Sorry. in my opinion, it does not make sense too, maybe this is the reason why we call them bugs,

right?

i just control the conditions, 

when i skipped other operation, this bug would still appear.

i succeed to join peer1 to a new channel for many times. 

at first i guessed something wrong with my chaincode. 

so i tried to approve fabcar using init-requied=false, the bug still existed.

Afterwards, i use init-requied=true to approve the former chaincode,

peer1 worked normally.

it is hard to believe the init-required flag would affect the peer node itself,

it's weird but true.;;;","21/Nov/20 9:34 PM;denyeart;After joining the channel, the peer cannot connect with the orderer to get blocks:

[33m2020-11-20 20:26:06.334 CST [peer.blocksprovider] DeliverBlocks -> WARN 1f87[0m Could not connect to ordering service: could not dial endpoint 'orderer0.FZU:7050': failed to create new connection: connection error: desc = ""transport: error while dialing: dial tcp: lookup orderer0.FZU on 127.0.0.11:53: no such host"" channel=mychannel

The peer does receive blocks from other peers via gossip however, and commits blocks 1 through 6:

[34m2020-11-20 20:26:10.831 CST [kvledger] CommitLegacy -> INFO 2c10[0m [mychannel] Committed block [6] with 1 transaction(s) in 326ms (state_validation=218ms block_and_pvtdata_commit=15ms state_commit=87ms) commitHash=[67541960336fbb3c8ee7c78e3bd3f78b9619f041b40fa668256b66d9e6dee37e]

It is recommended to keep the gossip defaults as of v2.2:


{code:java}
peer.gossip.orgLeader: true
peer.gossip.useLeaderElection: false
{code}


This will help to rule out any gossip issues. But first you need to make sure your peer can connect to orderer. Closing due to environmental issue.

BTW, if you need to re-open, this is a recommended debug string to disable useless debug noise:


{code:java}
FABRIC_LOGGING_SPEC=debug:cauthdsl,policies,msp,grpc,peer.gossip.mcs,gossip,leveldbhelper=info
{code}
;;;","21/Nov/20 10:30 PM;sennri;i am sorry, i don't familiar with the docker logs operation.
no bug reported anyway.
why not try out for at least one time to reproduce this bug in your fresh?
i think it is easy to reproduce, and then you can lock on the problem in your container.
maybe using
peer.gossip.orgLeader: true
peer.gossip.useLeaderElection: false
is another workaround,
but we still don't know why it happended and the weird connection is still there.
in addition, i just use
- CORE_PEER_GOSSIP_USELEADERELECTION=true
- CORE_PEER_GOSSIP_ORGLEADER=false

in the composer yaml file, is it wrong?
what‘s more , the orderer0 didn‘t exit. 
and i can ping 127.0.0.11:53 in the peer1 container as well.
if the peer can't connect to orderer container, 
i think it is impossible for me to fetch the 0 block and join the channel either.;;;","22/Nov/20 1:22 AM;denyeart;I'm not seeing any bug in your log.

In your log, the peer does indeed get the blocks and commit them.  In the problem statement you said it does not get the blocks.

If you still think there is some bug, clarify what the problem is, and mention where it occurs in the log's timestamp.;;;","22/Nov/20 4:37 PM;sennri;log of *cli.peer1 of org2*

{code:bash}
bash-5.0# peer channel list
2020-11-22 15:08:48.559 CST [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
Channels peers has joined:
mychannel
bash-5.0# peer channel getinfo -c mychannel
2020-11-22 15:09:08.388 CST [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
Blockchain info:{""height"":1,""currentBlockHash"":""IswvIu9v8VrnaDwLQQQaS8peTkFLTzEyuK67TwSO+JY=""}
{code}


sigh. this channel has 7 blocks already.
i just can't execute any command about channel operation after “join” the channel.
Such as peer chaincode invoke & query.
it think it is 'joined' itself， and can't get any info about the channel at the same time.
it acts just like it has no block other than 0 block.
it contradicts to what the container log said（get all blocks already）.

And this is the what common peer cli would show（*log of cli.peer1 of org1*）

{code:bash}
bash-5.0# peer channel list
2020-11-22 15:08:03.194 CST [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
Channels peers has joined:
mychannel
bash-5.0# peer channel getinfo -c mychannel
2020-11-22 15:08:13.107 CST [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
Blockchain info: {""height"":7,""currentBlockHash"":""4Y5AlotAsbpZZykEjrgflWkVppgIgSUK+uime1Z65B0="",""previousBlockHash"":""mwjlgcCbLTEbklaxAAb0x2ntmCBW54I1Tsw/tUO0knc=""}
{code}



in addition. the peer1.org1 eccountered the same problem yesterday， but when i entered the container just now，everything went right.
peer1.org2 is just not as “lucky” as peer1.org1.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
nwo.GetConfigBlock helper function flakiness,FAB-18287,46233,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,22/Oct/20 11:58 PM,28/Oct/20 5:40 PM,28/Oct/23 3:09 AM,28/Oct/20 2:24 AM,,,,,,,,,,,,fabric-common,,,,0,ci-flake,,,,,"When there is no active Raft leader, fetching the config block can fail with a SERVICE_UNAVAILABLE error. The raft leader will eventually be re-elected (assuming a correct configuration) so we should instead retry the call until it succeeds. ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxh",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Oct/20 12:28 AM;wlahti;https://github.com/hyperledger/fabric/pull/2039 (includes a fix for this issue plus a related IT flake fix);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Snapshot Generation and Bootstrap IT failure on master,FAB-18288,46238,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,wlahti,wlahti,wlahti,23/Oct/20 11:55 PM,09/Nov/20 1:32 PM,28/Oct/23 3:09 AM,24/Oct/20 1:26 AM,v2.3.0,,,,,,v2.3.0,,,,,fabric-ledger,,,,0,ci-failure,,,,,"{noformat}
• Failure [40.162 seconds]
Snapshot Generation and Bootstrap [It] generates snapshot and bootstraps from snapshots with statecouchdb 
/home/vsts/work/1/fabric/integration/ledger/snapshot_test.go:110

  Expected
      <string>: /tmp/reset-rollback012813376/peers/Org1.peer0/filesystem/ledgersData/snapshots/completed/testchannel/5
  to be a directory: stat /tmp/reset-rollback012813376/peers/Org1.peer0/filesystem/ledgersData/snapshots/completed/testchannel/5: no such file or directory

  /home/vsts/work/1/fabric/integration/ledger/snapshot_test.go:509
{noformat}",,wenjian,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Oct/20 11:55 PM;wlahti;ledger-snapshot-it-failure-10-23-2020.txt;https://jira.hyperledger.org/secure/attachment/18833/ledger-snapshot-it-failure-10-23-2020.txt",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gwb:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Oct/20 6:37 AM;wenjian;The failure was due to changes in [https://github.com/hyperledger/fabric/pull/2038.] ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide metric on storage use per channel,FAB-18289,46241,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,24/Oct/20 5:08 AM,18/Nov/20 1:22 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-orderer,fabric-peer,,,0,operator,,,,,"Provide metric on storage use per channel. Potentially multiple metrics to cover block storage, state database, etc.",,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idy",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/20 1:22 AM;Senthil1;It would be simple to find the storage utilization of the block store, i.e., file chunks. However, for databases, due to LSM trees and compaction, it is not possible to find it easily. Can't we rely on the existing storage management software to address this feature though per channel database storage consumption is still not possible?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add channel name to reconciler messages,FAB-18290,46242,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,denyeart,denyeart,24/Oct/20 5:23 AM,10/Nov/20 9:14 AM,28/Oct/23 3:09 AM,10/Nov/20 9:14 AM,,,,,,,v2.2.2,v2.3.0,,,,fabric-gossip,fabric-ledger,,,0,,,,,,"Reconciler messages do not mention channel name, making it difficult to troubleshoot when there are many channels.",,denyeart,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqy",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,wenjian,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Nov/20 6:27 AM;wenjian;PR: https://github.com/hyperledger/fabric/pull/2071;;;","09/Nov/20 9:22 PM;denyeart;[~wenjian] Could you also backport to release-2.2?;;;","10/Nov/20 9:14 AM;wenjian;Backported to release-2.2: https://github.com/hyperledger/fabric/pull/2091;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channel participation API unresponsive after joining channel with unreachable orderer endpoint and then attempting to remove the channel,FAB-18291,46243,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,tock,wlahti,wlahti,24/Oct/20 6:13 AM,29/Oct/20 9:23 PM,28/Oct/23 3:09 AM,29/Oct/20 9:23 PM,v2.3.0,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"After joining a channel with only one consenter but two orderer endpoints via the channel participation API, the orderer returns a status of 200 and the following channel info:
{noformat}
Status: 200
{
	""name"": ""participation-trophy"",
	""url"": ""/participation/v1/channels/participation-trophy"",
	""clusterRelation"": ""follower"",
	""status"": ""onboarding"",
	""height"": 0
}
{noformat}
However, attempts to remove this channel hangs the channel participation API and no further requests will succeed (unclear on its impact on the other functions of the orderer).",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx6h",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Oct/20 6:14 AM;wlahti;I'll try to create an integration test to capture this scenario. I noticed it while working on the channel participation CLI.;;;","24/Oct/20 6:28 AM;wlahti;One part I need to confirm is my channel config and why the orderer shows up as a follower instead of a member. Some of this may be user error but it still feels like there's a bug somewhere lurking (could be server or CLI, I need to get to the bottom of that) so I wanted to open this sooner than later.;;;","27/Oct/20 6:16 AM;wlahti;https://github.com/hyperledger/fabric/pull/2046;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
logs,FAB-18292,46244,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,zuzanatunegova,zuzanatunegova,zuzanatunegova,25/Oct/20 9:01 PM,27/Oct/20 12:10 AM,28/Oct/23 3:09 AM,27/Oct/20 12:10 AM,,,,,,,,,,,,,,,,0,,,,,,,,zuzanatunegova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gxn:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),zuzanatunegova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integration test for onboarding CFT,FAB-18293,46245,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,wlahti,wlahti,26/Oct/20 8:41 PM,26/Oct/20 8:44 PM,28/Oct/23 3:09 AM,26/Oct/20 8:44 PM,,,,,,,,,,,,,,,,0,ipm,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,FAB-17966,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gxv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode Container Crashes Under Load When Block Size is Non-Trivial,FAB-18294,46247,,Bug,Returned,FAB,Fabric,software,denyeart,,,Medium,,sykesm,btl5037,btl5037,27/Oct/20 12:14 AM,02/Feb/21 5:15 AM,28/Oct/23 3:09 AM,,v2.0.1,v2.2.2,,,,,,,,,,fabric-peer,,,,0,Chaincode,,,,,"Will update with additional information, this is currently a placeholder",,btl5037,denyeart,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqx",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,denyeart,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/20 5:52 AM;manish-sethi;[~btl5037] - Do you have more details on this? ;;;","17/Nov/20 7:35 AM;btl5037;Let me open a Jira to write an integration test for this. It's easily reproducible by various means, but an integration test should be able to help narrow down the issue by taking some of the external factors out of the equation.;;;","12/Jan/21 12:17 AM;denyeart;Would this happen on kube containerd?;;;","02/Feb/21 12:45 AM;denyeart;[~btl5037] Could you summarize where you left off with this one, then we can pass it over to [~sykesm];;;","02/Feb/21 5:14 AM;sykesm;The reality is that there's no information in this issue.

What's considered a non-trivial block size?

What chaincode language was used?

What transactions were being executed?

I know of no correlation between block size and chaincode. What was the environment that would cause these things to be related?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for the 'is-init' flag in 'chaincode invoke',FAB-18295,46248,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,27/Oct/20 12:14 AM,03/Nov/20 3:57 AM,28/Oct/23 3:09 AM,03/Nov/20 3:57 AM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,"The 'chaincode invoke' command currently does not support the 'is-init' flag, which is required in order to invoke the Init function of a Fabric 2 lifecycle chaincode.",,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gyj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bstasyszyn,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
lifecycle queryapproved to return latest sequence,FAB-18296,46251,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,ahmedsajid,ahmedsajid,27/Oct/20 11:04 PM,03/Nov/20 3:57 AM,28/Oct/23 3:09 AM,03/Nov/20 3:57 AM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,"peer lifecycle command return latest approved definition while `fabric-cli` requires sequence to be specified.

https://hyperledger-fabric.readthedocs.io/en/latest/commands/peerlifecycle.html#peer-lifecycle-chaincode-queryapproved-example",,ahmedsajid,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gz7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ahmedsajid,tatsu-sato,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB retry not sending information to invoking chaincode,FAB-18297,46252,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Test Error,,nkl199,nkl199,27/Oct/20 11:12 PM,12/Nov/20 8:50 PM,28/Oct/23 3:09 AM,12/Nov/20 8:50 PM,,,,,,,,,,,,fabric-ledger,,,,0,operator,,,,,"*Scenario*
 * go contract performing getState operation via {color:#de350b}bytes, err := ctx.GetStub().GetState(uuid) {color}
 * {color:#172b4d}CouchDB world state{color}
 * 2org network (v2 peers, one peer per org)
 * High continuous load scenario, driven via Caliper

 

*Actual Outcome*
 {color:#172b4d} Failures occur because returned{color} bytes are empty and err is nil. This is following a CouchDB timeout error, resulting in a peer retry, but no information going back to the invoking chaincode.

Flow appears to be:
 1) CouchDB error (taken from couchDB logs)

{{[error] 2020-10-27T13:36:55.542041Z nonode@nohost <0.21077.235> 1baec15e75 rexi_server: from: nonode@nohost(<0.21935.233>) mfa: fabric_rpc:open_doc/3 exit:{timeout,{gen_server,call,[<0.21014.233>,}}{{

{pread_iolist,2360084}

}}{{]}} [\{gen_server,call,2,[}}{{

{file,""gen_server.erl""}

}}{{,\{line,206}]},{couch_file,pread_iolist,2,[}}{{

{file,""src/couch_file.erl""},\{line,177}]},\{couch_file,pread_binary,2,[{file,""src/couch_file.erl""}

}}{{,\{line,172}]},{couch_file,pread_term,2,[}}{{

{file,""src/couch_file.erl""}

}}{{,\{line,160}]},{couch_btree,get_node,2,[}}{{

{file,""src/couch_btree.erl""},\{line,435}]},\{couch_btree,lookup,3,[{file,""src/couch_btree.erl""}

}}{{,\{line,286}]},{couch_btree,lookup,2,[}}{{

{file,""src/couch_btree.erl""}

}}{{,\{line,276}]},{couch_bt_engine,open_docs,2,[}}{{

{file,""src/couch_bt_engine.erl""}

}}{{,\{line,399}]}]}}



{color:#de350b}
 2) Peer warning (taken from peer logs){color}

{{ 2020-10-27 13:36:55.543 UTC [couchdb] handleRequest -> WARN 8a66e Attempt 1 of 4 returned Couch DB Error:error,  Status Code:500 Internal Server Error  Reason:read_failure. Retrying couchdb request in 125ms}}

3) Chaincode continues execution with no error, and no content returned from GetState call. Result is an unmarshal operation will fail, and if appropriate logging is put in place, you will observe:

{\{ Error performing json.Unmarshal: unexpected end of JSON input}}
 \{{ Error performing json.Unmarshal on bytes:}}

ie, an error is thrown, and if trying to log out the returned bytes, nothing is present.

*Expected Outcome*

Either:
 a) Result of couchDB retry is sent to invoking chaincode
 b) Chaincode is sent an error

 ",,denyeart,nkl199,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqw9",,,,Unset,Unset,v2.x,"Using caliper 0.4.1, and the available caliper samples, run the `get-asset` benchmark (https://github.com/hyperledger/caliper-benchmarks/tree/master/benchmarks/api/fabric/contract), having deployed goLang ""fixed-asset"" contract.

Observe failure under load.

Using a limited resource machine, and the configuration:

  workers:
    type: local
    number: 5
  rateControl:
    type: fixed-load
    opts:
        transactionLoad: 200

The error is 100% reproducible
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,nkl199,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Oct/20 12:12 AM;nkl199;Repeated on same network using a node contract, and the same issue is recreated - the only difference is that the node based contract was silently failing as empty values were being assigned. ;;;","31/Oct/20 1:48 AM;denyeart;[~nkl199] , I realize it may be large because this is a benchmark test, but any chance you could provide the last minute or so of the couchdb log and the peer log, with debug set as:
{code:java}
FABRIC_LOGGING_SPEC=info:couchdb=debug{code};;;","31/Oct/20 1:55 AM;denyeart;[~nkl199] Nil is returned if the key does not exist in state database yet. Perhaps that could explain it? Does the chaincode check for nil response like in this sample:

[https://github.com/hyperledger/fabric-samples/blob/master/asset-transfer-basic/chaincode-go/chaincode/smartcontract.go#L81-L83]

 ;;;","31/Oct/20 2:35 AM;wenjian;I have done a couple of tests and verified that the retry logic that handles requests for couchdb works as expected.
 # 1st attempt returned 500 error and  2nd attempt (retry) returned 200 OK response. In this case, 2nd attempt was successful and chaincode got correct response.
 # all retries returned 500 error. In this case, the handle request code propagated the error to the chaincode (expected behavior)

{quote}Error: endorsement failure during invoke. response: status:500 message:""Failed to get marble: GET_STATE failed: transaction ID: df4a81f361d2f3d16f57d2e92cf049242161ccbc5df6bf15eab5956703a2ca0c: error handling CouchDB request. Error:fake couchdb error, Status Code:500, Reason:fake couchdb reason""
{quote}
For the reported problem, peer log had only 1 attempt `Attempt 1 of 4` which means that the 2nd attempt didn't return 500 error. A previous comment has requested for couchdb log and peer log, which could be helpful.;;;","12/Nov/20 8:50 PM;nkl199;I've been trying for several days to recreate this, and have been completely unable to.

Due to this reason, I'm going to close the jira;;;","12/Nov/20 8:50 PM;nkl199;Inability to recreate points firmly towards a test error;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add cluster client cert default,FAB-18298,46253,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,jyellick,jyellick,28/Oct/20 12:57 AM,14/Nov/20 12:00 AM,28/Oct/23 3:09 AM,14/Nov/20 12:00 AM,,,,,,,v2.2.2,v2.3.0,,,,fabric-orderer,,,,0,ipm,,,,,"When the cluster listener re-uses the existing TLS listener, the orderer still requires that a client certificate and key be specified in the orderer.yaml.  However, usually, the existing general server TLS certificate and key may be reused here.

This story is to default the cluster client cert and key to be the same as the server cert and key, if no value is set, and if the cluster listener is reused.

If the cluster listener is not reused, or there is a value present, the new default should not be applied.

Reference: [this raft IT|https://github.com/hyperledger/fabric/blob/master/integration/raft/cft_test.go#L462-L474] shows the config values currently used to reuse the existing TLS listener (excluding the TLSHandshakeTimeshift, that's unrelated). Note that it only sets the ServerCertificate and ServerKey to """" but doesn't do the same for the ClientCertificate and ClientKey. As part of this fix, we should update that test to set those to """" as well.",,jyellick,pandrejko,tsharris,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxey",,,,No,Unset,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),jyellick,pandrejko,tsharris,wlahti,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Oct/20 4:53 AM;pandrejko;After this is implemented we need to remove the requirement to set these values from the orderer deployment guide planning checklist.;;;","06/Nov/20 5:29 AM;tsharris;https://github.com/hyperledger/fabric/pull/2078;;;","10/Nov/20 4:44 AM;wlahti;Reopening to track backporting to the release-2.2 branch.;;;","13/Nov/20 10:53 PM;tsharris;backport https://github.com/hyperledger/fabric/pull/2119;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Service discovery ""peers"" query should return peer's channel history information (e.g. snapshot block height, archival block height, history db enabled)",FAB-18299,46256,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,28/Oct/20 8:32 PM,09/Nov/20 11:15 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-ledger,,,,0,,,,,,"Service discovery ""peers"" query returns info about all the peers on a channel, e.g. for each peer in the channel this information is returned:

 
{code:java}
{
""MSPID"": ""Org1MSP"",
""LedgerHeight"": 5,
""Endpoint"": ""peer0.org1.example.com:7051"",
""Identity"": ""-----BEGIN CERTIFICATE-----\nMIICKDCCAc6gAwIBAgIQP18LeXtEXGoN8pTqzXTHZTAKBggqhkjOPQQDAjBzMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEcMBoGA1UEAxMTY2Eu\nb3JnMS5leGFtcGxlLmNvbTAeFw0xODA2MTcxMzQ1MjFaFw0yODA2MTQxMzQ1MjFa\nMGoxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1T\nYW4gRnJhbmNpc2NvMQ0wCwYDVQQLEwRwZWVyMR8wHQYDVQQDExZwZWVyMC5vcmcx\nLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEKeC/1Rg/ynSk\nNNItaMlaCDZOaQvxJEl6o3fqx1PVFlfXE4NarY3OO1N3YZI41hWWoXksSwJu/35S\nM7wMEzw+3KNNMEswDgYDVR0PAQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwKwYDVR0j\nBCQwIoAgcecTOxTes6rfgyxHH6KIW7hsRAw2bhP9ikCHkvtv/RcwCgYIKoZIzj0E\nAwIDSAAwRQIhAKiJEv79XBmr8gGY6kHrGL0L3sq95E7IsCYzYdAQHj+DAiBPcBTg\nRuA0//Kq+3aHJ2T0KpKHqD3FfhZZolKDkcrkwQ==\n-----END CERTIFICATE-----\n"",
""Chaincodes"": [ ""mycc"" ]
}
{code}
 

We may want to add other information such as whether history is enabled, whether the peer's channel was bootstrapped from a snapshot, and whether blocks have been archived (future story). This would give clients information about whether the peer can service historical queries (either block, transaction, or state historical queries).",,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-106,,,No,,Unset,No,,,"1|i00wur:0idqy9",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Oct/20 10:31 AM;yacovm;To do this you need to extend the [Properties|https://github.com/hyperledger/fabric-protos/blob/master/gossip/message.proto#L151-L155] protobuf message of gossip to also contain the information you want, and also to add the methods to update the new fields, similar to [how it is done for chaincodes|https://github.com/hyperledger/fabric/blob/master/gossip/gossip/channel/channel.go#L934-L954].
 From this point onward, gossip takes care of the data dissemination, and discovery moves it around as-is. 
 The only place left is to make the discover CLI also [print|https://github.com/hyperledger/fabric/blob/master/discovery/cmd/peers.go#L140-L165] the [fields|https://github.com/hyperledger/fabric/blob/master/discovery/cmd/peers.go#L114-L119].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add function in CSCC for retrieving channelconfig and use this in the peer client,FAB-18300,46259,45756,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,29/Oct/20 12:48 AM,29/Oct/20 1:58 PM,28/Oct/23 3:09 AM,29/Oct/20 1:58 PM,,,,,,,,,,,,fabric-ledger,fabric-peer,,,0,,,,,,,,denyeart,manish-sethi,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01h0b:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,manish-sethi,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Oct/20 5:06 AM;denyeart;https://github.com/hyperledger/fabric/pull/2056;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Registrar.JoinChannel takes the wrong lock type,FAB-18301,46261,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,tock,tock,29/Oct/20 5:47 PM,30/Oct/20 1:29 AM,28/Oct/23 3:09 AM,30/Oct/20 1:29 AM,v2.3.0,v2.x,,,,,,,,,,fabric-orderer,,,,0,ipm,,,,,"Currently

func (r *Registrar) JoinChannel(channelID string, configBlock *cb.Block, isAppChannel bool) (info types.ChannelInfo, err error) {
 r.lock.RLock()
 defer r.lock.RUnlock()
 ...
 }

we need to take `r.lock.Lock()` because this adds to the `chains` or `followers` map.",,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i01h0r:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a Swagger definition for the channel participation REST API,FAB-18302,46262,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,tock,tock,30/Oct/20 1:16 AM,07/Jan/21 12:00 AM,28/Oct/23 3:09 AM,07/Jan/21 12:00 AM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,,,pandrejko,tock,tsharris,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxer",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),pandrejko,tock,tsharris,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Nov/20 6:13 AM;tsharris;https://github.com/hyperledger/fabric/pull/2113;;;","06/Jan/21 7:25 AM;wlahti;Merged into master. The JIRA was incorrect in the commit though so it won't show up in the ""Git Commits"" tab.;;;","06/Jan/21 11:45 PM;tsharris;oops I think I ended up using the wrong branch and didn't double check the JIRA. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update comment for channel participation API in orderer.yaml sampleconfig,FAB-18303,46263,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jcastrence,pandrejko,pandrejko,30/Oct/20 4:47 AM,31/Oct/20 5:14 AM,28/Oct/23 3:09 AM,31/Oct/20 5:14 AM,v2.3.0,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"[https://github.com/hyperledger/fabric/blob/master/sampleconfig/orderer.yaml#L372]

 

This line 
 Channel participation uses the same ListenAddress and TLS settings of the Operations service

needs to be changed to
 Channel participation uses the ListenAddress and TLS settings of the Admin service.",,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxci",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),pandrejko,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Full disks causes LevelDB corruption,FAB-18304,46264,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,manish-sethi,btl5037,btl5037,30/Oct/20 10:44 AM,12/Mar/21 12:01 PM,28/Oct/23 3:09 AM,06/Mar/21 3:05 AM,v2.3.0,,,,,,v1.4.12,v2.2.3,v2.3.2,v2.4.0,,fabric-ledger,,,,0,ledger,,,,,"When the peer's disk, or the persistent volume mounted at the levelDB directory become full, the peer panics killing the process, including the current DB write in flight. When the peer restarts it cannot finish the startup sequence as a partial levelDB write occurred and it cant read the levelDB manifests.

Of note, this was on file storage, which is NFS-backed storage, which we know does not play well with databases.

This is likely related to: https://github.com/syndtr/goleveldb/issues/335

I will decorate this Jira with logs and more information shortly.",,btl5037,manish-sethi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqwi",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,manish-sethi,yacovm,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.3,release-1.4,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Oct/20 12:02 AM;yacovm;Maybe keep track of how much space you have in the FS by periodically sampling it (once in, say, 100MB you write)?

 
{code:java}
	fs := syscall.Statfs_t{}
	syscall.Statfs(directory, &fs)
	availableSpace := int64(fs.Bavail) * fs.Bsize
{code}

and if there is too little space left then panic?
Possibly also log a warning about this, or even a metric?;;;","03/Mar/21 5:34 AM;manish-sethi;I investigated this scenario and discovered a bug in goleveldb code. There is one fsync call missing in the goleveldb code, when it generates a new Manifest file at the time of opening the db. I have submitted a simple PR with this fix ([https://github.com/syndtr/goleveldb/pull/351]).

 

For those who are interested in details: 

With this missing fsync, a disk full on NFS is just one scenario where this corruption is surfaced. In general, an untimely crash, even on a physical machine with a local filesystem, could leave the goleveldb in this state. Still, it is relatively easier to reproduce this issue with a disk full situation on a remote filesystem. Even a small size db suffices for reproducing this, as long as the other random files (e.g., large file(s) filled with /dev/zero) along with the leveldb makes up for the full disk space.

 

Regarding reproducing this issue, just with the goleveldb alone (i.e., without Fabric), a slight modification in the goleveldb code helps reproduce almost always. This modification is to add a delay in the goleveldb code immediately before [this line|https://github.com/syndtr/goleveldb/blob/5c35d600f0caac04c20d52438103f1a7aa612598/leveldb/session_util.go#L456]. The reason this makes it reproduce in this particular situation is that the code before this line, i.e., the code that writes to the new Manifest file during opening the db, does not recieve an error despite the disk being full. This is because, the NFS client would send these writes asynchronously to the NFS server and will hit into error at a later point in time but that error would remain with NFS client only (would be passed to the application code on the next operation on the file) resulting in the file on the NFS server as empty (or partial written) on disk. This added delay helps in reproducing this issue because, otherwise, the code in the `defer` block of the above mentioned function, deletes the previous Manifest, making the space for new Manifest contents, by the time they arrive on NFS server.

 

Adding the fsync after writing the Manifest file and before updating other metadata, causes either return an error or guaranteeing that the new Manifest file content has been persisted to disk before proceeding.;;;","06/Mar/21 3:05 AM;manish-sethi;[https://github.com/hyperledger/fabric/pull/2463|https://github.com/hyperledger/fabric/pull/2463] (master)
[https://github.com/hyperledger/fabric/pull/2466|https://github.com/hyperledger/fabric/pull/2466] (release-2.3)
[https://github.com/hyperledger/fabric/pull/2465|https://github.com/hyperledger/fabric/pull/2465] (release-2.2)
[https://github.com/hyperledger/fabric/pull/2464|https://github.com/hyperledger/fabric/pull/2464] (release-1.4);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flake in channel participation IT for config-tracker,FAB-18305,46266,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Duplicate,,wlahti,wlahti,30/Oct/20 9:05 PM,25/Feb/21 3:09 PM,28/Oct/23 3:09 AM,25/Feb/21 3:09 PM,,,,,,,,,,,,fabric-orderer,,,,0,ci-flake,ipm,,,,"{noformat}
• Failure [70.671 seconds]
ChannelParticipation three node etcdraft network with a system channel [It] joins channels using the legacy channel creation mechanism and then removes the system channel to transition to the channel participation API 
/home/vsts/work/1/fabric/integration/raft/channel_participation_test.go:606

  Timed out after 60.002s.
  Expected
      <channelparticipation.ChannelInfo>: {
          Name: ""testchannel"",
          URL: ""/participation/v1/channels/testchannel"",
          Status: ""active"",
          ClusterRelation: ""member"",
          Height: 5,
      }
  to equal
      <channelparticipation.ChannelInfo>: {
          Name: ""testchannel"",
          URL: ""/participation/v1/channels/testchannel"",
          Status: ""inactive"",
          ClusterRelation: ""config-tracker"",
          Height: 5,
      }

  /home/vsts/work/1/fabric/integration/raft/channel_participation_test.go:660
{noformat}",,denyeart,manish-sethi,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18365,,,,,FAB-18362,,,FAB-18365,,,,"06/Nov/20 4:54 AM;wlahti;config-tracker-flake-11-5-2020.txt;https://jira.hyperledger.org/secure/attachment/18840/config-tracker-flake-11-5-2020.txt","31/Oct/20 5:16 AM;wlahti;config-tracker-flake.txt;https://jira.hyperledger.org/secure/attachment/18835/config-tracker-flake.txt","12/Jan/21 6:18 AM;wlahti;config-tracker-it-flake-1-11-2021.txt;https://jira.hyperledger.org/secure/attachment/18879/config-tracker-it-flake-1-11-2021.txt","06/Nov/20 1:04 AM;manish-sethi;logs.txt;https://jira.hyperledger.org/secure/attachment/18839/logs.txt",,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00wur:0idqxo9",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,manish-sethi,wlahti,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Nov/20 1:04 AM;manish-sethi;[~wlahti] - I hit into this flake. [^logs.txt] ;;;","06/Nov/20 4:54 AM;wlahti;Yes, I hit this again today too... :( ;;;","11/Nov/20 5:04 AM;manish-sethi;It's happening very frequent now. Hit this 2-3 times today.;;;","03/Dec/20 1:46 AM;wlahti;My previous commits certainly improved things but I believe this final one will fix things once and for all: https://github.com/hyperledger/fabric/pull/2181;;;","03/Dec/20 4:35 AM;wlahti;Actually, that PR resolves things once and for all for a different flake in this test (opened FAB-18362 for it). The config-tracker flake is still possible but rare. Going to attempt another fix for that here.;;;","12/Jan/21 6:18 AM;wlahti;Hit again today. I'll take another look and hope that coming in fresh off the holidays helps me figure out a way to resolve this.;;;","01/Feb/21 11:35 PM;denyeart;Hit again:

https://dev.azure.com/Hyperledger/Fabric/_build/results?buildId=29371&view=logs&jobId=6b58850f-3858-5a05-33e2-5e41cbf03c4e&j=354d5075-cb32-57b3-dae3-b45dd635f928&t=c61c7ac1-26da-587e-152c-05fdf7b7a34d;;;","03/Feb/21 4:23 AM;denyeart;again:

https://dev.azure.com/Hyperledger/Fabric/_build/results?buildId=29490&view=logs&jobId=354d5075-cb32-57b3-dae3-b45dd635f928&j=354d5075-cb32-57b3-dae3-b45dd635f928&t=c61c7ac1-26da-587e-152c-05fdf7b7a34d;;;","25/Feb/21 3:09 PM;denyeart;Will be worked in FAB-18365;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
In fabric samples off_chain_data example does not work in HLF 2.2,FAB-18306,46267,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,jugma,jugma,jugma,30/Oct/20 9:45 PM,30/Oct/20 9:45 PM,28/Oct/23 3:09 AM,,v2.1.0,,,,,,,,,,,fabric-samples,,,,0,,,,,,I followed the instructions given in the README.md file. When I ran the command 'node blockEventListener.js' it gave me an error and the off chain couch database did not get populated. I have since found the problem and fixed it. I would like to check-in my fix.,,BrettR,jugma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01h17:",,,,Unset,Unset,,"1. Follow the instructions in the README.md file until the instruction 'node blockEventListener.js'
2. Run 'node blockEventListener.js'
3. Check the off chain couch database
4. The off chain couch database is empty",,Unset,,,,,,Unset,,Unset,,(Please add usage information),BrettR,jugma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger snapshot IT flake,FAB-18307,46271,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,31/Oct/20 11:47 PM,04/Nov/20 6:28 AM,28/Oct/23 3:09 AM,04/Nov/20 6:28 AM,,,,,,,,,,,,fabric-ledger,,,,0,ci-flake,,,,,"{noformat}
• Failure [88.554 seconds]
Snapshot Generation and Bootstrap when chaincode has private data collections [It] generates snapshot and bootstraps from snapshots 
/home/vsts/work/1/fabric/integration/ledger/snapshot_test.go:311

  Timed out after 60.268s.
  Expected
      <int>: 1
  to equal
      <int>: 0

  /home/vsts/work/1/fabric/integration/ledger/snapshot_test.go:953
------------------------------


Summarizing 1 Failure:

[Fail] Snapshot Generation and Bootstrap when chaincode has private data collections [It] generates snapshot and bootstraps from snapshots 
/home/vsts/work/1/fabric/integration/ledger/snapshot_test.go:953
{noformat}",,wenjian,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Oct/20 11:47 PM;wlahti;snapshot-it-flake-10-31-2020.txt;https://jira.hyperledger.org/secure/attachment/18836/snapshot-it-flake-10-31-2020.txt",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-106,,,No,,Unset,No,,,"1|i00wur:0idqwc",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Nov/20 6:45 AM;wenjian;Root cause analysis

The test flake was caused by temporary lost connection between Org.peer1 and Org2.peer0. In this case, pvtdata reconciliation failed causing CI flake. To prevent the flake, set DeprioritizedDataReconcilerInterval to a small value so that reconciliation can be resumed quickly for the missing data.;;;","03/Nov/20 6:45 AM;wenjian;PR: https://github.com/hyperledger/fabric/pull/2070;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Migrate an existing ledger from fabric 1.4.6 to 2.x if there are RSA certificates in any block of a channel to which the orderers belong to.,FAB-18308,46276,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,iocm,iocm,iocm,03/Nov/20 1:27 AM,21/Nov/20 9:45 PM,28/Oct/23 3:09 AM,21/Nov/20 9:45 PM,v2.x,,,,,,v2.2.2,v2.3.0,,,,,,,,0,,,,,,"Having an existing ledger with rsa certificates 1.4.x, in order to upgrade to the latest fabric 2.x, the following steps were executed:
  
 Our starting point was: * Single organization
 * 5 orderers (orderer 0, orderer 1, …. orderer 4) working using Raft consensus mechanism
 * 1 CA using RSA encryption
 * 1 system channel which the orderers are using
 * 1 application channel used, well, by our application
 * 2 peers that joined the application channel
 * All fabric components running on fabric 1.4.6
 * Ledger type = file on both orderer and peers

 
 This is the procedure we executed to move away from RSA to ECSDA (before upgrading to 2.2): * Had the 5 orderers and 2 peers running
 * Stopped the CA
 * Regenerated the CA’s MSP based on ECSDA
 * Started the CA
 * updated both system channel and application channel to add this new public certificate of the CA to the org using the MSP of the org’s admin (signed with the previous CA’s MSP). This was done by generating a channel config update transaction based on a delta computed and converted to and from json/protbuf using configtxlator
 * Regenerated the org’s admin MSP to be based on ECSDA and added his public certificate to the org (signed with the previous CA’s MSP). This was done by generating a channel config update transaction based on a delta computed and converted to and from json/protbuf using configtxlator
 * Regenerated orderer 0's MSP based on ECSDA
 * Updated the raft consenter section of the config block (of both system and application channels) to update orderer 0's certificate (orderer 0 is still running). Did that via the config update transaction
 * Once the new block was distributed, backed up orderer 0, stopped orderer 0, and restarted it using the new MSP
 * Orderer 0 started with the new MSP and used the latest config block to join the Raft cluster
 * Repeated these steps for orderers 1-4
 * After this we had all orderers communicating over raft using ECSDA MSPs
 * Then we regenerated both peers MSPs based on ECSDA
 * Then we backed up one of the peers, stopped it and restarted it using the new MSP
 * Repeated the process for the other peer
 * Then, using the new admin’s MSP, we generated a config update transaction to remove the previous CA and admin certificates from both the system and application channels
 * Then executed some test transactions using the new MSPs and verified that it worked fine
 * Extracted the latest config block (from both system and application channeles), converted it to JSON and ensured that there were no RSA certificates

 
 Then we attempted to upgrade to fabric 2.2: * we backed up orderer 0
 * stopped orderer 0
 * upgraded the base image to 2.2
 * started it
 * And it failed when it was validating the existing ledger:

 
 2020-10-28 12:22:25.282 UTC [orderer.common.server] Main -> PANIC Failed validating bootstrap block: initializing channelconfig failed: could not create channel Orderer sub-group config: setting up the MSP manager failed: Failed importing key with opts [&\\{true}]: Certificate’s public key type not recognized. Supported keys: [ECDSA]
 panic: Failed validating bootstrap block: initializing channelconfig failed: could not create channel Orderer sub-group config: setting up the MSP manager failed: Failed importing key with opts [&\\{true}]: Certificate’s public key type not recognized. Supported keys: [ECDSA]
  
 Then we tried a different approach: * stopped orderer 0 (without any backup)
 * set up the genesis block to be the current config block
 * started it (with the ECSDA MSP and an empty production folder)
 * It used to block correctly and connected to the raft consensus
 * It started receiving the ledger from both channels
 * It crashed with the same error

 
 As far as we can determine, there is no way to migrate an existing ledger from fabric 1.4.6 to 2.x if there are RSA certificates in any block of a channel to which the orderers belong to.",,alejoacosta,denyeart,iocm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15753,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01h23:",,,,Unset,Unset,,Migrate exiting ledger with rsa certificates on any block to 2.x.,,Unset,,,,,,Unset,,Unset,,(Please add usage information),alejoacosta,denyeart,iocm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Nov/20 3:25 AM;yacovm;Did you also replace the bootstrap block of the orderer with the block of the latest configuration block of the system channel?;;;","03/Nov/20 3:28 AM;yacovm;By the way, there is a very big problem that I see, and that is - even if you could make it work, imagine you wanted to add a new orderer, or a new peer to the network - you are stuck. Because every orderer, or every peer, will try to replicate blocks and validate them, and these blocks, in the past, had RSA type CAs. ;;;","03/Nov/20 3:42 AM;yacovm;In theory, if we had archive and pruning feature that supports pruning the orderer, then you could checkpoint, prune the blocks that contain RSA certificates for CAs, and then you'd be good.

However: 
1. We don't have archive and pruning in any release at the moment
2. Even if we had, it would've gone to 2.x stream and not to 1.x so no way to really use it.

So the only solution I see, is to... make Fabric have RSA again;;;","03/Nov/20 5:43 AM;alejoacosta;We are facing the same issue with RSA certs only being supported under 1.4.x and not 2.x

Our company CA does not issue ECDSA certs, so we are stuck with 1.4 at the moment...;;;","03/Nov/20 8:07 AM;denyeart;Given there was a decision not to support RSA, and that the decision was in the official documentation since v1.0, I'd suggest the correct path would be to open an RFC at [https://github.com/hyperledger/fabric-rfcs/] for adding RSA support. It should mention the rationale, but more importantly what is the proposed test and support approach, as I believe those were the considerations behind the prior decision.;;;","11/Nov/20 9:27 PM;iocm;We have created the RFC:

https://github.com/hyperledger/fabric-rfcs/pull/36;;;","21/Nov/20 9:44 PM;denyeart;Given that RSA CA was added to v2.3.0 and upcoming v2.2.2, and the fix was confirmed by [~iocm] , I believe this issue can now be closed. Here's the text from the v2.3.0 release note:

 
{code:java}
FAB-18308: peer and orderer - Restore support for MSPs that contain RSA certificate authorities
While Fabric has never supported RSA for transaction signatures or validation,
 certificate authorities included in MSP definitions could be associated with
 RSA keys. This ability was inadvertently removed during the development of
 release 2.0 and prevented migration of some networks to a 2.x version. With
 these changes, version 2.x components will no longer panic when attempting to
 initialize MSPs that include CA certificates associated with RSA keys.
{code}
 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Command reference doc for osnadmin CLI,FAB-18309,46278,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,03/Nov/20 6:35 AM,10/Nov/20 5:41 AM,28/Oct/23 3:09 AM,10/Nov/20 5:41 AM,,,,,,,v2.3.0,,,,,,,,,0,ipm,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx6fy",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to instantiate Go chaincode with Client Identity Chaincode Library on Fabric v1.4,FAB-18310,46279,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,souptikmakarov,souptikmakarov,04/Nov/20 12:06 AM,04/Nov/20 12:06 AM,28/Oct/23 3:09 AM,,v1.4.2,,,,,,,,,,,fabric-sdk-go,,,,0,client-identity-chaincode-library,,,,,"Hi,

I am trying to instantiate a chaincode where I have implemented the Client Identity Chaincode Library. The error I am getting inside the CLI pod is the following
{code:java}
> peer chaincode instantiate -o ord1.orderers.org1.com:7050 -C mychannel -n mychaincode -v 1.1 -c '{""Args"":[]}' --tls --cafile /var/hyperledger/msp/tlscacerts/tlsca.orderers.org1.com-cert.pem
2020-11-03 13:52:36.121 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc
2020-11-03 13:52:36.121 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc
Error: could not assemble transaction, err proposal response was not successful, error code 500, msg error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 ""chaincode/input/src/github.com/chaincode/vendor/github.com/hyperledger/fabric-chaincode-go/pkg/attrmgr/attrmgr.go:17:2: cannot find package ""github.com/hyperledger/fabric-protos-go/msp"" in any of:
        /chaincode/input/src/github.com/chaincode/vendor/github.com/hyperledger/fabric-protos-go/msp (vendor tree)
        /opt/go/src/github.com/hyperledger/fabric-protos-go/msp (from $GOROOT)
        /chaincode/input/src/github.com/hyperledger/fabric-protos-go/msp (from $GOPATH)
        /opt/gopath/src/github.com/hyperledger/fabric-protos-go/msp{code}
My original Go verion was 1.12.x and I found in the fabric-sdk-go docs that it needed version 1.14.x and above so I upgraded to ""go version go1.15.2 linux/amd64"". The weirdest thing is the directory ""/opt/gopath/src/github.com/hyperledger/fabric-protos-go/msp"" exists with all 3 files that is there in the github repo's same path yet it is not able to find it.

I have attached the $GOPATH directory structure",,souptikmakarov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Nov/20 12:06 AM;souptikmakarov;gopath directory structure.PNG;https://jira.hyperledger.org/secure/attachment/18838/gopath+directory+structure.PNG",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01h2j:",,,,Unset,Unset,,"Added ""github.com/hyperledger/fabric-chaincode-go/pkg/cid"" to import block in chaincode. Added following lines to test out functionality
id, err := cid.GetID(stub)
fmt.Println(""Id: "" + id)
mspid, err := cid.GetMSPID(stub)
fmt.Println(""MSP Id: "" + mspid)",,Unset,,,,,,Unset,,Unset,,(Please add usage information),souptikmakarov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
got error after remove org3,FAB-18311,46281,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,tsharris,wuxiaoxing,wuxiaoxing,04/Nov/20 5:26 PM,01/Dec/20 11:31 PM,28/Oct/23 3:09 AM,01/Dec/20 11:31 PM,v2.1.0,,,,,,,,,,,fabric-orderer,,,,0,ipm,,,,,"I bring up the fabric network, and add org3 to channel. 

Right now I have three organizations: org1, org2, and org3.

I try to follow the steps to remove org3, after done, I check the orderer logs.

There are some error loops in orderer log：

 
{code:java}
2020-11-04 08:21:52.306 UTC [policies] SignatureSetToValidIdentities -> WARN 254 principal deserialization failure (MSP Org3MSP is unknown) for identity 0a074f7267334d535012aa062d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d4949434b54434341632b674177494241674952414f644d79527a456e395036664d785257503152346d5177436759494b6f5a497a6a304541774977637a454c0a4d416b474131554542684d4356564d78457a415242674e5642416754436b4e6862476c6d62334a7561574578466a415542674e564241635444564e68626942470a636d467559326c7a593238784754415842674e5642416f54454739795a7a4d755a586868625842735a53356a623230784844416142674e5642414d5445324e680a4c6d39795a7a4d755a586868625842735a53356a623230774868634e4d6a41774f5449784d5441774e5441775768634e4d7a41774f5445354d5441774e5441770a576a42714d517377435159445651514745774a56557a45544d4245474131554543424d4b5132467361575a76636d3570595445574d4251474131554542784d4e0a5532467549455a795957356a61584e6a627a454e4d4173474131554543784d456347566c636a45664d4230474131554541784d576347566c636a417562334a6e0a4d79356c654746746347786c4c6d4e766254425a4d424d4742797147534d34394167454743437147534d34394177454841304941424d46576a734f56523444690a713061306b4a2b5134755746396f326f51312f58516e2f6571553458666b6f704f676475353876564f456d3073366638554b6245527737324b715646564e35660a6c617166737072522f6b796a5454424c4d41344741315564447745422f775145417749486744414d42674e5648524d4241663845416a41414d437347413155640a4977516b4d434b41494f375954633451326f5843392b6a736d75535235414255515a4d5365574155425533575a7a7233397269724d416f4743437147534d34390a42414d43413067414d4555434951434d2b324c6c7354635351316157616e3632346978433858446564704365314f78334e2b5461447575724a774967574749770a756646302f5a4f586f6f744467366b7645615a6a53697049794254367278692f627350625133633d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a
2020-11-04 08:21:52.306 UTC [common.deliver] deliverBlocks -> WARN 255 [channel: mychannel] Client authorization revoked for deliver request from 172.17.0.20:57940: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Readers' sub-policies to be satisfied: permission denied
2020-11-04 08:21:52.306 UTC [comm.grpc.server] 1 -> INFO 256 streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Deliver grpc.peer_address=172.17.0.20:57940 grpc.code=OK grpc.call_duration=1.276335ms{code}
 

This is the blog I referenced: [Remove an organization from a running fabric network|https://medium.com/@kctheservant/remove-an-organization-from-a-running-fabric-network-55f52cd0a012]

Thanks.",,tsharris,wuxiaoxing,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxgi",,,,Unset,Unset,,"1. Get the latest configuration block
2. Remove Org3MSP from config.json and keep the result in modified_config.json
3. Encode both config.json and modified_config.json files to PB format. Compute the difference of the two files, saved as update.pb
4. Add back envelope for update.pb, which first decode it into update.json, add the envelope, and the result is encoded back to update_in_envelope.pb
5. Sign the update_in_envelope.pb by Org1 and Org2. Org3 sends this file as update",,Unset,,,,,,Unset,,Unset,,(Please add usage information),tsharris,wuxiaoxing,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Dec/20 11:30 PM;tsharris;This is working as designed. I replicated this locally and found that the warning logs cease after while and don't affect the operation of the network. As confirmed by [~jyellick] the peer most likely already had a connection to the deliver service open when the config was updated so the connection was invalidated resulting in these warning logs. 

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update configtxgen log message to reflect new usage via the channel participation API,FAB-18312,46283,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,04/Nov/20 11:29 PM,11/Nov/20 4:09 AM,28/Oct/23 3:09 AM,07/Nov/20 3:50 AM,,,,,,,v2.3.0,,,,,,,,,0,ipm,,,,,"Now that the system channel is no longer needed, the configtxen log message [here|https://github.com/hyperledger/fabric/blob/master/cmd/configtxgen/main.go#L44] should be changed. 

We should log at INFO level something along the lines of

{noformat}
Created application genesis block
{noformat}

when the Application and Orderer sections are included in the block.

We should also log at INFO level something along the lines of

{noformat}
Created system channel genesis block
{noformat}

when the Consortiums and Orderer sections are included in the block.",,tatsu-sato,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18336,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx6fw",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tatsu-sato,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric changes snapshot directory,FAB-18313,46284,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,dongming,dongming,05/Nov/20 12:17 AM,11/Jan/21 1:29 AM,28/Oct/23 3:09 AM,11/Jan/21 1:29 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,"fabric-test operator need to change snapshot directory based on the latest fabric changes from

/var/hyperledger/production/ledgersData/snapshots

to

/var/hyperledger/production/snapshots",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0192i:zr",,,,Unset,Unset,To Do,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric peer command channelID option update,FAB-18314,46285,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,dongming,dongming,05/Nov/20 12:22 AM,11/Jan/21 2:37 AM,28/Oct/23 3:09 AM,11/Jan/21 2:37 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,"Fabric changes peer command channelID option from -C to -c,

operator will need to update accordingly",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0192i:zi",,,,Unset,Unset,To Do,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add metrics channel removal errors,FAB-18315,46286,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,tsharris,tsharris,05/Nov/20 12:59 AM,06/Jan/21 6:43 AM,28/Oct/23 3:09 AM,12/Nov/20 8:37 PM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"The intention in that task is that a channel that fails catastrophically will stop and report a new status {{types.StatusFailure}} instead of panicking and crashing the server.

If we had that error code already, I would be inclined to suggest that the map would include a struct with

 

{{

{ cRel types.ClusterRelation status types.Status }

}}

you could then insert into the map \{""member"", ""inactive""} or \{""follower"", ""inactive""} when you start the removal, delete that when removal ends successfully, and put \{""member"", ""failure""} or \{""follower"", ""failure""} if something goes wrong.



 

Add new cluster status to existing gauge for node's status and report status when channel remove fails. ",,tock,tsharris,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18132,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxcc",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,tsharris,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Nov/20 10:29 PM;tsharris;https://github.com/hyperledger/fabric/pull/2108;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build osnadmin CLI via makefile,FAB-18316,46287,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,05/Nov/20 1:46 AM,05/Nov/20 3:54 AM,28/Oct/23 3:09 AM,05/Nov/20 3:54 AM,,,,,,,,,,,,,,,,0,ipm,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx6ci",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix duplicate TxID check in validation code for snapshot bootstrapped ledger,FAB-18318,46289,45756,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,05/Nov/20 1:34 PM,09/Nov/20 1:10 PM,28/Oct/23 3:09 AM,09/Nov/20 1:07 PM,,,,,,,,,,,,fabric-ledger,,,,0,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01h3v:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Nov/20 1:13 AM;manish-sethi;https://github.com/hyperledger/fabric/pull/2075;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test remove a channel from an orderer and join it back again with the same orderer.,FAB-18319,46290,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,tock,tock,05/Nov/20 4:35 PM,17/Nov/20 6:55 AM,28/Oct/23 3:09 AM,17/Nov/20 6:55 AM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"Integration test: remove a channel from an orderer and join it back again to the same orderer.
This checks that the remove indeed leaves a clean slate behind.",,tock,tsharris,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18132,,,,,FAB-17966,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxc9",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,tsharris,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Nov/20 1:33 AM;tsharris;https://github.com/hyperledger/fabric/pull/2085;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Rename ""member"" cluster relation to ""consenter""",FAB-18320,46292,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,06/Nov/20 6:20 AM,06/Nov/20 9:14 AM,28/Oct/23 3:09 AM,06/Nov/20 9:14 AM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx6fz",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add documentation for chaincode migration,FAB-18321,46295,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,jtonline,jtonline,07/Nov/20 2:21 AM,13/Jan/21 2:57 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-docs,,,,0,,,,,,"From support rota action list

It would be useful to add information to the read the docs documentation for migrating chaincode from 1.4 to 2.2. For example, what changes and what stays the same...

Go has new contract API?
Java/Node APIs unchanged?
Dependencies?",,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|hzwrhl:r",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Check panic message in TestInitializeServerConfig,FAB-18322,46296,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,wlahti,wlahti,07/Nov/20 3:53 AM,18/Nov/20 10:13 PM,28/Oct/23 3:09 AM,18/Nov/20 10:13 PM,,,,,,,,,,,,fabric-orderer,,,,0,ipm,,,,,"Update the test cases (to include the expectedMsg) and test code (to check the panic message)  [here|https://github.com/hyperledger/fabric/blob/master/orderer/common/server/main_test.go#L189-L321] to test for the message returned when panic-ing. Otherwise, the tests don't ensure we're panic-ing where we assume we're panic-ing.",,tsharris,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxg",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tsharris,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Nov/20 5:27 AM;tsharris;https://github.com/hyperledger/fabric/pull/2140;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer node cannot start with BCCSP FileKeystore.KeyStorePath config,FAB-18323,46298,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,magpie73,magpie73,08/Nov/20 12:18 PM,07/Dec/20 10:44 PM,28/Oct/23 3:09 AM,07/Dec/20 10:44 PM,v1.4.5,v2.1.0,,,,,,,,,,fabric-common,fabric-orderer,,,0,bccsp,,,,,"*1. Condition*
 Use SW BCCCSP
 Set BCCSP FileKeystore.KeyStorePath as docker environment( ORDERER_GENERAL_BCCSP_SW_FILEKEYSTORE_KEYSTORE )

*2. Symptom*
 Orderer node cannot start up with error.
{code:java}
General.BCCSP.SwOpts.Ephemeral = true
 General.BCCSP.SwOpts.FileKeystore.KeyStorePath = ""/var/hyperledger/orderer/msp/keystore""
 General.BCCSP.SwOpts.DummyKeystore =
 General.BCCSP.SwOpts.InmemKeystore =
 ...
 2020-11-08 01:42:20.617 UTC [orderer.common.server] loadLocalMSP -> PANI 004 Failed to setup local msp with config: KeyMaterial not found in SigningIdentityInfo
 panic: Failed to setup local msp with config: KeyMaterial not found in SigningIdentityInfo
goroutine 1 [running]:
 go.uber.org/zap/zapcore.(*CheckedEntry).Write(0xc0000c4fd0, 0x0, 0x0, 0x0)
 /go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore/entry.go:230 +0x545
 go.uber.org/zap.(*SugaredLogger).log(0xc00018a210, 0xc000124004, 0x102a92b, 0x29, 0xc0001c1460, 0x1, 0x1, 0x0, 0x0, 0x0)
 /go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:234 +0x100
 go.uber.org/zap.(*SugaredLogger).Panicf(...)
 /go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:159
 github.com/hyperledger/fabric/common/flogging.(*FabricLogger).Panicf(...)
 /go/src/github.com/hyperledger/fabric/common/flogging/zap.go:74
 github.com/hyperledger/fabric/orderer/common/server.loadLocalMSP(0xc0000c0d80, 0xc00047dea0, 0x0)
 /go/src/github.com/hyperledger/fabric/orderer/common/server/main.go:690 +0x314
 github.com/hyperledger/fabric/orderer/common/server.Main()
 /go/src/github.com/hyperledger/fabric/orderer/common/server/main.go:91 +0x252
 main.main()
 /go/src/github.com/hyperledger/fabric/cmd/orderer/main.go:15 +0x20
{code}
 

*3. Reason*

The msp.SetupBCCSPKeystoreConfig function only override the KeyStorePath if it was left empty, then set 'bccspConfig.SwOpts.Ephemeral' as false.

If KeyStorePath is passed as docker environment, the 'bccspConfig.SwOpts.Ephemeral' remain as default - true.

Then bccsp/factory/SWFactory *return DummyKeyStore* because it is marked as 'Ephemeral'.

(There's no way that can set 'bccspConfig.SwOpts.Ephemeral' via YAML config or environment.)

 

*4. Solution*
 The msp.SetupBCCSPKeystoreConfig function should always set set 'bccspConfig.SwOpts.Ephemeral' as false
 - or allow set 'bccspConfig.SwOpts.Ephemeral' via YAML config or environment.

 

+ Peer should fail to start like orderer.

   But peer has one more bug(FAB-18324) - cannot read docker environment about FileKeystore.KeyStorePath( CORE_PEER_BCCSP_SW_FILEKEYSTORE_KEYSTORE ).

   So peer always consider that FileKeystore.KeyStorePath is emprty, and bypass the bug above.

I think 2 bugs should be fixed at the same time.",,magpie73,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18324,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01h4z:",,,,Unset,Unset,,"1) Prepare fabric network with Docker Compose and  SW BCCSP

2) Set profer FileKeystore.KeyStorePath config on orderer container

cf)
environment:
   - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
   ...
   - ORDERER_GENERAL_BCCSP_SW_FILEKEYSTORE_KEYSTORE=/var/hyperledger/orderer/msp/keystore

3) Start fabric network ( Fail to start)

4) See the orderer container log",,Unset,,,,,,Unset,,Unset,,(Please add usage information),magpie73,wenjian,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.2,release-2.1,mergify/bp/release-2.2/pr-3750,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Dec/20 1:28 AM;wenjian;This problem is already fixed in v2.3.0. In PR [https://github.com/hyperledger/fabric/pull/1553,] the `bccspConfig.SwOpts.Ephemeral` field has been removed from the BCCSP config. Need to backport the PR.;;;","02/Dec/20 9:59 PM;wenjian;release-2.1 PR: https://github.com/hyperledger/fabric/pull/2178

release-2.2 PR: https://github.com/hyperledger/fabric/pull/2177;;;","03/Dec/20 7:11 AM;wenjian;release-1.4 PR: https://github.com/hyperledger/fabric/pull/2184;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer ignore 'CORE_PEER_BCCSP_SW_FILEKEYSTORE_KEYSTORE' docker environment,FAB-18324,46299,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,sykesm,magpie73,magpie73,08/Nov/20 12:21 PM,04/Feb/21 2:45 AM,28/Oct/23 3:09 AM,,v1.4.5,v2.1.0,,,,,,,,,,fabric-common,fabric-peer,,,0,bccsp,,,,,"*1.Condition*
 Use SW BCCCSP
 Set BCCSP FileKeystore.KeyStorePath with path different to default - /etc/hyperledger/fabric/msp/keystore - as docker environment( CORE_PEER_BCCSP_SW_FILEKEYSTORE_KEYSTORE )

*2. Symptom*
 Peer ignore 'CORE_PEER_BCCSP_SW_FILEKEYSTORE_KEYSTORE' docker environment

If key files really exist on that path, the peer node fail to strat.

*3. Reason*
 The internal/peer/common/InitCrypto function does not set ""peer.BCCSP.SW.FileKeyStore.KeyStore"" propely.

*4. Solution*
 *Should set k*eyStorePath properly in InitCrypto function like below :

bccspConfig.SwOpts.FileKeystore.KeyStorePath = viper.Get(""peer.BCCSP.SW.FileKeyStore.KeyStore"")

 

+ If this bug is fixed, then peer node will always fail to start even with proper 'CORE_PEER_BCCSP_SW_FILEKEYSTORE_KEYSTORE' docker environment.
 It is because of other bug related with Ephemeral setting. (FAB-18323)

I think 2 bugs should be fixed at the same time.",,denyeart,magpie73,sykesm,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18323,,FAB-17969,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqx2",,,,Unset,Unset,v2.x,"1) Prepare fabric network with Docker Compose

2) Set the wrong path to dummy FileKeystore.KeyStorePath config on peer container

environment:
   ...
   - CORE_PEER_BCCSP_SW_FILEKEYSTORE_KEYSTORE=/wrongpath

3) Start fabric network ( It should fail but success to startup  ) 
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,magpie73,sykesm,wenjian,,,,,,,,,,,,,dependabot/bundler/docs/nokogiri-1.14.3,0.2.x,dependabot/bundler/docs/activesupport-6.0.6.1,dependabot/go_modules/bindings/go-apiv1/golang.org/x/text-0.3.8,0.1.x,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/text-0.3.8,dependabot/go_modules/bindings/go-apiv1/golang.org/x/net-0.7.0,dependabot/bundler/docs/commonmarker-0.23.9,dependabot/go_modules/bindings/go-apiv2/golang.org/x/net-0.7.0,release-2.3,release-2.2,dependabot/go_modules/bindings/go-apiv2/golang.org/x/text-0.3.8,github-settings,dependabot/go_modules/bindings/go-apiv2/golang.org/x/sys-0.1.0,dependabot/go_modules/golang.org/x/sys-0.1.0,dependabot/go_modules/bindings/go-apiv1/golang.org/x/sys-0.1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Dec/20 4:41 AM;wenjian;FAB-15519 replaced the viperutil.EnhancedExactUnmarshalKey(...) call with viper.Get(""peer.BCCSP"") in peer/common/common.go. However, viper.Get(""peer.BCCSP"") only returns values from the config file (core.yaml), but not from env vars. This caused the reported problem where CORE_PEER_BCCSP_SW_FILEKEYSTORE_KEYSTORE env var was not picked up.

Note that this behavior only happens for non-leaf nodes. If you call viper.Get() for a leaf node (eg ""peer.BCCSP.SW.FileKeyStore.KeyStore""), it will correctly return the env var value instead of the value in the config file.

If I change viper.Get(""peer.BCCSP"") back to viperutil.EnhancedExactUnmarshalKey(""peer.BCCSP""...), the problem is fixed.;;;","08/Dec/20 6:06 AM;wenjian;EnhancedExactUnmarshalKey is expensive to the tune of several minutes during test cases. Therefore, it is not a good option to change back. ;;;","02/Feb/21 12:48 AM;denyeart;[~sykesm] A few developers have looked into this one without success. Could you add your thoughts? If it is not possible to fix, is there any additional guidance we need to document beyond using core.yaml to set peer properties rather than environment variables?;;;","04/Feb/21 2:45 AM;sykesm;There are no good, easy solutions to this problem. The solution I proposed more than a year ago was to change how the Fabric configuration model works.

The workaround is to configure BCCSP in core.yaml.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Return error to deliver service client if snapshot generation in progress,FAB-18325,46300,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,manish-sethi,manish-sethi,09/Nov/20 1:57 PM,11/Jan/21 3:36 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-ledger,fabric-peer,,,0,,,,,,"If snapshot generation is in progress (i.e., the commits are paused to the channel) and deliver service asks for a block that is not yet committed, return an error to client.

In the implementation, we can track the open [iterators|https://github.com/hyperledger/fabric/blob/1f372da73f2cade0cbd1b7fcbaec9dc294269cd9/core/ledger/kvledger/kv_ledger.go#L900] and their state and when the following condition becomes true for any iterator, return a typed error (say `LedgerBusy` error) from the iterator's `Next` function.
{noformat}
(snapshot generation in progress) && (iterator waiting or going to wait for block > snapshot height)
{noformat}
.

Finally, the deliver service can return the error code [Status_SERVICE_UNAVAILABLE|https://github.com/hyperledger/fabric-protos/blob/f44816d6f621f1f7615cb4fc65643791eb6d8ce6/common/common.proto#L24]

 ",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-106,,,No,,Unset,No,,,"1|i00wur:0idqxqt",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a mechanism to check availability of private data,FAB-18326,46301,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,manish-sethi,manish-sethi,09/Nov/20 2:05 PM,07/Dec/20 11:27 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-ledger,,,,0,,,,,,"When a peer is bootstrapped from a snapshot, it may have a significant amount of private to reconcile from other peers. In such a situation it may not be clear to admins when is it safe to delete the existing peer if the intention of bootstrapping a peer was to delete the existing peer(s) to save on storage.

It would be good to add an API for giving the summary of missing pvtdata. It would be good to have this API in general as well for a regular peer because unlike public data, any errors in receiving the private data are mostly silent and are just available in the logs.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-106,,,No,,Unset,No,,,"1|i00wur:0idqy6",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename cluster relation to consensus relation,FAB-18327,46304,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,10/Nov/20 12:09 AM,10/Nov/20 3:45 AM,28/Oct/23 3:09 AM,10/Nov/20 3:45 AM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"And change relation ""none"" to ""other"".",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprx6e",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
race: externalbuilder/instance_test,FAB-18328,46305,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,sykesm,sykesm,10/Nov/20 12:12 AM,16/Nov/20 6:09 AM,28/Oct/23 3:09 AM,16/Nov/20 6:09 AM,v2.3.0,,,,,,,,,,,fabric-peer,,,,0,race,,,,,"Running on master@cc77194a342f156d329ebb65b756716525909057 from November 9, 2020:

{code}
------------------------------
• Failure [1.013 seconds]
Instance
/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/container/externalbuilder/instance_test.go:30
  Start
  /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/container/externalbuilder/instance_test.go:273
    invokes the builder's run command and sets the run status [It]
    /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/container/externalbuilder/instance_test.go:274

    Timed out after 1.001s.
    When passed a matcher, ReceiveMatcher's channel *must* receive something.

    /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/container/externalbuilder/instance_test.go:288
------------------------------
==================
WARNING: DATA RACE
Write at 0x00c0000ae2a0 by goroutine 21:
  github.com/hyperledger/fabric/core/container/externalbuilder_test.glob..func2.1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/container/externalbuilder/instance_test.go:41 +0x59b
  github.com/onsi/ginkgo/internal/leafnodes.(*runner).runSync()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/leafnodes/runner.go:113 +0xf3
  github.com/onsi/ginkgo/internal/leafnodes.(*runner).run()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/leafnodes/runner.go:64 +0x107
  github.com/onsi/ginkgo/internal/leafnodes.(*SetupNode).Run()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/leafnodes/setup_nodes.go:15 +0x87
  github.com/onsi/ginkgo/internal/spec.(*Spec).runSample()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/spec/spec.go:193 +0x2c5
  github.com/onsi/ginkgo/internal/spec.(*Spec).Run()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/spec/spec.go:138 +0x17e
  github.com/onsi/ginkgo/internal/specrunner.(*SpecRunner).runSpec()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/specrunner/spec_runner.go:200 +0x172
  github.com/onsi/ginkgo/internal/specrunner.(*SpecRunner).runSpecs()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/specrunner/spec_runner.go:170 +0x216
  github.com/onsi/ginkgo/internal/leafnodes.(*ItNode).Run()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/leafnodes/it_node.go:26 +0x87
  github.com/onsi/ginkgo/internal/spec.(*Spec).runSample()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/spec/spec.go:215 +0x6e1
  github.com/onsi/ginkgo/internal/spec.(*Spec).Run()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/spec/spec.go:138 +0x17e
  github.com/onsi/ginkgo/internal/specrunner.(*SpecRunner).runSpec()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/specrunner/spec_runner.go:200 +0x172
  github.com/onsi/ginkgo/internal/specrunner.(*SpecRunner).runSpecs()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/specrunner/spec_runner.go:170 +0x216
  github.com/onsi/ginkgo/internal/specrunner.(*SpecRunner).Run()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/specrunner/spec_runner.go:66 +0x140
  github.com/onsi/ginkgo/internal/suite.(*Suite).Run()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/suite/suite.go:62 +0x69f
  github.com/onsi/ginkgo.RunSpecsWithCustomReporters()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/ginkgo_dsl.go:221 +0x349
  github.com/onsi/ginkgo.RunSpecs()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/ginkgo_dsl.go:202 +0x99
  github.com/hyperledger/fabric/core/container/externalbuilder_test.TestExternalbuilders()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/container/externalbuilder/externalbuilder_suite_test.go:18 +0xf8
  testing.tRunner()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1050 +0x1eb

Previous read at 0x00c0000ae2a0 by goroutine 26:
  github.com/hyperledger/fabric/core/container/externalbuilder_test.glob..func2.5.1.1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/container/externalbuilder/instance_test.go:287 +0x3c

Goroutine 21 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1095 +0x537
  testing.runTests.func1()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1339 +0xa6
  testing.tRunner()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1050 +0x1eb
  testing.runTests()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1337 +0x594
  testing.(*M).Run()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1252 +0x2ff
  main.main()
      _testmain.go:104 +0x337

Goroutine 26 (running) created at:
  github.com/hyperledger/fabric/core/container/externalbuilder_test.glob..func2.5.1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/container/externalbuilder/instance_test.go:287 +0x5c3
  github.com/onsi/ginkgo/internal/leafnodes.(*runner).runSync()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/leafnodes/runner.go:113 +0xf3
  github.com/onsi/ginkgo/internal/leafnodes.(*runner).run()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/leafnodes/runner.go:64 +0x107
  github.com/onsi/ginkgo/internal/leafnodes.(*ItNode).Run()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/leafnodes/it_node.go:26 +0x87
  github.com/onsi/ginkgo/internal/spec.(*Spec).runSample()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/spec/spec.go:215 +0x6e1
  github.com/onsi/ginkgo/internal/spec.(*Spec).Run()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/spec/spec.go:138 +0x17e
  github.com/onsi/ginkgo/internal/specrunner.(*SpecRunner).runSpec()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/specrunner/spec_runner.go:200 +0x172
  github.com/onsi/ginkgo/internal/specrunner.(*SpecRunner).runSpecs()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/specrunner/spec_runner.go:170 +0x216
  github.com/onsi/ginkgo/internal/specrunner.(*SpecRunner).Run()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/specrunner/spec_runner.go:66 +0x140
  github.com/onsi/ginkgo/internal/suite.(*Suite).Run()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/internal/suite/suite.go:62 +0x69f
  github.com/onsi/ginkgo.RunSpecsWithCustomReporters()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/ginkgo_dsl.go:221 +0x349
  github.com/onsi/ginkgo.RunSpecs()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/ginkgo_dsl.go:202 +0x99
  github.com/hyperledger/fabric/core/container/externalbuilder_test.TestExternalbuilders()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/container/externalbuilder/externalbuilder_suite_test.go:18 +0xf8
  testing.tRunner()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1050 +0x1eb
==================
{code}",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,cc77194a342f156d329ebb65b756716525909057,Unset,No,,,"1|i01h63:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Nov/20 7:57 AM;sykesm;https://github.com/hyperledger/fabric/pull/2096;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
race: cluster/comm_test#TestRenewCertificates,FAB-18329,46306,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,sykesm,sykesm,10/Nov/20 12:17 AM,10/Nov/20 11:53 PM,28/Oct/23 3:09 AM,10/Nov/20 6:32 AM,v2.3.0,,,,,,,,,,,fabric-orderer,,,,0,race,,,,,"Running on master@cc77194a342f156d329ebb65b756716525909057 from November 9, 2020:

{code}
==================
WARNING: DATA RACE
Write at 0x00c00169ce38 by goroutine 145:
  github.com/hyperledger/fabric/orderer/common/cluster_test.(*clusterNode).renewCertificates()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm_test.go:215 +0x48f
  github.com/hyperledger/fabric/orderer/common/cluster_test.TestRenewCertificates()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm_test.go:877 +0x856
  testing.tRunner()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1050 +0x1eb

Previous read at 0x00c00169ce38 by goroutine 170:
  github.com/hyperledger/fabric/orderer/common/cluster.(*PredicateDialer).Dial.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/util.go:161 +0x9e
  github.com/hyperledger/fabric/internal/pkg/comm.(*DynamicClientCredentials).latestConfig()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/internal/pkg/comm/creds.go:145 +0xb4
  github.com/hyperledger/fabric/internal/pkg/comm.(*DynamicClientCredentials).Info()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/internal/pkg/comm/creds.go:168 +0x59
  google.golang.org/grpc/internal/transport.newHTTP2Client()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/internal/transport/http2_client.go:230 +0x2e75
  google.golang.org/grpc/internal/transport.NewClientTransport()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/internal/transport/transport.go:577 +0x6c5
  google.golang.org/grpc.(*addrConn).createTransport()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:1282 +0x4e4
  google.golang.org/grpc.(*addrConn).tryAllAddrs()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:1212 +0x561
  google.golang.org/grpc.(*addrConn).resetTransport()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:1127 +0x30a

Goroutine 145 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1095 +0x537
  testing.runTests.func1()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1339 +0xa6
  testing.tRunner()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1050 +0x1eb
  testing.runTests()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1337 +0x594
  testing.(*M).Run()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1252 +0x2ff
  main.main()
      _testmain.go:262 +0x337

Goroutine 170 (running) created at:
  google.golang.org/grpc.(*addrConn).connect()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:813 +0x103
  google.golang.org/grpc.(*acBalancerWrapper).Connect()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/balancer_conn_wrappers.go:239 +0x92
  google.golang.org/grpc.(*pickfirstBalancer).UpdateClientConnState()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/pickfirst.go:85 +0x752
  google.golang.org/grpc.(*ccBalancerWrapper).updateClientConnState()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/balancer_conn_wrappers.go:122 +0x173
  google.golang.org/grpc.(*ClientConn).updateResolverState()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:660 +0x40b
  google.golang.org/grpc.(*ccResolverWrapper).UpdateState()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/resolver_conn_wrapper.go:148 +0x2b5
  google.golang.org/grpc/internal/resolver/passthrough.(*passthroughResolver).start()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/internal/resolver/passthrough/passthrough.go:48 +0x1f1
  google.golang.org/grpc/internal/resolver/passthrough.(*passthroughBuilder).Build()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/internal/resolver/passthrough/passthrough.go:34 +0xdd
  google.golang.org/grpc.newCCResolverWrapper()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/resolver_conn_wrapper.go:74 +0x451
  google.golang.org/grpc.DialContext()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:307 +0x1053
  github.com/hyperledger/fabric/internal/pkg/comm.(*GRPCClient).NewConnection()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/internal/pkg/comm/client.go:205 +0x56a
  github.com/hyperledger/fabric/orderer/common/cluster.(*PredicateDialer).Dial()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/util.go:157 +0x394
  github.com/hyperledger/fabric/orderer/common/cluster.(*ConnectionStore).connect()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/connections.go:110 +0x1f6
  github.com/hyperledger/fabric/orderer/common/cluster.(*ConnectionStore).Connection()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/connections.go:94 +0x188
  github.com/hyperledger/fabric/orderer/common/cluster.(*Comm).createRemoteContext.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm.go:333 +0x307
  github.com/hyperledger/fabric/orderer/common/cluster.(*Stub).Activate()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm.go:433 +0x119
  github.com/hyperledger/fabric/orderer/common/cluster.(*Comm).updateStubInMapping()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm.go:316 +0x371
  github.com/hyperledger/fabric/orderer/common/cluster.(*Comm).applyMembershipConfig()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm.go:271 +0x2f2
  github.com/hyperledger/fabric/orderer/common/cluster.(*Comm).Configure()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm.go:212 +0x372
  github.com/hyperledger/fabric/orderer/common/cluster_test.TestRenewCertificates()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm_test.go:871 +0x7d8
  testing.tRunner()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1050 +0x1eb
==================
{code}

This results in test failures.
{code}
--- FAIL: TestRenewCertificates (1.09s)
    comm_test.go:1375: 1->2
    comm_test.go:1375: 2->1
    comm_test.go:1375: 1->2
    comm_test.go:1375: 2->1
    testing.go:965: race detected during execution of test
{code}",,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18333,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,cc77194a342f156d329ebb65b756716525909057,Unset,No,,,"1|i01h6b:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,yacovm,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Nov/20 12:18 AM;sykesm;Additional race reported in same execution and in same test:

{code}
==================
WARNING: DATA RACE
Write at 0x00c00169ce20 by goroutine 145:
  github.com/hyperledger/fabric/orderer/common/cluster_test.(*clusterNode).renewCertificates()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm_test.go:216 +0x525
  github.com/hyperledger/fabric/orderer/common/cluster_test.TestRenewCertificates()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm_test.go:877 +0x856
  testing.tRunner()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1050 +0x1eb

Previous read at 0x00c00169ce20 by goroutine 170:
  github.com/hyperledger/fabric/orderer/common/cluster.(*PredicateDialer).Dial.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/util.go:161 +0x9e
  github.com/hyperledger/fabric/internal/pkg/comm.(*DynamicClientCredentials).latestConfig()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/internal/pkg/comm/creds.go:145 +0xb4
  github.com/hyperledger/fabric/internal/pkg/comm.(*DynamicClientCredentials).Info()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/internal/pkg/comm/creds.go:168 +0x59
  google.golang.org/grpc/internal/transport.newHTTP2Client()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/internal/transport/http2_client.go:230 +0x2e75
  google.golang.org/grpc/internal/transport.NewClientTransport()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/internal/transport/transport.go:577 +0x6c5
  google.golang.org/grpc.(*addrConn).createTransport()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:1282 +0x4e4
  google.golang.org/grpc.(*addrConn).tryAllAddrs()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:1212 +0x561
  google.golang.org/grpc.(*addrConn).resetTransport()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:1127 +0x30a

Goroutine 145 (running) created at:
  testing.(*T).Run()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1095 +0x537
  testing.runTests.func1()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1339 +0xa6
  testing.tRunner()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1050 +0x1eb
  testing.runTests()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1337 +0x594
  testing.(*M).Run()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1252 +0x2ff
  main.main()
      _testmain.go:262 +0x337

Goroutine 170 (running) created at:
  google.golang.org/grpc.(*addrConn).connect()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:813 +0x103
  google.golang.org/grpc.(*acBalancerWrapper).Connect()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/balancer_conn_wrappers.go:239 +0x92
  google.golang.org/grpc.(*pickfirstBalancer).UpdateClientConnState()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/pickfirst.go:85 +0x752
  google.golang.org/grpc.(*ccBalancerWrapper).updateClientConnState()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/balancer_conn_wrappers.go:122 +0x173
  google.golang.org/grpc.(*ClientConn).updateResolverState()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:660 +0x40b
  google.golang.org/grpc.(*ccResolverWrapper).UpdateState()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/resolver_conn_wrapper.go:148 +0x2b5
  google.golang.org/grpc/internal/resolver/passthrough.(*passthroughResolver).start()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/internal/resolver/passthrough/passthrough.go:48 +0x1f1
  google.golang.org/grpc/internal/resolver/passthrough.(*passthroughBuilder).Build()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/internal/resolver/passthrough/passthrough.go:34 +0xdd
  google.golang.org/grpc.newCCResolverWrapper()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/resolver_conn_wrapper.go:74 +0x451
  google.golang.org/grpc.DialContext()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:307 +0x1053
  github.com/hyperledger/fabric/internal/pkg/comm.(*GRPCClient).NewConnection()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/internal/pkg/comm/client.go:205 +0x56a
  github.com/hyperledger/fabric/orderer/common/cluster.(*PredicateDialer).Dial()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/util.go:157 +0x394
  github.com/hyperledger/fabric/orderer/common/cluster.(*ConnectionStore).connect()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/connections.go:110 +0x1f6
  github.com/hyperledger/fabric/orderer/common/cluster.(*ConnectionStore).Connection()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/connections.go:94 +0x188
  github.com/hyperledger/fabric/orderer/common/cluster.(*Comm).createRemoteContext.func1()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm.go:333 +0x307
  github.com/hyperledger/fabric/orderer/common/cluster.(*Stub).Activate()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm.go:433 +0x119
  github.com/hyperledger/fabric/orderer/common/cluster.(*Comm).updateStubInMapping()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm.go:316 +0x371
  github.com/hyperledger/fabric/orderer/common/cluster.(*Comm).applyMembershipConfig()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm.go:271 +0x2f2
  github.com/hyperledger/fabric/orderer/common/cluster.(*Comm).Configure()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm.go:212 +0x372
  github.com/hyperledger/fabric/orderer/common/cluster_test.TestRenewCertificates()
      /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/cluster/comm_test.go:871 +0x7d8
  testing.tRunner()
      /usr/local/Cellar/go@1.14/1.14.11/libexec/src/testing/testing.go:1050 +0x1eb
==================
{code};;;","10/Nov/20 4:16 AM;yacovm;https://github.com/hyperledger/fabric/pull/2089;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve the test code by removing fragile condition check,FAB-18330,46307,,Test Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,wenjian,manish-sethi,manish-sethi,10/Nov/20 12:23 AM,01/Dec/20 5:15 AM,28/Oct/23 3:09 AM,,,,,,,,v2.x,,,,,fabric-ledger,,,,0,,,,,,"In kvledger/tests code there is a [condition|https://github.com/hyperledger/fabric/blob/cc77194a342f156d329ebb65b756716525909057/core/ledger/kvledger/tests/util.go#L86] that is very fragile and depends on the org name used in a test program. For instance, this check will work as intended if the the input to this function is prepared by using [convertToMemberOrgsPolicy|https://github.com/hyperledger/fabric/blob/cc77194a342f156d329ebb65b756716525909057/core/ledger/kvledger/tests/util.go#L66] function using the org name ""org1"" however, it will not work with org name ""MyOrg""",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxwi",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
pkcs11 unit tests fail on Darwin with panic during termination,FAB-18331,46308,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Environment Issue,,sykesm,sykesm,10/Nov/20 12:28 AM,10/Nov/20 11:26 PM,28/Oct/23 3:09 AM,10/Nov/20 4:59 AM,v2.3.0,,,,,,,,,,,fabric-crypto,,,,0,,,,,,"{code}
Testing with pkcs11...
Trying configuration [0]
PASS
coverage: 84.8% of statements
Trying configuration [1]
PASS
Trying configuration [2]
PASS
Trying configuration [3]
PASS
fatal error: unexpected signal during runtime execution
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x7fff728211ac]

goroutine 1 [running]:
runtime: unexpected return pc for runtime.throw called from 0x4878b47
stack: frame={sp:0x70000715dde8, fp:0x70000715de18} stack=[0xc000142000,0xc00014a000)

runtime.throw(0x3, 0x70000715de38)
	/usr/local/Cellar/go@1.14/1.14.11/libexec/src/runtime/panic.go:1116 +0x72 fp=0x70000715de18 sp=0x70000715dde8 pc=0x4036f22
FAIL	github.com/hyperledger/fabric/bccsp/factory	4.824s
ok  	github.com/hyperledger/fabric/bccsp/pkcs11	(cached)	coverage: 84.9% of statements
{code}",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,cc77194a342f156d329ebb65b756716525909057,Unset,No,,,"1|i01h6r:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Nov/20 1:20 AM;sykesm;{{go env}}

{code}
$ go env
GO111MODULE=""""
GOARCH=""amd64""
GOBIN=""""
GOCACHE=""/Users/sykesm/Library/Caches/go-build""
GOENV=""/Users/sykesm/Library/Application Support/go/env""
GOEXE=""""
GOFLAGS=""""
GOHOSTARCH=""amd64""
GOHOSTOS=""darwin""
GOINSECURE=""""
GONOPROXY=""""
GONOSUMDB=""""
GOOS=""darwin""
GOPATH=""/Users/sykesm/workspace/fabric""
GOPRIVATE=""""
GOPROXY=""https://proxy.golang.org,direct""
GOROOT=""/usr/local/Cellar/go@1.14/1.14.11/libexec""
GOSUMDB=""sum.golang.org""
GOTMPDIR=""""
GOTOOLDIR=""/usr/local/Cellar/go@1.14/1.14.11/libexec/pkg/tool/darwin_amd64""
GCCGO=""gccgo""
AR=""ar""
CC=""clang""
CXX=""clang++""
CGO_ENABLED=""1""
GOMOD=""/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/go.mod""
CGO_CFLAGS=""-g -O2""
CGO_CPPFLAGS=""""
CGO_CXXFLAGS=""-g -O2""
CGO_FFLAGS=""-g -O2""
CGO_LDFLAGS=""-g -O2""
PKG_CONFIG=""pkg-config""
GOGCCFLAGS=""-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/tw/dsbwtnf50w7dhvhh0tkg7fwr0000gn/T/go-build977319977=/tmp/go-build -gno-record-gcc-switches -fno-common""
{code}

{{go version}}

{code}
$ go version
go version go1.14.11 darwin/amd64
{code}

{{uname -a}}

{code}
$ uname -a
Darwin trapped.home.lan 19.6.0 Darwin Kernel Version 19.6.0: Thu Oct 29 22:56:45 PDT 2020; root:xnu-6153.141.2.2~1/RELEASE_X86_64 x86_64 i386 MacBookPro14,3 Darwin
{code}

Building the tests and attaching, the fault occurs here:

{code}
Process 47702 stopped
* thread #3, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)
    frame #0: 0x00007fff728211ac libsystem_pthread.dylib`pthread_rwlock_wrlock
libsystem_pthread.dylib`pthread_rwlock_wrlock:
->  0x7fff728211ac <+0>:  cmpq   $0x52574c4b, (%rdi)       ; imm = 0x52574C4B
    0x7fff728211b3 <+7>:  jne    0x7fff7282122d            ; <+129>
    0x7fff728211b5 <+9>:  leaq   0x2f(%rdi), %r10
    0x7fff728211b9 <+13>: andq   $-0x10, %r10
Target 0: (factory.test) stopped.
{code};;;","10/Nov/20 1:25 AM;sykesm;Same issue appears to happen with the latest version of go.

{code}
Process 48752 stopped
* thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)
    frame #0: 0x00007fff728211ac libsystem_pthread.dylib`pthread_rwlock_wrlock
libsystem_pthread.dylib`pthread_rwlock_wrlock:
->  0x7fff728211ac <+0>:  cmpq   $0x52574c4b, (%rdi)       ; imm = 0x52574C4B
    0x7fff728211b3 <+7>:  jne    0x7fff7282122d            ; <+129>
    0x7fff728211b5 <+9>:  leaq   0x2f(%rdi), %r10
    0x7fff728211b9 <+13>: andq   $-0x10, %r10
Target 0: (factory.test) stopped.
{code};;;","10/Nov/20 1:29 AM;sykesm;{code}
Process 48752 stopped
* thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)
    frame #0: 0x00007fff728211ac libsystem_pthread.dylib`pthread_rwlock_wrlock
libsystem_pthread.dylib`pthread_rwlock_wrlock:
->  0x7fff728211ac <+0>:  cmpq   $0x52574c4b, (%rdi)       ; imm = 0x52574C4B
    0x7fff728211b3 <+7>:  jne    0x7fff7282122d            ; <+129>
    0x7fff728211b5 <+9>:  leaq   0x2f(%rdi), %r10
    0x7fff728211b9 <+13>: andq   $-0x10, %r10
Target 0: (factory.test) stopped.
(lldb) thread list
Process 48752 stopped
  thread #1: tid = 0x127dcd, 0x00007fff72763882 libsystem_kernel.dylib`__psynch_cvwait + 10, queue = 'com.apple.main-thread'
  thread #2: tid = 0x127dec, 0x00007fff72763756 libsystem_kernel.dylib`__semwait_signal + 10
  thread #3: tid = 0x127ded, 0x00007fff72763882 libsystem_kernel.dylib`__psynch_cvwait + 10
  thread #4: tid = 0x127dee, 0x00007fff72763882 libsystem_kernel.dylib`__psynch_cvwait + 10
* thread #5: tid = 0x127def, 0x00007fff728211ac libsystem_pthread.dylib`pthread_rwlock_wrlock, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)
  thread #6: tid = 0x127df0, 0x00007fff72763882 libsystem_kernel.dylib`__psynch_cvwait + 10
(lldb) thread backtrace
* thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)
  * frame #0: 0x00007fff728211ac libsystem_pthread.dylib`pthread_rwlock_wrlock
    frame #1: 0x000000002ed4fd4d libcrypto.1.1.dylib`CRYPTO_THREAD_write_lock + 9
    frame #2: 0x000000002ecce275 libcrypto.1.1.dylib`ENGINE_finish + 30
    frame #3: 0x000000002e4798f0 libsofthsm2.so`OSSLCryptoFactory::~OSSLCryptoFactory() + 28
    frame #4: 0x000000002e479984 libsofthsm2.so`OSSLCryptoFactory::~OSSLCryptoFactory() + 14
    frame #5: 0x00007fff726c913c libsystem_c.dylib`__cxa_finalize_ranges + 319
    frame #6: 0x00007fff726c9412 libsystem_c.dylib`exit + 55
    frame #7: 0x00000000044a8694 factory.test`__tsan_fini + 20
    frame #8: 0x00000000040747e3 factory.test`racecall + 35
    frame #9: 0x000000000406e365 factory.test`os.runtime_beforeExit + 37
    frame #10: 0x00000000040c1f54 factory.test`os.Exit + 84
    frame #11: 0x00000000044a1d9a factory.test`main.main + 922
    frame #12: 0x000000000403c5a9 factory.test`runtime.main + 521
    frame #13: 0x0000000004073021 factory.test`runtime.goexit + 1
    frame #14: 0x00000000040c1f54 factory.test`os.Exit + 84
    frame #15: 0x00000000044a1d9a factory.test`main.main + 922
    frame #16: 0x000000000403c5a9 factory.test`runtime.main + 521
    frame #17: 0x0000000004073021 factory.test`runtime.goexit + 1
    frame #18: 0x00000000044a1d9a factory.test`main.main + 922
    frame #19: 0x000000000403c5a9 factory.test`runtime.main + 521
    frame #20: 0x0000000004073021 factory.test`runtime.goexit + 1
    frame #21: 0x000000000403c5a9 factory.test`runtime.main + 521
    frame #22: 0x0000000004073021 factory.test`runtime.goexit + 1
    frame #23: 0x0000000004073021 factory.test`runtime.goexit + 1
{code};;;","10/Nov/20 1:50 AM;sykesm;https://github.com/opendnssec/SoftHSMv2/issues/548 looks like a match. Appears a change was committed and then reverted.;;;","10/Nov/20 2:22 AM;sykesm;https://github.com/opendnssec/SoftHSMv2/pull/551/ may resolve the issue but it is not part of any tagged release.;;;","10/Nov/20 4:43 AM;sykesm;Local modifications to use a build from source resolves the issue locally. Leaving it here since I expect others will hit this soon enough.

{code:none}
diff --git a/Formula/softhsm.rb b/Formula/softhsm.rb
index ac53d62499..efab496266 100644
--- a/Formula/softhsm.rb
+++ b/Formula/softhsm.rb
@@ -18,9 +18,20 @@ class Softhsm < Formula
     sha256 ""cd17fa2e8538ca99b5963d60074578c91839740e7f87cc292b9b8f4f67dd99d8"" => :high_sierra
   end

+  head do
+    url ""https://github.com/opendnssec/SoftHSMv2.git"", :branch => ""develop""
+
+    depends_on ""autoconf"" => :build
+    depends_on ""automake"" => :build
+    depends_on ""libtool"" => :build
+    depends_on ""pkg-config"" => :build
+  end
+
   depends_on ""openssl@1.1""

   def install
+    system ""sh"", ""./autogen.sh"" if build.head?
+
     system ""./configure"", ""--disable-dependency-tracking"",
                           ""--disable-silent-rules"",
                           ""--prefix=#{prefix}"",
{code};;;","10/Nov/20 4:59 AM;sykesm;This appears to be related to a use-after-free bug from SoftHSM. Using a local build from the current HEAD of their development branch looks to resolve this issue.;;;","10/Nov/20 11:26 PM;sykesm;Homebrew formula was updated to allow for install from head of develop.

https://github.com/Homebrew/homebrew-core/commit/18b1692f94e7146f65b0f4bee35e26c8391aca86

After a {{brew install}} of softhsm with the {{--head}} flag, be sure to update {{PKCS11_LIB}} to reflect the appropriate version.

{code:sh}
if [ -d ""/usr/local/Cellar/softhsm"" ]; then
    PKCS11_LIB=""$(find -L ""/usr/local/Cellar/softhsm"" -name libsofthsm2.so -print -quit)""
    if [ -f ""$PKCS11_LIB"" ]; then
        export PKCS11_LIB
        export PKCS11_PIN=98765432
        export PKCS11_LABEL=""ForFabric""
    fi
fi
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename pendingops/joinblock folder to pendingops/join,FAB-18332,46309,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,10/Nov/20 7:06 AM,10/Nov/20 6:27 PM,28/Oct/23 3:09 AM,10/Nov/20 6:27 PM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,Rename pendingops/joinblock to pendingops/join since joinblock is not a pending operation. It also makes it consistent with pendingops/remove.,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxe6",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
panic: cluster/comm_test#TestRenewCertificates,FAB-18333,46310,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,sykesm,sykesm,10/Nov/20 11:33 PM,11/Nov/20 3:48 AM,28/Oct/23 3:09 AM,11/Nov/20 3:48 AM,v2.3.0,,,,,,,,,,,fabric-orderer,,,,0,ci-flake,,,,,"
{code}
2020-11-09T23:37:08.4915457Z --- FAIL: TestRenewCertificates (0.06s)
2020-11-09T23:37:08.4915844Z     comm_test.go:1380: 1->2
2020-11-09T23:37:08.4916328Z     comm_test.go:1380: 2->1
2020-11-09T23:37:08.4916635Z panic: runtime error: invalid memory address or nil pointer dereference [recovered]
2020-11-09T23:37:08.4916988Z 	panic: runtime error: invalid memory address or nil pointer dereference
2020-11-09T23:37:08.4917326Z [signal SIGSEGV: segmentation violation code=0x1 addr=0x18 pc=0xf69bb4]
2020-11-09T23:37:08.4917547Z 
2020-11-09T23:37:08.4917702Z goroutine 806 [running]:
2020-11-09T23:37:08.4917922Z testing.tRunner.func1.1(0x11701a0, 0x1cc9170)
2020-11-09T23:37:08.4918216Z 	/opt/hostedtoolcache/go/1.14.4/x64/src/testing/testing.go:940 +0x421
2020-11-09T23:37:08.4918483Z testing.tRunner.func1(0xc001c2fb00)
2020-11-09T23:37:08.4918745Z 	/opt/hostedtoolcache/go/1.14.4/x64/src/testing/testing.go:943 +0x600
2020-11-09T23:37:08.4919013Z panic(0x11701a0, 0x1cc9170)
2020-11-09T23:37:08.4919261Z 	/opt/hostedtoolcache/go/1.14.4/x64/src/runtime/panic.go:975 +0x3e3
2020-11-09T23:37:08.4919607Z github.com/hyperledger/fabric/orderer/common/cluster_test.TestRenewCertificates(0xc001c2fb00)
2020-11-09T23:37:08.4919975Z 	/home/vsts/work/1/fabric/orderer/common/cluster/comm_test.go:892 +0xa04
2020-11-09T23:37:08.4920250Z testing.tRunner(0xc001c2fb00, 0x12cba98)
2020-11-09T23:37:08.4920523Z 	/opt/hostedtoolcache/go/1.14.4/x64/src/testing/testing.go:991 +0x1ec
2020-11-09T23:37:08.4920786Z created by testing.(*T).Run
2020-11-09T23:37:08.4921040Z 	/opt/hostedtoolcache/go/1.14.4/x64/src/testing/testing.go:1042 +0x661
2020-11-09T23:37:08.4921347Z FAIL	github.com/hyperledger/fabric/orderer/common/cluster	17.942s {code}",,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18329,,,,"11/Nov/20 1:19 AM;yacovm;Screenshot from 2020-11-10 18-19-00.png;https://jira.hyperledger.org/secure/attachment/18843/Screenshot+from+2020-11-10+18-19-00.png","10/Nov/20 11:32 PM;sykesm;renew-cert-panic.log;https://jira.hyperledger.org/secure/attachment/18842/renew-cert-panic.log",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01h6z:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,yacovm,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Nov/20 11:49 PM;sykesm;The assertion on the error contents panics because the previous call may not return an error. This can be recreated locally by running stress while executing the command.

Terminal 1:
{code}
stress -v -c $(($(nproc)+1))
{code}

Terminal 2:
{code}
go test -race -count 999 -run TestRenewCertificates ./orderer/common/cluster
{code};;;","11/Nov/20 1:20 AM;yacovm;[Here|https://github.com/hyperledger/fabric/pull/2102] is a fix which I hope will not flake.

Instead of using stress, I just spawned 13 processes (I have 12 CPUs) and it ran significantly slower than it always does without the load.

 

!Screenshot from 2020-11-10 18-19-00.png|thumbnail!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Require the orderer's Admin.TLS.ClientAuthRequired always be set to true,FAB-18334,46311,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,11/Nov/20 12:23 AM,12/Nov/20 7:00 AM,28/Oct/23 3:09 AM,12/Nov/20 7:00 AM,,,,,,,v2.3.0,,,,,fabric-orderer,,,,0,ipm,,,,,"For now, when TLS is enabled, we require mutual TLS for all actions on the channel participation API. Enforce that the orderer is configured with Admin.ClientAuthRequired = true and panic if not.",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxe3",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add application channel genesis block config to sampleconfig/configtx.yaml,FAB-18336,46313,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,wlahti,wlahti,11/Nov/20 3:59 AM,11/Nov/20 4:09 AM,28/Oct/23 3:09 AM,11/Nov/20 4:09 AM,,,,,,,,,,,,,,,,0,ipm,,,,,"{code:java}
Profiles:
    # SampleAppGenesisEtcdRaft defines a channel configuration with only the
    # sample org as a member. It uses the etcd/raft-based orderer.
    SampleAppGenesisEtcdRaft:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft
            Organizations:
                - <<: *OrdererOrg
                  Policies:
                      <<: *OrdererOrgPolicies
                      Admins:
                          Type: Signature
                          Rule: ""OR('OrdererOrg.member')""
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - <<: *SampleOrg
                  Policies:
                      <<: *SampleOrgPolicies
                      Admins:
                          Type: Signature
                          Rule: ""OR('SampleOrg.member')"" {code}",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18312,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxe4",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/20 4:09 AM;wlahti;Already handled while implementing https://jira.hyperledger.org/browse/FAB-18312.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test create system channel with config block, onboard successfully to application channels",FAB-18337,46316,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tock,wlahti,wlahti,12/Nov/20 1:37 AM,17/Nov/20 3:09 PM,28/Oct/23 3:09 AM,17/Nov/20 3:09 PM,,,,,,,,,,,,fabric-orderer,,,,0,ipm,,,,," # Creating the system channel with config block with number >0, when there are already channels referenced (created) by it, such that on boarding is needed for both the system channel and additional channels.

 
 * Define a 2 node raft network. Generate the genesis block of the system channel.
 * Start 3 empty OSNs.
 * Join 2 OSNs with a genesis block. 
 * Check that the servers have a state that signals restart is needed (List API), and that they do not accept TXs on system channel, nor API Join commands
 * Restart said servers
 * create channel A
 * create channel B
 * configure the system channel to include OSN3 (to make last config block height > 1)
 * configure channel B to include OSN3 
 * get last config block of system channel and join the 3rd OSN with it. 
 * verify onboarding on all channels - A config-tracker, B consenter
 * correct behavior by transacting on all channels.",,tock,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxew",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Nov/20 1:46 AM;wlahti;I'm not certain this scenario is feasible / valid (at least as written). When we wipe clean orderer3 and restart it, the other raft nodes recognize orderer3 since it uses the same TLS credentials. This leads to a panic since the other raft nodes send the info they think orderer3 needs instead of treating it as a fresh node:

{noformat}
[e][OrdererOrg.orderer3] 2020-11-11 11:19:46.833 EST [orderer.consensus.etcdraft] commitTo -> PANI 093 tocommit(10) is out of range [lastIndex(0)]. Was the raft log corrupted, truncated, or lost? channel=testchannel node=3
[e][OrdererOrg.orderer3] panic: tocommit(10) is out of range [lastIndex(0)]. Was the raft log corrupted, truncated, or lost?
[e][OrdererOrg.orderer3] 
[e][OrdererOrg.orderer3] goroutine 280 [running]:
[e][OrdererOrg.orderer3] go.uber.org/zap/zapcore.(*CheckedEntry).Write(0xc0002bcc60, 0x0, 0x0, 0x0)
[e][OrdererOrg.orderer3] 	/Users/wlahti/gopath/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore/entry.go:230 +0x55f
[e][OrdererOrg.orderer3] go.uber.org/zap.(*SugaredLogger).log(0xc000404e20, 0xe996504, 0x4d0d3fa, 0x5d, 0xc000701260, 0x2, 0x2, 0x0, 0x0, 0x0)
[e][OrdererOrg.orderer3] 	/Users/wlahti/gopath/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:234 +0xf6
[e][OrdererOrg.orderer3] go.uber.org/zap.(*SugaredLogger).Panicf(...)
[e][OrdererOrg.orderer3] 	/Users/wlahti/gopath/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:159
[e][OrdererOrg.orderer3] github.com/hyperledger/fabric/common/flogging.(*FabricLogger).Panicf(0xc000404e28, 0x4d0d3fa, 0x5d, 0xc000701260, 0x2, 0x2)
[e][OrdererOrg.orderer3] 	/Users/wlahti/gopath/src/github.com/hyperledger/fabric/common/flogging/zap.go:74 +0x7c
[e][OrdererOrg.orderer3] go.etcd.io/etcd/raft.(*raftLog).commitTo(0xc000388230, 0xa)
[e][OrdererOrg.orderer3] 	/Users/wlahti/gopath/src/github.com/hyperledger/fabric/vendor/go.etcd.io/etcd/raft/log.go:203 +0x135
[e][OrdererOrg.orderer3] go.etcd.io/etcd/raft.(*raft).handleHeartbeat(0xc0005f6a00, 0x8, 0x3, 0x1, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
[e][OrdererOrg.orderer3] 	/Users/wlahti/gopath/src/github.com/hyperledger/fabric/vendor/go.etcd.io/etcd/raft/raft.go:1324 +0x54
[e][OrdererOrg.orderer3] go.etcd.io/etcd/raft.stepFollower(0xc0005f6a00, 0x8, 0x3, 0x1, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
[e][OrdererOrg.orderer3] 	/Users/wlahti/gopath/src/github.com/hyperledger/fabric/vendor/go.etcd.io/etcd/raft/raft.go:1269 +0x439
[e][OrdererOrg.orderer3] go.etcd.io/etcd/raft.(*raft).Step(0xc0005f6a00, 0x8, 0x3, 0x1, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
[e][OrdererOrg.orderer3] 	/Users/wlahti/gopath/src/github.com/hyperledger/fabric/vendor/go.etcd.io/etcd/raft/raft.go:971 +0x1218
[e][OrdererOrg.orderer3] go.etcd.io/etcd/raft.(*node).run(0xc00068a6c0, 0xc0005f6a00)
[e][OrdererOrg.orderer3] 	/Users/wlahti/gopath/src/github.com/hyperledger/fabric/vendor/go.etcd.io/etcd/raft/node.go:357 +0x1178
[e][OrdererOrg.orderer3] created by go.etcd.io/etcd/raft.StartNode
[e][OrdererOrg.orderer3] 	/Users/wlahti/gopath/src/github.com/hyperledger/fabric/vendor/go.etcd.io/etcd/raft/node.go:233 +0x449
{noformat}
See WIP here: https://github.com/wlahti/fabric/commit/aabf129b4ed2fe2ff54f6bda948a0843e05a1898;;;","12/Nov/20 1:54 AM;wlahti;[~tock] Can you try to figure out a valid scenario and finish the test here?;;;","13/Nov/20 1:07 AM;tock;Correct. Deleting the WAL of a Raft node and restarting it is not a good idea. I will revise the description.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add channel ID to snapshot generation poll command,FAB-18338,46317,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,13/Nov/20 1:33 AM,11/Jan/21 2:37 AM,28/Oct/23 3:09 AM,11/Jan/21 2:37 AM,,,,,,,,,,,,fabric-quality,,,,0,,,,,,"add namespace and channel ID to snapshot generation poll command

 ",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-2247,,,No,,Unset,No,,,"1|i01h7n:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer cli enforces CORE_PEER_TLS_ROOTCERT_FILE even with --tlsRootCertFiles flag,FAB-18339,46318,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wenjian,httran88,httran88,13/Nov/20 7:28 AM,01/Dec/20 7:15 AM,28/Oct/23 3:09 AM,01/Dec/20 7:15 AM,v2.1.0,,,,,,,,,,,fabric-peer,,,,0,,,,,,"When using peer cli with the flags: 

--peerAddresses --tlsRootCertFiles 

 

the peer fails if CORE_PEER_TLS_ROOTCERT_FILE is not set as it searches in the msp/tls/ca.crt directory by default.

For example:

Error: failed to retrieve client cerificate: failed to load config for PeerClient: unable to load peer.tls.rootcert.file: open /Users/huytran/workspace/manuadmin/tls/ca.crt: no such file or directory

I've tested a theory to see if actually uses a some file set to CORE_PEER_TLS_ROOTCERT_FILE while making a transaction and it doesnt. I set CORE_PEER_TLS_ROOTCERT_FILE to some other cert files that have no relationship to the peer and the cmd worked with the correct values for --peerAddresses --tlsRootCertFiles 

I would expect that the flags to override the env vars

 ",,httran88,manish-sethi,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18357,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqx4",,,,Unset,Unset,v2.x,"Configure:
 CORE_PEER_LOCALMSPID
 CORE_PEER_MSPCONFIGPATH
 CORE_PEER_TLS_ENABLED=true
without $CORE_PEER_MSPCONFIGPATH/tls/ca.crt file there

execute:
peer lifecycle chaincode install ${cc_package} 

using ""--peerAddresses $peerUrl --tlsRootCertFiles ${peersMap[$Url]} "" flags

You should expect peer cli to fail as tls/ca.crt does not exist

Set CORE_PEER_TLS_ROOTCERT_FILE to some cert files that has no relationship to the network and run the peer cli cmd again",,Unset,,,,,,Unset,,Unset,,(Please add usage information),httran88,manish-sethi,wenjian,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Nov/20 3:14 AM;manish-sethi;[~wenjian] - can you triage this?;;;","20/Nov/20 1:27 AM;wenjian;PR: https://github.com/hyperledger/fabric/pull/2146;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB batch document update encountered an problem,FAB-18340,46320,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,manish-sethi,ymd2020,ymd2020,16/Nov/20 5:06 PM,20/Nov/20 7:17 AM,28/Oct/23 3:09 AM,20/Nov/20 7:17 AM,v2.1.0,,,,,,,,,,,fabric-ledger,,,,0,,,,,,"We are testing a refurbished application of ""test-network"" in our company.

I have the following process within my chaincode.
{code:java}
Aval = Aval - amount;
 Bval = Bval + amount;
 await stub.putState(A, Buffer.from(Aval.toString()));
 await stub.putState(B, Buffer.from(Bval.toString()));{code}
It worked fine for four months, but at some point we realized that the A data and B data were not consistent.
The A data reflected correctly and the B data rolled back.

My chaincode didn't have any errors in it, but
The peer logs show that the warning is occurring.
{code:java}
[33m2020-11-11 00:26:02.026 UTC [statecouchdb] commitUpdates -> WARN 10719[0m CouchDB batch document update encountered an problem. Reason:Document update conflict., Retrying update for document ID:B{code}
Please let me know what the solution is.
Thanks.",,manish-sethi,ymd2020,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01h8b:",,,,Unset,Unset,,I started and stopped Docker and it stopped reproducing.....,,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,ymd2020,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/20 9:52 AM;manish-sethi;[~ymd2020] - This needs more details to understand the situation better. Is this reproducible? Do you have full logs from previous setup? Any additional info will be helpful. If not, can you answer following questions.

1) Though it doesn't appear from the sample code but still, were the value sizes very big (in the range of 64kb)? - there was a bug that was recently fixed related to this (https://github.com/hyperledger/fabric/pull/1909)

2) Was there ever a crash in the couchdb after which you started observing this inconsistency? - there was another bug that was fixed recently related to this (https://jira.hyperledger.org/browse/FABB-151)

3) You mentioned that ""I started and stopped Docker and it stopped reproducing"", did you just restart the containers and the data was still the same in the volume mounted for the couchdb container or you simply set up everything a fresh?;;;","19/Nov/20 3:01 PM;ymd2020;Thank you!

>1)
Indeed, none of the data where the error occurred was just over 64KB. (67-69KB)
I haven't let it reproduce, but given the circumstances, I think this is probably the cause.

>2)
I have not observed.

>3)
I just restarted the container.
{code:java}
docker stop containerid
docker start containerid{code}

After that, it continued to work fine, and it hasn't been reproduced now.

 ;;;","20/Nov/20 12:13 AM;manish-sethi;Thanks [~ymd2020]. I believe that you wanted to say ""some of the data"", in place of ""none of the data"".

Yes, you had certainly hit into the bug that I mentioned in (1) above. The restarting helped because that empltied out the statedb cache maintained by the peer. As I had mentioned previously, this was fixed in v2.2.1 and I would strongly recommend you to move to v2.2.x where this bug was fixed and also v2.2 is our LTS (Long Term Support) release.;;;","20/Nov/20 7:17 AM;manish-sethi;Was fixed in V2.2.1 (https://github.com/hyperledger/fabric/pull/1909);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Future of Raft configuration doc,FAB-18341,46324,,Documentation,Backlog,FAB,Fabric,software,denyeart,,,Medium,,joe-alewine,joe-alewine,joe-alewine,16/Nov/20 10:14 PM,04/Dec/20 4:36 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-docs,,,,0,,,,,,"When the orderer section of the deployment guide is merged, one of the purposes of this doc: https://hyperledger-fabric.readthedocs.io/en/release-2.2/raft_configuration.html

Will be superseded by it. 

This Raft configuration doc does a few things other than talk about initial orderer parameters (which is the limit of the scope of the deployment guide), however. It also talks about:
 * Channel configuration parameters relevant to the ordering service.
 * Adding a new node to an ordering service.
 * Certificate rotation.
 * Hidden parameters.

I would suggest that, long term, the process for adding a node to an ordering service should be its own tutorial, and that likewise rotating certificates is worth of a broader operations guide topic talking about more than just ordering nodes.

The hidden parameters and channel config parameters would seem to belong in a reference topic.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0iw",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/20 10:14 PM;joe-alewine;[~pandrejko];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove references to system channel,FAB-18342,46325,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,joe-alewine,joe-alewine,16/Nov/20 11:14 PM,04/Feb/21 6:55 AM,28/Oct/23 3:09 AM,04/Feb/21 6:55 AM,,,,,,,,,,,,fabric-docs,,,,0,,,,,,"Documentation of the requirement for a system channel exists in the following locations and must be changed to reflect the participation API process:

Key concepts:
 - xMembership membership/membership.md
 - xBlockchain network network/network.html
 - xPolicies policies/policies.md
 - xCapabilities capabilities_concept.md

Arch ref:
 - xDefining capability requirements capability_requirements.rst

Command ref:
 - (not required) Configtxgen commands/configtxgen.md

Tutorials
 - xUpdating a channel configuration config_update.md
 - xCreating a channel create_channel.md (must wait for test network updates)
 - xUsing configtx.yaml to build a channel configuration create_channel_config.md
 - xUsing the Fabric test network test_network.md (must wait for update to samples)
 -

Operations Guides
 - xChannel configuration (configtx) configtx.rst
 - Migrating from Kafka to Raft kafka_raft_migration.md (potentially won't do — remove doc?)
 - xMembership service providers msp.rst
 - xSetting up an ordering node orderer_deploy.md
 - xConfiguring and operating a Raft ordering service raft_configuration.md
 -

Upgrading to the latest release
 - xUpgrading to the latest release upgrade.rst
 - xEnabling the new chaincode lifecycle enable_cc_lifecycle.md
 - xUpdating the capability level of a channel updating_capabilities.md
 - xConsiderations for getting to v2.x upgrade_to_newest_version.md

 

FAQ
 * 
h6. xFabric-FAQ.rst

I would recommend that, in general, we do not refer to the participation as ""new"", but instead just refer to it as ""the process"". That will future proof these changes for when the participation API is not quite so new anymore.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0iqw",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/20 11:14 PM;joe-alewine;[~pandrejko];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Onboarding does not discover channels,FAB-18343,46328,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Invalid: Test Error,,tock,tock,17/Nov/20 5:01 PM,17/Nov/20 8:01 PM,28/Oct/23 3:09 AM,17/Nov/20 8:00 PM,,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"*What*
Onboarding an orderer using the last config block of the system channel. If the system channel has channel creation transactions after the last config block, onboarding will not discover them. 

This affects onboarding with a bootstrap block (BootstrapMethod: file) as well as onboarding with a system channel join block via the channel participation API.

*How*
Creating the system channel with config block with number >0, when there are already channels referenced (created) by it, such that on boarding is needed for both the system channel and additional channels.
 
* Define a 2 node raft network. Generate the genesis block of the system channel.
* Start 3 empty OSNs.
* Join 2 OSNs with a genesis block - OSN1 OSN2. 
* Restart said 2 servers
* create channel A - this one will have only 2 consenters
* configure the system channel to include OSN3 (to make last config block height > 1)
* create channel B - this one will have 3 consenters. Note: system channel now has 4 blocks: genesis, channel generation tx (A), config (add OSN3), channel generation tx (B). Last config block is the 3rd, i.e. block number 2.
* get last config block of system channel and join the 3rd OSN with it.  Note  
* verify onboarding on all channels - OSN3 should have: A inactive/config-tracker, B active/consenter
* verify correct behavior by transacting on all channels.

*Probelm*
The discovery logic missed to discover channels that were created after the last config block:

{quote}
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.935 IST [orderer.common.server] initSystemChannelWithJoinBlock -> INFO 011 Join-block was found for the system channel: systemchannel, number: 2
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.948 IST [orderer.common.server] Main -> INFO 012 Starting with system channel: systemchannel, consensus type: etcdraft
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.949 IST [orderer.common.server] Main -> INFO 013 Setting up cluster
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.949 IST [orderer.common.cluster] loadVerifier -> ERRO 014 Channel systemchannel has no blocks, skipping it
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.951 IST [orderer.common.cluster] replicateNeededChannels -> INFO 015 Will now replicate chains
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.955 IST [orderer.common.cluster.replication] fetchLastBlockSeq -> INFO 016 127.0.0.1:26500 is at block sequence of 3 channel=systemchannel
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.955 IST [orderer.common.cluster.replication] fetchLastBlockSeq -> INFO 017 127.0.0.1:26505 is at block sequence of 3 channel=systemchannel
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.955 IST [orderer.common.cluster.replication] connectToSomeEndpoint -> INFO 018 Connected to 127.0.0.1:26505 with last block seq of 3 channel=systemchannel
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.955 IST [orderer.common.cluster.replication] obtainStream -> INFO 019 Sending request for block [0] to 127.0.0.1:26505 channel=systemchannel
[e][OrdererOrg.orderer1] 2020-11-17 09:25:18.956 IST [comm.grpc.server] 1 -> INFO 0ae streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Deliver grpc.peer_address=127.0.0.1:39592 grpc.peer_subject=""CN=orderer3.example.com,L=San Francisco,ST=California,C=US"" error=""context finished before block retrieved: context canceled"" grpc.code=Unknown grpc.call_duration=1.860405ms
[e][OrdererOrg.orderer2] 2020-11-17 09:25:18.956 IST [comm.grpc.server] 1 -> INFO 09d streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Deliver grpc.peer_address=127.0.0.1:34884 grpc.peer_subject=""CN=orderer3.example.com,L=San Francisco,ST=California,C=US"" error=""context finished before block retrieved: context canceled"" grpc.code=Unknown grpc.call_duration=1.730162ms
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.956 IST [orderer.common.cluster.replication] pullBlocks -> INFO 01a Got block [0] of size 15 KB from 127.0.0.1:26505 channel=systemchannel
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.956 IST [orderer.common.cluster.replication] pullBlocks -> INFO 01b Got block [1] of size 20 KB from 127.0.0.1:26505 channel=systemchannel
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.957 IST [orderer.common.cluster.replication] pullBlocks -> INFO 01c Got block [2] of size 26 KB from 127.0.0.1:26505 channel=systemchannel
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.957 IST [orderer.common.cluster.replication] pullBlocks -> INFO 01d Got block [3] of size 21 KB from 127.0.0.1:26505 channel=systemchannel
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.957 IST [orderer.common.cluster] Channels -> INFO 01e Block 0 doesn't contain a new channel
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.957 IST [orderer.common.cluster] Channels -> INFO 01f Block 1 contains channel testchannel
{color:#DE350B}[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.958 IST [orderer.common.cluster] *discoverChannels -> INFO 020 Discovered 1 channels: [testchannel]*{color}
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.958 IST [orderer.common.cluster] channelsToPull -> INFO 021 Evaluating channels to pull: [testchannel]
[e][OrdererOrg.orderer3] 2020-11-17 09:25:18.958 IST [orderer.common.cluster] channelsToPull -> INFO 022 Probing whether I should pull channel testchannel
{quote}

*Why*
The logic that scans the blocks of the system channel for channel creation (`cluster.ChainInspector`) stops at the config block number, rather than at the last block of the system channel.

https://github.com/hyperledger/fabric/blob/1f6fb0849c6cfb7be9818d40f1e40e35ff5c5a1d/orderer/common/cluster/replication.go#L540

*Impact*
Impact is very low because this behavior can be avoided by adding a consenter to the system channel and then blocking the ability to create channels until it is fully onboard. 

Moreover, as the system channel starts and catches up, the channels are discovered and pulled to the new node.
See: 
https://github.com/tock-ibm/fabric/tree/onboarding-does-not-discover-channels-but-eventually-catchup

",,tock,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ha3:",,,,Unset,Unset,,"This code contained a focused integration test case to demonstrate the problem. Download this branch:

`git@github.com:tock-ibm/fabric.git  onboarding-does-not-discover-channels`

https://github.com/tock-ibm/fabric/tree/onboarding-does-not-discover-channels

`cd integration/raft`
`ginkgo >& test.log &`
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),tock,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/20 6:02 PM;yacovm;{quote}Onboarding an orderer using the last config block of the system channel. If the system channel has channel creation transactions after the last config block, onboarding will not discover them.
{quote}
 

In the past, when raft replication and onboarding was made, you had to add a node to the system channel in order to make it onboard the cluster. So until the node was onboarded, the cluster was in a degraded redundancy mode since you have a replicating node and you increased your quorum size. It was expected that you let the node sync up before you create channels, which happens rarely.

 

In any case:
 # After the node sync up it will get the channel creation blocks and will spin up a chain for each
 # It is impossible to know what is the last channel creation block at the time of replication, since we are in an asynchronous system and you can create channels while replicating, and nodes come and go. What you can be sure of, however, is that the bootstrap block you are given, exists. So that's why this sequence is used for the system channel.;;;","17/Nov/20 7:57 PM;tock;[~yacovm]

You are correct. 

Here is a test to verify that: As the system channel starts and catches up, the channels are discovered and pulled to the new node.
See:
https://github.com/tock-ibm/fabric/tree/onboarding-does-not-discover-channels-but-eventually-catchup

;;;","17/Nov/20 8:00 PM;tock;Works as expected. Had to alter the test to wait for the system channel to spin up and fetch the rest of the blocks, at which point the new channel was detected.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
the connection issue in bringing up the test network,FAB-18344,46330,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Environment Issue,,Suki,Suki,18/Nov/20 4:59 PM,02/Dec/20 6:53 PM,28/Oct/23 3:09 AM,02/Dec/20 6:53 PM,v2.1.1,v2.2.1,,,,,,,,,,,,,,0,help-wanted,,,,,"when I deploy the fabric according to [test network|[https://hyperledger-fabric.readthedocs.io/en/release-2.1/test_network.html],] I encounter the problem in creating channel like this:
{code:java}
[root@node83 test-network]# ./network.sh up createChannel -c test
Creating channel 'test'.
If network is not up, starting nodes with CLI timeout of '5' tries and CLI delay of '3' seconds and using database 'leveldb with crypto from 'cryptogen'
Bringing up networkLOCAL_VERSION=2.1.1
DOCKER_IMAGE_VERSION=2.1.1
/root/jjx-hyperledger/bin/cryptogen
Generate certificates using cryptogen tool
Create Org1 Identities
+ cryptogen generate --config=./organizations/cryptogen/crypto-config-org1.yaml --output=organizations
org1.example.com
+ res=0
Create Org2 Identities
+ cryptogen generate --config=./organizations/cryptogen/crypto-config-org2.yaml --output=organizations
org2.example.com
+ res=0
Create Orderer Org Identities
+ cryptogen generate --config=./organizations/cryptogen/crypto-config-orderer.yaml --output=organizations
+ res=0
Generate CCP files for Org1 and Org2
/root/jjx-hyperledger/bin/configtxgen
Generating Orderer Genesis block
+ configtxgen -profile TwoOrgsOrdererGenesis -channelID system-channel -outputBlock ./system-genesis-block/genesis.block
2020-11-18 15:13:17.732 CST [common.tools.configtxgen] main -> INFO 001 Loading configuration
2020-11-18 15:13:17.792 CST [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002 orderer type: etcdraft
2020-11-18 15:13:17.792 CST [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003 Orderer.EtcdRaft.Options unset, setting to tick_interval:""500ms"" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216
2020-11-18 15:13:17.792 CST [common.tools.configtxgen.localconfig] Load -> INFO 004 Loaded configuration: /root/jjx-hyperledger/fabric-samples/test-network/configtx/configtx.yaml
2020-11-18 15:13:17.797 CST [common.tools.configtxgen] doOutputBlock -> INFO 005 Generating genesis block
2020-11-18 15:13:17.799 CST [common.tools.configtxgen] doOutputBlock -> INFO 006 Writing genesis block
+ res=0
Creating network ""net_test"" with the default driver
Creating volume ""net_orderer.example.com"" with default driver
Creating volume ""net_peer0.org1.example.com"" with default driver
Creating volume ""net_peer0.org2.example.com"" with default driver
Creating peer0.org1.example.com ... done
Creating orderer.example.com    ... done
Creating peer0.org2.example.com ... done
CONTAINER ID        IMAGE                              COMMAND             CREATED             STATUS                  PORTS                              NAMES
09d1eb085313        hyperledger/fabric-peer:2.1.1      ""peer node start""   6 seconds ago       Up Less than a second   7051/tcp, 0.0.0.0:9051->9051/tcp   peer0.org2.example.com
9598ff64e761        hyperledger/fabric-orderer:2.1.1   ""orderer""           6 seconds ago       Up Less than a second   0.0.0.0:7050->7050/tcp             orderer.example.com
407b5c87574f        hyperledger/fabric-peer:2.1.1      ""peer node start""   6 seconds ago       Up Less than a second   0.0.0.0:7051->7051/tcp             peer0.org1.example.com
Generating channel create transaction 'test.tx'
+ configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/test.tx -channelID test
2020-11-18 15:13:25.881 CST [common.tools.configtxgen] main -> INFO 001 Loading configuration
2020-11-18 15:13:25.933 CST [common.tools.configtxgen.localconfig] Load -> INFO 002 Loaded configuration: /root/jjx-hyperledger/fabric-samples/test-network/configtx/configtx.yaml
2020-11-18 15:13:25.933 CST [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 003 Generating new channel configtx
2020-11-18 15:13:25.938 CST [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 004 Writing new channel tx
+ res=0
Generating anchor peer update transactions
Generating anchor peer update transaction for Org1MSP
+ configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org1MSPanchors.tx -channelID test -asOrg Org1MSP
2020-11-18 15:13:25.985 CST [common.tools.configtxgen] main -> INFO 001 Loading configuration
2020-11-18 15:13:26.037 CST [common.tools.configtxgen.localconfig] Load -> INFO 002 Loaded configuration: /root/jjx-hyperledger/fabric-samples/test-network/configtx/configtx.yaml
2020-11-18 15:13:26.037 CST [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Generating anchor peer update
2020-11-18 15:13:26.042 CST [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004 Writing anchor peer update
+ res=0
Generating anchor peer update transaction for Org2MSP
+ configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org2MSPanchors.tx -channelID test -asOrg Org2MSP
2020-11-18 15:13:26.092 CST [common.tools.configtxgen] main -> INFO 001 Loading configuration
2020-11-18 15:13:26.142 CST [common.tools.configtxgen.localconfig] Load -> INFO 002 Loaded configuration: /root/jjx-hyperledger/fabric-samples/test-network/configtx/configtx.yaml
2020-11-18 15:13:26.142 CST [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Generating anchor peer update
2020-11-18 15:13:26.145 CST [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004 Writing anchor peer update
+ res=0
Creating channel test
Using organization 1
+ peer channel create -o localhost:7050 -c test --ordererTLSHostnameOverride orderer.example.com -f ./channel-artifacts/test.tx --outputBlock ./channel-artifacts/test.block --tls --cafile /root/jjx-hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
+ res=1
+ peer channel create -o localhost:7050 -c test --ordererTLSHostnameOverride orderer.example.com -f ./channel-artifacts/test.tx --outputBlock ./channel-artifacts/test.block --tls --cafile /root/jjx-hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
+ res=1
+ peer channel create -o localhost:7050 -c test --ordererTLSHostnameOverride orderer.example.com -f ./channel-artifacts/test.tx --outputBlock ./channel-artifacts/test.block --tls --cafile /root/jjx-hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
+ res=1
+ peer channel create -o localhost:7050 -c test --ordererTLSHostnameOverride orderer.example.com -f ./channel-artifacts/test.tx --outputBlock ./channel-artifacts/test.block --tls --cafile /root/jjx-hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
+ res=1
Error: failed to create deliver client for orderer: orderer client failed to connect to localhost:7050: failed to create new connection: context deadline exceeded
Channel creation failed
Create channel failed
{code}
environment:

centos 7.2

docker: 19.03

docker-compose: 1.23.2

fabric: 2.1.1/2.2.1

 Others also met this problem, however there isn't a solution. So I really wanna find out why it is？ Thanks.",,Suki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01haj:",,,,Unset,Unset,,"(Please add steps to reproduce)
just follow this: https://hyperledger-fabric.readthedocs.io/en/release-2.1/test_network.html",,Unset,,,,,,Unset,,Unset,,(Please add usage information),Suki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persist chaincode build logs,FAB-18345,41878,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,nkl199,nkl199,19/Aug/19 11:23 PM,18/Nov/20 5:51 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,cc-triaged,,,,,"When chaincode is built, all the logging information relating to the chaincode build is lost when the ""building container"" is thrown away.

 

This information is actually quite useful and it would be really neat if it was possible to persist the build log in the chaincode container that is created so that it is possible to verify all build processes*.*",,calanais,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00xg3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/20 5:51 PM;calanais;This can't be done within the context of the chaincode _per see_ it would need to be done within the system that kicks of the builds. 

Good news is in K8S deployments, this will be stored in the logs of the containers - so the information is present. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""make docker"" is failing with Fabric 1.4.9",FAB-18346,46332,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,type4ranjan,type4ranjan,18/Nov/20 11:08 PM,03/Dec/20 10:36 PM,28/Oct/23 3:09 AM,30/Nov/20 5:59 AM,,,,,,,,,,,,fabric-build,,,,0,,,,,,"While running *make docker* it is failing while building go tools and following error is displayed:
{code:java}
Building github.com/estesp/manifest-tool -> manifest-tool
package github.com/estesp/manifest-tool: no Go files in /opt/gotools/obj/src/github.com/estesp/manifest-tool
gotools.mk:59: recipe for target 'gotool.manifest-tool' failed
make[1]: Leaving directory '/opt/gopath/src/github.com/hyperledger/fabric'
make[1]: *** [gotool.manifest-tool] Error 1
gotools.mk:64: recipe for target '/opt/gotools/bin/manifest-tool' failed
make: *** [/opt/gotools/bin/manifest-tool] Error 2
make: *** [.build/docker/gotools] Error 2{code}
Host OS: RHEL 7.9

go version on host: go1.12.17 linux/amd64

docker version:19.03.13

Please find attached for detailed log.",,btl5037,type4ranjan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/20 11:08 PM;type4ranjan;Fabric_error_log.txt;https://jira.hyperledger.org/secure/attachment/18846/Fabric_error_log.txt",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01haz:",,,,Unset,Unset,,"1.git clone https://gerrit.hyperledger.org/fabric -v --progress  --branch v1.4.9 --single-branch
2.cd fabric
3.make docker",,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,type4ranjan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/20 11:10 AM;btl5037;This was fixed in the release-1.4 branch, unfortunately its not something that can be fixed in an already cut release. The location of manifest-tool changed. We do however no longer use the manifest tool, so you can simply remove it's references in `gotool.mk` like I did here: https://github.com/hyperledger/fabric/commit/2dbf8d683213b20d67c24b97f32c9496c3439711#diff-f1801680e04e8da6310d52c5825bc0dab677eb795822b246e1f53b8fd6ed8fcdL6;;;","30/Nov/20 5:59 AM;btl5037;Fixed in future 1.4.10;;;","03/Dec/20 10:36 PM;type4ranjan;Thanks.It is working with release-1.4 branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a check and raise error if statedb is ahead of blockchain,FAB-18347,46333,,Task,Backlog,FAB,Fabric,software,denyeart,,,Low,,,manish-sethi,manish-sethi,19/Nov/20 12:02 AM,11/Jan/21 3:27 PM,28/Oct/23 3:09 AM,,,,,,,,v1.4.10,v2.x,,,,fabric-ledger,,,,0,,,,,,See FAB-17823 - Note that this FAB relates to v1.4.2.,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxql",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Peer lifecycle chaincode package doesn't respect .npmignore,FAB-18348,46338,,Story,Backlog,FAB,Fabric,software,denyeart,,,Low,,,MilesConn,MilesConn,23/Nov/20 1:50 AM,13/Dec/20 9:29 PM,28/Oct/23 3:09 AM,,v2.1.0,,,,,,,,,,,fabric-cli,,,,0,improvement,,,,,"Expected behavior is that it follows the behavior of npm pack ie:

{code}
tar tvf $(npm pack)
npm notice
npm notice �  foo@0.0.1
npm notice === Tarball Contents ===
npm notice 1.9kB lib/foo-contract.js
npm notice 205B  index.js
npm notice 994B  package.json
npm notice 1.4kB readme.md
npm notice 1.0kB transaction_data/foo-transactions.txdata
npm notice === Tarball Details ===
npm notice name:          Foo
npm notice version:       0.0.1
npm notice filename:      foo-0.0.1.tgz
npm notice package size:  2.0 kB
npm notice unpacked size: 5.5 kB
...
npm notice total files:   5
npm notice
-rw-rw-r-- 0/0            1886 1985-10-26 08:15 package/lib/fo-contract.js
-rw-rw-r-- 0/0             205 1985-10-26 08:15 package/index.js
-rw-rw-r-- 0/0             994 1985-10-26 08:15 package/package.json
-rw-rw-r-- 0/0            1400 1985-10-26 08:15 package/readme.md
-rw-rw-r-- 0/0            1032 1985-10-26 08:15 package/transaction_data/foo-transactions.txdata
{code}

Actual behavior after packaging into a tar file:

{code}
tar tvf code.tar.gz
-rw-r--r-- 500/500         231 1970-01-01 00:00 src/.editorconfig
-rw-r--r-- 500/500          52 1970-01-01 00:00 src/.eslintignore
-rw-r--r-- 500/500         899 1970-01-01 00:00 src/.eslintrc.js
-rw-r--r-- 500/500        1148 1970-01-01 00:00 src/.gitignore
-rw-r--r-- 500/500         265 1970-01-01 00:00 src/.npmignore
-rw-r--r-- 500/500        4938 1970-01-01 00:00 src/.nyc_output/a19e2585-56e1-475d-a0b8-17c7be4ae859.json
-rw-r--r-- 500/500        5304 1970-01-01 00:00 src/.nyc_output/b61252b3-08b1-4c65-af60-909072c5df69.json
-rw-r--r-- 500/500         591 1970-01-01 00:00 src/.nyc_output/processinfo/a19e2585-56e1-475d-a0b8-17c7be4ae859.json
-rw-r--r-- 500/500         585 1970-01-01 00:00 src/.nyc_output/processinfo/b61252b3-08b1-4c65-af60-909072c5df69.json
-rw-r--r-- 500/500         462 1970-01-01 00:00 src/.nyc_output/processinfo/index.json
-rw-r--r-- 500/500          83 1970-01-01 00:00 src/.vscode/extensions.json
-rw-r--r-- 500/500         390 1970-01-01 00:00 src/.vscode/launch.json
-rw-r--r-- 500/500        4237 1970-01-01 00:00 src/coverage/foo/index.html
-rw-r--r-- 500/500        4026 1970-01-01 00:00 src/coverage/foo/index.js.html
-rw-r--r-- 500/500       10300 1970-01-01 00:00 src/coverage/foo/lib/foo-contract.js.html
-rw-r--r-- 500/500        4308 1970-01-01 00:00 src/coverage/foo/lib/index.html
-rw-r--r-- 500/500        5394 1970-01-01 00:00 src/coverage/base.css
-rw-r--r-- 500/500        2387 1970-01-01 00:00 src/coverage/block-navigation.js
-rw-r--r-- 500/500         540 1970-01-01 00:00 src/coverage/favicon.png
-rw-r--r-- 500/500        4867 1970-01-01 00:00 src/coverage/index.html
-rw-r--r-- 500/500         676 1970-01-01 00:00 src/coverage/prettify.css
-rw-r--r-- 500/500       17590 1970-01-01 00:00 src/coverage/prettify.js
-rw-r--r-- 500/500         209 1970-01-01 00:00 src/coverage/sort-arrow-sprite.png
-rw-r--r-- 500/500        5278 1970-01-01 00:00 src/coverage/sorter.js
-rw-r--r-- 500/500         205 1970-01-01 00:00 src/index.js
-rw-r--r-- 500/500        1886 1970-01-01 00:00 src/lib/foo-contract.js
-rw-r--r-- 500/500      201114 1970-01-01 00:00 src/package-lock.json
-rw-r--r-- 500/500         994 1970-01-01 00:00 src/package.json
-rw-r--r-- 500/500        1400 1970-01-01 00:00 src/readme.md
-rw-r--r-- 500/500        3422 1970-01-01 00:00 src/test/foo-contract.js
-rw-r--r-- 500/500        1032 1970-01-01 00:00 src/transaction_data/foo-transactions.txdata
{code}


",,mastersingh24,MilesConn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hcb:",,,,No,Unset,,"1. Package a file using `peer lifecycle chaincode package` 
2. Inspect and untar the `code.tar.gz` in the file",1.0,No,,,,,,Unset,,Unset,,(Please add usage information),mastersingh24,MilesConn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/20 1:51 AM;MilesConn;Sorry this is my first comment on the hyperledger fabric project. I hope that it meets your standards. If not I'd be happy to read your style guidelines and update it :);;;","13/Dec/20 9:25 PM;mastersingh24;[~MilesConn] - sorry for the delay looking at this.    This writeup is fine.  I don't think this is a bug per se as the `package` as we've never actually honored `.npmignore`.  

I've changed this to story as this would be an improvement.

In the interim, the best bet would be to run `npm pack`, extract the created tarball and then use that is the content for the `package` command;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
It seems 2.3 binary fails with 2.2 image for test-network,FAB-18350,46343,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Environment Issue,,SamYuan1990,SamYuan1990,25/Nov/20 1:01 AM,26/Nov/20 1:02 AM,28/Oct/23 3:09 AM,25/Nov/20 2:37 PM,,,,,,,,,,,,,,,,0,,,,,,"Hi,

I have a ci using test-network under fabric sample.
recently I noticed that CI were failed.
So I try to work it out.

I had reproduced in PR here:
https://github.com/hyperledger/fabric-samples/pull/379

as in CI job of azp,
https://dev.azure.com/Hyperledger/Fabric-Samples/_build/results?buildId=25956&view=logs&j=da384fcf-90d4-5b80-43e1-e99336f28a8e&t=b9765d42-0282-54df-8521-24ae18744699&l=99

when test-network going to create channel with mychannel block with 2.3 binary to 2.2 image. the error happens.

+ peer channel create -o localhost:7050 -c mychannel --ordererTLSHostnameOverride orderer.example.com -f ./channel-artifacts/mychannel.tx --outputBlock ./channel-artifacts/mychannel.block --tls --cafile /home/vsts/work/1/s/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

please advise and help

thanks and regards
Sam",,denyeart,SamYuan1990,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hcz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,SamYuan1990,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Nov/20 2:37 PM;denyeart;I am able to use 2.3 binary with {{./network.sh up createChannel -i 2.2}} successfully. It looks like the connection to your orderer failed... maybe see if your orderer didn't start for some reason.;;;","26/Nov/20 1:02 AM;denyeart;Actually, a new commit to fabric-samples did break the config, causing orderer to not start. I've opened a PR to revert it: [https://github.com/hyperledger/fabric-samples/pull/380] ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer Admin Non-TLS support,FAB-18351,46352,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Environment Issue,tock,davidkhala,davidkhala,26/Nov/20 5:00 PM,26/Nov/20 6:13 PM,28/Oct/23 3:09 AM,26/Nov/20 6:13 PM,v2.3.0,,,,,,,,,,,fabric-orderer,,,,0,tls,,,,,"Now even we disable Admin TLS and clientAuth,
- Admin.TLS.Enabled = false
- Admin.TLS.ClientAuthRequired = false

We will still see 
```
[2020-11-26T16:36:54.914] [ERROR] channel setup - { Error: write EPROTO 140384499328832:error:14094412:SSL routines:ssl3_read_bytes:sslv3 alert bad certificate:../ssl/record/rec_layer_s3.c:1543:SSL alert number 42

```",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i01hej:",,,,Unset,Unset,,"```
       General.ListenAddress = ""0.0.0.0""
        General.ListenPort = 7050
        General.TLS.Enabled = true
        General.TLS.PrivateKey = ""/etc/hyperledger/crypto-config/ordererOrganizations/hyperledger/orderers/orderer0.hyperledger/tls/server.key""
        General.TLS.Certificate = ""/etc/hyperledger/crypto-config/ordererOrganizations/hyperledger/orderers/orderer0.hyperledger/tls/server.crt""
        General.TLS.RootCAs = [/etc/hyperledger/crypto-config/ordererOrganizations/hyperledger/orderers/orderer0.hyperledger/tls/ca.crt]
        General.TLS.ClientAuthRequired = false
        General.TLS.ClientRootCAs = []
        General.TLS.TLSHandshakeTimeShift = 0s
        General.Cluster.ListenAddress = """"
        General.Cluster.ListenPort = 0
        General.Cluster.ServerCertificate = """"
        General.Cluster.ServerPrivateKey = """"
        General.Cluster.ClientCertificate = ""/etc/hyperledger/crypto-config/ordererOrganizations/hyperledger/orderers/orderer0.hyperledger/tls/server.crt""
        General.Cluster.ClientPrivateKey = ""/etc/hyperledger/crypto-config/ordererOrganizations/hyperledger/orderers/orderer0.hyperledger/tls/server.key""
        General.Cluster.RootCAs = []
        General.Cluster.DialTimeout = 5s
        General.Cluster.RPCTimeout = 7s
        General.Cluster.ReplicationBufferSize = 20971520
        General.Cluster.ReplicationPullTimeout = 5s
        General.Cluster.ReplicationRetryTimeout = 5s
        General.Cluster.ReplicationBackgroundRefreshInterval = 5m0s
        General.Cluster.ReplicationMaxRetries = 12
        General.Cluster.SendBufferSize = 10
        General.Cluster.CertExpirationWarningThreshold = 168h0m0s
        General.Cluster.TLSHandshakeTimeShift = 0s
        General.Keepalive.ServerMinInterval = 1m0s
        General.Keepalive.ServerInterval = 2h0m0s
        General.Keepalive.ServerTimeout = 20s
        General.ConnectionTimeout = 0s
        General.GenesisMethod = """"
        General.GenesisFile = """"
        General.BootstrapMethod = ""none""
        General.BootstrapFile = ""/etc/hyperledger/fabric/genesisblock""
        General.Profile.Enabled = false
        General.Profile.Address = ""0.0.0.0:6060""
        General.LocalMSPDir = ""/etc/hyperledger/crypto-config/ordererOrganizations/hyperledger/orderers/orderer0.hyperledger/msp""
        General.LocalMSPID = ""hyperledgerMSP""
        General.BCCSP.Default = ""SW""
        General.BCCSP.SW.Security = 256
        General.BCCSP.SW.Hash = ""SHA2""
        General.BCCSP.SW.FileKeystore.KeyStorePath = """"
        General.Authentication.TimeWindow = 15m0s
        General.Authentication.NoExpirationChecks = false
        FileLedger.Location = ""/var/hyperledger/production/orderer""
        FileLedger.Prefix = """"
        Debug.BroadcastTraceDir = """"
        Debug.DeliverTraceDir = """"
        Consensus = map[SnapDir:/var/hyperledger/production/orderer/etcdraft/snapshot WALDir:/var/hyperledger/production/orderer/etcdraft/wal]
        Operations.ListenAddress = ""0.0.0.0:8443""
        Operations.TLS.Enabled = true
        Operations.TLS.PrivateKey = ""/etc/hyperledger/crypto-config/ordererOrganizations/hyperledger/orderers/orderer0.hyperledger/tls/server.key""
        Operations.TLS.Certificate = ""/etc/hyperledger/crypto-config/ordererOrganizations/hyperledger/orderers/orderer0.hyperledger/tls/server.crt""
        Operations.TLS.RootCAs = []
        Operations.TLS.ClientAuthRequired = false
        Operations.TLS.ClientRootCAs = [/etc/hyperledger/crypto-config/ordererOrganizations/hyperledger/orderers/orderer0.hyperledger/tls/ca.crt]
        Operations.TLS.TLSHandshakeTimeShift = 0s
        Metrics.Provider = ""disabled""
        Metrics.Statsd.Network = ""udp""
        Metrics.Statsd.Address = ""127.0.0.1:8125""
        Metrics.Statsd.WriteInterval = 30s
        Metrics.Statsd.Prefix = """"
        ChannelParticipation.Enabled = true
        ChannelParticipation.MaxRequestBodySize = 1048576
        Admin.ListenAddress = ""0.0.0.0:9443""
        Admin.TLS.Enabled = false
        Admin.TLS.PrivateKey = """"
        Admin.TLS.Certificate = """"
        Admin.TLS.RootCAs = []
        Admin.TLS.ClientAuthRequired = false
        Admin.TLS.ClientRootCAs = []
        Admin.TLS.TLSHandshakeTimeShift = 0s
```",,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Nov/20 6:13 PM;davidkhala;Closed, it is my environment issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create Integration tests for cryptogen,FAB-18352,46356,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,Pancham,Pancham,Pancham,27/Nov/20 11:34 AM,30/Nov/20 3:15 AM,28/Oct/23 3:09 AM,30/Nov/20 3:15 AM,,,,,,,,,,,,fabric-tools,,,,0,,,,,,"At present, there are no integration tests for cryptogen. Write integration tests for cryptogen tool to ensure that it works as expected, is maintainable and does not regress. ",,Pancham,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hez:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Pancham,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create Integration tests for cryptogen,FAB-18353,46357,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,Pancham,Pancham,Pancham,27/Nov/20 11:36 AM,27/Nov/20 11:36 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-tools,,,,0,,,,,,"At present, there are no integration tests for cryptogen. Write integration tests for cryptogen tool to ensure that it works as expected, is maintainable and does not regress. ",,Pancham,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hf7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Pancham,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Could not start fabric-orderer via docker ,FAB-18354,46358,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,CovenantObserver,CovenantObserver,27/Nov/20 11:36 AM,27/Nov/20 12:08 PM,28/Oct/23 3:09 AM,27/Nov/20 12:08 PM,,,,,,,,,,,,,,,,0,,,,,,"Hello, I could not start fabric-orderer via docker .

the docker-compose file

 
{code:java}
// code placeholder
networks:
    fabric-ca:
        external: 
            name: fabric-ca
services:
  orderer1-org0:
    container_name: orderer1-org0
    image: hyperledger/fabric-orderer:2.2.1
    environment:
      - ORDERER_HOST=orderer1-org0
      - ORDERER_GENERAL_PROFILE_ENABLED=false
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=org0MSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/org0/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/org0/orderer/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/org0/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/org0/orderer/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/org0/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/org0/orderer/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/etc/hyperledger/org0/orderer/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem]
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_DEBUG_BROADCASTTRACEDIR=data/logs
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer    
    volumes:
      - /opt/hyperledger/org0/orderer:/etc/hyperledger/org0/orderer/
      - /opt/hyperledger/configtx/system-genesis-block/genesis.block:/etc/hyperledger/orderer/orderer.genesis.block
    networks:
      - fabric-ca

{code}
when I use it to start docker. the error code is.

 
{code:java}
failed to parse config:  Error reading configuration: Unsupported Config Type """"
{code}
but when I add this line to the environment.
{code:java}
 - FABRIC_CFG_PATH=/etc/hyperledger/org0/orderer
{code}
and add a orderer.yaml to the  /opt/hyperledger/org0/orderer floder

the errorcode is 
{code:java}
* '' has invalid keys: admin
{code}
and when I remove the 
{code:java}
Admin:
    # host and port for the admin server
    ListenAddress: 127.0.0.1:9443    # TLS configuration for the admin endpoint
    TLS:
        # TLS enabled
        Enabled: false        # Certificate is the location of the PEM encoded TLS certificate
        Certificate:        # PrivateKey points to the location of the PEM-encoded key
        PrivateKey:        # Most admin service endpoints require client authentication when TLS
        # is enabled. ClientAuthRequired requires client certificate authentication
        # at the TLS layer to access all resources.
        #
        # NOTE: When TLS is enabled, the admin endpoint requires mutual TLS. The
        # orderer will panic on startup if this value is set to false.
        ClientAuthRequired: true        # Paths to PEM encoded ca certificates to trust for client authentication
        ClientRootCAs: []
{code}
block from orderer.yaml 

the error code is 
{code:java}
panic: Failed validating bootstrap block: initializing channelconfig failed: could not create channel Consortiums sub-group config: setting up the MSP manager failed: administrators must be declared when no admin ou classification is set
{code}
so, is there a right way to start a fabric-orderer docker ?

Thanks a lot.",,CovenantObserver,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,,,No,,Unset,No,,,"1|i01hff:",,,,No,Unset,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),CovenantObserver,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Composite Key Problems for range queries and CouchDB Web GUI,FAB-18355,46364,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,fedorpetrov,fedorpetrov,01/Dec/20 1:58 AM,11/Jan/21 5:50 PM,28/Oct/23 3:09 AM,11/Jan/21 3:53 PM,,,,,,,,,,,,,,,,0,,,,,,"I'm developing chaincode for Hyperledger Fabric 2.2.

In my Node.js chaincode code I create a composite key as follows:

{{_let key = ctx.stub.createCompositeKey(vendor,[""entry"", coilID, posMarkierung, elem[""Time""]]);_}}

Afterwards, I put the data in a private data collection
 {{_await ctx.stub.putPrivateData(collection, key, Buffer.from(JSON.stringify(....)));_}}
 *Problem #1*

According to the documentation to access all the data with ranged queries one has to specify empty strings for startKey and endKey. Specifying empty strings for entries with composite keys ignores these entries. In my case the whole private collection is made with composite keys and the following query delivers empty iterator:

{{_let privateDataIterator = await ctx.stub.getPrivateDataByRange(collection, """", """");_}}

_To avoid this one has to assign startKey=""\u0000""._

*Problem #2*

CouchDB data in Web GUI looks like the following: 

!CompositeKeyEntries.PNG!

This is already a possible hint why ranged queries do not work according to the present documentation. When I click this or similar entry to see the contents, I get the following error:

!CompositeKeyEntries2.PNG!

Entries with keys made of ""normal"", not u0000 readable characters can be accessed. 

To reproduce the bug:
 * create composite key with {{_ctx.stub.createCompositeKey_}}
 * put private state with the created key using {{_ctx.stub.putPrivateData_}}
 * try to query it with {{ctx.stub.{{_getPrivateDataByRange_}}}}
 * try to access this entry via CouchDB GUI

Expected behaviour:
 * documentation should say that instead of """" ""\u0000"" should be used for composite keys
 * CouchDB GUI should be able to access the data with composite keys",,denyeart,fedorpetrov,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11281,,,,,,,,,,,,"01/Dec/20 1:57 AM;fedorpetrov;CompositeKeyEntries.PNG;https://jira.hyperledger.org/secure/attachment/18853/CompositeKeyEntries.PNG","01/Dec/20 2:00 AM;fedorpetrov;CompositeKeyEntries2.PNG;https://jira.hyperledger.org/secure/attachment/18854/CompositeKeyEntries2.PNG",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hgj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,fedorpetrov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/21 3:53 PM;denyeart;Range queries and composite key queries cannot be mixed.

There is a work item proposed to add such support:

FAB-11281;;;","11/Jan/21 5:50 PM;fedorpetrov;I agree to close this issue, since there is some work already going on in this direction, but it doesn't seem to be correct, that composit keys and range queries cannot be mixed. Actually, they can and it works, and as mentioned in my issue description if one uses ""\u0000"" instead of """" for start key one gets what he needs. But this behaviour is not documented.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generate certificates for peer CLI tests instead of using cert fixtures,FAB-18357,46365,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,wlahti,wlahti,01/Dec/20 5:48 AM,05/Jan/21 5:00 AM,28/Oct/23 3:09 AM,05/Jan/21 4:59 AM,,,,,,,v2.3.1,,,,,fabric-peer,,,,0,,,,,,"For example, this test in internal/peer/common uses certs that were generated and checked in to the testdata folder: https://github.com/hyperledger/fabric/blob/master/internal/peer/common/peerclient_test.go#L177-L178

We should instead use `tlsgen` ([here|https://github.com/hyperledger/fabric/blob/master/common/crypto/tlsgen/ca.go]) to generate the certs/keys and write them to a temp folder.

The goal of this task is to have the same test coverage while removing the testdata/certs folder. ",,tsharris,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18339,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hgr:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tsharris,wlahti,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jan/21 4:42 AM;tsharris;https://github.com/hyperledger/fabric/pull/2238;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change the hardcoded ComputeSHA256 to hash function in the bccsp config.,FAB-18358,46366,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,myeongkil,myeongkil,01/Dec/20 5:26 PM,01/Dec/20 5:33 PM,28/Oct/23 3:09 AM,,v2.x,,,,,,,,,,,fabric-crypto,,,,1,,,,,,"I checked the parts that are hardcoded, SHA256 hash function. 
{code:java}
// github.com/hyperledger/fabric 
// master & release-2.2, 2020.12.01
// core/ledger/util/util.go

func ComputeHash(input []byte) []byte {
    return util.ComputeSHA256(input)
} 
{code}
It seems to have occurred in the process of solving the  -FAB-887-  / FAB-2354 issues.

this does not link the input config of bccsp in github.com/hyperledger/fabric/common/util.

so I think designing the hash function to work according to the input bccsp config will be easier to add or change a new hash function in the future, and it is more suitable for a modular architecture.

 

-> default : SHA256

-> using `util.ComputeCryptoHash(input)`",,myeongkil,Specia1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2354,FAB-887,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hgz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),myeongkil,Specia1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic onboarding of Org in Raft Consensus,FAB-18359,43095,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Highest,,,santmukh,santmukh,04/Nov/19 9:20 PM,02/Dec/20 12:50 AM,28/Oct/23 3:09 AM,,,,,,,,v1.4.2,v2.0.0,,,,,,,,0,external,sdk-triaged,,,,"We are trying to create dynamic node addition(hot deploy) using RAFT consensus. We are using Fabric 2.0. We are facing error. The details are described in [https://lists.hyperledger.org/g/fabric/topic/regarding_fabric_raft/39336213?p=,,,20,0,0,0::recentpostdate/sticky,,,20,2,0,39336213]",,heatherp,santmukh,wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqs:xw",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,santmukh,wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Nov/19 10:45 PM;heatherp;Hi [~santmukh] - I lead a team of node sdk maintainers, who is ""we"" in this context?
And what version of the node sdk are you using? I've read that you are using Fabric 2.0;;;","10/Nov/19 10:52 AM;santmukh;Hi Team, we (Service Company) are member of LF and also work to create solutions on Fabric for clients. To answer your query, we are using node sdk 8.

 

Let me know if you are having any more query.;;;","12/Nov/19 11:03 PM;heatherp;Hi [~santmukh] I understand you're using node 8, but you've raised this issue against the Fabric SDK Node, so which of fabric-network and fabric-client are you using? 1.4.4 ?;;;","13/Nov/19 1:54 PM;santmukh;1.4.3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer connection is unstable after certificate reenroll,FAB-18360,46369,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,lmars,lmars,02/Dec/20 5:24 PM,03/Jun/21 7:35 PM,28/Oct/23 3:09 AM,,v1.4.2,,,,,,,,,,,,,,,2,,,,,,"Peer connection is unstable after peer certificate reenroll.

If I understand correctly, the peer changes the pki-id after reenroll the certificate.

Before:
{code}
2020-02-25 19:13:08.103 UTC [gossip.gossip] NewGossipService -> INFO 028 Creating gossip service with self membership of Endpoint: 172.16.13.2:7051, InternalEndpoint: peer:7051, PKI-ID: 0f8f24c0ca4096ddb8922200bb8c5b69ec71bbe21ca0dbb320243d18bee03a28, Metadata: 
{code}

After:
{code}
2020-11-21 22:27:51.111 UTC [gossip.gossip] NewGossipService -> INFO 030 Creating gossip service with self membership of Endpoint: 172.16.13.2:7051, InternalEndpoint: 172.16.13.2:7051, PKI-ID: 2bfe8770b2cd2b42cf5ba211d102a4ef4b8a9dc6e0dddfbf44ad6205c97dc7d1, Metadata:
{code}

But other peers don't forget the old pki-id and this leads to problems:
{code}
2020-11-25 17:54:24.267 UTC [gossip.comm] func1 -> WARN 92e7d 172.16.13.2:7051, PKIid:2bfe8770b2cd2b42cf5ba211d102a4ef4b8a9dc6e0dddfbf44ad6205c97dc7d1 isn't responsive: EOF
2020-11-25 17:54:24.413 UTC [gossip.comm] func1 -> WARN 92e7e 172.16.13.2:7051, PKIid:0f8f24c0ca4096ddb8922200bb8c5b69ec71bbe21ca0dbb320243d18bee03a28 isn't responsive: EOF
{code}

Sometimes a peer with a new certificate gets completely isolated (because all connections are droped??)
{code}
2020-11-23 20:51:34.953 UTC [gossip.discovery] getDeadMembers -> WARN 1b220 Haven't heard from [146 41 71 175 123 191 155 0 15 188 113 74 213 73 183 211 105 142 75 102 113 34 237 169 121 143 66 64 132 137 242 113] for 33.4397331s
2020-11-23 20:51:34.953 UTC [gossip.discovery] getDeadMembers -> WARN 1b221 Haven't heard from [186 97 170 200 31 57 62 54 29 100 131 44 252 157 29 132 181 239 82 74 57 132 3 175 66 26 177 212 96 185 1 163] for 33.2619925s
2020-11-23 20:51:34.953 UTC [gossip.discovery] getDeadMembers -> WARN 1b222 Haven't heard from [221 20 65 5 216 134 55 194 171 4 234 215 28 207 184 250 60 194 145 81 13 186 195 230 37 186 46 153 226 7 135 125] for 38.8349949s
2020-11-23 20:51:34.954 UTC [gossip.discovery] getDeadMembers -> WARN 1b223 Haven't heard from [130 176 95 1 134 199 156 102 84 92 59 133 187 61 230 156 173 192 20 116 114 230 182 185 175 197 57 202 97 233 250 75] for 33.2500996s
2020-11-23 20:51:34.954 UTC [gossip.discovery] getDeadMembers -> WARN 1b224 Haven't heard from [81 178 245 35 135 18 204 222 107 217 30 9 188 27 116 160 132 51 150 144 91 5 46 28 70 199 34 17 254 67 171 36] for 33.1041457s
2020-11-23 20:51:34.954 UTC [gossip.discovery] expireDeadMembers -> WARN 1b225 Entering [922947af7bbf9b000fbc714ad549b7d3698e4b667122eda9798f42408489f271 ba61aac81f393e361d64832cfc9d1d84b5ef524a398403af421ab1d460b901a3 dd144105d88637c2ab04ead71ccfb8fa3cc291510dbac3e625ba2e99e207877d 82b05f0186c79c66545c3b85bb3de69cadc0147472e6b6b9afc539ca61e9fa4b 51b2f5238712ccde6bd91e09bc1b74a0843396905b052e1c46c72211fe43ab24]
2020-11-23 20:51:34.954 UTC [gossip.discovery] expireDeadMembers -> WARN 1b226 Closing connection to Endpoint: 172.16.11.3:7051, InternalEndpoint: , PKI-ID: 922947af7bbf9b000fbc714ad549b7d3698e4b667122eda9798f42408489f271, Metadata: 
2020-11-23 20:51:34.954 UTC [gossip.discovery] expireDeadMembers -> WARN 1b227 Closing connection to Endpoint: 172.16.18.2:7051, InternalEndpoint: , PKI-ID: ba61aac81f393e361d64832cfc9d1d84b5ef524a398403af421ab1d460b901a3, Metadata: 
2020-11-23 20:52:09.014 UTC [gossip.discovery] expireDeadMembers -> WARN 1b228 Closing connection to Endpoint: 172.16.20.2:7051, InternalEndpoint: , PKI-ID: dd144105d88637c2ab04ead71ccfb8fa3cc291510dbac3e625ba2e99e207877d, Metadata: 
2020-11-23 20:52:19.904 UTC [gossip.comm] func1 -> WARN 1b229 172.16.12.2:7051, PKIid:82b05f0186c79c66545c3b85bb3de69cadc0147472e6b6b9afc539ca61e9fa4b isn't responsive: EOF
2020-11-23 20:52:29.467 UTC [gossip.discovery] expireDeadMembers -> WARN 1b22a Closing connection to Endpoint: 172.16.12.2:7051, InternalEndpoint: , PKI-ID: 82b05f0186c79c66545c3b85bb3de69cadc0147472e6b6b9afc539ca61e9fa4b, Metadata: 
2020-11-23 20:52:29.468 UTC [gossip.discovery] expireDeadMembers -> WARN 1b22b Closing connection to Endpoint: 172.16.14.2:7051, InternalEndpoint: , PKI-ID: 51b2f5238712ccde6bd91e09bc1b74a0843396905b052e1c46c72211fe43ab24, Metadata: 
2020-11-23 20:52:29.468 UTC [gossip.discovery] expireDeadMembers -> WARN 1b22c Exiting
{code}


This peer also tries to connect to the ""old version of it"":
{code}
2020-11-23 16:59:43.755 UTC [gossip.comm] func1 -> WARN 17b2a 172.16.13.2:7051, PKIid:0f8f24c0ca4096ddb8922200bb8c5b69ec71bbe21ca0dbb320243d18bee03a28 isn't responsive: EOF
{code}

Additionaly: this peer has high memory and CPU usage, I think there is some sort of memory link.
(is FAB-17289 releated?) 

Is there a workaround to normalize this situation?",,lmars,lskor 1,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hhn:",,,,Unset,Unset,,"1) Reenroll peer certificate
2) Restart this peer
3) Other peers have problems with connection to this peer.
4) Sometimes this peer gets completely isolated.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),lmars,lskor 1,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Dec/20 12:48 AM;yacovm;Is that peer still an anchor peer? Can you try not making it an anchor peer? They will forget about it at some point.;;;","03/Dec/20 12:58 AM;lmars;Yes. This peer is an anchor peer.

{quote}Can you try not making it an anchor peer?{quote}

I think it isn't possible, because every organization in our network has only one peer.

{quote}They will forget about it at some point{quote}

Is there a different workaround? ;);;;","03/Dec/20 1:51 AM;yacovm;First of all, if you are using 1.4.2 please upgrade to the latest version.

I think that the problem might go away if you wait long enough, unless you will crash out of memory before that:
{quote}Additionaly: this peer has high memory and CPU usage, I think there is some sort of memory link.
{quote}
Yes I fixed it in 1.4.4 in this [commit|https://github.com/hyperledger/fabric/commit/afbf88a]. It probably also fixes your problem, because (according to myself, a year ago):
{quote} When a peer rotates its certificate but preserves the endpoint, the PKI-ID of the peer changes. The membership module treats the old PKI-ID as a dead peer, and asks the communication module to open a connection to it, which it does, however - it associates the connection with the *new* PKI-ID and not the old.
{quote}
 ;;;","03/Dec/20 2:30 AM;lmars;Oh my God! Why is such an informative description not a description of the issue!? I searched for the problem in the jira (by keywords ""peer, certificate, reenroll, pki-id"") and found nothing :(

Thank you so much.
We are planning to upgarde to the latest version.;;;","03/Jun/21 7:35 PM;lmars;After updating all peers to the latest version (1.4.9 :) in our case), the problem is completely resolved.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bump all dependencies including Go v1.15,FAB-18361,46376,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,jcastrence,btl5037,btl5037,03/Dec/20 3:15 AM,28/Feb/21 3:58 AM,28/Oct/23 3:09 AM,28/Feb/21 3:58 AM,v2.4.0,,,,,,v2.2.3,v2.3.2,v2.4.0,,,,,,,0,ipm,,,,,"This is a catch all for all of the tasks to bump the deps

// https://github.com/golang/go/issues/34610
replace golang.org/x/sys => golang.org/x/sys v0.0.0-20190920190810-ef0ce1748380

require (
	code.cloudfoundry.org/clock v1.0.0
	github.com/Knetic/govaluate v3.0.0+incompatible
	github.com/Shopify/sarama v1.20.1
	github.com/VictoriaMetrics/fastcache v1.5.7
	github.com/davecgh/go-spew v1.1.1
	github.com/fsouza/go-dockerclient v1.4.1
	github.com/go-kit/kit v0.8.0
	github.com/golang/protobuf v1.3.3
	github.com/gorilla/handlers v1.4.0
	github.com/gorilla/mux v1.7.2
	github.com/grpc-ecosystem/go-grpc-middleware v1.1.0
	github.com/hashicorp/go-version v1.2.0
	github.com/hyperledger/fabric-amcl v0.0.0-20200128223036-d1aa2665426a
	github.com/hyperledger/fabric-chaincode-go v0.0.0-20200128192331-2d899240a7ed
	github.com/hyperledger/fabric-config v0.0.7
	github.com/hyperledger/fabric-lib-go v1.0.0
	github.com/hyperledger/fabric-protos-go v0.0.0-20201028172056-a3136dde2354
	github.com/kr/pretty v0.2.0
	github.com/miekg/pkcs11 v1.0.3
	github.com/mitchellh/mapstructure v1.3.2
	github.com/onsi/ginkgo v1.8.0
	github.com/onsi/gomega v1.9.0
	github.com/pkg/errors v0.8.1
	github.com/prometheus/client_golang v1.1.0
	github.com/rcrowley/go-metrics v0.0.0-20181016184325-3113b8401b8a
	github.com/spf13/cobra v0.0.3
	github.com/spf13/pflag v1.0.5
	github.com/spf13/viper v1.1.1
	github.com/stretchr/testify v1.5.1
	github.com/sykesm/zap-logfmt v0.0.2
	github.com/syndtr/goleveldb v1.0.1-0.20190625010220-02440ea7a285
	github.com/tedsuo/ifrit v0.0.0-20180802180643-bea94bb476cc
	github.com/willf/bitset v1.1.10
	go.etcd.io/etcd v0.5.0-alpha.5.0.20181228115726-23731bf9ba55
	go.uber.org/zap v1.14.1
	golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9
	golang.org/x/tools v0.0.0-20200131233409-575de47986ce
	google.golang.org/grpc v1.31.0
	gopkg.in/alecthomas/kingpin.v2 v2.2.6
	gopkg.in/cheggaaa/pb.v1 v1.0.28
	gopkg.in/yaml.v2 v2.3.0
)
",,btl5037,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18363,FAB-18432,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxo94",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),btl5037,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Feb/21 8:03 AM;sykesm;Most of the libraries have been updated. Notably, we still can't update viper (because it really is configuration with fangs) and a number of other dependencies that require a minimum version of protobuf-1.4.

The big issue with protobuf is that it breaks etcd. The minor issues with protobuf are that google decided to introduce behaviors like their `detrand` package to prevent people from testing against their error messages while still not providing a sentinel error (as they did in the v2 of their package) to evaluate errors against. This has a ripple effect on a bunch of our tests.

The protobuf issue also prevents picking up new versions of gomega and prometheus. I believe it will also prevent us from picking up grpc-middleware changes.

 ;;;","03/Feb/21 8:05 AM;sykesm;The biggest remaining bit of work is to handle the x509 verification path / ignoreCN issues. The first step is to create a test on the verify path and then pull in enough code to address it.

We also have the outstanding questions about the changes to the CRL validation.;;;","11/Feb/21 7:52 AM;sykesm;Master:
- https://github.com/hyperledger/fabric/pull/2386
- https://github.com/hyperledger/fabric/pull/2385
- https://github.com/hyperledger/fabric/pull/2384

Release 2.3:
- https://github.com/hyperledger/fabric/pull/2387

Given Go 1.16 is out this month, I've pulled the necessary changes back to the LTS release as well.

Release 2.2:
- https://github.com/hyperledger/fabric/pull/2388;;;","28/Feb/21 3:49 AM;denyeart;Focus of this one was Go v1.15. I've moved the protobuf upgrade subtask to its own issue, and will create another task for Go v1.16.

Closing the v1.15 task as done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flake in channel participation IT after removing system channel,FAB-18362,46377,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,03/Dec/20 4:25 AM,06/Dec/20 10:54 PM,28/Oct/23 3:09 AM,06/Dec/20 10:54 PM,,,,,,,,,,,,,,,,0,ci-flake,ipm,,,,"{noformat}
• Failure [106.168 seconds]
ChannelParticipation
/Users/wlahti/gopath/src/github.com/hyperledger/fabric/integration/raft/channel_participation_test.go:42
  three node etcdraft network with a system channel
  /Users/wlahti/gopath/src/github.com/hyperledger/fabric/integration/raft/channel_participation_test.go:1036
    joins channels using the legacy channel creation mechanism and then removes the system channel to transition to the channel participation API [It]
    /Users/wlahti/gopath/src/github.com/hyperledger/fabric/integration/raft/channel_participation_test.go:1061

    Timed out after 60.000s.
    Expected
        <channelparticipation.ChannelInfo>: {
            Name: ""testchannel"",
            URL: ""/participation/v1/channels/testchannel"",
            Status: ""active"",
            ConsensusRelation: ""consenter"",
            Height: 8,
        }
    to equal
        <channelparticipation.ChannelInfo>: {
            Name: ""testchannel"",
            URL: ""/participation/v1/channels/testchannel"",
            Status: ""active"",
            ConsensusRelation: ""consenter"",
            Height: 9,
        }

    /Users/wlahti/gopath/src/github.com/hyperledger/fabric/integration/raft/channel_participation_test.go:1302

{noformat}
",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18305,,,,FAB-18365,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00n2e:8znqzzzzzohfprxes",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Dec/20 4:33 AM;wlahti;https://github.com/hyperledger/fabric/pull/2182;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bump Protobuf to 1.4.3,FAB-18363,46378,,Task,To Do,FAB,Fabric,software,denyeart,,,Medium,,,btl5037,btl5037,03/Dec/20 7:12 AM,30/Sep/21 5:46 AM,28/Oct/23 3:09 AM,,v2.4.0,,,,,,,,,,,,,,,0,ipm,,,,,Update protobuf dependency. See comment.,,btl5037,denyeart,sunhaoli,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18361,,,,,,"29/Jul/21 5:26 PM;sunhaoli;TPS.png;https://jira.hyperledger.org/secure/attachment/19103/TPS.png","30/Jul/21 11:23 AM;sunhaoli;image-2021-07-30-10-23-49-565.png;https://jira.hyperledger.org/secure/attachment/19105/image-2021-07-30-10-23-49-565.png","30/Jul/21 11:24 AM;sunhaoli;image-2021-07-30-10-24-29-225.png;https://jira.hyperledger.org/secure/attachment/19104/image-2021-07-30-10-24-29-225.png",,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxobi",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,denyeart,sunhaoli,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.3,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Feb/21 3:46 AM;denyeart;Converted to task.;;;","28/Feb/21 3:54 AM;denyeart;Matt's comment copied from FAB-18361:
{quote}Notably, we still can't update viper (because it really is configuration with fangs) and a number of other dependencies that require a minimum version of protobuf-1.4.

The big issue with protobuf is that it breaks etcd. The minor issues with protobuf are that google decided to introduce behaviors like their `detrand` package to prevent people from testing against their error messages while still not providing a sentinel error (as they did in the v2 of their package) to evaluate errors against. This has a ripple effect on a bunch of our tests.

The protobuf issue also prevents picking up new versions of gomega and prometheus. I believe it will also prevent us from picking up grpc-middleware changes.
{quote}
 

Supposedly there is a good story brewing for etcd.

More background at https://github.com/hyperledger/fabric/pull/2185;;;","29/Jul/21 5:30 PM;sunhaoli;While we were doing some experiments about fabric, we introduced protobuf-1.4, but we found that this will cause performance decrease for fabric since protobuf beyond the version 1.3.3 will invoke protoV2 (google.golang.org/protobuf/proto). So we are wondering if it is possible for you to bump protobuf of fabric directly to protoV2(google.golang.org/protobuf/proto), for example protobuf@v1.27.1?

protobuf@v1.4.3 invokes protobufV2, this may introduce some complexity for the code:
{code:java}
package proto

import (	
 protoV2 ""google.golang.org/protobuf/proto""	
""google.golang.org/protobuf/reflect/protoreflect""	
""google.golang.org/protobuf/runtime/protoiface""	
""google.golang.org/protobuf/runtime/protoimpl""

){code}
Our experiment result:

!TPS.png|width=490,height=257!

  !image-2021-07-30-10-23-49-565.png|width=455,height=426!

!image-2021-07-30-10-24-29-225.png|width=455,height=446!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Not possible to use Idemix ADMIN credentials with ""peer chaincode invoke""",FAB-18364,46380,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Low,,,johannwest,johannwest,03/Dec/20 10:41 PM,26/Feb/21 4:21 AM,28/Oct/23 3:09 AM,,v2.1.0,,,,,,v2.2.0,,,,,fabric-peer,,,,0,,,,,,"**Passing idemix admin MSP credentials to ""*peer chaincode invoke*"" leads to an error.

 

That happens only when I register the admin with the attribute {color:#FF0000}role=2 **{color}(as indicated in fabric docs).

 

I assume that this happens because ""*peer chaincode invoke*"" is not expecting admin credentials and rules it as invalid.

 

+_*Steps to bug:*_+

 

1) *Registering in the fabric-ca-server 1.4.9 like:*

 
fabric-ca-client register --id.name admin13-idemixorg --id.secret admin13-idemixorg  --id.type admin --id.affiliation idemixorg --id.attrs '""hf.Registrar.Roles=aclient,peer,orderer"",hf.Registrar.Attributes=*,hf.Revoker=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert,{color:#FF0000}role=2:ecert{color}' -u [https://0.0.0.0:7002|https://0.0.0.0:7002/]
 
 or
 
fabric-ca-client register --id.name admin13-idemixorg --id.secret admin13-idemixorg  --id.type admin --id.affiliation idemixorg --id.attrs '""hf.Registrar.Roles=aclient,peer,orderer"",hf.Registrar.Attributes=*,hf.Revoker=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert{color:#FF0000},role=2'{color} -u [https://0.0.0.0:7002|https://0.0.0.0:7002/]
 
*PS:* Whenever I register without the ""{color:#FF0000}role=2{color}"" attribute, everything works regularly with a *member* idemix credential.
 
2) ***Enrolling with the fabric-ca-server with:*
 
fabric-ca-client enroll -u https://admin13-idemixorg:admin13-idemixorg@0.0.0.0:7002 --enrollment.type idemix 
 
*PS:* this command returns a JSON idemix credential, as mentioned [here|https://jira.hyperledger.org/browse/FABC-885]
 
*3) Converting the JSON Idemix +_SignerConfig_+ to Protobuf using fabric-java-sdk 1.4 with the attached source code:*
 
**- I parse the JSON idemix SignerConfig file
- Decode the base 64 fields (""Cred"", ""Sk"" and ""credential_revocation_information"")
- From the fields, I build the proto Class {color:#FF0000}IdemixMSPSignerConfig.{color}
- Write the proto Class object to file.
 
*4) Call ""cli-idemixorg peer chaincode invoke""*


docker exec -e CORE_PEER_LOCALMSPID=IDEMIXORG -e CORE_PEER_ADDRESS=peer1-ufsc:7051 -e CORE_PEER_LOCALMSPTYPE=idemix -e CORE_PEER_MSPCONFIGPATH=/tmp/hyperledger/idemixorg/admin1/msp -e CORE_PEER_TLS_ENABLED=true -e CORE_PEER_TLS_ROOTCERT_FILE=/tmp/hyperledger/idemixorg/admin1/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem cli-idemixorg peer chaincode invoke -o orderer1-ufsc:7050 --channelID canal --name abac --tls --cafile /tmp/hyperledger/idemixorg/admin1/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem  --tlsRootCertFiles /tmp/hyperledger/idemixorg/admin1/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem --peerAddresses peer1-ufsc:7051 -c '\{""function"":""query"",""Args"":[""A""]}'
 
*5)* *Error message:*
 
{color:#FF0000}2020-12-03 11:19:32.390 UTC [main] InitCmd -> ERRO 008{color} Cannot run peer because error when setting up MSP of type idemix from directory /tmp/hyperledger/idemixorg/admin1/msp: Credential is not cryptographically valid: Failed verifing with opts [&\{[{1 [105 100 101 109 105 120 111 114 103]} \{2 1} \{1 [97 100 109 105 110 49 50 45 105 100 101 109 105 120 111 114 103]} \{0 <nil>}] 0xc000195c00 0}]: credential does not contain the correct attribute value at position [1]
 
*PS:* As I said in the beginning, this behavior only happens with admin credentials with *role=2.* Without that attribute, I was successful using idemix.
 ",,johannwest,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Dec/20 10:26 PM;johannwest;Main.java;https://jira.hyperledger.org/secure/attachment/18856/Main.java",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hjv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),johannwest,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Dec/20 5:31 PM;johannwest;*IMPORTANT*: I opened a few different {color:#FF0000}IdemixCredential{color} in the {color:#FF0000}IdemixMSPSignerConfig{color} and noticed the following pattern:

 

*When credentials are generated from IdemixGen for an ADMIN:*
 * IdemixMSPSignerConfig.role = 2 (*correct*)
 * AND
 * IdemixCredential.Attrs[1] = 2 (*correct)*

*When credentials are generated from Fabric CA for an ADMIN, and converted to proto:*
 * IdemixMSPSignerConfig.role = 0 (because role is not present in the json file delivered by Fabric CA) ({color:#FF0000}Conflicting with Attrs[1]{color}) 
 * AND
 * IdemixCredential.Attrs[1] = 2 (*correct*)

*When credentials are generated from Fabric CA for an CLIENT, and converted to proto:*
 * IdemixMSPSignerConfig.role = 0 (because role is not present in the json file delivered by Fabric CA) ({color:#FF0000}Conflicting with Attrs[1]{color}) 
 * AND
 * IdemixCredential.Attrs[1] = 1 (*correct*)

 

*My suspicion*:



Either there is an error with the Fabric CA on generating Idemix Credentials, or I did not pass the correct attributes when registering the credentials.

 

I would appreciate some help, because this seems relevant for Idemix usage.;;;","06/Dec/20 2:38 PM;johannwest;*UPDATE:*

I started debbuging the fabric-sdk-java idemix enrollment steps and realized that actually the *{color:#FF0000}role{color}*{color:#FF0000} {color}variable is set only in the java-sdk-java with the value on the IdemixCredential.*Attrs*. This field is never present on the credentials JSON returned by the Fabric CA. That is clear now.


However, it is still not possible to use it with *peer chaincode invoke.* Since the real applications will use fabric-sdk-java or fabric-sdk-node, I just lowered the priority of this issue to *LOW.*;;;","26/Feb/21 4:21 AM;johannwest;*SOLUTION:*

 

I solved this issue by using the *fabric-java-sdk* to parse the JSON Idemix Credentials and serialize to *proto*. It worked.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flaky IT - [It] joins channels using the legacy channel creation mechanism and then removes the system channel to transition to the channel participation API,FAB-18365,46387,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,Param-S,guoger,guoger,04/Dec/20 10:22 AM,29/Jul/21 9:46 PM,28/Oct/23 3:09 AM,29/Jul/21 9:43 PM,,,,,,,Future,,,,,fabric-orderer,,,,0,ci-flake,ipm,,,,"{code}
• Failure [70.391 seconds]
ChannelParticipation three node etcdraft network with a system channel [It] joins channels using the legacy channel creation mechanism and then removes the system channel to transition to the channel participation API 
/home/vsts/work/1/fabric/integration/raft/channel_participation_test.go:1061

  Timed out after 60.001s.
  Expected
      <channelparticipation.ChannelInfo>: {
          Name: ""testchannel"",
          URL: ""/participation/v1/channels/testchannel"",
          Status: ""active"",
          ConsensusRelation: ""consenter"",
          Height: 6,
      }
  to equal
      <channelparticipation.ChannelInfo>: {
          Name: ""testchannel"",
          URL: ""/participation/v1/channels/testchannel"",
          Status: ""inactive"",
          ConsensusRelation: ""config-tracker"",
          Height: 6,
      }

  /home/vsts/work/1/fabric/integration/raft/channel_participation_test.go:1134
{code}",,denyeart,guoger,Param-S,sykesm,,,,,,,,,,,,,,,,,,,,,,,,FAB-18305,,,,,,,FAB-18362,FAB-18305,,,,,"04/Dec/20 10:23 AM;guoger;20201204.txt;https://jira.hyperledger.org/secure/attachment/18857/20201204.txt","13/Feb/21 5:52 AM;sykesm;failing.log;https://jira.hyperledger.org/secure/attachment/18892/failing.log","13/Feb/21 5:51 AM;sykesm;success.log;https://jira.hyperledger.org/secure/attachment/18891/success.log",,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqwj",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,guoger,Param-S,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/21 12:52 AM;sykesm;This is still happening (I just hit it during CI for PR #2375) and it's easy to create locally.

{code}
• Failure [103.657 seconds]
ChannelParticipation
/home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/integration/raft/channel_participation_test.go:42
  three node etcdraft network with a system channel
  /home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/integration/raft/channel_participation_test.go:1035
    joins channels using the legacy channel creation mechanism and then removes the system channel to transition to the channel participation API [It]
    /home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/integration/raft/channel_participation_test.go:1060

    Timed out after 60.000s.
    Expected
        <channelparticipation.ChannelInfo>: {
            Name: ""testchannel"",
            URL: ""/participation/v1/channels/testchannel"",
            Status: ""active"",
            ConsensusRelation: ""consenter"",
            Height: 6,
        }
    to equal
        <channelparticipation.ChannelInfo>: {
            Name: ""testchannel"",
            URL: ""/participation/v1/channels/testchannel"",
            Status: ""inactive"",
            ConsensusRelation: ""config-tracker"",
            Height: 6,
        }

    /home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/integration/raft/channel_participation_test.go:1133
------------------------------


Summarizing 1 Failure:

[Fail] ChannelParticipation three node etcdraft network with a system channel [It] joins channels using the legacy channel creation mechanism and then removes the system channel to transition to the channel participation API
/home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/integration/raft/channel_participation_test.go:1133

Ran 1 of 35 Specs in 103.817 seconds
FAIL! -- 0 Passed | 1 Failed | 0 Pending | 34 Skipped
--- FAIL: TestRaft (103.82s)
FAIL

Tests failed on attempt #1
{code}

The recreate simply focused the test and ran `stress -c 5` in the background to burn CPU.;;;","13/Feb/21 5:59 AM;sykesm;Just finished a quick discussion with [~jyellick] on this. It appears that this test works when orderer-3 is the leader and fails when it is not. We can see from the logs that the configuration transaction is received by orderer 3:

{code}
[e][OrdererOrg.orderer3] 2021-02-12 09:32:53.929 EST 005a INFO [orderer.consensus.etcdraft] writeBlock -> Writing block [5] (Raft index: 10) to ledger channel=testchannel node=3
[e][OrdererOrg.orderer1] 2021-02-12 09:32:53.929 EST 0062 INFO [orderer.consensus.etcdraft] writeBlock -> Writing block [5] (Raft index: 10) to ledger channel=testchannel node=1
[e][OrdererOrg.orderer1] 2021-02-12 09:32:53.933 EST 0063 INFO [orderer.consensus.etcdraft] writeConfigBlock -> Config block just committed removes node 3, pause accepting transactions till config change is applied channel=testchannel node=1
[e][OrdererOrg.orderer1] 2021-02-12 09:32:53.933 EST 0064 INFO [orderer.consensus.etcdraft] apply -> Accumulated 25479 bytes since last snapshot, exceeding size limit (1024 bytes), taking snapshot at block [5] (index: 10), last snapshotted block number is 4, current nodes: [1 2 3] channel=testchannel node=1
[e][OrdererOrg.orderer1] 2021-02-12 09:32:53.933 EST 0065 INFO [orderer.consensus.etcdraft] run -> Config block or ConfChange in flight, pause accepting transaction channel=testchannel node=1
[e][OrdererOrg.orderer1] 2021-02-12 09:32:53.933 EST 0066 INFO [orderer.consensus.etcdraft] saveSnap -> Persisting snapshot (term: 3, index: 10) to WAL and disk channel=testchannel node=1
[e][OrdererOrg.orderer1] 2021-02-12 09:32:53.934 EST 0067 INFO [orderer.consensus.etcdraft] stepFollower -> 1 not forwarding to leader 2 at term 3; dropping proposal channel=testchannel node=1
[e][OrdererOrg.orderer3] 2021-02-12 09:32:53.935 EST 005b INFO [orderer.consensus.etcdraft] writeConfigBlock -> Config block just committed removes node 3, pause accepting transactions till config change is applied channel=testchannel node=3
[e][OrdererOrg.orderer3] 2021-02-12 09:32:53.935 EST 005c INFO [orderer.consensus.etcdraft] stepFollower -> 3 not forwarding to leader 2 at term 3; dropping proposal channel=testchannel node=3
[e][OrdererOrg.orderer3] 2021-02-12 09:32:53.935 EST 005e INFO [orderer.consensus.etcdraft] saveSnap -> Persisting snapshot (term: 3, index: 10) to WAL and disk channel=testchannel node=3
[e][OrdererOrg.orderer3] 2021-02-12 09:32:53.935 EST 005d INFO [orderer.consensus.etcdraft] apply -> Accumulated 25479 bytes since last snapshot, exceeding size limit (1024 bytes), taking snapshot at block [5] (index: 10), last snapshotted block number is 4, current nodes: [1 2 3] channel=testchannel node=3
[e][OrdererOrg.orderer3] 2021-02-12 09:32:53.935 EST 005f INFO [orderer.consensus.etcdraft] run -> Config block or ConfChange in flight, pause accepting transaction channel=testchannel node=3
{code}

but the call to {{halt}} to transition the node to {{config-tracker}} never happens.

In the successful case, orderer-3 is a leader and we can see the config transaction is received, processed, and applied:
{code}
[e][OrdererOrg.orderer3] 2021-02-12 15:19:30.999 EST 005a INFO [orderer.consensus.etcdraft] propose -> Created block [5], there are 0 blocks in flight channel=testchannel node=3
[e][OrdererOrg.orderer3] 2021-02-12 15:19:30.999 EST 005b INFO [orderer.consensus.etcdraft] run -> Received config transaction, pause accepting transaction till it is committed channel=testchannel node=3
[e][OrdererOrg.orderer2] 2021-02-12 15:19:30.999 EST 0076 INFO [comm.grpc.server] 1 -> streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Broadcast grpc.peer_address=127.0.0.1:57260 error=""rpc error: code = Canceled desc = context canceled"" grpc.code=Canceled grpc.call_duration=8.515057ms
...
[e][OrdererOrg.orderer3] 2021-02-12 15:19:31.127 EST 005c INFO [orderer.consensus.etcdraft] writeBlock -> Writing block [5] (Raft index: 10) to ledger channel=testchannel node=3
...
[e][OrdererOrg.orderer3] 2021-02-12 15:19:31.131 EST 005d INFO [orderer.consensus.etcdraft] writeConfigBlock -> Config block just committed removes node 3, pause accepting transactions till config change is applied channel=testchannel node=3
[e][OrdererOrg.orderer3] 2021-02-12 15:19:31.131 EST 005e INFO [orderer.consensus.etcdraft] apply -> Accumulated 25487 bytes since last snapshot, exceeding size limit (1024 bytes), taking snapshot at block [5] (index: 10), last snapshotted block number is 4, current nodes: [1 2 3] channel=testchannel node=3
[e][OrdererOrg.orderer3] 2021-02-12 15:19:31.131 EST 005f INFO [orderer.consensus.etcdraft] run -> Config block or ConfChange in flight, pause accepting transaction channel=testchannel node=3
[e][OrdererOrg.orderer3] 2021-02-12 15:19:31.131 EST 0060 INFO [orderer.consensus.etcdraft] saveSnap -> Persisting snapshot (term: 3, index: 10) to WAL and disk channel=testchannel node=3
[e][OrdererOrg.orderer2] 2021-02-12 15:19:31.158 EST 007f WARN [orderer.consensus.etcdraft] TakeSnapshot -> Raft entries prior to 6 are already purged channel=testchannel node=2
[e][OrdererOrg.orderer2] 2021-02-12 15:19:31.158 EST 0080 INFO [orderer.consensus.etcdraft] TakeSnapshot -> Snapshot is taken at index 10 channel=testchannel node=2
[e][OrdererOrg.orderer3] 2021-02-12 15:19:31.181 EST 0061 INFO [orderer.consensus.etcdraft] apply -> Applied config change to remove node 3, current nodes in channel: [1 2] channel=testchannel node=3
[e][OrdererOrg.orderer3] 2021-02-12 15:19:31.181 EST 0062 INFO [orderer.consensus.etcdraft] func1 -> Current leader is being removed from channel, attempt leadership transfer channel=testchannel node=3
[e][OrdererOrg.orderer3] 2021-02-12 15:19:31.181 EST 0063 INFO [orderer.consensus.etcdraft] abdicateLeader -> Transferring leadership to 1 channel=testchannel node=3
[e][OrdererOrg.orderer3] 2021-02-12 15:19:31.181 EST 0064 INFO [orderer.consensus.etcdraft] stepLeader -> 3 [term 3] starts to transfer leadership to 1 channel=testchannel node=3
{code}

Based on this discussion, this appears to be a subtle production code bug and not just a test flake.

 [^success.log]  [^failing.log] ;;;","19/Apr/21 1:01 AM;denyeart;Still happening:

[https://dev.azure.com/Hyperledger/Fabric/_build/results?buildId=33331&view=logs&j=f2000854-c7fb-5d20-d92e-ea22102e0eb5&t=8c0b343e-a113-5c44-d189-698811f88d80]

 
• Failure [77.605 seconds] 
 
ChannelParticipation three node etcdraft network with a system channel [It] joins channels using the legacy channel creation mechanism and then removes the system channel to transition to the channel participation API  
 
/home/vsts/work/1/fabric/integration/raft/channel_participation_test.go:1060 
 
 
 
 Timed out after 60.775s. 
 
 Expected 
 
 <channelparticipation.ChannelInfo>: { 
 
 Name: ""testchannel"", 
 
 URL: ""/participation/v1/channels/testchannel"", 
 
 Status: ""active"", 
 
 ConsensusRelation: ""consenter"", 
 
 Height: 6, 
 
 } 
 
 to equal 
 
 <channelparticipation.ChannelInfo>: { 
 
 Name: ""testchannel"", 
 
 URL: ""/participation/v1/channels/testchannel"", 
 
 Status: ""inactive"", 
 
 ConsensusRelation: ""config-tracker"", 
 
 Height: 6, 
 
 } 
 
 
 
 /home/vsts/work/1/fabric/integration/raft/channel_participation_test.go:1133;;;","24/Apr/21 1:38 AM;denyeart;And again - https://dev.azure.com/Hyperledger/Fabric/_build/results?buildId=33597&view=logs&jobId=f2000854-c7fb-5d20-d92e-ea22102e0eb5&j=f2000854-c7fb-5d20-d92e-ea22102e0eb5&t=8c0b343e-a113-5c44-d189-698811f88d80;;;","26/Jul/21 9:08 PM;Param-S;Failure observed whenever the OSN being removed has committed the config change but failed to receive apply_config msg to halt the chain. This state is defined to be handled as part of the eviction suspicion logic. But it failed when evictionsuspector failed to check from lastconfig block if chain is up-to-date.

[https://github.com/hyperledger/fabric/pull/2780];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
gossip Handshake can't recognize channel,FAB-18366,46388,,Bug,Unverified,FAB,Fabric,software,denyeart,,,High,,,zerppen,zerppen,04/Dec/20 2:05 PM,07/Dec/20 6:27 PM,28/Oct/23 3:09 AM,,v1.4.2,v1.4.6,v2.1.0,v2.2.0,,,,,,,,fabric-gossip,,,,0,gossip,,,,,"*My env*:

_Channel1_:

  peer0 of org1 and peer0 of org2 joined channe1,then both peers updated anchor peers.

_Channel2_:

  peer0/peer1 of org1 and peer0/peer1 of org3 joined channel2.No anchor peers here.

*Problem happened*:

 peer0 of org2 will endless Handshake peer1 of org1 .But they are not in same channel.

Notice:

It maybe afftects all versions

 ",,yacovm,zerppen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hln:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yacovm,zerppen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Dec/20 12:43 AM;yacovm;{code:java}
      channel1  channel2
org1: peer0     peer0,peer1
org2: peer0
org3:           peer0,peer1 {code}
This should not be possible. In order for peer0.org2 to want to connect to peer1.org1 it needs to be able to validate its identity, but as you said - these peers are from foreign organizations and they do not share a channel.

Can you provide logs that show this?;;;","07/Dec/20 3:46 PM;zerppen;Validating failed but peer0 of org2 will handshake peer1of org1 all time that is the problem.

this is the peer0 of org2's logs:

```

2020-12-03 21:22:49.085 UTC [gossip.comm] sendToEndpoint -> WARN 17c14 Failed obtaining connection for peer1.org1.example.com:8051, PKIid:d6c39d583be44e86f2ced0e83392259d216f2eed60182f46b8f2a5d21f764177 reason: timed out waiting for connection message from 172.19.69.63:8051
2020-12-03 21:22:49.085 UTC [gossip.discovery] expireDeadMembers -> WARN 17c15 Entering [d6c39d583be44e86f2ced0e83392259d216f2eed60182f46b8f2a5d21f764177]
2020-12-03 21:22:49.085 UTC [gossip.discovery] expireDeadMembers -> WARN 17c16 Closing connection to Endpoint: peer1.org1.example.com:8051, InternalEndpoint: , PKI-ID: d6c39d583be44e86f2ced0e83392259d216f2eed60182f46b8f2a5d21f764177, Metadata: 
2020-12-03 21:22:49.085 UTC [gossip.discovery] expireDeadMembers -> WARN 17c17 Exiting
2020-12-03 21:22:50.080 UTC [gossip.comm] authenticateRemotePeer -> WARN 17c18 Failed reading messge from 172.19.69.63:8051, reason: timed out waiting for connection message from 172.19.69.63:8051
2020-12-03 21:22:50.080 UTC [gossip.comm] createConnection -> WARN 17c19 Authentication failed: timed out waiting for connection message from 172.19.69.63:8051
github.com/hyperledger/fabric/gossip/comm.readWithTimeout
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:618
github.com/hyperledger/fabric/gossip/comm.(*commImpl).authenticateRemotePeer
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:431
github.com/hyperledger/fabric/gossip/comm.(*commImpl).createConnection
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:163
github.com/hyperledger/fabric/gossip/comm.(*connectionStore).getConnection
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/conn.go:89
github.com/hyperledger/fabric/gossip/comm.(*commImpl).sendToEndpoint
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:230
github.com/hyperledger/fabric/gossip/comm.(*commImpl).Send.func1
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:217
runtime.goexit
 /opt/go/src/runtime/asm_amd64.s:1333

```

this is the peer1 of org1's log:

```

uthentication failed: No TLS certificate
2020-12-03 12:12:30.145 UTC [comm.grpc.server] 1 -> INFO 47ca streaming call completed grpc.service=gossip.Gossip grpc.method=GossipStream grpc.peer_address=172.28.0.1:41912 error=""No TLS certificate"" grpc.code=Unknown grpc.call_duration=128.105µs
2020-12-03 12:12:31.138 UTC [comm.grpc.server] 1 -> INFO 47cb unary call completed grpc.service=gossip.Gossip grpc.method=Ping grpc.request_deadline=2020-12-03T12:12:33.138Z grpc.peer_address=172.28.0.1:41918 grpc.code=OK grpc.call_duration=59.598µs
2020-12-03 12:12:31.139 UTC [gossip.comm] authenticateRemotePeer -> WARN 47cc 172.28.0.1:41918 didn't send TLS certificate
2020-12-03 12:12:31.139 UTC [gossip.comm] GossipStream -> ERRO 47cd Authentication failed: No TLS certificate
2020-12-03 12:12:31.139 UTC [comm.grpc.server] 1 -> INFO 47ce streaming call completed grpc.service=gossip.Gossip grpc.method=GossipStream grpc.peer_address=172.28.0.1:41918 error=""No TLS certificate"" grpc.code=Unknown grpc.call_duration=126.54µs
2020-12-03 12:12:31.673 UTC [peer.gossip.mcs] Verify -> ERRO 47cf Failed getting validated identity from peer identity [Peer Identity [0a 09 5a 68 75 68 61 69 4d 53 50 12 92 06 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 43 46 7a 43 43 41 62 32 67 41 77 49 42 41 67 49 52 41 4c 49 6b 58 67 38 39 65 6a 73 31 79 70 4e 30 32 70 72 68 36 49 4d 77 43 67 59 49 4b 6f 5a 49 7a 6a 30 45 41 77 49 77 5a 7a 45 4c 0a 4d 41 6b 47 41 31 55 45 42 68 4d 43 56 56 4d 78 45 7a 41 52 42 67 4e 56 42 41 67 54 43 6b 4e 68 62 47 6c 6d 62 33 4a 75 61 57 45 78 46 6a 41 55 42 67 4e 56 42 41 63 54 44 56 4e 68 62 69 42 47 0a 63 6d 46 75 59 32 6c 7a 59 32 38 78 45 7a 41 52 42 67 4e 56 42 41 6f 54 43 6e 70 6f 64 57 68 68 61 53 35 6a 62 32 30 78 46 6a 41 55 42 67 4e 56 42 41 4d 54 44 57 4e 68 4c 6e 70 6f 64 57 68 68 0a 61 53 35 6a 62 32 30 77 48 68 63 4e 4d 6a 41 78 4d 6a 41 78 4d 44 55 31 4e 54 41 77 57 68 63 4e 4d 7a 41 78 4d 54 49 35 4d 44 55 31 4e 54 41 77 57 6a 42 6b 4d 51 73 77 43 51 59 44 56 51 51 47 0a 45 77 4a 56 55 7a 45 54 4d 42 45 47 41 31 55 45 43 42 4d 4b 51 32 46 73 61 57 5a 76 63 6d 35 70 59 54 45 57 4d 42 51 47 41 31 55 45 42 78 4d 4e 55 32 46 75 49 45 5a 79 59 57 35 6a 61 58 4e 6a 0a 62 7a 45 4e 4d 41 73 47 41 31 55 45 43 78 4d 45 63 47 56 6c 63 6a 45 5a 4d 42 63 47 41 31 55 45 41 78 4d 51 63 47 56 6c 63 6a 41 75 65 6d 68 31 61 47 46 70 4c 6d 4e 76 62 54 42 5a 4d 42 4d 47 0a 42 79 71 47 53 4d 34 39 41 67 45 47 43 43 71 47 53 4d 34 39 41 77 45 48 41 30 49 41 42 4a 72 75 2b 79 70 46 6c 58 39 76 55 2f 50 30 4a 61 6f 6d 64 34 77 6a 32 35 66 67 58 46 36 53 6d 49 39 33 0a 32 75 63 37 4f 4f 64 54 56 34 43 77 35 76 7a 44 59 4d 65 37 4a 53 33 4e 42 79 39 7a 35 68 43 42 48 72 56 66 30 48 70 42 2b 68 64 75 49 6e 44 46 59 79 57 6a 54 54 42 4c 4d 41 34 47 41 31 55 64 0a 44 77 45 42 2f 77 51 45 41 77 49 48 67 44 41 4d 42 67 4e 56 48 52 4d 42 41 66 38 45 41 6a 41 41 4d 43 73 47 41 31 55 64 49 77 51 6b 4d 43 4b 41 49 46 49 73 30 36 2b 37 6d 41 69 6f 73 41 78 39 0a 64 4a 4b 67 4e 43 70 50 44 39 43 5a 4c 54 44 4e 75 72 57 6c 36 6b 54 4c 5a 4f 79 76 4d 41 6f 47 43 43 71 47 53 4d 34 39 42 41 4d 43 41 30 67 41 4d 45 55 43 49 51 43 55 4e 33 4e 59 4a 58 6a 4c 0a 4d 43 70 48 4d 38 6f 5a 77 43 44 42 4e 7a 74 53 42 44 34 58 72 74 50 30 68 61 71 61 65 36 4d 67 36 41 49 67 58 57 31 2f 67 2f 4e 71 51 55 77 55 79 42 48 42 6b 4d 6f 49 67 5a 64 75 75 52 68 4e 0a 66 74 49 41 74 6f 76 70 38 45 50 57 77 59 49 3d 0a 2d 2d 2d 2d 2d 45 4e 44 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a] cannot be validated. No MSP found able to do that.]
2020-12-03 12:12:31.673 UTC [gossip.gossip] handleMessage -> WARN 47d0 Failed validating identity message: Peer Identity [0a 09 5a 68 75 68 61 69 4d 53 50 12 92 06 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 43 46 7a 43 43 41 62 32 67 41 77 49 42 41 67 49 52 41 4c 49 6b 58 67 38 39 65 6a 73 31 79 70 4e 30 32 70 72 68 36 49 4d 77 43 67 59 49 4b 6f 5a 49 7a 6a 30 45 41 77 49 77 5a 7a 45 4c 0a 4d 41 6b 47 41 31 55 45 42 68 4d 43 56 56 4d 78 45 7a 41 52 42 67 4e 56 42 41 67 54 43 6b 4e 68 62 47 6c 6d 62 33 4a 75 61 57 45 78 46 6a 41 55 42 67 4e 56 42 41 63 54 44 56 4e 68 62 69 42 47 0a 63 6d 46 75 59 32 6c 7a 59 32 38 78 45 7a 41 52 42 67 4e 56 42 41 6f 54 43 6e 70 6f 64 57 68 68 61 53 35 6a 62 32 30 78 46 6a 41 55 42 67 4e 56 42 41 4d 54 44 57 4e 68 4c 6e 70 6f 64 57 68 68 0a 61 53 35 6a 62 32 30 77 48 68 63 4e 4d 6a 41 78 4d 6a 41 78 4d 44 55 31 4e 54 41 77 57 68 63 4e 4d 7a 41 78 4d 54 49 35 4d 44 55 31 4e 54 41 77 57 6a 42 6b 4d 51 73 77 43 51 59 44 56 51 51 47 0a 45 77 4a 56 55 7a 45 54 4d 42 45 47 41 31 55 45 43 42 4d 4b 51 32 46 73 61 57 5a 76 63 6d 35 70 59 54 45 57 4d 42 51 47 41 31 55 45 42 78 4d 4e 55 32 46 75 49 45 5a 79 59 57 35 6a 61 58 4e 6a 0a 62 7a 45 4e 4d 41 73 47 41 31 55 45 43 78 4d 45 63 47 56 6c 63 6a 45 5a 4d 42 63 47 41 31 55 45 41 78 4d 51 63 47 56 6c 63 6a 41 75 65 6d 68 31 61 47 46 70 4c 6d 4e 76 62 54 42 5a 4d 42 4d 47 0a 42 79 71 47 53 4d 34 39 41 67 45 47 43 43 71 47 53 4d 34 39 41 77 45 48 41 30 49 41 42 4a 72 75 2b 79 70 46 6c 58 39 76 55 2f 50 30 4a 61 6f 6d 64 34 77 6a 32 35 66 67 58 46 36 53 6d 49 39 33 0a 32 75 63 37 4f 4f 64 54 56 34 43 77 35 76 7a 44 59 4d 65 37 4a 53 33 4e 42 79 39 7a 35 68 43 42 48 72 56 66 30 48 70 42 2b 68 64 75 49 6e 44 46 59 79 57 6a 54 54 42 4c 4d 41 34 47 41 31 55 64 0a 44 77 45 42 2f 77 51 45 41 77 49 48 67 44 41 4d 42 67 4e 56 48 52 4d 42 41 66 38 45 41 6a 41 41 4d 43 73 47 41 31 55 64 49 77 51 6b 4d 43 4b 41 49 46 49 73 30 36 2b 37 6d 41 69 6f 73 41 78 39 0a 64 4a 4b 67 4e 43 70 50 44 39 43 5a 4c 54 44 4e 75 72 57 6c 36 6b 54 4c 5a 4f 79 76 4d 41 6f 47 43 43 71 47 53 4d 34 39 42 41 4d 43 41 30 67 41 4d 45 55 43 49 51 43 55 4e 33 4e 59 4a 58 6a 4c 0a 4d 43 70 48 4d 38 6f 5a 77 43 44 42 4e 7a 74 53 42 44 34 58 72 74 50 30 68 61 71 61 65 36 4d 67 36 41 49 67 58 57 31 2f 67 2f 4e 71 51 55 77 55 79 42 48 42 6b 4d 6f 49 67 5a 64 75 75 52 68 4e 0a 66 74 49 41 74 6f 76 70 38 45 50 57 77 59 49 3d 0a 2d 2d 2d 2d 2d 45 4e 44 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a] cannot be validated. No MSP found able to do that.
Failed verifying message
github.com/hyperledger/fabric/gossip/gossip.(*certStore).validateIdentityMsg
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/certstore.go:104
github.com/hyperledger/fabric/gossip/gossip.(*certStore).handleMessage
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/certstore.go:76
github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).handleMessage
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:405
github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).acceptMessages
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:332
runtime.goexit
 /opt/go/src/runtime/asm_amd64.s:1333
github.com/hyperledger/fabric/gossip/gossip.(*certStore).handleMessage
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/certstore.go:77
github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).handleMessage
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:405
github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).acceptMessages
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:332
runtime.goexit

```;;;","07/Dec/20 5:10 PM;yacovm;Looks like your peer is behind a gRPC terminating proxy. Fabric doesn't support that;;;","07/Dec/20 5:38 PM;zerppen;This problem is MembershipStore of gossipDiscoveryImpl should consider channel  isolation.

Then we can't connect Member that don't belong the channel.;;;","07/Dec/20 5:56 PM;yacovm;Please provide full logs of the peer when gossip is in debug.;;;","07/Dec/20 6:27 PM;zerppen;It's easy to repeat it and you can get all logs you want.

And what's more important is when executing  _NewDiscoveryService()_ should consider channel name.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Go client samples to use RC1 of Go SDK,FAB-18367,46389,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,andrew-coleman,andrew-coleman,andrew-coleman,04/Dec/20 8:00 PM,04/Dec/20 10:41 PM,28/Oct/23 3:09 AM,04/Dec/20 10:41 PM,,,,,,,,,,,,,,,,0,,,,,,The fabcar and asset-transfer-basic samples have had their Go clients pinned to a commit level of the GoSDK to pick up a bug fix.  This is now rolled into RC1 of the SDK.  The samples should be updated to depend on this new release.,,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hlv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Few documentation links on docs_guide.md are showing error,FAB-18368,46390,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,dibyaranjangmail,dibyaranjangmail,04/Dec/20 10:44 PM,11/Jan/21 3:47 PM,28/Oct/23 3:09 AM,11/Jan/21 3:47 PM,,,,,,,,,,,,fabric-docs,,,,0,Documentation,,,,,"# On master, navigate to docs/source/docs_guide.md (contributing documentation) > Repository Folders.
 # Fix the highlighted links.

*Note:* These links are working fine on the public facing documentation though, but on github; not sure if i am doing something wrong: [https://hyperledger-fabric.readthedocs.io/en/latest/docs_guide.html]",,btl5037,dibyaranjangmail,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Dec/20 10:46 PM;dibyaranjangmail;docs_guide-1.png;https://jira.hyperledger.org/secure/attachment/18859/docs_guide-1.png","04/Dec/20 10:46 PM;dibyaranjangmail;docs_guide.png;https://jira.hyperledger.org/secure/attachment/18858/docs_guide.png",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hm3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,dibyaranjangmail,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Dec/20 12:07 AM;btl5037;Documentation is not meant to be read on GitHub. It is written in a manner to be generated on ReadTheDoc's, or locally by building it. It can only be read after being parsed and generated by the sphinx templating engine.;;;","05/Dec/20 4:29 AM;dibyaranjangmail;Does it mean that it's ok if the links are not working on GitHub? What I wonder is how come its working well with most of other links on GitHub, but not for highlighted ones.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use the osnadmin CLI to create channels in the test-network,FAB-18369,46391,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jcastrence,wlahti,wlahti,05/Dec/20 2:30 AM,22/Jan/21 1:20 AM,28/Oct/23 3:09 AM,22/Jan/21 1:20 AM,,,,,,,,,,,,fabric-samples,,,,0,ipm,,,,,"Update createChannel.sh [createChannelTx()|https://github.com/hyperledger/fabric-samples/blob/master/test-network/scripts/createChannel.sh#L21-L31] to create an application channel genesis block and [createChannel()|https://github.com/hyperledger/fabric-samples/blob/master/test-network/scripts/createChannel.sh#L48-L65] to use the `osnadmin channel join` command. 

Refer to the [create a channel without a system channel tutorial|https://hyperledger-fabric.readthedocs.io/en/release-2.3/create_channel/create_channel_participation.html?highlight=create%20channel] for more info/details on the channel participation API's usage.",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,FAB-17712,,,No,,Unset,No,,,"1|i00wur:0idqxor",,,,No,Unset,v2.x,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client root CA configuration for Raft cluster facing port does not work,FAB-18370,46406,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,lmars,lmars,09/Dec/20 12:19 AM,09/Dec/20 12:19 AM,28/Oct/23 3:09 AM,,v1.4.9,,,,,,,,,,,,,,,1,,,,,,"Please, see conversation in FAB-15648 started from [this comment|https://jira.hyperledger.org/browse/FAB-15648?focusedCommentId=70928&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-70928] and steps for reproduce.

My configuration for orderer:
{code:yaml}
- ORDERER_GENERAL_TLS_ENABLED=false

- ORDERER_GENERAL_CLUSTER_SERVERCERTIFICATE=/etc/hyperledger/cluster/server.crt
- ORDERER_GENERAL_CLUSTER_SERVERPRIVATEKEY=/etc/hyperledger/cluster/server.key
- ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/cluster/server.crt
- ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/cluster/server.key
- ORDERER_GENERAL_CLUSTER_ROOTCAS=[/etc/hyperledger/cluster/ca.crt]

- ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/cluster/ca.crt]
- ORDERER_GENERAL_TLS_CLIENTROOTCAS=[/etc/hyperledger/cluster/ca.crt]
- ORDERER_GENERAL_TLS_CLIENTAUTHREQUIRED=true
{code}

All options above for configuring client root CAs for Raft cluster port do not work and an error occurs:
{code}
[core.comm] ServerHandshake -> ERRO 03e TLS handshake failed with error tls: failed to verify client's certificate: x509: certificate signed by unknown authority server=Orderer remoteaddress=172.22.0.1:57934
{code}
",,const,lmars,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hmr:",,,,Unset,Unset,,"1) disable TLS for orderer client facing port (ORDERER_GENERAL_TLS_ENABLED=false)
2) have nothing about TLS inside configuration block
3) configure separate port for Raft cluster
4) start orderer and you will have: ""TLS handshake failed with error tls: failed to verify client's certificate: x509: certificate signed by unknown authority"" error in the log",,Unset,,,,,,Unset,,Unset,,(Please add usage information),const,lmars,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peers misaligned when uploading data and never gets realigned due to missing blocks,FAB-18371,46412,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Invalid: Environment Issue,,ricba1995,ricba1995,10/Dec/20 7:25 PM,12/Dec/20 5:48 AM,28/Oct/23 3:09 AM,11/Dec/20 12:34 AM,v2.2.0,v2.2.1,v2.2.2,v2.3.0,,,,,,,,fabric-gossip,fabric-ledger,fabric-peer,,0,,,,,,"My setup: cluster of 3 machines with HLF 2.3.0 (but tested also with 2.2.0), on each machine 1 orderer, 1 peer, 1 ca. Peer belongs to the same organization.

Both orderers and peers have a leader and peer's leader sends blocks to others via gossip protocol.

This same cluster was correctly working in 1.4.3 and never reported such kind of issues.

 

I have a data uploader which constantly sends data to the blockchain.

It seems that when the operation number is high and a lot of performances are needed, the follower peers are not able to receive new blocks from the leader and they get misaligned.

 

On peer2, which is follower, I read on the log:
 * *19:10:16:367 UTC [gossip.state] func1 -> WARN 543f3[0m Block [765420] received from gossip wasn't added to payload buffer: Ledger height is at _{color:#FF0000}765398{color}_, cannot enqueue block with sequence of 765420*
 * Suddenly after, block *{color:#FF0000}_765398_{color}* is received and the peer re-start aligning himself, but he already collected a lot of blocks, so he start validating them, until:
 * Block *{color:#4c9aff}765415{color}* is correctly added:

*[34m2020-12-09 19:10:22.086 UTC [kvledger] commit -> INFO 54a1e[0m [cbichannel] Committed block [{color:#4c9aff}765415{color}] with 9 transaction(s) in 25ms (state_validation=1ms block_and_pvtdata_commit=18ms state_commit=3ms) commitHash=[7f27a8efafa07825bbef57b94d17bff9d45c9675746749802c2d38d7679acfe4]*
 * But suddenly after, I start receiving this error again:

*[33m2020-12-09 19:10:22.169 UTC [gossip.state] func1 -> WARN 54a1f[0m Block [765440] received from gossip wasn't added to payload buffer: Ledger height is at {color:#ff8b00}765416{color}, cannot enqueue block with sequence of 765440*
 * From now on, the ledger heigth is *{color:#ff8b00}765416{color}* (last block received is {color:#4c9aff}765415{color}) and the peer is not able to enqueue more blocks, even if it is receiving them.
 * For example, 20 minutes after, I am more than 400 blocks higher on the peer leader:

*[33m2020-12-09 19:39:30.803 UTC [gossip.state] func1 -> WARN 5d1f3[0m Block [770947] received from gossip wasn't added to payload buffer: Ledger height is at {color:#ff8b00}765416{color}, cannot enqueue block with sequence of 770947*
 * If I look for block {color:#ff8b00}*765416*{color} on the logs, of course I cannot find the point where it does receive the block, while 417-418 are correctly received but cannot be added due to ledger height (because 765416 is missing). It is clear that a block is missing somehow and the peer is not able to recover it.
 * In this case I just miss 1 block, but I also experienced casistics where more than 1 block was missing

The only manual fix I found was to stop all the peers and restart as first the one misaligned. In this way it gets aligned by orderers. After that, if I have another peer misaligned, I turn down the one just aligned and I do the same thing with the other. Once they are all aligned, I can bring up all the peers again. Of course this is a manual fix and cannot be a production operation. 

 

I had this same cluster and data throughput in 1.4.3 and never had this kind of issues. It seems like a performance issue due to recent versions of HLF. Did anyone notice this bug or is it planned to be fixed?",,ricba1995,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18378,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hnf:",,,,Unset,Unset,,"Bring a cluster of 3 peers online, stress chaincode operations and data upload and follower peer or peers will get misaligned. After that, they cannot re-align anymore.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),ricba1995,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Dec/20 8:43 PM;yacovm;Gossip receives blocks from the orderer, and many peers in parallel, and dumps them all into a re-ordering buffer from which it reads in ascending order to commit into the ledger. 

The buffer has a limited size, since your memory has a limited size.

If the next block you need is block 100 but you get blocks 200, 232, 598, etc. - if you put them inside the buffer, you won't have room for the blocks from 101 to, say, 120. Therefore gossip refuses to add blocks that are too far in the future into that buffer. 

If the leader has progressed too much and a follower peer is too far in the past, the only way it can get blocks is if it asks for them explicitly from a remote peer via  a point to point block replication protocol (AKA ""state transfer"").

Starting from 2.2 this protocol is [disabled|https://github.com/hyperledger/fabric/blob/release-2.2/sampleconfig/core.yaml#L234] by default. ;;;","10/Dec/20 10:11 PM;ricba1995;Thanks for the answer [~yacovm]. What is the correct approach then?

If the gossip block dissemination will be deprecated, is correct to receive blocks directly from orderer? In this case, this operation is considered to have an higher cost, so why this will be deprecated? I am sure that if I will make peers constantly align from orderer I will decrease performances and maybe create a bottleneck;;;","10/Dec/20 10:39 PM;yacovm;If you want to offload your orderer and you fear it has insufficient bandwidth then use gossip but turn on state transfer. 
Otherwise make all peers leaders so they all connect to the ordering service. ;;;","10/Dec/20 11:36 PM;ricba1995;Thanks for the answer again [~yacovm]. I turned peer election to false and now peers correctly align with orderer, but this creates a bottleneck.

Aligning via orderer costs more as I said and the peers are not able to align missing blocks and at the same time process new transactions, I have a series of MVCC conflicts right away.

This seems the correct procedure because I read that gossip block dissemination will be deprecated, but this seems not to work perfectly at the moment. Anything else to suggest?;;;","11/Dec/20 12:33 AM;yacovm;
{quote}
Aligning via orderer costs more as I said and the peers are not able to align missing blocks and at the same time process new transactions, I have a series of MVCC conflicts right away.{quote}

Yes, during the block commit, there is a write lock on the entire channel. During chaincode execution, there is a read lock on the entire channel. 

In [theory|https://arxiv.org/abs/1911.12711] this can be solved, if you don't care about couchDB rich queries, but this solution is not in Fabric at the moment and probably never will be.

{quote}
This seems the correct procedure because I read that gossip block dissemination will be deprecated, but this seems not to work perfectly at the moment. Anything else to suggest?{quote}
It will be deprecated but then according to you, it will create a bottleneck (what bottleneck?)
{quote}I turned peer election to false and now peers correctly align with orderer, but this creates a bottleneck.{quote}



;;;","11/Dec/20 12:35 AM;yacovm;I hope you don't mind I closed your issue, since there is no real bug here, it's just that Fabric has... certain problems.;;;","11/Dec/20 12:50 AM;ricba1995;The bottleneck is that a peer starts being misaligned, so it starts getting blocks from the orderer, which is not fast as from gossip. So new transactions in this peer will not be done due to MVCC conflict. At the same time maybe other peers have this issue and they will start accumulating MVCC issues. At a certain point there will be 90% MVCC errors and just few transactions will be validated. This is what I experienced myself with my network.;;;","11/Dec/20 1:01 AM;yacovm;{quote}The bottleneck is that a peer starts being misaligned, so it starts getting blocks from the orderer, which is not fast as from gossip. {quote}

How is it not as fast as gossip? The blocks are created at the orderers, so sending a block from a peer directly to an orderer should be faster than sending it first to some peer and then to another peer.;;;","11/Dec/20 1:35 AM;ricba1995;That's not actually true, gossip is faster, that's why is suggested do be used from documentation. Having just 1 peer receiving blocks and using it to disseminates is better.

From HLF doc: [https://hyperledger-fabric.readthedocs.io/en/release-2.1/gossip.html]

_Static leader election allows you to manually define one or more peers within an organization as leader peers. Please note, however, that *having too many peers connect to the ordering service may result in inefficient use of bandwidth*._ ;;;","11/Dec/20 1:55 AM;yacovm;Yes, having too many may result in inefficient use of bandwidth. But you have 3 peers in total, that's not a lot. 
;;;","11/Dec/20 2:01 AM;ricba1995;Well that's strange because it's really consuming a lot of bandwidth. As a rough, I am consuming around 2000 transactions each 90sec.;;;","11/Dec/20 2:20 AM;yacovm;A typical transaction is around 4KB so 2000 of them is 8MB which is really negligible even if you send this data 3 times. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test client generation using existing swagger definitions,FAB-18372,46413,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,tsharris,tsharris,11/Dec/20 12:34 AM,17/Apr/21 12:09 AM,28/Oct/23 3:09 AM,17/Apr/21 12:09 AM,,,,,,,,,,,,fabric-orderer,,,,0,help-wanted,,,,,"Add a check to the makefile (similar to check-swagger) that ensures a client can be built, used correctly, and then cleanup. Refer to the [docs|https://goswagger.io/generate/client.html#generate-an-api-client-from-a-swagger-spec] for instructions on how to generate the client. ",,tsharris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-17712,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zyw8",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tsharris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Dec/20 1:51 AM;tsharris;In this [commit|[https://github.com/stephyee/fabric/commit/5ac1c1c0240c24646d89e2e99bf2cb2dfdf26bd8] ], I was able to manually generate a client using *swagger-codegen* and test it using a simple program to list channels. 

Note: This does add a new dependencies. There are other tooling options for client generation.  ;;;","06/Jan/21 11:58 PM;tsharris;For now,  the work done here confirms a client can be generated from the annotations. However this will need to be revisited to integrate into fabric with consideration to the amount of dependencies required. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetHistoryForKey API with both start and end pointers,FAB-18373,46414,,Story,Backlog,FAB,Fabric,software,denyeart,,,High,,,ricba1995,ricba1995,11/Dec/20 8:55 PM,11/Dec/20 8:55 PM,28/Oct/23 3:09 AM,,v2.x,,,,,,,,,,,fabric-ledger,fabric-peer,fabric-tools,,0,,,,,,"In 1.4.3 it was given a pointer to the first state of the chain by using GetHistoryForKey API.

Thanks to the iterator it was possible to navigate the chain from start to end.

In newer versions of HLF the iterator now starts from the end of the chain, so the last element.

My chaincode was done to navigate in a certain way and this breaks the mechanism. Also, to navigate from start to end, the only thing I can do is to reverse an array and this could be an intensive operation with long chains. 

I think that having both pointers would grant more chaincode possibilities to developers and is a really needed thing.",,ricba1995,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|i01hnv:",,,,No,Unset,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),ricba1995,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ProposalResponsePayloads do not match - proposal response error for the invoking chaincode,FAB-18374,46415,,Story,Backlog,FAB,Fabric,software,denyeart,,,High,,,deenuchaturvedi,deenuchaturvedi,11/Dec/20 9:58 PM,11/Dec/20 9:58 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,I have developed a chaincode which is working file with one member. but when I am trying to install and invoking in multimember channel it is throwing error.  ProposalResponsePayloads do not match - proposal response error for the invoking chaincode...... please look into it,,deenuchaturvedi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ho3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),deenuchaturvedi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a Fabric Deprecations topic,FAB-18375,46416,,Documentation,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,pandrejko,pandrejko,11/Dec/20 11:06 PM,09/Feb/21 12:42 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-docs,,,,0,,,,,,,,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/21 4:25 AM;pandrejko;Fabric Deprecations.png;https://jira.hyperledger.org/secure/attachment/18881/Fabric+Deprecations.png","14/Jan/21 12:52 AM;pandrejko;Screen Shot 2021-01-13 at 10.52.10 AM.png;https://jira.hyperledger.org/secure/attachment/18880/Screen+Shot+2021-01-13+at+10.52.10+AM.png",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:x",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Dec/20 11:09 PM;pandrejko;+{color:#172b4d}*Potential deprecations:*{color}+

Old Lifecycle

Kafka Orderer consensus

Old ledger upgrade

-cryptogen?-

Migrating from Kafka to Raft kafka_raft_migration.md

Docker (peer container?)

 

+*Future:*+

Plug-in support

Rollback/reset

System Channel

 ;;;","14/Jan/21 12:53 AM;pandrejko; !Screen Shot 2021-01-13 at 10.52.10 AM.png|thumbnail! 

https://jira.hyperledger.org/browse/FAB-15574

Discussion available on 6/24/20 Contributor's Meeting recording.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add debug trace logging to endorsement/PKCS11 code paths,FAB-18376,46418,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,wlahti,wlahti,12/Dec/20 3:54 AM,12/Dec/20 4:12 AM,28/Oct/23 3:09 AM,,v1.4.9,,,,,,,,,,,,,,,0,,,,,,There is insufficient trace logging available in the endorsement and PKCS11 paths to diagnose certain issues that may arise using PKCS11. Additional trace logs should be added  in/around https://github.com/hyperledger/fabric/blob/v1.4.2/bccsp/pkcs11/pkcs11.go#L94 to aide with future potential issues.,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hoj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
private data collection allows orgs with no r/w access to delete registers,FAB-18377,46419,,Bug,Unverified,FAB,Fabric,software,denyeart,,,High,,denyeart,icarrascol,icarrascol,12/Dec/20 4:17 AM,16/Mar/21 12:23 AM,28/Oct/23 3:09 AM,,v2.1.0,,,,,,,,,,,fabric-ledger,,,,0,chaincode,privatedata,,,,"Hello everyone, i dont know if this is the intended behaviour or a bug but, lets say you have 2 organizations each one with a private data collection set up to: 


{code:java}
    ""memberOnlyRead"": true,
    ""memberOnlyWrite"": true,
{code}

They have access to their own collection but not the other orgs collection, they cant query or write on the other org collection either. What i would expect from setting these parameters to true is that there is no access from org1 to org 2 collection and vice versa. What i dont understand that org1 can delete private data from org2, this is shown in fabric samples asset transfer secured agreement [https://github.com/hyperledger/fabric-samples/blob/master/asset-transfer-secured-agreement/chaincode-go/asset_transfer.go#L372]

i replicated this using node sdk and chaincode too. i dont understand and it is not explained anywere, is this behaviour intended?

 

 ",,icarrascol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqwii",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),icarrascol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Warn users if peer configuration may lead to peers be stuck,FAB-18378,46420,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,12/Dec/20 5:48 AM,14/Dec/20 9:49 AM,28/Oct/23 3:09 AM,14/Dec/20 12:08 AM,v2.2.0,,,,,,2.3.1,v2.2.2,v2.4.0,,,fabric-gossip,,,,0,,,,,,"Fabric 2.2 made gossip state transfer be [disabled by default|https://jira.hyperledger.org/browse/FAB-16435]. 

When a peer is a gossip follower, it does not pull blocks from the ordering service, and relies on the leader peer of its organization to forward blocks directly or indirectly. 

However, if a peer misses a block and the rest of the peers in its organization advance too much, it will never catch up because its state transfer is disabled.

Of course, setting the peer to be a static leader and disabling leader election solves this problem, however users may upgrade their Fabric version without changing their configuration or deployment scripts, which set the peer to use leader election, or even be static followers.

I suggest to add a warning the will hint users of this problem.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18371,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hoz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yacovm,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.3,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/20 6:35 AM;yacovm;https://github.com/hyperledger/fabric/pull/2209;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
staticcheck - gossip/comm,FAB-18379,46429,39221,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChaoZhang99,ChaoZhang99,ChaoZhang99,15/Dec/20 9:14 PM,15/Dec/20 11:13 PM,28/Oct/23 3:09 AM,15/Dec/20 11:13 PM,,,,,,,,,,,,,,,,0,,,,,,"comm/comm_impl.go:435:15: error strings should not be capitalized (ST1005)

comm/comm_impl.go:453:15: error strings should not be capitalized (ST1005)

comm/comm_impl.go:458:15: error strings should not be capitalized (ST1005)

comm/comm_impl.go:547:12: error strings should not be capitalized (ST1005)

comm/comm_impl.go:565:10: error strings should not be capitalized (ST1005)",,ChaoZhang99,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hqr:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ChaoZhang99,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
staticcheck - gossip/discovery,FAB-18380,46430,39221,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChaoZhang99,ChaoZhang99,ChaoZhang99,16/Dec/20 12:02 AM,16/Dec/20 10:50 PM,28/Oct/23 3:09 AM,16/Dec/20 10:50 PM,,,,,,,,,,,,,,,,0,,,,,,"discovery/discovery_test.go:818:8: don't use Yoda conditions (ST1017)

discovery/discovery_test.go:826:8: don't use Yoda conditions (ST1017)

discovery/discovery_test.go:1780:4: unnecessary guard around call to delete (S1033)",,ChaoZhang99,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hqz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ChaoZhang99,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stop using deprecated outputAnchorPeersUpdate in test-network,FAB-18381,46436,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,17/Dec/20 4:10 AM,12/Jan/21 4:54 PM,28/Oct/23 3:09 AM,12/Jan/21 1:38 AM,,,,,,,v2.2.2,v2.3.1,,,,fabric-samples,,,,0,ipm,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxoi",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,release-2.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Dec/20 7:20 AM;wlahti;https://github.com/hyperledger/fabric-samples/pull/394;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
staticcheck - gossip/privdata,FAB-18382,46437,39221,Sub-task,To Do,FAB,Fabric,software,denyeart,,,Medium,,ChaoZhang99,ChaoZhang99,ChaoZhang99,17/Dec/20 10:24 PM,23/Dec/20 1:26 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"privdata/coordinator_test.go:38:2: package ""github.com/hyperledger/fabric/gossip/privdata/mocks"" is being imported more than once (ST1019)

 privdata/coordinator_test.go:39:2: other import of ""github.com/hyperledger/fabric/gossip/privdata/mocks""

privdata/coordinator_test.go:42:2: package ""github.com/hyperledger/fabric/msp/mgmt"" is being imported more than once (ST1019)

 privdata/coordinator_test.go:43:2: other import of ""github.com/hyperledger/fabric/msp/mgmt""

privdata/reconcile.go:123:5: ineffective break statement. Did you mean to break out of the outer loop? (SA4011)",,ChaoZhang99,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hrv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ChaoZhang99,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Dec/20 10:36 PM;ChaoZhang99;https://github.com/hyperledger/fabric/pull/2226;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No unit test code for SetOption in token-erc-20 in fabric-samples,FAB-18383,46439,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Specia1,Specia1,19/Dec/20 9:23 AM,13/Jan/21 2:54 PM,28/Oct/23 3:09 AM,13/Jan/21 2:54 PM,,,,,,,,,,,,,,,,0,,,,,,"SetOption is implemented in [tokenERC20.js|https://github.com/hyperledger/fabric-samples/tree/master/token-erc-20/chaincode-javascript], but test code is not implemented.

 
 ",,Specia1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hsb:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unit Test,,(Please add usage information),Specia1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
admin certs and tls certs expired after 1 year ,FAB-18384,46440,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,adarshaJha,adarshaJha,19/Dec/20 5:56 PM,27/Apr/23 9:56 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"I noticed in HLf admincerts and tls certs by default have expiration date of 1 year. In my case they have expired and my orderer and peer nodes are giving bad certificate error.
Is there any way to do certificate rotation ? I don't want to loose any data as the network is in production enviroment.",,adarshaJha,jianlu,kentbull,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15700,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hsj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),adarshaJha,jianlu,kentbull,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Dec/20 9:28 PM;yacovm;Look at [this|https://hyperledger-fabric.readthedocs.io/en/latest/raft_configuration.html#local-configuration] document.
Start your orderers with *TLSHandshakeTimeShift* configured to be some time (in hours) in the past, like *TLSHandshakeTimeShift=96h* for 4 days. Also enable *General.Authentication.NoExpirationChecks* as noted [here|https://hyperledger-fabric.readthedocs.io/en/latest/raft_configuration.html#certificate-expiration-related-authentication].

And when you send your transaction from [peer CLI|https://hyperledger-fabric.readthedocs.io/en/latest/commands/peerchannel.html] you need to use *--tlsHandshakeTimeShift*. 

[~joe-alewine] [~pandrejko] [~denyeart] we might want to document these things in a consolidated manner (new record under the operations guides?) under some title such as ""recovering expired certificates"" so it'll be easy for users to locate.;;;","19/Dec/20 10:02 PM;adarshaJha;[~yacovm] thanks for replying . I am facing this issue in production environment. Can you please tell where to add this TLSHandshakeTimeShift param ? 
I'm using hyperledger fabric 1.4 version using raft ordering service. I unable to find it in the document above.;;;","20/Dec/20 12:04 AM;adarshaJha;[~yacovm] I've passed it and after restarting the orderer . i am seeing in logs an error :-  Failed to initialize msp signing certs expired. ;;;","20/Dec/20 1:16 AM;yacovm;Oh the orderer's signing cert expired too? Or is it the peer CLI signing certs?;;;","20/Dec/20 1:17 AM;yacovm;If it is the admin's signing certs you can just issue a new admin from the CA.
If it's the orderer's signing cert, you can issue new ones and replace them.;;;","20/Dec/20 1:37 AM;adarshaJha;[~yacovm] I have added it in my orderer.yaml and restarted the node but my container got exited and giving me error 

{code:java}
2020-12-19 16:09:38.664 UTC [orderer.common.server] initializeLocalMsp -> FATA 001 Failed to initialize local MSP: signing identity expired 28h58m38.664163036s ago

{code}

;;;","20/Dec/20 1:45 AM;yacovm;Just replace it with a fresh one and you'll be fine;;;","21/Dec/20 5:30 PM;adarshaJha;[~yacovm] I have created new orderer signing certs for all my orderers and i have also inclused  TLSHandshakeTimeShift and General.Authentication.NoExpirationChecks . All my orderer containers are up now but they are giving me consenter error. 


{code:java}
I do not belong to channel system-channel or am forbidden pulling it (not in the channel), skipping chain retrieval
{code}
;;;","21/Dec/20 6:28 PM;yacovm;You were supposed to replace the enrollment certificates of the orderers, not the TLS certificates of the orderers;;;","21/Dec/20 8:45 PM;adarshaJha;can i put back the old TLS certs again and just replace the new enrollment certs ? will it work ?;;;","21/Dec/20 9:04 PM;yacovm;That's what I said. You need to replace enrollment certificates and put back the old TLS certs and use the time shift configuration to make the TLS handshake think it traveled back in time. ;;;","25/Dec/20 11:31 PM;adarshaJha;I have tried adding new enrollment certificates of the orderers and also added TLSHandshakeTimeshift and General.Authentication.NoExpirationChecks but I am getting this error in my orderer logs :- 

I'm using hyperledger-fabric 1.4.2 version.

{code:java}
2020-12-24 18:17:22.479 UTC [core.comm] ServerHandshake -> ERRO 7d4 TLS handshake failed with error remote error: tls: bad certificate server=Orderer remoteaddress=1**.*0.0.*:****

{code}
 ;;;","27/Dec/20 9:20 PM;adarshaJha;[~yacovm] I upgraded my binaries from 1.4.2 to 1.4.9 version and now it worked. My orderers went up and achieved raft consensus but whenever i up my peer containers then they aren't able to communicate with orderers. They are giving this error :-


{code:java}
2020-12-27 11:56:18.822 UTC [core.comm] ServerHandshake -> ERRO 262 TLS handshake failed with error remote error: tls: bad certificate server=Orderer remoteaddress
{code}
=;;;","27/Dec/20 11:08 PM;yacovm;Make non-expired certificates for your admins and orderers and then issue config updates to replace them according to the documentation guides.;;;","27/Dec/20 11:31 PM;adarshaJha;I have replaced peer nodes with new certs (both msp and tls certs) and now I'm trying to fetch config using peer node by passing flags with orderer ca certs. I can see logs in orderer with TLS handshake failed with error remote error:


{code:java}
 tls: bad certificate server=Orderer remoteaddress 
{code}

with the corresponding peer node's IP and peer return this log : 
{code:java}

Error: failed to create deliver client: orderer client failed to connect to orderer1.example.com:7050: failed to create new connection: context deadline exceeded

{code}

;;;","06/Jan/21 5:01 PM;adarshaJha;[~yacovm] Thanks for your support . I added this       {code:java}
 - ORDERER_GENERAL_TLS_TLSHANDSHAKETIMESHIFT=1240h
{code}
in my docker-base.yaml file and upgraded my binaries to 1.4.9 and my orderers are able to communicate with each other.  

Now Do I have to update my orderer config to the channel for new binaries ? to be able to work with 1.4.9 or i can move ahead ?;;;","06/Jan/21 6:07 PM;yacovm;The configuration file is baked into the docker image, so you only need to keep in mind the environment variables. Since you see it works, then it works.;;;","06/Jan/21 10:40 PM;adarshaJha;[~yacovm] my orderers are up but now i am tryint to fetch the config from orderer cli but I am getting this error : -


{code:java}
2021-01-06 13:30:48.123 UTC [core.comm] ServerHandshake -> ERRO 53a4 TLS handshake failed with error remote error: tls: bad certificate server=Orderer remoteaddress
{code}

Am i moving in the right direction ? 
;;;","06/Jan/21 11:36 PM;yacovm;You might want to use the time shift option here as well or to change the clock of your laptop.

You can also fetch it from a peer;;;","07/Jan/21 3:03 AM;adarshaJha;@Yacov how to add timeshift option in cli? Just like i set it as a env variable in yaml file? Like export ORDERER_GENERAL_TLS_TLSHANDSHAKETIMESHIFT=700H ? ;;;","07/Jan/21 3:25 AM;yacovm;https://hyperledger-fabric.readthedocs.io/en/latest/commands/peerchannel.html;;;","07/Jan/21 9:15 PM;adarshaJha;[~yacovm] thanks for sharing the link. It helped a lot and i was able to fetch the config using --tlshandshaketimeshift but Now after modifying the system channel config file when I'm am trying to update it using:

{code:java}
peer channel update -f certs_update_in_envelope.pb -c $CHANNEL_NAME -o $ORDERER_CONTAINER:7050 --tls --cafile $ORDERER_CA --tlsHandshakeTimeShift 1240h
{code}

I'm getting this error:

{code:java}
Error: got unexpected status: BAD_REQUEST -- error applying config update to existing channel 'system-channel': error authorizing update: error validating DeltaSet: policy for [Value]  /Channel/Consortiums/SampleConsortium/org3MSP/MSP not satisfied: signature set did not satisfy policy
{code}

Can you please help me with this 
;;;","08/Jan/21 6:48 PM;yacovm;You need to sign it with several organizations, not just a single one.;;;","08/Jan/21 7:24 PM;adarshaJha;[~yacovm] do I have to sign this with the newly generated certs or with the older ones?

I have tried with both and wasn't able to update with either. When I have tried with new ones it reproduced the same error and while updating with the older certs I got this errror:


{code:java}
2021-01-08 08:32:51.979 UTC [main] InitCmd -> ERRO 001 Cannot run peer because error when setting up MSP of type bccsp from directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/org3.com/users/Admin@org3.com/msp: signing identity expired 501h22m51.979380795s ago 
{code}
;;;","08/Jan/21 8:15 PM;yacovm;You need with the older ones, obviously. Otherwise anyone could kidnap your entire network without authorization, right?

 

You can try to reverse the date in your machine from with you run the peer CLI. I know it's far from optimal but that's what we have right now.;;;","08/Jan/21 10:36 PM;adarshaJha;[~yacovm] Thanks for sharing this info. I tried reversing the date in my machine and was able to successfully sign the config but when i try to update it . I am getting this error :- 


{code:java}
error: got unexpected status: BAD_REQUEST -- error applying config update to existing channel 'libra-system-channel': initializing channelconfig failed: could not create channel Orderer sub-group config: setting up the MSP manager failed: CA Certificate is not valid, (SN: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx): could not obtain certification chain: the supplied identity is not valid: x509: certificate has expired or is not yet valid
{code}

;;;","08/Jan/21 10:58 PM;yacovm;[~jyellick] any ideas? Why is it rejected after broadcast expiration filter? I thought we don't have expiration checks in the orderer except from the expiration filter which is not this case;;;","09/Jan/21 8:16 PM;adarshaJha;[~yacovm] Do i have to generate new tls certs for the orderer before doing the config update  ?;;;","11/Jan/21 7:26 PM;adarshaJha;[~yacovm] I'm at the final step of updating the config and I'm getting this error .  Do i have to update orderer certs one by one ? 


{code:java}
Error: got unexpected status: SERVICE_UNAVAILABLE -- update of more than one consenter at a time is not supported, requested changes: add 6 node(s), remove 6 node(s)

{code}
;;;","11/Jan/21 8:02 PM;yacovm;Yes you can only add/remove one at a time;;;","12/Jan/21 4:40 PM;adarshaJha;[~yacovm] I tried updating one orderer at a time. I was able to successfully update two orderers but when i tried updating the third orderer then after updation when i restarted that orderer my raft lost its consensus as in my case i have 6 orderers . i checked the logs and saw that the newly updated orderers were not able to communicate with orderer4 , 5 and 6 . So my question is do i have to restart my orderer peers after upation of all certs one by one  ? 
;;;","12/Jan/21 5:07 PM;yacovm;No, you don't need to restart them.;;;","12/Jan/21 5:57 PM;adarshaJha;[~yacovm] so , Should i update them one by one after I have update all orderer certs ( newly generated ) in the config. 
Do i have to follow any particular order to restart all of my orderers ? like from orderer6 to orderer1 or orderer1 to orderer6 ? ;;;","12/Jan/21 6:05 PM;yacovm;Do config update for orderer 1
Restart it with the new certificate

Do config update of orderer2
Restart it with the new certificate
...
...

Do config update of orderer6
Restart it with the new certificate;;;","12/Jan/21 8:49 PM;adarshaJha;We did the same thing but then we lost consensus between orderers, so just want to enquire if we have to first update config with all org's msp admin and tls certs or not.

In total we have to change three org MSP certs:

admins 
tls root certs

Then the tls certs for consenters for 6 orderers.

Can you please guide the sequence.;;;","25/Jan/21 4:01 PM;adarshaJha;[~yacovm] i have tried it many times now and was able to successfully update on all the 4 channels i have but the moment i restart my orderer it gets out of consensus and is never able to get back in consensus. Please suggest something as it's been a month now for me and it's my production network. what should i do ? i feel like i am completely stuck now . ;;;","25/Jan/21 5:12 PM;yacovm;Perhaps send an email to the mailing list. JIRA is not an ideal platform to get technical assistance ;;;","08/Feb/21 8:40 PM;adarshaJha;[~yacovm] Thanks for your help. I was able to rotate my expired certs for orderers by reducing the size to two orderers and also added a new orderer with new certs and also rotated my peers certs.  My network is running now with the new certs  but when i try to invoke the chaincode. I get this error :- 

{code:java}

Error: 2 UNKNOWN: identity expired
[ERROR] Query - Error: 2 UNKNOWN: identity expired
{code}


;;;","08/Feb/21 8:57 PM;yacovm;You're invoking with an expired certificate ;;;","09/Feb/21 8:46 PM;adarshaJha;Thanks , i was able to invoke the transaction and the chaincode also went up. seems like everything is working fine now but when i try to instantiate a newly installed chaincode , I am getting this error :- 
{code:java}
Error: could not assemble transaction, err proposal response was not successful, error code 500, msg instantiation policy violation: signature set did not satisfy policy
{code}
Am i missing something ? I think this would be the last piece of puzzle. ;;;","15/Feb/21 5:23 PM;adarshaJha;Hey i solved this, actually there was a problem with my chaincode that's why it wasn't able to instantiate. Finally i was able to recover my network  with expired admin and tls certs. 
Thanks [~yacovm] for your help. 
It took me 40 days to solve this. I tried so many things and learnt so many things too. ;;;","15/Feb/21 5:26 PM;yacovm;Glad you solved it;;;"
Failed to connect to database 'fabriccaserver' after i restarted my ca container,FAB-18385,46443,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,adarshaJha,adarshaJha,21/Dec/20 10:59 PM,22/Dec/20 5:21 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"my fabric-ca server was working fine with ssl-mode verify full but i had to restart my fabric-ca container. after restarting it is unable to find the databases. 

2020/12/21 13:52:45 [DEBUG] Connecting to PostgreSQL server, using connection string: host=postgres.biltilink.com port=5432 user=**** password=**** dbname=fabriccaserver sslmode=verify-full sslrootcert=/tmp/postgresCerts/root.crt sslcert=/tmp/postgresCerts/server.crt sslkey=/tmp/postgresCerts/server.key
2020/12/21 13:52:45 [WARNING] Failed to connect to database 'fabriccaserver'
2020/12/21 13:52:45 [DEBUG] Connecting to PostgreSQL server, using connection string: host=postgres.biltilink.com port=5432 user=**** password=**** dbname=postgres sslmode=verify-full sslrootcert=/tmp/postgresCerts/root.crt sslcert=/tmp/postgresCerts/server.crt sslkey=/tmp/postgresCerts/server.key
2020/12/21 13:52:45 [WARNING] Failed to connect to database 'postgres'
2020/12/21 13:52:45 [DEBUG] Connecting to PostgreSQL server, using connection string: host=postgres.biltilink.com port=5432 user=**** password=**** dbname=template1 sslmode=verify-full sslrootcert=/tmp/postgresCerts/root.crt sslcert=/tmp/postgresCerts/server.crt sslkey=/tmp/postgresCerts/server.key
2020/12/21 13:52:45 [WARNING] Failed to connect to database 'template1'
2020/12/21 13:52:45 [INFO] 172.26.0.1:45380 POST /enroll 500 0 ""enroll handler failed to initialize DB: Failed to connect to Postgres database. Postgres requires connecting to a specific database, the following databases were tried: [fabriccaserver postgres template1]. Please create one of these database before continuing""",,adarshaJha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hsr:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),adarshaJha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode breaks all peers in a network,FAB-18386,46450,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,CaJIbHuK,CaJIbHuK,25/Dec/20 2:07 AM,11/Jun/21 7:22 PM,28/Oct/23 3:09 AM,27/Jan/21 5:13 AM,,,,,,,v1.4.10,v2.2.2,v2.3.1,,,fabric-peer,,,,0,,,,,,"If a chaincode written in node.js puts empty Buffer to a state, peers can't sync newly created block and panic with the following error:
{code:java}
tion=12.86278mstion=12.86278ms2020-12-24 16:45:59.401 UTC [gossip.privdata] StoreBlock -> INFO 493 [defaultchannel] Received block [6] from buffer2020-12-24 16:45:59.401 UTC [committer.txvalidator] Validate -> INFO 494 [defaultchannel] Validated block [6] in 0mspanic: Nil value not allowed. Instead call 'Delete' function
goroutine 453 [running]:github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb.(*UpdateBatch).PutValAndMetadata(...) /go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statedb.go:196github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/validation.(*publicAndHashUpdates).applyWriteSet(0xc0005ddd00, 0xc00407d560, 0xc002e6ce60, 0xc002f39380, 0xc00330b600, 0x4, 0x4) /go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/validation/types.go:100 +0x9c2github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/validation.(*validator).validateAndPrepareBatch(0xc002f3c360, 0xc00407d520, 0xc00330b701, 0xc0036aa580, 0xc00330b701, 0xc00044d230) /go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/validation/validator.go:105 +0x407github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/validation.(*CommitBatchPreparer).ValidateAndPrepareBatch(0xc002f36ba0, 0xc00407d300, 0x18f1c01, 0x2a, 0xc00330b870, 0x1, 0x1, 0x0, 0x0) /go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/validation/batch_preparer.go:91 +0x22dgithub.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr.(*LockBasedTxMgr).ValidateAndPrepare(0xc002e12d00, 0xc00407d300, 0x18e7a01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...) /go/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbased_txmgr.go:196 +0x247github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).CommitLegacy(0xc002b80f30, 0xc00407d300, 0xc002e6cd58, 0x0, 0x0) /go/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:474 +0x1c4github.com/hyperledger/fabric/core/committer.(*LedgerCommitter).CommitLegacy(0xc002fd1f00, 0xc00407d300, 0xc002e6cd58, 0x1, 0xc002e18820) /go/src/github.com/hyperledger/fabric/core/committer/committer_impl.go:62 +0x47github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock(0xc002f163c0, 0xc0036aa580, 0x0, 0x0, 0x0, 0xc0030774d0, 0x0) /go/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:224 +0xbfagithub.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock(0xc000264c60, 0xc0036aa580, 0x0, 0x0, 0x0, 0x3, 0x0) /go/src/github.com/hyperledger/fabric/gossip/state/state.go:786 +0xa2github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc000264c60) /go/src/github.com/hyperledger/fabric/gossip/state/state.go:576 +0x3a6created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider /go/src/github.com/hyperledger/fabric/gossip/state/state.go:273 +0x8a8rpc error: code = Unknown desc = Error: No such container: 8907da2462535c6fc8e5c65eb7268fc7d6a306372fd230e48f6464adf85e3f85%
{code}

After that peers never recover. Only solution is to setup completely fresh network.

Sample chaincode that reproduces the error can be found here:
[https://github.com/CaJIbHuK/hlf-broken-chaincode/tree/master]",,ales,C0rWin,CaJIbHuK,calanais,denyeart,jyellick,manish-sethi,mastersingh24,Senthil1,wenjian,yacovm,,,,,,,,,,,,Security issue,,,,,,,,,,,,,,,,,,,,,,,,,ales,C0rWin,calanais,cthtuf,denyeart,jyellick,manish-sethi,neewy,Senthil1,toxzic,wenjian,yacovm,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqwf",,,,Unset,Unset,v2.x,"1. Setup a network with 1 peer organization (1 peer) and 1 orderer organization (1 orderer, raft), 1 channel. (Fabric 2.2.0)
1. Install, approve and commit the following chaincode on a channel: https://github.com/CaJIbHuK/hlf-broken-chaincode/tree/master
1. Try to invoke `break` method of a chaincode",,Unset,,,,,,Unset,,Unset,,(Please add usage information),ales,C0rWin,CaJIbHuK,calanais,denyeart,jyellick,manish-sethi,mastersingh24,Senthil1,wenjian,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Dec/20 3:10 AM;yacovm;The reason it happens is that the protobuf received from the node.js shim has a value which is a 0-byte slice but is not nil:

The below code:
{code:java}
	raw, _ := base64.StdEncoding.DecodeString(""CgNrZXkSABoA"")
	ps := &pb.PutState{}
	proto.Unmarshal(raw, ps)
	fmt.Println(ps.Value == nil, ps.Value)
	fmt.Println(ps)
{code}
prints:
{code:java}
false []
key:""key"" 
{code}
This does not reproduce in Golang chaincode with neither *PutState* of *[]byte("""")*, or of *nil* or of *[]byte{}*. 
 In golang, the protobuf library puts nil in the Value if it is of 0 length while in node.js it doesn't:
{code:java}
	raw, _ := base64.StdEncoding.DecodeString(""CgNrZXkSABoA"")
	ps := &pb.PutState{}
	proto.Unmarshal(raw, ps)
	fmt.Println(ps.Value == nil, ps.Value) // prints false []
	raw2, _ := proto.Marshal(ps)
	fmt.Println(base64.StdEncoding.EncodeToString(raw2)) // prints CgNrZXk=
	proto.Unmarshal(raw2, ps)
	fmt.Println(ps.Value == nil, ps.Value) // prints true []
{code}


;;;","25/Dec/20 3:25 AM;yacovm;I would like to say that the below patch, fixes this problem, however I am not that familiar with the ledger code to be sure that there is no further code paths I missed so maybe [~manish-sethi]   or [~denyeart] can take a look?

Furthermore, while I reproduced the bespoken scenario (with the chaincode provided by [~CaJIbHuK]), and confirmed that the below patch indeed prevents the panic, fixing it is not enough, as this panic should have never been there in the first place.
The reason is that currently, there exist a transaction which the validation code accepts, but the ledger code rejects, and this is wrong by definition. 

I argue that we should audit the ledger code and see if we have similar cases where the ledger code assumes transactions have properties which are not validated in the validation code, and panics as a result.

{code}
diff --git a/core/ledger/kvledger/txmgmt/rwsetutil/rwset_proto_util.go b/core/ledger/kvledger/txmgmt/rwsetutil/rwset_proto_util.go
index ae9cfc9d0..65d6f9899 100644
--- a/core/ledger/kvledger/txmgmt/rwsetutil/rwset_proto_util.go
+++ b/core/ledger/kvledger/txmgmt/rwsetutil/rwset_proto_util.go
@@ -343,7 +343,7 @@ func newProtoVersion(height *version.Height) *kvrwset.Version {
 }
 
 func newKVWrite(key string, value []byte) *kvrwset.KVWrite {
-       return &kvrwset.KVWrite{Key: key, IsDelete: value == nil, Value: value}
+       return &kvrwset.KVWrite{Key: key, IsDelete: len(value) == 0, Value: value}
 }
 
 func newPvtKVReadHash(key string, version *version.Height) *kvrwset.KVReadHash {
diff --git a/core/ledger/kvledger/txmgmt/txmgr/lockbased_txmgr.go b/core/ledger/kvledger/txmgmt/txmgr/lockbased_txmgr.go
index f1976b57c..73729373a 100644
--- a/core/ledger/kvledger/txmgmt/txmgr/lockbased_txmgr.go
+++ b/core/ledger/kvledger/txmgmt/txmgr/lockbased_txmgr.go
@@ -612,7 +612,7 @@ func extractStateUpdates(batch *privacyenabledstate.UpdateBatch, namespaces []st
                        nsu.PublicUpdates = append(nsu.PublicUpdates,
                                &kvrwset.KVWrite{
                                        Key:      key,
-                                       IsDelete: versionedValue.Value == nil,
+                                       IsDelete: len(versionedValue.Value) == 0,
                                        Value:    versionedValue.Value,
                                },
                        )

{code};;;","25/Dec/20 4:16 AM;yacovm;Bottom line, this needs to:
 # Be fixed in *master, LTS* branches
 # Be mentioned in release-notes.;;;","25/Dec/20 7:16 PM;yacovm;On 2nd thought, the above code simply fixes the peer endorser path but not the commit path, so an altered peer can create a transaction with a nil value and no delete bit set which will cause a panic.

What we probably need is one of the two:

1. Make the commit path artificially turn zero length slices as deletes:
{code:java}
diff --git a/core/ledger/kvledger/txmgmt/validation/batch_preparer.go b/core/ledger/kvledger/txmgmt/validation/batch_preparer.go
index ee27bcefe..5ebe285cc 100644
--- a/core/ledger/kvledger/txmgmt/validation/batch_preparer.go
+++ b/core/ledger/kvledger/txmgmt/validation/batch_preparer.go
@@ -8,6 +8,7 @@ package validation
 
 import (
        ""bytes""
+       util2 ""github.com/hyperledger/fabric/common/util""
 
        ""github.com/hyperledger/fabric-protos-go/common""
        ""github.com/hyperledger/fabric-protos-go/ledger/rwset""
@@ -262,6 +263,7 @@ func preprocessProtoBlock(postOrderSimulatorProvider PostOrderSimulatorProvider,
                        containsPostOrderWrites = true
                }
                if txRWSet != nil {
+                       canonizeIsDelete(txRWSet)
                        txStatInfo.NumCollections = txRWSet.NumCollections()
                        if err := validateWriteset(txRWSet, validateKVFunc); err != nil {
                                logger.Warningf(""Channel [%s]: Block [%d] Transaction index [%d] TxId [%s]""+
@@ -281,6 +283,23 @@ func preprocessProtoBlock(postOrderSimulatorProvider PostOrderSimulatorProvider,
        return b, txsStatInfo, nil
 }
 
+var (
+       hashOfNothing = util2.ComputeSHA256(nil)
+)
+
+func canonizeIsDelete(txRWSet *rwsetutil.TxRwSet) {
+       for _, rws := range txRWSet.NsRwSets {
+               for _, w := range rws.KvRwSet.Writes {
+                       w.IsDelete = w.IsDelete || len(w.Value) == 0
+               }
+               for _, hrws := range rws.CollHashedRwSets {
+                       for _, w := range hrws.HashedRwSet.HashedWrites {
+                               w.IsDelete = w.IsDelete || bytes.Equal(w.ValueHash, hashOfNothing)
+                       }
+               }
+       }
+}
+
 func processNonEndorserTx(
        txEnv *common.Envelope,
        txid string,

{code}


2. Make the commit path invalidate transactions with empty slices that are not deletes;;;","26/Dec/20 5:44 PM;mastersingh24;Thanks for the analysis [~yacovm]

Given the intended method for _deleting_ keys is to call _Delete_, I think we should mark transactions with nil values as invalid.  We already have too much code which does clever things for users.

We are *lucky* in this case as blocks are not being committed before the panic, so making this change should a simple fix and not require any capability?

 ;;;","26/Dec/20 7:51 PM;yacovm;{quote}Given the intended method for deleting keys is to call Delete, I think we should mark transactions with nil values as invalid.
{quote}
The thing is, that the peer code is [doing just that|https://github.com/hyperledger/fabric/blob/37b2bff4b8e449ef9f112d89555f845144cb1f4e/core/ledger/kvledger/txmgmt/rwsetutil/rwset_proto_util.go#L345], when it tries to build the read-write set, so unless I'm overlooking something - if you *PutState(""key"", nil)* in the shim, it will turn into a delete operation. The panic deep down in the ledger code is due to the detection of the incorrect execution of the upper layer (that turns nil writes into deletes).

 
{quote}We already have too much code which does clever things for users.{quote}
The problem is not that the code is doing clever things for users, but that you need clever people to understand it :) 
Every time I dive into the validation code I gape at how overly complex it is. If we add another check to the validation code, we might want to make it in a place where the [RWSet is already parsed|https://github.com/hyperledger/fabric/blob/4afc136de48efd9d4ade415c937a71531484f859/core/common/validation/statebased/validator_keylevel.go#L86], to not further slow down the peer validation.

{quote}We are lucky in this case as blocks are not being committed before the panic, so making this change should a simple fix and not require any capability?{quote}

The panic happens before the block is written to the disk, in the phase where it parses the block and assembles a state update batch so you're correct, any change in the validation code about transactions that are deletes with zero length writes will always be re-executed in all peers, because all peers before the change, always panic.

If the panic would have happened after the block was written to disk, but before the stateDB updates would've been applied, then anyone that has been hit by this problem would still remain in a crash loop, and anyone with an upgraded version would've been invalidated the transaction, so in that sense, consistency would have still be preserved (vacuously) despite the deviation in the validation of these kind of transactions.
;;;","06/Jan/21 7:32 AM;manish-sethi;I investigated on this to understand how we reached here and whether we have some constraints on what we can do to fix the problem. As far as I recall, in the very beginning, the intention was to disallow both a `nil` value and a `zero-length byte array`. However, there was a proposal to allow these special values under this [issue|https://github.com/hyperledger-archives/fabric/issues/936]. The consensus built on this issue was to allow `zero-lengh byte array` but not the `nil` value. The [initial code for for read-write set in v1.0.0-alpha|https://github.com/hyperledger/fabric/blob/fa3d88cde177750804c7175ae000e0923199735c/core/ledger/kvledger/txmgmt/rwset/rwset.go#L302] that had custom Marshaling/Unmarshaling, accounted for this. However, it appears that the [chaincode side of changes|https://github.com/hyperledger-archives/fabric/pull/2072] (including a test) were never merged.

In the meanwhile, we decided to replace the custom Marshaling/Unmarshaling code for using proto messages for RWSet. The protobuf in golang does not preserve the difference between a `zero-length byte array` and a `nil`. So, we are here. But good thing is that, as I looked in the code back, up to release-1.0, this problem exists since beginning. In other words, though there was a decision to treat `zero-lengh byte array` as a regular value, it was never fully implemented. Hence, any transaction of this type, processed with any previous version would have also caused a panic. So, we are free to pick any interpretation of `zero-length byte array`.

My preference would be to dump the original feature request and not to allow the special value of `zero-lengh byte array` as it seems that many solutions did not need this over the years. Moreover, the protobuf is not consistent in preserving the `zero-lengh byte array` in golang and hence, this would need us to extend the proto messge with a special flag. So, If we have agreement on this then we can go with the following.

 - During simulation, as done in Yacov's patch, treating `zero-length byte array` same as `nil` is an obvious choice. If we had a fresh choice, perhaps returning an error during simulation for both `nil` and `zero-lengh byte array` would have been a better choice. But since, we already over-interpret for `nil` value which is not easy to reverse and for the sake of consistency, it's better to treat `zero-lengh byte array` the same way.
 - During validation, I tend to prefer to invalidate the transaction if a delete marker is absent and the value is either `nil` or `zero-lenght byte array`(thought, the latter is not possible, given the protobuf behavior in golang; still better to cover the check). Otherwise, there will be two different ways to delete at the commit time and one of them will never be prepared by the simulation code that could cause further confusion.;;;","06/Jan/21 8:35 AM;yacovm;{quote}the value is either `nil` or `zero-lenght byte array`(thought, the latter is not possible, given the protobuf behavior in golang; still better to cover the check).
{quote}
I think it's quite possible. As I demonstrated above, the below variable *raw* holds bytes which, when un-marshaled, result in a *PutState* with a *Value* field that is a zero sized byte slice.

The fact that Golang marshaling ""skips"" zero sized slices, doesn't mean anything about a custom crafted protobuf by an adversary. It's even fairly simple to do - just take an endorsement from a real correct peer code (Golang), open it to extract the read-write-set bytes, and then use javascript protobuf library to marshal the same read-write-set with an empty payload. The resulting read-write set bytes would be different, and when Fabric peers would open it, it would be a zero length slice that is not nil.
{code:java}
	raw, _ := base64.StdEncoding.DecodeString(""CgNrZXkSABoA"")
	ps := &pb.PutState{}
	proto.Unmarshal(raw, ps)
	fmt.Println(ps.Value == nil, ps.Value) // prints false []
{code}
 

I agree with invalidating the transaction as I noted above:
{code:java}
2. Make the commit path invalidate transactions with empty slices that are not deletes
{code}
The big question is where in the validation code do we do that? If we do it too far from the read-write-set processing it would incur a performance penalty so maybe we can do it [somewhere here|https://github.com/hyperledger/fabric/blob/master/core/common/validation/statebased/validator_keylevel.go#L86-L142]? This code should be common to all versions starting from 1.3 right? ( [~ales] / [~jyellick] probably know best);;;","06/Jan/21 2:03 PM;manish-sethi;{quote}The value is either `nil` or `zero-lenght byte array`(thought, the latter is not possible, given the protobuf behavior in golang; still better to cover the check).
{quote}
When I say this, I mean that its not possible for a rwset prepared by the fabric simulation code. Yes, still the check should be added in the validation for the reason that you mentioned above.

On the location for the fix. The approach I prefer is to add checks at one place and keeping the code close to the rwset related code, so as to make sure that the checks are consistent with what the simulation code produces. For instance, in [this package|https://github.com/hyperledger/fabric/tree/master/core/ledger/kvledger/txmgmt/rwsetutil], we can enhance [this function|https://github.com/hyperledger/fabric/blob/55d651ed0bbbeee468f7a5136ab8de7d33650e3c/core/ledger/kvledger/txmgmt/rwsetutil/rwset_proto_util.go#L166]

Other place that we already have one similar check about the legitimacy of the key-values is [here|https://github.com/hyperledger/fabric/blob/55d651ed0bbbeee468f7a5136ab8de7d33650e3c/core/ledger/kvledger/txmgmt/validation/batch_preparer.go#L315]. However, the check for this bug more relates to the structure if rw-set and for this reason, I prefer the former place.;;;","08/Jan/21 1:34 PM;manish-sethi;Upon investigating while working on the fix for this issue, I found that there is a further complexity in the context of private data. In the case of private data, in the current code, the hashed-write-set would contain the appropriate hash of the value as ""hash(zero-length byte array)"", while the actual write-set would contain a `nil` (due to lossy transformation caused by the marshal-unmarshal cycle of golang protos). Now, the peers that receives the hashed write-set only (either ineligible peers or the eligible peer that does not receive the actual private data during commit), will commit this transaction with no issues. However, the peers (the eligible peer) that receives the actual write-set would panic (just as in the case of public data above). We have following options here, none of these options are perfect but we have to make a call.

1) For both public and private data, treat the `nil` value as legitimate `zero-length byte array` during commit, if the explicit delete marker is absent. 
This gives uniform meaning of this type of transaction across public and private data. However, the downside is that this gives different behaviour for chaincode in golang v/s chaincode in node, when the API SetState/SetPrivateData is invoked with `zero-length byte array`. In the golang chaincode, it would be equivalent to invoke DeleteState (like it is today), and in node chaincode it would be equivalent to set the value to `zero-length byte array` (as actually intended). We will document this behavior and discourage folks to use either `nil` or `zero-length byte array` as value. 

2) As we decided for the transaction with public data, we invalidate the transaction that contains a hashed write-set, if the hashed write-set contains ""hash(zero-length byte array)"" and the delete flag is missing. However, the downside is that this change will be retrospective and we will have to issue a note to the community that if some network is using this special value they will need to reset the peers. Though, we don't expect many folks to be affected otherwise, they would have hit the panic while committing the actual private data, either with the transaction or later via reconciliation path for the missing data. But still, it's a retrospective change and warrants a note.;;;","08/Jan/21 6:20 PM;yacovm;Manish, I don't understand why in the first option you can't just convert both public and private writes with nil values *and* zero length values to delete operations? And isn't the hash of a nil the same as the hash of a zero length byte array? It should be easily detectable for private data as well.;;;","08/Jan/21 11:10 PM;manish-sethi;Yacov, the problem with interpreting this as delete in the context of private data is somewhat similar to what is listed in (2) - i.e, there is a chance that a tuple <keyHash, valueHash, version> would have already updated in the statedb. In the ""real"" delete case, the existing tuple is actually deleted. This may again lead to state-forks. However, this option will be cause a relatively milder message than in the option (2), i.e., we can limit our message to rebuild the statedb instead of resetting the peer. Also, as noted before, this will be a special case in the commit path that would never be generated by the simulation code.

Having stated the above, as I mentioned before, none of these are perfect solutions and I am open to any of these that seems least bad, including the delete option, if the above caveats seem better than compared to the previously mentioned two options.;;;","09/Jan/21 12:23 AM;yacovm;I see, then why can't we do (1) with a slight change - when you build the write-set in the peer during simulation, you look if you have a WRITE that is nil, and then you *do not* make it a delete. Won't this align both node.js and golang shims to the same semantics?;;;","09/Jan/21 12:45 AM;manish-sethi;I considered this but then ruled out because, it redefines the meaning of this for existing golang chaincodes - i.e., suddenly applications start behaving differently. We can bring this similarity (or rather disallow these values altogether and return error) later in 3.0 when we are a bit more flexible in allowing the breaking API changes and tell folks to upgrade their chaincodes.;;;","09/Jan/21 1:05 AM;yacovm;I personally support option (1) and when (more like if) there will be a Fabric 3.0 we can align golang chaincode semantics to node.js semantics by extending the protobuf to include some flag that makes the peer treat a nil payload with node.js semantics;;;","09/Jan/21 2:02 AM;denyeart;I also agree with #1 as the least bad solution, as it does not change validation status for private transactions and does not change semantics.;;;","13/Jan/21 3:21 AM;manish-sethi;Just now, it crossed my mind that one more caveat we will need to keep in mind with our chosen solution (i.e., #1) - which is that even though node based chaincode will be able to write a value of 'zero-length byte array' but I don't think that during GetState it will be able to get it back (because, the golang code will marshal the response, making the value as nil). So, for the chaincode, it is not possible to differentiate whether the key exists or not. Essentially, we will simply have to say that the behaviour for this value is undefined - Any second thought?;;;","15/Jan/21 3:03 AM;manish-sethi;As noted in the above comment, the solution #1 requires significant changes in order to add the support for a zero-length byte array as a legitimate value. The changes may include introducing another API in shim (e.g., Exists(key)) in order for a chaincode to identify the difference between a key does not exist and a key exists with a 'zero-length byte array'. Still, we will have a difference in the semantics for this special value in the chaincodes written in golang v/s chaincodes written in node js and the node solutions cannot use that with upgrading their chaincodes.

Keeping the above in consideration, discussed with Yacov and Dave offline and finalized to go for a simpler approach - i.e., treat the write set for a key with a value 'nil' or 'zero-length byte array' as a delete for the key. This approach is simpler in implementation and brings the common behavior in chaincodes in golang v/s other languages.

However, as noted before, this approach brings a retrospective change for node chaincode users and we will need to mention in the release notes something of the following effects. 

This change impacts you, if your solution 
1) uses a node chaincode, and
2) the chaincode uses  PutPrivateData API with value as an empty string, and
3) the chaincode uses GetPrivateDataHash API for making a decision in the context of a transaction

If your solution satisfies all 1, 2, and 3, you will need to reset/rebuild the peer. If your solution satisfies 1 and 2 only, you can just rebuild the statedb. Otherwise, you can ignore this message.

On a side note, confirmed further that this issue appears mainly because the node shim uses [protobufjs|https://www.npmjs.com/package/protobufjs] library. The [google-protobuf|https://www.npmjs.com/package/google-protobuf] npm library produces the same bytes similar to golang protobuf implementation.;;;","27/Jan/21 5:12 AM;manish-sethi;https://github.com/hyperledger/fabric/pull/2305 - PR for 'master'
https://github.com/hyperledger/fabric/pull/2309 - PR for 'release-2.3'
https://github.com/hyperledger/fabric/pull/2310 - PR for 'release-2.2'
https://github.com/hyperledger/fabric/pull/2312 - PR for 'release-1.4';;;",,,,,,,,,,,,,,,,,,,,,,,
Hyperledger Fabric with SoftHSM2,FAB-18387,46451,,Task,Backlog,FAB,Fabric,software,denyeart,,,High,,,phanitta,phanitta,25/Dec/20 2:20 AM,11/Jan/21 1:05 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"Hi I have been trying to get Hyperledger Fabric (v2.0.1) to connect to SoftHSM2 (v2.5.0), but haven't been successful at that. The main purpose is to create a secret key for symmetric encryption/decryption and securely store the key inside the SoftHSM2. I plan to send unencrypted data from the Fabric smart contract to be encrypted by SoftHSM2 and send back to smart contract to be stored on blockchain ledger. Likewise, I plan to send encrypted data from blockchain to be decrypted by SoftHSM2 and unencrypted data back to smart contract then the users.

My issue is when I package my chaincode and invoke smart contract method, Fabric is not able to find the file with .so extension. In my case, the file is libsofhsm2.so. I've tested my code outside of Fabric to make sure that key generation, encryption, and decryption functions work.

Should I try to package Fabric chaincode manually into the .tar.gz file? Would that be an correct approach? I first thought that Fabric smart contract would be able to locate external file on my computer but maybe I was wrong? I have also looked into configuring Fabric to use PKCS11 but wasn't successful ([https://hyperledger-fabric.readthedocs.io/en/release-2.0/dev-setup/build.html?highlight=softhsm2]). I thought that this configuration is for Fabric to store user private keys in SoftHSM2 but all I want to store is a secret key which is separate from this. I don't know if this is relevant but the smart contract is written in Javascript instead of Go. Also, I'm using Fabric sample scripts in fabric-samples directory to build docker images for me.

Any help or suggestion would really be appreciated. Thank you!",,denyeart,phanitta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01huj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,phanitta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/21 1:05 PM;denyeart;[~phanitta] I don't understand the scenario, are you trying to encrypt within chaincode based on a peer's secret key? Wouldn't the secret key be different on each peer?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New orderer couldn't replicate the ledger if TLS is disabled,FAB-18388,46452,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,lmars,lmars,25/Dec/20 7:51 PM,26/Dec/20 12:46 AM,28/Oct/23 3:09 AM,,v1.4.9,,,,,,,,,,,fabric-orderer,,,,2,,,,,,"We use a new feature from FAB-15648, so we have TLS configured for Raft internal communications only.

We found that it is not possible to add a new organization (with orderer instance), because replication in the cluster always tries to create a TLS connection :(

New orderer log:
{code}2020-12-10 08:42:20.303 UTC [orderer.common.cluster.replication] probeEndpoint -> WARN 23e Failed connecting to {dockerhost:17050 []}: failed to create new connection: context deadline exceeded{code}

Exist orderer log:
{code}2020-12-11 03:14:27.925 UTC [grpc] newHTTP2Transport -> DEBU fa5 grpc: Server.Serve failed to create ServerTransport: connection error: desc = ""transport: http2Server.HandleStreams received bogus greeting from client: \""\\x16\\x03\\x01\\x00\\xa9\\x01\\x00\\x00\\xa5\\x03\\x03\\x81\\xae\\xb8W\\xc4\\xdc\\v\\xcc\\xc1\\xd1oR\\xeb\""""{code}

Suspicious lines in the code:
https://github.com/hyperledger/fabric/blob/da55272a75e66da2c91befe89430dee8b9580df9/orderer/common/cluster/replication.go#L370-L371",,const,lmars,lskor 1,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hur:",,,,Unset,Unset,,"1) disable TLS for orderer client facing port (ORDERER_GENERAL_TLS_ENABLED=false)
2) add new orderer instance to the configuration block
3) start new orderer and you will have: ""[orderer.common.cluster.replication] probeEndpoint -> WARN 23e Failed connecting to {dockerhost:17050 []}: failed to create new connection: context deadline exceeded"" error in the log",,Unset,,,,,,Unset,,Unset,,(Please add usage information),const,lmars,lskor 1,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Dec/20 12:10 AM;yacovm;That feature was made so you can have a TLS terminating proxy in front of the orderer, not that you will disable TLS and transfer all your data in cleartext :);;;","26/Dec/20 12:26 AM;lmars;All our nodes are inside VPN. Insecure transfer isn't a problem for us.

{quote}That feature was made so you can have a TLS terminating proxy in front of the orderer{quote}
Are you sure? Where is it described? Thanks to this feature, the client is sending transactions to orderer(s) in cleartext right now! ;);;;","26/Dec/20 12:46 AM;yacovm;{quote}Are you sure? Where is it described? {quote}

Well that's just my opinion. TLS doesn't add any overhead (AES GCM has hardware support on modern CPUs) so I don't see why not always use it. 

What about peers? Do you also disable TLS on peers? 

Setting that aside, it should be pretty straight forward to fix, do you want to push a change? ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-samples doesn't install on M1 Mac (ARM),FAB-18389,46454,,Bug,Returned,FAB,Fabric,software,denyeart,,,Medium,,,mcoblenz,mcoblenz,26/Dec/20 2:00 AM,23/Sep/22 7:37 AM,28/Oct/23 3:09 AM,,v2.3.0,,,,,,,,,,,,,,,5,,,,,,"Installing fabric-samples on an Apple Silicon Mac (M1) doesn't work. Note that I have the Docker Preview installed, which runs on M1.

 

 
{code:java}
$ curl -sSL https://bit.ly/2ysbOFE | bash -s
 
Clone hyperledger/fabric-samples repo
 
===> Changing directory to fabric-samples
fabric-samples v2.3.0 does not exist, defaulting master
 
Pull Hyperledger Fabric binaries
 
===> Downloading version 2.3.0 platform specific fabric binaries
===> Downloading:  https://github.com/hyperledger/fabric/releases/download/v2.3.0/hyperledger-fabric-darwin-arm64-2.3.0.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100     9  100     9    0     0     47      0 --:--:-- --:--:-- --:--:--    47
tar: Error opening archive: Unrecognized archive format
==> There was an error downloading the binary file.
 
------> 2.3.0 platform specific fabric binary is not available to download <----
{code}
 ",,asr001,btl5037,dalduk,gpietro,iocm,lucsa,mastersingh24,mcoblenz,moicalcob,niall32,qaaa,silliman,stanyakimov,yubingy,zmillionaire,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Sep/22 7:27 AM;stanyakimov;Screenshot 2022-09-22 at 11.23.58 PM.png;https://jira.hyperledger.org/secure/attachment/19703/Screenshot+2022-09-22+at+11.23.58+PM.png","23/Sep/22 7:32 AM;stanyakimov;Screenshot 2022-09-22 at 11.31.56 PM.png;https://jira.hyperledger.org/secure/attachment/19705/Screenshot+2022-09-22+at+11.31.56+PM.png","23/Sep/22 7:34 AM;stanyakimov;Screenshot 2022-09-22 at 11.34.15 PM.png;https://jira.hyperledger.org/secure/attachment/19706/Screenshot+2022-09-22+at+11.34.15+PM.png",,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hv7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),asr001,btl5037,dalduk,gpietro,iocm,lucsa,mastersingh24,mcoblenz,moicalcob,niall32,qaaa,silliman,stanyakimov,yubingy,zmillionaire,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Dec/20 6:19 PM;mastersingh24;[~mcoblenz] - Can you try to download 

{quote}https://github.com/hyperledger/fabric/releases/download/v2.3.0/hyperledger-fabric-darwin-arm64-2.3.0.tar.gz{quote}

directly and then try to untar it?;;;","28/Dec/20 10:59 PM;mcoblenz;There's no file at that URL. This page: [https://github.com/hyperledger/fabric/releases/tag/v2.3.0]

lists only:
[hyperledger-fabric-darwin-amd64-2.3.0.tar.gz|https://github.com/hyperledger/fabric/releases/download/v2.3.0/hyperledger-fabric-darwin-amd64-2.3.0.tar.gz]
[hyperledger-fabric-linux-amd64-2.3.0.tar.gz|https://github.com/hyperledger/fabric/releases/download/v2.3.0/hyperledger-fabric-linux-amd64-2.3.0.tar.gz]
[hyperledger-fabric-windows-amd64-2.3.0.tar.gz|https://github.com/hyperledger/fabric/releases/download/v2.3.0/hyperledger-fabric-windows-amd64-2.3.0.tar.gz];;;","31/Dec/20 1:07 PM;btl5037;The new M1 Macs are Apples first foray into ARM. We don't support ARM as it is today. You would need to compile all of the images and binaries yourself. We've had this discussion in the past and have frequently punted on it. With Apple being all in on ARM now, and Microsoft's supposed support for ARM, it's not unreasonable to say we should at least find a path of least resistance for running the test-network on ARM.

Microsoft does support ARM in our CICD platform now, so we can test/build against it;;;","31/Dec/20 1:33 PM;mcoblenz;I was kind of hoping to run the amd64 image under emulation, but I'm not sure how/whether that works with Docker.;;;","31/Dec/20 1:56 PM;btl5037;So I could help you out to bootstrap it with the amd64 images, as the latest tech preview of Docker for M1 Mac does support emulation, you just need to add the `--platform linux/amd64` equivalent to the compose files. Let me take it for a spin on an M1 over on the Mac Stadium Cloud and see if it's possible (probably take me a few days to get through it with the holidays).;;;","31/Dec/20 1:58 PM;btl5037;Note: Adding the platform on the M1 preview will force emulation to use AMD instead or ARM;;;","10/Jan/21 11:45 PM;moicalcob;¿Any update on this? I would like to run Hyperledger Fabric on M1;;;","11/Jan/21 1:23 AM;btl5037;I haven't put documentation together yet on this, but you can run this under x86 emulation by bootstrapping Fabric-Samples using this method to build the binaries for native ARM:
 * Create the hyperledger directory on the GOPATH
 ** 
{code:java}
mkdir -p $GOPATH/src/github.com/hyperledger{code}

 * Bootstrap Fabric-Samples
 ** 
{code:java}
cd $GOPATH/src/github.com/hyperledger && curl -sSL http://bit.ly/2ysbOFE | bash -s -b{code}

 * 
 ** The `-b` flag will skip downloading the binaries
 * Clone Fabric
 ** 
{code:java}
git clone https://github.com/hyperledger/fabric $GOPATH/src/github.com/hyperledger/fabric{code}

 * Clone Fabric-CA
 ** 
{code:java}
git clone https://github.com/hyperledger/fabric-ca $GOPATH/src/github.com/hyperledger/fabric-ca{code}

 * Change to the Fabric repo
 ** 
{code:java}
cd $GOPATH/src/github.com/hyperledger/fabric{code}

 * Build the Fabric binaries
 ** 
{code:java}
make native{code}

 * Copy the binaries to the Fabric-Samples repo
 ** 
{code:java}
mv build/bin $GOPATH/src/github.com/hyperledger/fabric-samples{code}

 * Copy sampleconfig directory to Fabric-Samples and rename to ""config'
 ** 
{code:java}
mv sampleconfig $GOPATH/src/github.com/hyperledger/fabric-samples/config{code}

 * Change to the Fabric-CA repo
 ** 
{code:java}
cd $GOPATH/src/github.com/hyperledger/fabric-ca{code}

 * Build the Fabric-CA-Client binary
 ** 
{code:java}
make fabric-ca-client{code}

 * Copy the Fabric-CA-Client binary to the Fabric-Samples `bin` directory
 ** 
{code:java}
mv bin/fabric-ca-client $GOPATH/src/github.com/hyperledger/fabric-samples/bin{code}

That's all, you can now change back into Fabric-Samples and run the test-network
 * 
{code:java}
cd $GOPATH/src/github.com/hyperledger/fabric-samples/test-network
{code};;;","11/Jan/21 12:54 PM;btl5037;You can also do this by building native ARM docker images, which I've also done and tested, but it's a little more work as you need to disable CGO;;;","13/Jan/21 7:30 PM;dalduk;Hi I have a problem when i try to build the fabric-ca-client binary, 
{code:java}
Building fabric-ca-client in bin directory ...
no required module provides package github.com/hyperledger/fabric-ca/cmd/fabric-ca-client: working directory is not part of a module
make: *** [bin/fabric-ca-client] Error 1
{code}
I've tried multiple things, and nothing seems to work for me. 
Is there an easy fix, or maybe you can show the process of building native ARM docker images? ;;;","13/Jan/21 9:54 PM;btl5037;Ah, you need to disable modules temporarily:
{code:java}
GO111MODULE=off make fabric-ca-client
{code}
 

 ;;;","09/Feb/21 4:56 PM;yubingy;I would like to ask for help on how to make native binary files using the M1 mac since I have been confused for a long time. Could anyone show us the instructions step by step?

{color:#4c9aff}+*23/Feb/21 update the recent progress---*+{color}

I've tried several times but when I make peer docker, the process was always stuck at

[building .build/docker/bin/peer operation not permitted] and the remaining steps cannot be executed. Hope someone can help me out.

Many thx!;;;","30/Mar/21 9:38 PM;zmillionaire;Hi I have a problem when i try to run /network.sh createChannel.

Environment: 
 * fabric latest
 * fabric-sample latest

{code:java}
./network.sh createChannel
Creating channel 'mychannel'.
If network is not up, starting nodes with CLI timeout of '5' tries and CLI delay of '3' seconds and using database 'leveldb
Generating channel genesis block 'mychannel.block'
/Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/../bin/configtxgen
+ configtxgen -profile TwoOrgsApplicationGenesis -outputBlock ./channel-artifacts/mychannel.block -channelID mychannel
2021-03-30 20:32:42.994 CST 0001 INFO [common.tools.configtxgen] main -> Loading configuration
2021-03-30 20:32:43.023 CST 0002 INFO [common.tools.configtxgen.localconfig] completeInitialization -> orderer type: etcdraft
2021-03-30 20:32:43.024 CST 0003 INFO [common.tools.configtxgen.localconfig] completeInitialization -> Orderer.EtcdRaft.Options unset, setting to tick_interval:""500ms"" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216
2021-03-30 20:32:43.024 CST 0004 INFO [common.tools.configtxgen.localconfig] Load -> Loaded configuration: /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/configtx/configtx.yaml
2021-03-30 20:32:43.035 CST 0005 INFO [common.tools.configtxgen] doOutputBlock -> Generating genesis block
2021-03-30 20:32:43.035 CST 0006 INFO [common.tools.configtxgen] doOutputBlock -> Creating application channel genesis block
2021-03-30 20:32:43.037 CST 0007 INFO [common.tools.configtxgen] doOutputBlock -> Writing genesis block
+ res=0
Creating channel mychannel
Using organization 1
+ osnadmin channel join --channelID mychannel --config-block ./channel-artifacts/mychannel.block -o localhost:7053 --ca-file /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --client-cert /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt --client-key /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key
+ res=1
+ osnadmin channel join --channelID mychannel --config-block ./channel-artifacts/mychannel.block -o localhost:7053 --ca-file /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --client-cert /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt --client-key /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key
+ res=1
+ osnadmin channel join --channelID mychannel --config-block ./channel-artifacts/mychannel.block -o localhost:7053 --ca-file /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --client-cert /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt --client-key /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key
+ res=1
+ osnadmin channel join --channelID mychannel --config-block ./channel-artifacts/mychannel.block -o localhost:7053 --ca-file /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --client-cert /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt --client-key /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key
+ res=1
Error: Post ""https://localhost:7053/participation/v1/channels"": EOFChannel creation failed
{code};;;","26/Aug/21 10:57 PM;asr001;[~btl5037]

now fabric 2.4 released some how I have done some changes , now my test-network not running. tried a lot of ways , can you please guide some other ways or any new workground for Hyperledger-fabric on M1 setup.

or procedure for building docker images to arm64, something which we run the network.

 

Thanks a lot in Adv;;;","15/Apr/22 11:52 PM;gpietro;I have forked the repository and updated the docker images to work on apple m1 chip. 
[https://github.com/gpietro/fabric-samples-apple-m1]

 ;;;","20/Apr/22 4:46 PM;niall32;[~gpietro]

Can you please explain how to use the repo?

 

So far I have been installing the fabric-samples with the:

{{curl -sSL https://bit.ly/2ysbOFE | bash -s}}

 command.

 

Thanks.;;;","21/Apr/22 4:33 PM;gpietro;[~niall32] it works the same as the fabric-samples, the only change is on the docker images and platform to be compatible with M1 chip.;;;","23/Sep/22 7:34 AM;stanyakimov;[~gpietro] I've cloned your repo and I've followed the tutorial for installing Fabric and Fabric Installs. I assume your repository should replace the [fabric-samples repo|https://hyperledger-fabric.readthedocs.io/en/latest/install.html#choosing-which-components]. If that's the case, I ended up with the same result as the following command still brings the old AMD64 container images:

!Screenshot 2022-09-22 at 11.23.58 PM.png|width=466,height=161!

 
{code:java}
./install-fabric.sh docker samples{code}
 

 

Containers after cloning *[fabric-samples-apple-m1|https://github.com/gpietro/fabric-samples-apple-m1]* and following the *[Getting Started - Install.|https://hyperledger-fabric.readthedocs.io/en/latest/getting_started.html]*


!Screenshot 2022-09-22 at 11.34.15 PM.png|width=376,height=173,thumbnail!

Where:
{code:java}
 peer lifecycle chaincode install basic.tar.gz {code}
Results in:

*!Screenshot 2022-09-22 at 11.31.56 PM.png|width=400,height=28,thumbnail!*;;;",,,,,,,,,,,,,,,,,,,,,,,,
channel byfn-sys-channel is not serviced by me,FAB-18390,46457,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,horsefall,horsefall,28/Dec/20 6:25 PM,14/Jan/21 5:28 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"This error occurred when I create a new channel
{code:java}
docker exec -e ""CORE_PEER_MSPCONFIGPATH=/tmp/hyperledger/org1/admin/msp""  cli-org1 peer channel create -c mychannel -f /tmp/hyperledger/org1/channel-artifacts/channel.tx -o orderer2-org0:7050 --outputBlock /tmp/hyperledger/org1/channel-artifacts/mychannel.block --tls --cafile /tmp/hyperledger/org1/peer1/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
{code}
output:
{code:java}
2020-12-28 08:52:15.246 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
Error: got unexpected status: SERVICE_UNAVAILABLE -- channel byfn-sys-channel is not serviced by me
{code}
 

create genesis.block:
{code:java}
./configtxgen -profile SampleMultiNodeEtcdRaft -channelID byfn-sys-channel -outputBlock ../channel-artifacts/genesis.block

{code}
create channel.tx:
{code:java}
./configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ../channel-artifacts/channel.tx -channelID $CHANNEL_NAME
{code}
 

orderer.yml:
{code:yaml}
version: '2'

networks:  awsome-network: 
services:  orderer1-org0:
 extends:  file: base/peer-base.yaml
 service: orderer-base
 container_name: orderer1-org0
 volumes:  - ../org0/orderer:/tmp/hyperledger/org0/orderer/
 - ../channel-artifacts:/tmp/hyperledger/org0/channel-artifacts
 ports:  - 7050:7050
 networks:  - awsome-network

orderer2-org0:
 extends:  file: base/peer-base.yaml
 service: orderer-base
 container_name: orderer2-org0
 image: hyperledger/fabric-orderer:1.4.8
 volumes:  - ../org0/orderer2:/tmp/hyperledger/org0/orderer/
 - ../channel-artifacts:/tmp/hyperledger/org0/channel-artifacts
 ports:  - 8050:7050
 networks:  - awsome-network

orderer3-org0:
 extends:  file: base/peer-base.yaml
 service: orderer-base
 container_name: orderer3-org0
 image: hyperledger/fabric-orderer:1.4.8
 volumes:  - ../org0/orderer3:/tmp/hyperledger/org0/orderer/
 - ../channel-artifacts:/tmp/hyperledger/org0/channel-artifacts
 ports:  - 9050:7050
 networks:  - awsome-network

orderer4-org0:
 extends:  file: base/peer-base.yaml
 service: orderer-base
 container_name: orderer4-org0
 image: hyperledger/fabric-orderer:1.4.8
 volumes:  - ../org0/orderer4:/tmp/hyperledger/org0/orderer/
 - ../channel-artifacts:/tmp/hyperledger/org0/channel-artifacts
 ports:  - 10050:7050
 networks:  - awsome-network

{code}
base/peer-base.yaml:
{code:yaml}
version: '2'

services:  orderer-base:  image: hyperledger/fabric-orderer:1.4.8
 environment:  - FABRIC_LOGGING_SPEC=DEBUG
 - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
 - ORDERER_GENERAL_GENESISMETHOD=file
 - ORDERER_GENERAL_GENESISFILE=/tmp/hyperledger/org0/channel-artifacts/genesis.block
 - ORDERER_GENERAL_LOCALMSPID=org0MSP
 - ORDERER_GENERAL_LOCALMSPDIR=/tmp/hyperledger/org0/orderer/msp
 # enabled TLS
 - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/tmp/hyperledger/org0/orderer/tls-msp/signcerts/cert.pem
 - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/tmp/hyperledger/org0/orderer/tls-msp/keystore/key.pem
 - ORDERER_GENERAL_CLUSTER_ROOTCAS=/tmp/hyperledger/org0/orderer/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
 - ORDERER_GENERAL_TLS_ENABLED=true
 - ORDERER_GENERAL_TLS_CERTIFICATE=/tmp/hyperledger/org0/orderer/tls-msp/signcerts/cert.pem
 - ORDERER_GENERAL_TLS_PRIVATEKEY=/tmp/hyperledger/org0/orderer/tls-msp/keystore/key.pem
 - ORDERER_GENERAL_TLS_ROOTCAS=[/tmp/hyperledger/org0/orderer/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem]
 working_dir: /opt/gopath/src/github.com/hyperledger/fabric
 command: orderer

{code}",,denyeart,horsefall,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hvv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,horsefall,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/21 12:33 PM;denyeart;[~tock] It looks like the error is from:

[https://github.com/hyperledger/fabric/blob/master/orderer/consensus/etcdraft/consenter.go#L171]

 

Could you clarify the meaning of the error and recommend a user friendly message so that users know what it means?;;;","14/Jan/21 5:24 PM;tock;[~denyeart] It seems to me that this is coming from a 1.4.8 image, no? 
i.e. `image: hyperledger/fabric-orderer:1.4.8` from the `orderer.yaml`

hence:
https://github.com/hyperledger/fabric/blob/51a3a52260f6228bdd57eb11cdf2a564c80c766d/orderer/consensus/etcdraft/consenter.go#L166

This message comes when a channel is created, but at a particular orderer O, that channel does not include O in its consenter set. In general that is not an error, as channels can be deployed on some orderers but not on others.  What is confusing is that the channel name here is `byfn-sys-channel` (the system channel) rather than `mychannel` (the channel the user is trying to add). 

In any event, this image is before the system channel removal (2.3), so I speculate this is an error in the sample setup by the user... (I assume it is a sample because I see byfn). We have to look at the profiles used to generate the genesis block and the channel creation tx in order to know what went wrong.

As to rewording the error statement, I think that maybe this is more informative:

```
errors.Errorf(""the channel being created [%s] does not contain this consenter [%s] in its consenters set, the channel is added to the inactive chain registry for tracking"", <channelID>, <consenter-id (to replace ""me"">)
```

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error: error getting chaincode bytes: failed to calculate dependencies: incomplete package: github.com/hyperledger/fabric-chaincode-go/shim/internal,FAB-18391,46461,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid: Works as Expected,abhisamant7,abhisamant7,abhisamant7,29/Dec/20 2:08 PM,04/Jan/21 6:14 PM,28/Oct/23 3:09 AM,04/Jan/21 6:14 PM,v2.2.0,,,,,,v2.2.0,,,,,,,,,0,help-wanted,,,,,"I am trying to package my chaincode in hyperledger fabric 2.2 however getting error as {{Error: error getting chaincode bytes: failed to calculate dependencies: incomplete package: github.com/hyperledger/fabric-chaincode-go/shim/internal}} but when same chaincode I used in hyperledger fabric 1.4.6 its work fine and I can install and init chaincode successfully.  

Could you please look this issue",,abhisamant7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Dec/20 2:08 PM;abhisamant7;Screenshot from 2020-12-29 10-38-07.png;https://jira.hyperledger.org/secure/attachment/18869/Screenshot+from+2020-12-29+10-38-07.png",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-11237,,,No,,Unset,No,,,"1|i01hwr:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),abhisamant7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/21 6:13 PM;abhisamant7;This has been resolved as there is mistake from my end as I forget install vendor dependency to chaincode folder.

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clarify scope and limitations of test network,FAB-18392,46472,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,jtonline,jtonline,08/Jan/21 11:55 PM,13/Jan/21 10:29 PM,28/Oct/23 3:09 AM,13/Jan/21 10:29 PM,,,,,,,,,,,,fabric-docs,fabric-samples,,,0,documentation,,,,,"Other than stating that it should not be used for production networks, the test network documentation does not go in to much detail about its scope and limitations...


[https://hyperledger-fabric.readthedocs.io/en/latest/test_network.html]

 

For example, a recent stack overflow question asked why {{_./network.sh deployCC_ d}}id not work when trying to deploy chaincode on a channel with a single org. I did not think it was obvious from the current documentation that the current scripts would not support this sort of experimentation. Should they? Or should there be more explicit guidance on what the next steps should be.

I know there have been discussions about the scope of the test network, e.g. in relation to other alternatives, however I couldn't find anything specific in Jira/elsewhere. ",,jtonline,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hz7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,pandrejko,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.3,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jan/21 12:59 AM;pandrejko;{color:#1d1c1d}This is the stack overflow question. {color}[https://stackoverflow.com/questions/65590092/chaincode-docker-container-not-created-on-hyperledger-fabric-2-2];;;","13/Jan/21 1:43 AM;pandrejko;PR: https://github.com/hyperledger/fabric/pull/2262;;;","13/Jan/21 10:29 PM;pandrejko;Merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Credential token based authorization for the participation API,FAB-18393,46473,,Epic,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,sykesm,sykesm,09/Jan/21 1:04 AM,09/Jan/21 3:46 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"The participation API exposed by the orderer currently relies on Mutual TLS for authentication and authorization. While sufficient, it’s cumbersome in practice and introduces patterns where the orderer’s local MSP is not involved in the authorization decisions.

This goal of this epic is to adopt the minimal subset of OAuth2 required to perform client authentication using the `private_key_jwt` defined in OpenID Connect. Using this pattern, the client can assert its own identity by signing a JWT that contains its public key certificate, present it to the orderer, and request an access token for future interactions.

The initial work will target the participation API but this pattern can be extended to support the requirements of FAB-16855 for the peer.

—
{code}
# Authentication and Authorization

## Summary

The channel participation API currently uses TLS mutual authentication to
authenticate and authorize channel administration operations. There are two
minor issues with this approach.

1. The client CA certificate used to control access to the channel
   participation API is disconnected from the orderer's local MSP.
2. It's difficult for web applications to establish connections to the orderer
   using TLS mutual authentication.

This goal of this proposal is to describe an authentication flow based on
[RFC7523][RFC7523]. This flow can be used to obtain an access token for the
channel participation API from a certificate representing an MSP identity.

## OpenID Connect Authentication

OpenID Connect is an identity layer that sits on top of the OAuth 2.0
protocol. It enables clients to verify the identify of an end-user by
authenticating with an authorization server. In addition to end user
authentication, the spec also defines methods for client authentication.

The [`private_key_jwt`][private_key_jwt] client authentication method allows a
client to use a private key associated with a registered public key to sign an
authentication token and assert its own identity. This `client_assertion` can
then be used to acquire an `access_token` from the resource server's `/token`
endpoint.

### Building the Authentication Token

The token used for authentication is a `client_assertion` JWT and consists of
three sections: the JOSE Header, Claims, and the JWS Signature.

#### JOSE Header

The JWT constructed by a client includes a JOSE header with the `typ`  set to
`JWT`, the `alg` set to `ES256` for ECDSA-P256 certificates (the only type
we'll support initially), and `x5c` set to the certificate or certificate
chain of the client in the form described by [RFC7517][RFC7517].

#### Claims

The JWT claims must include include the following fields:

- `iss` - the `client_id` associated with the certificate.
- `sub` - the `client_id` associated with the certificate.
- `aud` - the intended ""audience"" for the claim and should be the URL of the of the token endpoint.
- `jti` - a unique token identifier that helps prevent replay attacks.
- `exp` - the token expiration time represented as the number of seconds since the Unix Epoch.
- `iat` - the time the assertion was created represented as the number of seconds since the Unix Epoch.

The `iss` and `sub` fields must contain the same value. The `client_id` should
be the _MSPID_ that issued the certificate. This allows us to validate the
certificate against the correct MSP.

The `aud` value provided by the client must match the URL of the token
endpoint. Because of proxying, the expected value(s) may need to be configured
on the server.

The `jti` is generated by the client and is intended to act as a nonce to
prevent replays. Prior to returning an `access_token` to the client, the
server should save a reference to the `jti` value in memory until the token
expires at `exp`. If a `client_assertion` is received with a previously
observed `jti`, the assertion token must not be accepted.

The `exp` time in the token should be checked against the local clock. If the
expiry is in the past, the assertion must not be accepted. If the expiry time
is more than some threshold in the future, the assertion must not be accepted.

The `iat` time in the token should be checked against the local clock. If the
token was issued more than some threshold in the past, the assertion must not
be accepted. The window between `iat` and `exp` should represent a reasonable
window of time for authentication - typically less than a minute or two.

#### JWS Signature

After creating the header and claims objects, a signature needs to be
generated over the two objects. This is done by base64 URL encoding the UTF-8
representation of the header and claims, joining them by a period (`.`),
generating a signature using the algorithms defined in [RFC7518][RFC7518], and
base64 URL encoding the resulting signature. The complete token is formed by
joining the encoded header, claims, and signature with a period (`.`).

The algorithm claimed in the header must be appropriate for the certificate
included in the header and must be the one used to generate the signature. The
only algorithm we will support initially will be `ES256` using for ECDSA-P256
private keys.

### Authenticating

Section [4.2][RFC7521-4.2] of [RFC7521][RFC7521] defines how to present
`client_assertion` tokens to an OAuth token endpoint and section
[2.2][RFC7523-2.2] of [RFC7523][RFC7523] defines the required parameters.

At a high level, authenticating  involves a `POST` request to the token
endpoint with a number of `application/x-www-form-urlencoded` parameters. The
parameters are:

- `grant_type` - the value `client_credentials`
- `client_assertion_type` - the value `urn:ietf:params:oauth:client-assertion-type:jwt-bearer`
- `client_assertion` - the value of the authentication token

Our token endpoint implementation must must require the use of TLS
connections. When requests are received, we must examine the parameters and
reject any requests that arrive for grant types other than
`client_credentials` or assertion types other than the JWT bearer URN with
`400 Bad Request`.

#### Validating the `client_assertion` Token

A number of libraries exist in `go` to process JWT tokens so there's little
reason to roll our own. For example, the [`go-jose.v2`][go-jose] package
implemented by square looks to be of high quality, supports `x5c` certificate
chains, and has an active community.

After using a library to verify that a token is well formed and valid, the
claims can be evaluated. This is where we check that the `aud` claim matches
our token endpoint, that `iss` and `sub` are equal and contain a known MSP
identifier, and that the MSP considers the certificate (or chain) valid.
Finally, we need to ensure that the `jti` has not already been observed by
this server.

Once these checks have been performed, we should be convinced that the
certificate is valid, that the token is valid, and that this assertion will
only be honored once in the window between `iat` and `exp`.

#### Issuing the `access_token`

In response to a successful `client_assertion`, the token endpoint generates
an OAuth2 compatible JSON response that contains an `access_token`,
`token_type`, and `expires_in` properties. The response should not include a
`refresh_token` as the client can self-refresh by re-asserting its identity.

Since we only require our tokens to be valid for the current server, we don't
need to use a JWT for the `access_token`. For the sake of simplicity, we can
use a base64 encoded token that is 32 bytes of random data and equivalent to a
session ID.

The `token_type` should be set to `bearer` and the `expires_in` value should
be some small, configurable duration that defaults to 300 seconds or less.

This generated token needs to be stored in memory and mapped to the
certificate extracted from the `client_assertion`, the MSP ID from the
`client_id`, and the expiration time of the `access_token`. An asynchronous
task should be scheduled to reap expired tokens on a regular basis.

## Authorization

When a protected endpoint is accessed by a client, `http.Handler` middleware
will intercept the request to perform authorization. First, the middleware
will check for a bearer token in the `Authorization` header. If the header
does not contain a token, the request will be rejected with a `401
Unauthorized`.

Once we have the token, the we will look in the `access_token` map for the
certificate and expiry information associated with the token. If the entry is
not found, the request will be rejected with a `403 Forbidden`. If the
`access_token` is found but has expired, the request will be rejected with a
`403 Forbidden`.

At this point we should have the certificate associated with the client and
the MSP responsible for validating it. With these two bits of information, we
can check if the identity represented by the `access_token` is authorized to
perform the requested operation.

## Additional Comments

Building on OpenID Connect and OAuth should make REST client development a
relatively straightforward task, allows us to use existing libraries, and
prevents us from rolling our own crypto. This proposal adopts just enough of
OAuth  to solve the problems we have today but allows us to grow the solution
in the future by adopting JWT access tokens that include access control scopes
and additional `aud` definitions. The OAuth2 `access_token` is also usable in
gRPC clients by using the`google.golang.org/grpc/credentials/oauth` package.
This allows us to introduce gRPC services that require authorization without
the need for enveloping and signing the messages.

[private_key_jwt]: https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication
[RFC7517]: https://tools.ietf.org/html/rfc7517
[RFC7518]: https://tools.ietf.org/html/rfc7518
[RFC7521]: https://tools.ietf.org/html/rfc7521
[RFC7521-4.2]: https://tools.ietf.org/html/rfc7521#section-4.2
[RFC7523]: https://tools.ietf.org/html/rfc7523
[RFC7523-2.2]: https://tools.ietf.org/html/rfc7523#section-2.2
[go-jose]: https://gopkg.in/square/go-jose.v2/jwt

{code}",,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-16855,FAB-17712,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,Unset,Unset,ghx-label-10,,RPC Authentication,To Do,No,,Unset,No,,,"1|i01hzf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jan/21 1:36 AM;yacovm;{quote}The `client_id` should be _MSPID_._SubjectKeyIdentifier_
{quote}
 

Why not just the MSP ID? You can compute SKI at the server side from the certificate if you need it, and then you don't need to write code in the client side to hash the public key.

Moreover, you do not need the SKI as there is no API in Fabric where you can use it. In fact, the only place where SKI is used in *authentication*, it is computed by the MSP and not by the caller.

 ;;;","09/Jan/21 1:48 AM;yacovm;{quote}The [`private_key_jwt`][private_key_jwt] client authentication method allows a client to use a private key associated with a registered public key to sign an authentication token and assert its own identity.
 {quote}

How do you register the public key in the Fabric case? I guess you mean the client has registered it when it was issued in a CA right?

{quote}The algorithm claimed in the header must be appropriate for the certificate included in the header and must be the one used to generate the signature.{quote}

So the header has a certificate. Perhaps it might be good to outline in the RFC exactly the structure of the fields that are sent over the wire. ;;;","09/Jan/21 3:35 AM;sykesm;{quote}
Why not just the MSP ID? You can compute SKI at the server side from the certificate if you need it, and then you don't need to write code in the client side to hash the public key.
{quote}

Agreed. I'll remove it.

{quote}
How do you register the public key in the Fabric case? I guess you mean the client has registered it when it was issued in a CA right?
{quote}

That's actually a quote from the spec. For our purposes, the registration is implicitly performed when the certificate was issued by the CA.

{quote}
Perhaps it might be good to outline in the RFC exactly the structure of the fields that are sent over the wire.
{quote}

The {{x5c}} format is as described in section 4.7 of RFC 7517. As for outlining the structure of the header fields, they were already enumerated: {{typ}}, {{alg}}, and {{x5c}}. All have definitions from the referenced IETF RFCs. For our initial implementation, the type is ""JWT"", the algorithm must be ""ES256"", and the certificate must be a base64 encoded representation of the DER PKIX certificate value. Any other combination will be rejected.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Add separate ""prereqs"" section to create channel and add an org to network tutorials",FAB-18394,46475,,Documentation,Backlog,FAB,Fabric,software,denyeart,,,Medium,,nikhil550,wlahti,wlahti,11/Jan/21 11:33 PM,12/Jan/21 12:02 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-samples,,,,0,,,,,,"Similar to the [first app tutorial|https://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html#before-you-begin], add a section to cover the prereqs for the [create channel tutorial|https://github.com/hyperledger/fabric/blob/master/docs/source/create_channel/create_channel.md] and the [add an org to a network tutorial|https://github.com/hyperledger/fabric/blob/master/docs/source/channel_update_tutorial.rst]. In particular, these tutorials have a `jq` dependency that is mentioned in the anchor peer update section that could be moved to the top of the tutorial.",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hzv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Achieving high TPS in a token based platform with fees,FAB-18395,46478,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,arman19940326,arman19940326,12/Jan/21 1:42 AM,12/Jan/21 2:43 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"Suppose I have a token based business platform with millions of users each having a unique account number. For every transaction, sender [or sometimes receiver] has to pay a nominal fee. After a successful transaction, this fee will be deposited to a specific account, say with account number 1. Since this account's balance is frequently updated, I store the fees as a series of deltas which have to be aggregated at a later time in the future. In other words, for every transaction, a delta key-value pair is created that is associated with account number 1. If I want this system to have a TPS of 1000, then I have to somehow periodically prune the deltas and add their equivalent amount to the balance of the account with account number 1. 
 My first thought was that I might be able to prune the deltas at midnight of each day. To do this, I have to stop the system for some time, say 15 minutes. However, with TPS of 1000, there are 1000*60*60*24=86400000 deltas to be pruned. My platform needs to be able to delete 96000 deltas per second! This sounds kinda not possible. Then I thought of another solution. I thought of pruning a smaller number of deltas at shorter intervals, let's say every minute. But I think this approach would seriously decrease TPS. As a last resort, I thought I'd better handle the fees offchain but in this way I can't enjoy blockchain features and if anything goes wrong I have to handle it on my own. I have to prepare for every issue possible so as not to lose the fees. 
 In Hyperledfer Fabric, how would you implement a token based platform in which for every transaction, a nominal fee goes to one [or multiple] account[s]? ",,arman19940326,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i0j:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),arman19940326,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peers fails to start on Azure Kubernetes Service with interrupted system call,FAB-18396,46479,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,gokulnath.reddy,gokulnath.reddy,12/Jan/21 7:28 AM,18/Jan/21 2:23 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-orderer,fabric-peer,,,0,,,,,,"When we try to deploy the network on Azure Kubernetes Service (Version: *1.18.10,* Kernal Version: 5.4.0-1031-azure) both peers and orderer fail to start. It either fails with interrupted system calls or file doesn't exist when initializing ledgerData

Below is the stack trace on peer:

 
{code:java}
2021-01-11 22:20:51.648 UTC [ledgermgmt] NewLedgerMgr -> INFO 009 Initializing LedgerMgrpanic: Error acquiring lock on file /var/hyperledger/production/ledgersData/fileLock: file does not existgoroutine 1 [running]:github.com/hyperledger/fabric/common/ledger/util/leveldbhelper.(*FileLock).Lock(0xc0003a6700, 0xc0003a6700, 0x2)	/go/src/github.com/hyperledger/fabric/common/ledger/util/leveldbhelper/leveldb_helper.go:212 +0x2edgithub.com/hyperledger/fabric/core/ledger/kvledger.NewProvider(0xc0000ffc20, 0x0, 0x0, 0x0)	/go/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:103 +0x180github.com/hyperledger/fabric/core/ledger/ledgermgmt.NewLedgerMgr(0xc0004e1968, 0x1af0060)	/go/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:65 +0x27agithub.com/hyperledger/fabric/internal/peer/node.serve(0x248d5c8, 0x0, 0x0, 0x0, 0x0)	/go/src/github.com/hyperledger/fabric/internal/peer/node/start.go:431 +0x2035github.com/hyperledger/fabric/internal/peer/node.glob..func6(0x235b140, 0x248d5c8, 0x0, 0x0, 0x0, 0x0)	/go/src/github.com/hyperledger/fabric/internal/peer/node/start.go:127 +0x9cgithub.com/spf13/cobra.(*Command).execute(0x235b140, 0x248d5c8, 0x0, 0x0, 0x235b140, 0x248d5c8)	/go/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:762 +0x453github.com/spf13/cobra.(*Command).ExecuteC(0x235b860, 0xc0001f5f50, 0x1, 0x1)	/go/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:852 +0x2eagithub.com/spf13/cobra.(*Command).Execute(...)

{code}
Sometimes it fails with the following error:

 

 
{code:java}
panic: Error opening leveldb: seek /var/hyperledger/production/transientstore/LOG: interrupted system call{code}
 

I have raised the issue with Microsoft. They have identified the issue at the kernel level and they are working on fixing that. Meanwhile, they have suggested a workaround as follows.

The application (leveldb) should either:
 * Handle EINTR from the I/O system calls, and retry on getting such an error. OR

 * Use the SA_RESTART flag on sigaction: [https://www.gnu.org/software/libc/manual/html_node/Flags-for-Sigaction.html|https://urldefense.com/v3/__https://www.gnu.org/software/libc/manual/html_node/Flags-for-Sigaction.html__;!!E1R1dd1bLLODlQ4!U72GR65-W2zLAb3K5dw_JyKcLaJ9FkORj0foPdFLUJ6kQ9hFNrkiZ7-6nk1HkZXhs4A$]

I understand that this might be an issue with level DB but is it possible to have a fix on Fabric until we wait to get the kernel fix?",,btl5037,gokulnath.reddy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i0r:",,,,Unset,Unset,,Spin up Hyperledger Fabric on AKS with version 1.18.10.,,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,gokulnath.reddy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jan/21 6:44 AM;btl5037;We have plenty of enterprise clients running Fabric on AKS, and I have myself run Fabric on AKS. What are you using as the underlying storage median? There are plenty of reasons to see the error you are seeing (from Docker related problems) to disk space issues, to incorrectly mounting volumes. Can you provide a little more detail into the setup.;;;","18/Jan/21 2:23 PM;gokulnath.reddy;We are using Azure File for persistence volume, it was working on AKS version 1.17+ version but not on 1.18+ Which version of AKS are you running? ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error: endorsement failure during query.,FAB-18397,46481,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Highest,Invalid,,umeraqeel,umeraqeel,12/Jan/21 7:23 PM,18/Jan/21 6:40 AM,28/Oct/23 3:09 AM,18/Jan/21 6:40 AM,,,,,,,,,,,,,,,,0,,,,,,"Error: endorsement failure during query. response: status:500 message:""error in simulation: failed to execute transaction 091819070441ed530849dedfa0be94f1287cc8e2f541d61056673ca1d5a9f904: *error sending: chaincode stream terminated"".*

 

_invoke function is successfully working .but query function is not working._*.*",,btl5037,umeraqeel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i17:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,System Test,,(Please add usage information),btl5037,umeraqeel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jan/21 6:40 AM;btl5037;This is not the appropriate place for support: please consider using RocketChat (chat.hyperledger.org) or the Fabric mailing list: https://lists.hyperledger.org/g/fabric/topics;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-tools image does not contain osnadmin binary,FAB-18398,46487,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,tongliofcary,tongliofcary,tongliofcary,14/Jan/21 12:31 AM,20/Jan/21 2:19 AM,28/Oct/23 3:09 AM,18/Jan/21 6:39 AM,,,,,,,,,,,,fabric-cli,,,,0,,,,,,"all other fabric binaries such as configtxgen configtxlator cryptogen peer discover idemixgen all get built into fabric-tools container, but not odnadmin which is new in 2.3.0. Seems to me this is a big miss as this is the main feature of 2.3. Please fix this by including the tool in 2.3",,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i2b:",,,,Unset,Unset,,The public image hyperledger/fabric-tools:2.3.0 does not contain the osnadmin binary.,,Unset,,,,,,Unset,,Unset,,(Please add usage information),tongliofcary,,,,,,,,,,,,,,,,release-2.3,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ability to trigger snapshot across all peers in a channel via a transaction,FAB-18399,46488,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,14/Jan/21 3:22 AM,14/Jan/21 3:35 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-peer,,,,0,operator,,,,,"As of v2.3 peer admins can request a snapshot be taken at a future block height.

In some scenarios all the organizations on a channel may want to snapshot at the same block height, so that they can compare their snapshot hashes and consider the snapshot an agreed upon 'checkpoint'. This could be accomplished by submitting a transaction that indicates all peers should take a snapshot at that height. Similar to a config transaction, there could be policies governing which organizations must sign off on a snapshot transaction.

Some peers may want to opt-out of the auto-snapshot however, therefore the auto-snapshot behavior should also be governed by a peer config option.

 ",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-106,,,No,,Unset,No,,,"1|i01i2j:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peers suddenly went down when using PKCS11 BCCSP,FAB-18400,46496,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,sykesm,yjchang21,yjchang21,18/Jan/21 10:45 AM,04/Feb/21 1:45 PM,28/Oct/23 3:09 AM,03/Feb/21 2:55 PM,v2.2.0,,,,,,,,,,,fabric-crypto,fabric-gossip,,,0,,,,,,"I didn't anything on network for 20 hours or more, but peers went down with 'fatal error: unexpected signal during runtime execution' when signing through PKCS11 BCCSP. 
 It seems to occur during gossip communication between peers.

Environment =>
 - OS : ubuntu 

 - HSM : softhsm 2.6.1 (in docker container)

 - Fabric : v2.2.0

 - Network : 1 orderer (etcdraft) and 2 peers (2 organizations each with 1 peer & anchor peer) 

 

Error log is below. (some logs are too long, so I attached full log by file)

===============================================================

*1) softhsm*

user.err : BotanECDSAPrivateKey.cpp(223): Could not create the Botan public key
user.err : BotanECDSA.cpp(93): Could not get the Botan private key
user.err : fatal.cpp(56): A fatal exception occurred; exiting...

===============================================================

*2) peer0.org1.example.com*
 [33m2021-01-15 20:54:32.498 UTC [gossip.gossip] SignMessage -> WARN 09b[0m Failed signing message: P11: sign failed [pkcs11: 0x5: CKR_GENERAL_ERROR]
 github.com/hyperledger/fabric/gossip/gossip.(*discoverySecurityAdapter).SignMessage
 /go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:1047
 github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).createSignedAliveMessage
 /go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:800
 github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).createMembershipRequest
 /go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:659
 github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).InitiateSync
 /go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:233
 github.com/hyperledger/fabric/gossip/gossip.(*Node).syncDiscovery
 /go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:286
 runtime.goexit
 /usr/local/go/src/runtime/asm_amd64.s:1373
 [33m2021-01-15 20:54:32.498 UTC [gossip.discovery] InitiateSync -> WARN 09c[0m Failed creating membership request: Failed signing message
 github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).createSignedAliveMessage
 /go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:802
 github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).createMembershipRequest
 /go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:659
 github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).InitiateSync
 /go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:233
 github.com/hyperledger/fabric/gossip/gossip.(*Node).syncDiscovery
 /go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:286
 runtime.goexit
 /usr/local/go/src/runtime/asm_amd64.s:1373
 github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).createMembershipRequest
 /go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:661
 github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).InitiateSync
 /go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:233
 github.com/hyperledger/fabric/gossip/gossip.(*Node).syncDiscovery
 /go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:286
 runtime.goexit
 /usr/local/go/src/runtime/asm_amd64.s:1373
 github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).InitiateSync
 /go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:235
 github.com/hyperledger/fabric/gossip/gossip.(*Node).syncDiscovery
 /go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:286
 runtime.goexit
 /usr/local/go/src/runtime/asm_amd64.s:1373
 fatal error: unexpected signal during runtime execution
 [signal SIGSEGV: segmentation violation code=0x1 addr=0x7f97f61e0000 pc=0x7f981ddddccd]

runtime stack:
 runtime.throw(0x192fd99, 0x2a)
 /usr/local/go/src/runtime/panic.go:1116 +0x72
 runtime.sigpanic()
 /usr/local/go/src/runtime/signal_unix.go:679 +0x46a
 ===============================================================

*3) peer0.org2.example.com*
 fatal error: unexpected signal during runtime execution
 [signal SIGSEGV: segmentation violation code=0x1 addr=0x7fc8b0a8a040 pc=0x7fc8d8664ccd]

runtime stack:
 runtime.throw(0x192fd99, 0x2a)
 /usr/local/go/src/runtime/panic.go:1116 +0x72
 runtime.sigpanic()
 /usr/local/go/src/runtime/signal_unix.go:679 +0x46a

goroutine 60 [syscall]:
 runtime.cgocall(0x14fcbb0, 0xc002aa3770, 0x1)
 /usr/local/go/src/runtime/cgocall.go:133 +0x5b fp=0xc002aa3740 sp=0xc002aa3708 pc=0x9c492b
 github.com/miekg/pkcs11._Cfunc_SignInit(0x24de8c0, 0x1, 0xc003234b80, 0x2, 0x0)
 _cgo_gotypes.go:1397 +0x4e fp=0xc002aa3770 sp=0xc002aa3740 pc=0xdc007e
 github.com/miekg/pkcs11.(*Ctx).SignInit.func1(0xc000010f70, 0x1, 0xc003234b80, 0x2, 0x0)
 /go/src/github.com/hyperledger/fabric/vendor/github.com/miekg/pkcs11/pkcs11.go:1316 +0x99 fp=0xc002aa37b0 sp=0xc002aa3770 pc=0xdcccf9
 github.com/miekg/pkcs11.(*Ctx).SignInit(0xc000010f70, 0x1, 0xc002aa38c8, 0x1, 0x1, 0x2, 0x0, 0x0)
 /go/src/github.com/hyperledger/fabric/vendor/github.com/miekg/pkcs11/pkcs11.go:1316 +0xc7 fp=0xc002aa3820 sp=0xc002aa37b0 pc=0xdc5687
 github.com/hyperledger/fabric/bccsp/pkcs11.(*impl).signP11ECDSA(0xc000399020, 0xc0003c6940, 0x20, 0x20, 0xc003190d60, 0x20, 0x20, 0x0, 0x0, 0x0, ...)
 /go/src/github.com/hyperledger/fabric/bccsp/pkcs11/pkcs11.go:334 +0x286 fp=0xc002aa3900 sp=0xc002aa3820 pc=0xdd61b6
 github.com/hyperledger/fabric/bccsp/pkcs11.(*impl).signECDSA(0xc000399020, 0xc0003c6940, 0x20, 0x20, 0xc0003c6940, 0x20, 0x20, 0xc0003cc900, 0xc003190d60, 0x20, ...)
 /go/src/github.com/hyperledger/fabric/bccsp/pkcs11/ecdsa.go:18 +0x7a fp=0xc002aa3970 sp=0xc002aa3900 pc=0xdd02da
 github.com/hyperledger/fabric/bccsp/pkcs11.(*impl).Sign(0xc000399020, 0x1b1c060, 0xc00036c9c0, 0xc003190d60, 0x20, 0x20, 0x0, 0x0, 0xd9d02a, 0xc00014c050, ...)
 /go/src/github.com/hyperledger/fabric/bccsp/pkcs11/impl.go:182 +0x1e1 fp=0xc002aa3a50 sp=0xc002aa3970 pc=0xdd1f31
 github.com/hyperledger/fabric/bccsp/signer.(*bccspCryptoSigner).Sign(0xc0003ca3f0, 0x1ae7fe0, 0xc0001124b0, 0xc003190d60, 0x20, 0x20, 0x0, 0x0, 0x0, 0x0, ...)
 /go/src/github.com/hyperledger/fabric/bccsp/signer/signer.go:77 +0xed fp=0xc002aa3ae8 sp=0xc002aa3a50 pc=0xf4ea7d
 github.com/hyperledger/fabric/msp.(*signingidentity).Sign(0xc0003b9aa0, 0xc003190d40, 0x1d, 0x1d, 0xc003190d40, 0x0, 0x1d, 0xc002e54900, 0xc003190d40)
 /go/src/github.com/hyperledger/fabric/msp/identities.go:274 +0x38e fp=0xc002aa3bf8 sp=0xc002aa3ae8 pc=0xf5ad0e
 github.com/hyperledger/fabric/internal/peer/gossip.(*MSPMessageCryptoService).Sign(0xc0000d4040, 0xc003190d40, 0x1d, 0x1d, 0x7fc8b1900190, 0x1d, 0x1, 0xc002e54990, 0x30)
 /go/src/github.com/hyperledger/fabric/internal/peer/gossip/mcs.go:198 +0x56 fp=0xc002aa3c50 sp=0xc002aa3bf8 pc=0x14e7ca6
 github.com/hyperledger/fabric/gossip/gossip.(*discoverySecurityAdapter).SignMessage.func1(0xc003190d40, 0x1d, 0x1d, 0x1d, 0x1d, 0x0, 0x0, 0x46)
 /go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:1037 +0x55 fp=0xc002aa3ca8 sp=0xc002aa3c50 pc=0x132f2b5
 github.com/hyperledger/fabric/gossip/protoext.SignSecret(0xc002c2d9e0, 0xc002aa3da8, 0xc002e54990, 0x0, 0x0)
 /go/src/github.com/hyperledger/fabric/gossip/protoext/signing.go:31 +0x8a fp=0xc002aa3d28 sp=0xc002aa3ca8 pc=0x12dfd1a
 github.com/hyperledger/fabric/gossip/gossip.(*discoverySecurityAdapter).SignMessage(0xc0004ee100, 0xc002c2d980, 0xc000046072, 0x1b, 0x20)
 /go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:1054 +0x1cc fp=0xc002aa3dc8 sp=0xc002aa3d28 pc=0x132b69c
 github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).createSignedAliveMessage(0xc00013a420, 0x9c7c01, 0xc0000b50e0, 0x0, 0xc000112400)
 /go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:800 +0x56 fp=0xc002aa3e18 sp=0xc002aa3dc8 pc=0x12f2356
 github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).createMembershipRequest(0xc00013a420, 0xc0000e3701, 0xc003392510, 0x0, 0x1)
 /go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:659 +0x38 fp=0xc002aa3e80 sp=0xc002aa3e18 pc=0x12f05d8
 github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).InitiateSync(0xc00013a420, 0x3)
 /go/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:233 +0x61 fp=0xc002aa3f70 sp=0xc002aa3e80 pc=0x12eacb1
 github.com/hyperledger/fabric/gossip/gossip.(*Node).syncDiscovery(0xc0001237c0)
 /go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:286 +0x167 fp=0xc002aa3fd8 sp=0xc002aa3f70 pc=0x13252f7
 runtime.goexit()
 /usr/local/go/src/runtime/asm_amd64.s:1373 +0x1 fp=0xc002aa3fe0 sp=0xc002aa3fd8 pc=0xa29d41
 created by github.com/hyperledger/fabric/gossip/gossip.(*Node).start
 /go/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:292 +0x43

 ",,denyeart,sykesm,yjchang21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jan/21 10:44 AM;yjchang21;peer0.org1.example.com-2.log;https://jira.hyperledger.org/secure/attachment/18883/peer0.org1.example.com-2.log","18/Jan/21 10:44 AM;yjchang21;peer0.org2.example.com-2.log;https://jira.hyperledger.org/secure/attachment/18882/peer0.org2.example.com-2.log",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqwr",,,,Unset,Unset,v2.x,"1. Build peer/orderer docker images with tag 'pkcs11' and softhsm
(add 'apk add softhsm' in Dockerfile of peer/orderer)
2. Configure and run a Fabric network with PCKS11 BCCSP and softhsm
3. Create channel, deploy a chaincode, invoke chaincode
4. Leave the network for 1~2 days",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,sykesm,yjchang21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/21 2:15 PM;yjchang21;Please read this problem and verify it is bug or not. Thank you.;;;","02/Feb/21 4:00 PM;denyeart;[~sykesm] Any ideas?;;;","03/Feb/21 12:47 AM;sykesm;SoftHSM is terminating the process with a call to {{exit}}. This happens when an exception percolates up to the library layer. There's nothing Fabric can do to handle this.

The exception is coming from something in this block of code:

[https://github.com/opendnssec/SoftHSMv2/blob/7f99bedae002f0dd04ceeb8d86d59fc4a68a69a0/src/lib/crypto/BotanECDSAPrivateKey.cpp#L215-L220]

Since the blocks handling exceptions just catch everything ({{...}}) , it could be anything. Given the code, likely candidates are {{bad_alloc}} and {{bad_cast.}};;;","03/Feb/21 2:54 PM;denyeart;Thanks Matt, since Fabric can't do anything to control this in the underlying SoftHSM, closing.;;;","04/Feb/21 1:45 PM;yjchang21;Thank you for your comments.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"seriously ,its not a bug  ? ",FAB-18401,46497,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,kaelJ,kaelJ,18/Jan/21 6:05 PM,19/Jan/21 9:24 AM,28/Oct/23 3:09 AM,19/Jan/21 9:24 AM,,,,,,,,,,,,,,,,0,,,,,," 

gossip/discovery_impl.go

 

```

if am := d.aliveMembership.MsgByID(m.GetAliveMsg().Membership.PkiId); am == nil

{ d.logger.Debug(""Adding"", am, ""to aliveMembership"") msg := &proto.SignedGossipMessage

{GossipMessage: m.GossipMessage, Envelope: am.Envelope}

d.aliveMembership.Put(m.GetAliveMsg().Membership.PkiId, msg)
 } else

{ d.logger.Debug(""Replacing"", am, ""in aliveMembership"") am.GossipMessage = m.GossipMessage am.Envelope = am.Envelope }

 

```

 

if am is nil ,then get the am.Envelope ,

wont it occur a panic?",,kaelJ,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i3v:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),kaelJ,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jan/21 6:10 PM;kaelJ;take a look plz ;;;","18/Jan/21 6:31 PM;kaelJ;and its readlly wired 

msg := &proto.SignedGossipMessage\{GossipMessage: m.GossipMessage, Envelope: am.Envelope}

GossipMessage used m instance  

But Envelope used am instance 

why? 

i cant figured out ;;;","19/Jan/21 3:45 AM;yacovm;It's a bug, but it's a bug that doesn't manifest because you enter *learnExistingMembers* because you know about this peer, and in the function, the code checks (for completeness) what if no peer's alive message exists in the message store, but that can't happen, because if you know about the peer then there is some alive message exists in the message store.
;;;","19/Jan/21 8:29 AM;yacovm;https://github.com/hyperledger/fabric/pull/2293;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deprecation of Docker Runtime in Kubernetes - No access to local docker socket,FAB-18402,46499,,Bug,Unverified,FAB,Fabric,software,denyeart,,,High,,,chintanr11,chintanr11,19/Jan/21 10:23 PM,17/Aug/21 12:16 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-peer,,,,1,,,,,,"With us marching slowly towards end-of-life for Docker as a runtime environment in Kubernetes, and containerd turning out to be default for latest Kubernetes version on most cloud providers, I am thinking about the process of ""chaincode image building and container creation"" using the HLF peer. 

For HLF v1.4.x and HLF v2.x with internal builders, the chaincode containers could no longer be simply created with the help of `/var/run/docker.sock` file - as the access to it will be denied with the new `containerd` runtime in Kubernetes. 

I wanted to learn about how are we planning in supporting chaincode instantiation through peer (both, in HLF v1.4 or in HLF v2), once the old versions of Kubernetes reach end-of-life and existing users will be looking to upgrade to these latest Kubernetes versions.

With HLF v2.x external builders and chaincode as an external service, we can easily migrate to remove the dependency on usage of docker socket. That is definitely one of the ways!

Although, as it would be affecting all the HLF users to migrate from internal builders to chaincode as an external service. I consider that it might be simple, but it incurs cost in production stages and also multiple channels of communication if the setup is hosted on cloud compared to on-prem. 

I am not sure of the exact deadline we should be looking for from Kubernetes on this, but I think some sort of modification or highlight is required for sure - for everyone to be supported and migrated with ease.",,chintanr11,greglinux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18500,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i4b:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),chintanr11,greglinux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong build file in fabric-samples,FAB-18403,46501,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Lowest,,,tschonnycache,tschonnycache,20/Jan/21 8:16 PM,20/Jan/21 8:16 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-samples,,,,0,build,,,,,"In fabric-samples/commercial-paper/organization/digibank/contract-java

the build.gradle produces a build failure

instead the shadow-build.gradle must replace the build.grade to make it work",,tschonnycache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i4r:",,,,Unset,Unset,,"cd into digibank folder
source digibank.sh
peer lifecycle chaincode package cp.tar.gz --lang java --path ./contract-java --label cp_0
peer lifecycle chaincode install cp.tar.gz",,Unset,,,,,,Unset,,Unset,,(Please add usage information),tschonnycache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't build sample applicaiton due to dependency conflics,FAB-18404,46502,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Lowest,,,tschonnycache,tschonnycache,20/Jan/21 8:48 PM,20/Jan/21 8:48 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-samples,,,,0,build,,,,,"In fabric-samples/commercial-paper/organization/digibank/application-java the build fails with the following message:

[*ERROR*] Failed to execute goal on project commercial-paper: *Could not resolve dependencies for project commercial-paper:commercial-paper:jar:0.0.1-SNAPSHOT: Failed to collect dependencies for commercial-paper:commercial-paper:jar:0.0.1-SNAPSHOT*: Could not resolve version conflict among [org.hyperledger.fabric:fabric-gateway-java:jar:[2.0,3.0) -> org.hyperledger.fabric-sdk-java:fabric-sdk-java:jar:[2.2.0,2.3.0) -> io.grpc:grpc-netty:jar:1.31.0 -> io.grpc:grpc-core:jar:[1.31.0,1.31.0], org.hyperledger.fabric-chaincode-java:fabric-chaincode-shim:jar:[2.0,3.0) -> io.grpc:grpc-netty-shaded:jar:1.31.1 -> io.grpc:grpc-core:jar:[1.31.1,1.31.1]] ->",,tschonnycache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i4z:",,,,Unset,Unset,,cd into the application-java folder and run mvn install,,Unset,,,,,,Unset,,Unset,,(Please add usage information),tschonnycache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java example can't resolve host,FAB-18405,46504,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Lowest,,,tschonnycache,tschonnycache,21/Jan/21 5:19 PM,21/Jan/21 5:19 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-samples,,,,0,quality,,,,,"In the ""commercial paper"" example in the fabric-samples project the java applications cannot resolve the hostnames of the fabric nodes in docker. Adding a rout to localhost in /etc/hosts resolves this problem, however the javascript version of the same example can resolve the hosts out of the box, which leaves the user irritated. I'm using mac os 10.15.7 and docker desktop 3.1.0",,tschonnycache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i5f:",,,,Unset,Unset,,"cd into fabric-samples/commercial-paper/
Follow the instructions from the sample, i.e. start network and install chaincode. then:
cd organization/magnetocorp/application-java
mvn install
mvn exec:java -Dexec.mainClass=""org.magnetocorp.AddToWallet""",,Unset,,,,,,Unset,,Unset,,(Please add usage information),tschonnycache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer graceful shutdown,FAB-18406,46512,,Story,Backlog,FAB,Fabric,software,denyeart,,,High,,,denyeart,denyeart,25/Jan/21 11:54 PM,13/Oct/21 5:34 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-ledger,fabric-peer,,,0,,,,,,"Add an option to stop a peer gracefully, e.g. finish any commits and close channels before stopping peer abruptly.

Mihir recommend a preStop hook that does the following:
 - kubernetes calls the API/command to shutdown when the pod is supposed to be killed for any reason
 - process starts responding with 500 on /healthcheck endpoint. This will stop kubernetes from sending any calls to the pod.
 - process stops accepting connections
 - process cleanly closes all its out going connections, including any open dbs or files.
 - process terminates",,denyeart,nao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxoai",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,nao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to start orderer - Unable to bootstrap orderer with NodeOUs and config.yaml file ,FAB-18407,46514,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,c0deh0use,c0deh0use,27/Jan/21 8:24 AM,29/Jan/21 6:32 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"Hello, 

I'm trying to setup the orderer with NodeOUs enabled using Fabric-CA and a config.yaml file. 
Unfortunately, the setup breaks with: 

```
2021-01-26 23:07:36.479 UTC [orderer.common.server] Main -> PANI 110 Failed validating bootstrap block: initializing channelconfig failed: could not create channel Application sub-group config: setting up the MSP manager failed: administrators must be declared when no admin ou classification is set
panic: Failed validating bootstrap block: initializing channelconfig failed: could not create channel Application sub-group config: setting up the MSP manager failed: administrators must be declared when no admin ou classification is set

```

This is the config.yaml: 
```

NodeOUs:
 Enable: true
 ClientOUIdentifier:
 Certificate: cacerts/hlf-ca--amvoxdlt-7054-ca-AmvoxDLT.pem
 OrganizationalUnitIdentifier: client
 PeerOUIdentifier:
 Certificate: cacerts/hlf-ca--amvoxdlt-7054-ca-AmvoxDLT.pem
 OrganizationalUnitIdentifier: peer
 AdminOUIdentifier:
 Certificate: cacerts/hlf-ca--amvoxdlt-7054-ca-AmvoxDLT.pem
 OrganizationalUnitIdentifier: admin
 OrdererOUIdentifier:
 Certificate: cacerts/hlf-ca--amvoxdlt-7054-ca-AmvoxDLT.pem
 OrganizationalUnitIdentifier: orderer
```
I started investigating the mspimplsetup.go file that is throwing the end message, and from there I was trying to identify and find where the `msp.ouEnforcement` is enabled, but could not find any place that sets this property to some value. ",,c0deh0use,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i6z:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),c0deh0use,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer not responding when queried the records,FAB-18408,46515,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,akshay.sood,akshay.sood,27/Jan/21 5:27 PM,30/Mar/21 7:07 PM,28/Oct/23 3:09 AM,,v2.2.1,,,,,,,,,,,fabric-peer,,,,0,help-wanted,,,,,"I have a peer running which has around 54k documents of type ""asset"" in the private data collection. When I try to fetch these records, the peer never responds and throws the following error:

 
{code:java}
2021-01-20 10:24:11.208 UTC [couchdb] handleRequest -> WARN 005 Retrying couchdb request in 125ms. Attempt:1  Error:Get http://localhost:5984/: dial tcp [::1]:5984: connect: connection refused
2021-01-20 10:24:11.335 UTC [couchdb] handleRequest -> WARN 006 Retrying couchdb request in 250ms. Attempt:2  Error:Get http://localhost:5984/: dial tcp [::1]:5984: connect: connection refused
2021-01-20 10:24:11.587 UTC [couchdb] handleRequest -> WARN 007 Retrying couchdb request in 500ms. Attempt:3  Error:Get http://localhost:5984/: dial tcp [::1]:5984: connect: connection refused
2021-01-20 10:24:12.089 UTC [couchdb] handleRequest -> WARN 008 Retrying couchdb request in 1s. Attempt:4  Error:Get http://localhost:5984/: dial tcp [::1]:5984: connect: connection refused
2021-01-20 10:24:13.091 UTC [couchdb] handleRequest -> WARN 009 Retrying couchdb request in 2s. Attempt:5  Error:Get http://localhost:5984/: dial tcp [::1]:5984: connect: connection refused
2021-01-20 10:24:15.093 UTC [couchdb] handleRequest -> WARN 00a Retrying couchdb request in 4s. Attempt:6  Error:Get http://localhost:5984/: dial tcp [::1]:5984: connect: connection refused
2021-01-20 10:24:19.095 UTC [couchdb] handleRequest -> WARN 00b Retrying couchdb request in 8s. Attempt:7  Error:Get http://localhost:5984/: dial tcp [::1]:5984: connect: connection refused
2021-01-20 10:24:27.096 UTC [couchdb] handleRequest -> WARN 00c Retrying couchdb request in 16s. Attempt:8  Error:Get http://localhost:5984/: dial tcp [::1]:5984: connect: connection refused
2021-01-20 10:24:43.097 UTC [couchdb] handleRequest -> WARN 00d Retrying couchdb request in 32s. Attempt:9  Error:Get http://localhost:5984/: dial tcp [::1]:5984: connect: connection refused
2021-01-20 10:25:15.100 UTC [couchdb] handleRequest -> WARN 00e Retrying couchdb request in 1m4s. Attempt:10  Error:Get http://localhost:5984/: dial tcp [::1]:5984: connect: connection refused
{code}
The rest client (fabric-sdk) throws the following error: 
{code:java}
2021-01-20T10:55:08.539Z - error: [Endorser]: sendProposal[peer0-org1:7051] - peer0-org1:7051 timed out after: 30000
2021-01-20T10:55:08.540Z - error: [Endorser]: sendProposal[peer0-org1:7051] - rejecting with: Error: REQUEST TIMEOUT
2021-01-20T10:55:08.540Z - error: [RoundRobinQueryHandler]: evaluate: message=Query failed. Errors: [""Error: REQUEST TIMEOUT""], stack=FabricError: Query failed. Errors: [""Error: REQUEST TIMEOUT""]
{code}
I am running Hyperledger fabric 2.2

I have also attached the logs of the containers",,akshay.sood,ginspctw,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/21 5:32 PM;akshay.sood;org1peer1-previous.log;https://jira.hyperledger.org/secure/attachment/18887/org1peer1-previous.log","27/Jan/21 5:32 PM;akshay.sood;org1peer1couchdb-previous.log;https://jira.hyperledger.org/secure/attachment/18888/org1peer1couchdb-previous.log",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i77:",,,,Unset,Unset,,"1. Insert 50K plus records in private data collection
2. Query them",,Unset,,,,,,Unset,,Unset,,(Please add usage information),akshay.sood,ginspctw,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Mar/21 10:40 PM;ginspctw;I am also facing the same issue after pushing almost 130k assets to the system.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Verify chaincode name user passes into service discovery endorsement query,FAB-18409,46517,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,ankitm123,denyeart,denyeart,28/Jan/21 5:58 AM,30/Jul/21 5:13 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-peer,,,,0,help-wanted,,,,,"If a user passes a illegal chaincode name into the service discovery endorsement query, service discovery will return a normal error stating that chaincode cant be found on the channel:

 
{code:java}
2021-01-27 15:50:21.409 EST [discovery] chaincodeQuery -> ERRO 31d Failed constructing descriptor for chaincode chaincodes:<name:""cc_1.0.0"" > ,: No metadata was found for chaincode cc_1.0.0 in channel mychannel{code}
 User receives a less helpful message:
{code:java}
server returned: failed constructing descriptor for chaincodes:<name:""cc_1.0.0"" >{code}
But, `cc_1.0.0` is an illegal chaincode name. It would be more helpful to the user if the error stated that the input chaincode name was invalid.

Chaincode names must start with an alphanumeric character and can only consist of alphanumerics, '_', and '-'.  (this is the validation message you get upon ""peer chaincode install"").

We can use this opportunity to ensure the other inputs that take a chaincode name also validate the chaincode name is legal. For example I did a quick try with ""peer chaincode query"", and it also doesn't check for legal chaincode name:

 
{code:java}
Error: endorsement failure during query. response: status:500 message:""make sure the chaincode cc_1.0.0 has been successfully defined on channel mychannel and try again: chaincode cc_1.0.0 not found"" {code}
 ",,ankitm123,denyeart,orenwf,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18530,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i7n:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ankitm123,denyeart,orenwf,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/21 10:18 PM;ankitm123;I dont see any one assigned to this issue yet, is it ok for me to take a look at this? ;;;","28/Jul/21 1:18 AM;ankitm123;I think there are more issues with the new peer lifecycle commands. I am able to install chaincode with names which are not valid,
{code:java}
peer lifecycle chaincode install cc_1.0.0.tar.gz
+ res=0
2021-07-27 12:16:13.991 EDT [cli.lifecycle.chaincode] submitInstallProposal -> INFO 001 Installed remotely: response:<status:200 payload:""\nMcc_1.0.0_1.0:5e0f5e9f4e8bc50706a74ac24ba855bcf267c469d1931812b9f5a80381d4f035\022\014cc_1.0.0_1.0"" > 
2021-07-27 12:16:13.991 EDT [cli.lifecycle.chaincode] submitInstallProposal -> INFO 002 Chaincode code package identifier: cc_1.0.0_1.0:5e0f5e9f4e8bc50706a74ac24ba855bcf267c469d1931812b9f5a80381d4f035
Chaincode is installed on peer0.org2{code}
but then it fails during approval (with the message mentioned in the issue):
{code:java}
peer lifecycle chaincode queryinstalled
 Installed chaincodes on peer:
 Package ID: cc_1.0.0_1.0:5e0f5e9f4e8bc50706a74ac24ba855bcf267c469d1931812b9f5a80381d4f035, Label: cc_1.0.0_1.0
 Package ID: basic_1.0:ba90d276e408433a088e0c18919b4bb912d9df8952863169dca1a42dd23e2c09, Label: basic_1.0{code}
I think chaincode name should be validated as early as `peer lifecycle chaincode package`.;;;","30/Jul/21 5:13 AM;denyeart;[~ankitm123] Yes, it would be great if you could help with this issue.

However, your latest comment is not correct... there is no concept of chaincode 'name' at the packaging step. The 'name' will become the namespace in the state db when the chaincode is deployed (committed) to a channel. This is totally different from the label that is used while packaging. A label in a packaged chaincode will often denote the version of the chaincode code and will therefore often have dots in it, e.g. ""1.0.0"". The 'name' will live across versions of the packaged chaincode and dots are not allowed.

Additionally, the same chaincode package can be deployed (committed) multiple times to different names/namespaces, therefore it does not make sense to define a name during the packaging step.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
gossip discovery WARN Got a membership request from a peer that shouldn't have sent one,FAB-18410,46518,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,zerppen,zerppen,28/Jan/21 12:45 PM,10/Feb/21 5:13 PM,28/Oct/23 3:09 AM,,v2.2.0,,,,,,,,,,,fabric-gossip,,,,0,,,,,,"There are my logs:

2021-01-28 03:28:38.494 UTC [gossip.discovery] sendMemResponse -> WARN 180 Got a membership request from a peer that shouldn't have sent one: pki_id:""\020\216\001\316\223I=&\253\016\243\376}\031z\212t\005:\376\205v\320\004\256\225?\0202b=-"" , closing connection to the peer as a result.
2021-01-28 03:28:38.495 UTC [comm.grpc.server] 1 -> INFO 181 streaming call completed grpc.service=gossip.Gossip grpc.method=GossipStream grpc.peer_address=10.18.60.164:55034 grpc.peer_subject=""CN=peer0.org2.baas.com,L=San Francisco,ST=California,C=US"" grpc.code=OK grpc.call_duration=3.80551ms
2021-01-28 03:28:42.398 UTC [gossip.comm] sendToEndpoint -> WARN 182 Failed obtaining connection for , PKIid:108e01ce93493d26ab0ea3fe7d197a8a74053afe8576d004ae953f1032623d2d reason: context deadline exceeded
2021-01-28 03:28:42.398 UTC [gossip.discovery] expireDeadMembers -> WARN 183 Entering [108e01ce93493d26ab0ea3fe7d197a8a74053afe8576d004ae953f1032623d2d]
2021-01-28 03:28:42.398 UTC [gossip.discovery] expireDeadMembers -> WARN 184 Closing connection to Endpoint: , InternalEndpoint: , PKI-ID: 108e01ce93493d26ab0ea3fe7d197a8a74053afe8576d004ae953f1032623d2d, Metadata:
2021-01-28 03:28:42.398 UTC [gossip.discovery] expireDeadMembers -> WARN 185 Exiting
2021-01-28 03:28:45.400 UTC [gossip.comm] sendToEndpoint -> WARN 186 Failed obtaining connection for , PKIid:108e01ce93493d26ab0ea3fe7d197a8a74053afe8576d004ae953f1032623d2d reason: context deadline exceeded
2021-01-28 03:28:48.403 UTC [gossip.comm] sendToEndpoint -> WARN 187 Failed obtaining connection for , PKIid:108e01ce93493d26ab0ea3fe7d197a8a74053afe8576d004ae953f1032623d2d reason: context deadline exceeded
2021-01-28 03:28:51.405 UTC [gossip.comm] sendToEndpoint -> WARN 188 Failed obtaining connection for , PKIid:108e01ce93493d26ab0ea3fe7d197a8a74053afe8576d004ae953f1032623d2d reason: context deadline exceeded
2021-01-28 03:28:54.408 UTC [gossip.comm] sendToEndpoint -> WARN 189 Failed obtaining connection for , PKIid:108e01ce93493d26ab0ea3fe7d197a8a74053afe8576d004ae953f1032623d2d reason: context deadline exceeded",,denyeart,yacovm,zerppen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i7v:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,yacovm,zerppen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jan/21 7:33 PM;yacovm;This happens when a peer from org A hasn't joined any channels that a peer from org B has joined but still the peer from org B somehow sent the peer from org A a membership request. In case the peer of org A is an anchor peer but hasn't joined the channel where it is an anchor peer in, this will always happen.;;;","29/Jan/21 2:20 PM;zerppen;Yeap,problem goes into hiding between gossip and anchor.

Don't update anchor peer will not happen.;;;","10/Feb/21 12:02 AM;denyeart;[~yacovm] If an org has multiple peers for the purpose of sharding channels between them, won't this always happen? e.g. peer1 is an anchor for channel1 and peer2 is an anchor for channel2.

Do you propose to just ignore the Warnings? Do the Warnings consistently appear? Or is there a proposed resolution?;;;","10/Feb/21 12:09 AM;yacovm;If you don't use bootstrap peers, you can partition the peers in your org among channels in a way that resembles equivalence classes. ;;;","10/Feb/21 5:13 PM;denyeart;[~yacovm] Can you explain in more detail for those of us who are not developers of gossip component.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add topic in Operations Guide on using the orderer management APIs,FAB-18411,46527,,Documentation,Backlog,FAB,Fabric,software,denyeart,,,High,,,pandrejko,pandrejko,30/Jan/21 5:42 AM,03/Feb/21 3:35 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-docs,,,,0,,,,,,"Current documentation has 2 versions of the create a channel tutorial
 * Create a channel
 * Create a channel with the test network

 

The first version describes both how to configure your orderer so that you can use the orderer management APIs or remove the system channel from an existing orderer. Then it describes how to use the osnadmin channel commands to create and manage the channels.

 

The second version describes only how to use the osnadmin channel commands to create a channel based on the test network which has a single node ordering service without a system channel.

 

We could consider combining the 2 tutorials or only having the second tutorial, and adding the information from the first tutorial into an ops guide topic instead. That is what this work item is for. Topics to include would be
 * describe in detail how to configure an ordering node
 * considerations around joining additional ordering nodes to the channel
 * removing the system channel from existing ordering nodes",,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:o",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unit tests fail for release-1.4 node chaincode TestGenerateDockerBuild,FAB-18413,46533,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,denyeart,denyeart,03/Feb/21 2:46 PM,05/Feb/21 1:50 AM,28/Oct/23 3:09 AM,04/Feb/21 11:24 PM,v1.4.10,,,,,,v1.4.11,,,,,fabric-peer,,,,0,,,,,," [https://dev.azure.com/Hyperledger/Fabric/_build/results?buildId=29523&view=logs&jobId=d49d800b-0343-5c41-a4a2-8f9232282b0b&j=d49d800b-0343-5c41-a4a2-8f9232282b0b&t=f5793b6b-e295-5bc3-fe30-15e43b35cc3d]

Fails in CI and my local environment.
{code:java}
--- FAIL: TestGenerateDockerBuild (0.97s)
    platform_test.go:206: Error returned from build: 7 ""TypeError: Cannot destructure property `stat` of 'undefined' or 'null'.
            at Object.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/@npmcli/node-gyp/lib/index.js:2:29)
            at Module._compile (module.js:653:30)
            at Object.Module._extensions..js (module.js:664:10)
            at Module.load (module.js:566:32)
            at tryModuleLoad (module.js:506:12)
            at Function.Module._load (module.js:498:3)
            at Module.require (module.js:597:17)
            at require (internal/module.js:11:18)
            at Object.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/run-script-pkg.js:4:55)
            at Module._compile (module.js:653:30)
        /usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/index.js:163
              throw new Error('call config.load() before reading values')
              ^
        
        Error: call config.load() before reading values
            at Config.get (/usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/index.js:163:13)
            at process.errorHandler (/usr/local/lib/node_modules/npm/lib/utils/error-handler.js:171:32)
            at emitOne (events.js:116:13)
            at process.emit (events.js:211:7)
            at process._fatalException (bootstrap_node.js:391:26)
        ""
FAIL
coverage: 81.9% of statements
FAIL	github.com/hyperledger/fabric/core/chaincode/platforms/node	1.052s
{code}",,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zyw1",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Feb/21 12:25 AM;sykesm;This is related to npm install changes.

{code}
➜  node git:(release-1.4) ✗ docker run --rm -it hyperledger/fabric-baseimage:0.4.22 /bin/bash
root@45dc91e60d4b:/# npm install -g npm@latest
/usr/local/bin/npm -> /usr/local/lib/node_modules/npm/bin/npm-cli.js
/usr/local/bin/npx -> /usr/local/lib/node_modules/npm/bin/npx-cli.js
+ npm@7.5.2
added 59 packages from 30 contributors, removed 235 packages and updated 195 packages in 5.299s
root@45dc91e60d4b:/# npm
TypeError: Cannot destructure property `stat` of 'undefined' or 'null'.
    at Object.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/@npmcli/node-gyp/lib/index.js:2:29)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Module.require (module.js:597:17)
    at require (internal/module.js:11:18)
    at Object.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/run-script-pkg.js:4:55)
    at Module._compile (module.js:653:30)
/usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/index.js:163
      throw new Error('call config.load() before reading values')
      ^

Error: call config.load() before reading values
    at Config.get (/usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/index.js:163:13)
    at process.errorHandler (/usr/local/lib/node_modules/npm/lib/utils/error-handler.js:171:32)
    at emitOne (events.js:116:13)
    at process.emit (events.js:211:7)
    at process._fatalException (bootstrap_node.js:391:26)
root@45dc91e60d4b:/# exit
➜  node git:(release-1.4) ✗
{code} 

The install is being done by images/ccenv/Dockerfile.in
{code}
RUN npm install -g npm@latest
{code}
;;;","04/Feb/21 12:27 AM;sykesm;see https://github.com/npm/cli/issues/2599;;;","04/Feb/21 12:51 AM;sykesm;https://github.com/hyperledger/fabric/pull/2350;;;","05/Feb/21 1:50 AM;denyeart;Fabric v1.4.x node chaincode build will experience this issue when using ccenv through version 1.4.10.  In peer log it is reported as follows:

 

 
{code:java}
2021-02-04 11:44:17.131 EST [endorser] SimulateProposal -> ERRO 03f [mychannel][b0cb7db2] failed to invoke chaincode name:""lscc"" , error: Failed to generate platform-specific docker build: Error returned from build: 7 ""TypeError: Cannot destructure property `stat` of 'undefined' or 'null'.
 at Object.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/@npmcli/node-gyp/lib/index.js:2:29)
 at Module._compile (module.js:653:30)
 at Object.Module._extensions..js (module.js:664:10)
 at Module.load (module.js:566:32)
 at tryModuleLoad (module.js:506:12)
 at Function.Module._load (module.js:498:3)
 at Module.require (module.js:597:17)
 at require (internal/module.js:11:18)
 at Object.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/run-script-pkg.js:4:55)
 at Module._compile (module.js:653:30)
/usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/index.js:163
 throw new Error('call config.load() before reading values')
 ^
Error: call config.load() before reading values
 at Config.get (/usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/index.js:163:13)
 at process.errorHandler (/usr/local/lib/node_modules/npm/lib/utils/error-handler.js:171:32)
 at emitOne (events.js:116:13)
 at process.emit (events.js:211:7)
 at process._fatalException (bootstrap_node.js:391:26)
""
error starting container
error starting container
{code}
 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Switch fabric-cli to main branch,FAB-18414,46534,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,03/Feb/21 9:56 PM,03/Feb/21 11:21 PM,28/Oct/23 3:09 AM,03/Feb/21 11:21 PM,,,,,,,,,,,,,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01iar:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),troyronda,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backfill integration test suite with code to exercise osnadmin,FAB-18415,46535,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sykesm,sykesm,04/Feb/21 1:08 AM,01/Apr/21 1:16 PM,28/Oct/23 3:09 AM,01/Apr/21 1:16 PM,v2.2.0,v2.3.0,,,,,v2.4.0,,,,,fabric-orderer,fabric-test,,,0,,,,,,"The {{osnadmin}} utility is not used or tested in the integration test suite but is one of the command line tools we produce, provide reference information for in our documentation, use in our samples, and reference in our tutorials.

Given its prominence in the externally facing material, it should be exercised regularly in our integration test suite but it is not.",,sykesm,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01iaz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/21 6:14 AM;sykesm;https://github.com/hyperledger/fabric/pull/2440;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-samples network _test not found,FAB-18416,46539,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Jakeeyturner,Jakeeyturner,05/Feb/21 8:03 PM,09/Feb/21 12:54 AM,28/Oct/23 3:09 AM,09/Feb/21 12:54 AM,,,,,,,,,,,,fabric-samples,,,,0,,,,,,"Hello,

 

When [https://github.com/hyperledger/fabric-samples/pull/409] was merged, I believe fabric-samples test-network was broken for CI instances.

The test-network seems to work okay locally, but only encounters problems when running on CI. 

E.g

[https://dev.azure.com/Hyperledger/Fabric-Samples/_build/results?buildId=29574&view=logs&j=98b5b0e0-fc73-50d8-cdbe-b7a1b46de137&t=e8322841-a67d-5ec3-ae89-37f2233483b3&l=512]

 

The error appears when trying to invoke a transaction, so presumably something has gone wrong before that.

 
{code:java}
Error: endorsement failure during invoke. response: status:500 message:""error in simulation: failed to execute transaction 18cf3086eb32e877a497fe3cb33a4d0d0dc892f221528bf0788a07d4ffb6bdcf: could not launch chaincode fabcar_1:762e0fe3dbeee0f7b08fb6200adeb4a3a20f649a00f168c0b3c2257e53b6e506: error starting container: error starting container: API error (404): network _test not found"" 

{code}
 ",,denyeart,Jakeeyturner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ibv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,Jakeeyturner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/21 12:53 AM;denyeart;We believe this is fixed now - [https://github.com/hyperledger/fabric-samples/pull/412]

Please re-open if you see again.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document CORE_LEDGER_SNAPSHOTS_ROOTDIR for peer start,FAB-18417,46540,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,jpdaza,jpdaza,06/Feb/21 12:59 AM,02/Apr/21 12:09 AM,28/Oct/23 3:09 AM,02/Apr/21 12:07 AM,v2.3.0,,,,,,v2.3.2,v2.4.0,,,,fabric-docs,fabric-peer,,,0,environment,fabric,vars,,,"Following [https://hyperledger-fabric.readthedocs.io/en/latest/peer-chaincode-devmode.html] there is a step to start the peer:

 
{code:java}
CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:10443 CORE_PEER_FILESYSTEMPATH=$(pwd)/data/ FABRIC_LOGGING_SPEC=chaincode=debug CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052 peer node start --peer-chaincodedev=true
{code}
 

But this command fails with:

 
{code:java}
2021-02-04 20:32:52.078 -05 [nodeCmd] serve -> INFO 001 Starting peer: 
 Version: 2.4.0 
 Commit SHA: 0146307ee 
 Go version: go1.15.7
 OS/Arch: linux/amd64
 Chaincode:
 Base Docker Label: org.hyperledger.fabric
 Docker Namespace: hyperledger
2021-02-04 20:32:52.079 -05 [peer] getLocalAddress -> INFO 002 Auto-detected peer address: 192.168.1.74:7051 [357/1987]
2021-02-04 20:32:52.079 -05 [peer] getLocalAddress -> INFO 003 Host is 0.0.0.0 , falling back to auto-detected address: 192.168.1.74:7051
2021-02-04 20:32:52.079 -05 [nodeCmd] initGrpcSemaphores -> INFO 004 concurrency limit for endorser service is 2500
2021-02-04 20:32:52.079 -05 [nodeCmd] initGrpcSemaphores -> INFO 005 concurrency limit for deliver service is 2500
2021-02-04 20:32:52.100 -05 [certmonitor] trackCertExpiration -> INFO 006 The enrollment certificate will expire on 2027-11-10 13:41:11 +0000 UTC
2021-02-04 20:32:52.100 -05 [ledgermgmt] NewLedgerMgr -> INFO 007 Initializing LedgerMgr
panic: Error in instantiating ledger provider: mkdir /var/hyperledger: permission denied
error while creating the dir: /var/hyperledger/production/snapshots/temp
github.com/hyperledger/fabric/core/ledger/kvledger.(*Provider).initSnapshotDir
 /home/ertech/workspace/fabricDev/fabric/core/ledger/kvledger/kv_ledger_provider.go:254
github.com/hyperledger/fabric/core/ledger/kvledger.NewProvider
 /home/ertech/workspace/fabricDev/fabric/core/ledger/kvledger/kv_ledger_provider.go:125
github.com/hyperledger/fabric/core/ledger/ledgermgmt.NewLedgerMgr
 /home/ertech/workspace/fabricDev/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:71
github.com/hyperledger/fabric/internal/peer/node.serve
 /home/ertech/workspace/fabricDev/fabric/internal/peer/node/start.go:431
github.com/hyperledger/fabric/internal/peer/node.glob..func6
 /home/ertech/workspace/fabricDev/fabric/internal/peer/node/start.go:127
github.com/spf13/cobra.(*Command).execute
 /home/ertech/workspace/fabricDev/fabric/vendor/github.com/spf13/cobra/command.go:762
github.com/spf13/cobra.(*Command).ExecuteC
 /home/ertech/workspace/fabricDev/fabric/vendor/github.com/spf13/cobra/command.go:852
github.com/spf13/cobra.(*Command).Execute 
 /home/ertech/workspace/fabricDev/fabric/vendor/github.com/spf13/cobra/command.go:800
main.main
 /home/ertech/workspace/fabricDev/fabric/cmd/peer/main.go:56
runtime.main
 /home/ertech/programs/go/src/runtime/proc.go:204
runtime.goexit
 /home/ertech/programs/go/src/runtime/asm_amd64.s:1374
goroutine 1 [running]:
github.com/hyperledger/fabric/core/ledger/ledgermgmt.NewLedgerMgr(0xc0002a9960, 0x1bd5760)
 /home/ertech/workspace/fabricDev/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:85 +0x7b0
github.com/hyperledger/fabric/internal/peer/node.serve(0xc0005ac880, 0x0, 0x1, 0x0, 0x0)
 /home/ertech/workspace/fabricDev/fabric/internal/peer/node/start.go:431 +0x213b
github.com/hyperledger/fabric/internal/peer/node.glob..func6(0x2301da0, 0xc0005ac880, 0x0, 0x1, 0x0, 0x0)
 /home/ertech/workspace/fabricDev/fabric/internal/peer/node/start.go:127 +0x9c
github.com/spf13/cobra.(*Command).execute(0x2301da0, 0xc0005ac860, 0x1, 0x1, 0x2301da0, 0xc0005ac860) 
 /home/ertech/workspace/fabricDev/fabric/vendor/github.com/spf13/cobra/command.go:762 +0x47c
github.com/spf13/cobra.(*Command).ExecuteC(0x2302720, 0xc0002b5f48, 0x1, 0x1)
 /home/ertech/workspace/fabricDev/fabric/vendor/github.com/spf13/cobra/command.go:852 +0x2fe
github.com/spf13/cobra.(*Command).Execute(...)
 /home/ertech/workspace/fabricDev/fabric/vendor/github.com/spf13/cobra/command.go:800
main.main()
 /home/ertech/workspace/fabricDev/fabric/cmd/peer/main.go:56 +0x4c5
{code}
Command is trying to create the directory /var/hyperledger and ignoring CORE_PEER_FILESYSTEMPATH, the only way to continue is to modify the fabric/sampleconfig/core.yaml, attibutes fileSystemPath and snapshots.rootDir

 

Tested in 2.3.0 and 2.4.0

 ",,denyeart,jpdaza,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxo9g",,,,Unset,Unset,v2.x,set the environment variable CORE_PEER_FILESYSTEMPATH and start a peer,,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,jpdaza,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/21 11:49 PM;denyeart;Your problem is not with CORE_PEER_FILESYSTEMPATH, it is with CORE_LEDGER_SNAPSHOTS_ROOTDIR. This is a new snapshot directory added in v2.3.x that you need to override if you don't want to use default location of /var/hyperledger/production/snapshots.

[https://github.com/hyperledger/fabric/blob/release-2.3/sampleconfig/core.yaml#L703]

Let's use this issue to update docs to include mention of CORE_LEDGER_SNAPSHOTS_ROOTDIR everywhere CORE_PEER_FILESYSTEMPATH is mentioned.;;;","01/Apr/21 1:15 PM;denyeart;improved doc:

[https://github.com/hyperledger/fabric/pull/2526]

 

improved error message:

https://github.com/hyperledger/fabric/pull/2528;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Review implications of x509 validation changes between Go 1.14 and 1.15,FAB-18418,46542,46376,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sykesm,sykesm,09/Feb/21 3:21 AM,17/Feb/21 7:32 AM,28/Oct/23 3:09 AM,17/Feb/21 7:32 AM,,,,,,,,,,,,fabric-peer,,,,0,,,,,,"We have to decide how we want to handle the CN validation changes the different versions of Go.

See https://github.com/hyperledger/fabric/pull/1716#issuecomment-673493336",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01icj:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Feb/21 7:47 AM;sykesm;https://github.com/hyperledger/fabric/pull/2384;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Review implications of CRL validation changes across different versions of Go,FAB-18419,46543,46376,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sykesm,sykesm,09/Feb/21 3:22 AM,09/Feb/21 9:39 PM,28/Oct/23 3:09 AM,09/Feb/21 9:39 PM,,,,,,,,,,,,fabric-peer,,,,0,,,,,,See https://github.com/hyperledger/fabric/pull/1716#issuecomment-674385283,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01icr:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/21 9:39 PM;sykesm;https://github.com/hyperledger/fabric/pull/2379;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Developing Applications on monitoring for events ,FAB-18420,46549,,Documentation,Backlog,FAB,Fabric,software,denyeart,,,High,,,pandrejko,pandrejko,10/Feb/21 10:11 PM,16/Sep/21 12:58 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-docs,,,,0,,,,,,"In [https://hyperledger-fabric.readthedocs.io/en/latest/developapps/application.html#submit-transaction] we need to describe best practices for monitoring for events

 

Something along the lines of 



Application clients must ensure that their transaction proposals are validated and that the proposals complete successfully. A proposal can be delayed or lost for multiple reasons, such as a network outage or a component failure. You should code your application for [high availability|https://cloud.ibm.com/docs/blockchain-sw?topic=blockchain-sw-best-practices-app#best-practices-app-ha-app] to handle component failure. 

If a chaincode is not running, the first transaction proposal that is sent to this chaincode starts the chaincode. While the chaincode is starting, all other proposals are rejected with an error that indicates that the chaincode is starting. This is different from transaction invalidation. If any proposal is rejected while the chaincode is starting, application clients need to resend the rejected proposals after the chaincode starts. Application clients can use a message queue to avoid losing transaction proposals.

You can use a channel-based event service to monitor transactions and build message queues. The [channelEventHub|https://hyperledger.github.io/fabric-sdk-node/release-1.4/ChannelEventHub.html] class can register listeners based on transaction, block, and chaincode events. Channel-based listeners from the channel eventhub can scale to multiple channels and distinguish between traffic on different channels.

 ",,bestbeforetoday,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrhj:i",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/21 11:43 PM;denyeart;{color:#1d1c1d}Some more info to document in Developing Applications - {color}

{color:#1d1c1d}Guidance is needed around retries, there are two different types of retry required:{color}
 * {color:#1d1c1d}Retry Scenario 1- If you get a timeout (haven't seen commit status), you need to resubmit with the same txid (to protect against an unintended dup tx). You can do this by {color}persisting the original submitted transaction, de-serializing it, and re-submiting to ordering.
 * {color:#1d1c1d}Retry Scenario 2 - If you get an tx invalidation, you need to re-endorse with a different txid.{color}

We also need more information in Developing Applications around {color:#1d1c1d}load balancing considerations (across endorsing peers and orderers) and connection re-use considerations. It is not clear how these aspects of applications are handled, either with or without service discovery.{color};;;","10/Mar/21 2:39 AM;bestbeforetoday;We should not be encouraging people to use the old v1.4 low-level ChannelEventHub. If the goal is to listen for block events, contract/chaincode events or transaction commits then the high-level fabric-network API provides capabilities that are both much simpler and offer a better quality of service. The high-level API is the only one we should be documenting.

The mix of description of proposal (endorsement) success and events is confusing for me as they are two separate things. Endorsement of proposals happens before transactions are submitted to the orderer and failures with a specific peer are typically handled transparently by a client (particularly one using discovery) as the endorsement process within the SDK will try other peers in the event of a peer endorsement failure. If a proposal cannot be endorsed then the client will generate an error immediately and nothing will be sent to the order so no events will be generated.

As Dave describes, failures can still happen after an endorsed transaction is successfully sent to the orderer. The default behaviour of the SDK is to generate an error when it detects this. The client can also time out before receiving the transaction status, at which point the status is indeterminate and again the SDK generates an error to inform the application. In both cases it is possible for the client using the high-level API to resubmit the same transaction, either with the same transaction ID or a different one. This does not happen automagically. In both cases it will go through the endorsement process again. It might be useful to document the different application code patterns to achieve each behaviour.;;;","16/Jun/21 8:27 PM;denyeart;In some cases the application may want to persist the submitted transaction, in case the application fails and needs to resubmit the transaction again upon coming back up with the same endorsements and same txid. See FABN-1714 for more info.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Two invalid email addresses in fabric-chaincode-evm MAINTAINERS.md,FAB-18421,46555,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AjeethT,ryjones,ryjones,12/Feb/21 1:36 AM,02/Apr/21 9:52 PM,28/Oct/23 3:09 AM,02/Apr/21 9:52 PM,,,,,,,,,,,,,,,,0,,,,,,"[The maintainers file|https://github.com/hyperledger/fabric-chaincode-evm/blob/main/MAINTAINERS.md] has invalid addresses for Jay Guo and Swetha Repakula",,AjeethT,denyeart,guoger,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01if7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),AjeethT,denyeart,guoger,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/21 12:18 AM;AjeethT;Where to find the email addresses to change it in maintainer file;;;","01/Apr/21 12:42 PM;denyeart;[~guoger] [~swetharepakula]  Can you confirm or fix the maintainers file?;;;","02/Apr/21 5:15 PM;guoger;[~denyeart] i'll gather the correct info and update. There are some problems with current CI (it's fairly stale), but i'll force-merge this simple fix for now.;;;","02/Apr/21 9:51 PM;denyeart;Ok, I force merged https://github.com/hyperledger/fabric-chaincode-evm/pull/33;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Commercial-Paper Java Application Uncompilable,FAB-18422,46557,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,btl5037,btl5037,12/Feb/21 7:47 AM,12/Feb/21 7:47 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-samples,,,,0,samples,,,,,"The commercial paper cannot be run due to a dependency in the gateway conflicting with a dependency in the chaincode. The only way to resolve it is to pin the chaincode to the same version as the gateway instead of a range: [https://github.com/hyperledger/fabric-samples/blob/master/commercial-paper/organization/digibank/application-java/pom.xml#L17]

Note, this affects the magentocorp application as well. Can we investigate and fix the cause of the dependency conflict.

You can recreate the bug by changing to the application, and running `mvn clean package`:

 

!image-2021-02-11-17-46-16-648.png!",,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Feb/21 7:46 AM;btl5037;image-2021-02-11-17-46-16-648.png;https://jira.hyperledger.org/secure/attachment/18889/image-2021-02-11-17-46-16-648.png",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zyla",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
failed to restore persisted raft data: failed to create or read WAL,FAB-18423,46559,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Environment Issue,,TommyStarK,TommyStarK,13/Feb/21 10:37 PM,16/Feb/21 2:11 AM,28/Oct/23 3:09 AM,16/Feb/21 2:11 AM,v1.4.10,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"image:  hyperledger/fabric-orderer:1.4.10

Still getting an inconsistent state where
a Raft WAL snapshot was taken but an in-flight block at the associated height is not yet written.

stack trace:

```
2021-02-13 13:26:36.374 UTC [orderer.consensus.etcdraft] createOrReadWAL -> INFO 03b Found WAL data at path '/var/hyperledger/production/orderer/etcdraft/wal/channelall', replaying it channel=channelall node=12021-02-13 13:26:36.374 UTC [orderer.consensus.etcdraft] createOrReadWAL -> INFO 03b Found WAL data at path '/var/hyperledger/production/orderer/etcdraft/wal/channelall', replaying it channel=channelall node=12021-02-13 13:26:36.374 UTC [orderer.commmon.multichannel] newChainSupport -> PANI 03c [channel: channelall] Error creating consenter: failed to restore persisted raft data: failed to create or read WAL: failed to open WAL: fileutil: file already lockedpanic: [channel: channelall] Error creating consenter: failed to restore persisted raft data: failed to create or read WAL: failed to open WAL: fileutil: file already locked
goroutine 67 [running]:github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore.(*CheckedEntry).Write(0xc00014d550, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore/entry.go:229 +0x545github.com/hyperledger/fabric/vendor/go.uber.org/zap.(*SugaredLogger).log(0xc000010298, 0x4, 0x14eff5f, 0x2a, 0xc00019ebd8, 0x2, 0x2, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:234 +0x100github.com/hyperledger/fabric/vendor/go.uber.org/zap.(*SugaredLogger).Panicf(...) /opt/gopath/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:159github.com/hyperledger/fabric/common/flogging.(*FabricLogger).Panicf(...) /opt/gopath/src/github.com/hyperledger/fabric/common/flogging/zap.go:74github.com/hyperledger/fabric/orderer/common/multichannel.newChainSupport(0xc00025e000, 0xc0005185e0, 0xc0002f01b0, 0x16505a0, 0x202eb48, 0xc0002d0880, 0xc0001e6050) /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/chainsupport.go:74 +0x925github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).newChain(0xc00025e000, 0xc0001e6050) /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:327 +0x1e1github.com/hyperledger/fabric/orderer/common/multichannel.(*BlockWriter).WriteConfigBlock(0xc000622400, 0xc0006c8000, 0xc0006e6040, 0x7, 0x7) /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/blockwriter.go:118 +0x357github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).writeConfigBlock(0xc0000b6500, 0xc0006c8000, 0x4) /opt/gopath/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:1284 +0x28fgithub.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).writeBlock(0xc0000b6500, 0xc0006c8000, 0x4) /opt/gopath/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:848 +0x1a9github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).apply(0xc0000b6500, 0xc0004dd9a0, 0x1, 0x1) /opt/gopath/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:1048 +0x24agithub.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).serveRequest(0xc0000b6500) /opt/gopath/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:757 +0x959created by github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).Start /opt/gopath/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:340 +0x230
```",,denyeart,TommyStarK,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ifv:",,,,Unset,Unset,,"- start a single  RAFT orderer node
- attempt to create a channel
(tested with CLI as well as fabric-sdk-go)",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,TommyStarK,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/21 7:22 PM;denyeart;It looks like etcd tries to lock a file but the OS already has the file locked, probably environment issue rather than Fabric issue.

[~guoger] any other thoughts?;;;","15/Feb/21 10:57 PM;TommyStarK;Could this error be caused by a docker volume mounted at /var/hyperledger/production ?;;;","16/Feb/21 2:10 AM;TommyStarK;After some tests it seems that this error is caused by the docker volume. I am closing the issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Discovery service integration tests failures,FAB-18424,46574,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,manish-sethi,sykesm,sykesm,16/Feb/21 2:22 AM,19/Feb/21 7:03 AM,28/Oct/23 3:09 AM,19/Feb/21 7:03 AM,v2.3.0,,,,,,v2.3.2,v2.4.0,,,,fabric-ledger,,,,0,ipm,,,,,"The discovery service tests fail when a snapshot request is issued before ""update anchor peers"" is completed.

{code}
• Failure [72.576 seconds]
DiscoveryService
/Users/sykesm/fabric/integration/discovery/discovery_test.go:35
  discovers network configuration, endorsers, and peer membership [It]
  /Users/sykesm/fabric/integration/discovery/discovery_test.go:154

  Timed out after 60.004s.
  Expected
      <string>: Successfully got pending snapshot requests: [1]

  to contain substring
      <string>: Successfully got pending snapshot requests: []


  /Users/sykesm/fabric/integration/discovery/discovery_test.go:776
------------------------------


Summarizing 1 Failure:

[Fail] DiscoveryService [It] discovers network configuration, endorsers, and peer membership
/Users/sykesm/fabric/integration/discovery/discovery_test.go:776
{code}

This failure is related to this line in the test:
{code}
		By(""verifying snapshot completed on org1Peer0"")
		verifyNoPendingSnapshotRequest(network, org1Peer0, ""testchannel"")
{code}

Some of the logs
{code}
STEP: generating a snapshot at current block number on org1Peer0
...
[o][peer-channel-info] Blockchain info: {""height"":2,""currentBlockHash"":""7FuHgrJ1JGQDOlDJ6frNhfWjCYBB3SDZKSCTscf7q3k="",""previousBlockHash"":""erqByEwRm6VLp902tVgydTBRHgsDZhISnCxqtkUQg1U=""}
...
[d][peer-snapshot-submit] starting peer snapshot submitrequest --channelID testchannel --blockNumber 0 --peerAddress 127.0.0.1:21005 --tlsRootCertFile /var/folders/gp/t_36h6md65j0gw522mbvy7180000gn/T/e2e-sd285796601/crypto/ca-certs.pem
...
[e][Org1.peer0] 2021-02-15 10:45:46.531 EST 02de DEBU [committer.txvalidator] validateTx -> [testchannel] validateTx completes for block 0x14003248200 env 0x14003230910 txn 0
[e][Org1.peer0] 2021-02-15 10:45:46.531 EST 02df DEBU [committer.txvalidator] Validate -> got result for idx 0, code 0
[e][Org1.peer0] 2021-02-15 10:45:46.531 EST 02e0 INFO [committer.txvalidator] Validate -> [testchannel] Validated block [2] in 3ms
[e][Org1.peer0] 2021-02-15 10:45:46.531 EST 02e1 DEBU [kvledger] processSnapshotMgmtEvents -> Event received channelID=testchannel type=commitStart blockNumber=2 snapshotInProgress=false
[e][Org1.peer0] 2021-02-15 10:45:46.531 EST 02e2 DEBU [kvledger] commit -> [testchannel] Validating state for block [2]
[e][Org1.peer0] 2021-02-15 10:45:46.531 EST 02e3 DEBU [lockbasedtxmgr] ValidateAndPrepare -> Waiting for purge mgr to finish the background job of computing expirying keys for the block
[e][Org1.peer0] 2021-02-15 10:45:46.531 EST 02e4 DEBU [lockbasedtxmgr] ValidateAndPrepare -> lock acquired on oldBlockCommit for validating read set version against the committed version
[e][Org1.peer0] 2021-02-15 10:45:46.531 EST 02e5 DEBU [lockbasedtxmgr] ValidateAndPrepare -> Validating new block with num trans = [1]
[e][Org1.peer0] 2021-02-15 10:45:46.531 EST 02e6 DEBU [validation] ValidateAndPrepareBatch -> ValidateAndPrepareBatch() for block number = [2]
[e][Org1.peer0] 2021-02-15 10:45:46.531 EST 02e7 DEBU [validation] ValidateAndPrepareBatch -> preprocessing ProtoBlock...
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02e8 DEBU [validation] preprocessProtoBlock -> txType=CONFIG
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02e9 DEBU [validation] processNonEndorserTx -> Performing custom processing for transaction [txid=], [txType=CONFIG]
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02ea DEBU [validation] processNonEndorserTx -> Processor for custom tx processing:&peer.ConfigTxProcessor{}
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02eb DEBU [lockbasedtxmgr] NewTxSimulator -> constructing new tx simulator
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02ec DEBU [lockbasedtxmgr] newQueryExecutor -> constructing new query executor txid = []
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02ed DEBU [lockbasedtxmgr] newTxSimulator -> constructing new tx simulator txid = []
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02ee DEBU [peer] GenerateSimulationResults -> Processing CONFIG
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02ef DEBU [lockbasedtxmgr] GetTxSimulationResults -> Simulation completed, getting simulation results
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02f0 DEBU [lockbasedtxmgr] Done -> Done with transaction simulation / query execution []
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02f1 DEBU [validation] validateAndPrepareBatch -> Block [2] Transaction index [0] TxId [] marked as valid by state validator. ContainsPostOrderWrites [true]
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02f2 DEBU [validation] applyWriteSet -> txops=validation.txOps{validation.compositeKey{ns:"""", coll:"""", key:""CHANNEL_CONFIG_ENV_BYTES""}:(*validation.keyOps)(0x1400346e980)}
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02f3 DEBU [validation] ValidateAndPrepareBatch -> validating rwset...
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02f4 DEBU [validation] ValidateAndPrepareBatch -> postprocessing ProtoBlock...
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02f5 DEBU [validation] ValidateAndPrepareBatch -> ValidateAndPrepareBatch() complete
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02f6 DEBU [kvledger] commit -> [testchannel] Adding CommitHash to the block [2]
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02f7 DEBU [kvledger] commit -> [testchannel] Committing pvtdata and block [2] to storage
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02f8 DEBU [kvledger] commitToPvtAndBlockStore -> Writing block [2] to pvt data store
[e][Org1.peer0] 2021-02-15 10:45:46.532 EST 02f9 DEBU [pvtdatastorage] Commit -> Committing private data for block [2]
...
[e][Org1.peer0] 2021-02-15 10:45:46.561 EST 0311 DEBU [pvtdatastorage] Commit -> Committed private data for block [2]
[e][peer-snapshot-submit] 2021-02-15 10:45:46.563 EST 0005 DEBU [comm.tls] ClientHandshake -> Client TLS handshake completed in 793.458µs remoteaddress=127.0.0.1:21005
[e][Org1.peer0] 2021-02-15 10:45:46.563 EST 0312 DEBU [core.comm] ServerHandshake -> Server TLS handshake completed in 848.75µs server=PeerServer remoteaddress=127.0.0.1:65205
[e][Org1.peer0] 2021-02-15 10:45:46.563 EST 0313 DEBU [kvledger] processSnapshotMgmtEvents -> Event received channelID=testchannel type=requestAdd blockNumber=0 snapshotInProgress=false
[e][Org1.peer0] 2021-02-15 10:45:46.563 EST 0314 INFO [kvledger] processSnapshotMgmtEvents -> Converting the snapshot generation request from block number 0 to the latest committed block number channelID=testchannel convertedRequestBlockNumber=1
[e][Org1.peer0] 2021-02-15 10:45:46.563 EST 0315 INFO [kvledger] add -> Adding new request for snapshot channelID=testchannel blockNumber=1
[e][Org1.peer0] 2021-02-15 10:45:46.598 EST 0316 DEBU [blkstorage] indexBlock -> Indexing block [blockNum=2, blockHash=[]byte{0xf3, 0xd7, 0x8, 0x73, 0x40, 0x17, 0x1a, 0x1d, 0x52, 0x3b, 0xde, 0xc1, 0xc7, 0x93, 0x39, 0xd9, 0x9c, 0xd5, 0x35, 0xb1, 0x86, 0x21, 0x2a, 0x69, 0xaa, 0xf, 0x56, 0xe8, 0x74, 0xa5, 0x70, 0x54} txOffsets=
[e][Org1.peer0] txId=c3911b16bbac888a554abe7e2fa6167f38f1aca45fd06959f0e34c775dc26be2 locPointer=offset=71, bytesLength=23741
[e][Org1.peer0] ]
[e][Org1.peer0] 2021-02-15 10:45:46.598 EST 0317 DEBU [blkstorage] indexBlock -> Adding txLoc [fileSuffixNum=0, offset=48641, bytesLength=23741] for tx ID: [c3911b16bbac888a554abe7e2fa6167f38f1aca45fd06959f0e34c775dc26be2] to txid-index
[e][Org1.peer0] 2021-02-15 10:45:46.598 EST 0318 DEBU [blkstorage] indexBlock -> Adding txLoc [fileSuffixNum=0, offset=48641, bytesLength=23741] for tx number:[0] ID: [c3911b16bbac888a554abe7e2fa6167f38f1aca45fd06959f0e34c775dc26be2] to blockNumTranNum index
[e][Org1.peer0] 2021-02-15 10:45:46.614 EST 0319 INFO [kvledger] add -> Added new request for snapshot channelID=testchannel blockNumber=1 nextsnapshotblockNumber=1
...
[o][peer-snapshot-submit] Snapshot request submitted successfully
STEP: verifying snapshot completed on org1Peer0
[d][peer-snapshot-submit] starting peer snapshot listpending --channelID testchannel --peerAddress 127.0.0.1:21005 --tlsRootCertFile /var/folders/gp/t_36h6md65j0gw522mbvy7180000gn/T/e2e-sd285796601/crypto/ca-certs.pem
...
[o][peer-snapshot-submit] Successfully got pending snapshot requests: [1]
...
[e][Org1.peer0] 2021-02-15 10:45:46.720 EST 032e DEBU [history] Commit -> Channel [testchannel]: Updates committed to history database for blockNo [2]
[e][Org1.peer0] 2021-02-15 10:45:46.720 EST 032f INFO [kvledger] commit -> [testchannel] Committed block [2] with 1 transaction(s) in 188ms (state_validation=0ms block_and_pvtdata_commit=117ms state_commit=35ms) commitHash=[5f88b61407b149a48413433f4670c46531e5c4a8febdc339a9536ff8716a559e]
[e][Org1.peer0] 2021-02-15 10:45:46.720 EST 0330 DEBU [kvledger] processSnapshotMgmtEvents -> Event received channelID=testchannel type=commitDone blockNumber=2 snapshotInProgress=false
...
[d][peer-snapshot-submit] starting peer snapshot listpending --channelID testchannel --peerAddress 127.0.0.1:21005 --tlsRootCertFile /var/folders/gp/t_36h6md65j0gw522mbvy7180000gn/T/e2e-sd285796601/crypto/ca-certs.pem
[e][peer-snapshot-submit] 2021-02-15 10:45:56.758 EST 0001 DEBU [bccsp] GetDefault -> Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
[e][peer-snapshot-submit] 2021-02-15 10:45:56.759 EST 0002 DEBU [bccsp] GetDefault -> Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
[e][peer-snapshot-submit] 2021-02-15 10:45:56.772 EST 0003 DEBU [bccsp] GetDefault -> Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
[e][peer-snapshot-submit] 2021-02-15 10:45:56.774 EST 0004 DEBU [bccsp_sw] openKeyStore -> KeyStore opened at [/var/folders/gp/t_36h6md65j0gw522mbvy7180000gn/T/e2e-sd285796601/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore]...done
[e][peer-snapshot-submit] 2021-02-15 10:45:56.778 EST 0005 DEBU [comm.tls] ClientHandshake -> Client TLS handshake completed in 1.575167ms remoteaddress=127.0.0.1:21005
[e][Org1.peer0] 2021-02-15 10:45:56.778 EST 035e DEBU [core.comm] ServerHandshake -> Server TLS handshake completed in 1.638875ms server=PeerServer remoteaddress=127.0.0.1:65211
[e][Org1.peer0] 2021-02-15 10:45:56.778 EST 035f DEBU [leveldbhelper] GetIterator -> Getting iterator for range [[]byte{0x74, 0x65, 0x73, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x32, 0x0}] - [[]byte{0x74, 0x65, 0x73, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x32, 0x1}]
[e][Org1.peer0] 2021-02-15 10:45:56.778 EST 0360 INFO [comm.grpc.server] 1 -> unary call completed grpc.service=protos.Snapshot grpc.method=QueryPendings grpc.peer_address=127.0.0.1:65211 grpc.code=OK grpc.call_duration=272.917µs
[o][peer-snapshot-submit] Successfully got pending snapshot requests: [1]
...
[d][peer-snapshot-submit] starting peer snapshot listpending --channelID testchannel --peerAddress 127.0.0.1:21005 --tlsRootCertFile /var/folders/gp/t_36h6md65j0gw522mbvy7180000gn/T/e2e-sd285796601/crypto/ca-certs.pem
[e][peer-snapshot-submit] 2021-02-15 10:46:06.839 EST 0001 DEBU [bccsp] GetDefault -> Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
[e][peer-snapshot-submit] 2021-02-15 10:46:06.840 EST 0002 DEBU [bccsp] GetDefault -> Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
[e][peer-snapshot-submit] 2021-02-15 10:46:06.854 EST 0003 DEBU [bccsp] GetDefault -> Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.
[e][peer-snapshot-submit] 2021-02-15 10:46:06.855 EST 0004 DEBU [bccsp_sw] openKeyStore -> KeyStore opened at [/var/folders/gp/t_36h6md65j0gw522mbvy7180000gn/T/e2e-sd285796601/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore]...done
[e][peer-snapshot-submit] 2021-02-15 10:46:06.859 EST 0005 DEBU [comm.tls] ClientHandshake -> Client TLS handshake completed in 1.419083ms remoteaddress=127.0.0.1:21005
[e][Org1.peer0] 2021-02-15 10:46:06.859 EST 037e DEBU [core.comm] ServerHandshake -> Server TLS handshake completed in 1.474041ms server=PeerServer remoteaddress=127.0.0.1:65215
[e][Org1.peer0] 2021-02-15 10:46:06.860 EST 037f DEBU [leveldbhelper] GetIterator -> Getting iterator for range [[]byte{0x74, 0x65, 0x73, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x32, 0x0}] - [[]byte{0x74, 0x65, 0x73, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x32, 0x1}]
[e][Org1.peer0] 2021-02-15 10:46:06.860 EST 0380 INFO [comm.grpc.server] 1 -> unary call completed grpc.service=protos.Snapshot grpc.method=QueryPendings grpc.peer_address=127.0.0.1:65215 grpc.code=OK grpc.call_duration=294.625µs
[o][peer-snapshot-submit] Successfully got pending snapshot requests: [1]
{code}",,btl5037,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Feb/21 1:37 AM;sykesm;discovery-1.log;https://jira.hyperledger.org/secure/attachment/18894/discovery-1.log","18/Feb/21 8:26 AM;sykesm;image-2021-02-17-18-25-59-505.png;https://jira.hyperledger.org/secure/attachment/18895/image-2021-02-17-18-25-59-505.png",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqwk",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,manish-sethi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/21 2:33 AM;sykesm;It appears that the snapshot was requested for {{blockNumber=1}} while block 2 was being processed.
{code}
[e][Org1.peer0] 2021-02-15 10:45:46.563 EST 0314 INFO [kvledger] processSnapshotMgmtEvents -> Converting the snapshot generation request from block number 0 to the latest committed block number channelID=testchannel convertedRequestBlockNumber=1
[e][Org1.peer0] 2021-02-15 10:45:46.563 EST 0315 INFO [kvledger] add -> Adding new request for snapshot channelID=testchannel blockNumber=1
...
[e][Org1.peer0] 2021-02-15 10:45:46.614 EST 0319 INFO [kvledger] add -> Added new request for snapshot channelID=testchannel blockNumber=1 nextsnapshotblockNumber=1
...
[e][Org1.peer0] 2021-02-15 10:45:46.720 EST 0330 DEBU [kvledger] processSnapshotMgmtEvents -> Event received channelID=testchannel type=commitDone blockNumber=2 snapshotInProgress=false
{code}

The last log record comes from this line in {{snapshot_mgmt.go}}:
{code}
logger.Infow(""Added new request for snapshot"", ""channelID"", k.ledgerID, ""blockNumber"", blockNumber, ""next snapshot blockNumber"", k.smallestRequestBlockNum)
{code}

I don't know the code but it looks like the go routine below is never initiated because the {{smallestRequestBlockNum}} does not equal {{lastCommittedBlockNumber}} when block 2 processing completes.
{code}
		case commitDone:
			lastCommittedBlockNumber = e.blockNumber
			committerStatus = idle
			if lastCommittedBlockNumber != l.snapshotMgr.snapshotRequestBookkeeper.smallestRequestBlockNum {
				continue
			}
			snapshotInProgress = true
			go func() {
				logger.Infow(""Generating snapshot"", ""channelID"", l.ledgerID, ""lastCommittedBlockNumber"", lastCommittedBlockNumber)
				if err := l.generateSnapshot(); err != nil {
					logger.Errorw(""Failed to generate snapshot"", ""channelID"", l.ledgerID, ""lastCommittedBlockNumber"", lastCommittedBlockNumber, ""error"", err)
				} else {
					logger.Infow(""Generated snapshot"", ""channelID"", l.ledgerID, ""lastCommittedBlockNumber"", lastCommittedBlockNumber)
				}
				events <- &event{snapshotDone, lastCommittedBlockNumber}
			}()
{code};;;","16/Feb/21 2:33 AM;sykesm;Initially this looked like a test flake but I think it's actually an issue in the production code.;;;","18/Feb/21 2:20 AM;btl5037;Hit this twice today, no need to provide my logs, they look just like yours;;;","18/Feb/21 7:45 AM;manish-sethi;Thanks [~sykesm] for sharing the logs. I verified - this is a trivial to fix bug in the production code. [This line|https://github.com/hyperledger/fabric/blob/ecaf6970efdf2e5fde72f7c8ec903d7b3827de8a/core/ledger/kvledger/snapshot_mgmt.go#L153] should be like ""leastAcceptableBlockNum += 1"". I am surprised that this never hit before and now suddenly started hitting.;;;","18/Feb/21 8:26 AM;sykesm;It looks like it's one of the untested paths through the code.

!image-2021-02-17-18-25-59-505.png!

With the exception of logging and returning errors, almost every other path is covered so it's simply an unfortunate escape.

Good to see it's an easy fix.;;;","18/Feb/21 2:45 PM;manish-sethi;[https://github.com/hyperledger/fabric/pull/2413] - master

[https://github.com/hyperledger/fabric/pull/2418] - release-2.3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger troubleshooting utility - File Utility to Compare Snapshots,FAB-18425,46579,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jcastrence,jcastrence,jcastrence,18/Feb/21 5:44 AM,24/Feb/22 2:18 PM,28/Oct/23 3:09 AM,24/Feb/22 2:18 PM,,,,,,,,,,,,fabric-ledger,,,,0,,,,,,"Goal is to create a ledger troubleshooting utility that can identify differences between two snapshots from different peers. Utility will take two snapshots at the same height from different peers as input. Utility will then compare each key / value pair between the snapshots. Tool will output the key / value pairs that are dissimilar between the two snapshots.

In future stories, ledger troubleshooting utility can be extended to take the key differences as input and identify blocks/transactions that wrote the keys, to help users understand the source of the discrepancy.",,jcastrence,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6486,FAB-10796,FAB-18429,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxo9c",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jcastrence,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLONE - Rework config to specify genesis parameters separately,FAB-18426,46580,14022,Sub-task,In Progress,FAB,Fabric,software,denyeart,,,Medium,,jyellick,cryptobossbaby,cryptobossbaby,18/Feb/21 8:26 AM,18/Feb/21 8:27 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-orderer,,,,0,common-components,,,,,,,cryptobossbaby,ishihara.shun,jyellick,,,,,,,,,,,,,,,,,,,,,,,,FAB-1612,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|i01ikb:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,cryptobossbaby,ishihara.shun,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer cluster stream termination reports incorrect reason,FAB-18427,46582,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,19/Feb/21 2:29 AM,19/Feb/21 5:44 AM,28/Oct/23 3:09 AM,19/Feb/21 4:09 AM,,,,,,,v1.4.11,v2.2.3,v2.3.2,v2.4.0,,fabric-orderer,,,,0,,,,,,"The [serviceStream()|https://github.com/hyperledger/fabric/blob/ecaf6970efdf2e5fde72f7c8ec903d7b3827de8a/orderer/common/cluster/comm.go#L557-L570] method is always
overriding the real reason the stream was terminated, with the same ""aborted"" reason.

This means that the error that is logged in subsequent (and sometimes all) send attempts is always ""aborted""  and not the real reason.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ikr:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Feb/21 2:33 AM;yacovm;https://github.com/hyperledger/fabric/pull/2414;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tutorial test-network gives Go module error,FAB-18428,46589,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Environment Issue,,arjanvaneersel,arjanvaneersel,22/Feb/21 11:46 PM,01/Mar/21 9:27 PM,28/Oct/23 3:09 AM,01/Mar/21 9:27 PM,,,,,,,,,,,,,,,,0,,,,,," 
{code:java}
./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-go -ccl go
deploying chaincode on channel 'mychannel'
executing with the following
- CHANNEL_NAME: mychannel
- CC_NAME: basic
- CC_SRC_PATH: ../asset-transfer-basic/chaincode-go
- CC_SRC_LANGUAGE: go
- CC_VERSION: 1.0
- CC_SEQUENCE: 1
- CC_END_POLICY: NA
- CC_COLL_CONFIG: NA
- CC_INIT_FCN: NA
- DELAY: 3
- MAX_RETRY: 5
- VERBOSE: false
Vendoring Go dependencies at ../asset-transfer-basic/chaincode-go
~/Dev/fabric-samples/asset-transfer-basic/chaincode-go ~/Dev/fabric-samples/test-network
go: finding module for package github.com/golang/protobuf/ptypes/timestamp
go: finding module for package github.com/hyperledger/fabric-chaincode-go/pkg/cid
go: finding module for package github.com/hyperledger/fabric-contract-api-go/contractapi
go: finding module for package github.com/hyperledger/fabric-protos-go/peer
go: finding module for package github.com/stretchr/testify/require
go: finding module for package github.com/hyperledger/fabric-protos-go/ledger/queryresult
go: finding module for package github.com/hyperledger/fabric-chaincode-go/shim
go: downloading github.com/hyperledger/fabric-chaincode-go v0.0.0-20201119163726-f8ef75b17719
go: downloading github.com/hyperledger/fabric-protos-go v0.0.0-20210127161553-4f432a78f286
go: downloading github.com/stretchr/testify v1.7.0
go: found github.com/hyperledger/fabric-contract-api-go/contractapi in github.com/hyperledger/fabric-contract-api-go v1.1.1
go: found github.com/golang/protobuf/ptypes/timestamp in github.com/golang/protobuf v1.4.3
go: found github.com/hyperledger/fabric-chaincode-go/pkg/cid in github.com/hyperledger/fabric-chaincode-go v0.0.0-20201119163726-f8ef75b17719
go: found github.com/hyperledger/fabric-chaincode-go/shim in github.com/hyperledger/fabric-chaincode-go v0.0.0-20201119163726-f8ef75b17719
go: found github.com/hyperledger/fabric-protos-go/ledger/queryresult in github.com/hyperledger/fabric-protos-go v0.0.0-20210127161553-4f432a78f286
go: found github.com/hyperledger/fabric-protos-go/peer in github.com/hyperledger/fabric-protos-go v0.0.0-20210127161553-4f432a78f286
go: found github.com/stretchr/testify/require in github.com/stretchr/testify v1.7.0
go: github.com/hyperledger/fabric-contract-api-go@v1.1.1 requires
 github.com/cucumber/godog@v0.8.0/go.mod: verifying module: checksum mismatch
 downloaded: h1:FQ2MobPXycdSajAK3inNgLSAKGFmZqbE4S/CExz41Ys=
 sum.golang.org: h1:Cp3tEV1LRAyH/RuCThcxHS/+9ORZ+FMzPva2AZ5Ki+A=
SECURITY ERROR
This download does NOT match the one reported by the checksum server.
The bits may have been replaced on the origin server, or an attacker may
have intercepted the download attempt.
For more information, see 'go help module-auth'.
~/Dev/fabric-samples/test-network
Finished vendoring Go dependencies
+ peer lifecycle chaincode package basic.tar.gz --path ../asset-transfer-basic/chaincode-go --lang golang --label basic_1.0
+ res=1
Error: failed to normalize chaincode path: 'go list' failed with: go: finding module for package github.com/hyperledger/fabric-contract-api-go/contractapi
go: found github.com/hyperledger/fabric-contract-api-go/contractapi in github.com/hyperledger/fabric-contract-api-go v1.1.1
go: github.com/hyperledger/fabric-contract-api-go@v1.1.1 requires
 github.com/cucumber/godog@v0.8.0/go.mod: verifying module: checksum mismatch
 downloaded: h1:FQ2MobPXycdSajAK3inNgLSAKGFmZqbE4S/CExz41Ys=
 sum.golang.org: h1:Cp3tEV1LRAyH/RuCThcxHS/+9ORZ+FMzPva2AZ5Ki+A=
SECURITY ERROR
This download does NOT match the one reported by the checksum server.
The bits may have been replaced on the origin server, or an attacker may
have intercepted the download attempt.
For more information, see 'go help module-auth'.: exit status 1
Chaincode packaging has failed
Deploying chaincode failed
{code}
[link title|http://example.com][link title|http://example.com]

 ",,arjanvaneersel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01imb:",,,,Unset,Unset,,"1. Removed all Fabric docker images and directories
2. Did a fresh install of Fabric
3. Followed the steps in the tutorial at https://hyperledger-fabric.readthedocs.io/en/latest/test_network.html. The error occurs when deploying chaincode (./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-go -ccl go)",,Unset,,,,,,Unset,,Unset,,(Please add usage information),arjanvaneersel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Mar/21 9:27 PM;arjanvaneersel;Should not be filed as FAB, but FABCAG.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger troubleshooting utility - identify transactions associated with in doubt state,FAB-18429,46590,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,denyeart,denyeart,22/Feb/21 11:55 PM,08/Jun/22 9:31 PM,28/Oct/23 3:09 AM,08/Jun/22 9:31 PM,,,,,,,,,,,,fabric-ledger,,,,0,,,,,,"GOAL
Identify potentially divergent transactions

INPUT
Set of keys in question (from file utility or otherwise)

APPROACH
Traverse the block store on each peer (separately) to identify and extract transactions that wrote mismatched keys

OUTPUT
Set of transactions that wrote the keys (in human readable format)
All tx validation codes from the respective blocks
Block commit hashes from the respective blocks (available on channels created in v1.4.2 and later)",,denyeart,nao,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18425,,FAB-6486,FAB-10796,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxo9f",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,nao,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Feb/21 7:03 AM;shimos;Hello, we are developing Blockchain Verifier at Hyperledger Labs ([https://github.com/hyperledger-labs/blockchain-verifier]), and this use case seems to have much in common with the tool, so we think it can be expanded to support this use case.

We'd appreciate if you could give us any opinion.;;;","12/Mar/21 11:58 AM;denyeart;[~shimos]

We prefer to build the utility in fabric repo so that all the ledger utility code is available. It avoids limitations like what you mentioned about verifier (""the plugin uses only the first file({{blockfile_000000"").}}

The first story will be FAB-18425.

Could you explain what the blockchain verifier actually checks in the fabric-block plugin?;;;","16/Mar/21 5:26 PM;shimos;[~denyeart] Thank you for the comment. I agree that the disparity between the implementation of the platform and that of the tool could be some concern. 

Blockchain Verifier is designed not to rely on internal functions of platforms, and so there are several issues as you pointed out since some functions that SDK does not provide are implemented by Blockahin Verifier. 
But this allows explicit checks for blocks, rather than implicit checks inside a library. 

Currently it checks 
- The hash value in the header of a block and the hash value calculated for the actual block 
- The previous hash value in the header and the hash value calculated for the previous block 
- The signatures for the block by orderers 
- The signatures in the endorsements
;;;","08/Jun/22 9:30 PM;denyeart;The new ledgerutil to identify transactions has been merged - https://github.com/hyperledger/fabric/pull/3285;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer lifecycle chaincode queryinstalled fails for non-admin access,FAB-18430,46594,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,suneel18,suneel18,24/Feb/21 10:33 PM,25/Feb/21 3:02 PM,28/Oct/23 3:09 AM,25/Feb/21 3:02 PM,,,,,,,,,,,,,,,,0,,,,,,"While fetching the chaincode details from the network 

Setting ""CORE_PEER_MSPCONFIGPATH"" to a non-admin msp on a fabirc network running chaincode in install-instantiate model and ""peer chaincode list --instantiated -C channel"" command lists instantiated chaincodes even through only client cert - key pairs

And running the same test on fabric network using the new chaincode lifecycle with a non-admin msp as CORE_PEER_MSPCONFIGPATH ""peer lifecycle chaincode querycommitted --channelID"" command also returns list of committed chaincodes 

We tried the same process of setting ""CORE_PEER_MSPCONFIGPATH"" to non-admin users but this time tested to query listing of installed chaincodes

However

""CORE_PEER_MSPCONFIGPATH"" to non-admin on fabric set up with install-instantiate  chaincode model

 
{code:java}
peer chaincode list --installed -C allchannel
{code}
this fails with error

 

Error: bad response: 500 - access denied for [getinstalledchaincodes]: Failed verifying that proposal's creator satisfies local MSP principal during channelless check policy with policy [Admins]: [The identity is not an admin under this MSP [orgMSP]: cannot test for classification, node ou for type [ADMIN], not defined, msp: [orgMSP]]

On the similar lines with ""CORE_PEER_MSPCONFIGPATH"" to non-admin on fabric set up with new lifecycle model
{code:java}
peer lifecycle chaincode queryinstalled{code}
this too fails with similar error of 

Error: query failed with status: 500 - Failed to authorize invocation due to failed ACL check: Failed verifying that proposal's creator satisfies local MSP principal during channelless check policy with policy [Admins]: [The identity is not an admin under this MSP [orgMSP]: cannot test for classification, node ou for type [ADMIN], not defined, msp: [orgMSP]]

 

Can we enable ""peer lifecycle chaincode queryinstalled"" to list installed chaincodes with client level access and not just limit it to admin access",,denyeart,suneel18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01in7:",,,,Unset,Unset,,"""CORE_PEER_MSPCONFIGPATH"" to non-admin on fabric set up with install-instantiate  chaincode model

 

peer chaincode list --installed -C allchannel
this fails with error

 

Error: bad response: 500 - access denied for [getinstalledchaincodes]: Failed verifying that proposal's creator satisfies local MSP principal during channelless check policy with policy [Admins]: [The identity is not an admin under this MSP [orgMSP]: cannot test for classification, node ou for type [ADMIN], not defined, msp: [orgMSP]]

On the similar lines with ""CORE_PEER_MSPCONFIGPATH"" to non-admin on fabric set up with new lifecycle model

peer lifecycle chaincode queryinstalled
this too fails with similar error of 

Error: query failed with status: 500 - Failed to authorize invocation due to failed ACL check: Failed verifying that proposal's creator satisfies local MSP principal during channelless check policy with policy [Admins]: [The identity is not an admin under this MSP [orgMSP]: cannot test for classification, node ou for type [ADMIN], not defined, msp: [orgMSP]]

",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,suneel18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Feb/21 3:02 PM;denyeart;[~suneel18] Chaincode installation and management on a peer does indeed require admin privilege on the peer.

Regular users should not know which chaincodes the admin has installed on a peer, because regular users cannot do anything with a chaincode that is only installed on a peer but not deployed to a channel. Regular users can check which chaincodes are available on a channel that they want to interact with using:

old lifecycle:
{code:java}
peer chaincode list --instantiated -C mychannel{code}
new lifecycle:
{code:java}
peer lifecycle chaincode querycommitted -C mychannel{code}
Since this is working as designed and not a bug, I will close for now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issue when Discovery service is enabled: first invoke fails,FAB-18431,46599,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,JotaP 2,JotaP 2,25/Feb/21 9:11 PM,01/Mar/21 9:23 PM,28/Oct/23 3:09 AM,01/Mar/21 9:23 PM,,,,,,,,,,,,,,,,0,,,,,,"Versions:
 * fabric-network 2.2.5
 * 
fabric-peer 2.3.0
 * 
fabric-orderer 2.3.0
 * 
Chaincode is running as an external service.

With a single peer network, when *Discovery* is *enabled*, the first invoke transaction sent from the SDK always fails with error.
{code:java}
'Error: DiscoveryService: test-chaincode error: failed constructing descriptor for chaincodes:<name:""test-chaincode"" > '{code}
 
After this first error, all other invoke transactions succeed without an issue.

Every time a new Gateway is created (i.e. our client is restarted) this problem appears again (first invoke transaction fails, and all others after this one work).
 
The peer outputs the following log:
 

{code:java}
2021-02-25 10:42:23.740 UTC [lifecycle] Work -> WARN 09a could not launch chaincode
'test-chaincode:f7e8d6c0cde75ec259479d3d6de55c88ec4eafd1a1f594d2c85325e48b3bf3f0':
connection to test-chaincode:f7e8d6c0cde75ec259479d3d6de55c88ec4eafd1a1f594d2c85325e48b
3bf3f0 failed: error cannot create connection for test-chaincode:f7e8d6c0cde75ec259479d3
d6de55c88ec4eafd1a1f594d2c85325e48b3bf3f0: error creating grpc connection to test-chaincode:7052:
failed to create new connection: connection error: desc = ""transport : error while dialing: dial tcp
10.102.31.213:7052: connect: connection refused""
2021-02-25 10:42:50.619 UTC [policies.inquire] principalsOfTree -> WARN 09b Leaf vertex 0.0 is of
type &{rules:<signed_by:0 > }
2021-02-25 10:42:50.619 UTC [discovery.endorsement] PeersForEndorsement -> WARN 09c Principal set
computation failed: endorsement policy cannot be satisfied
2021-02-25 10:42:50.619 UTC [discovery] chaincodeQuery -> ERRO 09d Failed constructing descriptor
for chaincode chaincodes:<name:""test-chaincode"" > ,: endorsement policy cannot be satisfied{code}
 
If Discovery is disabled this error doesn't happen.",,JotaP 2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01iob:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),JotaP 2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Mar/21 9:23 PM;JotaP 2;Hello, finally we detected this might not actually be an issue with the SDK itself but the way we were using it in our product. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bump Go to v1.16.x,FAB-18432,46603,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,28/Feb/21 3:56 AM,20/Apr/21 11:04 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,ipm,,,,,"Update Fabric to Go v1.16. There is another cert validation change, similar to the Go v1.15 change.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18361,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxob9",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issue regarding syncing of peers and fetching private data.,FAB-18433,46615,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,ginspctw,ginspctw,05/Mar/21 1:19 AM,12/Mar/21 10:58 AM,28/Oct/23 3:09 AM,,v2.0.0,,,,,,v2.2.0,,,,,fabric-gossip,fabric-peer,fabric-quality,,0,help-wanted,,,,,"We have a fabric network with 2 orgs with 2 peers each for both organisations and 5 orderers . We are using fabric version 2.2.2.  We have a single channel with a single chaincode. We have configured both peers of the org to be the anchor peers and have also configured  *CORE_PEER_GOSSIP_BOOTSTRAP*, 
 *CORE_PEER_GOSSIP_EXTERNALENDPOINT*, *CORE_PEER_LISTENADDRESS*, *CORE_PEER_ADDRESS*, *CORE_PEER_CHAINCODELISTENADDRESS*  and  *CORE_PEER_EVENTS_ADDRESS* correctly.  We are facing an issue with our application.
 We are extensively using private data collection in our application. After installing the chaincode, we pushed 100 assets to store in the private data collection. We could see that all those assets got stored successfully in our both peers, then we started to ingest to store more data. After pushing almost 2500 assets, we started to observe that our peer2 stop sycing with peer1. So, we tried to restart the peer2. But, still we see the issue. When we check the channel info for peer1 we see that currently 

PEER1:
{code:java}
Blockchain info: \{""height"":43481,""currentBlockHash"":""jrhnqqEnG8jFz96x3a3bOTIsgM4kaKR1lVECZP68eyg="",""previousBlockHash"":""y6KTCiUZCH2m8YjbwWIfQ9uV5nvgClv2RhP5EMnYh+w=""}
{code}
PEER2: 

 
{code:java}
Blockchain info: \{""height"":6290,""currentBlockHash"":""UjqdnyOAyVTEXGrtJlirF5g3tYngqP+lGYvD7XuwNZA="",""previousBlockHash"":""ROcbp8EUE2klkWayu2YZnR0QqHhsGm7wNlECIVWx1Aw=""}.

 
{code}
We also observe that the block height of peer2 is increasing very slow. So, we are not sure if peer2 can get same block-height as peer1. Due to this we also see that  the data we are inserting is not available in peer2. However, when we checked the transientstore of peer2, we could see the data there. 

We also observe below logs in peer2.
{code:java}
2021-03-04 13:55:22.747 UTC [gossip.privdata] fetchPrivateData -> DEBU 1097b Total members in channel: [] channel=my-channel
2021-03-04 13:55:22.747 UTC [gossip.privdata] fetchPrivateData -> DEBU 1097c Total members that fit some digest: [] channel=my-channel
2021-03-04 13:55:07.739 UTC [gossip.privdata] fetchPrivateData -> WARN e5dc Do not know any peer in the channel( my-channel ) that matches the policies , aborting channel=my-channel
2021-03-04 13:55:07.739 UTC [gossip.privdata] populateFromRemotePeers -> WARN e5dd Failed fetching private data from remote peers for dig2src:[map[\{e08908d7baedb7e797613bd6446a9da5e33604a9476c2435e21434149e895487 partchainccw _implicit_org_Org1 6222 0}:[endorser:""\n\004Org1\022\274\007\n"" signature:""0D\002 N\013\236\347\037Y\232\226rL\316#Q\350\260\235X%|vO\372\206\264\364Y\335\262K}\220\027\002 T\221\030\202\373M9\210[#k\\\000O\211\323\323\""\343h\332\301-e^\202\247\251\031\373\320\211"" ]]], err: Empty membership channel=my-channel
{code}
 

 ",,denyeart,ginspctw,javrevasandeep,wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01iqz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,ginspctw,javrevasandeep,wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Mar/21 2:49 PM;denyeart;It sounds like peer2 cannot connect to peer1 to retrieve the private data.

Restart the peer and check the log to see if it is able to establish connection with peer1, look for the gossip ""membership view"" log info messages.;;;","11/Mar/21 9:44 PM;javrevasandeep;Adding to the above issue that these are the latest peer logs. Although it is able to discover and connect to org2 peers but still gossip is getting blocks very very slowly. It is getting one block per minute and hence lags behind org2 peers which then leads to private data failure. Able to fetch the latest block from orderer from Org1 peers manually from cli.

�[33m2021-03-11 06:29:09.784 UTC [gossip.privdata] RetrievePvtdata -> WARN b687a4b�[0m Could not fetch all 1 eligible collection private write sets for block [141821] (0 from local cache, 0 from transient store, 0 from other peers). Will commit block with missing private write sets:[txID: 2329c91dc4838d23577f3fda58856b2ea8f7671e3e625501c3c1fced002bee45, seq: 1, namespace: mycc, collection: _implicit_org_org1, hash: 26ea0f626b927c0f82b9c465ff68d5f0451326d8ed14c41fdae050ccf8a0652b
] channel=mychannel

updating Alive Message:Membership: Endpoint:peer1.org1.com:7051 PKI-id:23bf13103426598fb718c6b46035054c3da82f0a4d29f213eaa31459ef2815a4Identity:Timestamp:inc_num:1615284843005895950 seq_num:82675
[36m2021-03-11 12:03:25.194 UTC [grpc] UpdateSubConnState -> DEBU 2931c[0m pickfirstBalancer: HandleSubConnStateChange: 0xc00333c7b0, \{CONNECTING <nil>}
[36m2021-03-11 12:03:25.194 UTC [grpc] Infof -> DEBU 2931d[0m Channel Connectivity change to CONNECTING
[36m2021-03-11 12:03:25.195 UTC [grpc] Warningf -> DEBU 2931e[0m grpc: addrConn.createTransport failed to connect to \{10.244.3.41:7051 <nil> 0 <nil>}. Err: connection error: desc = ""transport: authentication handshake failed: x509: cannot validate certificate for xxxxxxxxx because it doesn't contain any IP SANs"". Reconnecting...
[36m2021-03-11 12:03:25.195 UTC [grpc] Infof -> DEBU 2931f[0m Subchannel Connectivity change to TRANSIENT_FAILURE
[36m2021-03-11 12:03:25.195 UTC [grpc] UpdateSubConnState -> DEBU 29320[0m pickfirstBalancer: HandleSubConnStateChange: 0xc00333c7b0, \{TRANSIENT_FAILURE connection error: desc = ""transport: authentication handshake failed: x509: cannot validate certificate for 10.244.3.41 because it doesn't contain any IP SANs""}
[36m2021-03-11 12:03:25.195 UTC [grpc] Infof -> DEBU 29321[0m Channel Connectivity change to TRANSIENT_FAILURE
[31m2021-03-11 12:03:25.384 UTC [core.comm] ServerHandshake -> ERRO 29322[0m Server TLS handshake failed in 845.607µs with error remote error: tls: bad certificate server=PeerServer remoteaddress=xxxxxxxxxx:36954
[36m2021-03-11 12:03:25.384 UTC [grpc] Warningf -> DEBU 29323[0m grpc: Server.Serve failed to complete security handshake from ""10.244.3.41:36954"": remote error: tls: bad certificate
[36m2021-03-11 12:03:25.536 UTC [gossip.gossip] handleMessage -> DEBU 29324[0m Entering, xxxxxxxx:22512 f847a19713aa4f29a83765e509c1acd98d3720c5a46e0fc205f156044aee044d sent us GossipMessage: Channel: , nonce: 0, tag: EMPTY Alive Message:Membership: Endpoint:peer1.org2.com:7051 PKI-id:f847a19713aa4f29a83765e509c1acd98d3720c5a46e0fc205f156044aee044dIdentity:Timestamp:inc_num:1615301666890494280 seq_num:99168 , Envelope: 88 bytes, Signature: 71 bytes
[36m2021-03-11 12:03:25.536 UTC [gossip.gossip] handleMessage -> DEBU 29325[0m Exiting;;;","12/Mar/21 10:57 AM;denyeart;The 60s delay is due to this configuration:

[https://github.com/hyperledger/fabric/blob/master/sampleconfig/core.yaml#L185]

The peer attempts to retrieve private data from remote peers for 60s (by default) before committing the block without private data. This can be configured to a lower value. The connection issue with other peers is the root cause though.

The log from time of peer start should give some clues of which peers it can and cannot connect to.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
how to use peer node pause,FAB-18435,46618,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Invalid,,divyabhanu,divyabhanu,08/Mar/21 2:20 PM,01/Apr/21 12:39 PM,28/Oct/23 3:09 AM,01/Apr/21 12:39 PM,,,,,,,,,,,,,,,,0,,,,,,"Hi , if i am trying to use peer node pause inside the peer container it showing the Error: as another peer node command is executing, wait for that command to complete its execution or terminate it before retrying: lock is already acquired on file /var/hyperledger/production/ledgersData/fileLock

and if i am trying to run it outside the container by exporting the same peer 

panic: Error creating dir if missing: error while creating dir: /var/hyperledger/production/ledgersData/fileLock: mkdir /var/hyperledger: permission denied

goroutine 1 [running]:
github.com/hyperledger/fabric/common/ledger/util/leveldbhelper.(*FileLock).Lock(0xc000241be8, 0x2, 0x2)
 /__w/1/go/src/github.com/hyperledger/fabric/common/ledger/util/leveldbhelper/leveldb_helper.go:204 +0x366
github.com/hyperledger/fabric/core/ledger/kvledger.pauseOrResumeChannel(0xc0001d7560, 0x27, 0x7ffdbaa7d29f, 0x9, 0xc000000001, 0x0, 0x0)
 /__w/1/go/src/github.com/hyperledger/fabric/core/ledger/kvledger/pause_resume.go:35 +0xfb
github.com/hyperledger/fabric/core/ledger/kvledger.PauseChannel(0xc0001d7560, 0x27, 0x7ffdbaa7d29f, 0x9, 0xc000241ce0, 0x0)
 /__w/1/go/src/github.com/hyperledger/fabric/core/ledger/kvledger/pause_resume.go:17 +0x5e
github.com/hyperledger/fabric/internal/peer/node.glob..func1(0x2484ba0, 0xc000195a40, 0x0, 0x2, 0x0, 0x0)
 /__w/1/go/src/github.com/hyperledger/fabric/internal/peer/node/pause.go:34 +0xd9
github.com/spf13/cobra.(*Command).execute(0x2484ba0, 0xc000195a00, 0x2, 0x2, 0x2484ba0, 0xc000195a00)
 /__w/1/go/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:762 +0x453
github.com/spf13/cobra.(*Command).ExecuteC(0x2486100, 0xc000241f48, 0x1, 0x1)
 /__w/1/go/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:852 +0x2ea
github.com/spf13/cobra.(*Command).Execute(...)
 /__w/1/go/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:800
main.main()

 

so please help me in doing a correct way of pausing and resuming a peer",,btl5037,divyabhanu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01irf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,divyabhanu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Mar/21 3:58 AM;btl5037;The `peer node pause` and `peer node reset` and `peer node rollback` commands are performed offline, the `peer node pause` command creates a lockfile that prevents the peer interacting on a channel until `peer node resume` is run. So you must execute the `peer node pause` command as part of the launch command in the container before the `peer node start` command is executed. So you will need to stop the `peer` running inside of the container and then execute your commands. Or modify your docker command to run the `peer node pause` command before calling `peer node start`.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reverting back orderer Admins policy,FAB-18436,46619,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Not Supported,,abhishekktpl,abhishekktpl,08/Mar/21 5:23 PM,12/Mar/21 10:50 AM,28/Oct/23 3:09 AM,12/Mar/21 10:50 AM,,,,,,,,,,,,,,,,1,,,,,,"I tried changing orderer config Admins policy with Implicitmeta policy pointing to the Application Admin, Now when I am trying to change the batch timeout I am not able to do that as I am getting policy unsatisfied error and also I am not able to revert back the orderer Admins policy back to Admins. Any idea how this can be rectified?

 

How to reproduce the issue.

Change the orderer Admin policy reference

.channel_group.groups.Orderer.policies.Admins.policy.value.sub_policy = /Channel/Application/Org1MSP/Admins

Once the change is done, try changing the batchtimeout it fails, even trying to revert back the above policy back to ""Admins"" fails",,7sigma,abhishekktpl,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18439,FAB-18438,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01irn:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),7sigma,abhishekktpl,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Mar/21 1:49 AM;jyellick;The {{mod_policy}} dictates which policy is evaluated to determine if a particular signature set authorizes the config update.  By default, we set this to `Admins`, but you may point it to any other policy you like, such as {{/Channel/Application/org1MSP/Admins}}.

In your case, it sounds like instead of changing the {{mod_policy}}, you have instead changed the {{Admins}} policy itself, now requiring a nonsensical sub-policy which cannot be resolved.  Unfortunately, this change is irreversible as you have modified the policy governing further modifications to be unsatisfiable.

So, for this particular scenario, the only real option is to revert to backup.  It's also strongly encouraged to automate any channel configuration changes and test them in disposable dev environments before pushing to production.

Back in the v1.0 timeframe, we hoped to add some additional policy modification sanity checking, but the changes were considered too invasive and escaped.  Over the years, very few people have attempted to modify the default policies, so these additional checks have never been prioritized, but it would be good to add.  Further, we can and should add some additional mechanisms for un-breaking the channel config in case of other more legitimate failures such as lost keys.;;;","12/Mar/21 10:50 AM;denyeart;Ok, given Jason's comment, I am closing and linking in the future enhancements that may help in these scenarios of bad channel config.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow config override transactions to recover from bad channel config,FAB-18438,46637,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,jyellick,jyellick,12/Mar/21 9:38 AM,21/Apr/21 4:45 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"One problem which has generally plagued management of Fabric networks is coping with the situation when a user inadvertently loses some critical key material, lets certificates expire, misconfigures a policy, or otherwise submits a valid configuration update which puts the channel configuration into an irrecoverable state.

One relatively simple solution for this problem is to introduce the notion of a config override transaction.  A config override transaction would not adhere to the typical config update validation but instead would follow a special but simple two-part rule.

1) All config override transactions are invalid by default.
2) If a node has added the hash of a config override transaction to its local configuration, then it is valid and the new config is applied.

This effectively is a way to trigger (through manipulation of local configuration files) a hard fork in the chain without requiring a custom software update be rolled out.  For those nodes which have the config override in their configuration, the update applies, and they begin transacting on a new (valid) configuration.  For those which do not have the config override in their configuration, they reject the transaction and stuck on the old fork (presumably without an ordering service, or if ordering is still intact soon, their chain will halt when the orderers commit the new config.

Thanks to the new snapshoting features in the peer, it would no longer be necessary to forever carry record of the config override transactions around, but it should be relatively simple for a network operator to curate such a list of approved config overrides that have committed in the past for new members who wish to reprocess those blocks.",,jyellick,sharthakmishra,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18436,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxqo1i",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,sharthakmishra,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Perform additional sanity checking of channel config updates,FAB-18439,46638,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,jyellick,jyellick,12/Mar/21 9:42 AM,21/Apr/21 4:46 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"The channel config does basic well-formed-ness checks, but notably it does not ensure that for instance policies can be satisfied, or that the orderers are able to satisfy block validation policy, etc.

We've see these failures crop up from time to time in the assorted support channels, and although most users seem to steer clear of policy changes away from the defaults in the channel configuration, those who dabble there often run into problems.

This story is to cover adding a config update preprocessing step to the orderers to ensure that prior to getting to the necessarily deterministic and slimmer config update processing that all nodes do, that we do our best to help users not submit config updates that are likely to cripple the system.  Of course a malicious orderer could skip these prechecks, and we do not want to make them a part of the validation path, but, it could increase usability greatly.",,jyellick,Param-S,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18436,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxqo19",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jyellick,Param-S,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A small bug in source code,FAB-18440,46644,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,dingyi12138,dingyi12138,14/Mar/21 7:28 PM,15/Mar/21 11:04 PM,28/Oct/23 3:09 AM,,v2.0.1,v2.1.0,,,,,,,,,,fabric-build,fabric-release,fabric-sdk-go,,0,Documentation,Security,,,,"My submission is about the logic problem in the code. In bccsp/sw/fileks.go, there's a function called Init;

Init  initializes this KeyStore with a password, a path to a folder where the keys are stored and a read only flag. Each key is stored in a separated file whose name contains the key's SKI and flags to identity the key's type.

This function determines whether the variable “path” is valid, whether the path represented by “path” already exists, and If it does not exist, it will create the path. The variable ""empty"" is used to indicate whether the directory represented by the variable “path”is empty. If so, the variable ""empty"" is true; otherwise, it is false.

However, the last if statement in the function uses “empty” as the criterion. If “empty” is true, the code in the if statement  will be executed, and it will create the directory again based on “path”. There is no point in creating a same directory again if we know this directory is empty.. I think this if statement should be rewritten as,

If !empty{

       Return error

}

if statement will be executed when “empty” is false and return an error that indicates the directory represented by “path”is not empty.

Finally, please forgive me for my poor English",,denyeart,dingyi12138,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01iwb:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,dingyi12138,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/21 11:03 PM;denyeart;Thank you [~dingyi12138]  , a pull request would be appreciated, you can see instructions here:

[https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#submitting-your-fix]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
External chaincode builder does not work for multiple peers of an org,FAB-18444,46662,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,bh4rtp,bh4rtp,23/Mar/21 5:04 PM,07/Oct/21 2:21 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"If org1 has multiple peers, and every peer has an individual external chaincode builder service, for example, chaincode-as-external-service-peer2-org1 is responsible for peer2-org1.

Because connection.json is different, the chaincode id is different. All the chaincode lifecylce, i.e install, approveformyorg, commit, do work OK. But invoke chaincode init fails.",,bh4rtp,tsiolkovsky,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01j3v:",,,,Unset,Unset,,"peer chaincode invoke -o orderer0:7050 --ordererTLSHostnameOverride orderer --tls --cafile artifacts/crypto-config/ordererOrganizations/exexample-com/orderers/orderer0/msp/tlscacerts/tlsca-example-com-cert.pem -C mychannel -n mychaincode --peerAddresses peer0-org1:7051 --tlsRootCertFiles artifacts/crypto-config/peerOrganizations/org1-example-com/peers/peer0-org1/tls/ca.crt --peerAddresses peer1-org1:7051 --tlsRootCertFiles artifacts/crypto-config/peerOrganizations/org1-example-com/peers/peer1-org1/tls/ca.crt --peerAddresses peer2-org1:7051 --tlsRootCertFiles artifacts/crypto-config/peerOrganizations/org1-example-com/peers/peer2-org1/tls/ca.crt --isInit -c '{""function"":""init"",""Args"":[]}' --waitForEvent

2021-03-23 07:23:35.307 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> DEBU 07a ESCC invoke result: response:<status:500 message:""make sure the chaincode mychaincode has been successfully defined on channel mychannel and try again: chaincode definition for 'mychaincode' exists, but chaincode is not installed"" >",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bh4rtp,tsiolkovsky,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/21 5:15 PM;bh4rtp;All the peers of org1 install chaincode. And peer lifecycle chaincode \{ approveformyorg, commit } specify every peer by --peerAddresses option.;;;","23/Mar/21 7:54 PM;bh4rtp;My example org1 has three peers, only peer0 chaincode is invoked, the other two peers report chaincode not installed but definition exists.;;;","07/Oct/21 2:21 AM;tsiolkovsky;Is there any status update on this ticket? Or has this been moved to another ticket? Supporting multiple peers per org will be supported correct? Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Any organization in channel can overwrite or corrupt private data without sufficient permissions,FAB-18445,46669,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid: Works as Expected,,dzikowski,dzikowski,24/Mar/21 11:30 PM,27/Mar/21 9:06 PM,28/Oct/23 3:09 AM,27/Mar/21 9:06 PM,v1.4.11,,,,,,,,,,,fabric-peer,,,,0,security,,,,,"Hyperledger Fabric 1.4 introduced {{memberOnlyRead}} parameter for private data collections. Even if the parameter is set and organization cannot read the private data, it can overwrite or corrupt it.

I have the following configuration:
 * Hyperledger Fabric 1.4.11 (tested on 1.4.6 as well, probably all 1.4.x versions affected)
 * Solo orderer (for RAFT with chaincode endorsement OR the bug occurs as well; I did not test it with AND endorsement on RAFT)
 * Two organizations (org1 and org2).
 * One channel and one chaincode (Node.js) for both ogranizations
 * Private data collection configuration:

{{[{}}
 {{  ""name"": ""org1-collection"",}}
 {{  ""policy"": ""OR('Org1MSP.member')"",}}
 {{  ""requiredPeerCount"": 1,}}
 {{  ""maxPeerCount"": 1,}}
 {{  ""blockToLive"": 0,}}
 {{  ""memberOnlyRead"": true}}
 {{}]}}

Test flow (for OR endorsement policy):
 # Start the network, install chaincode
 # Put private message by org1 (OK, as expected)
 # Get private message by org1 (OK, as expected)
 # Verify private message with GetPrivateDataHash by org1 (OK, as expected)
 # Verify private message with GetPrivateDataHash by org2 (OK, as expected)
 # Get private message by org2 (error, no read access permissions, as expected)
 # Put private message by org2 (OK, but IMO should fail. It is possible that this is a feature, because we don't have parameter {{memberOnlyWrite}} for 1.4 and you should handle write permissions in chaincode directly. It leads however for further corruption of collection state)
 # Get private message by org1 (if the org1 has one peer in the channel, it fails with MVCC_READ_CONFLICT; if the org1 has more peers in the channel, it returns the value put by org2)

Similar situation happens with chaincode with AND(Org1MSP, Org2MSP) endorsement policy. Steps 2-6 behaves as expected. In step 7 the org2 can overwrite the private data. In step 8, however, the org1 is not able to get the private data with error: {{could not assemble transaction: ProposalResponsePayloads do not match}}",,dzikowski,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Mar/21 11:22 PM;dzikowski;logs.tar;https://jira.hyperledger.org/secure/attachment/18908/logs.tar",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01j4z:",,,,Unset,Unset,,"Note that the following command will use our open source tool to start and manage the network. It requires running Docker.

1. git clone --branch issue-155/private-data-fixes https://github.com/softwaremill/fabrica && cd fabrica
2. run ./e2e-network/test-03-private-data.sh (this script starts the network and performs the tests that follow the test flow from issue description)

After the script execution all Hyperledger Fabric configuration can be found in e2e-network/test-03-private-data.sh.tmpdir/fabrica-target

Node chaincode is in directory ./samples/chaincode-kv-node

I am attaching the logs after execution of the script with test cases: https://github.com/softwaremill/fabrica/blob/issue-155/private-data-fixes/e2e-network/test-03-private-data.sh",,Unset,,,,,,Unset,,Unset,,(Please add usage information),dzikowski,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Mar/21 9:05 PM;yacovm;This is by design in 1.4 and can be mitigated in 2.x. 

From the [documentation|https://hyperledger-fabric.readthedocs.io/en/latest/private-data-arch.html#private-data-collection-definition]:
{quote}
For example, in a channel with ten organizations, five of the organizations might be included in a private data collection distribution policy, but the endorsement policy might call for any three of the organizations in the channel to endorse a read/write transaction. For write-only transactions, organizations that are not members of the collection distribution policy but are included in the chaincode level endorsement policy may endorse transactions that write to the private data collection. If this is not desirable, utilize a collection level endorsementPolicy to restrict the set of allowed endorsers to the private data distribution policy members.{quote}

In Fabric 2.x you have a collection level endorsement policy: {quote}An optional endorsement policy to utilize for the collection that overrides the chaincode level endorsement policy. A collection level endorsement policy may be specified in the form of a signaturePolicy or may be a channelConfigPolicy reference to an existing policy from the channel configuration. The endorsementPolicy may be the same as the collection distribution policy, or may require fewer or additional organization peers.{quote};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network name not set correctly in secure asset transfer example,FAB-18446,46670,,Bug,To Do,FAB,Fabric,software,denyeart,,,Medium,,wuqiaomin,tschonnycache,tschonnycache,25/Mar/21 2:34 AM,10/Jun/21 8:33 PM,28/Oct/23 3:09 AM,,v2.2.0,,,,,,,,,,,fabric-samples,,,,0,,,,,,"In the secure asset transfer and using private data examples of version 2.2, as soon as you whant to invoce the chaincode to create an asset, an error occurs.
The response is: 

error starting container: API error (404): network _test not found""

It seem that during the creation of the containers for the chaincode the vairable CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE is set to ""__test"" instead of ""docker__test"" because ${COMPOSE_PROJECT_NAME} is not set.

 ",,btl5037,denyeart,tatsu-sato,tschonnycache,wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01j57:",,,,Unset,Unset,,"Just follow the tutorial ""secure asset transfer"" in v2.2.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,denyeart,tatsu-sato,tschonnycache,wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Mar/21 2:23 PM;denyeart;Are you using the latest fabric-samples from main branch? I'm not seeing the issue.

The network was recently hardcoded to fabric_test:

[https://github.com/hyperledger/fabric-samples/blob/main/test-network/docker/docker-compose-test-net.yaml#L69]

 ;;;","01/Apr/21 9:07 PM;wuqiaomin;I can't reproduce this problem either using the latest fabric-samples from main branch. 
Is there any more detailed information about ""CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE is set to ""_test""""?;;;","01/Apr/21 10:58 PM;denyeart;It is set to fabric_test now:

https://github.com/hyperledger/fabric-samples/blob/main/test-network/docker/docker-compose-test-net.yaml#L69;;;","02/Apr/21 9:53 PM;denyeart;Since we can't reproduce, closing as fixed.;;;","06/Apr/21 10:11 PM;tschonnycache;As I wrote in the description, I was using version 2.2 because I thought it is the LTS and should be supported the best.

[https://github.com/hyperledger/fabric-samples/blob/v2.2.2/test-network/docker/docker-compose-test-net.yaml]

There the network name is set in the script and in the bug I descibed the script variable ${COMPOSE_PROJECT_NAME} is not set. Hence the resulting network name is just ""_test"";;;","07/Apr/21 10:52 AM;denyeart;Ah, right, the fix was made after fabric-samples was tagged for v2.2.x.  I'll re-open and think about a solution.;;;","08/Apr/21 10:46 AM;wuqiaomin;Can we always set the script variable ${COMPOSE_PROJECT_NAME} to ""fabric_test"" on v2.2.x?;;;","06/May/21 12:08 PM;denyeart;Ok, finally looked at this some more... so in v2.2.x the network is set to ${COMPOSE_PROJECT_NAME}_test. COMPOSE_PROJECT_NAME is set in docker .env file as ""net"", therefore the full network name becomes ""net_test"". This works in my version of docker-compose, but if I recall the issue is that the .env file approach does not work consistently in docker-compose, that is why it was changed to hardcode to ""fabric_test"" more recently in main branch.

[~tschonnycache] [~wuqiaomin]  can you see if it works for you on v2.2.x if you explicitly set environment variable COMPOSE_PROJECT_NAME to ""net"" in your environment?

There is no release branch for release-2.2 in fabric-samples where the issue can be fixed like it is in main, so I'm hoping this workaround resolves the issue (we could create a release-2.2 branch for v2.2.x specific fixes, but that adds maintenance so would be the last resort).;;;","14/May/21 10:57 AM;btl5037;Dave is correct, at some point COMPOSE changed the way they read .env file, to prevent it from breaking across version I simply hardcoded it in newer Fabric versions. You should be able to set the variable Dave mentioned and have it work.;;;","10/Jun/21 8:33 PM;tschonnycache;[~denyeart] what do you mean with ""set environment vairable COMPOSE_PROJECT_NAME to ""net"" in MY environment""?

When i download 2.2.3 anew the .env file allready contains that line, as you described. how else would i set environment variables?

The docker docu states, that a variable can be passed as a cli but the calls to docker are comming from inside your network.sh script so i don't know where to manipulate them.

Anyway this would only fix it for me right? If you make 2.2.x your LTS you should have a release branch for it and maintain it, right?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer node pause is exiting and deleting the container,FAB-18447,46683,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,divyabhanu,divyabhanu,27/Mar/21 8:35 PM,01/Apr/21 10:57 PM,28/Oct/23 3:09 AM,01/Apr/21 12:38 PM,,,,,,,,,,,,,,,,0,,,,,,"Hi, 

trying to pause a peer in channel called mychannel in fabric-samples of version 2.3 so, inorder to use the peer node pause i created a peer and joined the channel and deployed the chaincode so after making some transactions now i am trying to pause the peer by issuing the peer node pause -c mychannel in command of docker-compose-test.yaml file but while issuing the command it is deleting the container of chaincode , so , can you please help me in finding the reason why it s exiting the chaincode while issuing peer node pause

Thanks in Advance..",,denyeart,divyabhanu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01j7v:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,divyabhanu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Apr/21 12:37 PM;denyeart;`peer node pause` requires peer to be stopped first. Stopping peer will also stop the chaincode containers. This is expected, closing.;;;","01/Apr/21 2:13 PM;divyabhanu;but after starting the container by  reissuing the command in docker-compose-test-net.yaml  file is recreating the container and not starting the chain code container either with peer node resume or peer node start 

please let me know how to resume the peer back with chain code..

Thank you;;;","01/Apr/21 10:57 PM;denyeart;The chaincode container will start automatically when it is needed by an invoke request.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Failed to enroll admin, error:%o message=Calling enroll endpoint failed, CONNECTION Timeout, stack=Error: Calling enroll endpoint failed, CONNECTION Timeout",FAB-18448,46694,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,adityajoshi12,adityajoshi12,06/Apr/21 2:56 AM,06/Apr/21 2:59 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"I am unable to register  the user fabric node sdk. I am getting connection timeout. My Fabric CA is receiving the requests by node sdk is throwing the timeout error.

I faced this same issue 2 weeks back and at that time I resolved it by updating the Fabric CA version from *1.4 to latest*. But now it is not working, i tried it running it on version 1.5 but no luck with that.

 

*Environment:*

Fabric CA Docker Image : hyperledger/fabric-ca:latest

NodeJS SDK: 2.2.4

 

I am attaching screenshot for the reference.

!Screenshot from 2021-04-05 23-25-24.png!

 ",,adityajoshi12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Apr/21 2:55 AM;adityajoshi12;Screenshot from 2021-04-05 23-25-19.png;https://jira.hyperledger.org/secure/attachment/18910/Screenshot+from+2021-04-05+23-25-19.png","06/Apr/21 2:55 AM;adityajoshi12;Screenshot from 2021-04-05 23-25-24.png;https://jira.hyperledger.org/secure/attachment/18911/Screenshot+from+2021-04-05+23-25-24.png",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jab:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),adityajoshi12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed to create the state database index on the windows platform,FAB-18449,46700,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,felixrowe,felixrowe,09/Apr/21 3:56 PM,09/Apr/21 3:56 PM,28/Oct/23 3:09 AM,,v2.2.1,v2.2.2,v2.3.0,v2.3.1,,,,,,,,fabric-peer,,,,0,statedb,,,,,"The chaincode package contains the index file, and the path on the windows platform is `META-INF\statedb\couchdb\indexes`, but the separator used when obtaining the index information is '/'.

 
{code:java}
// core/ledger/kvledger/txmgmt/privacyenabledstate/db.go

func getIndexInfo(indexPath string) *indexInfo {
   indexInfo := &indexInfo{}
   dirsDepth := strings.Split(indexPath, ""/"")
   switch {
   case len(dirsDepth) > chaincodeIndexDirDepth &&
      dirsDepth[chaincodeIndexDirDepth] == ""indexes"":
      indexInfo.hasIndexForChaincode = true
   case len(dirsDepth) > collectionDirDepth &&
      dirsDepth[collectionDirDepth] == ""collections"" &&
      dirsDepth[collectionIndexDirDepth] == ""indexes"":
      indexInfo.hasIndexForCollection = true
      indexInfo.collectionName = dirsDepth[collectionNameDepth]
   }
   return indexInfo
}{code}",,felixrowe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jbf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),felixrowe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ISSUE in the Using Private data Tutorial ,FAB-18450,46701,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,AldoFilho,AldoFilho,AldoFilho,10/Apr/21 12:18 AM,05/May/21 4:32 AM,28/Oct/23 3:09 AM,05/May/21 4:32 AM,v2.1.0,,,,,,,,,,,fabric-peer,,,,0,Documentation,,,,,"I'm following this [tutorial|https://hyperledger-fabric.readthedocs.io/pt/latest/private_data_tutorial.html] and all the commands were successfully done until invoke the init function through the command:

peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name marblesp --isInit --tls true --cafile $ORDERER_CA --peerAddresses localhost:7051 --tlsRootCertFiles $ORG1_CA -c '\{""Args"":[""Init""]}'

I get this error:

{color:#FF0000}Error: endorsement failure during invoke. response: status:500 message:""make sure the chaincode marblesp has been successfully defined on channel mychannel and try again: chaincode definition for 'marblesp' exists, but chaincode is not installed""{color}

I think it is related with the endorsement policies pre-set in the files because I got the return below when I had checked the approvals off chaincode definitions by the peers running the ​ peer lifecycle chaincode checkcommitreadiness:

{color:#FF0000}""approvals"": {{color}
{color:#FF0000} ""Org1MSP"": false,{color}
{color:#FF0000} ""Org2MSP"": false{color}

This is my environment

Ubuntu 20.04.2 LTS
go version go1.13.8 linux/amd64
Docker version 19.03.13, build cd8016b6bc
docker-compose version 1.25.5
Fabric v2.1.0
 
Thanks

Aldo Cezar",,AldoFilho,denyeart,wuqiaomin,,,,,,,,,,,,,,,,,,,,,FAB-18451,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jbn:",,,,Unset,Unset,,"./network.sh up createChannel -s couchdb

export PATH=${PWD}/../bin:${PWD}:$PATH
export FABRIC_CFG_PATH=$PWD/../config/
export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_LOCALMSPID=""Org1MSP""
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
export CORE_PEER_ADDRESS=localhost:7051

peer lifecycle chaincode package marblesp.tar.gz --path ../chaincode/marbles02_private/go/ --lang golang --label marblespv1

peer lifecycle chaincode install marblesp.tar.gz

export CORE_PEER_LOCALMSPID=""Org2MSP""
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp
export CORE_PEER_ADDRESS=localhost:9051

peer lifecycle chaincode install marblesp.tar.gz

export CORE_PEER_LOCALMSPID=""Org1MSP""
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
export CORE_PEER_ADDRESS=localhost:7051

peer lifecycle chaincode queryinstalled

export CC_PACKAGE_ID=marble
spv1:3f19c08fe56c85fb85c346330bf96a7ab9ecd8ac970d6c7c81e1c5dc84a1a8

export ORDERER_CA=${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name marblesp --version 1.0 --collections-config ../chaincode/marbles02_private/collections_config.json --signature-policy ""OR('Org1MSP.member','Org2MSP.member')"" --init-required --package-id $CC_PACKAGE_ID --sequence 1 --tls true --cafile $ORDERER_CA

export CORE_PEER_LOCALMSPID=""Org2MSP""
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp
export CORE_PEER_ADDRESS=localhost:9051

peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name marblesp --version 1.0 --collections-config ../chaincode/marbles02_private/collections_config.json --signature-policy ""OR('Org1MSP.member','Org2MSP.member')"" --init-required --package-id $CC_PACKAGE_ID --sequence 1 --tls true --cafile $ORDERER_CA

export ORDERER_CA=${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
export ORG1_CA=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
export ORG2_CA=${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt

peer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name marblesp --version 1.0 --sequence 1 --collections-config ../chaincode/marbles02_private/collections_config.json --signature-policy ""OR('Org1MSP.member','Org2MSP.member')"" --init-required --tls true --cafile $ORDERER_CA --peerAddresses localhost:7051 --tlsRootCertFiles $ORG1_CA --peerAddresses localhost:9051 --tlsRootCertFiles $ORG2_CA

peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name marblesp --isInit --tls true --cafile $ORDERER_CA --peerAddresses localhost:7051 --tlsRootCertFiles $ORG1_CA -c '{""Args"":[""Init""]}'

Error: endorsement failure during invoke. response: status:500 message:""make sure the chaincode marblesp has been successfully defined on channel mychannel and try again: chaincode definition for 'marblesp' exists, but chaincode is not installed"" 


(Please add steps to reproduce)",,Unset,,,,,,Unset,,Unset,,(Please add usage information),AldoFilho,denyeart,wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/21 4:31 AM;denyeart;It looks like you are using an old tutorial in Portuguese translation.

Please use the latest tutorial, available in English: https://hyperledger-fabric.readthedocs.io/en/latest/private_data_tutorial.html;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Erro following Adding an Org to a Channel tutorial ,FAB-18451,46702,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Test Error,AldoFilho,AldoFilho,AldoFilho,10/Apr/21 6:01 AM,13/Apr/21 4:58 AM,28/Oct/23 3:09 AM,13/Apr/21 4:58 AM,v2.1.0,,,,,,,,,,,fabric-docs,,,,0,Documentation,,,,,"In this tutorial I got an error Bringing up Org3 peer after ./addOrg3.sh up command.

Bringing up Org3 peer
{color:#FF0000}ERROR:{color} The Compose file './docker/docker-compose-org3.yaml' is invalid because:
networks.test value Additional properties are not allowed ('name' was unexpected)
{color:#FF0000}ERROR !!!! Unable to start Org3 network{color}

 ",,AldoFilho,,,,,,,,,,,,,,,,,,,,,,,,FAB-18450,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jbv:",,,,Unset,Unset,,"cd /fabric-samples/test-network$
 ./network.sh up createChannel
cd addOrg3
./addOrg3.sh up
dding org3 to channel 'mychannel' with '10' seconds and CLI delay of '3' seconds and using database 'leveldb'

/home/aldo/fabric-samples/test-network/addOrg3/../../bin/cryptogen
Generating certificates using cryptogen tool
Creating Org3 Identities
+ cryptogen generate --config=org3-crypto.yaml --output=../organizations
org3.example.com
+ res=0
Generating CCP files for Org3
/home/aldo/fabric-samples/test-network/addOrg3/../../bin/configtxgen
Generating Org3 organization definition
+ configtxgen -printOrg Org3MSP
2021-04-09 17:35:00.871 -03 [common.tools.configtxgen] main -> INFO 001 Loading configuration
2021-04-09 17:35:00.873 -03 [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 002 Loaded configuration: /home/aldo/fabric-samples/test-network/addOrg3/configtx.yaml
+ res=0
Bringing up Org3 peer
ERROR: The Compose file './docker/docker-compose-org3.yaml' is invalid because:
networks.test value Additional properties are not allowed ('name' was unexpected)
ERROR !!!! Unable to start Org3 network
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),AldoFilho,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/21 4:58 AM;AldoFilho;In the new release everything worked well;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
orderer mspid environment variable,FAB-18452,46704,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,talaal,talaal,12/Apr/21 5:44 PM,30/Apr/21 12:05 AM,28/Oct/23 3:09 AM,,v1.4.4,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"if the value of ORDERER_GENERAL_LOCALMSPID of existing orderers get changed and the orderers get restarted, these nodes will still be able to create blocks with wrong id.

at the other hand the peers won't validate the blocks with wrong mspid, rectifying the value won't resolve the issue due gap in blocks sequence",,denyeart,sahooch,talaal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jcb:",,,,Unset,Unset,,"- create a hyperledger fabric network define the initial ORDERER_GENERAL_LOCALMSPID in docker/kubernetes manifests
- transact to generate blocks and make sure that network is working
- modify ORDERER_GENERAL_LOCALMSPID value for all orderers
- restart all orderers
- transact again
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,sahooch,talaal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Apr/21 8:18 AM;denyeart;[~talaal] What is the behavior that you'd expect?;;;","30/Apr/21 12:05 AM;talaal;[~denyeart] the application channel denied blocks due to wrong mspid, could the system channel also deny those blocks?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode commit keeps failing,FAB-18454,46710,,Bug,Unverified,FAB,Fabric,software,denyeart,,,High,,,pouya,pouya,13/Apr/21 8:52 PM,26/Apr/21 7:59 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"I run this command:
{code:java}
docker exec -e 'CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.local/users/Admin@org1.example.local/msp' -e 'CORE_PEER_ADDRESS=test1.org1.example.local:2082' -e 'CORE_PEER_LOCALMSPID=Org1MSP' -e 'CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.local/peers/test1.org1.example.local/tls/ca.crt' cli peer lifecycle chaincode checkcommitreadiness -o ord1.orderer.example.local:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/orderer.example.local/orderers/ord1.orderer.example.local/msp/tlscacerts/tlsca.orderer.example.local-cert.pem --peerAddresses test1.org1.example.local:2082 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.local/peers/test1.org1.example.local/tls/ca.crt --channelID test1 --name fabcar --sequence 1
{code}

this is the output:

{code:java}
 Chaincode definition for chaincode 'fabcar', version '1', sequence '1' on channel 'test1' approval status by org:
 Org1MSP: true
 Org2MSP: true
{code}

but when committing with this command:
{code:java}
docker exec -e 'CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.local/users/Admin@org1.example.local/msp' -e 'CORE_PEER_ADDRESS=test1.org1.example.local:2082' -e 'CORE_PEER_LOCALMSPID=Org1MSP' -e 'CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.local/peers/test1.org1.example.local/tls/ca.crt' cli peer lifecycle chaincode commit -o ord1.orderer.test.local:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/orderer.test.local/orderers/ord1.orderer.example.local/msp/tlscacerts/tlsca.orderer.example.local-cert.pem  --peerAddresses test1.org1.example.local:2082 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.local/peers/test1.org1.example.local/tls/ca.crt --peerAddresses test2.org2.example.local:2120 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.local/peers/test2.org2.example.local/tls/ca.crt --channelID test1 --name fabcar --version 1 --sequence 1  --signature-policy ""OR('Org1MSP.member','Org2MSP.member')"" --collections-config /opt/gopath/src/github.com/chaincodes/collections_config.json
{code:}

this error occures:
{code:java}
 Error: proposal failed with status: 500 - failed to invoke backing implementation of 'CommitChaincodeDefinition': chaincode definition not agreed to by this org (Org1MSP)
 {code}",,denyeart,pouya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jdn:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,pouya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Apr/21 7:59 AM;denyeart;[~pouya] I'm not able to reproduce. Can you reproduce with test network? https://hyperledger-fabric.readthedocs.io/en/latest/test_network.html;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transfer secret key in memory to Fabric SDK rather from file,FAB-18455,46715,,Story,Backlog,FAB,Fabric,software,denyeart,,,High,,,wuqiaomin,wuqiaomin,16/Apr/21 8:39 PM,16/Apr/21 8:39 PM,28/Oct/23 3:09 AM,,v2.0.0,,,,,,v2.x,,,,,fabric-sdk-go,,,,0,,,,,,"Now，SDK get secret key from sk file or key file in msp or tls directory, which seem likes unsafe, because the secret key is unencrypted and easy to be disclosed.
The idea is to convert the way that the current SDK reads the secret key from key file to the fields of parameter which is sended to SDK. And it requires some changes in Fabric-sdk",,wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jer:",,,,Yes,Unset,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
goimports error on building fabric 2.2.1,FAB-18456,46806,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,ChitreshGargwanshi,ChitreshGargwanshi,22/Apr/21 8:38 PM,29/Apr/21 12:41 PM,28/Oct/23 3:09 AM,26/Apr/21 7:55 AM,,,,,,,,,,,,,,,,0,,,,,,"I'm building development environment for hyperledger fabric 2.2.1, but *basic-checks* is failing with following error message
{code:java}
Checking with goimports
The following files contain goimports errors
bccsp/pkcs11/pkcs11_test.go
The goimports command 'goimports -l -w' must be run for these files
Makefile:176: recipe for target 'linter' failed
make: *** [linter] Error 1{code}
 

 ",,ChitreshGargwanshi,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Apr/21 5:55 PM;ChitreshGargwanshi;output1;https://jira.hyperledger.org/secure/attachment/19001/output1","26/Apr/21 6:24 PM;ChitreshGargwanshi;output2;https://jira.hyperledger.org/secure/attachment/19002/output2",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jgz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ChitreshGargwanshi,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Apr/21 7:55 AM;denyeart;[~ChitreshGargwanshi] I tried with latest goimports and Go against main branch and release-2.2 branch. Everything passed. Older tagged versions are not guaranteed to pass. Can you try with the latest?;;;","26/Apr/21 6:29 PM;ChitreshGargwanshi;[~denyeart] Thanks for your response, I tried the setup with latest code, I followed [this|https://hyperledger-fabric.readthedocs.io/en/release-2.2/dev-setup/devenv.html] link for setup and cloned the latest [source code|https://github.com/hyperledger/fabric],  but still facing the same issue following is my tools versioning information
{code:java}
OS : ubuntu 18.04
Go : 1.15.7
Docker : 20.10.6
Git : 2.17.1 
{code}
[^output1]is the complete output log when I run the *make basic-checks* command, here the issue is with file mode, which is mentioned in octal notation (i.e. 0o644), I changed it to unix permission bit (i.e. 0644). 

After changes when I run *basic-checks* again then I got same goimports errors. see the output log- [^output2]

 ;;;","26/Apr/21 8:31 PM;denyeart;Maybe update your goimports?

go get golang.org/x/tools/cmd/goimports

 

Note that the octal notation for file permissions was recently introduced in:

https://github.com/hyperledger/fabric/commit/8ddb55fae5a3b6a062ac28b3da8802fb993d09b5;;;","29/Apr/21 12:41 PM;ChitreshGargwanshi;[~denyeart] I updated the goimports to version v0.1.0 but still same issue is there.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix Docker fabric-tools image with HSM and orderer parsing of Security property,FAB-18457,46822,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,afrancoc2000,afrancoc2000,afrancoc2000,28/Apr/21 10:29 AM,07/Jun/21 6:20 PM,28/Oct/23 3:09 AM,07/Jun/21 6:20 PM,v1.4.12,,,,,,,,,,,,,,,0,,,,,,"Hi, 

I have trouble generating the BCCSP image of fabric-tools for v1.4 the resulting docker image doesn't have BCCSP=PKCS11. Also I get an error using the orderer property ORDERER_GENERAL_BCCSP_PKCS11_SECURITY when it parses de ""256"" it thinks its a string instead of a number.

So I made these changes in the code:

fabric\common\viperutil\config_util.go - line 316:

{code:go}
err := mapstructure.Decode(data, config)
{code}

changes to:

{code:go}
err := mapstructure.WeakDecode(data, config)
{code}


fabric\images\tools\Dockerfile.in - line 11: 

{code}
RUN make configtxgen configtxlator cryptogen peer discover idemixgen
{code}

changes to:

{code}
ARG GO_TAGS
RUN make configtxgen configtxlator cryptogen peer discover idemixgen GO_TAGS=${GO_TAGS}
{code}


fabric\Makefile - line 301:

{code}
$(DBUILD) -t $(DOCKER_NS)/fabric-$(TARGET) -f $(@D)/Dockerfile .
{code}

changes to:

{code}
$(DBUILD) -t $(DOCKER_NS)/fabric-$(TARGET) -f $(@D)/Dockerfile --build-arg GO_TAGS=$(GO_TAGS) .
{code}


And now the images work for me, I would like to add a pull request but I'm not authorized, so I'll leave these snippets of code in here.

Have a good day,

Ana Franco


",,afrancoc2000,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17900,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jiz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),afrancoc2000,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Apr/21 1:52 AM;afrancoc2000;I can create a PR if you tell me how;;;","30/Apr/21 2:38 AM;yacovm;To create a PR you need to fork the github repository and then commit locally in your fork, and then to open a PR via the github web UI.;;;","30/Apr/21 11:36 AM;denyeart;Detailed pull request instructions can be found here: https://hyperledger-fabric.readthedocs.io/en/latest/github/github.html;;;","05/May/21 4:16 AM;denyeart;https://github.com/hyperledger/fabric/pull/2573;;;","05/May/21 8:37 PM;denyeart;FAB-17900 should be backported for the string versus int fix.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Join-by-block may skip config block(s) where the chain status should have changed from follower to consenter,FAB-18458,46823,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,manish-sethi,manish-sethi,28/Apr/21 2:06 PM,29/Apr/21 2:42 PM,28/Oct/23 3:09 AM,29/Apr/21 2:42 PM,,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"This [exit condition|https://github.com/hyperledger/fabric/blob/2d504026e664c689d65ef7b479a040bb94892ebd/orderer/common/follower/follower_chain.go#L415] is checked after n (a random) numbers of block. What if there were more than one config blocks in the last n blocks fetched by the function ""{color:#6f42c1}pullUntilLatestWithRetry{color}""?",,manish-sethi,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jj7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,tock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Apr/21 2:10 PM;manish-sethi;[exit condition|https://github.com/hyperledger/fabric/blob/2d504026e664c689d65ef7b479a040bb94892ebd/orderer/common/follower/follower_chain.go#L415] for join-by-block to transition from follower to member is verified after fetching n blocks. If there were more than one config blocks in this range, it will verify only the last one.;;;","28/Apr/21 3:46 PM;tock;This is not a bug.  [~manish-sethi]

The follower is normally started when an orderer is first joined to a channel with the channel-participation API. The way it works is that the orderer is given the last config block (say #N) from one of the other orderers in the channel (usually the last config, but maybe a ""recent enough"" config as well, more on that later). That block #N is called the join block. The orderer will start a follower to fetch all the blocks up to and including #N (pull before join). There may be multiple config blocks up to #N, but it this point we don't care, we fetch up to it.

Now, the follower goes to fetch the blocks after #N, if necessary (pull after join). The follower stop condition is that the orderer is a part of the consenters set, which means the follower must stop and transfer control to a normal consenter chain that runs Raft and participates in consensus. So the first thing it does in that loop is to check whether the last config block (#N) indicates membership. If yes, done; it exits and transfers control to a consensus chain. If not, it will fetch all blocks up to the head of the ledger and check again.

This is the main difference between ""pull-before"" and ""pull-after"", pull-before does not check intermediate config blocks before the join block (#N), whereas pull-after checks config blocks that shows up from the join block onwards. However, the pull-after code will not check every config block; it will pull every block until the tip of the ledger (at a given point in time) - and only then check the last config - because blocks that are committed in a remote orderer do not need to be consented upon again, and the decision whether to start a consenter chain can be based on the last config only. 


There are two ""join"" scenarios: 1. the join block does not indicate the new orderer membership, 2. the new join block does indicate the new orderer membership.
Case 1. is the recommended  course of action for joining a new orderer: it is given the last join-block, it catches up up to that and goes on to catch up until the admin thinks it is close enough to the tip of the ledger, and then the channel admin will issue a config tx that adds the new orderer to the consenters set. When that tx is pulled by the follower, it will stop, cause a consensus chain to start, and the new orderer will start taking part in consensus.
Case 2. is when the admin adds the new orderer to the consnters set, and after that gets that last config block and uses it as a join block. This will work, but leaves the channel in a state of reduces fault tolerance until the orderer catches up to the join block and starts a consenter. In long ledgers that may take a significant amount of time, hence (1) is the recommended procedure.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RPC in state CONNECTING,FAB-18459,46824,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,kaelJ,kaelJ,28/Apr/21 6:39 PM,30/Apr/21 11:34 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,bft,,,,,"I Implemented the BFT algorithm

And i  use the previous raft code to abstract the public method, and then I found that it was always 'in state CONNECTIING' when sending msg to other nodes 

is this shoudle  to be a bug ? 

version is 1.4.1 

 

Please give me a help 

 ",,denyeart,kaelJ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jjf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,kaelJ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Apr/21 11:34 AM;denyeart;There is no BFT support currently. If you can reproduce when using Raft, please add detailed reproduction steps.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken link in Developing Applications Application,FAB-18460,46834,,Documentation,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,kawabatas,kawabatas,30/Apr/21 5:41 PM,14/May/21 10:53 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-docs,,,,0,,,,,,"- found this documentation issue, e.g., broken link.

- In this page: [https://hyperledger-fabric.readthedocs.io/en/latest/developapps/application.html]

- under the Gateway section, there's the sentence ""Spend a few moments examining the connection profile ./gateway/connectionProfile.yaml. It uses YAML, making it easy to read.""
- the link on ""profile"" is broken - it displays 404 page.

[https://github.com/hyperledger/fabric-samples/blob/main/commercial-paper/organization/magnetocorp/gateway/networkConnection.yaml]

- i think it's happened since this commit was merged. [https://github.com/hyperledger/fabric-samples/commit/b89ee34ff745b76922f00049df07629baaf3fe5d]",,btl5037,denyeart,kawabatas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jlf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,denyeart,kawabatas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/21 4:15 AM;denyeart;Hmmm, even the yaml that the application uses seems to be missing  - see [https://github.com/hyperledger/fabric-samples/blob/main/commercial-paper/organization/magnetocorp/application/issue.js#L42]

Seems like that would break the app...

Any ideas [~calanais] ?;;;","14/May/21 10:53 AM;btl5037;Its generated and copied from the `test-network` script here the user doesn't inspect it until after the network has already been started and this copied: https://github.com/hyperledger/fabric-samples/blob/main/commercial-paper/network-starter.sh#L26;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GDPR for private data - On demand delete of private data prior to block-to-live policy on an individual peer,FAB-18461,46836,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,01/May/21 2:30 AM,28/Jun/21 6:17 PM,28/Oct/23 3:09 AM,,,,,,,,Future,,,,,fabric-ledger,,,,0,,,,,,"Ability to delete private data from private data storage and private state database on demand by a client request, without having to wait for the typical blockToLive period prior to purging. The blockToLive mechanism is insufficient for use cases that need to be compliant with GDPR, where data must be deleted upon a subject's request.

API to purge a private data key from private state, private data store, and transient store on an individual peer (could be done before or after or instead of DelPrivateData() chaincode API).

This story would help if a single organization should no longer be authorized to a certain piece of private data. They could call an API on their own peers to purge the private data, while the other organizations could retain it.

The shared ledger only has a hash of the private data. Each individual peer maintains their own private data stores and ensures the private data matches the on-chain hashes. So deletion from a single org's peer(s) would not be a divergence issue with respect to the shared ledger.

If the private data should be purged from all organization's peers on the channel, that is covered by FAB-5097.

 ",,bta,calanais,chbtt,decatluther,denyeart,nemoto,roberttaylortech,rolivieri,ScottAllan,sheetal-hlf,toddinpal,troyronda,,,,,,,,,,,,,,,FAB-5097,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-12038,,,,,,,,,"1|i01jlv:",,,,Unset,,,,,Unset,,,,,,,,,,,bta,calanais,chbtt,decatluther,denyeart,nemoto,roberttaylortech,rolivieri,ScottAllan,sheetal-hlf,toddinpal,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/21 6:17 PM;calanais;[~denyeart] Just trying to understand how this story is different from FAB-5097 - they are very similar.

My impression is that this is offering the same features as FAB-5097, but for just a single peer?  Is that not an option therefore on the API?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prune ledger on a peer,FAB-18462,46837,,Epic,To Do,FAB,Fabric,software,denyeart,,,Medium,,satoshi007,denyeart,denyeart,01/May/21 2:41 AM,11/Jun/21 4:14 AM,28/Oct/23 3:09 AM,,,,,,,,v2.x,,,,,fabric-ledger,,,,1,,,,,,"Prune a channel's ledger on a peer. Typically this would be done after a snapshot has been taken and agreed to by channel administrators. With an agreed to snapshot in place (checkpoint), there is no need to keep prior transactions in the block store.",,AshishkumarLakshmanan,denyeart,yongrae,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-106,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-1,,Prune ledger on a peer,To Do,No,,Unset,No,,,"1|i01jm3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),AshishkumarLakshmanan,denyeart,yongrae,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prune block store for a peer,FAB-18463,46838,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,01/May/21 2:44 AM,01/May/21 2:58 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,Prune all blocks on a peer channel prior to a given block number. Typically used after creating a peer snapshot.,,denyeart,nao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18465,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-18462,,,No,,Unset,No,,,"1|i01jmb:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,nao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prune state data from a channel’s ledger,FAB-18464,46839,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,01/May/21 2:47 AM,01/May/21 2:47 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"Prune public and private keys from state database based on an application provided property (e.g. tag key with transaction year/month to enable later pruning state database by year/month). Trigger mass pruning based on a special transaction type (as opposed to normal chaincode deletes). Useful for append-only workloads, or where keys enter a final state. Can be used along with block pruning.",,denyeart,nao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-18462,,,No,,Unset,No,,,"1|i01jmj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,nao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prune block store on an orderer,FAB-18465,46840,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,01/May/21 2:58 AM,01/May/21 4:09 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,Prune all blocks on an ordering node channel prior to a given block number. Typically used after creating peer snapshots.,,denyeart,nao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18463,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jmr:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,nao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ability to create/update private data collections as needed without requiring all organizations to re-approve the chaincode definition (relaxed chaincode definition policy),FAB-18466,46841,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,01/May/21 3:56 AM,01/May/21 3:56 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"Ability to create/update private data collections as needed without requiring all organizations to re-approve the chaincode definition (relaxed chaincode definition policy).

For example, easily create a collection between any pair of organizations when they first transact with each other.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-5108,,,No,,Unset,No,,,"1|i01jmz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Golang chaincode with pseudo C package instantiate failed on 1.4.6,FAB-18467,46847,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid: Works as Expected,lixucheng,lixucheng,lixucheng,07/May/21 7:25 PM,17/Aug/21 12:36 PM,28/Oct/23 3:09 AM,17/Aug/21 12:36 PM,,,,,,,,,,,,,,,,0,,,,,,"When I instantiate golang chaincode with pseudo C package after install successfully, the instantiate command will throw exception as below:

==================================================================
*> peer chaincode instantiate -o 127.0.0.1:7050 -C mychannel -n mycc -v 1.0 -c '\{""Args"":[""init""]}'*


2021-05-07 14:28:35.501 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc
2021-05-07 14:28:35.502 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc
{color:#FF0000}Error: could not assemble transaction, err proposal response was not successful, error code 500, msg error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 2 ""# test-1/vendor/github.com/ethereum/go-ethereum/crypto/secp256k1{color}
{color:#FF0000}chaincode/input/src/test-1/vendor/github.com/ethereum/go-ethereum/crypto/secp256k1/curve.go:42:10: fatal error: libsecp256k1/include/secp256k1.h: No such file or directory{color}
{color:#FF0000} #include ""libsecp256k1/include/secp256k1.h""{color}
{color:#FF0000} ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{color}
{color:#FF0000}compilation terminated.{color}
==================================================================

The pseudo C package included dependencies (libsecp256k1/include/secp256k1.h) have resided in the chaincode's vendor folder (test-1/vendor/github.com/ethereum/go-ethereum/crypto/secp256k1/libsecp256k1/include/secp256k1.h) before installation, but after installed, the dependencies missed in ccenv container when instantiation.",,btl5037,denyeart,lixucheng,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jo3:",,,,Unset,Unset,,"1. Setup fabric network using 1.4.6;
2. Install chaincode ( https://github.com/xuchengli/fabric-chaincode/tree/main/src/test-1 ) with pseudo C package; 
3. Instantiate the chaincode.
4. It will fail with error message of missing dependencies.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,denyeart,lixucheng,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/May/21 8:14 PM;denyeart;https://github.com/hyperledger/fabric/pull/2581;;;","14/Jul/21 1:15 AM;btl5037;As noted, users should extend ccenv to include their C libraries;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode instantiate failing consistently,FAB-18468,46458,,Bug,Returned,FAB,Fabric,software,denyeart,,,High,,,pouya,pouya,28/Dec/20 6:39 PM,07/May/21 9:29 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"Fabric version 1.4.9 instantiating different chaincodes fails with the same error log:
{code:java}
2020-12-28 08:58:31.024 UTC [endorser] callChaincode -> INFO 077 [test][30dadb4d] Entry chaincode: name:""lscc""
2020-12-28 08:58:31.266 UTC [chaincode.platform.golang] GenerateDockerBuild -> INFO 078 building chaincode with ldflagsOpt: '-ldflags ""-linkmode external -extldflags '-static'""'
2020-12-28 09:00:25.102 UTC [endorser] callChaincode -> INFO 079 [test][30dadb4d] Exit chaincode: name:""lscc""  (114077ms)
2020-12-28 09:00:25.113 UTC [endorser] SimulateProposal -> ERRO 07a [test][30dadb4d] failed to invoke chaincode name:""lscc"" , error: container exited with 0
github.com/hyperledger/fabric/core/chaincode.(*RuntimeLauncher).Launch.func1
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/runtime_launcher.go:63
runtime.goexit
        /opt/go/src/runtime/asm_amd64.s:1357
chaincode registration failed

{code}",,pouya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hw3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),pouya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NewSnapshotReader returns nil error if file doesn't exist,FAB-18469,46848,,Bug,In Progress,FAB,Fabric,software,denyeart,,,Medium,,jcastrence,denyeart,denyeart,08/May/21 7:28 PM,15/May/21 4:05 AM,28/Oct/23 3:09 AM,,v2.3.0,,,,,,,,,,,fabric-ledger,,,,0,,,,,,"When testing ledger snapshot comparison, I found that it panics if you provide as input a file that does not exist:

 
{code:java}
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0x1524d26]
goroutine 1 [running]:
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/privacyenabledstate.(*SnapshotReader).Next(0x0, 0x0, 0x0, 0xc0000e4280, 0x0, 0x0)
 /Users/denyeart/work/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/privacyenabledstate/snapshot.go:503 +0x26
github.com/hyperledger/fabric/internal/ledger.Compare(0x7ffeefbff997, 0x43, 0x7ffeefbff9db, 0x4b, 0x16c4950, 0xd, 0x0, 0x0)
 /Users/denyeart/work/src/github.com/hyperledger/fabric/internal/ledger/compare.go:71 +0x5f1
main.main()
 /Users/denyeart/work/src/github.com/hyperledger/fabric/cmd/ledger/main.go:42 +0x259
{code}
 

The issue seems to be that the NewSnapshotReader() returns a nil error here:

[https://github.com/hyperledger/fabric/blob/main/core/ledger/kvledger/txmgmt/privacyenabledstate/snapshot.go#L443-L446]
{code:java}
 	exist, _, err := fileutil.FileExists(dataFilePath)
	if err != nil || !exist {
		return nil, err
	}
{code}
 In the case of file !exist, it should create a new error and return it, rather than return the nil error.  A test should also be added to snapshot_test.go to cover file does not exist scenario.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqwi9",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/May/21 11:41 PM;denyeart;Upon further discussion the nil response is expected in some scenarios (such as no private state data) so we can simply leave the functionality as-is and improve the comments and logging to make the intended use more clear.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
endorsement phase,FAB-18470,46854,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Invalid,,elmira,elmira,12/May/21 9:42 PM,14/May/21 8:44 AM,28/Oct/23 3:09 AM,14/May/21 8:44 AM,,,,,,,,,,,,,,,,0,,,,,,"Hi,
Please give your opinion about the following, thank you
Suppose our smart contract deducts $ 100 for each call from someone's account and returns true to who calls it. Now, if the three endorsers have to execute the smart contract, they deduct three-time, and they have all see the same result that is true, but we deduct three-time from that account, and it is not what we want.
What will be the transaction life cycle?
Is it deducted from the account all three times? I know that the endorsement phase is a simulation, meaning that no world state changes, but how does this happen because we are deducted from the account to execute each request?
I want to know how the endorsement phase behaves with this contract scenario exactly.",,btl5037,elmira,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jp7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,elmira,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/May/21 8:44 AM;btl5037;Jira is for bugs, not for questions, please move question to mailing list. Though i've answered it in Rocket Chat;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need help on the peers&orderers tls cert renewal ,FAB-18471,46861,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,shivareddy13,shivareddy13,14/May/21 2:27 PM,15/May/21 6:42 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"Hi There,

Am using fabric 1.4.3

network structure:

3-peers

3-orders 

orderer cluster type: etcdraft

our peers and orders tls (server.crt,server.key ) certs are getting expired soon.

Using k8 and argocd for the deployment.

Accessing these certs in the network via the secretes.

 

Would you be so kind as to help me to renewal these tls certs.

 

Thanks,

Shiva.B ",,shivareddy13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,,,No,,Unset,No,,,"1|i01jqj:",,,,No,Unset,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),shivareddy13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unit tests hang when running pkcs11 test with Softhsm 2.6.1,FAB-18472,46863,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Low,,davidkel,davidkel,davidkel,18/May/21 7:55 PM,18/May/21 7:55 PM,28/Oct/23 3:09 AM,,v2.x,,,,,,v2.x,,,,,fabric-crypto,,,,0,,,,,,"The hang is due to the race detector being used when os.Exit(0) is called. In Go os.Exit(0) waits for the race detector to complete. If the tests are run without the race detector then the problem doesn't occur. As the builds that run the unit tests don't hang it's likely this is something introduced with newer versions of softhsm as the builds use the version shipped by the repo of the distro being used.

One possibility of the problem is that fabric never bothers to unload the softhsm library (ie never calls Destroy on the pkcs11 3rd party library) but to add that code so that the unit tests can properly clean up is a much larger undertaking and currently is not code that would be called by fabric, however I believe this is an item for graceful shutdown which may make sense for it to clean up pkcs11 resources before terminating.

The easiest solution at this time is just to call syscall.Exit which bypasses the wait for the race detector to finish. 

 

 

 ",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jqz:",,,,Unset,Unset,,"make unit-test 
with pkcs11 enabled for softhsm 2.6.1 on linux",,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode unit testing explanation/ tutorial,FAB-18473,46872,,Story,Backlog,FAB,Fabric,software,denyeart,,,High,,,stephan42,stephan42,19/May/21 7:24 PM,31/Dec/22 7:16 PM,28/Oct/23 3:09 AM,,,,,,,,v2.x,,,,,fabric-test,,,,2,Documentation,,,,,"using hyperledger fabric 2.3 (latest) and coding the chaincode in Go. I want to unit test this chaincode but there is limited resources on the internet on how to do this. And the one that do show how it's done use deprecated methods. As far as my understanding goes, is that the 'old' way uses shim, shimtest and the golang testing imports to unit test the code. But the newer way of writing chaincode is with the contractapi. And shimtest no longer exists. I did take a look at the hyperledger fabric samples. They do use the new contractapi and have working unit tests. Here I can see that they generate mock files (This is the github example project that im refering to: [https://github.com/hyperledger/fabric-samples/tree/main/asset-transfer-basic/chaincode-go/chaincode]) but i cant figure out how they generate them and which ones i need to generate for my own chaincode (each fabric example has different amount of mock files).

From a developer perspective, a guide on how to unit test your chaincode is much appreciated as there is a lack of resources on the topic. ",,bala45,btl5037,sebstar,stephan42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|hzwqen:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bala45,btl5037,sebstar,stephan42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/21 1:14 AM;btl5037;Unit testing chaincode is not specific to Fabric. There are many frameworks in every language, the example you linked is something I wrote using a tool called counterfeiter. I use what are call `go:generate` directives to have Go mock an interface for me. The three mentioned in this file are pretty much all you will need to generate the mocks: [https://github.com/hyperledger/fabric-samples/blob/main/asset-transfer-basic/chaincode-go/chaincode/smartcontract_test.go#L16]

Of course you also need to install counterfeiter: https://github.com/maxbrunsfeld/counterfeiter;;;","07/Feb/22 10:41 PM;sebstar;I can also recommend [https://github.com/vektra/mockery] for creating mocks using [testify/mock|https://github.com/stretchr/testify#mock-package]. More modern than counterfeiter.;;;","31/Dec/22 6:27 PM;bala45;Stephan Stephan did you got anything for the unit test? Please give me any documentation for it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peers gossip connection continuously disconnects and reconnects,FAB-18474,46873,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Test Error,,denyeart,denyeart,21/May/21 6:11 AM,21/May/21 7:24 AM,28/Oct/23 3:09 AM,21/May/21 7:24 AM,v2.2.3,,,,,,,,,,,fabric-gossip,,,,0,,,,,,"On local machine running two peers. Using /etc/hosts file aliases to simulate peer0.org1.example.com and peer1.org1.example.com (although I see same issue when running both peers with 127.0.0.1 at different ports).

The two peers in same org on the same channel have connected via gossip successfully.  The peers are pinging each other constantly via gossip. However, every 25s one peer thinks the other has died with a message like:

2021-05-20 16:49:31.059 EDT [gossip.discovery] getDeadMembers -> WARN 6b0 Haven't heard from [188 227 232 41 2 25 73 248 239 252 123 255 237 207 159 118 186 122 195 105 209 29 255 146 161 8 52 170 105 180 66 19] for 25.282170016s

This leads the peers to disconnect from each other and reconnect continuously:

peer0.org1:

 
{code:java}
2021-05-20 16:47:16.813 EDT [gossip.channel] reportMembershipChanges -> INFO 17d [[mychannel] Membership view has changed. peers went online: [[peer1.org1.example.com:7053]] , current view: [[peer1.org1.example.com:7053]]]
2021-05-20 16:49:01.811 EDT [gossip.channel] reportMembershipChanges -> INFO 68a [[mychannel] Membership view has changed. peers went offline: [[peer1.org1.example.com:7053]] , current view: []]
2021-05-20 16:49:06.812 EDT [gossip.channel] reportMembershipChanges -> INFO 6db [[mychannel] Membership view has changed. peers went online: [[peer1.org1.example.com:7053]] , current view: [[peer1.org1.example.com:7053]]]
2021-05-20 16:49:31.811 EDT [gossip.channel] reportMembershipChanges -> INFO 820 [[mychannel] Membership view has changed. peers went offline: [[peer1.org1.example.com:7053]] , current view: []]
2021-05-20 16:49:36.809 EDT [gossip.channel] reportMembershipChanges -> INFO 870 [[mychannel] Membership view has changed. peers went online: [[peer1.org1.example.com:7053]] , current view: [[peer1.org1.example.com:7053]]]
{code}
 

 

peer1.org1:

 
{code:java}
2021-05-20 16:47:21.067 EDT [gossip.channel] reportMembershipChanges -> INFO 195 [[mychannel] Membership view has changed. peers went online: [[peer0.org1.example.com:7051]] , current view: [[peer0.org1.example.com:7051]]]
2021-05-20 16:48:01.066 EDT [gossip.channel] reportMembershipChanges -> INFO 352 [[mychannel] Membership view has changed. peers went offline: [[peer0.org1.example.com:7051]] , current view: []]
2021-05-20 16:48:06.065 EDT [gossip.channel] reportMembershipChanges -> INFO 3a1 [[mychannel] Membership view has changed. peers went online: [[peer0.org1.example.com:7051]] , current view: [[peer0.org1.example.com:7051]]]
2021-05-20 16:48:31.066 EDT [gossip.channel] reportMembershipChanges -> INFO 470 [[mychannel] Membership view has changed. peers went offline: [[peer0.org1.example.com:7051]] , current view: []]
2021-05-20 16:48:36.065 EDT [gossip.channel] reportMembershipChanges -> INFO 4cb [[mychannel] Membership view has changed. peers went online: [[peer0.org1.example.com:7051]] , current view: [[peer0.org1.example.com:7051]]]
2021-05-20 16:49:01.064 EDT [gossip.channel] reportMembershipChanges -> INFO 5a3 [[mychannel] Membership view has changed. peers went offline: [[peer0.org1.example.com:7051]] , current view: []]
2021-05-20 16:49:06.064 EDT [gossip.channel] reportMembershipChanges -> INFO 5e9 [[mychannel] Membership view has changed. peers went online: [[peer0.org1.example.com:7051]] , current view: [[peer0.org1.example.com:7051]]]
2021-05-20 16:49:31.064 EDT [gossip.channel] reportMembershipChanges -> INFO 6bb [[mychannel] Membership view has changed. peers went offline: [[peer0.org1.example.com:7051]] , current view: []]
2021-05-20 16:49:36.063 EDT [gossip.channel] reportMembershipChanges -> INFO 708 [[mychannel] Membership view has changed. peers went online: [[peer0.org1.example.com:7051]] , current view: [[peer0.org1.example.com:7051]]]
{code}
 

Sometimes it goes for multiple minutes without a disconnection, but it always disconnects and reconnects eventually.

Full debug logs attached.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/May/21 7:13 AM;denyeart;peer0.org1.dmp;https://jira.hyperledger.org/secure/attachment/19006/peer0.org1.dmp","21/May/21 6:12 AM;denyeart;peer0.org1.log;https://jira.hyperledger.org/secure/attachment/19004/peer0.org1.log","21/May/21 7:13 AM;denyeart;peer1.org1.dmp;https://jira.hyperledger.org/secure/attachment/19007/peer1.org1.dmp","21/May/21 6:12 AM;denyeart;peer1.org1.log;https://jira.hyperledger.org/secure/attachment/19005/peer1.org1.log",,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jt7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/May/21 7:24 AM;denyeart;set aliveTimeInterval back to default of 5s and it miraculously fixed it, thanks [~yacovm];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error: error validating peer connection parameters: number of peer addresses (1) does not match the number of TLS root cert files (2),FAB-18475,46875,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Test Error,,rijoblockchain,rijoblockchain,22/May/21 9:37 AM,22/May/21 9:55 AM,28/Oct/23 3:09 AM,22/May/21 9:55 AM,,,,,,,,,,,,,,,,0,,,,,,"I am using the following command to invoke chaincode on two peers, but getting an error Error: error validating peer connection parameters: number of peer addresses (1) does not match the number of TLS root cert files (2)

peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile ""<PATH>"" -C mychannel -n private -c --peerAddresses localhost:7051  --tlsRootCertFiles ""<PATH>""  --peerAddresses localhost:9051  --tlsRootCertFiles ""<PATH>"" '{""function"":""xxxxx"",""Args"":[]}' --transient ""{\""yyyy\"":\""$yyyy\""}"" ",,rijoblockchain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jtn:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rijoblockchain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[Fabric-samples] test-network startup failed due to image tag ""latest"" not exist",FAB-18477,46877,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,bjwswang,bjwswang,25/May/21 1:11 PM,17/Aug/21 12:34 PM,28/Oct/23 3:09 AM,17/Aug/21 12:34 PM,,,,,,,,,,,,,,,,0,,,,,,"Not sure if this issue should be under ""Fabric"".If not, pls someone show me the right place.Thanks!

I just tried the `fabric-samples/test-network1  startup process,but unfortunately it failed. The problem is quite straitforward. `./network.sh up`  requires images with tag `latest`  while the official hub doesn't provide such tags which led to the network startup process failed.

Since `test-network`  is the essential part for beginners to  try hyperledger fabric, this issue should be fixed ASAP.

 

 ",,bjwswang,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ju3:",,,,Unset,Unset,,"(Please add steps to reproduce)
1. clone fabric-samples
2. run `cd fabric-samples/test-network`
3. run `./network.sh up`",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bjwswang,btl5037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/21 1:10 AM;btl5037;You are not meant to clone fabric-samples yourself, the documentation will tell you to use the bootstrapping script which will download the appropriate images and tag them as latest, and will download and bootstrap fabric-samples for you: https://raw.githubusercontent.com/hyperledger/fabric/main/scripts/bootstrap.sh;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to restore network with expired Admin certificates in 1.2version,FAB-18478,46879,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Highest,,,rameshyadav444,rameshyadav444,26/May/21 5:31 PM,20/Jan/22 8:56 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,1,,,,,,"Hi,

 

Currently our production application is running on 1.2 version and all my orderer and peer admin certificates got expired. 

After I have created new certificates and replaced in the same directory of old certificates. My application is working fine and I was able to do the transactions.

 

But when I tried to add new org or update channel configurations, it is giving expired error when I tried to sign with old admin certs. 

I was unable to use *ORDERER_GENERAL_AUTHENTICATION_NOEXPIRATIONCHECKS*=true and  *--tlsHandshakeTimeShift* options in 1.2 version as these options available after 1.4.3 version

 

*Is there any way to restore my network and update the new certificates in 1.2 version?* 

Once the network is restored then only we can upgrade to 1.3 or 1.4 versions.

 

Regards,

Ramesh.

 ",,kentbull,lintocn,rameshyadav444,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kej:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),kentbull,lintocn,rameshyadav444,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jan/22 8:56 AM;kentbull;Use a time-shifted machine to sign the configuration updates. Copy the peer and orderer ledger data directories to a machine that can have it's time shifted back before certificate expiration. Then use the certificates to sign a new config block with the new certificates when the local time is shifted bakcwads.

Once the config block is appropriately submitted to the blockchain then you copy again the orderer and peer ledger on the time-shifted machine and restore that ledger to your production setup.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer does not log error if it cannot forward transaction to Raft leader,FAB-18479,46881,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,29/May/21 6:58 AM,10/Jun/21 4:12 AM,28/Oct/23 3:09 AM,08/Jun/21 11:52 PM,,,,,,,v2.2.4,v2.3.3,v2.4.0,,,fabric-orderer,,,,1,,,,,,"When a transaction is submitted to a Raft orderer node, as soon as it accepts the transaction a success is returned to the client. If the orderer node is not the Raft leader, it will attempt to forward the transaction to the Raft leader. If this fails, for example due to a network issue, the orderer does not log the error, and does not retry the send. It simply logs a debug message as follows:

 
{code:java}
2021-05-21T15:34:04.155751059Z [36m2021-05-21 15:34:04.155 UTC [orderer.common.broadcast] ProcessMessage -> DEBU 1f97d[0m [channel: mychannel] Broadcast is processing normal message from 172.30.176.148:49500 with txid '6c05b32a0751453a729105903798b275ae2507165772ac760ee7f4440ea265b8' of type ENDORSER_TRANSACTION
2021-05-21T15:34:04.157226324Z [36m2021-05-21 15:34:04.156 UTC [orderer.consensus.etcdraft] submitSent -> DEBU 1f97e[0m Sending msg of 7425 bytes to 5 on channel mychannel took 24.752µs
2021-05-21T15:34:04.157298684Z [36m2021-05-21 15:34:04.156 UTC [orderer.common.broadcast] ProcessMessage -> DEBU 1f97f[0m [channel: mychannel] Broadcast has successfully enqueued message of type ENDORSER_TRANSACTION from 172.30.176.148:49500
2021-05-21T15:34:04.157832832Z [36m2021-05-21 15:34:04.157 UTC [orderer.common.cluster] 1 -> DEBU 1f980[0m Stream 17 to OS1(n46c992-orderingservicenode5:7050) is aborted
2021-05-21T15:34:04.157980725Z [36m2021-05-21 15:34:04.157 UTC [orderer.common.cluster.step] sendMessage -> DEBU 1f981[0m Send of SubmitRequest for channel mychannel with payload of size 7425 to OS1(n46c992-orderingservicenode5:7050) took 195.364µs but failed due to EOF
{code}
 

The orderer should log the send failure as an error rather than debug message.

A few other things could be done to improve the behavior in the future:

The orderer could retry the send before giving up.

The orderer could also attempt the send before replying success back to the client.

However, there has been some debate on these functionality changes given the async nature of Raft communications. Clients need to check for transaction commit events regardless since cutting transactions into blocks is not guaranteed. These suggestions are therefore out of scope for this work item, but may be taken up in follow-on enhancements.",,denyeart,mlishok,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18484,,,,"31/May/21 8:12 PM;denyeart;orderer_dropped_transaction.log;https://jira.hyperledger.org/secure/attachment/19010/orderer_dropped_transaction.log",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01juz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,mlishok,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.3,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/May/21 4:32 AM;denyeart;https://github.com/hyperledger/fabric/pull/2624;;;","31/May/21 8:17 PM;denyeart;Attached log showing orderer.

06:51:31.322 Submitted first tx - ok
 06:51:46.037 Stopped remote leader
 06:51:47.103 Submitted second tx - dropped, no error logged, no error sent back to client

There are some grpc ""Context cancelled"" warning and info messages around that time, but no errors indicating that transactions are being dropped.

If somebody looked at the broadcast debug, they would actually get the impression that the transaction was submitted successfully:

 

 
{code:java}
2021-05-31 06:51:47.111 EDT 024b DEBU [orderer.common.broadcast] ProcessMessage -> [channel: mychannel] Broadcast is processing normal message from 127.0.0.1:62811 with txid 'dce1f3872d4eddb2662427357a40e7cd33e921fd64dfcaca5b6af098b4d9cffc' of type ENDORSER_TRANSACTION
2021-05-31 06:51:47.112 EDT 024d DEBU [orderer.common.broadcast] ProcessMessage -> [channel: mychannel] Broadcast has successfully enqueued message of type ENDORSER_TRANSACTION from 127.0.0.1:62811
{code}
 

The first PR proposes a single error message each time a transaction is dropped.

 ;;;","03/Jun/21 3:50 AM;mlishok;I believe a retry is needed here. Any transient network event on the GRPC connection would leave in state where the connection COULD be re-established with a retry, and deliver the message to the leader.;;;","08/Jun/21 11:58 PM;denyeart;Error message has been added to orderer log now.

Follow-on FAB-18484 will investigate whether success/error response can be sent back to submitting client as a future enhancement.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-samples fabric_test not found,FAB-18481,46894,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nao,nao,nao,04/Jun/21 6:03 AM,17/Aug/21 12:34 PM,28/Oct/23 3:09 AM,17/Aug/21 12:34 PM,,,,,,,,,,,,fabric-samples,,,,0,,,,,,"My environment is docker version 20.10. And fabric version is v2.3.2.

When creating chaincode using ./network.sh in fabric-samples, I got the error below
{code:java}
2021-06-02 13:43:42.906 UTC [kvledger] commit -> INFO 05d [mychannel] Committed block [5] with 1 transaction(s) in 14ms (state_validation=0ms block_and_pvtdata_commit=6ms state_commit=4ms) commitHash=[d94a08b0502536c7928f2b5639019a1bff858f844aa0e172f53a51a4a3c7363e]
2021-06-02 13:43:42.908 UTC [comm.grpc.server] 1 -> INFO 05e streaming call completed grpc.service=protos.Deliver grpc.method=DeliverFiltered grpc.request_deadline=2021-06-02T13:44:10.882Z grpc.peer_address=172.30.0.1:48484 error=""context finished before block retrieved: context canceled"" grpc.code=Unknown grpc.call_duration=2.025635488s
2021-06-02 13:43:43.019 UTC [dockercontroller] Start -> ERRO 05f start-could not start container: API error (404): network fabric_test not found
2021-06-02 13:43:43.019 UTC [lifecycle] Work -> WARN 060 could not launch chaincode 'basic_1.0:44df78af0e68cf5d32caa6d31701a14cd946ec1aa4c31e9cbc1e625c3bf52822': error starting container: error starting container: API error (404): network fabric_test not found
2021-06-02 13:43:49.002 UTC [lifecycle] QueryChaincodeDefinition -> INFO 061 Successfully queried chaincode name 'basic' with definition {sequence: 1, endorsement info: (version: '1.0', plugin: 'escc', init required: false), validation info: (plugin: 'vscc', policy: '12202f4368616e6e656c2f4170706c69636174696f6e2f456e646f7273656d656e74'), collections: ()},
2021-06-02 13:43:49.003 UTC [endorser] callChaincode -> INFO 062 finished chaincode: _lifecycle duration: 0ms channel=mychannel txID=f0949456{code}
I confirmed the network was created.
{code:java}
$ docker network ls
NETWORK ID NAME DRIVER SCOPE
5f72ca3a85af bridge bridge local
b462e0ea5f6b fabric_test bridge local
f5f04d3ce308 host host local
9bc8ecff2841 kind bridge local
8d6409b3241d none null local{code}
However, When I changed docker version to 19.03, creating chaincode was successful. docker version 20.10 changes the location of docker.sock in rootless mode.
19.03: /var/run/docker.sock
20.10: /run/user/1000/docker.sock

I suspect that it needs to change the mount path for docker.sock in docker-compose-test-net.yaml",,nao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jxv:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nao,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jun/21 7:12 PM;nao;https://github.com/hyperledger/fabric-samples/pull/447;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to specify peer's chaincode.externalBuilders as env variable,FAB-18482,46897,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kopaygorodsky,kopaygorodsky,kopaygorodsky,05/Jun/21 8:08 AM,26/Jul/22 7:50 PM,28/Oct/23 3:09 AM,01/Jul/21 4:39 AM,,,,,,,,,,,,fabric-peer,,,,1,,,,,,"As the HLF doc says it's possible to override each config param via env variables, however, it isn't true for chaincode.externalBuilders 
Config parser uses ```viper.UnmarshalKey``` which expects ```map[string]interface``` under the hood and ignores env variables. ",,davidkhala,kopaygorodsky,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jyj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,kopaygorodsky,yacovm,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,mergify/bp/release-2.2/pr-3750,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jun/21 8:54 PM;kopaygorodsky;https://github.com/hyperledger/fabric/pull/2643;;;","26/Jun/21 4:39 PM;davidkhala;I suffer from similar issue.;;;","01/Jul/21 2:32 AM;kopaygorodsky;[~yacovm] could you review it, please? The PR is ready and green. ;;;","01/Jul/21 4:39 AM;yacovm;Yes, sorry for the delay. 
I don't know why no one reviewed it by now. 
I guess everyone hoped someone else would do it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow to override any default core.yaml property with an empty env variable,FAB-18483,46911,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,kopaygorodsky,kopaygorodsky,kopaygorodsky,07/Jun/21 9:02 PM,07/Jun/21 9:12 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"Usecase: I want to override CORE_PEER_TLS_ROOTCERT_FILE with an empty env variable, but instead default value from core.yaml is used -> `etc/hyperledger/fabric/tls/ca.crt`

As a solution, I could pass the whole `core.yaml` with whatever options I have, but I want to follow Fabric's statement that each property can be overridden using env vars. 

It becomes possible in viper lib from 1.3.0. Currently, fabric uses 1.1.1
https://github.com/spf13/viper/pull/440

Would you consider this as a valid use case? If so - I'll provide a PR.",,kopaygorodsky,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k0j:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),kopaygorodsky,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jun/21 9:03 PM;kopaygorodsky;[~yacovm] could you take a look at this issue, please? ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Upon transaction submit, orderer should return error to submitting client if the transaction cannot be forwarded to Raft leader",FAB-18484,46915,,Story,In Progress,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,08/Jun/21 11:56 PM,14/Jun/21 5:00 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"When a transaction is submitted to a Raft orderer node, as soon as it accepts the transaction a success is returned to the client. If the orderer node is not the Raft leader, it will attempt to forward the transaction to the Raft leader. If this fails, for example due to a network issue, the orderer does not log the error, and does not retry the send.

FAB-18479 added a log error message to orderer log for cases where the transaction cannot be forwarded to the Raft leader.

This Jira item proposes to enhance the Raft ordering from the current async submission and instead make it a sync submission that ensures that the transaction is submitted to Raft leader before returning success to client. Note however that even the Raft leader may not cut the transaction into a block (e.g. leader crash, config change gets ordered before the transaction, etc), and therefore clients will continue to need to listen for block events to ensure submitted transactions get ordered and validated.",,denyeart,Param-S,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18479,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k1f:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,Param-S,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.3,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jun/21 1:51 AM;denyeart;https://github.com/hyperledger/fabric/pull/2666;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric orderer - add config option for client keepalives,FAB-18485,46916,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,Param-S,denyeart,denyeart,09/Jun/21 12:01 AM,29/Jun/21 8:16 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-orderer,,,,0,,,,,,"Fabric orderer hardcodes client keepalives at 60s.

The leader to follower communications do not need keepalives since there is a constant Raft heartbeat.

The follower to leader communications would benefit from a configurable client keepalive however, in case there is idle time between sending transactions between follower and leader.

A good default is probably 30s (make sure the ServerMinInternal on the orderers become 25s by default too, otherwise its going to tell any keepalives to go away).",,denyeart,Param-S,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k1n:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,Param-S,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
createChannel on latest fabric-samples doesn't work,FAB-18486,46922,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,tschonnycache,tschonnycache,10/Jun/21 8:39 PM,10/Jun/21 8:40 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"I downloaded the latest version of fabric and its samples using 

curl -sSL [https://bit.ly/2ysbOFE] | bash -s

when I cd into fabric-samples/test-network and run

./network.sh up createChannel -c mychannel

I get

Error: got unexpected status: BAD_REQUEST – channel creation request not allowed because the orderer system channel is not defined
 Anchor peer update failed
 Channel 'mychannel' joined

I'm running mac os 10.15.7 and docker desktop 3.3.3 

Here is the full script output:

 

jonas@Jonas-MBP fabric-samples/test-network (main) » ./network.sh up createChannel -c mychanneljonas@Jonas-MBP fabric-samples/test-network (main) » ./network.sh up createChannel -c mychannelCreating channel 'mychannel'.If network is not up, starting nodes with CLI timeout of '5' tries and CLI delay of '3' seconds and using database 'leveldb with crypto from 'cryptogen'Bringing up networkLOCAL_VERSION=2.3.2DOCKER_IMAGE_VERSION=2.3.2/Users/jonas/IdeaProjects/de4l-client/fabric-samples/test-network/../bin/cryptogenGenerating certificates using cryptogen toolCreating Org1 Identities+ cryptogen generate --config=./organizations/cryptogen/crypto-config-org1.yaml --output=organizationsorg1.example.com+ res=0Creating Org2 Identities+ cryptogen generate --config=./organizations/cryptogen/crypto-config-org2.yaml --output=organizationsorg2.example.com+ res=0Creating Orderer Org Identities+ cryptogen generate --config=./organizations/cryptogen/crypto-config-orderer.yaml --output=organizations+ res=0Generating CCP files for Org1 and Org2Docker Compose is now in the Docker CLI, try `docker compose up`
 Creating network ""fabric_test"" with the default driverCreating peer0.org1.example.com ... doneCreating orderer.example.com    ... doneCreating peer0.org2.example.com ... doneCreating cli                    ... doneCONTAINER ID   IMAGE                               COMMAND             CREATED         STATUS                  PORTS                                                                                  NAMESb12494361d97   hyperledger/fabric-tools:latest     ""/bin/bash""         2 seconds ago   Up Less than a second                                                                                          clifcdd7f7ba687   hyperledger/fabric-orderer:latest   ""orderer""           9 seconds ago   Up 1 second             0.0.0.0:7050->7050/tcp, :::7050->7050/tcp, 0.0.0.0:7053->7053/tcp, :::7053->7053/tcp   orderer.example.come76d15d7c5fd   hyperledger/fabric-peer:latest      ""peer node start""   9 seconds ago   Up 2 seconds            7051/tcp, 0.0.0.0:9051->9051/tcp, :::9051->9051/tcp                                    peer0.org2.example.com76869927afad   hyperledger/fabric-peer:latest      ""peer node start""   9 seconds ago   Up 5 seconds            0.0.0.0:7051->7051/tcp, :::7051->7051/tcp                                              peer0.org1.example.comGenerating channel genesis block 'mychannel.block'/Users/jonas/IdeaProjects/de4l-client/fabric-samples/test-network/../bin/configtxgen+ configtxgen -profile TwoOrgsApplicationGenesis -outputBlock ./channel-artifacts/mychannel.block -channelID mychannel2021-06-10 13:09:34.985 CEST [common.tools.configtxgen] main -> INFO 001 Loading configuration2021-06-10 13:09:34.989 CEST [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002 orderer type: etcdraft2021-06-10 13:09:34.989 CEST [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003 Orderer.EtcdRaft.Options unset, setting to tick_interval:""500ms"" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:167772162021-06-10 13:09:34.989 CEST [common.tools.configtxgen.localconfig] Load -> INFO 004 Loaded configuration: /Users/jonas/IdeaProjects/de4l-client/fabric-samples/test-network/configtx/configtx.yaml2021-06-10 13:09:34.991 CEST [common.tools.configtxgen] doOutputBlock -> INFO 005 Generating genesis block2021-06-10 13:09:34.991 CEST [common.tools.configtxgen] doOutputBlock -> INFO 006 Creating application channel genesis block2021-06-10 13:09:34.991 CEST [common.tools.configtxgen] doOutputBlock -> INFO 007 Writing genesis block+ res=0Creating channel mychannelUsing organization 1+ osnadmin channel join --channelID mychannel --config-block ./channel-artifacts/mychannel.block -o localhost:7053 --ca-file /Users/jonas/IdeaProjects/de4l-client/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --client-cert /Users/jonas/IdeaProjects/de4l-client/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt --client-key /Users/jonas/IdeaProjects/de4l-client/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key+ res=0Status: 405\{ ""error"": ""cannot join: channel already exists""}
 Channel 'mychannel' createdJoining org1 peer to the channel...Using organization 1+ peer channel join -b ./channel-artifacts/mychannel.block+ res=02021-06-10 13:09:41.297 CEST [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized2021-06-10 13:09:41.319 CEST [channelCmd] executeJoin -> INFO 002 Successfully submitted proposal to join channelJoining org2 peer to the channel...Using organization 2+ peer channel join -b ./channel-artifacts/mychannel.block+ res=02021-06-10 13:09:44.388 CEST [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized2021-06-10 13:09:44.409 CEST [channelCmd] executeJoin -> INFO 002 Successfully submitted proposal to join channelSetting anchor peer for org1...Using organization 1Fetching channel config for channel mychannelUsing organization 1+ peer channel fetch config config_block.pb -o orderer.example.com:7050 --ordererTLSHostnameOverride orderer.example.com -c mychannel --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pemFetching the most recent configuration block for the channel2021-06-10 11:09:44.713 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized2021-06-10 11:09:44.714 UTC [cli.common] readBlock -> INFO 002 Expect block, but got status: &\{NOT_FOUND}Error: can't read the block: &\{NOT_FOUND}Decoding config block to JSON and isolating config to Org1MSPconfig.json+ configtxlator proto_decode --input config_block.pb --type common.Block+ jq '.data.data[0].payload.data.config'configtxlator: error: open config_block.pb: no such file or directory, try --helpGenerating anchor peer update transaction for Org1 on channel mychannel+ jq '.channel_group.groups.Application.groups.Org1MSP.values += {""AnchorPeers"":{""mod_policy"": ""Admins"",""value"":{""anchor_peers"": [

{""host"": ""peer0.org1.example.com"",""port"": 7051}

]},""version"": ""0""}}' Org1MSPconfig.json+ configtxlator proto_encode --input Org1MSPconfig.json --type common.Configconfigtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF+ configtxlator proto_encode --input Org1MSPmodified_config.json --type common.Configconfigtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF+ configtxlator compute_update --channel_id mychannel --original original_config.pb --updated modified_config.pbconfigtxlator: error: Error computing update: error computing config update: no channel group included for original config+ configtxlator proto_decode --input config_update.pb --type common.ConfigUpdate+ jq .++ cat config_update.json+ echo '\{""payload"":{""header"":{""channel_header"":{""channel_id"":""mychannel"", ""type"":2}},""data"":\{""config_update"":{' '""channel_id"":' '"""",' '""isolated_data"":' '{},' '""read_set"":' null, '""write_set"":' null '}}}}'+ configtxlator proto_encode --input config_update_in_envelope.json --type common.Envelope2021-06-10 11:09:44.893 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initializedError: got unexpected status: BAD_REQUEST – channel creation request not allowed because the orderer system channel is not definedAnchor peer update failedSetting anchor peer for org2...Using organization 2Fetching channel config for channel mychannelUsing organization 2Fetching the most recent configuration block for the channel+ peer channel fetch config config_block.pb -o orderer.example.com:7050 --ordererTLSHostnameOverride orderer.example.com -c mychannel --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem2021-06-10 11:09:45.201 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized2021-06-10 11:09:45.202 UTC [cli.common] readBlock -> INFO 002 Expect block, but got status: &\{NOT_FOUND}Error: can't read the block: &\{NOT_FOUND}Decoding config block to JSON and isolating config to Org2MSPconfig.json+ configtxlator proto_decode --input config_block.pb --type common.Block+ jq '.data.data[0].payload.data.config'configtxlator: error: open config_block.pb: no such file or directory, try --help+ jq '.channel_group.groups.Application.groups.Org2MSP.values += {""AnchorPeers"":{""mod_policy"": ""Admins"",""value"":{""anchor_peers"": [

{""host"": ""peer0.org2.example.com"",""port"": 9051}

]},""version"": ""0""}}' Org2MSPconfig.jsonGenerating anchor peer update transaction for Org2 on channel mychannel+ configtxlator proto_encode --input Org2MSPconfig.json --type common.Configconfigtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF+ configtxlator proto_encode --input Org2MSPmodified_config.json --type common.Configconfigtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF+ configtxlator compute_update --channel_id mychannel --original original_config.pb --updated modified_config.pbconfigtxlator: error: Error computing update: error computing config update: no channel group included for original config+ configtxlator proto_decode --input config_update.pb --type common.ConfigUpdate+ jq .++ cat config_update.json+ echo '\{""payload"":{""header"":{""channel_header"":{""channel_id"":""mychannel"", ""type"":2}},""data"":\{""config_update"":{' '""channel_id"":' '"""",' '""isolated_data"":' '{},' '""read_set"":' null, '""write_set"":' null '}}}}'+ configtxlator proto_encode --input config_update_in_envelope.json --type common.Envelope2021-06-10 11:09:45.381 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initializedError: got unexpected status: BAD_REQUEST – channel creation request not allowed because the orderer system channel is not definedAnchor peer update failedChannel 'mychannel' joined",,tschonnycache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k2z:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),tschonnycache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
404s in release-2.2 docs,FAB-18487,46926,46935,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nikhil550,ryjones,ryjones,11/Jun/21 12:43 AM,13/Jun/21 4:45 AM,28/Oct/23 3:09 AM,13/Jun/21 4:45 AM,,,,,,,,,,,,fabric-docs,,,,0,,,,,,see attached,,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jun/21 12:52 AM;ryjones;release-2.2.htm;https://jira.hyperledger.org/secure/attachment/19016/release-2.2.htm",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k3v:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ryjones,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,mergify/bp/release-2.2/pr-3750,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
404s in release-2.3 docs,FAB-18488,46927,46935,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nikhil550,ryjones,ryjones,11/Jun/21 12:47 AM,12/Jun/21 4:08 AM,28/Oct/23 3:09 AM,12/Jun/21 4:08 AM,,,,,,,,,,,,fabric-docs,,,,0,,,,,,see attached,,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jun/21 12:52 AM;ryjones;release-2.3.htm;https://jira.hyperledger.org/secure/attachment/19017/release-2.3.htm",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k43:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
404s in release-2.1 docs,FAB-18489,46928,46935,Sub-task,To Do,FAB,Fabric,software,denyeart,,,Medium,,,ryjones,ryjones,11/Jun/21 12:52 AM,17/Jun/21 3:42 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-docs,,,,0,,,,,,see attached,,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jun/21 12:52 AM;ryjones;release-2.1.htm;https://jira.hyperledger.org/secure/attachment/19018/release-2.1.htm",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k4b:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ryjones,,,,,,,,,,,,,,,,release-2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
404s in latest docs,FAB-18490,46929,46935,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nikhil550,ryjones,ryjones,11/Jun/21 12:54 AM,12/Jun/21 4:08 AM,28/Oct/23 3:09 AM,12/Jun/21 4:08 AM,,,,,,,,,,,,fabric-docs,,,,0,,,,,,see attached,,nikhil550,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jun/21 12:56 AM;ryjones;latest.htm;https://jira.hyperledger.org/secure/attachment/19019/latest.htm",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k4j:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nikhil550,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jun/21 1:28 AM;nikhil550;Fixes to main merged here: https://github.com/hyperledger/fabric/pull/2667;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Explorer can't run properly for fresh deployed peer,FAB-18491,46932,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,cthtuf,cthtuf,11/Jun/21 7:17 PM,23/Jun/21 3:33 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"I noticed when I add peer from another organization in my network and join it to channel, it doesn't have installed `_lifecycle` chaincode (1) and that's the reason why explorer, deployed for this organization is failed.
 I found a workaround to fix it - to approve some chaincode, it could be even not being packed and installed, like 
{code:java}
 peer lifecycle chaincode approveformyorg --name randomchaincodename --package-id 1 --tls --tlsRootCertFiles {path_here} --cafile {path_here} --version 1 --channelID defaultchannel --sequence 1 {code}

I executed it from initial peer of first organization. Somehow it forced new peer to install _livecycle chaincode (2) and than explorer could start.


{code:java}
1*. Right after join new peer to channel on discovery request
[
 {
 ""MSPID"": ""RG-288-853-MSP"",
 ""LedgerHeight"": 4,
 ""Endpoint"": ""nd-898-226-493.rg-288-853.int.chainstack.com:7051"",
 ""Identity"": ""\{certificate here}"",
 ""Chaincodes"": [
 ""_lifecycle""
 ]
 },
 {
 ""MSPID"": ""RG-853-084-MSP"",
 ""LedgerHeight"": 4,
 ""Endpoint"": ""nd-209-598-807.rg-853-084.int.chainstack.com:7051"",
 ""Identity"": ""\{certificate here}"",
 ""Chaincodes"": null # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 }
]

Also explorer shows next lines in logs:
[ERROR] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Synchronizer Error >>>>>>>>>>>>>>>>>>>>>
[ERROR] Sync - { FabricError: Query failed. Errors: [""Error: Peer nd-209-598-807.rg-853-084.int.chainstack.com is not running chaincode _lifecycle""]
 at SingleQueryHandler.evaluate (/opt/explorer/node_modules/fabric-network/lib/impl/query/singlequeryhandler.js:47:23)
 at process._tickCallback (internal/process/next_tick.js:68:7) name: 'FabricError' }
[INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
{code}
{code:java}
2*. Than execute 
peer lifecycle chaincode approveformyorg --name lifecycle --package-id 1 -o orderer_address:7050 --tls --tlsRootCertFiles path_to_cert --cafile path_to_cert --version 1 --channelID defaultchannel --sequence 1

and now discovery returns
[
 {
 ""MSPID"": ""RG-288-853-MSP"",
 ""LedgerHeight"": 5,
 ""Endpoint"": ""nd-898-226-493.rg-288-853.int.chainstack.com:7051"",
 ""Identity"": ""\{ certificate here}"",
 ""Chaincodes"": [
 ""_lifecycle""
 ]
 },
 {
 ""MSPID"": ""RG-853-084-MSP"",
 ""LedgerHeight"": 5,
 ""Endpoint"": ""nd-209-598-807.rg-853-084.int.chainstack.com:7051"",
 ""Identity"": ""\{ certificate here }"",
 ""Chaincodes"": [
 ""_lifecycle"" # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< now it's here
 ]
 }
]

And explorer runs successfully.
{code}",,cthtuf,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k57:",,,,Unset,Unset,,"1. Create Fabric network with peer and explorer related to Org1
2. Deploy new peer, related to Org2 and join to the same channel
3. Deploy explorer, related to Org2.

Explorer for Org2 will fail to start.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),cthtuf,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jun/21 7:29 PM;yacovm;[~denyeart]   FYI;;;","23/Jun/21 3:31 AM;denyeart;[~cthtuf] I am not able to reproduce... all v2.x peers from all orgs have _lifecycle deployed automatically.

When you start a peer, even before you join any channels, you should have a log entry like this:
{code:java}
[sccapi] DeploySysCC -> INFO 03d deploying system chaincode '_lifecycle'{code}
Do you see that log entry?

Please make sure you have the configuration to enable _lifecycle:

[https://github.com/hyperledger/fabric/blob/main/sampleconfig/core.yaml#L604];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
404s in release-2.0 docs,FAB-18492,46933,46935,Sub-task,To Do,FAB,Fabric,software,denyeart,,,Medium,,,ryjones,ryjones,11/Jun/21 11:05 PM,17/Jun/21 3:43 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-docs,,,,0,,,,,,see attached,,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jun/21 11:05 PM;ryjones;release-2.0.htm;https://jira.hyperledger.org/secure/attachment/19020/release-2.0.htm",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k5f:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ryjones,,,,,,,,,,,,,,,,release-2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
404s in release-1.4 docs,FAB-18493,46934,46935,Sub-task,To Do,FAB,Fabric,software,denyeart,,,Medium,,nikhil550,ryjones,ryjones,11/Jun/21 11:05 PM,15/Jun/21 1:13 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-docs,,,,0,,,,,,see attached,,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jun/21 11:05 PM;ryjones;release-1.4.htm;https://jira.hyperledger.org/secure/attachment/19021/release-1.4.htm",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k5n:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ryjones,,,,,,,,,,,,,,,,release-1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
404s in documentation,FAB-18494,46935,,Bug,To Do,FAB,Fabric,software,denyeart,,,Medium,,nikhil550,ryjones,ryjones,11/Jun/21 11:06 PM,12/Jun/21 4:11 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-docs,,,,0,,,,,,see attached,,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k5v:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ryjones,,,,,,,,,,,,,,,,release-2.3,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thinning clients: Extracting functionality from client to peers,FAB-18495,46942,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,viserius,viserius,15/Jun/21 8:49 PM,15/Jun/21 8:49 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,1,,,,,,"Currently, clients have quite a lot of responsibility and tasks to perform when creating a transaction: 1) Requesting chaincode callgraph from peer (to see which nodes can execute the transaction), 2) fetch chaincode information from the ledger, 3) discover network topology, 4) Submit transaction proposal to all endorsers, 5) wait for endorsement replies, 6) validate all endorsements and merge to a single (ProposalResponse / transaction) object, 7) broadcast transaction to ordering service.

 

While conducting benchmarks with HL Caliper for stress-testing a network of 3 organizations and 2 ordering nodes, I found that the process of creating a transaction on the client is much more CPU-demanding than ordering/applying it by nodes. Considering the growing relevance of blockchain in IoT-use cases, it could be desirable to make the clients very thin and lightweight to 1) reduce their CPU usage and activity, and 2) to enable devices to only connect to a single (local) node to reduce connectivity requirements of the client (i.e., the local peer can request for endorsements / broadcast the tx, such that the IoT device does not need internet access).",,fabianvarisco,viserius,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k7f:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),fabianvarisco,viserius,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clients should be able to request historic ledger state,FAB-18496,46943,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,viserius,viserius,15/Jun/21 9:00 PM,15/Jun/21 9:00 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"Important to the transparency of a DLT, is the ability to see how the ledger state has evolved over time. For instance, if some good is tracked in a supply chain, it should be possible to see what the state of an asset was at block X (in the past). Currently, Fabric peers only maintain the current and most up-to-date state of the ledger. 

Currently, Fabric peers store the world state as tuples of (key, value, version). Other DLTs such as Ethereum keep track of historic state by adding this as (key, oldValue, newValue, version). Then, if state at block time T-1 is requested, peers roll back their world state by setting the keys to their oldValue. After requesting an older ledger state, the newValues are applied again. This feature could be very powerful for users demanding greater transparency over how their ledger has changed over time.",,viserius,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k7n:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),viserius,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Private Data Collections should be configurable as transfer-only for reducing the requirement of trust,FAB-18497,46944,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,viserius,viserius,15/Jun/21 9:15 PM,15/Jun/21 9:15 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"As explained in ""Hyperledger Fabric: Evaluating Endorsement Policy Strategies in Supply Chains"", the data on the blockchain is only as trustworthy as the strength of the endorsement policy. In other words, if a group of adversarial users can satisfy the endorsement policy together, they can change/manipulate the ledger state however they want by crafting custom writesets and signing them.

 

Recently, Fabric seems to encourage users to create very small private groups due to the higher level of privacy: ""consider using a smaller number of private data collections (e.g. one collection per organization, or one collection per pair of organizations)"" ([link|[https://hyperledger-fabric.readthedocs.io/en/release-2.2/private-data/private-data.html#sharing-private-data])|https://hyperledger-fabric.readthedocs.io/en/release-2.2/private-data/private-data.html#sharing-private-data]).] and hints at using implicit data collections, i.e. 1-organization PDC. 

 

Since a 1-org PDC requires only the endorsement of the single organization, the data in a PDC can typically not be relied upon, as the owner of the PDC can set the values to whatever he wants: a shipment of X KG metals or a vehicle with Y KM in its odometer. Therefore, there should be a warning that if one creates such PDC with a very weak endorsement policy, the information stored should be insignificant, as it could be changed by 1 org. This is especially the case when the information of the PDC is used later with/by other organizations.

 

An idea to mitigate this issue is to define PDCs as ""transfer-only"". In such a transfer-only PDC, an entry may only be created if the entry is removed from another PDC. Thus, the value itself is immutable. Such restriction could perhaps be enforced in the VSCC (when the hash is written to the public ledger). A design choice could be to only allow a subset of organizations (manufacturers, miners, harvesters) to create assets, which from that moment on, may only be transferred without changing. Then, we can securely have 1-organizational PDCs of which its data can be trusted. Other ideas may be possible as well here, but this change comes to mind and would not require major overhauls to Fabric's transaction flow.",,viserius,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k7v:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),viserius,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Chaincode approval is only on metadata, not chaincode implementation",FAB-18498,46946,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid: Works as Expected,,viserius,viserius,16/Jun/21 8:32 PM,17/Aug/21 12:33 PM,28/Oct/23 3:09 AM,17/Aug/21 12:33 PM,,,,,,,,,,,,,,,,0,,,,,,"When installing or updating a chaincode on an application channel, this chaincode must first be approved (by a majority of channel participants by default) before it can be used.

Yet, in an experiment, I found that approving the chaincode only takes the metadata of the chaincode into account, such as label, version et cetera. The actual code of the chaincode is never part of the approval phase. As such, every single node in the network can have a different implementation of the chaincode, while still being approved appropriately. This is very simple to try out. You simply add more lines of code to a copy of the smart contract, package it, install them on different peers, and you'll see the approval and txs succeed. 

As a consequence, any node is able to add lines such as: _if client identity is (not from) organization X, do not endorse the request_ resulting in greedy/selfish organizations and peers. Another way this can be (ab)used is to interact with local databases to fetch or store data (such as for logging or decision making).

 

Although I expect this aspect to be a bug, the above examples show how it can be used for legitimate use cases in some scenarios. Either way, it should either be documented that there is no guarantee that all organizations share the same chaincode implementation/code, or the approval process should be revisited to include (a hash of the) chaincode's code.",,denyeart,silliman,viserius,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k8b:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,silliman,viserius,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/21 12:33 PM;denyeart;Organizations can indeed install different chaincodes starting in v2.0. This is by design and documented here: [https://hyperledger-fabric.readthedocs.io/en/latest/chaincode_lifecycle.html#organizations-install-different-chaincode-packages]

As you say, an organization can use this feature to add additional validations before agreeing to the transaction and providing their endorsement. If they don't want to endorse transactions coming from client X, that is their prerogative. Client X must gather endorsements from the required number of organizations that wish to endorse the transaction.

Since this is working as designed and documented, closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Policy failed when adding new organization to channel,FAB-18499,46950,,Bug,Unverified,FAB,Fabric,software,denyeart,,,High,,,Javi,Javi,17/Jun/21 2:14 AM,27/Mar/22 6:04 AM,28/Oct/23 3:09 AM,,v2.x,,,,,,,,,,,fabric-orderer,fabric-peer,,,0,,,,,,"I have a network where one organization is the admin of the channel: *mychannel*.

This organization (Org1), at the first time, was working with Fabric 1.4.3 and now, we migrated it to use the version 2.2. The migration process, that includes orderer, couchdb and peer data, worked as expected.

Now I want to add a new external organization (Org2) into this channel. The existing Org1 executed the process to fetch the channel configuration and update it with the new organization definition, that looks like this:

 
{code:java}
Organizations:
   - &Org2
     Name: Org2
     ID: Org2MSP
     MSPDir: ./../crypto-config/peerOrganizations/Org2.com/msp
  
     Policies:
       Readers:
         Type: Signature
         Rule: ""OR('Org2MSP.admin', 'Org2MSP.peer', 'Org2MSP.client')""
       Writers:
         Type: Signature
         Rule: ""OR('Org2MSP.admin', 'Org2MSP.client')""
       Admins:
         Type: Signature
         Rule: ""OR('Org2MSP.admin')""
       Endorsement:
         Type: Signature
         Rule: ""OR('Org2MSP.peer')""
     # Anchor peers
     AnchorPeers:
       - Host: peer0.Org2.com
         Port: 8052
       - Host: peer1.Org2.com
         Port: 8053{code}
 
 We used this process in order to update the channel config using the cli of the Org1:
{code:java}
peer channel fetch config config_block.pb -o orderer0.example.com:7050 --ordererTLSHostnameOverride orderer0.example.com -c mychannel --tls --cafile ${ORDERER_CA}
  
configtxlator proto_decode --input config_block.pb --type common.Block --output config_block.json 

jq .data.data[0].payload.data.config config_block.json > config.json 

jq -s '.[0] * {""channel_group"":{""groups"":{""Application"":{""groups"": {""Org2MSP"":.[1]}}}}}' config.json Org2.json > modified_config.json 

configtxlator proto_encode --input config.json --type common.Config --output config.pb 

configtxlator proto_encode --input modified_config.json --type common.Config --output modified_config.pb 

configtxlator compute_update --channel_id mychannel --original config.pb --updated modified_config.pb --output Org2_update.pb

configtxlator proto_decode --input Org2_update.pb --type common.ConfigUpdate --output Org2_update.json 

echo '{""payload"":{""header"":{""channel_header"":{""channel_id"":""'mychannel'"", ""type"":2}},""data"":{""config_update"":'$(cat Org2_update.json)'}}}' | jq . > Org2_update_in_envelope.json 

configtxlator proto_encode --input Org2_update_in_envelope.json --type common.Envelope --output Org2_update_in_envelope.pb 

peer channel update -f Org2_update_in_envelope.pb -c mychannel -o orderer0.example.com:7050 --ordererTLSHostnameOverride orderer0.example.com --tls --cafile ${ORDERER_CA}
 
{code}
 

The last step in the Org1 works as expected:
{code:java}
2021-06-16 15:09:09.834 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
 2021-06-16 15:09:09.851 UTC [channelCmd] update -> INFO 002 Successfully submitted channel update{code}
 

Now the other organization (Org2) if it tries to fetch the block 0 and join the channel, then it gets an error:
{code:java}
bash-5.1# peer channel fetch config ch.block -o orderer0.example.com:7050 --ordererTLSHostnameOverride orderer0.example.com -c mychannel --tls --cafile $ORDERER_CA
 2021-06-16 15:14:55.854 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
 2021-06-16 15:14:55.856 UTC [cli.common] readBlock -> INFO 002 Expect block, but got status: &
{FORBIDDEN}
 Error: can't read the block: &{FORBIDDEN}
{code}
 

And the orderer says that:
{code:java}
2021-06-16 15:23:41.416 UTC [common.deliver] deliverBlocks -> WARN 083 [channel: mychannel] Client 172.28.0.6:35980 is not authorized: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Readers' sub-policies to be satisfied: permission denied{code}
 

I don't know why this occurs, because if I fetch the channel config from the Org1, I'm able to see that the Org2 has permission to read in the application section.

*See the attached complete channel configuration* (test.json)

 

Any idea on how to solve this?
 Thanks in advance",,Javi,kinshuk619,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/21 2:14 AM;Javi;test.json;https://jira.hyperledger.org/secure/attachment/19022/test.json",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k97:",,,,Unset,Unset,,"1. Create a network with 1 org and 1 channel with version 1.4.3
2. Deploy a contract and send transactions
3. Migrate all components to version 2.2
4. Try to add a new organization to the existing channel",,Unset,,,,,,Unset,,Unset,,(Please add usage information),Javi,kinshuk619,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Mar/22 6:04 AM;kinshuk619;Hello Javier I am facing similar error but I am not using lower version of fabric. I am using version 2.3 and while adding org3 to the channel I am facing same issue.

Have you found a solution to this problem? If so could you also please tell me how to resolve this issue. 

Thanks in advance,

Kinshuk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fail to install chaincode when peer is deployed to azure kubernetes service,FAB-18500,46951,,Bug,To Do,FAB,Fabric,software,denyeart,,,Medium,,,eujungkim,eujungkim,17/Jun/21 9:22 AM,17/Aug/21 12:16 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-peer,,,,1,,,,,,"I try to deploy hyperledger fabric network to AKS(azure kubernetes service).
Other functions(create channel, join peer and orderer node, update channel config and etc.) work well.
But I fail to install chaincode package, because Containerd is applied to latest AKS version so we can no longer access the docker engine, /var/run/docker.sock, or use Docker-in-Docker (DinD).

Reference site
https://docs.microsoft.com/en-us/azure/aks/cluster-configuration#containerd-limitationsdifferences

Do you have any idea to slove this problem?

Environment : AKS 1.19.3, Hyperledger Fabric 2.3.2",AKS(azure kubernetes service) 1.19.3,AshishkumarLakshmanan,denyeart,eujungkim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18402,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k9f:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),AshishkumarLakshmanan,denyeart,eujungkim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jul/21 1:10 AM;denyeart;[External builder and launcher|https://hyperledger-fabric.readthedocs.io/en/release-2.2/cc_launcher.html] is the recommended approach for production deployments, as you have seen, this becomes critical with the Containerd changes.

[~mbwhite] do you have any ideas for how to make this easier for the community?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric 1.4.X >> Fabric 2.2.x Upgrade,FAB-18501,46953,,Task,Backlog,FAB,Fabric,software,denyeart,,,High,,,knagware9,knagware9,17/Jun/21 8:12 PM,17/Jun/21 8:12 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-docs,fabric-samples,,,1,,,,,,"Hyperledger fabirc 1.4 LTS was active from last 2 years, there are many networks that need to be migrated to fabric 2.2 LTS. There is good documentation at fabric read the docs but it's very time-consuming and even not work properly. Theoretically, it's a good document but following those instructions are a nightmare. There should be some scripts to do easily upgrade as we had in fabric 1.4 like [https://github.com/hyperledger/fabric-samples/blob/release-1.4/first-network/scripts/upgrade_to_v14.sh]

It will be a great help if there are ready scripts to do fabric upgrades, help to community and companies to upgrade to the latest LTS. This way more and more networks will be using the latest LTS. It's good to have an upgrade script when there are more LTS versions so the community can take advantage of the latest LTS software version.",,knagware9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k9v:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),knagware9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issue while Upgrading fabric from 1.4.4 to 2.2,FAB-18502,46954,,Task,Backlog,FAB,Fabric,software,denyeart,,,High,,,sanket1211,sanket1211,17/Jun/21 8:16 PM,17/Jun/21 8:16 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"we are able to update peer and orderer components to the latest version but while updating the channel capababilities to fetch the config block,peers are not able to connect with the orderer

Error: could not not connect to ordering service:could not dial endpoint:dial tcp:lookup [orderer.example.com|http://orderer.example.com/] on 192.168.0.1:53 :no such host channel=mychannel",,sanket1211,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/21 8:16 PM;sanket1211;Screenshot from 2021-06-14 14-39-30.png;https://jira.hyperledger.org/secure/attachment/19023/Screenshot+from+2021-06-14+14-39-30.png","17/Jun/21 8:16 PM;sanket1211;Screenshot from 2021-06-14 14-39-41.png;https://jira.hyperledger.org/secure/attachment/19024/Screenshot+from+2021-06-14+14-39-41.png",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ka3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sanket1211,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode docker build error: toomanyrequests: You have reached your pull rate limit,FAB-18503,46958,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,RaspiRepo,RaspiRepo,18/Jun/21 6:05 PM,05/Jul/21 1:00 AM,28/Oct/23 3:09 AM,05/Jul/21 1:00 AM,v2.2.0,,,,,,,,,,,fabric-peer,,,,0,,,,,,"Hello,

After deploy chaincode, peer0 (one of the peer)  is not able to build chaincode docker image. 

*SimulateProposal -> ERRO b45 failed to invoke chaincode my-cc-code, error: toomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading: https://www.docker.com/increase-rate-limitdocker*

peer0 container has cc-env images 


{code:java}
Defaulting container name to dind-daemon.
Use 'kubectl describe pod/peer0-0 -n fabric' to see all of the containers in this pod.
REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE
hyperledger/fabric-ccenv    2.2.0               aac435a5d3f1        11 months ago       586MB
hyperledger/fabric-baseos   2.2.0               aa2bdf8013af        11 months ago       6.85MB
{code}

Is any alternative method to resolve this issue ?

Peer0 : log
{code:java}
2021-06-18 08:43:59.207 UTC [endorser] callChaincode -> INFO b44 finished chaincode: tuxedopops duration: 0ms channel=base-chan-01 txID=2af7c04f2021-06-18 08:43:59.207 UTC [endorser] callChaincode -> INFO b44 finished chaincode: tuxedopops duration: 0ms channel=base-chan-01 txID=2af7c04f2021-06-18 08:43:59.207 UTC [endorser] SimulateProposal -> ERRO b45 failed to invoke chaincode tuxedopops, error: toomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading: https://www.docker.com/increase-rate-limitdocker image build failedgithub.com/hyperledger/fabric/core/container/dockercontroller.(*DockerVM).Build /go/src/github.com/hyperledger/fabric/core/container/dockercontroller/dockercontroller.go:200github.com/hyperledger/fabric/core/container.(*Router).Build /go/src/github.com/hyperledger/fabric/core/container/container.go:125github.com/hyperledger/fabric/core/chaincode/lifecycle.(*ChaincodeCustodian).Work /go/src/github.com/hyperledger/fabric/core/chaincode/lifecycle/custodian.go:120runtime.goexit /usr/local/go/src/runtime/asm_amd64.s:1373docker build failederror building imageerror building chaincodecould not launch chaincode tuxedopops:6eee7eca0e22ec0cca0ca2b547bd1b6fa4ba995a07d2117f350ae89512931576github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Launch /go/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:85github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Invoke /go/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:197github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Execute /go/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:155github.com/hyperledger/fabric/core/endorser.(*SupportImpl).Execute /go/src/github.com/hyperledger/fabric/core/endorser/support.go:126github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode /go/src/github.com/hyperledger/fabric/core/endorser/endorser.go:119github.com/hyperledger/fabric/core/endorser.(*Endorser).SimulateProposal /go/src/github.com/hyperledger/fabric/core/endorser/endorser.go:187github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposalSuccessfullyOrError /go/src/github.com/hyperledger/fabric/core/endorser/endorser.go:397github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal /go/src/github.com/hyperledger/fabric/core/endorser/endorser.go:340github.com/hyperledger/fabric/core/handlers/auth/filter.(*expirationCheckFilter).ProcessProposal /go/src/github.com/hyperledger/fabric/core/handlers/auth/filter/expiration.go:61github.com/hyperledger/fabric/core/handlers/auth/filter.(*filter).ProcessProposal /go/src/github.com/hyperledger/fabric/core/handlers/auth/filter/filter.go:32github.com/hyperledger/fabric-protos-go/peer._Endorser_ProcessProposal_Handler.func1 /go/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-protos-go/peer/peer.pb.go:107github.com/hyperledger/fabric/internal/peer/node.unaryGrpcLimiter.func1 /go/src/github.com/hyperledger/fabric/internal/peer/node/grpc_limiters.go:51github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1 /go/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:25github.com/hyperledger/fabric/common/grpclogging.UnaryServerInterceptor.func1 /go/src/github.com/hyperledger/fabric/common/grpclogging/server.go:92github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1 /go/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:25github.com/hyperledger/fabric/common/grpcmetrics.UnaryServerInterceptor.func1 /go/src/github.com/hyperledger/fabric/common/grpcmetrics/interceptor.go:31github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1 /go/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:25github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1 /go/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:34github.com/hyperledger/fabric-protos-go/peer._Endorser_ProcessProposal_Handler /go/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-protos-go/peer/peer.pb.go:109google.golang.org/grpc.(*Server).processUnaryRPC /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1082google.golang.org/grpc.(*Server).handleStream /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1405google.golang.org/grpc.(*Server).serveStreams.func1.1 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:746runtime.goexit /usr/local/go/src/runtime/asm_amd64.s:1373failed to execute transaction 2af7c04fa9d17df6968173acba3106b151b896930ea5066db77552b9335840b4github.com/hyperledger/fabric/core/chaincode.processChaincodeExecutionResult /go/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:161github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Execute /go/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:156github.com/hyperledger/fabric/core/endorser.(*SupportImpl).Execute /go/src/github.com/hyperledger/fabric/core/endorser/support.go:126github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode /go/src/github.com/hyperledger/fabric/core/endorser/endorser.go:119github.com/hyperledger/fabric/core/endorser.(*Endorser).SimulateProposal /go/src/github.com/hyperledger/fabric/core/endorser/endorser.go:187github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposalSuccessfullyOrError /go/src/github.com/hyperledger/fabric/core/endorser/endorser.go:397github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal /go/src/github.com/hyperledger/fabric/core/endorser/endorser.go:340github.com/hyperledger/fabric/core/handlers/auth/filter.(*expirationCheckFilter).ProcessProposal /go/src/github.com/hyperledger/fabric/core/handlers/auth/filter/expiration.go:61github.com/hyperledger/fabric/core/handlers/auth/filter.(*filter).ProcessProposal /go/src/github.com/hyperledger/fabric/core/handlers/auth/filter/filter.go:32github.com/hyperledger/fabric-protos-go/peer._Endorser_ProcessProposal_Handler.func1 /go/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-protos-go/peer/peer.pb.go:107github.com/hyperledger/fabric/internal/peer/node.unaryGrpcLimiter.func1 /go/src/github.com/hyperledger/fabric/internal/peer/node/grpc_limiters.go:51github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1 /go/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:25github.com/hyperledger/fabric/common/grpclogging.UnaryServerInterceptor.func1 /go/src/github.com/hyperledger/fabric/common/grpclogging/server.go:92github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1 /go/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:25github.com/hyperledger/fabric/common/grpcmetrics.UnaryServerInterceptor.func1 /go/src/github.com/hyperledger/fabric/common/grpcmetrics/interceptor.go:31github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1 /go/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:25github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1 /go/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:34github.com/hyperledger/fabric-protos-go/peer._Endorser_ProcessProposal_Handler /go/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-protos-go/peer/peer.pb.go:109google.golang.org/grpc.(*Server).processUnaryRPC /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1082google.golang.org/grpc.(*Server).handleStream /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1405google.golang.org/grpc.(*Server).serveStreams.func1.1 /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:746runtime.goexit /usr/local/go/src/runtime/asm_amd64.s:1373 channel=base-chan-01 txID=2af7c04f
{code}",,denyeart,RaspiRepo,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kaz:",,,,Unset,Unset,,Standard chaincode deployment method (Fabric 2.2.0 lifecycle method),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,RaspiRepo,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jun/21 11:48 PM;yacovm;You can try and push the image to a different docker namespace so only you will pull it from there.

 

The Fabric project members can also try and [ask docker to not limit rate|https://www.docker.com/blog/expanded-support-for-open-source-software-projects/] by [submitting a form|https://docs.google.com/forms/d/e/1FAIpQLSd11DjfgeaKSRdqp6Br85MzQQuM4igt-xmn6rmzA2StFGLndQ/viewform].;;;","19/Jun/21 12:24 AM;RaspiRepo;Thanks for reply,

1. Is any recommendation for ""_push the image to a different docker namespace_ "" ?  
2. I saved cc docker image into .tar from other peer (same org) peer1 and copied this docker image to peer0 and load/tagged according to need  it again on peer0.
Current list below

kubectl exec peer0-0 -- docker images
{code:java}
acme-peer0.org1.skuchain.io-tuxedopops-6eee7eca0e22ec0cca0ca2b547bd1b6fa4ba995a07d2117f350ae89512931576-30e97bb6be1b6c6c66e977e6b85ffd00a6a0acb94d727419e852d85a4929d277   latest              2afa5511b96e        3 weeks ago         25MB
hyperledger/fabric-ccenv                                                                                                                                                 2.2.0               aac435a5d3f1        11 months ago       586MB
hyperledger/fabric-baseos                                                                                                                                                2.2.0               aa2bdf8013af        11 months ago       6.85MB

{code}
 
if peer has docker images including dependency images (Same chaincode package installed in other peer/orgs) still peer try to connect docker hub and pull images.  Any insight info why peers always try to connect docker hub when docker images locally available inside peer container ?

IS supposed to check locally and use it local images ?

I can push docker images to Azure (ACR/AWS ECR) as private access, if that case is it possible to set docker pull authentication to AWS ECR registry so there wont be any pull limit ?

As of now chaincode development become major blocking issue as a developer keep write update test new functions but unable to deploy chaincode in production environments  
 
Thanks 
Mariya;;;","19/Jun/21 12:45 AM;yacovm;You need to [sign up|https://hub.docker.com/signup] to dockerhub and then push your image to dockerhub, after which you need to change the [docker namespace|https://github.com/hyperledger/fabric/blob/main/sampleconfig/core.yaml#L537-L571] in the peer's configuration. The Fabric peer code simply [replaces|https://github.com/hyperledger/fabric/blob/1147977a810ac58c97bd9429b052cc9b56e496b0/core/chaincode/platforms/util/utils.go#L168-L173] the default with what it is compiled with, so if you replace the placeholder ""$DOCKER_NS"" with something specific like ""mariyak"" namespace in dockerhub, I think it will not replace it with hyperledger and [build|https://github.com/hyperledger/fabric/blob/1147977a810ac58c97bd9429b052cc9b56e496b0/core/chaincode/platforms/util/utils.go#L32-L97] the chaincode container from your personal namespace.

To push an image to dockerhub you can follow [this|https://github.com/SmartBFT-Go/fabric/blob/release-1.4-BFT-2/scripts/publish_images.sh] script.;;;","19/Jun/21 3:19 AM;RaspiRepo;Hi, 


Have couple of questions 

1. Seems to me without docker hub account and push chain code docker image to Docker hub account we can't deploy chain code on peers any more ?

2. We have our own docker registry in AWS and Azure cloud. Is there way to set peer Env's to pull from private registry ? i.e. how to set docker pull secret OR docker login with in peer docker in docker env so (dind-daemon) it can pull from private registry

3. As you mentioned above, need to push docker image to docker hub, which docker image you are referring ?   i.e. ""hyperledger/fabric-XXX"".

4. Is there any issue or the way implemented in fabric peer is it does not check local docker images ? I can see on the peers fabric cc env containers already there, yet trying to pull from docker hub.  

5. Is there way to disable the peer ""docker pull from docker hub"" ?  i.e We can copy required docker images from externally to peer  

Thanks

Mariya
 ;;;","19/Jun/21 4:45 AM;yacovm;# You can pull from private registries, sure.
# Maybe if you change the [VMEndpoint|https://github.com/hyperledger/fabric/blob/main/sampleconfig/core.yaml#L482] ? I am not sure.
# I am referring to the images listed [here|https://github.com/hyperledger/fabric/blob/main/sampleconfig/core.yaml#L537-L560].
# Yes you can use the [external builder|https://hyperledger-fabric.readthedocs.io/en/latest/cc_launcher.html] mechanism. It gives you full control on how to deploy chaincode. With external builders you can even deploy the chaincode on the moon.
# Read (4).;;;","19/Jun/21 6:31 AM;RaspiRepo;Hi [~yacovm]

Thank you so much for details. One more question on separate topic,

1. Is there way to delete a channels (i.e. removing orgs from channel and then remove the channels from network)?  I wanted setup separate channels for dev/test on HLF network and laster remove that channels (ledger-data, chain code) .
2. If that not allowed is there other recommended methods to clean up older ledger data from the network ?;;;","19/Jun/21 7:19 AM;yacovm;If your orderers use the channnel participation API (Fabric 2.3 and higher) you can remove the channel from an orderer. You cannot remove the channel from a peer in any version, but this is a [feature|https://jira.hyperledger.org/browse/FAB-11334] that Fabric developers are working on. 

If you use the channel participation API you can remove the channel from the orderer, then delete the peers and re-create them without the old channels. 

To avoid replicating all the blocks in the peers you can [take a snapshot|https://hyperledger-fabric.readthedocs.io/en/latest/peer_ledger_snapshot.html] on the peer and then bootstrap from that snapshot. ;;;","05/Jul/21 1:00 AM;denyeart;Since the external builder is the recommended approach for production deployments, and no issue in Fabric itself mentioned here, closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The new peer section of the chaincode container did not start,FAB-18504,46962,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Lowest,,yangjian123,yangjian123,yangjian123,19/Jun/21 11:56 AM,05/Jul/21 12:54 AM,28/Oct/23 3:09 AM,,v2.2.0,,,,,,,,,,,,,,,0,,,,,,"restart peer error logs:
{code:java}
2021-06-19 10:40:33.630 CST [container] func1 -> WARN 02e failed to stop chaincode ccid=invoiceSpe:xxxxxxxxxxx error=""No such container: dev-peer3-org1-invoiceSpe-xxxxxxxxx""
2021-06-19 10:40:33.630 CST [container] func1 -> WARN 02f failed to stop chaincode ccid=accountFund:xxxxxxx error=""No such container: dev-peer3-org1-accountFund-xxxxxxx""
2021-06-19 10:40:33.630 CST [container] func1 -> WARN 030 failed to stop chaincode ccid=invoice:xxxxxxx error=""No such container: dev-peer3-org1-invoice-xxxxxxx""
2021-06-19 10:40:33.630 CST [container] func1 -> WARN 031 failed to stop chaincode ccid=incomeDetail:xxxxxxx error=""No such container: dev-peer3-org1-incomeDetail-xxxxxxxxxxx""
2021-06-19 10:40:33.757 CST [gossip.service] Stop -> INFO 032 Stopping chain prodtestchannel
2021-06-19 10:40:33.757 CST [gossip.service] Stop -> INFO 033 Stopping leader election for prodtestchannel
2021-06-19 10:40:33.757 CST [gossip.gossip] Stop -> INFO 034 Stopping gossip
2021-06-19 10:40:33.757 CST [gossip.discovery] Stop -> INFO 035 Stopping
2021-06-19 10:40:33.757 CST [gossip.discovery] Stop -> INFO 036 Stopped
2021-06-19 10:40:33.757 CST [gossip.comm] Stop -> INFO 037 Stopping
2021-06-19 10:40:33.757 CST [comm.grpc.server] 1 -> INFO 038 streaming call completed grpc.service=gossip.Gossip grpc.method=GossipStream grpc.peer_address=172.16.87.202:34046 grpc.peer_subject=""xxxxxxxxxxx"" grpc.code=OK grpc.call_duration=447h4m38.738219635s
2021-06-19 10:40:33.757 CST [comm.grpc.server] 1 -> INFO 039 streaming call completed grpc.service=gossip.Gossip grpc.method=GossipStream grpc.peer_address=172.16.91.175:47168 grpc.peer_subject=""xxxxxxxxx"" grpc.code=OK grpc.call_duration=447h4m39.16180887s
2021-06-19 10:40:33.757 CST [gossip.comm] Stop -> INFO 03a Stopped
2021-06-19 10:40:34.901 CST [nodeCmd] serve -> INFO 001 Starting peer:
 Version: 2.2.0
 Commit SHA: 5ea85bc54
 Go version: go1.14.4
 OS/Arch: linux/amd64
 Chaincode:
  Base Docker Label: org.hyperledger.fabric
  Docker Namespace: hyperledger
2021-06-19 10:40:34.902 CST [peer] getLocalAddress -> INFO 002 Auto-detected peer address: 172.16.87.242:12051
2021-06-19 10:40:34.902 CST [peer] getLocalAddress -> INFO 003 Returning peer3-org1:12051
2021-06-19 10:40:34.907 CST [nodeCmd] initGrpcSemaphores -> INFO 004 concurrency limit for endorser service is 2500
2021-06-19 10:40:34.907 CST [nodeCmd] initGrpcSemaphores -> INFO 005 concurrency limit for deliver service is 2500
2021-06-19 10:40:34.907 CST [nodeCmd] serve -> INFO 006 Starting peer with TLS enabled
2021-06-19 10:40:34.921 CST [ledgermgmt] NewLedgerMgr -> INFO 007 Initializing LedgerMgr
2021-06-19 10:40:35.031 CST [ledgermgmt] NewLedgerMgr -> INFO 008 Initialized LedgerMgr
2021-06-19 10:40:35.039 CST [gossip.service] New -> INFO 009 Initialize gossip with endpoint peer3-org1:12051
2021-06-19 10:40:35.040 CST [gossip.gossip] New -> INFO 00a Creating gossip service with self membership of Endpoint: peer3-org1:12051, InternalEndpoint: peer3-org1:12051, PKI-ID: 7e271e87fe37a4e97146c74d535aba35f61e3dc80016924442611a26ffa36d96, Metadata:
2021-06-19 10:40:35.040 CST [gossip.gossip] start -> INFO 00b Gossip instance peer3-org1:12051 started
2021-06-19 10:40:35.901 CST [lifecycle] InitializeLocalChaincodes -> INFO 00c Initialized lifecycle cache with 8 already installed chaincodes
2021-06-19 10:40:35.902 CST [nodeCmd] computeChaincodeEndpoint -> INFO 00d Entering computeChaincodeEndpoint with peerHostname: peer3-org1
2021-06-19 10:40:35.902 CST [nodeCmd] computeChaincodeEndpoint -> INFO 00e Exit with ccEndpoint: peer3-org1:12052
2021-06-19 10:40:35.907 CST [sccapi] DeploySysCC -> INFO 00f deploying system chaincode 'lscc'
2021-06-19 10:40:35.911 CST [sccapi] DeploySysCC -> INFO 010 deploying system chaincode 'cscc'
2021-06-19 10:40:35.911 CST [sccapi] DeploySysCC -> INFO 011 deploying system chaincode 'qscc'
2021-06-19 10:40:35.911 CST [sccapi] DeploySysCC -> INFO 012 deploying system chaincode '_lifecycle'
2021-06-19 10:40:35.911 CST [nodeCmd] serve -> INFO 013 Deployed system chaincodes
2021-06-19 10:40:35.911 CST [peer] Initialize -> INFO 014 Loading chain prodtestchannel
2021-06-19 10:40:35.911 CST [ledgermgmt] OpenLedger -> INFO 015 Opening ledger with id = prodtestchannel
2021-06-19 10:40:35.952 CST [lifecycle] update -> INFO 016 Updating cached definition for chaincode 'transactionInvestigate' on channel 'prodtestchannel'
2021-06-19 10:40:35.977 CST [lifecycle] update -> INFO 017 Chaincode with package ID 'transactionInvestigate:xxxxxxxxxxxx' now available on channel prodtestchannel for chaincode definition transactionInvestigate:v1
2021-06-19 10:40:35.977 CST [lifecycle] update -> INFO 018 Updating cached definition for chaincode 'riskInterceptDirectorSupervisor' on channel 'prodtestchannel'
2021-06-19 10:40:35.999 CST [lifecycle] update -> INFO 019 Chaincode with package ID 'riskInterceptDirectorSupervisor:xxxxxxx' now available on channel prodtestchannel for chaincode definition riskInterceptDirectorSupervisor:v1
2021-06-19 10:40:35.999 CST [lifecycle] update -> INFO 01a Updating cached definition for chaincode 'riskInterceptMinor' on channel 'prodtestchannel'
2021-06-19 10:40:36.013 CST [lifecycle] update -> INFO 01b Chaincode with package ID 'riskInterceptMinor:xxxxxxx' now available on channel prodtestchannel for chaincode definition riskInterceptMinor:v1
2021-06-19 10:40:36.013 CST [lifecycle] update -> INFO 01c Updating cached definition for chaincode 'settledDealer' on channel 'prodtestchannel'
2021-06-19 10:40:36.036 CST [lifecycle] update -> INFO 01d Chaincode with package ID 'settledDealer:xxxxxxxx' now available on channel prodtestchannel for chaincode definition settledDealer:v1
2021-06-19 10:40:36.044 CST [ledgermgmt] OpenLedger -> INFO 01e Opened ledger with id = prodtestchannel
{code}
2021-06-19 10:40:35.901 CST [lifecycle] InitializeLocalChaincodes -> INFO 00c Initialized lifecycle cache with 8 already installed chaincodes

 

You can see from the log that 8 chaincodes have been installed,

 

 

2021-06-19 10:40:35.911 CST [ledgermgmt] OpenLedger -> INFO 015 Opening ledger with id = prodtestchannel

 

When the chaincode container is started, it cannot be started, and no error is reported in the log. The statedb I use is couchdb. I queried the couchdb in the leader peer. There are 8 chaincodes under /prodtestchannel__lifecycle, but there are only 4 when syncing to the new peer. When I initialize the peer, I see the startup chaincode. The information is obtained from couchdb, why is there a difference in the synchronization of couchdb information, or other reasons",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kbv:",,,,Unset,Unset,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jul/21 12:54 AM;denyeart;Have you installed the chaincode on the new peer?

Is there some user impact/symptom that you are concerned about?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getQueryResultWithPagination bookmark value,FAB-18505,46963,,Bug,To Do,FAB,Fabric,software,denyeart,,,Medium,,,victoryeo,victoryeo,21/Jun/21 12:55 PM,21/Jun/21 1:33 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-sdk-node,,,,0,node-SDK,,,,,"This chaincode function, getQueryResultWithPagination(query, pageSize, bookmark) , bookmark value is like this:
 ""g1AAAABWeJzLYWBgYMpgSmHgKy5JLCrJTq2MT8lPzkzJBYoLGwKBaQ2INNQ1hACQUg6YUlyKsgCcDxS3"".  This bookmark is from a prior page of query results (ResponseMetadata).

If we want to read the data at 10,001 location, is there a way to skip the first 10,000 data in just one call to getQueryResultWithPagination ? Essentially, I want to pass in parameters like this:
 getQueryResultWithPagination(query, 10000, ""1"")

Is it possible to support this feature when using fabric with couchDB?
 In couchDB, there are limit and skip that can be passed to query iterator.",,victoryeo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kc3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),victoryeo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent unit test failure in github.com/hyperledger/fabric/orderer/common/cluster,FAB-18506,46971,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid: Works as Expected,,denyeart,denyeart,23/Jun/21 1:12 AM,22/Sep/21 9:25 AM,28/Oct/23 3:09 AM,22/Sep/21 9:25 AM,,,,,,,v2.x,,,,,fabric-orderer,,,,0,,,,,,"Intermittent unit test failure in github.com/hyperledger/fabric/orderer/common/cluster

FAIL github.com/hyperledger/fabric/orderer/common/cluster 1200.228s

panic: test timed out after 20m0s 

 

Latest occurrence:

[https://dev.azure.com/Hyperledger/Fabric/_build/results?buildId=36294&view=logs&jobId=e306c17a-d139-54bf-a475-f5a11259cee7&j=e306c17a-d139-54bf-a475-f5a11259cee7&t=1e3023a5-584f-52f3-49bc-66bd27d27b6d]",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jun/21 2:06 AM;denyeart;orderer_common_cluster_unit_test_timeout.log;https://jira.hyperledger.org/secure/attachment/19025/orderer_common_cluster_unit_test_timeout.log",,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqwji",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jun/21 2:04 AM;denyeart;Another occurrence same day:

[https://dev.azure.com/Hyperledger/Fabric/_build/results?buildId=36365&view=logs&jobId=6b58850f-3858-5a05-33e2-5e41cbf03c4e&j=6b58850f-3858-5a05-33e2-5e41cbf03c4e&t=bddec1cf-ba37-5883-9c3e-fd1e8608f9a1]

 ;;;","14/Jul/21 6:32 AM;denyeart;Frequent occurrences, e.g. https://dev.azure.com/Hyperledger/Fabric/_build/results?buildId=36860&view=logs&jobId=e306c17a-d139-54bf-a475-f5a11259cee7&j=e306c17a-d139-54bf-a475-f5a11259cee7&t=1e3023a5-584f-52f3-49bc-66bd27d27b6d;;;","22/Sep/21 9:24 AM;denyeart;This one is fixed by https://github.com/hyperledger/fabric/pull/2935;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support GetStateMultipleKeys from chaincode,FAB-18507,46973,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,denyeart,denyeart,23/Jun/21 8:11 AM,27/Aug/21 9:08 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-ledger,,,,1,help-wanted,,,,,"In chaincode instead of only GetState() , add support for GetStateMultipleKeys() which would allow for the retrieval of multiple keys from state database in one query.

This would be especially useful for CouchDB since the http roundtrip is slower.

Ledger component already implements GetStateMultipleKeys() however it simply iterates through GetState() requests. As part of this story it should be switched to use CouchDB bulk retrieve API [_all_docs?include_docs=true&attachments=true|http://localhost:15984/myc1/_all_docs?include_docs=true&attachments=true] , which can accept a list of keys as input on the body, enabling the retrieval of multiple keys in a single http roundtrip - see https://docs.couchdb.org/en/latest/api/database/bulk-api.html#post--db-_all_docs",,denyeart,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2147,FAB-1244,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ke3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ledger troubleshooting utility does not output record txNum,FAB-18508,46975,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,shimos,denyeart,denyeart,24/Jun/21 5:12 AM,03/Jul/21 2:28 AM,28/Oct/23 3:09 AM,03/Jul/21 2:28 AM,,,,,,,,,,,,fabric-ledger,,,,0,,,,,,"I tried out the ledger troubleshooting utility with one piece of data different between snapshots (the appraisedValue field).

The utility correctly identified that one record was different:
{code:java}
Successfully compared snapshots. Result saved to ./result.json. Total differences found: 1{code}
However, when I look at the result.json, it has the correct records differences identified, but for the transaction height, it only includes the blockNum, not the txNum:
{code:java}
[
   {
      ""namespace"":""basic"",
      ""key"":""1"",
      ""snapshotrecord1"":{
         ""value"":""{\""ID\"":\""1\"",\""color\"":\""blue\"",\""size\"":35,\""owner\"":\""tom\"",\""appraisedValue\"":1000}"",
         ""blockNum"":4
      },
      ""snapshotrecord2"":{
         ""value"":""{\""ID\"":\""1\"",\""color\"":\""blue\"",\""size\"":35,\""owner\"":\""tom\"",\""appraisedValue\"":1001}"",
         ""blockNum"":4
      }
   }
]{code}
The txNum is getting lost somewhere.",,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wur:0idqxo9fi",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,manish-sethi,,,,,,,,,,,,,,,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jul/21 2:28 AM;manish-sethi;https://github.com/hyperledger/fabric/pull/2724;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Panic if path for Collection index is not correctly structured,FAB-18509,47001,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,calanais,calanais,calanais,30/Jun/21 6:14 PM,12/Jul/21 11:40 PM,28/Oct/23 3:09 AM,03/Jul/21 5:38 AM,,,,,,,,,,,,fabric-peer,,,,0,,,,,,"If the path for the collection index is incorrect - in this case missing the 'indexes' directory the peer will panic. 

This PR raised the problem originally but never made it into the codebase. 
[https://github.com/hyperledger/fabric/pull/1586/files]
 
I've hit this issue again - so taking that PR plus suggested updates. ",,calanais,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kk3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.3,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jun/21 6:16 PM;calanais;Github PR... https://github.com/hyperledger/fabric/pull/2726;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer panic in high concurrency of chaincode query,FAB-18510,47003,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,wuqiaomin,wuqiaomin,01/Jul/21 10:50 AM,17/Aug/21 11:54 AM,28/Oct/23 3:09 AM,,v2.2.2,,,,,,,,,,,fabric-peer,,,,0,,,,,,"In the condition of high concurrency of chaincode query, peer will crash after TXSimulator finish SimulateProposal, because queryExecutor's dbItr release db again and the function AddInt32 in Release will panic. 

Moreover,  peer has high CPU and memory rate of utilization in the case of high concurrency query.

It seem some other concurrency issue inside goleveldb, because we are not calling DB close ever in a regular running peer.",,denyeart,wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kkj:",,,,Unset,Unset,,"1. create fabric v2.2.2 network and instantiate a goland chaincode
2. invoke chaincode to write some random keys and values
3, query chaincode in the case of high concurrency, and gradually increase the concurrency value until the peer crash.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,wuqiaomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jul/21 11:00 AM;wuqiaomin;https://github.com/hyperledger/fabric/pull/2727;;;","17/Aug/21 11:54 AM;denyeart;[~wuqiaomin] It looks like PR closed with intention to continue discussion here.

Can you provide panic stack trace and your suggestion?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create new SDK sample(s),FAB-18511,47009,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtonline,jtonline,jtonline,02/Jul/21 1:29 AM,17/Dec/21 1:17 AM,28/Oct/23 3:09 AM,17/Dec/21 1:17 AM,,,,,,,,,,,,fabric-samples,,,,0,External,,,,,"The current SDK samples are too basic and do not demonstrate the good practices required for client applications in real world scenarios.

Some techniques to consider including in one or more new samples...

· To handle multiple requests from multiple users
· Event handling over long periods of time
· Retry coverage
· Caching and connection pool
· Managing multiple identities",,jtonline,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|i01kkr:",,,,No,Unset,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),jtonline,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jul/21 1:55 AM;jtonline;See also https://jira.hyperledger.org/browse/FAB-18420;;;","02/Jul/21 11:26 PM;lesleyannj;If sample is based on HLF 2.x it there should be annotations if working in 1.4.x;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Delete channel specific data in a crash consistent manner,FAB-18512,47010,32248,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jkneubuhl,manish-sethi,manish-sethi,02/Jul/21 7:10 AM,28/Jul/21 10:33 PM,28/Oct/23 3:09 AM,28/Jul/21 10:33 PM,,,,,,,,,,,,,,,,0,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kkz:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jul/21 7:14 AM;manish-sethi;[https://github.com/hyperledger/fabric/pull/2722]
 [https://github.com/hyperledger/fabric/pull/2732]

[https://github.com/hyperledger/fabric/pull/2754]

[https://github.com/hyperledger/fabric/pull/2769]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add tests under kvledger/tests package,FAB-18513,47011,32248,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jkneubuhl,manish-sethi,manish-sethi,02/Jul/21 7:12 AM,25/Oct/21 12:04 AM,28/Oct/23 3:09 AM,25/Oct/21 12:04 AM,,,,,,,,,,,,,,,,0,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kl7:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add command unjoin channel,FAB-18514,47012,32248,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jkneubuhl,manish-sethi,manish-sethi,02/Jul/21 7:12 AM,25/Oct/21 12:04 AM,28/Oct/23 3:09 AM,25/Oct/21 12:04 AM,,,,,,,,,,,,,,,,0,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01klf:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add integration tests,FAB-18515,47013,32248,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jkneubuhl,manish-sethi,manish-sethi,02/Jul/21 7:13 AM,25/Oct/21 12:04 AM,28/Oct/23 3:09 AM,25/Oct/21 12:04 AM,,,,,,,,,,,,,,,,0,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kln:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update documentation,FAB-18516,47014,32248,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jkneubuhl,manish-sethi,manish-sethi,02/Jul/21 7:13 AM,25/Oct/21 12:04 AM,28/Oct/23 3:09 AM,25/Oct/21 12:04 AM,,,,,,,,,,,,,,,,0,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01klv:",,,,Unset,Unset,v2.x,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error: endorsement failure during query,FAB-18517,47015,,Story,Backlog,FAB,Fabric,software,denyeart,,,Highest,,,birane906,birane906,02/Jul/21 6:15 PM,02/Jul/21 6:15 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"Error: endorsement failure during query. response: status:500 message:""error in simulation: transaction returned with failure: Error: GET_STATE failed: transaction ID: b4a3de086443f18f1de528b731a8107055e8a2aa685f2373826d81eb3b130b2d: invalid key. Empty string is not supported as a key by couchdb""

 

When I invoke with the transient way for private data collections, I have this issue and I can't create assets",,birane906,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01km3:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),birane906,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve re JSON determinism (private data hash not matching hashed data),FAB-18518,46417,,Story,In Progress,FAB,Fabric,software,denyeart,,,High,,calanais,icarrascol,icarrascol,11/Dec/20 11:37 PM,12/Jul/21 10:08 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-samples,,,,0,cc-triaged,Chaincode,external,,,"Hello everyone, i am currently using node chaincode version 2.0, i am passing some transient data through node sdk to the chaincode and storing it using stub.putPrivateData(). in another chaincode method i pass the same transient object, hash it using sha256 and i use getPrivateDataHash to compare the hashes. What i expected is for them to be the same but i am getting different values.
{code:java}
transient data: { class: 'org.pagare', amount: '100', id: '125', owner: 'org1' }
transient hash: c29b9b457ec73633c5b99ffbef2ac27329c0762871f5471978a08d408c97df4b
privatedatahash: 027d798fa011fc64a90f87d0546a377cdbd3649782d3980e02403c2706a6c319
privatedata: { class: 'org.pagare', amount: '100', id: '125', owner: 'org1' }
{code}
Cont: From what i could gather this behavior is because the privatedata hash is not the same as if you hash the privatedata in couchdb, i have another example.
{code:java}
transient data: {""class"":""org.pagare"",""idChain"":""126"",""owner"":""org1"",""amount"":""100""}
transient hash:   88ac0e128ad40d748a692c243c88fcd761cf0f41fd053b898275b41c71fe19d4
privatedata hash: 88ac0e128ad40d748a692c243c88fcd761cf0f41fd053b898275b41c71fe19d4
privatedata: {""amount"":""100"",""class"":""org.pagare"",""idChain"":""126"",""owner"":""org1""}

{code}
1.- transient data object attributes follow the same order as how the object was created and passed to putPrivateData method.

2.- transient hash is the sha256 hash of the transient data object
 3.- privatedata hash is the hash retrieved by the method getPrivateDataHash
 4.- both transient hash and privatedata hash are the same, meaning that the object using for hashing is the same as the one for creation
 5.- privatedata object is the object retrieved by the method getPrivateData, as you can see this object does not have the same order of attributes meaning that using this one to verify hash would give a different value. So, the object attributes are being reordered when it is stored in  privatedata couch db.
 6.- This behaviour doesnt happen if you use go chaincode.

 ",,calanais,denyeart,icarrascol,kestutis.gudynas,lesleyannj,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhjziy",,,,Unset,Unset,NEXT TODO ITEMS,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,denyeart,icarrascol,kestutis.gudynas,lesleyannj,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Dec/20 11:09 PM;kestutis.gudynas;*getPrivateDataHash* returns pure data hash bytes instead of a string ([https://hyperledger.github.io/fabric-chaincode-java/master/api/org/hyperledger/fabric/shim/ChaincodeStub.html#getPrivateDataHash-java.lang.String-java.lang.String-] ), therefore retrieving the actual hash would look like this:

 
         _const pdHashBytes = await ctx.stub.getPrivateDataHash(myCollectionName, myPrivateAssetId);_
         _const actualHash = pdHashBytes.toString('hex');_
  
 An example of such an implementation can be found in _VS Code IBP_ extension generated private data contract (when creating a new smart contract project), method _verifyMyPrivateAsset_;;;","16/Dec/20 11:49 PM;icarrascol;i know i didnt specify my code so here its a small part of it... the thing is i am transforming the bytes to hex for the console logs, i already verified that the hash missmatch is because the object attributes are being reordered, you can check them in couchdb itself. privatedatahash doesnt match the hash of the object in couchdb because the attributes are being reordered for some reason when it is stored.


{code:java}
async transfer(ctx, id, dest, collection1, collection2) {   
 const transientMap = ctx.stub.getTransient();    
 const hash = crypto.createHash('sha256').update(transientMap.get('asset')).digest('hex');  
 const dataHash = await ctx.stub.getPrivateDataHash(collection1, id);  
 console.log(hash);
 console.log(dataHash.toString('hex'));   
 ...
 }{code}
 ;;;","12/Jan/21 1:26 AM;kestutis.gudynas;Private data is hashed before it is stored in couchDB, therefore the order doesn't matter here, however, when it is hashed, spaces are removed, for example:

Instead of 
{code:java}
`{ ""class"": ""org.pagare"", ""amount"": ""100"", ""id"": ""125"", ""owner"": ""org1"" }`{code}
we hash the following:
{code:java}
`{""class"":""org.pagare"",""amount"":""100"",""id"":""125"",""owner"":""org1""}`{code}
 

However, if you hash the object containing spaces, the hash values changes and will not match the one returned by _getPrivateDataHash_;;;","12/Jan/21 2:24 AM;icarrascol;i dont think it is possible to have 2 representations of the same javascript object, 1 with spaces and 1 without as it doesnt make sense for the language. when you create any object in js the representation of it should be one and only one to maintain consistency in the language itself. Can you show me a way to create a js object that has spaces and create a js object that doesnt have spaces?
{code:java}
// when you create an object like this

const obj = new Object(something);

// or like this;

const object = {foo:'bar'};
const object2 = { foo: 'bar' };{code}
those 3 ways should get the same end result when you check the bytes or hash the object;;;","12/Jan/21 7:09 PM;kestutis.gudynas;In the first example of your original post, both transient data and privatedata have spaces in the JSON notations, that is why I assume that you may have tried using JSON.stringify on a string instead of an object, and then hashing the string. This would lead to different hash than the one given by _getPrivateDataHash()._

As you can see in the second example, even though the order is different, the hashes are the same.;;;","12/Jan/21 10:19 PM;icarrascol;no i use stringify on an object to store the data on the ledger. my second example shows that the order matters for hash values.  The privatedata hash is retrieved using getPrivateDataHash() and as you can see it matches the manual hash of the unordered object.  the privatedata retrieved from the collection is an ordered object, and if you hash it, it wont match its own privatedatahash that is what i am trying to say. you can verify it yourself, i dont know if you tried but:
 - store an object on a collection or the ledger with some properties like this \{z:'test',a:'test'} (attributes unordered on purpose).
 - go and check the couchdb register, you will see that the object in couchdb will have its attributes ordered (would be cool if you can post a screenshot of this).
 - make a chaincode method to retrieve this object and log it on console, you will get something like \{a:'test', z:'test'}

if you hash your original object and the retrieved object the hashes wont match, if you use getprivatedatahash on the key of the stored object, the hash retrieved will be the same as hashing the original object (like my second example shows) and like i said getprivatedatahash doesnt match hashing the stored privatedata itself and that is the error, and its obvious because the order of the attributes matter when you hash something. The objects stored in couchdb are being altered for some reason and they have its attributes ordered.

What you would expect is that hashing the retrieved object from the collection and comparing that to its own getprivatedatahash() would get you matching hash values but it doesnt.;;;","15/Jan/21 6:47 PM;calanais;""What you would expect is that hashing the retrieved object from the collection and comparing that to its own getprivatedatahash() would get you matching hash values but it doesn't.""

For the record, I can fully appreciate the expectation and was a little surprised myself when I came across it.  Firstly, let's explain the reason why this occurs. 

There are two (at the time of typing) databases that can be used to store the world state, LevelDB and CouchDB. CouchDB is the most often used as it can support richer query - in order to do this the payloads have to be JSON - so when setState/putState-style operations occur the data does need to be marshalled to and from binary - hence this is where the re-ordering occurs.   The hash though is computed on exactly what is sent in. 

Note that this only occurs if the payload is JSON, if it where XML for example, then it would be unaffected. (note that the Go JSON parse does not recognise [] as a top level JSON element.. only {})

Strictly speaking, of course, JSON doesn't have any defined order - so shouldn't matter - *apart* from in the circumstances such as this where hashes are being used - and that hash is based on a flattened string format. In this case.

Depending on the distribution of the chaincodes in a network and the clients, then there is a chance that JSON ordering becomes important anyway.. there will be a mix of languages, different versions of parsing libraries etc. so there is a real risk of mismatches in the bigger picture. 

The best practice is to establish a safe-ordering across the solution and keep to that. This is a part of the ledger API work that was started. 
Though in terms of this issue, there isn't anything as such we can fix... there is certainly an action we should take to make the best practice visible in samples etc. 

Hope that helps!;;;","15/Jan/21 9:21 PM;icarrascol;i understand, i found another issue where people were talking about this non deterministic behaviour of json. i think like you said this needs to be explained maybe in the documentation and also in a js sample where a deterministic stringify is used to fix the order issue. thanks!;;;","12/Feb/21 1:44 AM;pandrejko;Related Doc Jira is here https://jira.hyperledger.org/browse/FAB-17414;;;","05/Mar/21 12:11 AM;lesleyannj;Sample changes would make sense; additionally provision better 'Best Practice' guides would be useful.;;;","23/Apr/21 8:58 PM;denyeart;Deterministic JSON marshaling is documented here: [https://hyperledger-fabric.readthedocs.io/en/latest/couchdb_as_state_database.html#reading-and-writing-json-data]

I agree samples would also help.;;;","05/Jul/21 7:52 PM;calanais;Reference for Node.js ... https://www.npmjs.com/package/fast-json-stable-stringify;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"There is a conflict in the Operations server in peer config and Orderer Admin server in orderer config, with respect to the IP Address and Port.",FAB-18519,47018,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,avinashuttav,avinashuttav,07/Jul/21 2:03 PM,07/Jul/21 2:03 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"In the sampleconfig, in the core config and orderer config the IP Address and port for Orderer and Operations server in peer is same, which leads to the 'IP Address is already in use' error while bringing up the orderer and peer together. Changing the port for operations server in core config resolves the issue.

System used is Ubuntu WSL (Windows Subsystem Linux) in Windows10",,avinashuttav,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kmr:",,,,Unset,Unset,,"- Follow the document for Running the chaincode in dev mode. 
- Successully able to start the orderer 
- Encounter error when trying to start the peer. 'Cannot bind to address 127.0.0.1:9443. Address already in use's to reproduce)",,Unset,,,,,,Unset,,Unset,,(Please add usage information),avinashuttav,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Add Java to ""Deploying a smart contract to a channel"" topic",FAB-18520,47019,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,jtonline,jtonline,10/Jul/21 12:54 AM,10/Jul/21 12:54 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,fabric-docs,,,,0,,,,,,"The [Package the smart contract|https://hyperledger-fabric.readthedocs.io/en/latest/deploy_chaincode.html#package-the-smart-contract] section covers Go, JavaScript, and Typescript but not Java.

 ",,jtonline,vishaljiodedra,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|i01kmz:",,,,No,Unset,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),jtonline,vishaljiodedra,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consenters' metadata is not replicated while OSN catches up with snapshot,FAB-18521,47020,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,11/Jul/21 10:56 PM,09/Sep/21 3:54 AM,28/Oct/23 3:09 AM,12/Aug/21 10:03 AM,,,,,,,v2.2.4,v2.3.3,v2.4.0,,,,,,,0,,,,,,"Currently while OSN tries to catch up to the recent states it replicates block from the alive replica, however omits updating consenters metadata, i.e.

```
c.support.WriteBlock(block, nil)
```

where instead of `nil` we need to put block's metadata. The bug will be manifested in the case where lagging behind node will crash during snapshot replication and during restart won't find consenters' metadata to be able to get connected with rest replica set.


The fix should be to read metadata and update block with the details while writing it to the disk:

```
c.support.WriteBlock(block, metadata)
//                                                     ^^^^ propagating consenters's metadata
```",,C0rWin,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kn7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),C0rWin,denyeart,yacovm,,,,,,,,,,,,,,release-2.3,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Jul/21 11:02 PM;C0rWin;https://github.com/hyperledger/fabric/pull/2748;;;","16/Jul/21 7:46 PM;yacovm;[~denyeart] we need to cherry pick this all the way back;;;","16/Jul/21 9:48 PM;C0rWin;I guess it requires some rebasing beforehand ;;;","16/Jul/21 11:26 PM;denyeart;Agreed, I've added the Fix Versions for v2.3.3 and v2.2.4 and moved back to In Progress.  [~C0rWin]  are you going to attempt the backports?;;;","16/Jul/21 11:52 PM;C0rWin;[~denyeart] yup;;;","17/Jul/21 5:55 AM;denyeart;[~C0rWin] I saw two integration test failures in a row related to the new test for this one:

[https://dev.azure.com/Hyperledger/Fabric/_build/results?buildId=37564&view=logs&jobId=7bdc61f6-cc21-52ee-7d28-b4e428ac1bdc&j=7bdc61f6-cc21-52ee-7d28-b4e428ac1bdc&t=3edc53e4-3cda-5f78-8477-529a625a41ba]

 ;;;","17/Jul/21 6:54 AM;C0rWin;Interesting [~denyeart], will take a look, not something I have seen before :/

Following PR https://github.com/hyperledger/fabric/pull/2761 should fix the problem.;;;","22/Jul/21 1:17 AM;denyeart;[~C0rWin]I rebased on top of your fix but this test is still failing - 

[https://dev.azure.com/Hyperledger/Fabric/_build/results?buildId=37887&view=logs&j=f2000854-c7fb-5d20-d92e-ea22102e0eb5&t=8c0b343e-a113-5c44-d189-698811f88d80]

 ;;;","22/Jul/21 5:57 AM;C0rWin;[~denyeart] I will take a look again and inspect logs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support for custom chaincode server package preprocessor,FAB-18522,47021,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,arsulegai,arsulegai,12/Jul/21 3:31 AM,12/Jul/21 3:38 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"Reference discussion [https://lists.hyperledger.org/g/fabric/topic/84030071#10176]

 

*Brief flow on the chaincode installation at peer node:*

The chaincode package id is generated based on the input chaincode package bytes. SHA256 is applied on the input bytes to compute a hash which then in conjunction with chaincode id serves as a package id. The package is sent to the build process after it is persisted on the volume store, the package id is used to save the file.

*Concern:*

The package id is agreed upon value at an organization level. This is done post installation through an 'approveformyorg' command for a sequence. An organization that has multiple peers and would like to attach a unique instance of chaincode server for each of its peer, is then expected to produce same chaincode id for all its peer nodes across organization.

However, parameters to secure peer and chaincode server connections are supplied as part of the chaincode package itself. This makes it difficult to establish the unique identity for secure connection.

Buildpacks are provided for a user to have custom detect, build, release and run checkpoints. However, package id is computed much before these checkpoints are executed.

*Requirement:*

As a user of Fabric, one should be able to package the chaincode server as they wish but cautiously decide on contents to be used to generate the package id. Note: Chaincode package gets installed as usual following the existing process.

*Proposal:*

The proposal in this story is to allow a custom preprocessor in lines with buildpacks. The default Router implementation (for docker based build) and the buildpacks that do not carry preprocessor will apply SHA256 on the entire package.",,arsulegai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zylbi",,,,Unset,Unset,,"1. An organization has more than 1 peer participating in the channel.
2. Each of the peer has one instance of chaincode server.
2. Chaincode server package is supplied with unique key/cert for each of the peer.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),arsulegai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/21 3:38 AM;arsulegai;[~mbwhite] I started on this proposal as discussed over the email.

Working branch https://github.com/arsulegai/fabric/tree/ccs-preprocessor;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need examples showing how to deploy a simple fabric environment in Kubernetes,FAB-18523,47022,,Task,To Do,FAB,Fabric,software,denyeart,,,Medium,,octocac,ptippett,ptippett,14/Jul/21 4:33 AM,28/Feb/22 9:52 AM,28/Oct/23 3:09 AM,,v2.x,,,,,,,,,,,fabric-samples,,,,1,,,,,,"The examples in [https://github.com/hyperledger/fabric-samples/tree/main/test-network] still use docker compose to stand up a basic network.  Given the move of most deployments to Kubernetes, I believe it would be worth it to provide a sample creating a similar test network but in a kubernetes environment.

 

While the environment should be very simple, the scripts/docs should cover some simple best practices such as using Kubernetes secrets to store identities, using Persistent Volumes and Persistent Volume claims to host data vs local storage, etc.

I do not think we necessarily need to build a full operator to do this, scripts including some best practices should be enough.

 

Note that there are already several articles around deploying Fabric in Kubernetes, and I also believe cello may have an operator and perhaps other assets that could be investigated.

 ",,ptippett,sharkrit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01knf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ptippett,sharkrit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Aug/21 11:26 PM;sharkrit;Hi [~ptippett], Would this helps [https://github.com/hyperledger-labs/blockchain-automation-framework] ?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need Examples showing how to renew certificates and resolve issues due to expired certificates,FAB-18524,47023,,Task,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,ptippett,ptippett,14/Jul/21 4:40 AM,14/Jul/21 4:40 AM,28/Oct/23 3:09 AM,,v2.x,,,,,,,,,,,,,,,0,,,,,,"Certificate management is a critical part of Hyperledger Fabric.  Often users don't know all the identities/certificates in play, the default expiration, or how to renew them.

In addition, if certificates are allowed to expire, it can be complicated and also a bit dangerous renewing them since, as with orderer TLS certs for example, if it isn't done properly it's possible that a user can get in a situation where the environment can't be recovered.

 

For this reason, I believe there should be some sample scripts and documentation provided to cover both these cases.  The documentation should list the various certificates that someone operating a fabric environment would have to keep track of and the scripts can help renew and also allow someone to fix expired certificates.

 

Since many production environments run on kubernetes, I'd suggest tying this with https://jira.hyperledger.org/FAB-18523 and providing documentation and scripts that can be used in a kubernetes environment vs one that assumes everything is running on a single node and local filesystem.",,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01knn:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vulnerability issues in jsrsasign package for fabric-sdk-node,FAB-18525,47027,,Task,To Do,FAB,Fabric,software,denyeart,,,High,,,BalaSiddhartha,BalaSiddhartha,15/Jul/21 9:12 PM,14/Aug/21 4:27 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,," When running the npm audit, we are noticing that there is critical RSA Signature validation vulnerability with the version of the jsrsasign package that is being used in the fabric-common, fabric-client and fabric-ca-client.  According to the audit, the fix has been patched in version greater than 10.2.0. So this dependency needs to be updated",,BalaSiddhartha,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01koj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),BalaSiddhartha,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Aug/21 4:27 PM;davidkel;This looks like a duplicate of https://jira.hyperledger.org/browse/FABN-1719;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Repeatedly creating same channel quickly may cause unrecoverable orderer panic,FAB-18526,47029,,Bug,Unverified,FAB,Fabric,software,denyeart,,,High,,,guoger,guoger,17/Jul/21 2:48 AM,24/Sep/21 5:52 PM,28/Oct/23 3:09 AM,,v2.2.4,v2.4.0,,,,,,,,,,fabric-orderer,,,,0,,,,,,"reproduce step:
 1. create a network with 3 or 5 orderers (so that consensus is reached slower than solo)
 2. submit a tx to create channel
 3. submit the same tx to create channel again *immediately*
 4. there's a good chance that orderer will crash with following stack
{code:java}
2021-07-06 13:07:52.348 UTC [orderer.commmon.multichannel] createNewChain -> PANI 028 Error creating chain support: error creating consenter for channel: lc5d2f1a: failed to restore persisted raft data: failed to create or read WAL: failed to open WAL: fileutil: file already locked
panic: Error creating chain support: error creating consenter for channel: lc5d2f1a: failed to restore persisted raft data: failed to create or read WAL: failed to open WAL: fileutil: file already locked

goroutine 122 [running]:
go.uber.org/zap/zapcore.(*CheckedEntry).Write(0xc00002c000, 0x0, 0x0, 0x0)
/go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore/entry.go:230 +0x545
go.uber.org/zap.(*SugaredLogger).log(0xc0000101e0, 0xc000331f04, 0x109e7da, 0x20, 0xc00025b4e8, 0x1, 0x1, 0x0, 0x0, 0x0)
/go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:234 +0x100
go.uber.org/zap.(*SugaredLogger).Panicf(...)
/go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:159
github.com/hyperledger/fabric/common/flogging.(*FabricLogger).Panicf(...)
/go/src/github.com/hyperledger/fabric/common/flogging/zap.go:74
github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).createNewChain(0xc00077a680, 0xc0002dc730, 0x0)
/go/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:562 +0x1ef
github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).newChain(0xc00077a680, 0xc0002dc730)
/go/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:543 +0x9d
github.com/hyperledger/fabric/orderer/common/multichannel.(*BlockWriter).WriteConfigBlock(0xc00025f040, 0xc00004e3c0, 0xc0000b0228, 0x7, 0x7)
/go/src/github.com/hyperledger/fabric/orderer/common/multichannel/blockwriter.go:118 +0x357
github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).writeConfigBlock(0xc0001438c0, 0xc00004e3c0, 0x5)
/go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:1272 +0x28f
github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).writeBlock(0xc0001438c0, 0xc00004e3c0, 0x5)
/go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:842 +0x1a9
github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).apply(0xc0001438c0, 0xc000288588, 0x5, 0x5)
/go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:1036 +0x24a
github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).run(0xc0001438c0)
/go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:750 +0x95c
created by github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).Start
/go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:368 +0x230
{code}
Here's roughly what's going on in code:
 1. 1st channel creation tx submitted, *but not committed yet*, so that channel hasn't been created
 2. 2nd channel creation tx submitted, and *passes evaluation* because it does not exist in Registrar
 3. 1st tx gets committed, and instantiates raft, which *locks wal files*
 4. 2nd tx gets committed, and *attempts to lock wal files again*
 5. panic

 

To fix:
an easy-to-think fix would be to insert a existence check [here|https://github.com/hyperledger/fabric/blob/44ab2bf96cf0d304a2f1d8f8b8cdd843e2279381/orderer/common/multichannel/registrar.go#L559]
{code:go}
	chainID := ledgerResources.ConfigtxValidator().ChannelID()
	if _, exist := r.chains[chainID]; exist {
		logger.Warnf(""Channel [%s] already exist, it's likely that channel creation tx were re-submitted too quickly"", chainID)
		return
	}
{code}",,denyeart,guoger,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01koz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,guoger,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/21 4:34 PM;yacovm;I think that ideally, whenever there is a config transaction that is consented upon, it would have made all other pending transactions after it, be re-validated in the leader. 

This is [what we do in our BFT library|https://github.com/SmartBFT-Go/consensus/blob/leader_rotation/internal/bft/controller.go#L644-L657], but in Raft this would need to be done inside the chain.;;;","18/Jul/21 8:13 PM;guoger;[~yacovm] thanks for taking a look at this! I'm not familiar enough with the bft lib, but it seems you are re-verifying transactions in the request pool (pending) upon sequence change. My question is, how do you verify in-flight transactions (those already picked from pool, cut into block and going through consensus)? some explanation or pointer to code would be appreciated;;;","18/Jul/21 9:08 PM;yacovm;In our library we don't have a pipeline, so at every point in time there is but a single block being consented upon.

In case of a pipeline like in Raft, the right thing to do for the leader, when cutting a config block, would be to wait until it is committed, and only afterwards cut the remaining blocks, and never send them to the Raft FSM until the config block before them has committed. ;;;","22/Jul/21 5:06 PM;guoger;bq. the right thing to do for the leader, when cutting a config block, would be to wait until it is committed, and only afterwards cut the remaining blocks, and never send them to the Raft FSM until the config block before them has committed.

 as i looked into code again, it already does what you described above. Although, it could not detect double-creation for two reasons:
- channel creation tx does *not* advance config seq, therefore revalidation is skipped
- revalidation via system channel's {{ProcessConfigMsg}} does *not* hold an instance of {{Registrar}}, and cannot perform this type of check

i could not think of any solution without significant refactoring though... [~yacovm];;;","22/Jul/21 5:17 PM;yacovm;But I think we can just forcefully re-validate all transactions in the system channel only for the system channel, no?;;;","22/Jul/21 6:27 PM;guoger;that would solve problem 1, but we still have problem 2.

IIUC, we need to expose registrar to system channel, so it can check whether channel already exists;;;","24/Sep/21 5:47 AM;denyeart;[~guoger] Do you think [https://github.com/hyperledger/fabric/pull/2934] fully resolves this?;;;","24/Sep/21 5:52 PM;yacovm;The bug fix you pointed may solve the symptom Jay described but it essentially makes the system channel have two channel creation transactions for the same channel. This might bite you in other code paths such as onboarding.... worth to check to see what happens;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for state based endorsement policy in discovery,FAB-18527,47030,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,18/Jul/21 5:35 AM,21/Jul/21 3:41 PM,28/Oct/23 3:09 AM,21/Jul/21 3:41 PM,,,,,,,,,,,,fabric-peer,,,,0,,,,,,"https://github.com/hyperledger/fabric-protos/pull/59 added a way to pass into the chaincode call a hint for state based endorsement policy, so that discovery will take into account that some keys have state based endorsement policies in them which need to be satisfied in addition/instead of the namespace endorsement policy.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABGW-25,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kp7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yacovm,,,,,,,,,,,,,,,,dependabot/bundler/docs/nokogiri-1.14.3,0.2.x,dependabot/bundler/docs/activesupport-6.0.6.1,dependabot/go_modules/bindings/go-apiv1/golang.org/x/text-0.3.8,0.1.x,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/text-0.3.8,dependabot/go_modules/bindings/go-apiv1/golang.org/x/net-0.7.0,dependabot/bundler/docs/commonmarker-0.23.9,dependabot/go_modules/bindings/go-apiv2/golang.org/x/net-0.7.0,release-2.2,dependabot/go_modules/bindings/go-apiv2/golang.org/x/text-0.3.8,release-2.5,release-2.4,github-settings,dependabot/go_modules/bindings/go-apiv2/golang.org/x/sys-0.1.0,dependabot/go_modules/golang.org/x/sys-0.1.0,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,dependabot/go_modules/bindings/go-apiv1/golang.org/x/sys-0.1.0,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Orderer fails after receiving  a message generated by fuzzer, and cannot be recover",FAB-18528,47100,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,yuanliangchen,yuanliangchen,yuanliangchen,24/Jul/21 12:08 PM,03/Feb/22 10:46 PM,28/Oct/23 3:09 AM,12/Aug/21 12:45 AM,v1.4.0,v2.0.0,v2.0.1,v2.3.0,,,,,,,,fabric-orderer,,,,0,Security,,,,,"panic: failed to extract channel header from envelope

 

goroutine 44 [running]:

go.uber.org/zap/zapcore.(*CheckedEntry).Write(0xc0002b52c0, 0x0, 0x0, 0x0)

 /go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore/entry.go:234 +0x585

go.uber.org/zap.(*SugaredLogger).log(0xc000209210, 0x4, 0x10df429, 0x2e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)

 /go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:234 +0xf6

go.uber.org/zap.(*SugaredLogger).Panicf(...)

 /go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:159

github.com/hyperledger/fabric/common/flogging.(*FabricLogger).Panicf(...)

 /go/src/github.com/hyperledger/fabric/common/flogging/zap.go:74

github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).isConfig(0xc000140300, 0xc000f019a0, 0xc00016bd60)

 /go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:1169 +0xb8

github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).ordered(0xc000140300, 0xc0001405b0, 0x5, 0x0, 0x1, 0x1, 0x0, 0x0)

 /go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:932 +0x7e

github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).run(0xc000140300)

 /go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:707 +0x450

 ",,yacovm,yuanliangchen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/21 12:02 PM;yuanliangchen;fuzz input;https://jira.hyperledger.org/secure/attachment/19100/fuzz+input","11/Aug/21 6:49 PM;yuanliangchen;fuzz input in base64;https://jira.hyperledger.org/secure/attachment/19112/fuzz+input+in+base64",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kpn:",,,,Unset,Unset,,"1. Setup a simple fabric network with at least one orderer (using etcdraft consensus)
2. Send a constructed message whose header is invalid to the interface 'Order(env *cb.Envelope, configSeq uint64) error' of orderer's, then this orderer node panic and breakdown immediately. In my fuzzing experiment, the message is generated by my fuzzer, the Envelope of this message can be found in my attach files.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),yacovm,yuanliangchen,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.2,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jul/21 12:00 AM;yacovm;{quote}Send a constructed message whose header is invalid to the interface 'Order(env *cb.Envelope, configSeq uint64) error'
{quote}
But to get there, the message [needs to pass validation |https://github.com/hyperledger/fabric/blob/main/orderer/common/broadcast/broadcast.go#L149]where it will be rejected not be enqueued it into the consensus backend.

Can you provide the bytes of the message (in base64 or hex encoding) sent from the client to the orderer that caused the panic?;;;","11/Aug/21 6:49 PM;yuanliangchen;The message sent from the client can not pass the validation and will be rejected.

However, the constructed message from other orderers (through the interface ""chain.rpc.SendSubmit(dest uint64, request *orderer.SubmitRequest, report func(err error))"") do not have such validation, which can easily trigger this crash, leads to the breakdown of the orderer.

 

The base64 encoding message of *orderer.SubmitRequest can be found in the [^fuzz input in base64].

[~yacovm] ;;;","11/Aug/21 6:57 PM;yacovm;[~yuanliangchen] I understand, however, the Raft orderer is a crash fault tolerant orderer, not a byzantine fault tolerant orderer.

Thus, if a Raft orderer becomes malicious, it can do much worse things than crash orderers, for example-  he can make the blockchain fork by becoming a leader and sending different blocks to different nodes, etc.

 

Also, keep in mind that it's impossible to send a SendSubmit RPC to an orderer unless you have a TLS certificate of another orderer, because Raft's communication layer uses mutual TLS with TLS pinning.

 

 

In any case, do you want to push a fix? I can review it.;;;","11/Aug/21 7:37 PM;yuanliangchen;[~yacovm] I understand that the Raft orderer is a crash fault-tolerant orderer, however, this vulnerability can easily break down as many orderers as you want. And It can be fixed easily, I have pushed a fix ([https://github.com/hyperledger/fabric/pull/2824).]

 

Actually, I really want to test your PBFT consensus using my latest Blockchain-Fuzzer, I wonder when it is available?

 ;;;","11/Aug/21 8:46 PM;yacovm;It's available here: [https://github.com/SmartBFT-Go/fabric/]

 

Use the branch release-1.4-BFT-3 or release-1.4-BFT-4

 

But it's not PBFT, but actually a non-pipelined PBFT (we can only do 1 block at a time, not several, like PBFT does, and we also have a checkpoint each block and not periodically like PBFT);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SIGSEGV: segmentation violation in orderer after recieving a message generated by fuzzer,FAB-18529,47101,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,Param-S,yuanliangchen,yuanliangchen,26/Jul/21 10:16 AM,19/Aug/21 10:05 PM,28/Oct/23 3:09 AM,19/Aug/21 10:05 PM,v1.4.0,v2.0.0,v2.1.0,,,,,,,,,fabric-orderer,,,,0,fuzzing,security,,,,"panic: runtime error: invalid memory address or nil pointer dereference

[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x933146]

 

goroutine 69 [running]:

github.com/hyperledger/fabric/protoutil.ChannelHeader(0x0, 0xc00016dc20, 0x1, 0xc00016dc20)

 /go/src/github.com/hyperledger/fabric/protoutil/commonutils.go:215 +0x26

github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).isConfig(0xc000282300, 0x0, 0xc0006fbab0)

 /go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:1167 +0x2b

github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).ordered(0xc000282300, 0xc0002825b0, 0x5, 0x0, 0x1, 0x0, 0x0, 0x0)

 /go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:894 +0x7e

github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).run(0xc000282300)

 /go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:707 +0x450

created by github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).Start

 /go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:368 +0x23c

 

 

When the Payload of msg (orderer.SubmitRequest) is nil, this bug will occur.",,Param-S,yuanliangchen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jul/21 10:16 AM;yuanliangchen;fuzz input2;https://jira.hyperledger.org/secure/attachment/19101/fuzz+input2","12/Aug/21 10:11 AM;yuanliangchen;fuzz input2 in base64;https://jira.hyperledger.org/secure/attachment/19113/fuzz+input2+in+base64",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kpv:",,,,Unset,Unset,,"
1. Setup a simple fabric network with at least one orderer (using etcdraft consensus)
2. Send a constructed message whose Payload is nil to the interface 'Order(env *cb.Envelope, configSeq uint64) error' of orderer's, then this orderer node panic and breakdown immediately. In my fuzzing experiment, the message is generated by my fuzzer, the Envelope of this message can be found in my attach files.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),Param-S,yuanliangchen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jul/21 9:58 PM;Param-S;I tried to recreate the problem with integration testcase by manipulating the envelope, but not successful.   
[https://github.com/hyperledger/fabric/blob/87ea070abead1c9df5b42d54a2ff8fae21ba5c63/integration/raft/client.go#L46]

If you can provide more information on the invocation/payload or tweaking any orderer IT testcase(https://github.com/hyperledger/fabric/blob/87ea070abead1c9df5b42d54a2ff8fae21ba5c63/integration/raft/channel_participation_test.go#L1106) would help to debug this issue.;;;","12/Aug/21 10:15 AM;yuanliangchen;Sorry for delay response.

[~Param-S]

Similar to the FAB-18528,  the constructed message sent from other orderers (through the interface ""chain.rpc.SendSubmit(dest uint64, request *orderer.SubmitRequest, report func(err error))"") do not have a proper validation check, which can easily trigger this crash, leads to the breakdown of the orderer.

 

The base64 encoding message of *orderer.SubmitRequest can be found in the [^fuzz input2 in base64]

This vulnerability can break down as many orderers as you want without effort. And It can be fixed easily by adding a nil pointer check.

 

 

 

 ;;;","19/Aug/21 10:04 PM;Param-S;Added null check: PR [https://github.com/hyperledger/fabric/pull/2838/files];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No validation of chaincode name when creating a package,FAB-18530,47105,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,ankitm123,ankitm123,ankitm123,28/Jul/21 4:59 AM,30/Jul/21 5:18 AM,28/Oct/23 3:09 AM,30/Jul/21 5:18 AM,,,,,,,,,,,,fabric-peer,,,,0,,,,,,"I started looking at this issue: https://jira.hyperledger.org/browse/FAB-18409
Is there a reason why `{{peer lifecycle chaincode package}}` or `{{peer lifecycle chaincode install}}` does not have (chaincode) name as a flag?

I can install chaincodes with invalid names, and only get notified of the error, when executing - `{{peer lifecycle chaincode approveformyorg}}`. I think it makes sense to validate the name from the packaging stage, and tell the end user (will prevent invalid chaincode to be installed on the peers). ",,ankitm123,denyeart,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18409,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kqr:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ankitm123,denyeart,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/21 5:18 AM;denyeart;There is no concept of chaincode 'name' at the packaging step. The 'name' will become the namespace in the state db when the chaincode is deployed (committed) to a channel. This is totally different from the label that is used while packaging. A label in a packaged chaincode will often denote the version of the chaincode code and will therefore often have dots in it, e.g. ""1.0.0"". The 'name' will live across versions of the packaged chaincode and dots are not allowed.

Additionally, the same chaincode package can be deployed (committed) multiple times to different names/namespaces, therefore it does not make sense to define a name during the packaging step.

I will go ahead and close the Jira issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extend function to query the details of the all approved chaincode definition,FAB-18531,47107,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,huishen,huishen,huishen,29/Jul/21 9:22 PM,29/Jul/21 9:29 PM,28/Oct/23 3:09 AM,,v2.2.0,,,,,,v2.2.0,,,,,fabric-peer,,,,0,,,,,,"Currently, Fabric peer CLI 'queryapproved' could query the details of an approved chaincode definitions, and this CLI requires a mandatory chaincode name parameter to query a specific chaincode definitions; however in some cases we expect to query out all approved chainocode definitions.

So, here we propose to extend the 'queryapproved' function for querying the details of all the approved chaincode definition to Fabric peer CLI.

The following shows a basic design of this extension.
 * There is no new command is involved.
 * Command 'queryapproved' will be extended to support this function:
 ** make parameter (-n|--name <chaincode>) optional
 ** if parameter (-n|--name <chaincode>) is provided, keep current command behavior
 ** if parameter (-n|--name <chaincode>) is not provided, query the details of all approved chaincode, plus additional chaincode name in details output.

 

*The example of query all approved chaincodes with JSON output format:* 
{code:java}
$ peer lifecycle chaincode queryapproved --channelID <channelname> -o orderer.example.com:7050 --peerAddresses peer0.org1.example.com:7051 --output json
{
	""chaincode_definitions"": [
		{
			""name"": ""<ccname1>"",
			""sequence"": 1,
			""version"": ""1.0"",
			""endorsement_plugin"": ""escc"",
			""validation_plugin"": ""vscc"",
			""validation_parameter"": ""EiAvQ2hhbm5lbC9BcHBsaWNhdGlvbi9FbmRvcnNlbWVudA=="",
			""collections"": {},
			""init_required"": true,
			""source"": {
				""Type"": {
					""LocalPackage"": {
						""package_id"": ""<ccname1>-1.0:e60b4fc692998844183e70ca6ae15bcd4632ef1b0e93193567a6669fb945d86d""
					}
				}
			}
		},
		{
			""name"": ""<ccname2>"",
			""sequence"": 1,
			""version"": ""1.0"",
			""endorsement_plugin"": ""escc"",
			""validation_plugin"": ""vscc"",
			""validation_parameter"": ""EiAvQ2hhbm5lbC9BcHBsaWNhdGlvbi9FbmRvcnNlbWVudA=="",
			""collections"": {},
			""init_required"": true,
			""source"": {
				""Type"": {
					""LocalPackage"": {
						""package_id"": ""<ccname2>-1.0:23d718fa220eb599a412dfea13c18958b58fd0ffe4a42e2335b17c2c5fa102e9""
					}
				}
			}
		},
		{
			""name"": ""<ccname2>"",
			""sequence"": 2,
			""version"": ""2.0"",
			""endorsement_plugin"": ""escc"",
			""validation_plugin"": ""vscc"",
			""validation_parameter"": ""EiAvQ2hhbm5lbC9BcHBsaWNhdGlvbi9FbmRvcnNlbWVudA=="",
			""collections"": {},
			""init_required"": true,
			""source"": {
				""Type"": {
					""LocalPackage"": {
						""package_id"": ""<ccname2>-2.0:23d718fa220eb599a412dfea13c18958b58fd0ffe4a42e2335b17c2c5fa102e9""
					}
				}
			}
		}
	]
}
{code}",,huishen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-11237,,,No,,Unset,No,,,"1|i01kr7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),huishen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extend lifecycle protos to query the details of all the approved chaincodes definition,FAB-18532,47108,47107,Sub-task,To Do,FAB,Fabric,software,denyeart,,,Medium,,huishen,huishen,huishen,30/Jul/21 1:57 AM,30/Jul/21 2:15 AM,28/Oct/23 3:09 AM,,v2.0.0,,,,,,v2.2.0,,,,,fabric-peer,,,,0,,,,,,"As a sub-task, here we enhance lifecycle protos to extend function to support query the details of all the approved chaincodes definition.",,huishen,,,,,,,,,,,,,,,,,,,,,,,,FAB-18533,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01krf:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),huishen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extend _lifecycle function for querying all the approved chaincode definition,FAB-18533,47109,47107,Sub-task,To Do,FAB,Fabric,software,denyeart,,,Medium,,huishen,huishen,huishen,30/Jul/21 2:05 AM,30/Jul/21 2:15 AM,28/Oct/23 3:09 AM,,v2.0.0,,,,,,v2.2.0,,,,,fabric-peer,,,,0,,,,,,"As a sub-task, here we enhance _lifecycle function to query the details of
all the approved chaincode definition.",,huishen,,,,,,,,,,,,,,,,,,,,,,,FAB-18532,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01krn:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),huishen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Proxy is not passed to ccenv for building chaincode,FAB-18534,47113,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid: Works as Expected,,smeyerzu,smeyerzu,02/Aug/21 11:47 PM,18/Aug/21 11:58 PM,28/Oct/23 3:09 AM,17/Aug/21 11:38 AM,,,,,,,,,,,,fabric-peer,,,,0,,,,,,"We have a HLF setup running with docker-compose behind a proxy.

peer lifecycle chaincode install CC.tar.gz fails with:

Error: chaincode install failed with status: 500 - failed to invoke backing implementation of 'InstallChaincode': could not build chaincode: docker build failed: docker image build failed: docker build failed: Error returned from build: 1 ""go: github.com/golang/protobuf@v1.4.2: Get ""https://proxy.golang.org/github.com/golang/protobuf/@v/v1.4.2.mod"": dial tcp 142.250.186.81:443: connect: connection refused

As one can see go fails to download dependencies.
It tries to reach the proxy.golang.org server without using our corporate proxy.
This is most likely due to http_proxy variables not being exported in the started fabric-ccenv container.

~/.docker/config.json on the host is configured with:

{

""proxies"": {
 ""default"": {
 ""ftpProxy"": ""http://XXX:8080"",
 ""httpProxy"": ""http://XXX:8080"",
 ""httpsProxy"": ""http://XXX:8080"",
 }}}

This results in http_proxy, https_proxy, ... being exported on the peer and the fabric-tools which are used to call the lifecycle but unfortunately it is not forwarded to the fabric-ccenv.",,denyeart,smeyerzu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ksb:",,,,Unset,Unset,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,smeyerzu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/21 11:38 AM;denyeart;You should vendor the chaincode dependencies before you install the chaincode.

See the doc at [https://hyperledger-fabric.readthedocs.io/en/latest/chaincode4ade.html#managing-external-dependencies-for-chaincode-written-in-go]

I'll go ahead and close, but please re-open with more details if you think something needs to be changed.;;;","18/Aug/21 11:58 PM;smeyerzu;Thank you very much, running go mod tidy and vendor solved our problem.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Couchdbs are not syncing,FAB-18535,47117,,Bug,Unverified,FAB,Fabric,software,denyeart,,,High,,hyperledger-jira,saikumar3349,saikumar3349,06/Aug/21 2:06 PM,26/Aug/21 10:30 PM,28/Oct/23 3:09 AM,,v2.2.1,,,,,,,,,,,fabric-peer,,,,0,,,,,,"I have created network with two organizations Org1 and Org2 with 3 orderers.

Fabric Version v2.2.1

used statedb as couchdb:3.1

Each organization is having two peers and all 4 peers of two organizations has joined in common channel(test-channel)

After performing transactions on test-channel, peer1 org1 couchdb has less number of records when compared with peer2 org1 couchdb. This is creating major issue while querying records from peer1org1.

 

Kindly help in resolving the issue.

I tried resyncing the peer1org1 by removing persistent data. still i am unable to sync all the records to couchdb.

NOTE: The ledger height on all 4 peers are same.

 ",,denyeart,saikumar3349,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kt7:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,saikumar3349,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/21 11:02 AM;denyeart;Does each peer have a dedicated CouchDB?

How are you identifying the differences?

Is the commitHash for the last block the same on each peer? (commitHash can be seen in the peer log in the commit INFO message for each block)

If the commitHashes are different, can you identify from the peer logs at which block number they diverged?

 ;;;","26/Aug/21 10:30 PM;saikumar3349;[~denyeart]: Yes Each peer has its dedicated couchdb.

There is difference of records counts in couchdb.

commitHash for last block is same for all peers.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca package binary is not available in release 1.5.0,FAB-18536,47121,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,gangadharjannu,gangadharjannu,18/Aug/21 10:57 PM,26/Aug/21 9:27 PM,28/Oct/23 3:09 AM,19/Aug/21 6:16 AM,,,,,,,,,,,,,,,,0,,,,,,"*What is the issue?*

It seems like fabric-ca packages for linux and windows are missing in release v1.5.0

*What is causing issue?*

While setting fabric network using the command `curl -sSL https://bit.ly/2ysbOFE | bash -s ` is trying to install fabric-ca package 1.5.0 for linux and since it is not available script is throwing below error

{code:sh}
==> Cloning hyperledger/fabric-samples repo
Cloning into 'fabric-samples'...
remote: Enumerating objects: 7688, done.
remote: Total 7688 (delta 0), reused 0 (delta 0), pack-reused 7688
Receiving objects: 100% (7688/7688), 4.50 MiB | 18.43 MiB/s, done.
Resolving deltas: 100% (4020/4020), done.
fabric-samples v2.3.2 does not exist, defaulting main

Pull Hyperledger Fabric binaries

===> Downloading version 2.3.2 platform specific fabric binaries
===> Downloading: https://github.com/hyperledger/fabric/releases/download/v2.3.2/hyperledger-fabric-linux-amd64-2.3.2.tar.gz
 % Total % Received % Xferd Average Speed Time Time Time Current
 Dload Upload Total Spent Left Speed
100 649 100 649 0 0 3294 0 --:--:-- --:--:-- --:--:-- 3294
100 73.5M 100 73.5M 0 0 33.1M 0 0:00:02 0:00:02 --:--:-- 40.3M
==> Done.
===> Downloading version 1.5.0 platform specific fabric-ca-client binary
===> Downloading: https://github.com/hyperledger/fabric-ca/releases/download/v1.5.0/hyperledger-fabric-ca-linux-amd64-1.5.0.tar.gz
 % Total % Received % Xferd Average Speed Time Time Time Current
 Dload Upload Total Spent Left Speed
100 9 100 9 0 0 47 0 --:--:-- --:--:-- --:--:-- 47

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
==> There was an error downloading the binary file.

------> 1.5.0 fabric-ca-client binary is not available to download (Available from 1.1.0-rc1) <----{code}

*Platform*
Ubuntu Linux

*How long you were experience this ?*

It was working two days ago but since this morning it is suddenly stopped working. It seems the new release 1.5.1 which released on August 16 may have something to do with this

In the attachments you can check that the binaries for windows and linux are missing in 1.5.0",,Aniket.1,davidkel,gangadharjannu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Aug/21 7:09 PM;Aniket.1;fabricCaIssue.png;https://jira.hyperledger.org/secure/attachment/19117/fabricCaIssue.png","18/Aug/21 10:57 PM;gangadharjannu;v1.5.0.png;https://jira.hyperledger.org/secure/attachment/19114/v1.5.0.png","18/Aug/21 10:57 PM;gangadharjannu;v1.5.1.png;https://jira.hyperledger.org/secure/attachment/19115/v1.5.1.png",,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ku3:",,,,Unset,Unset,,"Execute curl -sSL https://bit.ly/2ysbOFE | bash -s in linux environment to setup fabric network and this should throw the error",,Unset,,,,,,Unset,,Unset,,(Please add usage information),Aniket.1,davidkel,gangadharjannu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Aug/21 3:36 AM;davidkel;This should now be resolved and it now pulls 1.5.1 binaries. Could you check and close the issue if it now works for you;;;","19/Aug/21 6:14 AM;gangadharjannu;Yes, it worked for me. Now the script pulls fabric-ca 1.5.1 images :)

I'm closing the issue.;;;","19/Aug/21 6:17 AM;gangadharjannu;Not sure if I was able to close the issue properly, I had to click 'accept' => 'Begin work' => 'Done' to get this closed. Please feel free to update the issue if I did something incorrect;;;","26/Aug/21 7:10 PM;Aniket.1;I still face this issue. Is there a workaround for this? [~davidkel] !fabricCaIssue.png!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode installation on peer0.hosp1 has failed Deploying chaincode failed,FAB-18537,47123,,Story,To Do,FAB,Fabric,software,denyeart,,,High,,,GaberAl-Absi,GaberAl-Absi,20/Aug/21 11:22 AM,20/Aug/21 12:00 PM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,1,,,,,,"Hello every one,

I'm new in Hyperledger Fabric, I tried to deploy Chaincode but I faced this error. Please your help is highly appreciated.

This is the error:

Error: chaincode install failed with status: 500 - failed to invoke backing implementation of 'InstallChaincode': could not build chaincode: docker build failed: docker image build failed: docker build failed: Error returned from build: 1 ""+ INPUT_DIR=/chaincode/input
+ OUTPUT_DIR=/chaincode/output
+ cp -R /chaincode/input/src/. /chaincode/output
+ cd /chaincode/output
+ '[' -f package-lock.json -o -f npm-shrinkwrap.json ]
+ npm ci '--only=production'
npm ERR! code EAI_AGAIN
npm ERR! errno EAI_AGAIN
npm ERR! request to https://registry.npmjs.org/fabric-contract-api/-/fabric-contract-api-1.4.6.tgz failed, reason: getaddrinfo EAI_AGAIN registry.npmjs.org

npm ERR! A complete log of this run can be found in:
npm ERR! /root/.npm/_logs/2021-08-20T01_53_35_503Z-debug.log
""
Chaincode installation on peer0.hosp1 has failed
Deploying chaincode failed",,GaberAl-Absi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kuj:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),GaberAl-Absi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
assetTransfer.js chaincode failing to execute transactions,FAB-18538,47112,,Bug,To Do,FAB,Fabric,software,denyeart,,,Medium,,,TravisPayne,TravisPayne,02/Aug/21 10:52 PM,15/Jul/23 7:09 AM,28/Oct/23 3:09 AM,,,,,,,,,,,,,,,,,0,,,,,,"After starting up the example test network with:

 
{code:java}
./network.sh up createChannel -c mychannel -ca
{code}
Then deploying the ""basic"" chain code using:
{code:java}
./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-typescript/ -ccl javascript
{code}
After running the usual npm install, then npm start, on:
  
{code:java}
 /fabric-samples/asset-transfer-basic/application-typescript/app.ts{code}
 

I repeatedly was hit with the following errors:

[^nodejs-logs.txt]

[^container-logs.txt]

 

A colleague of mine repeated these steps and it resulted in the same outcome, any help would be much appreciated.


Cheers,


Travis Payne

 

 ",,bestbeforetoday,influ20361,TravisPayne,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Aug/21 10:51 PM;TravisPayne;container-logs.txt;https://jira.hyperledger.org/secure/attachment/19109/container-logs.txt","02/Aug/21 10:51 PM;TravisPayne;nodejs-logs.txt;https://jira.hyperledger.org/secure/attachment/19108/nodejs-logs.txt",,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i0006",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,influ20361,TravisPayne,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Aug/21 5:38 PM;bestbeforetoday;Chaincode container looks to be failing to start on the server side. Not sure if the issue is environmental, the sample chaincode, or Fabric core.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Discovery failed constructing descriptor for chaincode using private collections,FAB-18539,46462,,Bug,Unverified,FAB,Fabric,software,denyeart,,,Medium,,,icarrascol,icarrascol,30/Dec/20 11:18 PM,20/Aug/21 8:33 PM,28/Oct/23 3:09 AM,,v2.x,,,,,,,,,,,,,,,0,community-help-wanted,discovery,external,Needs-Review,sdk-triaged,"Hello everyone, i have 3 private collections with endorsement policy set as follows:

collection1: OR( Org3MSP )
 collection2: AND( Org1MSP, Org3MSP )
 collection3: AND( Org2MSP, Org3MSP )

i am trying to invoke a method in the chaincode that uses col1 and col2 , the sdk fails with this error:
{code:java}
""DiscoveryService: test-cc error: failed constructing descriptor for chaincodes:<name:\""test-cc\"" collection_names:\""privateCollection2\"" collection_names:\""PrivateCollection1\"" > ""
{code}
i dont know what it means but i think it cant build the endorsing plan or something related?
as an alternative i tried passing manually the peers that should endorse the transaction (1 peer from org1 and 1 peer from org3) and it worked.

if i change all the AND to OR i dont get the error. considering that if i pass the peers manually the invoke succeded i think there is something wrong with the sdk.",,bestbeforetoday,harrisob@us.ibm.com,icarrascol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jan/21 2:55 AM;icarrascol;collections_config.js;https://jira.hyperledger.org/secure/attachment/18872/collections_config.js","07/Jan/21 3:00 AM;icarrascol;fabriclog.txt;https://jira.hyperledger.org/secure/attachment/18873/fabriclog.txt","07/Jan/21 4:24 AM;icarrascol;new_collections_config.js;https://jira.hyperledger.org/secure/attachment/18875/new_collections_config.js","07/Jan/21 4:22 AM;icarrascol;newlog.txt;https://jira.hyperledger.org/secure/attachment/18874/newlog.txt","12/Jan/21 2:50 AM;icarrascol;peer.yaml;https://jira.hyperledger.org/secure/attachment/18877/peer.yaml","12/Jan/21 5:59 AM;icarrascol;peerlogs.txt;https://jira.hyperledger.org/secure/attachment/18878/peerlogs.txt",,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hwz:",,,,Unset,Unset,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,icarrascol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jan/21 1:32 AM;harrisob@us.ibm.com;When you pass the peers, discovery will not be used and the request will be sent to the peers specified. Without peers, the discovery service will be used to calculate the peers needed to successfully endorse the transaction. For some reason the discovery service on the peer is not able to build an endorsement plan.

Can you show me how you have pass the collection names to the NodeSDK and how you have created the collections.

It would also help to see a trace log, 

export HFC_LOGGING='{""debug"":""console""}'

You may replace console with a file name;;;","07/Jan/21 3:04 AM;icarrascol;this is the collection definition: [^collections_config.js]

i pass the collections like this on the sdk:
{code:java}
  contract.addDiscoveryInterest({ name: nameChaincode, collectionNames: ['autentiaPrivateCollection', 'Org1privateCollection'] });
{code}
this is the logfile: [^fabriclog.txt];;;","07/Jan/21 4:28 AM;icarrascol;also there is another error related to this, i have the same collection definition but using OutOfN on the endorsing of all of them,  i pass the collections to the sdk as specified on my last comment. if all the peers are online it executes correctly,  but, if on purpose i stop one peer (peer4),  the sdk throws this same error.
{code:java}
2021-01-06T19:04:27.190Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Endorser- name: peer0.org4.autentia-bchain.com, url:grpcs://localhost:10051, connected:false, connectAttempted:true
2021-01-06T19:04:27.192Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer0.org4.autentia-bchain.com url:grpcs://localhost:10051 timeout:3000
2021-01-06T19:04:27.201Z - info: [NetworkConfig]: buildPeer - Unable to connect to the endorser peer0.org4.autentia-bchain.com due to Error: Failed to connect before the deadline on Endorser- name: peer0.org4.autentia-bchain.com, url:grpcs://localhost:10051, connected:false, connectAttempted:true
    at checkState (/home/italo/Documentos/mvp/pagare-mvp/api-chain/node_modules/@grpc/grpc-js/build/src/client.js:69:26)
    at Timeout._onTimeout (/home/italo/Documentos/mvp/pagare-mvp/api-chain/node_modules/@grpc/grpc-js/build/src/channel.js:292:17)
    at listOnTimeout (internal/timers.js:549:17)
    at processTimers (internal/timers.js:492:7) {
  connectFailed: true
}
2021-01-06T19:04:27.356Z - error: [DiscoveryService]: send[pagare-cc] - Channel:pagare-channel received discovery error:failed constructing descriptor for chaincodes:<name:""pagare-cc"" collection_names:""autentiaPrivateCollection"" collection_names:""Org1privateCollection"" > 
{code}
considering that this doesnt fail if all the peers are online and if i am correct  there exists another endorsing combination that fulfills the policy for both collections, that is Org1MSP and Org3MSP. So the endorsing from org4 isnt strictly needed right and discovery should be able to generate this alternative endorsing plan.

this is using the latest released version of the sdk: 2.2.4

[^newlog.txt]
 [^new_collections_config.js];;;","08/Jan/21 1:45 AM;harrisob@us.ibm.com;I do not see any issues with the NodeSDK. The discovery service on the peer is the source of the error shown. How are you installing the chaincode and applying the collections and policies. Is if possible that the collection policies and the active peers do not line up ?

 ;;;","08/Jan/21 2:55 AM;icarrascol;i follow the chaincode lifecycle as shown on the examples, i am using node sdk v2.2.4 and fabric v2.2.0, the process to install the chaincode on 4 organizations is really long but in resume is
 - package the chaincode
 - install on all the peers
 - query the installed chaincode to get its ID
 - approve the chaincode definition on each org like this:
{code:java}
peer lifecycle chaincode approveformyorg -o orderer1.autentia-bchain.com:7050 --ordererTLSHostnameOverride orderer1.autentia-bchain.com --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/autentia-bchain.com/orderers/orderer1.autentia-bchain.com/msp/tlscacerts/tlsca.autentia-bchain.com-cert.pem --channelID pagare-channel --name pagare-cc --collections-config /opt/gopath/src/github.com/chaincode/collections_config.js --version 1.0 --init-required --signature-policy 'OutOf (2, '\''Org1MSP.peer'\'', '\''Org2MSP.peer'\'', '\''Org3MSP.peer'\'','\''Org4MSP.peer'\'')' --waitForEvent --package-id pagare-cc_1.0:6138a5ac8fc496a1ed4df92c3706c84efdadf37bf782c6ef49ea8ae48a2df97d --sequence 1
{code}

 - check if the definition is approved by everyone:
{code:java}
peer lifecycle chaincode checkcommitreadiness --channelID pagare-channel --name pagare-cc --version 1.0 --sequence 1 --collections-config /opt/gopath/src/github.com/chaincode/collections_config.js --output json --init-required --signature-policy 'OutOf (2, '\''Org1MSP.peer'\'', '\''Org2MSP.peer'\'', '\''Org3MSP.peer'\'','\''Org4MSP.peer'\'')'

{
	""approvals"": {
		""Org1MSP"": true,
		""Org2MSP"": true,
		""Org3MSP"": true,
		""Org4MSP"": true
	}
}

{code}

 - commit the chaincode:
{code:java}
+ peer lifecycle chaincode commit -o orderer1.autentia-bchain.com:7050 --ordererTLSHostnameOverride orderer1.autentia-bchain.com --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/autentia-bchain.com/orderers/orderer1.autentia-bchain.com/msp/tlscacerts/tlsca.autentia-bchain.com-cert.pem --channelID pagare-channel --collections-config /opt/gopath/src/github.com/chaincode/collections_config.js --name pagare-cc --version 1.0 --sequence 1 --signature-policy 'OutOf (2, '\''Org1MSP.peer'\'', '\''Org2MSP.peer'\'', '\''Org3MSP.peer'\'','\''Org4MSP.peer'\'')' --waitForEvent --init-required --waitForEvent --peerAddresses peer0.org1.autentia-bchain.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.autentia-bchain.com/peers/peer0.org1.autentia-bchain.com/tls/ca.crt --peerAddresses peer0.org2.autentia-bchain.com:8051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.autentia-bchain.com/peers/peer0.org2.autentia-bchain.com/tls/ca.crt --peerAddresses peer0.org3.autentia-bchain.com:9051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.autentia-bchain.com/peers/peer0.org3.autentia-bchain.com/tls/ca.crt --peerAddresses peer0.org4.autentia-bchain.com:10051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org4.autentia-bchain.com/peers/peer0.org4.autentia-bchain.com/tls/ca.crt{code}
{code:java}
2021-01-07 16:33:58.537 UTC [chaincodeCmd] ClientWait -> INFO 001 txid [5318b4b11ebe0e92f588795a027534df41d8a457be434f8a9f91c8ee58899a31] committed with status (VALID) at peer0.org2.autentia-bchain.com:8051
2021-01-07 16:33:58.538 UTC [chaincodeCmd] ClientWait -> INFO 002 txid [5318b4b11ebe0e92f588795a027534df41d8a457be434f8a9f91c8ee58899a31] committed with status (VALID) at peer0.org4.autentia-bchain.com:10051
2021-01-07 16:33:58.538 UTC [chaincodeCmd] ClientWait -> INFO 003 txid [5318b4b11ebe0e92f588795a027534df41d8a457be434f8a9f91c8ee58899a31] committed with status (VALID) at peer0.org1.autentia-bchain.com:7051
2021-01-07 16:33:58.621 UTC [chaincodeCmd] ClientWait -> INFO 004 txid [5318b4b11ebe0e92f588795a027534df41d8a457be434f8a9f91c8ee58899a31] committed with status (VALID) at peer0.org3.autentia-bchain.com:9051

{code}

 - init chaincode

i am using the same collection_config.json files i uploaded here, also in all the process i described i dont get any errors.
 i know the collections are working because my chaincode uses them, i can verify the collections on their respective couchdb when i add something to them.
 like i said before the endorsing plan isnt generated idk why, but if i set the peers manually to endorse the invoke is successful.

all the 4 peers are active and running, ive been doing some other tests with the peers down and the sdk throws other kinds of errors. but for this i make sure they are all up and running.

should i try the latest fabric version?;;;","12/Jan/21 1:41 AM;harrisob@us.ibm.com;I think the issue has something to do with the peer and it's Discovery Service, which relies on ""Gossip"" another service on the peers that exchanges information about the network with other peers.

[https://hyperledger-fabric.readthedocs.io/en/release-2.2/gossip.html];;;","12/Jan/21 2:53 AM;icarrascol;so are  you saying it could be a bad configured peer? this is my config  [^peer.yaml]
 should be like the same for all of my peers, obviously with some variations on the urls and ports and paths. i know the default values for gossip are these
{code:java}
peer.gossip.orgLeader: true
peer.gossip.useLeaderElection: false
peer.gossip.state.enabled: false
peer.gossip.maxBlockCountToStore: 10
peer.gossip.state.blockBufferSize: 20
{code}
like [https://github.com/hyperledger/fabric/releases/tag/v2.2.0] says.

idk if they should be different or if my config is wrong or if its missing something?;;;","12/Jan/21 5:07 AM;harrisob@us.ibm.com;Have you defined an anchor peer for your network. This is done after channel is created and joined by peers, an update is performed on the channel to add the anchor peer. Now Gossip will be able to work properly and then Discovery Service will be able to build the endorsement plans.;;;","12/Jan/21 5:38 AM;icarrascol;yes i defined the anchor peers, 1 anchor for each org.

this is an example but i use the same code just with different orgnames.

 
{code:java}
Updating anchor peers for Enjoy...
>>>>>>>>>>>>>>>>>><<< setGlobals PORT 7051
+ peer channel update -o orderer1.autentia-bchain.com:7050 -c pagare-channel -f ./channel-artifacts/EnjoyMSPanchors.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/autentia-bchain.com/orderers/orderer1.autentia-bchain.com/msp/tlscacerts/tlsca.autentia-bchain.com-cert.pem
+ res=0
+ set +x
2021-01-11 20:13:57.796 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
2021-01-11 20:13:57.827 UTC [channelCmd] update -> INFO 002 Successfully submitted channel update
===================== Anchor peers updated for orgEnjoy on channel 'pagare-channel' ===================== Updating anchor peers for Clinica...
>>>>>>>>>>>>>>>>>><<< setGlobals PORT 8051
+ peer channel update -o orderer1.autentia-bchain.com:7050 -c pagare-channel -f ./channel-artifacts/ClinicaMSPanchors.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/autentia-bchain.com/orderers/orderer1.autentia-bchain.com/msp/tlscacerts/tlsca.autentia-bchain.com-cert.pem
+ res=0
+ set +x
2021-01-11 20:14:00.967 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
2021-01-11 20:14:00.985 UTC [channelCmd] update -> INFO 002 Successfully submitted channel update
===================== Anchor peers updated for orgClinica on channel 'pagare-channel' ===================== Updating anchor peers for Autentia1...
>>>>>>>>>>>>>>>>>><<< setGlobals PORT 9051
+ peer channel update -o orderer1.autentia-bchain.com:7050 -c pagare-channel -f ./channel-artifacts/Autentia1MSPanchors.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/autentia-bchain.com/orderers/orderer1.autentia-bchain.com/msp/tlscacerts/tlsca.autentia-bchain.com-cert.pem
+ res=0
+ set +x
2021-01-11 20:14:04.164 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
2021-01-11 20:14:04.189 UTC [channelCmd] update -> INFO 002 Successfully submitted channel update
===================== Anchor peers updated for orgAutentia1 on channel 'pagare-channel' ===================== Updating anchor peers for Autentia2...
>>>>>>>>>>>>>>>>>><<< setGlobals PORT 10051
+ peer channel update -o orderer1.autentia-bchain.com:7050 -c pagare-channel -f ./channel-artifacts/Autentia2MSPanchors.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/autentia-bchain.com/orderers/orderer1.autentia-bchain.com/msp/tlscacerts/tlsca.autentia-bchain.com-cert.pem
+ res=0
+ set +x
2021-01-11 20:14:07.356 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
2021-01-11 20:14:07.374 UTC [channelCmd] update -> INFO 002 Successfully submitted channel update

{code};;;","12/Jan/21 6:00 AM;icarrascol;Added a peer container log to show that the anchors are being added and there are no errors shown.

[^peerlogs.txt];;;","20/Aug/21 8:32 PM;bestbeforetoday;Since the collection names in the error message from the description for this issue don't match the logs and configuration provided, it would be good to double-check that the names in the configuration and the chaincode interest supplied to the SDK really do match up exactly.

Assuming they do, as Brett mentioned previously, the SDK does seem to be successfully delivering the collection information to the discovery service OK, and the error is coming back from there. So probably this issue should be moved to the [Fabric (FAB)|https://jira.hyperledger.org/browse/FAB] project.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
